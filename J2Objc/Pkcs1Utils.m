//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/eclipse-workspace/Signers/src/es/gob/afirma/core/signers/Pkcs1Utils.java
//

#include "DerInputStream.h"
#include "DerValue.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Pkcs1Utils.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/security/SignatureException.h"

#if !__has_feature(objc_arc)
#error "Pkcs1Utils must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreSignersPkcs1Utils ()

- (instancetype)init;

+ (IOSByteArray *)trimZeroesWithByteArray:(IOSByteArray *)b;

@end

__attribute__((unused)) static void EsGobAfirmaCoreSignersPkcs1Utils_init(EsGobAfirmaCoreSignersPkcs1Utils *self);

__attribute__((unused)) static EsGobAfirmaCoreSignersPkcs1Utils *new_EsGobAfirmaCoreSignersPkcs1Utils_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreSignersPkcs1Utils *create_EsGobAfirmaCoreSignersPkcs1Utils_init(void);

__attribute__((unused)) static IOSByteArray *EsGobAfirmaCoreSignersPkcs1Utils_trimZeroesWithByteArray_(IOSByteArray *b);

#line 1 "/Users/desarrolloabamobile/eclipse-workspace/Signers/src/es/gob/afirma/core/signers/Pkcs1Utils.java"


#line 22
@implementation EsGobAfirmaCoreSignersPkcs1Utils

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 24
- (instancetype)init {
  EsGobAfirmaCoreSignersPkcs1Utils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 37
+ (IOSByteArray *)decodeSignatureWithByteArray:(IOSByteArray *)signature {
  return EsGobAfirmaCoreSignersPkcs1Utils_decodeSignatureWithByteArray_(signature);
}


#line 71
+ (IOSByteArray *)trimZeroesWithByteArray:(IOSByteArray *)b {
  return EsGobAfirmaCoreSignersPkcs1Utils_trimZeroesWithByteArray_(b);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0xa, 3, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(decodeSignatureWithByteArray:);
  methods[2].selector = @selector(trimZeroesWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "decodeSignature", "[B", "LJavaSecuritySignatureException;", "trimZeroes" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersPkcs1Utils = { "Pkcs1Utils", "es.gob.afirma.core.signers", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersPkcs1Utils;
}

@end


#line 24
void EsGobAfirmaCoreSignersPkcs1Utils_init(EsGobAfirmaCoreSignersPkcs1Utils *self) {
  NSObject_init(self);
}


#line 24
EsGobAfirmaCoreSignersPkcs1Utils *new_EsGobAfirmaCoreSignersPkcs1Utils_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersPkcs1Utils, init)
}


#line 24
EsGobAfirmaCoreSignersPkcs1Utils *create_EsGobAfirmaCoreSignersPkcs1Utils_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersPkcs1Utils, init)
}


#line 37
IOSByteArray *EsGobAfirmaCoreSignersPkcs1Utils_decodeSignatureWithByteArray_(IOSByteArray *signature) {
  EsGobAfirmaCoreSignersPkcs1Utils_initialize();
  @try {
    
#line 41
    EsGobAfirmaCoreSignersDerDerInputStream *in = new_EsGobAfirmaCoreSignersDerDerInputStream_initWithByteArray_withInt_withInt_withBoolean_(signature, 0, ((IOSByteArray *) nil_chk(signature))->size_, false);
    IOSObjectArray *values = [in getSequenceWithInt:2];
    
#line 46
    if (((IOSObjectArray *) nil_chk(values))->size_ != 2 || [in available] != 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"Invalid encoding for signature");
    }
    
#line 50
    JavaMathBigInteger *r = [((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(IOSObjectArray_Get(values, 0))) getPositiveBigInteger];
    JavaMathBigInteger *s = [((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(IOSObjectArray_Get(values, 1))) getPositiveBigInteger];
    
#line 54
    IOSByteArray *rBytes = EsGobAfirmaCoreSignersPkcs1Utils_trimZeroesWithByteArray_([((JavaMathBigInteger *) nil_chk(r)) toByteArray]);
    IOSByteArray *sBytes = EsGobAfirmaCoreSignersPkcs1Utils_trimZeroesWithByteArray_([((JavaMathBigInteger *) nil_chk(s)) toByteArray]);
    jint k = JavaLangMath_maxWithInt_withInt_(((IOSByteArray *) nil_chk(rBytes))->size_, ((IOSByteArray *) nil_chk(sBytes))->size_);
    
#line 58
    IOSByteArray *result = [IOSByteArray newArrayWithLength:JreLShift32(k, 1)];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(rBytes, 0, result, k - rBytes->size_,
#line 60
    rBytes->size_);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(sBytes, 0, result, result->size_ - sBytes->size_,
#line 62
    sBytes->size_);
    return result;
  }
  @catch (JavaLangException *e) {
    @throw new_JavaSecuritySignatureException_initWithNSString_withJavaLangThrowable_(@"Invalid encoding for signature", e);
  }
}


#line 71
IOSByteArray *EsGobAfirmaCoreSignersPkcs1Utils_trimZeroesWithByteArray_(IOSByteArray *b) {
  EsGobAfirmaCoreSignersPkcs1Utils_initialize();
  
#line 72
  jint i = 0;
  while (i < ((IOSByteArray *) nil_chk(b))->size_ - 1 && IOSByteArray_Get(b, i) == 0) {
    i++;
  }
  if (i == 0) {
    return b;
  }
  IOSByteArray *t = [IOSByteArray newArrayWithLength:b->size_ - i];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, i, t, 0, t->size_);
  return t;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersPkcs1Utils)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/RectangleReadOnly.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RectangleReadOnly")
#ifdef RESTRICT_RectangleReadOnly
#define INCLUDE_ALL_RectangleReadOnly 0
#else
#define INCLUDE_ALL_RectangleReadOnly 1
#endif
#undef RESTRICT_RectangleReadOnly

#if !defined (ComAowagieTextRectangleReadOnly_) && (INCLUDE_ALL_RectangleReadOnly || defined(INCLUDE_ComAowagieTextRectangleReadOnly))
#define ComAowagieTextRectangleReadOnly_

#define RESTRICT_Rectangle 1
#define INCLUDE_ComAowagieTextRectangle 1
#include "Rectangle.h"

@class HarmonyJavaAwtColor;

/*!
 @brief A <CODE>RectangleReadOnly</CODE> is the representation of a geometric figure.
 It's the same as a <CODE>Rectangle</CODE> but immutable.
  Rectangles support constant width borders using 
 <code>setBorderWidth(float)</code>and <code>setBorder(int)</code>.
  They also support borders that vary in width/color on each side using
  methods like <code>setBorderWidthLeft(float)</code>or
  <code>setBorderColorLeft(Color)</code>.
 - seealso: Element
 - seealso: Table
 - seealso: Cell
 - seealso: HeaderFooter
 @since 2.1.2
 */
@interface ComAowagieTextRectangleReadOnly : ComAowagieTextRectangle

#pragma mark Public

/*!
 @brief Constructs a <CODE>RectangleReadOnly</CODE> -object starting from the origin
  (0, 0).
 @param urx upper right x
 @param ury upper right y
 */
- (instancetype)initPackagePrivateWithFloat:(jfloat)urx
                                  withFloat:(jfloat)ury;

/*!
 @brief Copies each of the parameters, except the position, from a 
 <CODE>Rectangle</CODE> object
 @param rect <CODE> Rectangle </CODE>  to copy from
 */
- (void)cloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect;

/*!
 @brief Disables the border on the specified side.
 @param side the side to disable.  One of 
  <CODE> LEFT, RIGHT, TOP, BOTTOM </CODE>
 */
- (void)disableBorderSideWithInt:(jint)side;

/*!
 @brief Enables the border on the specified side.
 @param side the side to enable.  One of 
  <CODE> LEFT, RIGHT, TOP, BOTTOM </CODE>
 */
- (void)enableBorderSideWithInt:(jint)side;

/*!
 @brief Normalizes the rectangle.
 Switches lower left with upper right if necessary.
 */
- (void)normalize;

/*!
 @brief Sets the backgroundcolor of the rectangle.
 @param value the new value
 */
- (void)setBackgroundColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)value;

/*!
 @brief Enables/Disables the border on the specified sides.
 The border is specified as an integer bitwise combination of
  the constants: <CODE>LEFT, RIGHT, TOP, BOTTOM</CODE>.
 - seealso: #enableBorderSide(int)
 - seealso: #disableBorderSide(int)
 @param border the new value
 */
- (void)setBorderWithInt:(jint)border;

/*!
 @brief Sets the color of the border.
 @param borderColor a  <CODE> Color </CODE>
 */
- (void)setBorderColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColor;

/*!
 @brief Sets the color of the bottom border.
 @param borderColorBottom a  <CODE> Color </CODE>
 */
- (void)setBorderColorBottomWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorBottom;

/*!
 @brief Sets the color of the left border.
 @param borderColorLeft a  <CODE> Color </CODE>
 */
- (void)setBorderColorLeftWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorLeft;

/*!
 @brief Sets the color of the right border
 @param borderColorRight a  <CODE> Color </CODE>
 */
- (void)setBorderColorRightWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorRight;

/*!
 @brief Sets the color of the top border.
 @param borderColorTop a  <CODE> Color </CODE>
 */
- (void)setBorderColorTopWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorTop;

/*!
 @brief Sets the borderwidth of the table.
 @param borderWidth the new value
 */
- (void)setBorderWidthWithFloat:(jfloat)borderWidth;

/*!
 @brief Sets the width of the bottom border
 @param borderWidthBottom a width
 */
- (void)setBorderWidthBottomWithFloat:(jfloat)borderWidthBottom;

/*!
 @brief Sets the width of the left border
 @param borderWidthLeft a width
 */
- (void)setBorderWidthLeftWithFloat:(jfloat)borderWidthLeft;

/*!
 @brief Sets the width of the right border
 @param borderWidthRight a width
 */
- (void)setBorderWidthRightWithFloat:(jfloat)borderWidthRight;

/*!
 @brief Sets the width of the top border
 @param borderWidthTop a width
 */
- (void)setBorderWidthTopWithFloat:(jfloat)borderWidthTop;

/*!
 @brief Sets the lower left y-coordinate.
 @param lly the new value
 */
- (void)setBottomWithFloat:(jfloat)lly;

/*!
 @brief Sets the grayscale of the rectangle.
 @param value the new value
 */
- (void)setGrayFillWithFloat:(jfloat)value;

/*!
 @brief Sets the lower left x-coordinate.
 @param llx the new value
 */
- (void)setLeftWithFloat:(jfloat)llx;

/*!
 @brief Sets the upper right x-coordinate.
 @param urx the new value
 */
- (void)setRightWithFloat:(jfloat)urx;

/*!
 @brief Sets the upper right y-coordinate.
 @param ury the new value
 */
- (void)setTopWithFloat:(jfloat)ury;

/*!
 @brief Sets a parameter indicating if the rectangle has variable borders
 @param useVariableBorders indication if the rectangle has variable borders
 */
- (void)setUseVariableBordersWithBoolean:(jboolean)useVariableBorders;

/*!
 @brief Copies each of the parameters, except the position, from a 
 <CODE>Rectangle</CODE> object if the value is set there.
 @param rect <CODE> Rectangle </CODE>  to copy from
 */
- (void)softCloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect;

/*!
 @return String version of the most important rectangle properties
 - seealso: java.lang.Object#toString()
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComAowagieTextRectangle:(ComAowagieTextRectangle *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithFloat:(jfloat)arg0
                    withFloat:(jfloat)arg1 NS_UNAVAILABLE;

- (instancetype)initWithFloat:(jfloat)arg0
                    withFloat:(jfloat)arg1
                    withFloat:(jfloat)arg2
                    withFloat:(jfloat)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextRectangleReadOnly)

FOUNDATION_EXPORT void ComAowagieTextRectangleReadOnly_initPackagePrivateWithFloat_withFloat_(ComAowagieTextRectangleReadOnly *self, jfloat urx, jfloat ury);

FOUNDATION_EXPORT ComAowagieTextRectangleReadOnly *new_ComAowagieTextRectangleReadOnly_initPackagePrivateWithFloat_withFloat_(jfloat urx, jfloat ury) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextRectangleReadOnly *create_ComAowagieTextRectangleReadOnly_initPackagePrivateWithFloat_withFloat_(jfloat urx, jfloat ury);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextRectangleReadOnly)

#endif

#pragma pop_macro("INCLUDE_ALL_RectangleReadOnly")

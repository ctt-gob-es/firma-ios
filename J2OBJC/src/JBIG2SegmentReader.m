//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/JBIG2SegmentReader.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JBIG2SegmentReader.h"
#include "RandomAccessFileOrArray.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Comparable.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"

@class ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment;

#if !__has_feature(objc_arc)
#error "JBIG2SegmentReader must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCodecJBIG2SegmentReader () {
 @public
  id<JavaUtilSortedMap> segments_;
  id<JavaUtilSortedMap> pages_;
  id<JavaUtilSortedSet> globals_;
  ComAowagieTextPdfRandomAccessFileOrArray *ra_;
  jboolean sequential_;
  jboolean number_of_pages_known_;
  jboolean read_;
}

+ (IOSByteArray *)copyByteArrayWithByteArray:(IOSByteArray *)b OBJC_METHOD_FAMILY_NONE;

- (void)readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)s;

- (ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)readHeader;

- (void)readFileHeader;

- (jint)numberOfPages;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecJBIG2SegmentReader, segments_, id<JavaUtilSortedMap>)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecJBIG2SegmentReader, pages_, id<JavaUtilSortedMap>)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecJBIG2SegmentReader, globals_, id<JavaUtilSortedSet>)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecJBIG2SegmentReader, ra_, ComAowagieTextPdfRandomAccessFileOrArray *)

inline jint ComAowagieTextPdfCodecJBIG2SegmentReader_get_PAGE_INFORMATION(void);
#define ComAowagieTextPdfCodecJBIG2SegmentReader_PAGE_INFORMATION 48
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecJBIG2SegmentReader, PAGE_INFORMATION, jint)

inline jint ComAowagieTextPdfCodecJBIG2SegmentReader_get_END_OF_PAGE(void);
#define ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_PAGE 49
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecJBIG2SegmentReader, END_OF_PAGE, jint)

inline jint ComAowagieTextPdfCodecJBIG2SegmentReader_get_END_OF_FILE(void);
#define ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_FILE 51
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecJBIG2SegmentReader, END_OF_FILE, jint)

__attribute__((unused)) static IOSByteArray *ComAowagieTextPdfCodecJBIG2SegmentReader_copyByteArrayWithByteArray_(IOSByteArray *b);

__attribute__((unused)) static void ComAowagieTextPdfCodecJBIG2SegmentReader_readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(ComAowagieTextPdfCodecJBIG2SegmentReader *self, ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s);

__attribute__((unused)) static ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *ComAowagieTextPdfCodecJBIG2SegmentReader_readHeader(ComAowagieTextPdfCodecJBIG2SegmentReader *self);

__attribute__((unused)) static void ComAowagieTextPdfCodecJBIG2SegmentReader_readFileHeader(ComAowagieTextPdfCodecJBIG2SegmentReader *self);

__attribute__((unused)) static jint ComAowagieTextPdfCodecJBIG2SegmentReader_numberOfPages(ComAowagieTextPdfCodecJBIG2SegmentReader *self);

/*!
 @brief Inner class that holds information about a JBIG2 segment.
 @since 2.1.5
 */
@interface ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment : NSObject < JavaLangComparable > {
 @public
  jint segmentNumber_;
  jlong dataLength_;
  jint page_;
  jint type_;
  IOSByteArray *data_;
  IOSByteArray *headerData_;
  jboolean page_association_size_;
  jint page_association_offset_;
}

- (instancetype)initWithInt:(jint)segment_number;

- (jint)compareToWithId:(id)o;

- (jint)compareToWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)s;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment, data_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment, headerData_, IOSByteArray *)

__attribute__((unused)) static void ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *self, jint segment_number);

__attribute__((unused)) static ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *new_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(jint segment_number) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *create_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(jint segment_number);

__attribute__((unused)) static jint ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_compareToWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *self, ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment)

@interface ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page () {
 @public
  id<JavaUtilSortedMap> segs_;
}

- (instancetype)initWithInt:(jint)page
withComAowagieTextPdfCodecJBIG2SegmentReader:(ComAowagieTextPdfCodecJBIG2SegmentReader *)sr;

- (void)addSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)s;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page, segs_, id<JavaUtilSortedMap>)

__attribute__((unused)) static void ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *self, jint page, ComAowagieTextPdfCodecJBIG2SegmentReader *sr);

__attribute__((unused)) static ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *new_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(jint page, ComAowagieTextPdfCodecJBIG2SegmentReader *sr) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *create_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(jint page, ComAowagieTextPdfCodecJBIG2SegmentReader *sr);

__attribute__((unused)) static void ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_addSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *self, ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/JBIG2SegmentReader.java"


#line 75
@implementation ComAowagieTextPdfCodecJBIG2SegmentReader


#line 196
- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)ra {
  ComAowagieTextPdfCodecJBIG2SegmentReader_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(self, ra);
  return self;
}


#line 200
+ (IOSByteArray *)copyByteArrayWithByteArray:(IOSByteArray *)b {
  return ComAowagieTextPdfCodecJBIG2SegmentReader_copyByteArrayWithByteArray_(b);
}


#line 206
- (void)read {
  if (self->read_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"already attempted a read() on this Jbig2 File");
  }
  self->read_ = true;
  
#line 212
  ComAowagieTextPdfCodecJBIG2SegmentReader_readFileHeader(self);
  
#line 214
  if (self->sequential_) {
    
#line 216
    do {
      ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *tmp = ComAowagieTextPdfCodecJBIG2SegmentReader_readHeader(self);
      ComAowagieTextPdfCodecJBIG2SegmentReader_readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(self, tmp);
      (void) [((id<JavaUtilSortedMap>) nil_chk(self->segments_)) putWithId:new_JavaLangInteger_initWithInt_(((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(tmp))->segmentNumber_) withId:tmp];
    }
    while (
#line 220
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->ra_)) getFilePointer] < [self->ra_ length]);
  }
  else {
    ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *tmp;
    do {
      tmp = ComAowagieTextPdfCodecJBIG2SegmentReader_readHeader(self);
      (void) [((id<JavaUtilSortedMap>) nil_chk(self->segments_)) putWithId:new_JavaLangInteger_initWithInt_(((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(tmp))->segmentNumber_) withId:tmp];
    }
    while (
#line 227
    tmp->type_ != ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_FILE);
    id<JavaUtilIterator> segs = [((id<JavaUtilSet>) nil_chk([self->segments_ keySet])) iterator];
    while ([((id<JavaUtilIterator>) nil_chk(segs)) hasNext]) {
      ComAowagieTextPdfCodecJBIG2SegmentReader_readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(self, [self->segments_ getWithId:[segs next]]);
    }
  }
}


#line 235
- (void)readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)s {
  ComAowagieTextPdfCodecJBIG2SegmentReader_readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(self, s);
}


#line 263
- (ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)readHeader {
  return ComAowagieTextPdfCodecJBIG2SegmentReader_readHeader(self);
}


#line 359
- (void)readFileHeader {
  ComAowagieTextPdfCodecJBIG2SegmentReader_readFileHeader(self);
}


#line 386
- (jint)numberOfPages {
  return ComAowagieTextPdfCodecJBIG2SegmentReader_numberOfPages(self);
}


#line 394
- (ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *)getPageWithInt:(jint)page {
  return [((id<JavaUtilSortedMap>) nil_chk(self->pages_)) getWithId:new_JavaLangInteger_initWithInt_(page)];
}

- (IOSByteArray *)getGlobalWithBoolean:(jboolean)for_embedding {
  JavaIoByteArrayOutputStream *os = new_JavaIoByteArrayOutputStream_init();
  @try {
    for (ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment * __strong s in nil_chk(self->globals_)) {
      if (for_embedding &&
#line 403
      (((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->type_ == ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_FILE || s->type_ == ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_PAGE)) {
        continue;
      }
      [os writeWithByteArray:((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->headerData_];
      [os writeWithByteArray:s->data_];
    }
    [os close];
  }
  @catch (
#line 410
  JavaIoIOException *e) {
    [e printStackTrace];
  }
  if ([os size] <= 0) {
    return nil;
  }
  return [os toByteArray];
}


#line 419
- (NSString *)description {
  
#line 421
  if (self->read_) {
    return JreStrcat("$I", @"Jbig2SegmentReader: number of pages: ", ComAowagieTextPdfCodecJBIG2SegmentReader_numberOfPages(self));
  }
  else {
    
#line 424
    return @"Jbig2SegmentReader in indeterminate state.";
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, 3, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment;", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page;", 0x0, 6, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[1].selector = @selector(copyByteArrayWithByteArray:);
  methods[2].selector = @selector(read);
  methods[3].selector = @selector(readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:);
  methods[4].selector = @selector(readHeader);
  methods[5].selector = @selector(readFileHeader);
  methods[6].selector = @selector(numberOfPages);
  methods[7].selector = @selector(getPageWithInt:);
  methods[8].selector = @selector(getGlobalWithBoolean:);
  methods[9].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PAGE_INFORMATION", "I", .constantValue.asInt = ComAowagieTextPdfCodecJBIG2SegmentReader_PAGE_INFORMATION, 0x1a, -1, -1, -1, -1 },
    { "END_OF_PAGE", "I", .constantValue.asInt = ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_PAGE, 0x1a, -1, -1, -1, -1 },
    { "END_OF_FILE", "I", .constantValue.asInt = ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_FILE, 0x1a, -1, -1, -1, -1 },
    { "segments_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "pages_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x12, -1, -1, 12, -1 },
    { "globals_", "LJavaUtilSortedSet;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "ra_", "LComAowagieTextPdfRandomAccessFileOrArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sequential_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "number_of_pages_known_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "read_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfRandomAccessFileOrArray;", "copyByteArray", "[B", "LJavaIoIOException;", "readSegment", "LComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment;", "getPage", "I", "getGlobal", "Z", "toString", "Ljava/util/SortedMap<Ljava/lang/Integer;Lcom/aowagie/text/pdf/codec/JBIG2SegmentReader$JBIG2Segment;>;", "Ljava/util/SortedMap<Ljava/lang/Integer;Lcom/aowagie/text/pdf/codec/JBIG2SegmentReader$JBIG2Page;>;", "Ljava/util/SortedSet<Lcom/aowagie/text/pdf/codec/JBIG2SegmentReader$JBIG2Segment;>;", "LComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment;LComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecJBIG2SegmentReader = { "JBIG2SegmentReader", "com.aowagie.text.pdf.codec", ptrTable, methods, fields, 7, 0x0, 10, 10, -1, 14, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecJBIG2SegmentReader;
}

@end


#line 196
void ComAowagieTextPdfCodecJBIG2SegmentReader_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecJBIG2SegmentReader *self, ComAowagieTextPdfRandomAccessFileOrArray *ra) {
  NSObject_init(self);
  self->segments_ = new_JavaUtilTreeMap_init();
  self->pages_ = new_JavaUtilTreeMap_init();
  self->globals_ = new_JavaUtilTreeSet_init();
  self->read_ =
#line 107
  false;
  
#line 197
  self->ra_ = ra;
}


#line 196
ComAowagieTextPdfCodecJBIG2SegmentReader *new_ComAowagieTextPdfCodecJBIG2SegmentReader_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfRandomAccessFileOrArray *ra) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecJBIG2SegmentReader, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_, ra)
}


#line 196
ComAowagieTextPdfCodecJBIG2SegmentReader *create_ComAowagieTextPdfCodecJBIG2SegmentReader_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfRandomAccessFileOrArray *ra) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecJBIG2SegmentReader, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_, ra)
}

IOSByteArray *ComAowagieTextPdfCodecJBIG2SegmentReader_copyByteArrayWithByteArray_(IOSByteArray *b) {
  ComAowagieTextPdfCodecJBIG2SegmentReader_initialize();
  
#line 201
  IOSByteArray *bc = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(b))->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, bc, 0, b->size_);
  return bc;
}


#line 235
void ComAowagieTextPdfCodecJBIG2SegmentReader_readSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(ComAowagieTextPdfCodecJBIG2SegmentReader *self, ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s) {
  jint ptr = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->ra_)) getFilePointer];
  
#line 238
  if (((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->dataLength_ == (jlong) 0xffffffffl) {
    
#line 240
    return;
  }
  
#line 243
  IOSByteArray *data = [IOSByteArray newArrayWithLength:(jint) s->dataLength_];
  [self->ra_ readWithByteArray:data];
  s->data_ = data;
  
#line 247
  if (s->type_ == ComAowagieTextPdfCodecJBIG2SegmentReader_PAGE_INFORMATION) {
    jint last = [self->ra_ getFilePointer];
    [self->ra_ seekWithInt:ptr];
    jint page_bitmap_width = [self->ra_ readInt];
    jint page_bitmap_height = [self->ra_ readInt];
    [self->ra_ seekWithInt:last];
    ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *p = [((id<JavaUtilSortedMap>) nil_chk(self->pages_)) getWithId:new_JavaLangInteger_initWithInt_(s->page_)];
    if (p == nil) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"referring to widht/height of page we havent seen yet? ", s->page_));
    }
    
#line 258
    p->pageBitmapWidth_ = page_bitmap_width;
    p->pageBitmapHeight_ = page_bitmap_height;
  }
}


#line 263
ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *ComAowagieTextPdfCodecJBIG2SegmentReader_readHeader(ComAowagieTextPdfCodecJBIG2SegmentReader *self) {
  jint ptr = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->ra_)) getFilePointer];
  
#line 266
  jint segment_number = [self->ra_ readInt];
  ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s = new_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(segment_number);
  
#line 270
  jint segment_header_flags = [self->ra_ read];
  jboolean deferred_non_retain = (segment_header_flags & (jint) 0x80) == (jint) 0x80;
  jboolean page_association_size = (segment_header_flags & (jint) 0x40) == (jint) 0x40;
  jint segment_type = segment_header_flags & (jint) 0x3f;
  s->type_ = segment_type;
  
#line 277
  jint referred_to_byte0 = [self->ra_ read];
  jint count_of_referred_to_segments = JreRShift32((referred_to_byte0 & (jint) 0xE0), 5);
  IOSIntArray *referred_to_segment_numbers = nil;
  IOSBooleanArray *segment_retention_flags = nil;
  
#line 282
  if (count_of_referred_to_segments == 7) {
    
#line 284
    [self->ra_ seekWithInt:[self->ra_ getFilePointer] - 1];
    count_of_referred_to_segments = [self->ra_ readInt] & (jint) 0x1fffffff;
    segment_retention_flags = [IOSBooleanArray newArrayWithLength:count_of_referred_to_segments + 1];
    jint i = 0;
    jint referred_to_current_byte = 0;
    do {
      jint j = JreIntMod(i, 8);
      if (j == 0) {
        referred_to_current_byte = [self->ra_ read];
      }
      *IOSBooleanArray_GetRef(segment_retention_flags, i) = (JreRShift32(((JreLShift32((jint) 0x1, j)) & referred_to_current_byte), j) == (jint) 0x1);
      i++;
    }
    while (
#line 296
    i <= count_of_referred_to_segments);
  }
  else if (count_of_referred_to_segments <= 4) {
    
#line 300
    segment_retention_flags = [IOSBooleanArray newArrayWithLength:count_of_referred_to_segments + 1];
    referred_to_byte0 &= (jint) 0x1f;
    for (jint i = 0; i <= count_of_referred_to_segments; i++) {
      *IOSBooleanArray_GetRef(segment_retention_flags, i) = (JreRShift32(((JreLShift32((jint) 0x1, i)) & referred_to_byte0), i) == (jint) 0x1);
    }
  }
  else if (count_of_referred_to_segments == 5 || count_of_referred_to_segments == 6) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I", @"count of referred-to segments had bad value in header for segment ", segment_number, @" starting at ", ptr));
  }
  
#line 310
  referred_to_segment_numbers = [IOSIntArray newArrayWithLength:count_of_referred_to_segments + 1];
  for (jint i = 1; i <= count_of_referred_to_segments; i++) {
    if (segment_number <= 256) {
      *IOSIntArray_GetRef(referred_to_segment_numbers, i) = [self->ra_ read];
    }
    else
#line 314
    if (segment_number <= 65536) {
      *IOSIntArray_GetRef(referred_to_segment_numbers, i) = [self->ra_ readUnsignedShort];
    }
    else {
      
#line 317
      *IOSIntArray_GetRef(referred_to_segment_numbers, i) = (jint) [self->ra_ readUnsignedInt];
    }
  }
  
#line 321
  jint segment_page_association;
  jint page_association_offset = [self->ra_ getFilePointer] - ptr;
  if (page_association_size) {
    segment_page_association = [self->ra_ readInt];
  }
  else {
    
#line 326
    segment_page_association = [self->ra_ read];
  }
  if (segment_page_association < 0) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I$I", @"page ", segment_page_association, @" invalid for segment ", segment_number, @" starting at ", ptr));
  }
  s->page_ = segment_page_association;
  
#line 333
  s->page_association_size_ = page_association_size;
  s->page_association_offset_ = page_association_offset;
  
#line 336
  if (segment_page_association > 0 && ![((id<JavaUtilSortedMap>) nil_chk(self->pages_)) containsKeyWithId:new_JavaLangInteger_initWithInt_(segment_page_association)]) {
    (void) [((id<JavaUtilSortedMap>) nil_chk(self->pages_)) putWithId:new_JavaLangInteger_initWithInt_(segment_page_association) withId:new_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(segment_page_association, self)];
  }
  if (segment_page_association > 0) {
    ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_addSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(nil_chk([((id<JavaUtilSortedMap>) nil_chk(self->pages_)) getWithId:new_JavaLangInteger_initWithInt_(segment_page_association)]), s);
  }
  else {
    
#line 342
    [((id<JavaUtilSortedSet>) nil_chk(self->globals_)) addWithId:s];
  }
  
#line 346
  jlong segment_data_length = [self->ra_ readUnsignedInt];
  
#line 348
  s->dataLength_ = segment_data_length;
  
#line 350
  jint end_ptr = [self->ra_ getFilePointer];
  [self->ra_ seekWithInt:ptr];
  IOSByteArray *header_data = [IOSByteArray newArrayWithLength:end_ptr - ptr];
  [self->ra_ readWithByteArray:header_data];
  s->headerData_ = header_data;
  
#line 356
  return s;
}


#line 359
void ComAowagieTextPdfCodecJBIG2SegmentReader_readFileHeader(ComAowagieTextPdfCodecJBIG2SegmentReader *self) {
  [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->ra_)) seekWithInt:0];
  IOSByteArray *idstring = [IOSByteArray newArrayWithLength:8];
  [self->ra_ readWithByteArray:idstring];
  
#line 364
  IOSByteArray *refidstring = [IOSByteArray newArrayWithBytes:(jbyte[]){ (jbyte) (jint) 0x97, (jint) 0x4A, (jint) 0x42, (jint) 0x32, (jint) 0x0D, (jint) 0x0A, (jint) 0x1A, (jint) 0x0A } count:8];
  
#line 366
  for (jint i = 0; i < idstring->size_; i++) {
    if (IOSByteArray_Get(idstring, i) != IOSByteArray_Get(refidstring, i)) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"file header idstring not good at byte ", i));
    }
  }
  
#line 372
  jint fileheaderflags = [self->ra_ read];
  
#line 374
  self->sequential_ = ((fileheaderflags & (jint) 0x1) == (jint) 0x1);
  self->number_of_pages_known_ = ((fileheaderflags & (jint) 0x2) == (jint) 0x0);
  
#line 377
  if ((fileheaderflags & (jint) 0xfc) != (jint) 0x0) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"file header flags bits 2-7 not 0");
  }
  
#line 381
  if (self->number_of_pages_known_) {
    [self->ra_ readInt];
  }
}


#line 386
jint ComAowagieTextPdfCodecJBIG2SegmentReader_numberOfPages(ComAowagieTextPdfCodecJBIG2SegmentReader *self) {
  return [((id<JavaUtilSortedMap>) nil_chk(self->pages_)) size];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecJBIG2SegmentReader)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/JBIG2SegmentReader.java"


#line 113
@implementation ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment


#line 124
- (instancetype)initWithInt:(jint)segment_number {
  ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(self, segment_number);
  return self;
}

- (jint)compareToWithId:(id)o {
  
#line 131
  return ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_compareToWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(self, (ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) cast_chk(o, [ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment class]));
}


#line 133
- (jint)compareToWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)s {
  return ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_compareToWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(self, s);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(compareToWithId:);
  methods[2].selector = @selector(compareToWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "segmentNumber_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dataLength_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "page_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "type_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "data_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "headerData_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "page_association_size_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "page_association_offset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "compareTo", "LNSObject;", "LComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment;", "LComAowagieTextPdfCodecJBIG2SegmentReader;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment = { "JBIG2Segment", "com.aowagie.text.pdf.codec", ptrTable, methods, fields, 7, 0xa, 3, 8, 4, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment;
}

@end


#line 124
void ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *self, jint segment_number) {
  NSObject_init(self);
  self->dataLength_ =
#line 116
  -1;
  self->page_ = -1;
  self->type_ = -1;
  self->data_ = nil;
  self->headerData_ = nil;
  self->page_association_size_ = false;
  self->page_association_offset_ = -1;
  
#line 125
  self->segmentNumber_ = segment_number;
}


#line 124
ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *new_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(jint segment_number) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment, initWithInt_, segment_number)
}


#line 124
ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *create_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_initWithInt_(jint segment_number) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment, initWithInt_, segment_number)
}


#line 133
jint ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_compareToWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *self, ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s) {
  return self->segmentNumber_ - ((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->segmentNumber_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/JBIG2SegmentReader.java"


#line 143
@implementation ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page


#line 148
- (instancetype)initWithInt:(jint)page
withComAowagieTextPdfCodecJBIG2SegmentReader:(ComAowagieTextPdfCodecJBIG2SegmentReader *)sr {
  ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(self, page, sr);
  return self;
}


#line 158
- (IOSByteArray *)getDataWithBoolean:(jboolean)for_embedding {
  JavaIoByteArrayOutputStream *os = new_JavaIoByteArrayOutputStream_init();
  for (JavaLangInteger * __strong sn in nil_chk([((id<JavaUtilSortedMap>) nil_chk(self->segs_)) keySet])) {
    ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s = [self->segs_ getWithId:sn];
    
#line 165
    if (for_embedding &&
#line 166
    (((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->type_ == ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_FILE || s->type_ == ComAowagieTextPdfCodecJBIG2SegmentReader_END_OF_PAGE)) {
      continue;
    }
    
#line 170
    if (for_embedding) {
      
#line 172
      IOSByteArray *headerData_emb = ComAowagieTextPdfCodecJBIG2SegmentReader_copyByteArrayWithByteArray_(((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->headerData_);
      if (s->page_association_size_) {
        *IOSByteArray_GetRef(nil_chk(headerData_emb), s->page_association_offset_) = (jint) 0x0;
        *IOSByteArray_GetRef(headerData_emb, s->page_association_offset_ + 1) = (jint) 0x0;
        *IOSByteArray_GetRef(headerData_emb, s->page_association_offset_ + 2) = (jint) 0x0;
        *IOSByteArray_GetRef(headerData_emb, s->page_association_offset_ + 3) = (jint) 0x1;
      }
      else {
        
#line 179
        *IOSByteArray_GetRef(nil_chk(headerData_emb), s->page_association_offset_) = (jint) 0x1;
      }
      [os writeWithByteArray:headerData_emb];
    }
    else {
      
#line 183
      [os writeWithByteArray:((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->headerData_];
    }
    [os writeWithByteArray:s->data_];
  }
  [os close];
  return [os toByteArray];
}


#line 190
- (void)addSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *)s {
  ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_addSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(self, s);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withComAowagieTextPdfCodecJBIG2SegmentReader:);
  methods[1].selector = @selector(getDataWithBoolean:);
  methods[2].selector = @selector(addSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "segs_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "pageBitmapWidth_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "pageBitmapHeight_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILComAowagieTextPdfCodecJBIG2SegmentReader;", "getData", "Z", "LJavaIoIOException;", "addSegment", "LComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment;", "Ljava/util/SortedMap<Ljava/lang/Integer;Lcom/aowagie/text/pdf/codec/JBIG2SegmentReader$JBIG2Segment;>;", "LComAowagieTextPdfCodecJBIG2SegmentReader;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page = { "JBIG2Page", "com.aowagie.text.pdf.codec", ptrTable, methods, fields, 7, 0x9, 3, 3, 7, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page;
}

@end


#line 148
void ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *self, jint page, ComAowagieTextPdfCodecJBIG2SegmentReader *sr) {
  NSObject_init(self);
  self->segs_ = new_JavaUtilTreeMap_init();
  self->pageBitmapWidth_ =
#line 146
  -1;
  self->pageBitmapHeight_ = -1;
}


#line 148
ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *new_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(jint page, ComAowagieTextPdfCodecJBIG2SegmentReader *sr) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page, initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_, page, sr)
}


#line 148
ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *create_ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_(jint page, ComAowagieTextPdfCodecJBIG2SegmentReader *sr) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page, initWithInt_withComAowagieTextPdfCodecJBIG2SegmentReader_, page, sr)
}


#line 190
void ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page_addSegmentWithComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment_(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *self, ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *s) {
  (void) [((id<JavaUtilSortedMap>) nil_chk(self->segs_)) putWithId:new_JavaLangInteger_initWithInt_(((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Segment *) nil_chk(s))->segmentNumber_) withId:s];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/misc/NetscapeCertType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NetscapeCertType")
#ifdef RESTRICT_NetscapeCertType
#define INCLUDE_ALL_NetscapeCertType 0
#else
#define INCLUDE_ALL_NetscapeCertType 1
#endif
#undef RESTRICT_NetscapeCertType

#if !defined (OrgSpongycastleAsn1MiscNetscapeCertType_) && (INCLUDE_ALL_NetscapeCertType || defined(INCLUDE_OrgSpongycastleAsn1MiscNetscapeCertType))
#define OrgSpongycastleAsn1MiscNetscapeCertType_

#define RESTRICT_DERBitString 1
#define INCLUDE_OrgSpongycastleAsn1DERBitString 1
#include "DERBitString.h"

@class IOSByteArray;
@protocol OrgSpongycastleAsn1ASN1Encodable;

/*!
 @brief The NetscapeCertType object.
 @code

     NetscapeCertType ::= BIT STRING {
          SSLClient               (0),
          SSLServer               (1),
          S/MIME                  (2),
          Object Signing          (3),
          Reserved                (4),
          SSL CA                  (5),
          S/MIME CA               (6),
          Object Signing CA       (7) } 
  
@endcode
 */
@interface OrgSpongycastleAsn1MiscNetscapeCertType : OrgSpongycastleAsn1DERBitString

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1DERBitString:(OrgSpongycastleAsn1DERBitString *)usage;

/*!
 @brief Basic constructor.
 @param usage - the bitwise OR of the Key Usage flags giving the  allowed uses for the key.
   e.g. (X509NetscapeCertType.sslCA | X509NetscapeCertType.smimeCA)
 */
- (instancetype)initWithInt:(jint)usage;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithByte:(jbyte)arg0
                     withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithByteArray:(IOSByteArray *)arg0
                          withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype)initWithOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1MiscNetscapeCertType)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_sslClient(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_sslClient 128
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, sslClient, jint)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_sslServer(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_sslServer 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, sslServer, jint)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_smime(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_smime 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, smime, jint)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_objectSigning(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_objectSigning 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, objectSigning, jint)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_reserved(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_reserved 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, reserved, jint)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_sslCA(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_sslCA 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, sslCA, jint)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_smimeCA(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_smimeCA 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, smimeCA, jint)

inline jint OrgSpongycastleAsn1MiscNetscapeCertType_get_objectSigningCA(void);
#define OrgSpongycastleAsn1MiscNetscapeCertType_objectSigningCA 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1MiscNetscapeCertType, objectSigningCA, jint)

FOUNDATION_EXPORT void OrgSpongycastleAsn1MiscNetscapeCertType_initWithInt_(OrgSpongycastleAsn1MiscNetscapeCertType *self, jint usage);

FOUNDATION_EXPORT OrgSpongycastleAsn1MiscNetscapeCertType *new_OrgSpongycastleAsn1MiscNetscapeCertType_initWithInt_(jint usage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1MiscNetscapeCertType *create_OrgSpongycastleAsn1MiscNetscapeCertType_initWithInt_(jint usage);

FOUNDATION_EXPORT void OrgSpongycastleAsn1MiscNetscapeCertType_initWithOrgSpongycastleAsn1DERBitString_(OrgSpongycastleAsn1MiscNetscapeCertType *self, OrgSpongycastleAsn1DERBitString *usage);

FOUNDATION_EXPORT OrgSpongycastleAsn1MiscNetscapeCertType *new_OrgSpongycastleAsn1MiscNetscapeCertType_initWithOrgSpongycastleAsn1DERBitString_(OrgSpongycastleAsn1DERBitString *usage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1MiscNetscapeCertType *create_OrgSpongycastleAsn1MiscNetscapeCertType_initWithOrgSpongycastleAsn1DERBitString_(OrgSpongycastleAsn1DERBitString *usage);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1MiscNetscapeCertType)

#endif

#pragma pop_macro("INCLUDE_ALL_NetscapeCertType")

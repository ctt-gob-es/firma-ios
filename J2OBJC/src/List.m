//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/List.java
//

#include "Chunk.h"
#include "Element.h"
#include "Font.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "List.h"
#include "ListItem.h"
#include "RomanAlphabetFactory.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"

#if !__has_feature(objc_arc)
#error "List must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComAowagieTextList () {
 @public
  /*!
   @brief This is the <CODE>ArrayList</CODE> containing the different <CODE>ListItem</CODE>s.
   */
  JavaUtilArrayList *list_;
  /*!
   @brief Indicates if the list has to be numbered.
   */
  jboolean numbered_;
  /*!
   @brief Indicates if the listsymbols are numerical or alphabetical.
   */
  jboolean lettered_;
  /*!
   @brief Indicates if the listsymbols are lowercase or uppercase.
   */
  jboolean lowercase_;
  /*!
   @brief Indicates if the indentation has to be set automatically.
   */
  jboolean autoindent_;
  /*!
   @brief Indicates if the indentation of all the items has to be aligned.
   */
  jboolean alignindent_;
  /*!
   @brief This variable indicates the first number of a numbered list.
   */
  jint first_;
  /*!
   @brief This is the listsymbol of a list that is not numbered.
   */
  ComAowagieTextChunk *symbol_;
  /*!
   @brief In case you are using numbered/lettered lists, this String is added before the number/letter.
   @since iText 2.1.1
   */
  NSString *preSymbol_;
  /*!
   @brief In case you are using numbered/lettered lists, this String is added after the number/letter.
   @since iText 2.1.1
   */
  NSString *postSymbol_;
  /*!
   @brief The indentation of this list on the left side.
   */
  jfloat indentationLeft_;
  /*!
   @brief The indentation of this list on the right side.
   */
  jfloat indentationRight_;
  /*!
   @brief The indentation of the listitems.
   */
  jfloat symbolIndent_;
}

/*!
 @brief Constructs a <CODE>List</CODE>.
 @param numbered a boolean
 @param lettered has the list to be 'numbered' with letters
 */
- (instancetype)initWithBoolean:(jboolean)numbered
                    withBoolean:(jboolean)lettered;

/*!
 @brief Creates a list
 @param numbered has the list to be numbered?
 @param lettered has the list to be 'numbered' with letters
 @param symbolIndent the indentation of the symbol
 */
- (instancetype)initWithBoolean:(jboolean)numbered
                    withBoolean:(jboolean)lettered
                      withFloat:(jfloat)symbolIndent;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextList, list_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextList, symbol_, ComAowagieTextChunk *)
J2OBJC_FIELD_SETTER(ComAowagieTextList, preSymbol_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextList, postSymbol_, NSString *)

__attribute__((unused)) static void ComAowagieTextList_initWithBoolean_withBoolean_(ComAowagieTextList *self, jboolean numbered, jboolean lettered);

__attribute__((unused)) static ComAowagieTextList *new_ComAowagieTextList_initWithBoolean_withBoolean_(jboolean numbered, jboolean lettered) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextList *create_ComAowagieTextList_initWithBoolean_withBoolean_(jboolean numbered, jboolean lettered);

__attribute__((unused)) static void ComAowagieTextList_initWithBoolean_withBoolean_withFloat_(ComAowagieTextList *self, jboolean numbered, jboolean lettered, jfloat symbolIndent);

__attribute__((unused)) static ComAowagieTextList *new_ComAowagieTextList_initWithBoolean_withBoolean_withFloat_(jboolean numbered, jboolean lettered, jfloat symbolIndent) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextList *create_ComAowagieTextList_initWithBoolean_withBoolean_withFloat_(jboolean numbered, jboolean lettered, jfloat symbolIndent);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/List.java"


#line 102
@implementation ComAowagieTextList

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 145
- (instancetype)init {
  ComAowagieTextList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 154
- (instancetype)initWithBoolean:(jboolean)numbered
                    withBoolean:(jboolean)lettered {
  ComAowagieTextList_initWithBoolean_withBoolean_(self, numbered, lettered);
  return self;
}


#line 167
- (instancetype)initWithBoolean:(jboolean)numbered
                    withBoolean:(jboolean)lettered
                      withFloat:(jfloat)symbolIndent {
  ComAowagieTextList_initWithBoolean_withBoolean_withFloat_(self, numbered, lettered, symbolIndent);
  return self;
}


#line 182
- (jint)type {
  
#line 184
  return ComAowagieTextElement_LIST;
}


#line 192
- (JavaUtilArrayList *)getChunks {
  
#line 194
  JavaUtilArrayList *tmp = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> i = [((JavaUtilArrayList *) nil_chk(self->list_)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    [tmp addAllWithJavaUtilCollection:[((id<ComAowagieTextElement>) nil_chk(((id<ComAowagieTextElement>) cast_check([i next], ComAowagieTextElement_class_())))) getChunks]];
  }
  return tmp;
}


#line 209
- (jboolean)addWithId:(id)o {
  
#line 211
  if ([o isKindOfClass:[ComAowagieTextListItem class]]) {
    ComAowagieTextListItem *item = (ComAowagieTextListItem *) o;
    if (self->numbered_ || self->lettered_) {
      ComAowagieTextChunk *chunk = new_ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(self->preSymbol_, [((ComAowagieTextChunk *) nil_chk(self->symbol_)) getFont]);
      jint index = self->first_ + [((JavaUtilArrayList *) nil_chk(self->list_)) size];
      if (self->lettered_) {
        (void) [chunk appendWithNSString:ComAowagieTextFactoriesRomanAlphabetFactory_getStringWithInt_withBoolean_(index, self->lowercase_)];
      }
      else {
        
#line 219
        (void) [chunk appendWithNSString:NSString_java_valueOfInt_(index)];
      }
      (void) [chunk appendWithNSString:self->postSymbol_];
      [((ComAowagieTextListItem *) nil_chk(item)) setListSymbolWithComAowagieTextChunk:chunk];
    }
    else {
      [((ComAowagieTextListItem *) nil_chk(item)) setListSymbolWithComAowagieTextChunk:self->symbol_];
    }
    [item setIndentationLeftWithFloat:self->symbolIndent_ withBoolean:self->autoindent_];
    [item setIndentationRightWithFloat:0];
    return [((JavaUtilArrayList *) nil_chk(self->list_)) addWithId:item];
  }
  else if ([o isKindOfClass:[ComAowagieTextList class]]) {
    ComAowagieTextList *nested = (ComAowagieTextList *) o;
    [((ComAowagieTextList *) nil_chk(nested)) setIndentationLeftWithFloat:[nested getIndentationLeft] + self->symbolIndent_];
    self->first_--;
    return [((JavaUtilArrayList *) nil_chk(self->list_)) addWithId:nested];
  }
  else if ([o isKindOfClass:[NSString class]]) {
    return [self addWithId:new_ComAowagieTextListItem_initWithNSString_((NSString *) o)];
  }
  return false;
}


#line 252
- (void)setNumberedWithBoolean:(jboolean)numbered {
  self->numbered_ = numbered;
}


#line 259
- (void)setLetteredWithBoolean:(jboolean)lettered {
  self->lettered_ = lettered;
}


#line 266
- (void)setLowercaseWithBoolean:(jboolean)uppercase {
  self->lowercase_ = uppercase;
}


#line 273
- (void)setAutoindentWithBoolean:(jboolean)autoindent {
  self->autoindent_ = autoindent;
}


#line 279
- (void)setAlignindentWithBoolean:(jboolean)alignindent {
  self->alignindent_ = alignindent;
}


#line 288
- (void)setFirstWithInt:(jint)first {
  self->first_ = first;
}


#line 297
- (void)setListSymbolWithComAowagieTextChunk:(ComAowagieTextChunk *)symbol {
  self->symbol_ = symbol;
}


#line 308
- (void)setListSymbolWithNSString:(NSString *)symbol {
  self->symbol_ = new_ComAowagieTextChunk_initWithNSString_(symbol);
}


#line 317
- (void)setIndentationLeftWithFloat:(jfloat)indentation {
  self->indentationLeft_ = indentation;
}


#line 326
- (void)setIndentationRightWithFloat:(jfloat)indentation {
  self->indentationRight_ = indentation;
}


#line 333
- (void)setSymbolIndentWithFloat:(jfloat)symbolIndent {
  self->symbolIndent_ = symbolIndent;
}


#line 344
- (JavaUtilArrayList *)getItems {
  return self->list_;
}


#line 353
- (jboolean)isEmpty {
  return [((JavaUtilArrayList *) nil_chk(self->list_)) isEmpty];
}


#line 362
- (jfloat)getTotalLeading {
  if ([((JavaUtilArrayList *) nil_chk(self->list_)) size] < 1) {
    return -1;
  }
  ComAowagieTextListItem *item = (ComAowagieTextListItem *) cast_chk([self->list_ getWithInt:0], [ComAowagieTextListItem class]);
  return [((ComAowagieTextListItem *) nil_chk(item)) getTotalLeading];
}


#line 377
- (jboolean)isNumbered {
  return self->numbered_;
}


#line 385
- (jboolean)isLettered {
  return self->lettered_;
}


#line 393
- (jboolean)isLowercase {
  return self->lowercase_;
}


#line 401
- (jboolean)isAutoindent {
  return self->autoindent_;
}


#line 409
- (jboolean)isAlignindent {
  return self->alignindent_;
}


#line 417
- (jint)getFirst {
  return self->first_;
}


#line 425
- (ComAowagieTextChunk *)getSymbol {
  return self->symbol_;
}


#line 433
- (jfloat)getIndentationLeft {
  return self->indentationLeft_;
}


#line 441
- (jfloat)getIndentationRight {
  return self->indentationRight_;
}


#line 449
- (jfloat)getSymbolIndent {
  return self->symbolIndent_;
}


#line 456
- (jboolean)isContent {
  
#line 458
  return true;
}


#line 465
- (jboolean)isNestable {
  
#line 467
  return true;
}


#line 475
- (NSString *)getPostSymbol {
  return self->postSymbol_;
}


#line 484
- (void)setPostSymbolWithNSString:(NSString *)postSymbol {
  self->postSymbol_ = postSymbol;
}


#line 493
- (NSString *)getPreSymbol {
  return self->preSymbol_;
}


#line 502
- (void)setPreSymbolWithNSString:(NSString *)preSymbol {
  self->preSymbol_ = preSymbol;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 16, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:withBoolean:);
  methods[2].selector = @selector(initWithBoolean:withBoolean:withFloat:);
  methods[3].selector = @selector(type);
  methods[4].selector = @selector(getChunks);
  methods[5].selector = @selector(addWithId:);
  methods[6].selector = @selector(setNumberedWithBoolean:);
  methods[7].selector = @selector(setLetteredWithBoolean:);
  methods[8].selector = @selector(setLowercaseWithBoolean:);
  methods[9].selector = @selector(setAutoindentWithBoolean:);
  methods[10].selector = @selector(setAlignindentWithBoolean:);
  methods[11].selector = @selector(setFirstWithInt:);
  methods[12].selector = @selector(setListSymbolWithComAowagieTextChunk:);
  methods[13].selector = @selector(setListSymbolWithNSString:);
  methods[14].selector = @selector(setIndentationLeftWithFloat:);
  methods[15].selector = @selector(setIndentationRightWithFloat:);
  methods[16].selector = @selector(setSymbolIndentWithFloat:);
  methods[17].selector = @selector(getItems);
  methods[18].selector = @selector(isEmpty);
  methods[19].selector = @selector(getTotalLeading);
  methods[20].selector = @selector(isNumbered);
  methods[21].selector = @selector(isLettered);
  methods[22].selector = @selector(isLowercase);
  methods[23].selector = @selector(isAutoindent);
  methods[24].selector = @selector(isAlignindent);
  methods[25].selector = @selector(getFirst);
  methods[26].selector = @selector(getSymbol);
  methods[27].selector = @selector(getIndentationLeft);
  methods[28].selector = @selector(getIndentationRight);
  methods[29].selector = @selector(getSymbolIndent);
  methods[30].selector = @selector(isContent);
  methods[31].selector = @selector(isNestable);
  methods[32].selector = @selector(getPostSymbol);
  methods[33].selector = @selector(setPostSymbolWithNSString:);
  methods[34].selector = @selector(getPreSymbol);
  methods[35].selector = @selector(setPreSymbolWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "list_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numbered_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lettered_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lowercase_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "autoindent_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "alignindent_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "first_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "symbol_", "LComAowagieTextChunk;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "preSymbol_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "postSymbol_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "indentationLeft_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "indentationRight_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "symbolIndent_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZZ", "ZZF", "add", "LNSObject;", "setNumbered", "Z", "setLettered", "setLowercase", "setAutoindent", "setAlignindent", "setFirst", "I", "setListSymbol", "LComAowagieTextChunk;", "LNSString;", "setIndentationLeft", "F", "setIndentationRight", "setSymbolIndent", "setPostSymbol", "setPreSymbol" };
  static const J2ObjcClassInfo _ComAowagieTextList = { "List", "com.aowagie.text", ptrTable, methods, fields, 7, 0x1, 36, 13, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextList;
}

@end


#line 145
void ComAowagieTextList_init(ComAowagieTextList *self) {
  ComAowagieTextList_initWithBoolean_withBoolean_(self, false, false);
}


#line 145
ComAowagieTextList *new_ComAowagieTextList_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextList, init)
}


#line 145
ComAowagieTextList *create_ComAowagieTextList_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextList, init)
}


#line 154
void ComAowagieTextList_initWithBoolean_withBoolean_(ComAowagieTextList *self, jboolean numbered, jboolean lettered) {
  NSObject_init(self);
  self->list_ = new_JavaUtilArrayList_init();
  self->numbered_ =
#line 110
  false;
  self->lettered_ =
#line 112
  false;
  self->lowercase_ =
#line 114
  false;
  self->autoindent_ =
#line 116
  false;
  self->alignindent_ =
#line 118
  false;
  self->first_ =
#line 121
  1;
  self->symbol_ = new_ComAowagieTextChunk_initWithNSString_(
#line 123
  @"- ");
  self->preSymbol_ =
#line 128
  @"";
  self->postSymbol_ =
#line 133
  @". ";
  self->indentationLeft_ =
#line 136
  0;
  self->indentationRight_ =
#line 138
  0;
  self->symbolIndent_ =
#line 140
  0;
  
#line 155
  self->numbered_ = numbered;
  self->lettered_ = lettered;
  self->autoindent_ = true;
  self->alignindent_ = true;
}


#line 154
ComAowagieTextList *new_ComAowagieTextList_initWithBoolean_withBoolean_(jboolean numbered, jboolean lettered) {
  J2OBJC_NEW_IMPL(ComAowagieTextList, initWithBoolean_withBoolean_, numbered, lettered)
}


#line 154
ComAowagieTextList *create_ComAowagieTextList_initWithBoolean_withBoolean_(jboolean numbered, jboolean lettered) {
  J2OBJC_CREATE_IMPL(ComAowagieTextList, initWithBoolean_withBoolean_, numbered, lettered)
}


#line 167
void ComAowagieTextList_initWithBoolean_withBoolean_withFloat_(ComAowagieTextList *self, jboolean numbered, jboolean lettered, jfloat symbolIndent) {
  NSObject_init(self);
  self->list_ = new_JavaUtilArrayList_init();
  self->numbered_ =
#line 110
  false;
  self->lettered_ =
#line 112
  false;
  self->lowercase_ =
#line 114
  false;
  self->autoindent_ =
#line 116
  false;
  self->alignindent_ =
#line 118
  false;
  self->first_ =
#line 121
  1;
  self->symbol_ = new_ComAowagieTextChunk_initWithNSString_(
#line 123
  @"- ");
  self->preSymbol_ =
#line 128
  @"";
  self->postSymbol_ =
#line 133
  @". ";
  self->indentationLeft_ =
#line 136
  0;
  self->indentationRight_ =
#line 138
  0;
  self->symbolIndent_ =
#line 140
  0;
  
#line 168
  self->numbered_ = numbered;
  self->lettered_ = lettered;
  self->symbolIndent_ = symbolIndent;
}


#line 167
ComAowagieTextList *new_ComAowagieTextList_initWithBoolean_withBoolean_withFloat_(jboolean numbered, jboolean lettered, jfloat symbolIndent) {
  J2OBJC_NEW_IMPL(ComAowagieTextList, initWithBoolean_withBoolean_withFloat_, numbered, lettered, symbolIndent)
}


#line 167
ComAowagieTextList *create_ComAowagieTextList_initWithBoolean_withBoolean_withFloat_(jboolean numbered, jboolean lettered, jfloat symbolIndent) {
  J2OBJC_CREATE_IMPL(ComAowagieTextList, initWithBoolean_withBoolean_withFloat_, numbered, lettered, symbolIndent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextList)

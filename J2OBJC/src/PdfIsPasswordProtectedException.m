//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/common/PdfIsPasswordProtectedException.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PdfExtraParams.h"
#include "PdfIsPasswordProtectedException.h"
#include "RuntimePasswordNeededException.h"
#include "java/lang/Throwable.h"
#include "java/util/Properties.h"

#if !__has_feature(objc_arc)
#error "PdfIsPasswordProtectedException must be compiled with ARC (-fobjc-arc)"
#endif

/*!
 @brief Serial Id.
 */
inline jlong EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_get_serialVersionUID(void);
#define EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_serialVersionUID -4899395533584256907LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/common/PdfIsPasswordProtectedException.java"

NSString *EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_REQUESTOR_MSG_CODE = @"pdfpasswordprotected";


#line 21
@implementation EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException


#line 33
- (instancetype)initWithNSString:(NSString *)msg {
  EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_(self, msg);
  return self;
}


#line 42
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)e {
  EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithJavaLangThrowable_(self, e);
  return self;
}


#line 53
- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)e {
  EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_withJavaLangThrowable_(self, msg, e);
  return self;
}


#line 62
- (void)configureWithJavaUtilProperties:(JavaUtilProperties *)config
                          withCharArray:(IOSCharArray *)password {
  (void) [((JavaUtilProperties *) nil_chk(config)) setPropertyWithNSString:EsGobAfirmaSignersPadesCommonPdfExtraParams_OWNER_PASSWORD_STRING withNSString:[NSString java_stringWithCharacters:password]];
  (void) [config removeWithId:EsGobAfirmaSignersPadesCommonPdfExtraParams_USER_PASSWORD_STRING];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithJavaLangThrowable:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[3].selector = @selector(configureWithJavaUtilProperties:withCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "REQUESTOR_MSG_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LJavaLangThrowable;", "LNSString;LJavaLangThrowable;", "configure", "LJavaUtilProperties;[C", &EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_REQUESTOR_MSG_CODE };
  static const J2ObjcClassInfo _EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException = { "PdfIsPasswordProtectedException", "es.gob.afirma.signers.pades.common", ptrTable, methods, fields, 7, 0x11, 4, 2, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException;
}

@end


#line 33
void EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *self, NSString *msg) {
  EsGobAfirmaCoreRuntimePasswordNeededException_initWithNSString_withNSString_withNSString_withJavaLangThrowable_(self, msg, EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_REQUESTOR_MSG_CODE, EsGobAfirmaSignersPadesCommonPdfExtraParams_OWNER_PASSWORD_STRING, nil);
}


#line 33
EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *new_EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException, initWithNSString_, msg)
}


#line 33
EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *create_EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException, initWithNSString_, msg)
}


#line 42
void EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithJavaLangThrowable_(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *self, JavaLangThrowable *e) {
  EsGobAfirmaCoreRuntimePasswordNeededException_initWithNSString_withNSString_withNSString_withJavaLangThrowable_(self, @"El PDF se encuentra protegido con contrasena", EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_REQUESTOR_MSG_CODE,
#line 44
  EsGobAfirmaSignersPadesCommonPdfExtraParams_USER_PASSWORD_STRING, e);
}


#line 42
EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *new_EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithJavaLangThrowable_(JavaLangThrowable *e) {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException, initWithJavaLangThrowable_, e)
}


#line 42
EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *create_EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithJavaLangThrowable_(JavaLangThrowable *e) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException, initWithJavaLangThrowable_, e)
}


#line 53
void EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_withJavaLangThrowable_(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *self, NSString *msg, JavaLangThrowable *e) {
  EsGobAfirmaCoreRuntimePasswordNeededException_initWithNSString_withNSString_withNSString_withJavaLangThrowable_(self, msg, EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_REQUESTOR_MSG_CODE, EsGobAfirmaSignersPadesCommonPdfExtraParams_OWNER_PASSWORD_STRING, e);
}


#line 53
EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *new_EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *e) {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException, initWithNSString_withJavaLangThrowable_, msg, e)
}


#line 53
EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException *create_EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *e) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException, initWithNSString_withJavaLangThrowable_, msg, e)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersPadesCommonPdfIsPasswordProtectedException)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cert/CertIOException.java
//

#include "CertIOException.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Throwable.h"

#if !__has_feature(objc_arc)
#error "CertIOException must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCertCertIOException () {
 @public
  JavaLangThrowable *cause_CertIOException_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCertCertIOException, cause_CertIOException_, JavaLangThrowable *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cert/CertIOException.java"


#line 8
@implementation OrgSpongycastleCertCertIOException


#line 13
- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgSpongycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(self, msg, cause);
  return self;
}


#line 20
- (instancetype)initWithNSString:(NSString *)msg {
  OrgSpongycastleCertCertIOException_initWithNSString_(self, msg);
  return self;
}

- (JavaLangThrowable *)getCause {
  
#line 27
  return cause_CertIOException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_CertIOException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "LNSString;", "cause" };
  static const J2ObjcClassInfo _OrgSpongycastleCertCertIOException = { "CertIOException", "org.spongycastle.cert", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertCertIOException;
}

@end


#line 13
void OrgSpongycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(OrgSpongycastleCertCertIOException *self, NSString *msg, JavaLangThrowable *cause) {
  JavaIoIOException_initWithNSString_(self,
#line 15
  msg);
  
#line 17
  self->cause_CertIOException_ = cause;
}


#line 13
OrgSpongycastleCertCertIOException *new_OrgSpongycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertCertIOException, initWithNSString_withJavaLangThrowable_, msg, cause)
}


#line 13
OrgSpongycastleCertCertIOException *create_OrgSpongycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertCertIOException, initWithNSString_withJavaLangThrowable_, msg, cause)
}


#line 20
void OrgSpongycastleCertCertIOException_initWithNSString_(OrgSpongycastleCertCertIOException *self, NSString *msg) {
  JavaIoIOException_initWithNSString_(self,
#line 22
  msg);
}


#line 20
OrgSpongycastleCertCertIOException *new_OrgSpongycastleCertCertIOException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertCertIOException, initWithNSString_, msg)
}


#line 20
OrgSpongycastleCertCertIOException *create_OrgSpongycastleCertCertIOException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertCertIOException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertCertIOException)

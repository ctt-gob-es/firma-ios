//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/List.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_List")
#ifdef RESTRICT_List
#define INCLUDE_ALL_List 0
#else
#define INCLUDE_ALL_List 1
#endif
#undef RESTRICT_List

#if !defined (ComAowagieTextList_) && (INCLUDE_ALL_List || defined(INCLUDE_ComAowagieTextList))
#define ComAowagieTextList_

#define RESTRICT_TextElementArray 1
#define INCLUDE_ComAowagieTextTextElementArray 1
#include "TextElementArray.h"

@class ComAowagieTextChunk;
@class JavaUtilArrayList;

/*!
 @brief A <CODE>List</CODE> contains several <CODE>ListItem</CODE>s.
 <P>
  <B>Example 1:</B>
  <BLOCKQUOTE>@code

   <STRONG>List list = new List(true, 20);</STRONG>
   <STRONG>list.add(new ListItem("First line"));</STRONG>
   <STRONG>list.add(new ListItem("The second line is longer to see what happens once the end of the line is reached. Will it start on a new line?"));</STRONG>
   <STRONG>list.add(new ListItem("Third line"));</STRONG>
   
@endcode</BLOCKQUOTE>
  The result of this code looks like this:
 	<OL>
 		<LI>
 			First line		
 </LI>
 		<LI>
 			The second line is longer to see what happens once the end of the line is reached. Will it start on a new line?		
 </LI>
 		<LI>
 			Third line		
 </LI>
 	</OL>
  
 <B>Example 2:</B>
  <BLOCKQUOTE>@code

   <STRONG>List overview = new List(false, 10);</STRONG>
   <STRONG>overview.add(new ListItem("This is an item"));</STRONG>
   <STRONG>overview.add("This is another item");</STRONG>
   
@endcode</BLOCKQUOTE>
  The result of this code looks like this:
 	<UL>
 		<LI>
 			This is an item		
 </LI>
 		<LI>
 			This is another item		
 </LI>
 	</UL>
 - seealso: Element
 - seealso: ListItem
 */
@interface ComAowagieTextList : NSObject < ComAowagieTextTextElementArray >

#pragma mark Public

/*!
 @brief Constructs a <CODE>List</CODE>.
 */
- (instancetype)init;

/*!
 @brief Adds an <CODE>Object</CODE> to the <CODE>List</CODE>.
 @param o the object to add.
 @return true if adding the object succeeded
 */
- (jboolean)addWithId:(id)o;

/*!
 @brief Gets all the chunks in this element.
 @return an <CODE>ArrayList</CODE>
 */
- (JavaUtilArrayList *)getChunks;

/*!
 @brief Gets the first number        .
 @return a number
 */
- (jint)getFirst;

/*!
 @brief Gets the indentation of this paragraph on the left side.
 @return the indentation
 */
- (jfloat)getIndentationLeft;

/*!
 @brief Gets the indentation of this paragraph on the right side.
 @return the indentation
 */
- (jfloat)getIndentationRight;

/*!
 @brief Gets all the items in the list.
 @return an <CODE>ArrayList</CODE> containing <CODE>ListItem</CODE>s.
 */
- (JavaUtilArrayList *)getItems;

/*!
 @brief Returns the String that is after a number or letter in the list symbol.
 @return the String that is after a number or letter in the list symbol
 @since iText 2.1.1
 */
- (NSString *)getPostSymbol;

/*!
 @brief Returns the String that is before a number or letter in the list symbol.
 @return the String that is before a number or letter in the list symbol
 @since iText 2.1.1
 */
- (NSString *)getPreSymbol;

/*!
 @brief Gets the Chunk containing the symbol.
 @return a Chunk with a symbol
 */
- (ComAowagieTextChunk *)getSymbol;

/*!
 @brief Gets the symbol indentation.
 @return the symbol indentation
 */
- (jfloat)getSymbolIndent;

/*!
 @brief Gets the leading of the first listitem.
 @return a <CODE>leading</CODE>
 */
- (jfloat)getTotalLeading;

/*!
 @brief Checks if all the listitems should be aligned.
 @return the alignindent
 */
- (jboolean)isAlignindent;

/*!
 @brief Checks if the indentation of list items is done automatically.
 @return the autoindent
 */
- (jboolean)isAutoindent;

/*!
 - seealso: com.aowagie.text.Element#isContent()
 @since iText 2.0.8
 */
- (jboolean)isContent;

/*!
 @brief Returns <CODE>true</CODE> if the list is empty.
 @return <CODE>true</CODE> if the list is empty
 */
- (jboolean)isEmpty;

/*!
 @brief Checks if the list is lettered.
 @return <CODE>true</CODE> if the list is lettered, <CODE>false</CODE> otherwise.
 */
- (jboolean)isLettered;

/*!
 @brief Checks if the list lettering is lowercase.
 @return <CODE>true</CODE> if it is lowercase, <CODE>false</CODE> otherwise.
 */
- (jboolean)isLowercase;

/*!
 - seealso: com.aowagie.text.Element#isNestable()
 @since iText 2.0.8
 */
- (jboolean)isNestable;

/*!
 @brief Checks if the list is numbered.
 @return <CODE>true</CODE> if the list is numbered, <CODE>false</CODE> otherwise.
 */
- (jboolean)isNumbered;

/*!
 @param alignindent the alignindent to set
 */
- (void)setAlignindentWithBoolean:(jboolean)alignindent;

/*!
 @param autoindent the autoindent to set
 */
- (void)setAutoindentWithBoolean:(jboolean)autoindent;

/*!
 @brief Sets the number that has to come first in the list.
 @param first a number
 */
- (void)setFirstWithInt:(jint)first;

/*!
 @brief Sets the indentation of this paragraph on the left side.
 @param indentation the new indentation
 */
- (void)setIndentationLeftWithFloat:(jfloat)indentation;

/*!
 @brief Sets the indentation of this paragraph on the right side.
 @param indentation the new indentation
 */
- (void)setIndentationRightWithFloat:(jfloat)indentation;

/*!
 @param lettered the lettered to set
 */
- (void)setLetteredWithBoolean:(jboolean)lettered;

/*!
 @brief Sets the listsymbol.
 @param symbol a  <CODE> Chunk </CODE>
 */
- (void)setListSymbolWithComAowagieTextChunk:(ComAowagieTextChunk *)symbol;

/*!
 @brief Sets the listsymbol.
 <P>
  This is a shortcut for <CODE>setListSymbol(Chunk symbol)</CODE>.
 @param symbol a  <CODE> String </CODE>
 */
- (void)setListSymbolWithNSString:(NSString *)symbol;

/*!
 @param uppercase the uppercase to set
 */
- (void)setLowercaseWithBoolean:(jboolean)uppercase;

/*!
 @param numbered the numbered to set
 */
- (void)setNumberedWithBoolean:(jboolean)numbered;

/*!
 @brief Sets the String that has to be added after a number or letter in the list symbol.
 @since iText 2.1.1
 @param postSymbol the String that has to be added after a number or letter in the list symbol.
 */
- (void)setPostSymbolWithNSString:(NSString *)postSymbol;

/*!
 @brief Sets the String that has to be added before a number or letter in the list symbol.
 @since iText 2.1.1
 @param preSymbol the String that has to be added before a number or letter in the list symbol.
 */
- (void)setPreSymbolWithNSString:(NSString *)preSymbol;

/*!
 @param symbolIndent the symbolIndent to set
 */
- (void)setSymbolIndentWithFloat:(jfloat)symbolIndent;

/*!
 @brief Gets the type of the text element.
 @return a type
 */
- (jint)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextList)

FOUNDATION_EXPORT void ComAowagieTextList_init(ComAowagieTextList *self);

FOUNDATION_EXPORT ComAowagieTextList *new_ComAowagieTextList_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextList *create_ComAowagieTextList_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextList)

#endif

#pragma pop_macro("INCLUDE_ALL_List")

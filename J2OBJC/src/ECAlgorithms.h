//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/ec/ECAlgorithms.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ECAlgorithms")
#ifdef RESTRICT_ECAlgorithms
#define INCLUDE_ALL_ECAlgorithms 0
#else
#define INCLUDE_ALL_ECAlgorithms 1
#endif
#undef RESTRICT_ECAlgorithms

#if !defined (OrgSpongycastleMathEcECAlgorithms_) && (INCLUDE_ALL_ECAlgorithms || defined(INCLUDE_OrgSpongycastleMathEcECAlgorithms))
#define OrgSpongycastleMathEcECAlgorithms_

@class IOSObjectArray;
@class JavaMathBigInteger;
@class OrgSpongycastleMathEcECCurve;
@class OrgSpongycastleMathEcECFieldElement;
@class OrgSpongycastleMathEcECPoint;
@protocol OrgSpongycastleMathEcECPointMap;
@protocol OrgSpongycastleMathEcEndoGLVEndomorphism;
@protocol OrgSpongycastleMathFieldFiniteField;

@interface OrgSpongycastleMathEcECAlgorithms : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgSpongycastleMathEcECPoint *)importPointWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)c
                                             withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)p;

+ (jboolean)isF2mCurveWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)c;

+ (jboolean)isF2mFieldWithOrgSpongycastleMathFieldFiniteField:(id<OrgSpongycastleMathFieldFiniteField>)field;

+ (jboolean)isFpCurveWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)c;

+ (jboolean)isFpFieldWithOrgSpongycastleMathFieldFiniteField:(id<OrgSpongycastleMathFieldFiniteField>)field;

+ (void)montgomeryTrickWithOrgSpongycastleMathEcECFieldElementArray:(IOSObjectArray *)zs
                                                            withInt:(jint)off
                                                            withInt:(jint)len;

+ (void)montgomeryTrickWithOrgSpongycastleMathEcECFieldElementArray:(IOSObjectArray *)zs
                                                            withInt:(jint)off
                                                            withInt:(jint)len
                            withOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)scale_;

/*!
 @brief Simple shift-and-add multiplication.Serves as reference implementation
  to verify (possibly faster) implementations, and for very small scalars.
 @param p The point to multiply.
 @param k The multiplier.
 @return The result of the point multiplication <code>kP</code>.
 */
+ (OrgSpongycastleMathEcECPoint *)referenceMultiplyWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)p
                                                             withJavaMathBigInteger:(JavaMathBigInteger *)k;

+ (OrgSpongycastleMathEcECPoint *)shamirsTrickWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)P
                                                        withJavaMathBigInteger:(JavaMathBigInteger *)k
                                              withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)Q
                                                        withJavaMathBigInteger:(JavaMathBigInteger *)l;

+ (OrgSpongycastleMathEcECPoint *)sumOfMultipliesWithOrgSpongycastleMathEcECPointArray:(IOSObjectArray *)ps
                                                           withJavaMathBigIntegerArray:(IOSObjectArray *)ks;

+ (OrgSpongycastleMathEcECPoint *)sumOfTwoMultipliesWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)P
                                                              withJavaMathBigInteger:(JavaMathBigInteger *)a
                                                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)Q
                                                              withJavaMathBigInteger:(JavaMathBigInteger *)b;

+ (OrgSpongycastleMathEcECPoint *)validatePointWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)p;

#pragma mark Package-Private

+ (OrgSpongycastleMathEcECPoint *)implShamirsTrickJsfWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)P
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)k
                                                     withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)Q
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)l;

+ (OrgSpongycastleMathEcECPoint *)implShamirsTrickWNafWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)P
                                                                withJavaMathBigInteger:(JavaMathBigInteger *)k
                                                      withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)Q
                                                                withJavaMathBigInteger:(JavaMathBigInteger *)l;

+ (OrgSpongycastleMathEcECPoint *)implShamirsTrickWNafWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)P
                                                                withJavaMathBigInteger:(JavaMathBigInteger *)k
                                                   withOrgSpongycastleMathEcECPointMap:(id<OrgSpongycastleMathEcECPointMap>)pointMapQ
                                                                withJavaMathBigInteger:(JavaMathBigInteger *)l;

+ (OrgSpongycastleMathEcECPoint *)implSumOfMultipliesWithOrgSpongycastleMathEcECPointArray:(IOSObjectArray *)ps
                                                               withJavaMathBigIntegerArray:(IOSObjectArray *)ks;

+ (OrgSpongycastleMathEcECPoint *)implSumOfMultipliesWithOrgSpongycastleMathEcECPointArray:(IOSObjectArray *)ps
                                                       withOrgSpongycastleMathEcECPointMap:(id<OrgSpongycastleMathEcECPointMap>)pointMap
                                                               withJavaMathBigIntegerArray:(IOSObjectArray *)ks;

+ (OrgSpongycastleMathEcECPoint *)implSumOfMultipliesGLVWithOrgSpongycastleMathEcECPointArray:(IOSObjectArray *)ps
                                                                  withJavaMathBigIntegerArray:(IOSObjectArray *)ks
                                                 withOrgSpongycastleMathEcEndoGLVEndomorphism:(id<OrgSpongycastleMathEcEndoGLVEndomorphism>)glvEndomorphism;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleMathEcECAlgorithms)

FOUNDATION_EXPORT void OrgSpongycastleMathEcECAlgorithms_init(OrgSpongycastleMathEcECAlgorithms *self);

FOUNDATION_EXPORT OrgSpongycastleMathEcECAlgorithms *new_OrgSpongycastleMathEcECAlgorithms_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleMathEcECAlgorithms *create_OrgSpongycastleMathEcECAlgorithms_init(void);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathEcECAlgorithms_isF2mCurveWithOrgSpongycastleMathEcECCurve_(OrgSpongycastleMathEcECCurve *c);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathEcECAlgorithms_isF2mFieldWithOrgSpongycastleMathFieldFiniteField_(id<OrgSpongycastleMathFieldFiniteField> field);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathEcECAlgorithms_isFpCurveWithOrgSpongycastleMathEcECCurve_(OrgSpongycastleMathEcECCurve *c);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathEcECAlgorithms_isFpFieldWithOrgSpongycastleMathFieldFiniteField_(id<OrgSpongycastleMathFieldFiniteField> field);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_sumOfMultipliesWithOrgSpongycastleMathEcECPointArray_withJavaMathBigIntegerArray_(IOSObjectArray *ps, IOSObjectArray *ks);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_sumOfTwoMultipliesWithOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECPoint *P, JavaMathBigInteger *a, OrgSpongycastleMathEcECPoint *Q, JavaMathBigInteger *b);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_shamirsTrickWithOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECPoint *P, JavaMathBigInteger *k, OrgSpongycastleMathEcECPoint *Q, JavaMathBigInteger *l);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_importPointWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_(OrgSpongycastleMathEcECCurve *c, OrgSpongycastleMathEcECPoint *p);

FOUNDATION_EXPORT void OrgSpongycastleMathEcECAlgorithms_montgomeryTrickWithOrgSpongycastleMathEcECFieldElementArray_withInt_withInt_(IOSObjectArray *zs, jint off, jint len);

FOUNDATION_EXPORT void OrgSpongycastleMathEcECAlgorithms_montgomeryTrickWithOrgSpongycastleMathEcECFieldElementArray_withInt_withInt_withOrgSpongycastleMathEcECFieldElement_(IOSObjectArray *zs, jint off, jint len, OrgSpongycastleMathEcECFieldElement *scale_);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_referenceMultiplyWithOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECPoint *p, JavaMathBigInteger *k);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_validatePointWithOrgSpongycastleMathEcECPoint_(OrgSpongycastleMathEcECPoint *p);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_implShamirsTrickJsfWithOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECPoint *P, JavaMathBigInteger *k, OrgSpongycastleMathEcECPoint *Q, JavaMathBigInteger *l);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_implShamirsTrickWNafWithOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECPoint *P, JavaMathBigInteger *k, OrgSpongycastleMathEcECPoint *Q, JavaMathBigInteger *l);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_implShamirsTrickWNafWithOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withOrgSpongycastleMathEcECPointMap_withJavaMathBigInteger_(OrgSpongycastleMathEcECPoint *P, JavaMathBigInteger *k, id<OrgSpongycastleMathEcECPointMap> pointMapQ, JavaMathBigInteger *l);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_implSumOfMultipliesWithOrgSpongycastleMathEcECPointArray_withJavaMathBigIntegerArray_(IOSObjectArray *ps, IOSObjectArray *ks);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_implSumOfMultipliesGLVWithOrgSpongycastleMathEcECPointArray_withJavaMathBigIntegerArray_withOrgSpongycastleMathEcEndoGLVEndomorphism_(IOSObjectArray *ps, IOSObjectArray *ks, id<OrgSpongycastleMathEcEndoGLVEndomorphism> glvEndomorphism);

FOUNDATION_EXPORT OrgSpongycastleMathEcECPoint *OrgSpongycastleMathEcECAlgorithms_implSumOfMultipliesWithOrgSpongycastleMathEcECPointArray_withOrgSpongycastleMathEcECPointMap_withJavaMathBigIntegerArray_(IOSObjectArray *ps, id<OrgSpongycastleMathEcECPointMap> pointMap, IOSObjectArray *ks);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathEcECAlgorithms)

#endif

#pragma pop_macro("INCLUDE_ALL_ECAlgorithms")

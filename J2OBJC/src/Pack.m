//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/Pack.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Pack.h"

#if !__has_feature(objc_arc)
#error "Pack must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/Pack.java"


#line 6
@implementation OrgSpongycastleUtilPack

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 6
- (instancetype)init {
  OrgSpongycastleUtilPack_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 8
+ (jshort)bigEndianToShortWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)off {
  return OrgSpongycastleUtilPack_bigEndianToShortWithByteArray_withInt_(bs, off);
}


#line 15
+ (jint)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off {
  return OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
}


#line 24
+ (void)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off
                       withIntArray:(IOSIntArray *)ns {
  OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}


#line 33
+ (IOSByteArray *)intToBigEndianWithInt:(jint)n {
  return OrgSpongycastleUtilPack_intToBigEndianWithInt_(n);
}


#line 40
+ (void)intToBigEndianWithInt:(jint)n
                withByteArray:(IOSByteArray *)bs
                      withInt:(jint)off {
  OrgSpongycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, off);
}


#line 48
+ (IOSByteArray *)intToBigEndianWithIntArray:(IOSIntArray *)ns {
  return OrgSpongycastleUtilPack_intToBigEndianWithIntArray_(ns);
}


#line 55
+ (void)intToBigEndianWithIntArray:(IOSIntArray *)ns
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgSpongycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}


#line 64
+ (jlong)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  return OrgSpongycastleUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
}


#line 71
+ (void)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                             withInt:(jint)off
                       withLongArray:(IOSLongArray *)ns {
  OrgSpongycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}


#line 80
+ (IOSByteArray *)longToBigEndianWithLong:(jlong)n {
  return OrgSpongycastleUtilPack_longToBigEndianWithLong_(n);
}


#line 87
+ (void)longToBigEndianWithLong:(jlong)n
                  withByteArray:(IOSByteArray *)bs
                        withInt:(jint)off {
  OrgSpongycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToBigEndianWithLongArray:(IOSLongArray *)ns {
  return OrgSpongycastleUtilPack_longToBigEndianWithLongArray_(ns);
}


#line 100
+ (void)longToBigEndianWithLongArray:(IOSLongArray *)ns
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)off {
  OrgSpongycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}


#line 109
+ (jshort)littleEndianToShortWithByteArray:(IOSByteArray *)bs
                                   withInt:(jint)off {
  return OrgSpongycastleUtilPack_littleEndianToShortWithByteArray_withInt_(bs, off);
}


#line 116
+ (jint)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off {
  return OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
}


#line 125
+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off
                          withIntArray:(IOSIntArray *)ns {
  OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}


#line 134
+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)bOff
                          withIntArray:(IOSIntArray *)ns
                               withInt:(jint)nOff
                               withInt:(jint)count {
  OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bs, bOff, ns, nOff, count);
}


#line 143
+ (IOSIntArray *)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                                        withInt:(jint)off
                                        withInt:(jint)count {
  return OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_withInt_(bs, off, count);
}


#line 154
+ (IOSByteArray *)shortToLittleEndianWithShort:(jshort)n {
  return OrgSpongycastleUtilPack_shortToLittleEndianWithShort_(n);
}


#line 161
+ (void)shortToLittleEndianWithShort:(jshort)n
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)off {
  OrgSpongycastleUtilPack_shortToLittleEndianWithShort_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)intToLittleEndianWithInt:(jint)n {
  return OrgSpongycastleUtilPack_intToLittleEndianWithInt_(n);
}


#line 174
+ (void)intToLittleEndianWithInt:(jint)n
                   withByteArray:(IOSByteArray *)bs
                         withInt:(jint)off {
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, off);
}


#line 182
+ (IOSByteArray *)intToLittleEndianWithIntArray:(IOSIntArray *)ns {
  return OrgSpongycastleUtilPack_intToLittleEndianWithIntArray_(ns);
}


#line 189
+ (void)intToLittleEndianWithIntArray:(IOSIntArray *)ns
                        withByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  OrgSpongycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}


#line 198
+ (jlong)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                 withInt:(jint)off {
  return OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
}


#line 205
+ (void)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)off
                          withLongArray:(IOSLongArray *)ns {
  OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}


#line 214
+ (void)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)bsOff
                          withLongArray:(IOSLongArray *)ns
                                withInt:(jint)nsOff
                                withInt:(jint)nsLen {
  OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_withInt_withInt_(bs, bsOff, ns, nsOff, nsLen);
}


#line 223
+ (IOSByteArray *)longToLittleEndianWithLong:(jlong)n {
  return OrgSpongycastleUtilPack_longToLittleEndianWithLong_(n);
}


#line 230
+ (void)longToLittleEndianWithLong:(jlong)n
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgSpongycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToLittleEndianWithLongArray:(IOSLongArray *)ns {
  return OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_(ns);
}


#line 243
+ (void)longToLittleEndianWithLongArray:(IOSLongArray *)ns
                          withByteArray:(IOSByteArray *)bs
                                withInt:(jint)off {
  OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}


#line 252
+ (void)longToLittleEndianWithLongArray:(IOSLongArray *)ns
                                withInt:(jint)nsOff
                                withInt:(jint)nsLen
                          withByteArray:(IOSByteArray *)bs
                                withInt:(jint)bsOff {
  OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withInt_withInt_withByteArray_withInt_(ns, nsOff, nsLen, bs, bsOff);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "S", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 4, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 9, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 11, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 15, -1, -1, -1, -1 },
    { NULL, "S", 0x9, 16, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 17, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 18, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 17, 19, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 22, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 23, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 23, 6, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 23, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 23, 8, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 24, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 24, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 24, 25, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 26, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 26, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 26, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 26, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 26, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(bigEndianToShortWithByteArray:withInt:);
  methods[2].selector = @selector(bigEndianToIntWithByteArray:withInt:);
  methods[3].selector = @selector(bigEndianToIntWithByteArray:withInt:withIntArray:);
  methods[4].selector = @selector(intToBigEndianWithInt:);
  methods[5].selector = @selector(intToBigEndianWithInt:withByteArray:withInt:);
  methods[6].selector = @selector(intToBigEndianWithIntArray:);
  methods[7].selector = @selector(intToBigEndianWithIntArray:withByteArray:withInt:);
  methods[8].selector = @selector(bigEndianToLongWithByteArray:withInt:);
  methods[9].selector = @selector(bigEndianToLongWithByteArray:withInt:withLongArray:);
  methods[10].selector = @selector(longToBigEndianWithLong:);
  methods[11].selector = @selector(longToBigEndianWithLong:withByteArray:withInt:);
  methods[12].selector = @selector(longToBigEndianWithLongArray:);
  methods[13].selector = @selector(longToBigEndianWithLongArray:withByteArray:withInt:);
  methods[14].selector = @selector(littleEndianToShortWithByteArray:withInt:);
  methods[15].selector = @selector(littleEndianToIntWithByteArray:withInt:);
  methods[16].selector = @selector(littleEndianToIntWithByteArray:withInt:withIntArray:);
  methods[17].selector = @selector(littleEndianToIntWithByteArray:withInt:withIntArray:withInt:withInt:);
  methods[18].selector = @selector(littleEndianToIntWithByteArray:withInt:withInt:);
  methods[19].selector = @selector(shortToLittleEndianWithShort:);
  methods[20].selector = @selector(shortToLittleEndianWithShort:withByteArray:withInt:);
  methods[21].selector = @selector(intToLittleEndianWithInt:);
  methods[22].selector = @selector(intToLittleEndianWithInt:withByteArray:withInt:);
  methods[23].selector = @selector(intToLittleEndianWithIntArray:);
  methods[24].selector = @selector(intToLittleEndianWithIntArray:withByteArray:withInt:);
  methods[25].selector = @selector(littleEndianToLongWithByteArray:withInt:);
  methods[26].selector = @selector(littleEndianToLongWithByteArray:withInt:withLongArray:);
  methods[27].selector = @selector(littleEndianToLongWithByteArray:withInt:withLongArray:withInt:withInt:);
  methods[28].selector = @selector(longToLittleEndianWithLong:);
  methods[29].selector = @selector(longToLittleEndianWithLong:withByteArray:withInt:);
  methods[30].selector = @selector(longToLittleEndianWithLongArray:);
  methods[31].selector = @selector(longToLittleEndianWithLongArray:withByteArray:withInt:);
  methods[32].selector = @selector(longToLittleEndianWithLongArray:withInt:withInt:withByteArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "bigEndianToShort", "[BI", "bigEndianToInt", "[BI[I", "intToBigEndian", "I", "I[BI", "[I", "[I[BI", "bigEndianToLong", "[BI[J", "longToBigEndian", "J", "J[BI", "[J", "[J[BI", "littleEndianToShort", "littleEndianToInt", "[BI[III", "[BII", "shortToLittleEndian", "S", "S[BI", "intToLittleEndian", "littleEndianToLong", "[BI[JII", "longToLittleEndian", "[JII[BI" };
  static const J2ObjcClassInfo _OrgSpongycastleUtilPack = { "Pack", "org.spongycastle.util", ptrTable, methods, NULL, 7, 0x401, 33, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleUtilPack;
}

@end


#line 6
void OrgSpongycastleUtilPack_init(OrgSpongycastleUtilPack *self) {
  NSObject_init(self);
}


#line 8
jshort OrgSpongycastleUtilPack_bigEndianToShortWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  jint n = JreLShift32((IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(bs, ++off) & (jint) 0xff);
  return (jshort) n;
}

jint OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  jint n = JreLShift32(IOSByteArray_Get(nil_chk(bs), off), 24);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(bs, ++off) & (jint) 0xff);
  return n;
}

void OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    
#line 28
    *IOSIntArray_GetRef(ns, i) = OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}


#line 33
IOSByteArray *OrgSpongycastleUtilPack_intToBigEndianWithInt_(jint n) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgSpongycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (JreURShift32(n, 24));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (n);
}

IOSByteArray *OrgSpongycastleUtilPack_intToBigEndianWithIntArray_(IOSIntArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgSpongycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    
#line 59
    OrgSpongycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}


#line 64
jlong OrgSpongycastleUtilPack_bigEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  jint hi = OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
  jint lo = OrgSpongycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}

void OrgSpongycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    
#line 75
    *IOSLongArray_GetRef(ns, i) = OrgSpongycastleUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}


#line 80
IOSByteArray *OrgSpongycastleUtilPack_longToBigEndianWithLong_(jlong n) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgSpongycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  OrgSpongycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off);
  OrgSpongycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off + 4);
}

IOSByteArray *OrgSpongycastleUtilPack_longToBigEndianWithLongArray_(IOSLongArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgSpongycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    
#line 104
    OrgSpongycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}


#line 109
jshort OrgSpongycastleUtilPack_littleEndianToShortWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  jint n = IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff;
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  return (jshort) n;
}

jint OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  jint n = IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff;
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32(IOSByteArray_Get(bs, ++off), 24);
  return n;
}

void OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    
#line 129
    *IOSIntArray_GetRef(ns, i) = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}


#line 134
void OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(IOSByteArray *bs, jint bOff, IOSIntArray *ns, jint nOff, jint count) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < count; ++i) {
    
#line 138
    *IOSIntArray_GetRef(nil_chk(ns), nOff + i) = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, bOff);
    bOff += 4;
  }
}


#line 143
IOSIntArray *OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_withInt_(IOSByteArray *bs, jint off, jint count) {
  OrgSpongycastleUtilPack_initialize();
  IOSIntArray *ns = [IOSIntArray newArrayWithLength:count];
  for (jint i = 0; i < ns->size_; ++i) {
    
#line 148
    *IOSIntArray_GetRef(ns, i) = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
  return ns;
}


#line 154
IOSByteArray *OrgSpongycastleUtilPack_shortToLittleEndianWithShort_(jshort n) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:2];
  OrgSpongycastleUtilPack_shortToLittleEndianWithShort_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_shortToLittleEndianWithShort_withByteArray_withInt_(jshort n, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (n);
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
}

IOSByteArray *OrgSpongycastleUtilPack_intToLittleEndianWithInt_(jint n) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (n);
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 24));
}

IOSByteArray *OrgSpongycastleUtilPack_intToLittleEndianWithIntArray_(IOSIntArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgSpongycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    
#line 193
    OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(ns, i), bs, off);
    off += 4;
  }
}


#line 198
jlong OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  jint lo = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
  jint hi = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((jlong) (hi & (jlong) 0xffffffffLL), 32)) | (jlong) (lo & (jlong) 0xffffffffLL);
}

void OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    
#line 209
    *IOSLongArray_GetRef(ns, i) = OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}


#line 214
void OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_withInt_withInt_(IOSByteArray *bs, jint bsOff, IOSLongArray *ns, jint nsOff, jint nsLen) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 218
    *IOSLongArray_GetRef(nil_chk(ns), nsOff + i) = OrgSpongycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, bsOff);
    bsOff += 8;
  }
}


#line 223
IOSByteArray *OrgSpongycastleUtilPack_longToLittleEndianWithLong_(jlong n) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgSpongycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off);
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off + 4);
}

IOSByteArray *OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_(IOSLongArray *ns) {
  OrgSpongycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    
#line 247
    OrgSpongycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(ns, i), bs, off);
    off += 8;
  }
}


#line 252
void OrgSpongycastleUtilPack_longToLittleEndianWithLongArray_withInt_withInt_withByteArray_withInt_(IOSLongArray *ns, jint nsOff, jint nsLen, IOSByteArray *bs, jint bsOff) {
  OrgSpongycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 256
    OrgSpongycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(nil_chk(ns), nsOff + i), bs, bsOff);
    bsOff += 8;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleUtilPack)

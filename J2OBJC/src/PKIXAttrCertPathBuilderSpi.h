//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jce/provider/PKIXAttrCertPathBuilderSpi.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PKIXAttrCertPathBuilderSpi")
#ifdef RESTRICT_PKIXAttrCertPathBuilderSpi
#define INCLUDE_ALL_PKIXAttrCertPathBuilderSpi 0
#else
#define INCLUDE_ALL_PKIXAttrCertPathBuilderSpi 1
#endif
#undef RESTRICT_PKIXAttrCertPathBuilderSpi

#if !defined (OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi_) && (INCLUDE_ALL_PKIXAttrCertPathBuilderSpi || defined(INCLUDE_OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi))
#define OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi_

#define RESTRICT_JavaSecurityCertCertPathBuilderSpi 1
#define INCLUDE_JavaSecurityCertCertPathBuilderSpi 1
#include "java/security/cert/CertPathBuilderSpi.h"

@class OrgSpongycastleX509X509AttributeCertStoreSelector;
@protocol JavaSecurityCertCertPathBuilderResult;
@protocol JavaSecurityCertCertPathParameters;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

@interface OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi : JavaSecurityCertCertPathBuilderSpi

#pragma mark Public

- (instancetype)init;

/*!
 @brief Build and validate a CertPath using the given parameter.
 @param params PKIXBuilderParameters object containing all information to             build the CertPath
 */
- (id<JavaSecurityCertCertPathBuilderResult>)engineBuildWithJavaSecurityCertCertPathParameters:(id<JavaSecurityCertCertPathParameters>)params;

#pragma mark Protected

+ (id<JavaUtilCollection>)findCertificatesWithOrgSpongycastleX509X509AttributeCertStoreSelector:(OrgSpongycastleX509X509AttributeCertStoreSelector *)certSelect
                                                                               withJavaUtilList:(id<JavaUtilList>)certStores;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi)

FOUNDATION_EXPORT void OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi_init(OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi *self);

FOUNDATION_EXPORT OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi *new_OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi *create_OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi_init(void);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi_findCertificatesWithOrgSpongycastleX509X509AttributeCertStoreSelector_withJavaUtilList_(OrgSpongycastleX509X509AttributeCertStoreSelector *certSelect, id<JavaUtilList> certStores);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJceProviderPKIXAttrCertPathBuilderSpi)

#endif

#pragma pop_macro("INCLUDE_ALL_PKIXAttrCertPathBuilderSpi")

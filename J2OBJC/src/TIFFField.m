//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/TIFFField.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "TIFFField.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "TIFFField must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCodecTIFFField () {
 @public
  /*!
   @brief The tag number.
   */
  jint tag_;
  /*!
   @brief The tag type.
   */
  jint type_;
  /*!
   @brief The number of data items present in the field.
   */
  jint count_;
  /*!
   @brief The field data.
   */
  id data_;
}

/*!
 @brief Returns a TIFF_SRATIONAL data item as a two-element array
  of ints.
 <p> A ClassCastException will be thrown if the field is not
  of type TIFF_SRATIONAL.
 @param index Index
 @return Rational
 */
- (IOSIntArray *)getAsSRationalWithInt:(jint)index;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecTIFFField, data_, id)

inline jlong ComAowagieTextPdfCodecTIFFField_get_serialVersionUID(void);
#define ComAowagieTextPdfCodecTIFFField_serialVersionUID 9088332901412823834LL
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecTIFFField, serialVersionUID, jlong)

__attribute__((unused)) static IOSIntArray *ComAowagieTextPdfCodecTIFFField_getAsSRationalWithInt_(ComAowagieTextPdfCodecTIFFField *self, jint index);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/TIFFField.java"


#line 66
@implementation ComAowagieTextPdfCodecTIFFField


#line 119
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfCodecTIFFField_initPackagePrivate(self);
  return self;
}


#line 145
- (instancetype)initPackagePrivateWithInt:(jint)tag
                                  withInt:(jint)type
                                  withInt:(jint)count
                                   withId:(id)data {
  ComAowagieTextPdfCodecTIFFField_initPackagePrivateWithInt_withInt_withInt_withId_(self, tag, type, count, data);
  return self;
}


#line 156
- (jint)getTag {
  return self->tag_;
}


#line 167
- (jint)getType {
  return self->type_;
}


#line 175
- (jint)getCount {
  return self->count_;
}


#line 192
- (IOSByteArray *)getAsBytes {
  return (IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]);
}


#line 204
- (IOSCharArray *)getAsChars {
  return (IOSCharArray *) cast_chk(self->data_, [IOSCharArray class]);
}


#line 216
- (IOSShortArray *)getAsShorts {
  return (IOSShortArray *) cast_chk(self->data_, [IOSShortArray class]);
}


#line 228
- (IOSIntArray *)getAsInts {
  return (IOSIntArray *) cast_chk(self->data_, [IOSIntArray class]);
}


#line 240
- (IOSLongArray *)getAsLongs {
  return (IOSLongArray *) cast_chk(self->data_, [IOSLongArray class]);
}


#line 251
- (IOSFloatArray *)getAsFloats {
  return (IOSFloatArray *) cast_chk(self->data_, [IOSFloatArray class]);
}


#line 262
- (IOSDoubleArray *)getAsDoubles {
  return (IOSDoubleArray *) cast_chk(self->data_, [IOSDoubleArray class]);
}


#line 273
- (IOSObjectArray *)getAsSRationals {
  return (IOSObjectArray *) cast_check(self->data_, IOSClass_intArray(2));
}


#line 284
- (IOSObjectArray *)getAsRationals {
  return (IOSObjectArray *) cast_check(self->data_, IOSClass_longArray(2));
}


#line 303
- (jint)getAsIntWithInt:(jint)index {
  switch (self->type_) {
    case ComAowagieTextPdfCodecTIFFField_TIFF_BYTE:
    
#line 305
    case ComAowagieTextPdfCodecTIFFField_TIFF_UNDEFINED:
    return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index) & (jint) 0xff;
    case ComAowagieTextPdfCodecTIFFField_TIFF_SBYTE:
    return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index);
    case ComAowagieTextPdfCodecTIFFField_TIFF_SHORT:
    return IOSCharArray_Get(nil_chk(((IOSCharArray *) cast_chk(self->data_, [IOSCharArray class]))), index) & (jint) 0xffff;
    case ComAowagieTextPdfCodecTIFFField_TIFF_SSHORT:
    return IOSShortArray_Get(nil_chk(((IOSShortArray *) cast_chk(self->data_, [IOSShortArray class]))), index);
    case ComAowagieTextPdfCodecTIFFField_TIFF_SLONG:
    return IOSIntArray_Get(nil_chk(((IOSIntArray *) cast_chk(self->data_, [IOSIntArray class]))), index);
    default:
    @throw new_JavaLangClassCastException_init();
  }
}


#line 335
- (jlong)getAsLongWithInt:(jint)index {
  switch (self->type_) {
    case ComAowagieTextPdfCodecTIFFField_TIFF_BYTE:
    
#line 337
    case ComAowagieTextPdfCodecTIFFField_TIFF_UNDEFINED:
    return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index) & (jint) 0xff;
    case ComAowagieTextPdfCodecTIFFField_TIFF_SBYTE:
    return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index);
    case ComAowagieTextPdfCodecTIFFField_TIFF_SHORT:
    return IOSCharArray_Get(nil_chk(((IOSCharArray *) cast_chk(self->data_, [IOSCharArray class]))), index) & (jint) 0xffff;
    case ComAowagieTextPdfCodecTIFFField_TIFF_SSHORT:
    return IOSShortArray_Get(nil_chk(((IOSShortArray *) cast_chk(self->data_, [IOSShortArray class]))), index);
    case ComAowagieTextPdfCodecTIFFField_TIFF_SLONG:
    return IOSIntArray_Get(nil_chk(((IOSIntArray *) cast_chk(self->data_, [IOSIntArray class]))), index);
    case ComAowagieTextPdfCodecTIFFField_TIFF_LONG:
    return IOSLongArray_Get(nil_chk(((IOSLongArray *) cast_chk(self->data_, [IOSLongArray class]))), index);
    default:
    @throw new_JavaLangClassCastException_init();
  }
}


#line 367
- (jfloat)getAsFloatWithInt:(jint)index {
  {
    
#line 386
    IOSIntArray *ivalue;
    
#line 389
    IOSLongArray *lvalue;
    
#line 368
    switch (self->type_) {
      case ComAowagieTextPdfCodecTIFFField_TIFF_BYTE:
      return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index) & (jint) 0xff;
      case ComAowagieTextPdfCodecTIFFField_TIFF_SBYTE:
      return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_SHORT:
      return IOSCharArray_Get(nil_chk(((IOSCharArray *) cast_chk(self->data_, [IOSCharArray class]))), index) & (jint) 0xffff;
      case ComAowagieTextPdfCodecTIFFField_TIFF_SSHORT:
      return IOSShortArray_Get(nil_chk(((IOSShortArray *) cast_chk(self->data_, [IOSShortArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_SLONG:
      return IOSIntArray_Get(nil_chk(((IOSIntArray *) cast_chk(self->data_, [IOSIntArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_LONG:
      return IOSLongArray_Get(nil_chk(((IOSLongArray *) cast_chk(self->data_, [IOSLongArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_FLOAT:
      return IOSFloatArray_Get(nil_chk(((IOSFloatArray *) cast_chk(self->data_, [IOSFloatArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_DOUBLE:
      return (jfloat) IOSDoubleArray_Get(nil_chk(((IOSDoubleArray *) cast_chk(self->data_, [IOSDoubleArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_SRATIONAL:
      ivalue = ComAowagieTextPdfCodecTIFFField_getAsSRationalWithInt_(self, index);
      return (jfloat) ((jdouble) IOSIntArray_Get(nil_chk(ivalue), 0) / IOSIntArray_Get(ivalue, 1));
      case ComAowagieTextPdfCodecTIFFField_TIFF_RATIONAL:
      lvalue = [self getAsRationalWithInt:index];
      return (jfloat) ((jdouble) IOSLongArray_Get(nil_chk(lvalue), 0) / IOSLongArray_Get(lvalue, 1));
      default:
      @throw new_JavaLangClassCastException_init();
    }
  }
}


#line 407
- (jdouble)getAsDoubleWithInt:(jint)index {
  {
    
#line 426
    IOSIntArray *ivalue;
    
#line 429
    IOSLongArray *lvalue;
    
#line 408
    switch (self->type_) {
      case ComAowagieTextPdfCodecTIFFField_TIFF_BYTE:
      return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index) & (jint) 0xff;
      case ComAowagieTextPdfCodecTIFFField_TIFF_SBYTE:
      return IOSByteArray_Get(nil_chk(((IOSByteArray *) cast_chk(self->data_, [IOSByteArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_SHORT:
      return IOSCharArray_Get(nil_chk(((IOSCharArray *) cast_chk(self->data_, [IOSCharArray class]))), index) & (jint) 0xffff;
      case ComAowagieTextPdfCodecTIFFField_TIFF_SSHORT:
      return IOSShortArray_Get(nil_chk(((IOSShortArray *) cast_chk(self->data_, [IOSShortArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_SLONG:
      return IOSIntArray_Get(nil_chk(((IOSIntArray *) cast_chk(self->data_, [IOSIntArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_LONG:
      return IOSLongArray_Get(nil_chk(((IOSLongArray *) cast_chk(self->data_, [IOSLongArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_FLOAT:
      return IOSFloatArray_Get(nil_chk(((IOSFloatArray *) cast_chk(self->data_, [IOSFloatArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_DOUBLE:
      return IOSDoubleArray_Get(nil_chk(((IOSDoubleArray *) cast_chk(self->data_, [IOSDoubleArray class]))), index);
      case ComAowagieTextPdfCodecTIFFField_TIFF_SRATIONAL:
      ivalue = ComAowagieTextPdfCodecTIFFField_getAsSRationalWithInt_(self, index);
      return (jdouble) IOSIntArray_Get(nil_chk(ivalue), 0) / IOSIntArray_Get(ivalue, 1);
      case ComAowagieTextPdfCodecTIFFField_TIFF_RATIONAL:
      lvalue = [self getAsRationalWithInt:index];
      return (jdouble) IOSLongArray_Get(nil_chk(lvalue), 0) / IOSLongArray_Get(lvalue, 1);
      default:
      @throw new_JavaLangClassCastException_init();
    }
  }
}


#line 447
- (IOSIntArray *)getAsSRationalWithInt:(jint)index {
  return ComAowagieTextPdfCodecTIFFField_getAsSRationalWithInt_(self, index);
}


#line 460
- (IOSLongArray *)getAsRationalWithInt:(jint)index {
  if (self->type_ == ComAowagieTextPdfCodecTIFFField_TIFF_LONG) {
    return [self getAsLongs];
  }
  return IOSObjectArray_Get(nil_chk(((IOSObjectArray *) cast_check(self->data_, IOSClass_longArray(2)))), index);
}


#line 480
- (jint)compareToWithId:(id)o {
  
#line 482
  if (o == nil) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  
#line 486
  jint oTag = [((ComAowagieTextPdfCodecTIFFField *) cast_chk(o, [ComAowagieTextPdfCodecTIFFField class])) getTag];
  
#line 488
  if (self->tag_ < oTag) {
    return -1;
  }
  else
#line 490
  if (self->tag_ > oTag) {
    return 1;
  }
  else {
    
#line 493
    return 0;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[S", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x0, 3, 2, -1, -1, -1, -1 },
    { NULL, "F", 0x0, 4, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x0, 5, 2, -1, -1, -1, -1 },
    { NULL, "[I", 0x2, 6, 2, -1, -1, -1, -1 },
    { NULL, "[J", 0x0, 7, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(initPackagePrivateWithInt:withInt:withInt:withId:);
  methods[2].selector = @selector(getTag);
  methods[3].selector = @selector(getType);
  methods[4].selector = @selector(getCount);
  methods[5].selector = @selector(getAsBytes);
  methods[6].selector = @selector(getAsChars);
  methods[7].selector = @selector(getAsShorts);
  methods[8].selector = @selector(getAsInts);
  methods[9].selector = @selector(getAsLongs);
  methods[10].selector = @selector(getAsFloats);
  methods[11].selector = @selector(getAsDoubles);
  methods[12].selector = @selector(getAsSRationals);
  methods[13].selector = @selector(getAsRationals);
  methods[14].selector = @selector(getAsIntWithInt:);
  methods[15].selector = @selector(getAsLongWithInt:);
  methods[16].selector = @selector(getAsFloatWithInt:);
  methods[17].selector = @selector(getAsDoubleWithInt:);
  methods[18].selector = @selector(getAsSRationalWithInt:);
  methods[19].selector = @selector(getAsRationalWithInt:);
  methods[20].selector = @selector(compareToWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComAowagieTextPdfCodecTIFFField_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "TIFF_BYTE", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_BYTE, 0x18, -1, -1, -1, -1 },
    { "TIFF_ASCII", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_ASCII, 0x18, -1, -1, -1, -1 },
    { "TIFF_SHORT", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_SHORT, 0x18, -1, -1, -1, -1 },
    { "TIFF_LONG", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_LONG, 0x18, -1, -1, -1, -1 },
    { "TIFF_RATIONAL", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_RATIONAL, 0x18, -1, -1, -1, -1 },
    { "TIFF_SBYTE", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_SBYTE, 0x18, -1, -1, -1, -1 },
    { "TIFF_UNDEFINED", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_UNDEFINED, 0x18, -1, -1, -1, -1 },
    { "TIFF_SSHORT", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_SSHORT, 0x18, -1, -1, -1, -1 },
    { "TIFF_SLONG", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_SLONG, 0x18, -1, -1, -1, -1 },
    { "TIFF_SRATIONAL", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_SRATIONAL, 0x18, -1, -1, -1, -1 },
    { "TIFF_FLOAT", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_FLOAT, 0x18, -1, -1, -1, -1 },
    { "TIFF_DOUBLE", "I", .constantValue.asInt = ComAowagieTextPdfCodecTIFFField_TIFF_DOUBLE, 0x18, -1, -1, -1, -1 },
    { "tag_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "type_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "data_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIILNSObject;", "getAsInt", "I", "getAsLong", "getAsFloat", "getAsDouble", "getAsSRational", "getAsRational", "compareTo", "LNSObject;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecTIFFField = { "TIFFField", "com.aowagie.text.pdf.codec", ptrTable, methods, fields, 7, 0x0, 21, 17, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecTIFFField;
}

@end


#line 119
void ComAowagieTextPdfCodecTIFFField_initPackagePrivate(ComAowagieTextPdfCodecTIFFField *self) {
  NSObject_init(self);
}


#line 119
ComAowagieTextPdfCodecTIFFField *new_ComAowagieTextPdfCodecTIFFField_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecTIFFField, initPackagePrivate)
}


#line 119
ComAowagieTextPdfCodecTIFFField *create_ComAowagieTextPdfCodecTIFFField_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecTIFFField, initPackagePrivate)
}


#line 145
void ComAowagieTextPdfCodecTIFFField_initPackagePrivateWithInt_withInt_withInt_withId_(ComAowagieTextPdfCodecTIFFField *self, jint tag, jint type, jint count, id data) {
  NSObject_init(self);
  
#line 146
  self->tag_ = tag;
  self->type_ = type;
  self->count_ = count;
  self->data_ = data;
}


#line 145
ComAowagieTextPdfCodecTIFFField *new_ComAowagieTextPdfCodecTIFFField_initPackagePrivateWithInt_withInt_withInt_withId_(jint tag, jint type, jint count, id data) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecTIFFField, initPackagePrivateWithInt_withInt_withInt_withId_, tag, type, count, data)
}


#line 145
ComAowagieTextPdfCodecTIFFField *create_ComAowagieTextPdfCodecTIFFField_initPackagePrivateWithInt_withInt_withInt_withId_(jint tag, jint type, jint count, id data) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecTIFFField, initPackagePrivateWithInt_withInt_withInt_withId_, tag, type, count, data)
}


#line 447
IOSIntArray *ComAowagieTextPdfCodecTIFFField_getAsSRationalWithInt_(ComAowagieTextPdfCodecTIFFField *self, jint index) {
  return IOSObjectArray_Get(nil_chk(((IOSObjectArray *) cast_check(self->data_, IOSClass_intArray(2)))), index);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecTIFFField)

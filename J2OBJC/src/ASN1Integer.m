//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ASN1Integer.java
//

#include "ASN1Integer.h"
#include "ASN1OctetString.h"
#include "ASN1OutputStream.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "Arrays.h"
#include "BERTags.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Properties.h"
#include "StreamUtil.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

#if !__has_feature(objc_arc)
#error "ASN1Integer must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1ASN1Integer () {
 @public
  IOSByteArray *bytes_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1ASN1Integer, bytes_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ASN1Integer.java"


#line 12
@implementation OrgSpongycastleAsn1ASN1Integer


#line 24
+ (OrgSpongycastleAsn1ASN1Integer *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_(obj);
}


#line 57
+ (OrgSpongycastleAsn1ASN1Integer *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                           withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1ASN1Integer_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 78
- (instancetype)initWithLong:(jlong)value {
  OrgSpongycastleAsn1ASN1Integer_initWithLong_(self, value);
  return self;
}


#line 89
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)value {
  OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(self, value);
  return self;
}


#line 117
- (instancetype)initWithByteArray:(IOSByteArray *)bytes {
  OrgSpongycastleAsn1ASN1Integer_initWithByteArray_(self, bytes);
  return self;
}


#line 123
- (instancetype)initWithByteArray:(IOSByteArray *)bytes
                      withBoolean:(jboolean)clone {
  OrgSpongycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(self, bytes, clone);
  return self;
}


#line 142
+ (jboolean)isMalformedWithByteArray:(IOSByteArray *)bytes {
  return OrgSpongycastleAsn1ASN1Integer_isMalformedWithByteArray_(bytes);
}


#line 159
- (JavaMathBigInteger *)getValue {
  
#line 161
  return new_JavaMathBigInteger_initWithByteArray_(bytes_);
}


#line 170
- (JavaMathBigInteger *)getPositiveValue {
  
#line 172
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, bytes_);
}


#line 175
- (jboolean)isConstructed {
  
#line 177
  return false;
}


#line 180
- (jint)encodedLength {
  
#line 182
  return 1 + OrgSpongycastleAsn1StreamUtil_calculateBodyLengthWithInt_(((IOSByteArray *) nil_chk(bytes_))->size_) + bytes_->size_;
}


#line 185
- (void)encodeWithOrgSpongycastleAsn1ASN1OutputStream:(OrgSpongycastleAsn1ASN1OutputStream *)outArg {
  
#line 189
  [((OrgSpongycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodedWithInt:OrgSpongycastleAsn1BERTags_INTEGER withByteArray:bytes_];
}


#line 192
- (NSUInteger)hash {
  
#line 194
  jint value = 0;
  
#line 196
  for (jint i = 0; i != ((IOSByteArray *) nil_chk(bytes_))->size_; i++) {
    
#line 198
    value ^= JreLShift32((IOSByteArray_Get(bytes_, i) & (jint) 0xff), (JreIntMod(i, 4)));
  }
  
#line 201
  return value;
}


#line 204
- (jboolean)asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)o {
  
#line 207
  if (!([o isKindOfClass:[OrgSpongycastleAsn1ASN1Integer class]])) {
    
#line 209
    return false;
  }
  
#line 212
  OrgSpongycastleAsn1ASN1Integer *other = (OrgSpongycastleAsn1ASN1Integer *) cast_chk(o, [OrgSpongycastleAsn1ASN1Integer class]);
  
#line 214
  return OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(bytes_, ((OrgSpongycastleAsn1ASN1Integer *) nil_chk(other))->bytes_);
}


#line 217
- (NSString *)description {
  
#line 219
  return [((JavaMathBigInteger *) nil_chk([self getValue])) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 7, 5, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 9, 10, -1, -1, -1 },
    { NULL, "I", 0x1, 11, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 12, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithLong:);
  methods[3].selector = @selector(initWithJavaMathBigInteger:);
  methods[4].selector = @selector(initWithByteArray:);
  methods[5].selector = @selector(initWithByteArray:withBoolean:);
  methods[6].selector = @selector(isMalformedWithByteArray:);
  methods[7].selector = @selector(getValue);
  methods[8].selector = @selector(getPositiveValue);
  methods[9].selector = @selector(isConstructed);
  methods[10].selector = @selector(encodedLength);
  methods[11].selector = @selector(encodeWithOrgSpongycastleAsn1ASN1OutputStream:);
  methods[12].selector = @selector(hash);
  methods[13].selector = @selector(asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:);
  methods[14].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bytes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "J", "LJavaMathBigInteger;", "[B", "[BZ", "isMalformed", "encode", "LOrgSpongycastleAsn1ASN1OutputStream;", "LJavaIoIOException;", "hashCode", "asn1Equals", "LOrgSpongycastleAsn1ASN1Primitive;", "toString" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1ASN1Integer = { "ASN1Integer", "org.spongycastle.asn1", ptrTable, methods, fields, 7, 0x1, 15, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1ASN1Integer;
}

@end


#line 24
OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1ASN1Integer_initialize();
  
#line 27
  if (obj == nil || [obj isKindOfClass:[OrgSpongycastleAsn1ASN1Integer class]]) {
    
#line 29
    return (OrgSpongycastleAsn1ASN1Integer *) cast_chk(obj, [OrgSpongycastleAsn1ASN1Integer class]);
  }
  
#line 32
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 34
    @try {
      
#line 36
      return (OrgSpongycastleAsn1ASN1Integer *) cast_chk(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) cast_chk(obj, [IOSByteArray class])), [OrgSpongycastleAsn1ASN1Integer class]);
    }
    @catch (JavaLangException *e) {
      
#line 40
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"encoding error in getInstance: ", [e description]));
    }
  }
  
#line 44
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 57
OrgSpongycastleAsn1ASN1Integer *OrgSpongycastleAsn1ASN1Integer_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1ASN1Integer_initialize();
  
#line 61
  OrgSpongycastleAsn1ASN1Primitive *o = [((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject];
  
#line 63
  if (explicit_ || [o isKindOfClass:[OrgSpongycastleAsn1ASN1Integer class]]) {
    
#line 65
    return OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_(o);
  }
  else {
    
#line 69
    return new_OrgSpongycastleAsn1ASN1Integer_initWithByteArray_([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([obj getObject]))) getOctets]);
  }
}


#line 78
void OrgSpongycastleAsn1ASN1Integer_initWithLong_(OrgSpongycastleAsn1ASN1Integer *self, jlong value) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  
#line 81
  self->bytes_ = [((JavaMathBigInteger *) nil_chk(JavaMathBigInteger_valueOfWithLong_(value))) toByteArray];
}


#line 78
OrgSpongycastleAsn1ASN1Integer *new_OrgSpongycastleAsn1ASN1Integer_initWithLong_(jlong value) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithLong_, value)
}


#line 78
OrgSpongycastleAsn1ASN1Integer *create_OrgSpongycastleAsn1ASN1Integer_initWithLong_(jlong value) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithLong_, value)
}


#line 89
void OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(OrgSpongycastleAsn1ASN1Integer *self, JavaMathBigInteger *value) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  
#line 92
  self->bytes_ = [((JavaMathBigInteger *) nil_chk(value)) toByteArray];
}


#line 89
OrgSpongycastleAsn1ASN1Integer *new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(JavaMathBigInteger *value) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithJavaMathBigInteger_, value)
}


#line 89
OrgSpongycastleAsn1ASN1Integer *create_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(JavaMathBigInteger *value) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithJavaMathBigInteger_, value)
}


#line 117
void OrgSpongycastleAsn1ASN1Integer_initWithByteArray_(OrgSpongycastleAsn1ASN1Integer *self, IOSByteArray *bytes) {
  OrgSpongycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(self,
#line 120
  bytes, true);
}


#line 117
OrgSpongycastleAsn1ASN1Integer *new_OrgSpongycastleAsn1ASN1Integer_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithByteArray_, bytes)
}


#line 117
OrgSpongycastleAsn1ASN1Integer *create_OrgSpongycastleAsn1ASN1Integer_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithByteArray_, bytes)
}


#line 123
void OrgSpongycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(OrgSpongycastleAsn1ASN1Integer *self, IOSByteArray *bytes, jboolean clone) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  
#line 126
  if (!OrgSpongycastleUtilProperties_isOverrideSetWithNSString_(@"org.spongycastle.asn1.allow_unsafe_integer")) {
    
#line 128
    if (OrgSpongycastleAsn1ASN1Integer_isMalformedWithByteArray_(bytes)) {
      
#line 130
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"malformed integer");
    }
  }
  self->bytes_ = (clone) ? OrgSpongycastleUtilArrays_cloneWithByteArray_(bytes) : bytes;
}


#line 123
OrgSpongycastleAsn1ASN1Integer *new_OrgSpongycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(IOSByteArray *bytes, jboolean clone) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithByteArray_withBoolean_, bytes, clone)
}


#line 123
OrgSpongycastleAsn1ASN1Integer *create_OrgSpongycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(IOSByteArray *bytes, jboolean clone) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1Integer, initWithByteArray_withBoolean_, bytes, clone)
}


#line 142
jboolean OrgSpongycastleAsn1ASN1Integer_isMalformedWithByteArray_(IOSByteArray *bytes) {
  OrgSpongycastleAsn1ASN1Integer_initialize();
  if (((IOSByteArray *) nil_chk(bytes))->size_ > 1) {
    
#line 146
    if (IOSByteArray_Get(bytes, 0) == 0 && (IOSByteArray_Get(bytes, 1) & (jint) 0x80) == 0) {
      
#line 148
      return true;
    }
    if (IOSByteArray_Get(bytes, 0) == (jbyte) (jint) 0xff && (IOSByteArray_Get(bytes, 1) & (jint) 0x80) != 0) {
      
#line 152
      return true;
    }
  }
  
#line 156
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1ASN1Integer)

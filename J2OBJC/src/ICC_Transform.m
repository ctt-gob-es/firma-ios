//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/ICC_Transform.java
//

#include "ICC_Profile.h"
#include "ICC_ProfileHelper.h"
#include "ICC_Transform.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "NativeCMM.h"
#include "NativeImageFormat.h"

#if !__has_feature(objc_arc)
#error "ICC_Transform must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComICC_Transform () {
 @public
  jlong transformHandle_;
  jint numInputChannels_;
  jint numOutputChannels_;
  HarmonyJavaAwtColorICC_Profile *src_;
  HarmonyJavaAwtColorICC_Profile *dst_;
}

@end

J2OBJC_FIELD_SETTER(ComICC_Transform, src_, HarmonyJavaAwtColorICC_Profile *)
J2OBJC_FIELD_SETTER(ComICC_Transform, dst_, HarmonyJavaAwtColorICC_Profile *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/ICC_Transform.java"


#line 28
@implementation ComICC_Transform


#line 38
- (jint)getNumInputChannels {
  return numInputChannels_;
}


#line 45
- (jint)getNumOutputChannels {
  return numOutputChannels_;
}


#line 52
- (HarmonyJavaAwtColorICC_Profile *)getDst {
  return dst_;
}


#line 59
- (HarmonyJavaAwtColorICC_Profile *)getSrc {
  return src_;
}


#line 71
- (instancetype)initWithHarmonyJavaAwtColorICC_ProfileArray:(IOSObjectArray *)profiles
                                               withIntArray:(IOSIntArray *)renderIntents {
  ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(self, profiles, renderIntents);
  return self;
}


#line 93
- (instancetype)initWithHarmonyJavaAwtColorICC_ProfileArray:(IOSObjectArray *)profiles {
  ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(self, profiles);
  return self;
}


#line 134
- (void)java_finalize {
  
#line 136
  if (transformHandle_ != 0) {
  }
}


#line 149
- (void)translateColorsWithComNativeImageFormat:(ComNativeImageFormat *)src
                       withComNativeImageFormat:(ComNativeImageFormat *)dst {
}

- (void)dealloc {
  JreCheckFinalize(self, [ComICC_Transform class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getNumInputChannels);
  methods[1].selector = @selector(getNumOutputChannels);
  methods[2].selector = @selector(getDst);
  methods[3].selector = @selector(getSrc);
  methods[4].selector = @selector(initWithHarmonyJavaAwtColorICC_ProfileArray:withIntArray:);
  methods[5].selector = @selector(initWithHarmonyJavaAwtColorICC_ProfileArray:);
  methods[6].selector = @selector(java_finalize);
  methods[7].selector = @selector(translateColorsWithComNativeImageFormat:withComNativeImageFormat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "transformHandle_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numInputChannels_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numOutputChannels_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "src_", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dst_", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LHarmonyJavaAwtColorICC_Profile;[I", "[LHarmonyJavaAwtColorICC_Profile;", "finalize", "translateColors", "LComNativeImageFormat;LComNativeImageFormat;" };
  static const J2ObjcClassInfo _ComICC_Transform = { "ICC_Transform", "com", ptrTable, methods, fields, 7, 0x1, 8, 5, -1, -1, -1, -1, -1 };
  return &_ComICC_Transform;
}

@end


#line 71
void ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(ComICC_Transform *self, IOSObjectArray *profiles, IOSIntArray *renderIntents) {
  NSObject_init(self);
  
#line 72
  jint numProfiles = ((IOSObjectArray *) nil_chk(profiles))->size_;
  
#line 74
  IOSLongArray *profileHandles = [IOSLongArray newArrayWithLength:numProfiles];
  for (jint i = 0; i < numProfiles; i++) {
    *IOSLongArray_GetRef(profileHandles, i) = ComNativeCMM_getHandleWithHarmonyJavaAwtColorICC_Profile_(IOSObjectArray_Get(profiles, i));
  }
  
#line 81
  self->src_ = IOSObjectArray_Get(profiles, 0);
  self->dst_ = IOSObjectArray_Get(profiles, numProfiles - 1);
  self->numInputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->src_)) getNumComponents];
  self->numOutputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->dst_)) getNumComponents];
}


#line 71
ComICC_Transform *new_ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(IOSObjectArray *profiles, IOSIntArray *renderIntents) {
  J2OBJC_NEW_IMPL(ComICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_, profiles, renderIntents)
}


#line 71
ComICC_Transform *create_ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(IOSObjectArray *profiles, IOSIntArray *renderIntents) {
  J2OBJC_CREATE_IMPL(ComICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_, profiles, renderIntents)
}


#line 93
void ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(ComICC_Transform *self, IOSObjectArray *profiles) {
  NSObject_init(self);
  
#line 94
  jint numProfiles = ((IOSObjectArray *) nil_chk(profiles))->size_;
  IOSIntArray *renderingIntents = [IOSIntArray newArrayWithLength:numProfiles];
  
#line 98
  jint currRenderingIntent = HarmonyJavaAwtColorICC_Profile_icPerceptual;
  
#line 101
  if ([((HarmonyJavaAwtColorICC_Profile *) nil_chk(IOSObjectArray_Get(profiles, 0))) getProfileClass] == HarmonyJavaAwtColorICC_Profile_CLASS_OUTPUT) {
    currRenderingIntent = HarmonyJavaAwtColorICC_Profile_icRelativeColorimetric;
  }
  
#line 106
  for (jint i = 0; i < numProfiles; i++) {
    
#line 110
    if (i != 0 && i != numProfiles - 1 && [((HarmonyJavaAwtColorICC_Profile *) nil_chk(IOSObjectArray_Get(profiles, i))) getProfileClass] == HarmonyJavaAwtColorICC_Profile_CLASS_ABSTRACT) {
      currRenderingIntent = HarmonyJavaAwtColorICC_Profile_icPerceptual;
    }
    
#line 114
    *IOSIntArray_GetRef(renderingIntents, i) = currRenderingIntent;
    
#line 117
    currRenderingIntent = ComICC_ProfileHelper_getRenderingIntentWithHarmonyJavaAwtColorICC_Profile_(IOSObjectArray_Get(profiles, i));
  }
  
#line 121
  IOSLongArray *profileHandles = [IOSLongArray newArrayWithLength:numProfiles];
  for (jint i = 0; i < numProfiles; i++) {
    *IOSLongArray_GetRef(profileHandles, i) = ComNativeCMM_getHandleWithHarmonyJavaAwtColorICC_Profile_(IOSObjectArray_Get(profiles, i));
  }
  
#line 128
  self->src_ = IOSObjectArray_Get(profiles, 0);
  self->dst_ = IOSObjectArray_Get(profiles, numProfiles - 1);
  self->numInputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->src_)) getNumComponents];
  self->numOutputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->dst_)) getNumComponents];
}


#line 93
ComICC_Transform *new_ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(IOSObjectArray *profiles) {
  J2OBJC_NEW_IMPL(ComICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_, profiles)
}


#line 93
ComICC_Transform *create_ComICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(IOSObjectArray *profiles) {
  J2OBJC_CREATE_IMPL(ComICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_, profiles)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComICC_Transform)

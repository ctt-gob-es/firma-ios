//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/PKIXExtendedParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PKIXExtendedParameters")
#ifdef RESTRICT_PKIXExtendedParameters
#define INCLUDE_ALL_PKIXExtendedParameters 0
#else
#define INCLUDE_ALL_PKIXExtendedParameters 1
#endif
#undef RESTRICT_PKIXExtendedParameters

#if !defined (OrgSpongycastleJcajcePKIXExtendedParameters_) && (INCLUDE_ALL_PKIXExtendedParameters || defined(INCLUDE_OrgSpongycastleJcajcePKIXExtendedParameters))
#define OrgSpongycastleJcajcePKIXExtendedParameters_

#define RESTRICT_JavaSecurityCertCertPathParameters 1
#define INCLUDE_JavaSecurityCertCertPathParameters 1
#include "java/security/cert/CertPathParameters.h"

@class JavaUtilDate;
@class OrgSpongycastleJcajcePKIXCertStoreSelector;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief This class extends the PKIXParameters with a validity model parameter.
 */
@interface OrgSpongycastleJcajcePKIXExtendedParameters : NSObject < JavaSecurityCertCertPathParameters >

#pragma mark Public

- (id)java_clone;

- (id<JavaUtilList>)getCertificateStores;

- (id<JavaUtilList>)getCertPathCheckers;

- (id<JavaUtilList>)getCertStores;

- (id<JavaUtilList>)getCRLStores;

- (JavaUtilDate *)getDate;

- (id<JavaUtilSet>)getInitialPolicies;

- (id<JavaUtilMap>)getNamedCertificateStoreMap;

- (id<JavaUtilMap>)getNamedCRLStoreMap;

- (NSString *)getSigProvider;

/*!
 @brief Returns the required constraints on the target certificate.
 The constraints are returned as an instance of 
 <code>Selector</code>. If <code>null</code>, no constraints are
  defined.
 @return a <code>Selector</code> specifying the constraints on the
          target certificate or attribute certificate (or <code>null</code>)
 - seealso: PKIXCertStoreSelector
 */
- (OrgSpongycastleJcajcePKIXCertStoreSelector *)getTargetConstraints;

- (id<JavaUtilSet>)getTrustAnchors;

/*!
 @return Returns the validity model.
 - seealso: #CHAIN_VALIDITY_MODEL
 - seealso: #PKIX_VALIDITY_MODEL
 */
- (jint)getValidityModel;

- (jboolean)isAnyPolicyInhibited;

- (jboolean)isExplicitPolicyRequired;

- (jboolean)isPolicyMappingInhibited;

- (jboolean)isRevocationEnabled;

/*!
 @brief Defaults to <code>false</code>.
 @return Returns if delta CRLs should be used.
 */
- (jboolean)isUseDeltasEnabled;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajcePKIXExtendedParameters)

/*!
 @brief This is the default PKIX validity model.Actually there are two variants
  of this: The PKIX model and the modified PKIX model.
 The PKIX model
  verifies that all involved certificates must have been valid at the
  current time. The modified PKIX model verifies that all involved
  certificates were valid at the signing time. Both are indirectly choosen
  with the <code>PKIXParameters.setDate(Date)</code> method, so this
  methods sets the Date when <em>all</em> certificates must have been
  valid.
 */
inline jint OrgSpongycastleJcajcePKIXExtendedParameters_get_PKIX_VALIDITY_MODEL(void);
#define OrgSpongycastleJcajcePKIXExtendedParameters_PKIX_VALIDITY_MODEL 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleJcajcePKIXExtendedParameters, PKIX_VALIDITY_MODEL, jint)

/*!
 @brief This model uses the following validity model.Each certificate must have
  been valid at the moment where is was used.
 That means the end
  certificate must have been valid at the time the signature was done. The
  CA certificate which signed the end certificate must have been valid,
  when the end certificate was signed. The CA (or Root CA) certificate must
  have been valid, when the CA certificate was signed and so on. So the 
 <code>PKIXParameters.setDate(Date)</code> method sets the time, when the 
 <em>end certificate</em> must have been valid. <p> It is used e.g.
  in the German signature law.
 */
inline jint OrgSpongycastleJcajcePKIXExtendedParameters_get_CHAIN_VALIDITY_MODEL(void);
#define OrgSpongycastleJcajcePKIXExtendedParameters_CHAIN_VALIDITY_MODEL 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleJcajcePKIXExtendedParameters, CHAIN_VALIDITY_MODEL, jint)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajcePKIXExtendedParameters)

#endif

#if !defined (OrgSpongycastleJcajcePKIXExtendedParameters_Builder_) && (INCLUDE_ALL_PKIXExtendedParameters || defined(INCLUDE_OrgSpongycastleJcajcePKIXExtendedParameters_Builder))
#define OrgSpongycastleJcajcePKIXExtendedParameters_Builder_

@class JavaSecurityCertPKIXParameters;
@class JavaSecurityCertTrustAnchor;
@class OrgSpongycastleAsn1X509GeneralName;
@class OrgSpongycastleJcajcePKIXCertStoreSelector;
@class OrgSpongycastleJcajcePKIXExtendedParameters;
@protocol JavaUtilSet;
@protocol OrgSpongycastleJcajcePKIXCRLStore;
@protocol OrgSpongycastleJcajcePKIXCertStore;

/*!
 @brief Builder for a PKIXExtendedParameters object.
 */
@interface OrgSpongycastleJcajcePKIXExtendedParameters_Builder : NSObject

#pragma mark Public

- (instancetype)initWithOrgSpongycastleJcajcePKIXExtendedParameters:(OrgSpongycastleJcajcePKIXExtendedParameters *)baseParameters;

- (instancetype)initWithJavaSecurityCertPKIXParameters:(JavaSecurityCertPKIXParameters *)baseParameters;

- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)addCertificateStoreWithOrgSpongycastleJcajcePKIXCertStore:(id<OrgSpongycastleJcajcePKIXCertStore>)store;

- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)addCRLStoreWithOrgSpongycastleJcajcePKIXCRLStore:(id<OrgSpongycastleJcajcePKIXCRLStore>)store;

- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)addNamedCertificateStoreWithOrgSpongycastleAsn1X509GeneralName:(OrgSpongycastleAsn1X509GeneralName *)issuerAltName
                                                                                 withOrgSpongycastleJcajcePKIXCertStore:(id<OrgSpongycastleJcajcePKIXCertStore>)store;

- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)addNamedCRLStoreWithOrgSpongycastleAsn1X509GeneralName:(OrgSpongycastleAsn1X509GeneralName *)issuerAltName
                                                                          withOrgSpongycastleJcajcePKIXCRLStore:(id<OrgSpongycastleJcajcePKIXCRLStore>)store;

- (OrgSpongycastleJcajcePKIXExtendedParameters *)build;

/*!
 @brief Flag whether or not revocation checking is to be enabled.
 @param revocationEnabled true if revocation checking to be enabled, false otherwise.
 */
- (void)setRevocationEnabledWithBoolean:(jboolean)revocationEnabled;

- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)setTargetConstraintsWithOrgSpongycastleJcajcePKIXCertStoreSelector:(OrgSpongycastleJcajcePKIXCertStoreSelector *)selector;

/*!
 @brief Set the trustAnchor to be used with these parameters.
 @param trustAnchor the trust anchor end-entity and CRLs must be based on.
 @return the current builder.
 */
- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)setTrustAnchorWithJavaSecurityCertTrustAnchor:(JavaSecurityCertTrustAnchor *)trustAnchor;

/*!
 @brief Set the set of trustAnchors to be used with these parameters.
 @param trustAnchors a set of trustAnchors, one of which a particular end-entity and it's associated CRLs must be based on.
 @return the current builder.
 */
- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)setTrustAnchorsWithJavaUtilSet:(id<JavaUtilSet>)trustAnchors;

/*!
 @brief Sets if delta CRLs should be used for checking the revocation status.
 @param useDeltas <code> true </code>  if delta CRLs should be used.
 */
- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)setUseDeltasEnabledWithBoolean:(jboolean)useDeltas;

/*!
 @param validityModel The validity model to set.
 - seealso: #CHAIN_VALIDITY_MODEL
 - seealso: #PKIX_VALIDITY_MODEL
 */
- (OrgSpongycastleJcajcePKIXExtendedParameters_Builder *)setValidityModelWithInt:(jint)validityModel;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajcePKIXExtendedParameters_Builder)

FOUNDATION_EXPORT void OrgSpongycastleJcajcePKIXExtendedParameters_Builder_initWithJavaSecurityCertPKIXParameters_(OrgSpongycastleJcajcePKIXExtendedParameters_Builder *self, JavaSecurityCertPKIXParameters *baseParameters);

FOUNDATION_EXPORT OrgSpongycastleJcajcePKIXExtendedParameters_Builder *new_OrgSpongycastleJcajcePKIXExtendedParameters_Builder_initWithJavaSecurityCertPKIXParameters_(JavaSecurityCertPKIXParameters *baseParameters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajcePKIXExtendedParameters_Builder *create_OrgSpongycastleJcajcePKIXExtendedParameters_Builder_initWithJavaSecurityCertPKIXParameters_(JavaSecurityCertPKIXParameters *baseParameters);

FOUNDATION_EXPORT void OrgSpongycastleJcajcePKIXExtendedParameters_Builder_initWithOrgSpongycastleJcajcePKIXExtendedParameters_(OrgSpongycastleJcajcePKIXExtendedParameters_Builder *self, OrgSpongycastleJcajcePKIXExtendedParameters *baseParameters);

FOUNDATION_EXPORT OrgSpongycastleJcajcePKIXExtendedParameters_Builder *new_OrgSpongycastleJcajcePKIXExtendedParameters_Builder_initWithOrgSpongycastleJcajcePKIXExtendedParameters_(OrgSpongycastleJcajcePKIXExtendedParameters *baseParameters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajcePKIXExtendedParameters_Builder *create_OrgSpongycastleJcajcePKIXExtendedParameters_Builder_initWithOrgSpongycastleJcajcePKIXExtendedParameters_(OrgSpongycastleJcajcePKIXExtendedParameters *baseParameters);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajcePKIXExtendedParameters_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_PKIXExtendedParameters")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfDate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfDate")
#ifdef RESTRICT_PdfDate
#define INCLUDE_ALL_PdfDate 0
#else
#define INCLUDE_ALL_PdfDate 1
#endif
#undef RESTRICT_PdfDate

#if !defined (ComAowagieTextPdfPdfDate_) && (INCLUDE_ALL_PdfDate || defined(INCLUDE_ComAowagieTextPdfPdfDate))
#define ComAowagieTextPdfPdfDate_

#define RESTRICT_PdfString 1
#define INCLUDE_ComAowagieTextPdfPdfString 1
#include "PdfString.h"

@class IOSByteArray;
@class JavaUtilCalendar;

/*!
 @brief <CODE>PdfDate</CODE> is the PDF date object.
 <P>
  PDF defines a standard date format. The PDF date format closely follows the format
  defined by the international standard ASN.1 (Abstract Syntax Notation One, defined
  in CCITT X.208 or ISO/IEC 8824). A date is a <CODE>PdfString</CODE> of the form: 
 <BLOCKQUOTE>
  (D:YYYYMMDDHHmmSSOHH'mm') 
 </BLOCKQUOTE>
  This object is described in the 'Portable Document Format Reference Manual version 1.3'
  section 7.2 (page 183-184)
 - seealso: PdfString
 - seealso: java.util.GregorianCalendar
 */
@interface ComAowagieTextPdfPdfDate : ComAowagieTextPdfPdfString

#pragma mark Public

/*!
 @brief Constructs a <CODE>PdfDate</CODE>-object.
 @param d the date that has to be turned into a  <CODE> PdfDate </CODE> -object
 */
- (instancetype)initWithJavaUtilCalendar:(JavaUtilCalendar *)d;

/*!
 @brief Converts a PDF string representing a date into a Calendar.
 @param s the PDF string representing a date
 @return a <CODE>Calendar</CODE> representing the date or <CODE>null</CODE> if the string
  was not a date
 */
+ (JavaUtilCalendar *)decodeWithNSString:(NSString *)s;

/*!
 @brief Gives the W3C format of the PdfDate.
 @return a formatted date
 */
- (NSString *)getW3CDate;

/*!
 @brief Gives the W3C format of the PdfDate.
 @param d the date in the format D:YYYYMMDDHHmmSSOHH'mm'
 @return a formatted date
 */
+ (NSString *)getW3CDateWithNSString:(NSString *)d;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
                    withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfPdfDate)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfDate_initWithJavaUtilCalendar_(ComAowagieTextPdfPdfDate *self, JavaUtilCalendar *d);

FOUNDATION_EXPORT ComAowagieTextPdfPdfDate *new_ComAowagieTextPdfPdfDate_initWithJavaUtilCalendar_(JavaUtilCalendar *d) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfDate *create_ComAowagieTextPdfPdfDate_initWithJavaUtilCalendar_(JavaUtilCalendar *d);

FOUNDATION_EXPORT NSString *ComAowagieTextPdfPdfDate_getW3CDateWithNSString_(NSString *d);

FOUNDATION_EXPORT JavaUtilCalendar *ComAowagieTextPdfPdfDate_decodeWithNSString_(NSString *s);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfDate)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfDate")

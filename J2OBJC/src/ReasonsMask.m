//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jce/provider/ReasonsMask.java
//

#include "J2ObjC_source.h"
#include "ReasonFlags.h"
#include "ReasonsMask.h"

#if !__has_feature(objc_arc)
#error "ReasonsMask must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleJceProviderReasonsMask () {
 @public
  jint _reasons_;
}

- (instancetype)initPackagePrivateWithInt:(jint)reasons;

@end

__attribute__((unused)) static void OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(OrgSpongycastleJceProviderReasonsMask *self, jint reasons);

__attribute__((unused)) static OrgSpongycastleJceProviderReasonsMask *new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(jint reasons) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleJceProviderReasonsMask *create_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(jint reasons);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jce/provider/ReasonsMask.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleJceProviderReasonsMask)

OrgSpongycastleJceProviderReasonsMask *OrgSpongycastleJceProviderReasonsMask_allReasons;


#line 9
@implementation OrgSpongycastleJceProviderReasonsMask


#line 18
- (instancetype)initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags:(OrgSpongycastleAsn1X509ReasonFlags *)reasons {
  OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_(self, reasons);
  return self;
}

- (instancetype)initPackagePrivateWithInt:(jint)reasons {
  OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(self, reasons);
  return self;
}


#line 32
- (instancetype)initPackagePrivate {
  OrgSpongycastleJceProviderReasonsMask_initPackagePrivate(self);
  return self;
}


#line 51
- (void)addReasonsWithOrgSpongycastleJceProviderReasonsMask:(OrgSpongycastleJceProviderReasonsMask *)mask {
  
#line 53
  _reasons_ = _reasons_ | [((OrgSpongycastleJceProviderReasonsMask *) nil_chk(mask)) getReasons];
}


#line 63
- (jboolean)isAllReasons {
  
#line 65
  return _reasons_ == ((OrgSpongycastleJceProviderReasonsMask *) nil_chk(OrgSpongycastleJceProviderReasonsMask_allReasons))->_reasons_ ? true : false;
}


#line 74
- (OrgSpongycastleJceProviderReasonsMask *)intersectWithOrgSpongycastleJceProviderReasonsMask:(OrgSpongycastleJceProviderReasonsMask *)mask {
  
#line 76
  OrgSpongycastleJceProviderReasonsMask *_mask = new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivate();
  [_mask addReasonsWithOrgSpongycastleJceProviderReasonsMask:new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(_reasons_ & [((OrgSpongycastleJceProviderReasonsMask *) nil_chk(mask)) getReasons])];
  return _mask;
}


#line 87
- (jboolean)hasNewReasonsWithOrgSpongycastleJceProviderReasonsMask:(OrgSpongycastleJceProviderReasonsMask *)mask {
  
#line 89
  return ((_reasons_ | ([((OrgSpongycastleJceProviderReasonsMask *) nil_chk(mask)) getReasons] ^ _reasons_)) != 0);
}


#line 97
- (jint)getReasons {
  
#line 99
  return _reasons_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleJceProviderReasonsMask;", 0x0, 4, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 5, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags:);
  methods[1].selector = @selector(initPackagePrivateWithInt:);
  methods[2].selector = @selector(initPackagePrivate);
  methods[3].selector = @selector(addReasonsWithOrgSpongycastleJceProviderReasonsMask:);
  methods[4].selector = @selector(isAllReasons);
  methods[5].selector = @selector(intersectWithOrgSpongycastleJceProviderReasonsMask:);
  methods[6].selector = @selector(hasNewReasonsWithOrgSpongycastleJceProviderReasonsMask:);
  methods[7].selector = @selector(getReasons);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_reasons_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "allReasons", "LOrgSpongycastleJceProviderReasonsMask;", .constantValue.asLong = 0, 0x18, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1X509ReasonFlags;", "I", "addReasons", "LOrgSpongycastleJceProviderReasonsMask;", "intersect", "hasNewReasons", &OrgSpongycastleJceProviderReasonsMask_allReasons };
  static const J2ObjcClassInfo _OrgSpongycastleJceProviderReasonsMask = { "ReasonsMask", "org.spongycastle.jce.provider", ptrTable, methods, fields, 7, 0x0, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJceProviderReasonsMask;
}

+ (void)initialize {
  if (self == [OrgSpongycastleJceProviderReasonsMask class]) {
    OrgSpongycastleJceProviderReasonsMask_allReasons = new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(
#line 40
    OrgSpongycastleAsn1X509ReasonFlags_aACompromise |
#line 41
    OrgSpongycastleAsn1X509ReasonFlags_affiliationChanged | OrgSpongycastleAsn1X509ReasonFlags_cACompromise |
#line 42
    OrgSpongycastleAsn1X509ReasonFlags_certificateHold | OrgSpongycastleAsn1X509ReasonFlags_cessationOfOperation |
#line 43
    OrgSpongycastleAsn1X509ReasonFlags_keyCompromise | OrgSpongycastleAsn1X509ReasonFlags_privilegeWithdrawn |
#line 44
    OrgSpongycastleAsn1X509ReasonFlags_unused | OrgSpongycastleAsn1X509ReasonFlags_superseded);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleJceProviderReasonsMask)
  }
}

@end


#line 18
void OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_(OrgSpongycastleJceProviderReasonsMask *self, OrgSpongycastleAsn1X509ReasonFlags *reasons) {
  NSObject_init(self);
  self->_reasons_ = [((OrgSpongycastleAsn1X509ReasonFlags *) nil_chk(reasons)) intValue];
}


#line 18
OrgSpongycastleJceProviderReasonsMask *new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_(OrgSpongycastleAsn1X509ReasonFlags *reasons) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJceProviderReasonsMask, initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_, reasons)
}


#line 18
OrgSpongycastleJceProviderReasonsMask *create_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_(OrgSpongycastleAsn1X509ReasonFlags *reasons) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJceProviderReasonsMask, initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_, reasons)
}


#line 23
void OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(OrgSpongycastleJceProviderReasonsMask *self, jint reasons) {
  NSObject_init(self);
  self->_reasons_ = reasons;
}


#line 23
OrgSpongycastleJceProviderReasonsMask *new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(jint reasons) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJceProviderReasonsMask, initPackagePrivateWithInt_, reasons)
}


#line 23
OrgSpongycastleJceProviderReasonsMask *create_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(jint reasons) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJceProviderReasonsMask, initPackagePrivateWithInt_, reasons)
}


#line 32
void OrgSpongycastleJceProviderReasonsMask_initPackagePrivate(OrgSpongycastleJceProviderReasonsMask *self) {
  OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithInt_(self,
#line 34
  0);
}


#line 32
OrgSpongycastleJceProviderReasonsMask *new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgSpongycastleJceProviderReasonsMask, initPackagePrivate)
}


#line 32
OrgSpongycastleJceProviderReasonsMask *create_OrgSpongycastleJceProviderReasonsMask_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJceProviderReasonsMask, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJceProviderReasonsMask)

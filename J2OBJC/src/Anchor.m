//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/Anchor.java
//

#include "Anchor.h"
#include "Chunk.h"
#include "DocumentException.h"
#include "Element.h"
#include "ElementListener.h"
#include "J2ObjC_source.h"
#include "Phrase.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"

#if !__has_feature(objc_arc)
#error "Anchor must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextAnchor () {
 @public
  /*!
   @brief This is the name of the <CODE>Anchor</CODE>.
   */
  NSString *name_;
  /*!
   @brief This is the reference of the <CODE>Anchor</CODE>.
   */
  NSString *reference_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextAnchor, name_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextAnchor, reference_, NSString *)

inline jlong ComAowagieTextAnchor_get_serialVersionUID(void);
#define ComAowagieTextAnchor_serialVersionUID -852278536049236911LL
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextAnchor, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/Anchor.java"


#line 74
@implementation ComAowagieTextAnchor

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 92
- (instancetype)init {
  ComAowagieTextAnchor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 101
- (instancetype)initWithComAowagieTextPhrase:(ComAowagieTextPhrase *)phrase {
  ComAowagieTextAnchor_initWithComAowagieTextPhrase_(self, phrase);
  return self;
}


#line 119
- (jboolean)processWithComAowagieTextElementListener:(id<ComAowagieTextElementListener>)listener {
  
#line 121
  @try {
    ComAowagieTextChunk *chunk;
    id<JavaUtilIterator> i = [((JavaUtilArrayList *) nil_chk([self getChunks])) iterator];
    jboolean localDestination = self->reference_ != nil && [self->reference_ java_hasPrefix:@"#"];
    jboolean notGotoOK = true;
    while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
      chunk = (ComAowagieTextChunk *) cast_chk([i next], [ComAowagieTextChunk class]);
      if (self->name_ != nil && notGotoOK && ![((ComAowagieTextChunk *) nil_chk(chunk)) isEmpty]) {
        (void) [((ComAowagieTextChunk *) nil_chk(chunk)) setLocalDestinationWithNSString:self->name_];
        notGotoOK = false;
      }
      if (localDestination) {
        (void) [((ComAowagieTextChunk *) nil_chk(chunk)) setLocalGotoWithNSString:[((NSString *) nil_chk(self->reference_)) java_substring:1]];
      }
      [((id<ComAowagieTextElementListener>) nil_chk(listener)) addWithComAowagieTextElement:chunk];
    }
    return true;
  }
  @catch (ComAowagieTextDocumentException *de) {
    return false;
  }
}


#line 149
- (JavaUtilArrayList *)getChunks {
  
#line 151
  JavaUtilArrayList *tmp = new_JavaUtilArrayList_init();
  ComAowagieTextChunk *chunk;
  id<JavaUtilIterator> i = [self iterator];
  jboolean localDestination = self->reference_ != nil && [self->reference_ java_hasPrefix:@"#"];
  jboolean notGotoOK = true;
  while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
    chunk = (ComAowagieTextChunk *) cast_chk([i next], [ComAowagieTextChunk class]);
    if (self->name_ != nil && notGotoOK && ![((ComAowagieTextChunk *) nil_chk(chunk)) isEmpty]) {
      (void) [((ComAowagieTextChunk *) nil_chk(chunk)) setLocalDestinationWithNSString:self->name_];
      notGotoOK = false;
    }
    if (localDestination) {
      (void) [((ComAowagieTextChunk *) nil_chk(chunk)) setLocalGotoWithNSString:[((NSString *) nil_chk(self->reference_)) java_substring:1]];
    }
    else if (self->reference_ != nil) {
      (void) [((ComAowagieTextChunk *) nil_chk(chunk)) setAnchorWithNSString:self->reference_];
    }
    [tmp addWithId:chunk];
  }
  return tmp;
}


#line 178
- (jint)type {
  
#line 180
  return ComAowagieTextElement_ANCHOR;
}


#line 190
- (void)setNameWithNSString:(NSString *)name {
  self->name_ = name;
}


#line 199
- (void)setReferenceWithNSString:(NSString *)reference {
  self->reference_ = reference;
}


#line 210
- (NSString *)getName {
  return self->name_;
}


#line 219
- (NSString *)getReference {
  return self->reference_;
}


#line 228
- (JavaNetURL *)getUrl {
  @try {
    return new_JavaNetURL_initWithNSString_(self->reference_);
  }
  @catch (JavaNetMalformedURLException *mue) {
    return nil;
  }
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURL;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComAowagieTextPhrase:);
  methods[2].selector = @selector(processWithComAowagieTextElementListener:);
  methods[3].selector = @selector(getChunks);
  methods[4].selector = @selector(type);
  methods[5].selector = @selector(setNameWithNSString:);
  methods[6].selector = @selector(setReferenceWithNSString:);
  methods[7].selector = @selector(getName);
  methods[8].selector = @selector(getReference);
  methods[9].selector = @selector(getUrl);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComAowagieTextAnchor_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "reference_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPhrase;", "process", "LComAowagieTextElementListener;", "setName", "LNSString;", "setReference" };
  static const J2ObjcClassInfo _ComAowagieTextAnchor = { "Anchor", "com.aowagie.text", ptrTable, methods, fields, 7, 0x1, 10, 3, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextAnchor;
}

@end


#line 92
void ComAowagieTextAnchor_init(ComAowagieTextAnchor *self) {
  ComAowagieTextPhrase_initWithFloat_(self, 16);
  self->name_ =
#line 82
  nil;
  self->reference_ =
#line 85
  nil;
}


#line 92
ComAowagieTextAnchor *new_ComAowagieTextAnchor_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextAnchor, init)
}


#line 92
ComAowagieTextAnchor *create_ComAowagieTextAnchor_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextAnchor, init)
}


#line 101
void ComAowagieTextAnchor_initWithComAowagieTextPhrase_(ComAowagieTextAnchor *self, ComAowagieTextPhrase *phrase) {
  ComAowagieTextPhrase_initWithComAowagieTextPhrase_(self, phrase);
  self->name_ =
#line 82
  nil;
  self->reference_ =
#line 85
  nil;
  
#line 103
  if ([phrase isKindOfClass:[ComAowagieTextAnchor class]]) {
    ComAowagieTextAnchor *a = (ComAowagieTextAnchor *) phrase;
    [self setNameWithNSString:((ComAowagieTextAnchor *) nil_chk(a))->name_];
    [self setReferenceWithNSString:a->reference_];
  }
}


#line 101
ComAowagieTextAnchor *new_ComAowagieTextAnchor_initWithComAowagieTextPhrase_(ComAowagieTextPhrase *phrase) {
  J2OBJC_NEW_IMPL(ComAowagieTextAnchor, initWithComAowagieTextPhrase_, phrase)
}


#line 101
ComAowagieTextAnchor *create_ComAowagieTextAnchor_initWithComAowagieTextPhrase_(ComAowagieTextPhrase *phrase) {
  J2OBJC_CREATE_IMPL(ComAowagieTextAnchor, initWithComAowagieTextPhrase_, phrase)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextAnchor)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/pkcs/PrivateKeyInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PrivateKeyInfo")
#ifdef RESTRICT_PrivateKeyInfo
#define INCLUDE_ALL_PrivateKeyInfo 0
#else
#define INCLUDE_ALL_PrivateKeyInfo 1
#endif
#undef RESTRICT_PrivateKeyInfo

#if !defined (OrgSpongycastleAsn1PkcsPrivateKeyInfo_) && (INCLUDE_ALL_PrivateKeyInfo || defined(INCLUDE_OrgSpongycastleAsn1PkcsPrivateKeyInfo))
#define OrgSpongycastleAsn1PkcsPrivateKeyInfo_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1ASN1Set;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;
@protocol OrgSpongycastleAsn1ASN1Encodable;

@interface OrgSpongycastleAsn1PkcsPrivateKeyInfo : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algId
                              withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)privateKey;

- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algId
                              withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)privateKey
                                    withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)attributes;

/*!
 @param seq
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

/*!
 */
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getAlgorithmId;

- (OrgSpongycastleAsn1ASN1Set *)getAttributes;

+ (OrgSpongycastleAsn1PkcsPrivateKeyInfo *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                  withBoolean:(jboolean)explicit_;

+ (OrgSpongycastleAsn1PkcsPrivateKeyInfo *)getInstanceWithId:(id)obj;

/*!
 */
- (OrgSpongycastleAsn1ASN1Primitive *)getPrivateKey;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getPrivateKeyAlgorithm;

- (id<OrgSpongycastleAsn1ASN1Encodable>)parsePrivateKey;

/*!
 @brief write out an RSA private key with its associated information
  as described in PKCS8.
 @code

       PrivateKeyInfo ::= SEQUENCE {
                               version Version,
                               privateKeyAlgorithm AlgorithmIdentifier {{PrivateKeyAlgorithms}},
                               privateKey PrivateKey,
                               attributes [0] IMPLICIT Attributes OPTIONAL 
                           }
       Version ::= INTEGER {v1(0)} (v1,...)
       PrivateKey ::= OCTET STRING
       Attributes ::= SET OF Attribute 
  
@endcode
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1PkcsPrivateKeyInfo)

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *OrgSpongycastleAsn1PkcsPrivateKeyInfo_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *OrgSpongycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1PkcsPrivateKeyInfo *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, id<OrgSpongycastleAsn1ASN1Encodable> privateKey);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *new_OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, id<OrgSpongycastleAsn1ASN1Encodable> privateKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *create_OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, id<OrgSpongycastleAsn1ASN1Encodable> privateKey);

FOUNDATION_EXPORT void OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1PkcsPrivateKeyInfo *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, id<OrgSpongycastleAsn1ASN1Encodable> privateKey, OrgSpongycastleAsn1ASN1Set *attributes);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *new_OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, id<OrgSpongycastleAsn1ASN1Encodable> privateKey, OrgSpongycastleAsn1ASN1Set *attributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *create_OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Encodable_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, id<OrgSpongycastleAsn1ASN1Encodable> privateKey, OrgSpongycastleAsn1ASN1Set *attributes);

FOUNDATION_EXPORT void OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1PkcsPrivateKeyInfo *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *new_OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPrivateKeyInfo *create_OrgSpongycastleAsn1PkcsPrivateKeyInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1PkcsPrivateKeyInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_PrivateKeyInfo")

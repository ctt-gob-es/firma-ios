//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/asic/AOCAdESASiCSSigner.java
//

#include "AOCAdESASiCSSigner.h"
#include "AOCAdESSigner.h"
#include "AOCoSigner.h"
#include "AOCounterSigner.h"
#include "AOException.h"
#include "AOSignInfo.h"
#include "AOTreeModel.h"
#include "ASiCUtil.h"
#include "CAdESASiCExtraParams.h"
#include "CAdESExtraParams.h"
#include "CounterSignTarget.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/security/PrivateKey.h"
#include "java/util/Properties.h"
#include "java/util/logging/Logger.h"

#if !__has_feature(objc_arc)
#error "AOCAdESASiCSSigner must be compiled with ARC (-fobjc-arc)"
#endif

inline JavaUtilLoggingLogger *EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner, LOGGER, JavaUtilLoggingLogger *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/asic/AOCAdESASiCSSigner.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner)


#line 33
@implementation EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 50
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)algorithm
         withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
             withJavaUtilProperties:(JavaUtilProperties *)xParams {
  
#line 58
  JavaUtilProperties *extraParams = xParams != nil ? xParams : new_JavaUtilProperties_init();
  
#line 61
  (void) [extraParams putWithId:EsGobAfirmaSignersCadesCAdESExtraParams_MODE withId:@"explicit"];
  
#line 63
  IOSByteArray *signature = [new_EsGobAfirmaSignersCadesAOCAdESSigner_init() signWithByteArray:data withNSString:algorithm withJavaSecurityPrivateKey:key withJavaSecurityCertCertificateArray:certChain withJavaUtilProperties:extraParams];
  
#line 65
  return EsGobAfirmaCoreSignersAsicASiCUtil_createSContainerWithByteArray_withByteArray_withNSString_withNSString_(
#line 66
  signature,
#line 67
  data,
#line 68
  EsGobAfirmaCoreSignersAsicASiCUtil_ENTRY_NAME_BINARY_SIGNATURE,
#line 69
  [extraParams getPropertyWithNSString:EsGobAfirmaSignersCadesAsicCAdESASiCExtraParams_ASICS_FILENAME]);
}


#line 73
- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                             withBoolean:(jboolean)asSimpleSignInfo {
  
#line 77
  return [self getSignersStructureWithByteArray:sign withJavaUtilProperties:nil withBoolean:asSimpleSignInfo];
}

- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                  withJavaUtilProperties:(JavaUtilProperties *)params
                                                             withBoolean:(jboolean)asSimpleSignInfo {
  
#line 84
  return [new_EsGobAfirmaSignersCadesAOCAdESSigner_init() getSignersStructureWithByteArray:EsGobAfirmaCoreSignersAsicASiCUtil_getASiCSBinarySignatureWithByteArray_(
#line 85
  sign) withBoolean:
#line 86
  asSimpleSignInfo];
}


#line 90
- (jboolean)isSignWithByteArray:(IOSByteArray *)signData
         withJavaUtilProperties:(JavaUtilProperties *)params {
  IOSByteArray *sign;
  @try {
    sign = EsGobAfirmaCoreSignersAsicASiCUtil_getASiCSBinarySignatureWithByteArray_(signData);
  }
  @catch (JavaLangException *e) {
    return false;
  }
  return [new_EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_init() isSignWithByteArray:sign];
}

- (jboolean)isSignWithByteArray:(IOSByteArray *)is {
  
#line 104
  return [self isSignWithByteArray:is withJavaUtilProperties:nil];
}


#line 107
- (jboolean)isValidDataFileWithByteArray:(IOSByteArray *)data {
  
#line 109
  if (data == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_LOGGER)) warningWithNSString:@"Se han introducido datos nulos para su comprobacion"];
    return false;
  }
  return true;
}


#line 116
- (NSString *)getSignedNameWithNSString:(NSString *)originalName
                           withNSString:(NSString *)inText {
  return JreStrcat("$$$", originalName, (inText != nil ? inText : @""), @".asics");
}

- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)sign
                withJavaUtilProperties:(JavaUtilProperties *)params {
  return EsGobAfirmaCoreSignersAsicASiCUtil_getASiCSDataWithByteArray_(sign);
}

- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)signData {
  
#line 128
  return [self getDataWithByteArray:signData withJavaUtilProperties:nil];
}


#line 131
- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)data
                                        withJavaUtilProperties:(JavaUtilProperties *)params {
  return [new_EsGobAfirmaSignersCadesAOCAdESSigner_init() getSignInfoWithByteArray:EsGobAfirmaCoreSignersAsicASiCUtil_getASiCSBinarySignatureWithByteArray_(data)];
}

- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)signData {
  
#line 138
  return [self getSignInfoWithByteArray:signData withJavaUtilProperties:nil];
}


#line 179
- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)data
                        withByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)extraParams {
  
#line 186
  @try {
    return [((id<EsGobAfirmaCoreSignersAOCoSigner>) nil_chk(((id<EsGobAfirmaCoreSignersAOCoSigner>) cast_check([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(IOSClass_forName_(@"es.gob.afirma.signers.multi.cades.asic.AOCAdESASiCSCoSigner"))) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], EsGobAfirmaCoreSignersAOCoSigner_class_())))) cosignWithByteArray:
#line 188
    data withByteArray:
#line 189
    sign withNSString:
#line 190
    algorithm withJavaSecurityPrivateKey:
#line 191
    key withJavaSecurityCertCertificateArray:
#line 192
    certChain withJavaUtilProperties:
#line 193
    extraParams];
  }
  @catch (
#line 196
  JavaLangInstantiationException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error al instanciar la clase de cofirmas CAdES: ", e), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha encontrado la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC por falta de un constructor por defecto sin parametros: ", e), e);
  }
  @catch (JavaLangSecurityException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC por motivos de seguridad: ", e), e);
  }
}


#line 249
- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)extraParams {
  
#line 255
  return [self cosignWithByteArray:nil withByteArray:sign withNSString:algorithm withJavaSecurityPrivateKey:key withJavaSecurityCertCertificateArray:certChain withJavaUtilProperties:extraParams];
}


#line 258
- (IOSByteArray *)countersignWithByteArray:(IOSByteArray *)sign
                              withNSString:(NSString *)algorithm
withEsGobAfirmaCoreSignersCounterSignTarget:(EsGobAfirmaCoreSignersCounterSignTarget *)targetType
                         withNSObjectArray:(IOSObjectArray *)targets
                withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
      withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
                    withJavaUtilProperties:(JavaUtilProperties *)extraParams {
  
#line 267
  @try {
    return [((id<EsGobAfirmaCoreSignersAOCounterSigner>) nil_chk(((id<EsGobAfirmaCoreSignersAOCounterSigner>) cast_check([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(IOSClass_forName_(@"es.gob.afirma.signers.multi.cades.asic.AOCAdESASiCSCounterSigner"))) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], EsGobAfirmaCoreSignersAOCounterSigner_class_())))) countersignWithByteArray:
#line 269
    sign withNSString:
#line 270
    algorithm withEsGobAfirmaCoreSignersCounterSignTarget:
#line 271
    targetType withNSObjectArray:
#line 272
    targets withJavaSecurityPrivateKey:
#line 273
    key withJavaSecurityCertCertificateArray:
#line 274
    certChain withJavaUtilProperties:
#line 275
    extraParams];
  }
  @catch (
#line 278
  JavaLangInstantiationException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error al instanciar la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha encontrado la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC: ", e), e);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC por falta de un constructor por defecto sin parametros: ", e), e);
  }
  @catch (JavaLangSecurityException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES ASiC por motivos de seguridad: ", e), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreUtilTreeAOTreeModel;", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreUtilTreeAOTreeModel;", 0x1, 3, 6, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, 9, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 10, 9, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 14, 8, 5, -1, -1, -1 },
    { NULL, "[B", 0x1, 14, 10, 5, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersAOSignInfo;", 0x1, 15, 8, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersAOSignInfo;", 0x1, 15, 10, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 16, 17, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 16, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 18, 19, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(signWithByteArray:withNSString:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  methods[2].selector = @selector(getSignersStructureWithByteArray:withBoolean:);
  methods[3].selector = @selector(getSignersStructureWithByteArray:withJavaUtilProperties:withBoolean:);
  methods[4].selector = @selector(isSignWithByteArray:withJavaUtilProperties:);
  methods[5].selector = @selector(isSignWithByteArray:);
  methods[6].selector = @selector(isValidDataFileWithByteArray:);
  methods[7].selector = @selector(getSignedNameWithNSString:withNSString:);
  methods[8].selector = @selector(getDataWithByteArray:withJavaUtilProperties:);
  methods[9].selector = @selector(getDataWithByteArray:);
  methods[10].selector = @selector(getSignInfoWithByteArray:withJavaUtilProperties:);
  methods[11].selector = @selector(getSignInfoWithByteArray:);
  methods[12].selector = @selector(cosignWithByteArray:withByteArray:withNSString:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  methods[13].selector = @selector(cosignWithByteArray:withNSString:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  methods[14].selector = @selector(countersignWithByteArray:withNSString:withEsGobAfirmaCoreSignersCounterSignTarget:withNSObjectArray:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
  };
  static const void *ptrTable[] = { "sign", "[BLNSString;LJavaSecurityPrivateKey;[LJavaSecurityCertCertificate;LJavaUtilProperties;", "LEsGobAfirmaCoreAOException;LJavaIoIOException;", "getSignersStructure", "[BZ", "LEsGobAfirmaCoreAOInvalidFormatException;LJavaIoIOException;", "[BLJavaUtilProperties;Z", "isSign", "[BLJavaUtilProperties;", "LJavaIoIOException;", "[B", "isValidDataFile", "getSignedName", "LNSString;LNSString;", "getData", "getSignInfo", "cosign", "[B[BLNSString;LJavaSecurityPrivateKey;[LJavaSecurityCertCertificate;LJavaUtilProperties;", "countersign", "[BLNSString;LEsGobAfirmaCoreSignersCounterSignTarget;[LNSObject;LJavaSecurityPrivateKey;[LJavaSecurityCertCertificate;LJavaUtilProperties;", &EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_LOGGER };
  static const J2ObjcClassInfo _EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner = { "AOCAdESASiCSSigner", "es.gob.afirma.signers.cades.asic", ptrTable, methods, fields, 7, 0x11, 15, 1, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner;
}

+ (void)initialize {
  if (self == [EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner class]) {
    EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 35
    @"es.agob.afirma");
    J2OBJC_SET_INITIALIZED(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner)
  }
}

@end


#line 33
void EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_init(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner *self) {
  NSObject_init(self);
}


#line 33
EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner *new_EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner, init)
}


#line 33
EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner *create_EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersCadesAsicAOCAdESASiCSSigner)

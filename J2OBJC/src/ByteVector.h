//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/hyphenation/ByteVector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ByteVector")
#ifdef RESTRICT_ByteVector
#define INCLUDE_ALL_ByteVector 0
#else
#define INCLUDE_ALL_ByteVector 1
#endif
#undef RESTRICT_ByteVector

#if !defined (ComAowagieTextPdfHyphenationByteVector_) && (INCLUDE_ALL_ByteVector || defined(INCLUDE_ComAowagieTextPdfHyphenationByteVector))
#define ComAowagieTextPdfHyphenationByteVector_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;

/*!
 @brief This class implements a simple byte vector with access to the
  underlying array.
 @author Carlos Villegas (cav@@uniscope.co.jp)
 */
@interface ComAowagieTextPdfHyphenationByteVector : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)initPackagePrivate;

- (IOSByteArray *)getArray;

#pragma mark Package-Private

/*!
 @brief This is to implement memory allocation in the array.Like malloc().
 @param size Size
 @return memory alloc
 */
- (jint)alloc__WithInt:(jint)size OBJC_METHOD_FAMILY_NONE;

- (jbyte)getWithInt:(jint)index;

/*!
 @brief return number of items in array
 @return length
 */
- (jint)length;

- (void)trimToSize;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfHyphenationByteVector)

FOUNDATION_EXPORT void ComAowagieTextPdfHyphenationByteVector_initPackagePrivate(ComAowagieTextPdfHyphenationByteVector *self);

FOUNDATION_EXPORT ComAowagieTextPdfHyphenationByteVector *new_ComAowagieTextPdfHyphenationByteVector_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfHyphenationByteVector *create_ComAowagieTextPdfHyphenationByteVector_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfHyphenationByteVector)

#endif

#pragma pop_macro("INCLUDE_ALL_ByteVector")

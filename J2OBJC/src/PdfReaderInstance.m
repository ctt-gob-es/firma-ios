//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfReaderInstance.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PRStream.h"
#include "PdfArray.h"
#include "PdfDictionary.h"
#include "PdfImportedPage.h"
#include "PdfIndirectObject.h"
#include "PdfIndirectReference.h"
#include "PdfLiteral.h"
#include "PdfName.h"
#include "PdfNumber.h"
#include "PdfObject.h"
#include "PdfReader.h"
#include "PdfReaderInstance.h"
#include "PdfRectangle.h"
#include "PdfStream.h"
#include "PdfWriter.h"
#include "RandomAccessFileOrArray.h"
#include "Rectangle.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"

#if !__has_feature(objc_arc)
#error "PdfReaderInstance must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfReaderInstance () {
 @public
  IOSIntArray *myXref_;
  ComAowagieTextPdfPdfReader *reader_;
  ComAowagieTextPdfRandomAccessFileOrArray *file_;
  JavaUtilHashMap *importedPages_;
  ComAowagieTextPdfPdfWriter *writer_;
  JavaUtilHashMap *visited_;
  JavaUtilArrayList *nextRound_;
}

- (void)writeAllVisited;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfReaderInstance, myXref_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfReaderInstance, reader_, ComAowagieTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfReaderInstance, file_, ComAowagieTextPdfRandomAccessFileOrArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfReaderInstance, importedPages_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfReaderInstance, writer_, ComAowagieTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfReaderInstance, visited_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfReaderInstance, nextRound_, JavaUtilArrayList *)

inline ComAowagieTextPdfPdfLiteral *ComAowagieTextPdfPdfReaderInstance_get_IDENTITYMATRIX(void);
static ComAowagieTextPdfPdfLiteral *ComAowagieTextPdfPdfReaderInstance_IDENTITYMATRIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfReaderInstance, IDENTITYMATRIX, ComAowagieTextPdfPdfLiteral *)

inline ComAowagieTextPdfPdfNumber *ComAowagieTextPdfPdfReaderInstance_get_ONE(void);
static ComAowagieTextPdfPdfNumber *ComAowagieTextPdfPdfReaderInstance_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfReaderInstance, ONE, ComAowagieTextPdfPdfNumber *)

__attribute__((unused)) static void ComAowagieTextPdfPdfReaderInstance_writeAllVisited(ComAowagieTextPdfPdfReaderInstance *self);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfReaderInstance.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfPdfReaderInstance)


#line 61
@implementation ComAowagieTextPdfPdfReaderInstance


#line 72
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                  withComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  ComAowagieTextPdfPdfReaderInstance_initPackagePrivateWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(self, reader, writer);
  return self;
}


#line 79
- (ComAowagieTextPdfPdfReader *)getReader {
  return self->reader_;
}

- (ComAowagieTextPdfPdfImportedPage *)getImportedPageWithInt:(jint)pageNumber {
  if (![((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) isOpenedWithFullPermissions]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"PdfReader not opened with owner password");
  }
  if (pageNumber < 1 || pageNumber > [self->reader_ getNumberOfPages]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Invalid page number: ", pageNumber));
  }
  JavaLangInteger *i = new_JavaLangInteger_initWithInt_(pageNumber);
  ComAowagieTextPdfPdfImportedPage *pageT = (ComAowagieTextPdfPdfImportedPage *) cast_chk([((JavaUtilHashMap *) nil_chk(self->importedPages_)) getWithId:i], [ComAowagieTextPdfPdfImportedPage class]);
  if (pageT == nil) {
    pageT = new_ComAowagieTextPdfPdfImportedPage_initWithComAowagieTextPdfPdfReaderInstance_withComAowagieTextPdfPdfWriter_withInt_(self, self->writer_, pageNumber);
    (void) [self->importedPages_ putWithId:i withId:pageT];
  }
  return pageT;
}

- (jint)getNewObjectNumberWithInt:(jint)number
                          withInt:(jint)generation {
  
#line 100
  if (IOSIntArray_Get(nil_chk(self->myXref_), number) == 0) {
    *IOSIntArray_GetRef(self->myXref_, number) = [((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) getIndirectReferenceNumber];
    [((JavaUtilArrayList *) nil_chk(self->nextRound_)) addWithId:new_JavaLangInteger_initWithInt_(number)];
  }
  return IOSIntArray_Get(self->myXref_, number);
}


#line 107
- (ComAowagieTextPdfRandomAccessFileOrArray *)getReaderFile {
  return self->file_;
}

- (ComAowagieTextPdfPdfObject *)getResourcesWithInt:(jint)pageNumber {
  ComAowagieTextPdfPdfObject *obj = ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNReleaseWithInt:pageNumber])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES)]);
  return obj;
}


#line 124
- (ComAowagieTextPdfPdfStream *)getFormXObjectWithInt:(jint)pageNumber
                                              withInt:(jint)compressionLevel {
  
#line 125
  ComAowagieTextPdfPdfDictionary *page = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNReleaseWithInt:pageNumber];
  ComAowagieTextPdfPdfObject *contents = ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(page)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CONTENTS)]);
  ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
  IOSByteArray *bout = nil;
  if (contents != nil) {
    if ([contents isStream]) {
      [dic putAllWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPRStream *) cast_chk(contents, [ComAowagieTextPdfPRStream class])];
    }
    else {
      
#line 133
      bout = [self->reader_ getPageContentWithInt:pageNumber withComAowagieTextPdfRandomAccessFileOrArray:self->file_];
    }
  }
  else {
    
#line 136
    bout = [IOSByteArray newArrayWithLength:0];
  }
  [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES) withComAowagieTextPdfPdfObject:ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([page getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES)])];
  [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, XOBJECT)];
  [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, FORM)];
  ComAowagieTextPdfPdfImportedPage *impPage = (ComAowagieTextPdfPdfImportedPage *) cast_chk([((JavaUtilHashMap *) nil_chk(self->importedPages_)) getWithId:new_JavaLangInteger_initWithInt_(pageNumber)], [ComAowagieTextPdfPdfImportedPage class]);
  [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, BBOX) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithComAowagieTextRectangle_([((ComAowagieTextPdfPdfImportedPage *) nil_chk(impPage)) getBoundingBox])];
  ComAowagieTextPdfPdfArray *matrix = [impPage getMatrix];
  if (matrix == nil) {
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MATRIX) withComAowagieTextPdfPdfObject:ComAowagieTextPdfPdfReaderInstance_IDENTITYMATRIX];
  }
  else {
    
#line 147
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MATRIX) withComAowagieTextPdfPdfObject:matrix];
  }
  [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FORMTYPE) withComAowagieTextPdfPdfObject:ComAowagieTextPdfPdfReaderInstance_ONE];
  ComAowagieTextPdfPRStream *stream;
  if (bout == nil) {
    stream = new_ComAowagieTextPdfPRStream_initWithComAowagieTextPdfPRStream_withComAowagieTextPdfPdfDictionary_((ComAowagieTextPdfPRStream *) cast_chk(contents, [ComAowagieTextPdfPRStream class]), dic);
  }
  else {
    stream = new_ComAowagieTextPdfPRStream_initWithComAowagieTextPdfPdfReader_withByteArray_withInt_(self->reader_, bout, compressionLevel);
    [stream putAllWithComAowagieTextPdfPdfDictionary:dic];
  }
  return stream;
}


#line 161
- (void)writeAllVisited {
  ComAowagieTextPdfPdfReaderInstance_writeAllVisited(self);
}


#line 176
- (void)writeAllPages {
  @try {
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->file_)) reOpen];
    for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilHashMap *) nil_chk(self->importedPages_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      ComAowagieTextPdfPdfImportedPage *ip = (ComAowagieTextPdfPdfImportedPage *) cast_chk([it next], [ComAowagieTextPdfPdfImportedPage class]);
      (void) [((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) addToBodyWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfImportedPage *) nil_chk(ip)) getFormXObjectWithInt:[self->writer_ getCompressionLevel]] withComAowagieTextPdfPdfIndirectReference:[ip getIndirectReference]];
    }
    ComAowagieTextPdfPdfReaderInstance_writeAllVisited(self);
  }
  @finally {
    @try {
      [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) close];
      [self->file_ close];
    }
    @catch (JavaLangException *e) {
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfReader;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfImportedPage;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfRandomAccessFileOrArray;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfObject;", 0x0, 5, 2, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfStream;", 0x0, 6, 4, 7, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 7, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfPdfReader:withComAowagieTextPdfPdfWriter:);
  methods[1].selector = @selector(getReader);
  methods[2].selector = @selector(getImportedPageWithInt:);
  methods[3].selector = @selector(getNewObjectNumberWithInt:withInt:);
  methods[4].selector = @selector(getReaderFile);
  methods[5].selector = @selector(getResourcesWithInt:);
  methods[6].selector = @selector(getFormXObjectWithInt:withInt:);
  methods[7].selector = @selector(writeAllVisited);
  methods[8].selector = @selector(writeAllPages);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "IDENTITYMATRIX", "LComAowagieTextPdfPdfLiteral;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "ONE", "LComAowagieTextPdfPdfNumber;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "myXref_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reader_", "LComAowagieTextPdfPdfReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "file_", "LComAowagieTextPdfRandomAccessFileOrArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "importedPages_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "writer_", "LComAowagieTextPdfPdfWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "visited_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nextRound_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfReader;LComAowagieTextPdfPdfWriter;", "getImportedPage", "I", "getNewObjectNumber", "II", "getResources", "getFormXObject", "LJavaIoIOException;", &ComAowagieTextPdfPdfReaderInstance_IDENTITYMATRIX, &ComAowagieTextPdfPdfReaderInstance_ONE };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfReaderInstance = { "PdfReaderInstance", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 9, 9, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfReaderInstance;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfPdfReaderInstance class]) {
    ComAowagieTextPdfPdfReaderInstance_IDENTITYMATRIX = new_ComAowagieTextPdfPdfLiteral_initWithNSString_(
#line 62
    @"[1 0 0 1 0 0]");
    ComAowagieTextPdfPdfReaderInstance_ONE = new_ComAowagieTextPdfPdfNumber_initWithInt_(
#line 63
    1);
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfPdfReaderInstance)
  }
}

@end


#line 72
void ComAowagieTextPdfPdfReaderInstance_initPackagePrivateWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfReaderInstance *self, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfWriter *writer) {
  NSObject_init(self);
  self->importedPages_ = new_JavaUtilLinkedHashMap_init();
  self->visited_ = new_JavaUtilLinkedHashMap_init();
  self->nextRound_ = new_JavaUtilArrayList_init();
  
#line 73
  self->reader_ = reader;
  self->writer_ = writer;
  self->file_ = [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getSafeFile];
  self->myXref_ = [IOSIntArray newArrayWithLength:[reader getXrefSize]];
}


#line 72
ComAowagieTextPdfPdfReaderInstance *new_ComAowagieTextPdfPdfReaderInstance_initPackagePrivateWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfReaderInstance, initPackagePrivateWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_, reader, writer)
}


#line 72
ComAowagieTextPdfPdfReaderInstance *create_ComAowagieTextPdfPdfReaderInstance_initPackagePrivateWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfReaderInstance, initPackagePrivateWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_, reader, writer)
}


#line 161
void ComAowagieTextPdfPdfReaderInstance_writeAllVisited(ComAowagieTextPdfPdfReaderInstance *self) {
  while (![((JavaUtilArrayList *) nil_chk(self->nextRound_)) isEmpty]) {
    JavaUtilArrayList *vec = self->nextRound_;
    self->nextRound_ = new_JavaUtilArrayList_init();
    for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(vec)) size]; ++k) {
      JavaLangInteger *i = (JavaLangInteger *) cast_chk([vec getWithInt:k], [JavaLangInteger class]);
      if (![((JavaUtilHashMap *) nil_chk(self->visited_)) containsKeyWithId:i]) {
        (void) [self->visited_ putWithId:i withId:nil];
        jint n = [((JavaLangInteger *) nil_chk(i)) intValue];
        (void) [((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) addToBodyWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPdfObjectReleaseWithInt:n] withInt:IOSIntArray_Get(nil_chk(self->myXref_), n)];
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfReaderInstance)

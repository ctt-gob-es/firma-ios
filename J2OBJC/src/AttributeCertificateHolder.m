//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cert/AttributeCertificateHolder.java
//

#include "ASN1Encodable.h"
#include "ASN1Enumerated.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "AttributeCertificateHolder.h"
#include "DERBitString.h"
#include "DigestCalculator.h"
#include "DigestCalculatorProvider.h"
#include "GeneralName.h"
#include "GeneralNames.h"
#include "Holder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "IssuerSerial.h"
#include "J2ObjC_source.h"
#include "ObjectDigestInfo.h"
#include "SubjectPublicKeyInfo.h"
#include "X500Name.h"
#include "X509CertificateHolder.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#if !__has_feature(objc_arc)
#error "AttributeCertificateHolder must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCertAttributeCertificateHolder ()

- (OrgSpongycastleAsn1X509GeneralNames *)generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)principal;

- (jboolean)matchesDNWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)subject
                 withOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)targets;

- (IOSObjectArray *)getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names;

@end

inline id<OrgSpongycastleOperatorDigestCalculatorProvider> OrgSpongycastleCertAttributeCertificateHolder_get_digestCalculatorProvider(void);
inline id<OrgSpongycastleOperatorDigestCalculatorProvider> OrgSpongycastleCertAttributeCertificateHolder_set_digestCalculatorProvider(id<OrgSpongycastleOperatorDigestCalculatorProvider> value);
static id<OrgSpongycastleOperatorDigestCalculatorProvider> OrgSpongycastleCertAttributeCertificateHolder_digestCalculatorProvider;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCertAttributeCertificateHolder, digestCalculatorProvider, id<OrgSpongycastleOperatorDigestCalculatorProvider>)

__attribute__((unused)) static OrgSpongycastleAsn1X509GeneralNames *OrgSpongycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleAsn1X500X500Name *principal);

__attribute__((unused)) static jboolean OrgSpongycastleCertAttributeCertificateHolder_matchesDNWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleAsn1X500X500Name *subject, OrgSpongycastleAsn1X509GeneralNames *targets);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleCertAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray_(OrgSpongycastleCertAttributeCertificateHolder *self, IOSObjectArray *names);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cert/AttributeCertificateHolder.java"


#line 44
@implementation OrgSpongycastleCertAttributeCertificateHolder


#line 51
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 62
- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuerName
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuerName, serialNumber);
  return self;
}


#line 75
- (instancetype)initWithOrgSpongycastleCertX509CertificateHolder:(OrgSpongycastleCertX509CertificateHolder *)cert {
  OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleCertX509CertificateHolder_(self, cert);
  return self;
}


#line 86
- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)principal {
  OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_(self, principal);
  return self;
}


#line 114
- (instancetype)initWithInt:(jint)digestedObjectType
withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)digestAlgorithm
withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)otherObjectTypeID
              withByteArray:(IOSByteArray *)objectDigest {
  OrgSpongycastleCertAttributeCertificateHolder_initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_(self, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest);
  return self;
}


#line 136
- (jint)getDigestedObjectType {
  
#line 138
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 140
    return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1ASN1Enumerated *) nil_chk([((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestedObjectType])) getValue])) intValue];
  }
  
#line 143
  return -1;
}


#line 151
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm {
  
#line 153
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 155
    return [((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestAlgorithm];
  }
  return nil;
}


#line 165
- (IOSByteArray *)getObjectDigest {
  
#line 167
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 169
    return [((OrgSpongycastleAsn1DERBitString *) nil_chk([((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getObjectDigest])) getBytes];
  }
  return nil;
}


#line 180
- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getOtherObjectTypeID {
  
#line 182
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 184
    (void) new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getOtherObjectTypeID])) getId]);
  }
  return nil;
}


#line 189
- (OrgSpongycastleAsn1X509GeneralNames *)generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)principal {
  return OrgSpongycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name_(self, principal);
}


#line 194
- (jboolean)matchesDNWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)subject
                 withOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)targets {
  return OrgSpongycastleCertAttributeCertificateHolder_matchesDNWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1X509GeneralNames_(self, subject, targets);
}


#line 214
- (IOSObjectArray *)getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names {
  return OrgSpongycastleCertAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray_(self, names);
}


#line 236
- (IOSObjectArray *)getEntityNames {
  
#line 238
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getEntityName] != nil) {
    
#line 240
    return OrgSpongycastleCertAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray_(self, [((OrgSpongycastleAsn1X509GeneralNames *) nil_chk([holder_ getEntityName])) getNames]);
  }
  
#line 243
  return nil;
}


#line 251
- (IOSObjectArray *)getIssuer {
  
#line 253
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 255
    return OrgSpongycastleCertAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray_(self, [((OrgSpongycastleAsn1X509GeneralNames *) nil_chk([((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer])) getNames]);
  }
  
#line 258
  return nil;
}


#line 268
- (JavaMathBigInteger *)getSerialNumber {
  
#line 270
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 272
    return [((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) getValue];
  }
  
#line 275
  return nil;
}


#line 278
- (id)java_clone {
  
#line 280
  return new_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_((OrgSpongycastleAsn1ASN1Sequence *) cast_chk([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) toASN1Primitive], [OrgSpongycastleAsn1ASN1Sequence class]));
}


#line 283
- (jboolean)matchWithId:(id)obj {
  
#line 285
  if (!([obj isKindOfClass:[OrgSpongycastleCertX509CertificateHolder class]])) {
    
#line 287
    return false;
  }
  
#line 290
  OrgSpongycastleCertX509CertificateHolder *x509Cert = (OrgSpongycastleCertX509CertificateHolder *) cast_chk(obj, [OrgSpongycastleCertX509CertificateHolder class]);
  
#line 292
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 294
    return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) getValue])) isEqual:[((OrgSpongycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getSerialNumber]] && OrgSpongycastleCertAttributeCertificateHolder_matchesDNWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1X509GeneralNames_(self,
#line 295
    [x509Cert getIssuer], [((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer]);
  }
  
#line 298
  if ([holder_ getEntityName] != nil) {
    
#line 300
    if (OrgSpongycastleCertAttributeCertificateHolder_matchesDNWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1X509GeneralNames_(self, [((OrgSpongycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getSubject],
#line 301
    [holder_ getEntityName])) {
      
#line 303
      return true;
    }
  }
  
#line 307
  if ([holder_ getObjectDigestInfo] != nil) {
    
#line 309
    @try {
      
#line 311
      id<OrgSpongycastleOperatorDigestCalculator> digCalc = [((id<OrgSpongycastleOperatorDigestCalculatorProvider>) nil_chk(OrgSpongycastleCertAttributeCertificateHolder_digestCalculatorProvider)) getWithOrgSpongycastleAsn1X509AlgorithmIdentifier:[((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestAlgorithm]];
      JavaIoOutputStream *digOut = [((id<OrgSpongycastleOperatorDigestCalculator>) nil_chk(digCalc)) getOutputStream];
      
#line 314
      switch ([self getDigestedObjectType]) {
        
#line 316
        case OrgSpongycastleAsn1X509ObjectDigestInfo_publicKey:
        
#line 318
        [((JavaIoOutputStream *) nil_chk(digOut)) writeWithByteArray:[((OrgSpongycastleAsn1X509SubjectPublicKeyInfo *) nil_chk([((OrgSpongycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getSubjectPublicKeyInfo])) getEncoded]];
        break;
        case OrgSpongycastleAsn1X509ObjectDigestInfo_publicKeyCert:
        [((JavaIoOutputStream *) nil_chk(digOut)) writeWithByteArray:[((OrgSpongycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getEncoded]];
        break;
      }
      
#line 325
      [((JavaIoOutputStream *) nil_chk(digOut)) close];
      
#line 327
      if (!OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_([digCalc getDigest], [self getObjectDigest])) {
        
#line 329
        return false;
      }
    }
    @catch (JavaLangException *e) {
      
#line 334
      return false;
    }
  }
  
#line 338
  return false;
}


#line 341
- (jboolean)isEqual:(id)obj {
  
#line 343
  if (JreObjectEqualsEquals(obj, self)) {
    
#line 345
    return true;
  }
  
#line 348
  if (!([obj isKindOfClass:[OrgSpongycastleCertAttributeCertificateHolder class]])) {
    
#line 350
    return false;
  }
  
#line 353
  OrgSpongycastleCertAttributeCertificateHolder *other = (OrgSpongycastleCertAttributeCertificateHolder *) cast_chk(obj, [OrgSpongycastleCertAttributeCertificateHolder class]);
  
#line 355
  return [((OrgSpongycastleAsn1X509Holder *) nil_chk(self->holder_)) isEqual:((OrgSpongycastleCertAttributeCertificateHolder *) nil_chk(other))->holder_];
}


#line 358
- (NSUInteger)hash {
  
#line 360
  return ((jint) [((OrgSpongycastleAsn1X509Holder *) nil_chk(self->holder_)) hash]);
}


#line 369
+ (void)setDigestCalculatorProviderWithOrgSpongycastleOperatorDigestCalculatorProvider:(id<OrgSpongycastleOperatorDigestCalculatorProvider>)digCalcProvider {
  OrgSpongycastleCertAttributeCertificateHolder_setDigestCalculatorProviderWithOrgSpongycastleOperatorDigestCalculatorProvider_(digCalcProvider);
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509GeneralNames;", 0x2, 5, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1X500X500Name;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 15, 16, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithOrgSpongycastleCertX509CertificateHolder:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1X500X500Name:);
  methods[4].selector = @selector(initWithInt:withOrgSpongycastleAsn1ASN1ObjectIdentifier:withOrgSpongycastleAsn1ASN1ObjectIdentifier:withByteArray:);
  methods[5].selector = @selector(getDigestedObjectType);
  methods[6].selector = @selector(getDigestAlgorithm);
  methods[7].selector = @selector(getObjectDigest);
  methods[8].selector = @selector(getOtherObjectTypeID);
  methods[9].selector = @selector(generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name:);
  methods[10].selector = @selector(matchesDNWithOrgSpongycastleAsn1X500X500Name:withOrgSpongycastleAsn1X509GeneralNames:);
  methods[11].selector = @selector(getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray:);
  methods[12].selector = @selector(getEntityNames);
  methods[13].selector = @selector(getIssuer);
  methods[14].selector = @selector(getSerialNumber);
  methods[15].selector = @selector(java_clone);
  methods[16].selector = @selector(matchWithId:);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(hash);
  methods[19].selector = @selector(setDigestCalculatorProviderWithOrgSpongycastleOperatorDigestCalculatorProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digestCalculatorProvider", "LOrgSpongycastleOperatorDigestCalculatorProvider;", .constantValue.asLong = 0, 0xa, -1, 17, -1, -1 },
    { "holder_", "LOrgSpongycastleAsn1X509Holder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1ASN1Sequence;", "LOrgSpongycastleAsn1X500X500Name;LJavaMathBigInteger;", "LOrgSpongycastleCertX509CertificateHolder;", "LOrgSpongycastleAsn1X500X500Name;", "ILOrgSpongycastleAsn1ASN1ObjectIdentifier;LOrgSpongycastleAsn1ASN1ObjectIdentifier;[B", "generateGeneralNames", "matchesDN", "LOrgSpongycastleAsn1X500X500Name;LOrgSpongycastleAsn1X509GeneralNames;", "getPrincipals", "[LOrgSpongycastleAsn1X509GeneralName;", "clone", "match", "LNSObject;", "equals", "hashCode", "setDigestCalculatorProvider", "LOrgSpongycastleOperatorDigestCalculatorProvider;", &OrgSpongycastleCertAttributeCertificateHolder_digestCalculatorProvider };
  static const J2ObjcClassInfo _OrgSpongycastleCertAttributeCertificateHolder = { "AttributeCertificateHolder", "org.spongycastle.cert", ptrTable, methods, fields, 7, 0x1, 20, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertAttributeCertificateHolder;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 51
void OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  NSObject_init(self);
  self->holder_ = OrgSpongycastleAsn1X509Holder_getInstanceWithId_(seq);
}


#line 51
OrgSpongycastleCertAttributeCertificateHolder *new_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 51
OrgSpongycastleCertAttributeCertificateHolder *create_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 62
void OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleAsn1X500X500Name *issuerName, JavaMathBigInteger *serialNumber) {
  NSObject_init(self);
  
#line 65
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509IssuerSerial_(new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name_(self,
#line 66
  issuerName), new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(
#line 67
  serialNumber)));
}


#line 62
OrgSpongycastleCertAttributeCertificateHolder *new_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 62
OrgSpongycastleCertAttributeCertificateHolder *create_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 75
void OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleCertX509CertificateHolder_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleCertX509CertificateHolder *cert) {
  NSObject_init(self);
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509IssuerSerial_(new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name_(self, [((OrgSpongycastleCertX509CertificateHolder *) nil_chk(cert)) getIssuer]), new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(
#line 78
  [cert getSerialNumber])));
}


#line 75
OrgSpongycastleCertAttributeCertificateHolder *new_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleCertX509CertificateHolder_(OrgSpongycastleCertX509CertificateHolder *cert) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleCertX509CertificateHolder_, cert)
}


#line 75
OrgSpongycastleCertAttributeCertificateHolder *create_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleCertX509CertificateHolder_(OrgSpongycastleCertX509CertificateHolder *cert) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleCertX509CertificateHolder_, cert)
}


#line 86
void OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleAsn1X500X500Name *principal) {
  NSObject_init(self);
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name_(self, principal));
}


#line 86
OrgSpongycastleCertAttributeCertificateHolder *new_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X500X500Name *principal) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleAsn1X500X500Name_, principal)
}


#line 86
OrgSpongycastleCertAttributeCertificateHolder *create_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X500X500Name *principal) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithOrgSpongycastleAsn1X500X500Name_, principal)
}


#line 114
void OrgSpongycastleCertAttributeCertificateHolder_initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_(OrgSpongycastleCertAttributeCertificateHolder *self, jint digestedObjectType, OrgSpongycastleAsn1ASN1ObjectIdentifier *digestAlgorithm, OrgSpongycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, IOSByteArray *objectDigest) {
  NSObject_init(self);
  
#line 117
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509ObjectDigestInfo_(new_OrgSpongycastleAsn1X509ObjectDigestInfo_initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(digestedObjectType,
#line 118
  otherObjectTypeID, new_OrgSpongycastleAsn1X509AlgorithmIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(digestAlgorithm), OrgSpongycastleUtilArrays_cloneWithByteArray_(
#line 119
  objectDigest)));
}


#line 114
OrgSpongycastleCertAttributeCertificateHolder *new_OrgSpongycastleCertAttributeCertificateHolder_initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_(jint digestedObjectType, OrgSpongycastleAsn1ASN1ObjectIdentifier *digestAlgorithm, OrgSpongycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}


#line 114
OrgSpongycastleCertAttributeCertificateHolder *create_OrgSpongycastleCertAttributeCertificateHolder_initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_(jint digestedObjectType, OrgSpongycastleAsn1ASN1ObjectIdentifier *digestAlgorithm, OrgSpongycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertAttributeCertificateHolder, initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}


#line 189
OrgSpongycastleAsn1X509GeneralNames *OrgSpongycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleAsn1X500X500Name *principal) {
  
#line 191
  return new_OrgSpongycastleAsn1X509GeneralNames_initWithOrgSpongycastleAsn1X509GeneralName_(new_OrgSpongycastleAsn1X509GeneralName_initWithOrgSpongycastleAsn1X500X500Name_(principal));
}


#line 194
jboolean OrgSpongycastleCertAttributeCertificateHolder_matchesDNWithOrgSpongycastleAsn1X500X500Name_withOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleCertAttributeCertificateHolder *self, OrgSpongycastleAsn1X500X500Name *subject, OrgSpongycastleAsn1X509GeneralNames *targets) {
  
#line 196
  IOSObjectArray *names = [((OrgSpongycastleAsn1X509GeneralNames *) nil_chk(targets)) getNames];
  
#line 198
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(names))->size_; i++) {
    
#line 200
    OrgSpongycastleAsn1X509GeneralName *gn = IOSObjectArray_Get(names, i);
    
#line 202
    if ([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(gn)) getTagNo] == OrgSpongycastleAsn1X509GeneralName_directoryName) {
      
#line 204
      if ([((OrgSpongycastleAsn1X500X500Name *) nil_chk(OrgSpongycastleAsn1X500X500Name_getInstanceWithId_([gn getName]))) isEqual:subject]) {
        
#line 206
        return true;
      }
    }
  }
  
#line 211
  return false;
}


#line 214
IOSObjectArray *OrgSpongycastleCertAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNameArray_(OrgSpongycastleCertAttributeCertificateHolder *self, IOSObjectArray *names) {
  
#line 216
  id<JavaUtilList> l = new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(names))->size_);
  
#line 218
  for (jint i = 0; i != names->size_; i++) {
    
#line 220
    if ([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getTagNo] == OrgSpongycastleAsn1X509GeneralName_directoryName) {
      
#line 222
      [l addWithId:OrgSpongycastleAsn1X500X500Name_getInstanceWithId_([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getName])];
    }
  }
  
#line 226
  return (IOSObjectArray *) cast_check([l toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[l size] type:OrgSpongycastleAsn1X500X500Name_class_()]], IOSClass_arrayType(OrgSpongycastleAsn1X500X500Name_class_(), 1));
}


#line 369
void OrgSpongycastleCertAttributeCertificateHolder_setDigestCalculatorProviderWithOrgSpongycastleOperatorDigestCalculatorProvider_(id<OrgSpongycastleOperatorDigestCalculatorProvider> digCalcProvider) {
  OrgSpongycastleCertAttributeCertificateHolder_initialize();
  OrgSpongycastleCertAttributeCertificateHolder_digestCalculatorProvider = digCalcProvider;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertAttributeCertificateHolder)

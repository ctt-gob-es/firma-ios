//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/misc/protocol/ProtocolInvocationUriParser.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ProtocolConstants.h"
#include "ProtocolInvocationUriParser.h"
#include "ProtocolInvocationUriParserUtil.h"
#include "UrlParametersForBatch.h"
#include "UrlParametersToGetCurrentLog.h"
#include "UrlParametersToLoad.h"
#include "UrlParametersToSave.h"
#include "UrlParametersToSelectCert.h"
#include "UrlParametersToSign.h"
#include "UrlParametersToSignAndSave.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/net/URLDecoder.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/logging/Logger.h"

#if !__has_feature(objc_arc)
#error "ProtocolInvocationUriParser must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser ()

- (instancetype)init;

/*!
 @brief Analiza la URL de entrada para obtener la lista de par&aacute;metros asociados.
 @param uri URL de llamada.
 @return Devuelve una tabla <i>hash</i> con cada par&aacute;metro asociado a un valor.
 */
+ (id<JavaUtilMap>)parserUriWithNSString:(NSString *)uri;

@end

__attribute__((unused)) static void EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_init(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser *self);

__attribute__((unused)) static EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser *new_EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser *create_EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_init(void);

__attribute__((unused)) static id<JavaUtilMap> EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(NSString *uri);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/misc/protocol/ProtocolInvocationUriParser.java"


#line 20
@implementation EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 22
- (instancetype)init {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 31
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSign *)getParametersToSignWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithNSString_(uri);
}


#line 42
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSign *)getParametersToSignWithNSString:(NSString *)uri
                                                                        withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithNSString_withBoolean_(uri, servicesRequired);
}


#line 53
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSign *)getParametersToSignWithByteArray:(IOSByteArray *)xml {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithByteArray_(xml);
}


#line 64
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSign *)getParametersToSignWithByteArray:(IOSByteArray *)xml
                                                                         withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithByteArray_withBoolean_(xml, servicesRequired);
}


#line 75
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *)getParametersToSignAndSaveWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithNSString_(uri);
}


#line 86
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *)getParametersToSignAndSaveWithNSString:(NSString *)uri
                                                                                      withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithNSString_withBoolean_(uri, servicesRequired);
}


#line 97
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *)getParametersToSignAndSaveWithByteArray:(IOSByteArray *)xml {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithByteArray_(xml);
}


#line 108
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *)getParametersToSignAndSaveWithByteArray:(IOSByteArray *)xml
                                                                                       withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithByteArray_withBoolean_(xml, servicesRequired);
}


#line 119
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *)getParametersToSelectCertWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithNSString_(uri);
}


#line 130
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *)getParametersToSelectCertWithNSString:(NSString *)uri
                                                                                    withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithNSString_withBoolean_(uri, servicesRequired);
}


#line 141
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *)getParametersToSelectCertWithByteArray:(IOSByteArray *)xml {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithByteArray_(xml);
}


#line 152
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *)getParametersToSelectCertWithByteArray:(IOSByteArray *)xml
                                                                                     withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithByteArray_withBoolean_(xml, servicesRequired);
}


#line 164
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSave *)getParametersToSaveWithByteArray:(IOSByteArray *)xml {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithByteArray_(xml);
}


#line 176
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSave *)getParametersToSaveWithByteArray:(IOSByteArray *)xml
                                                                         withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithByteArray_withBoolean_(xml, servicesRequired);
}


#line 188
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSave *)getParametersToSaveWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithNSString_(uri);
}


#line 200
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSave *)getParametersToSaveWithNSString:(NSString *)uri
                                                                        withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithNSString_withBoolean_(uri, servicesRequired);
}


#line 211
+ (EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *)getParametersToBatchWithByteArray:(IOSByteArray *)xml {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithByteArray_(xml);
}


#line 223
+ (EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *)getParametersToBatchWithByteArray:(IOSByteArray *)xml
                                                                            withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithByteArray_withBoolean_(xml, servicesRequired);
}


#line 234
+ (EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *)getParametersToBatchWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithNSString_(uri);
}


#line 245
+ (EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *)getParametersToBatchWithNSString:(NSString *)uri
                                                                           withBoolean:(jboolean)servicesRequired {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithNSString_withBoolean_(uri, servicesRequired);
}


#line 256
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToLoad *)getParametersToLoadWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToLoadWithNSString_(uri);
}


#line 266
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToLoad *)getParametersToLoadWithByteArray:(IOSByteArray *)xml {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToLoadWithByteArray_(xml);
}


#line 276
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog *)getParametersToGetCurrentLogWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToGetCurrentLogWithNSString_(uri);
}


#line 286
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog *)getParametersToGetCurrentLogWithByteArray:(IOSByteArray *)xml {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToGetCurrentLogWithByteArray_(xml);
}


#line 293
+ (id<JavaUtilMap>)parserUriWithNSString:(NSString *)uri {
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(uri);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSign;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSign;", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSign;", 0x9, 0, 4, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSign;", 0x9, 0, 5, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave;", 0x9, 6, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave;", 0x9, 6, 3, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave;", 0x9, 6, 4, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave;", 0x9, 6, 5, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert;", 0x9, 7, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert;", 0x9, 7, 3, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert;", 0x9, 7, 4, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert;", 0x9, 7, 5, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSave;", 0x9, 8, 4, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSave;", 0x9, 8, 5, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSave;", 0x9, 8, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToSave;", 0x9, 8, 3, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersForBatch;", 0x9, 9, 4, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersForBatch;", 0x9, 9, 5, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersForBatch;", 0x9, 9, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersForBatch;", 0x9, 9, 3, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToLoad;", 0x9, 10, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToLoad;", 0x9, 10, 4, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog;", 0x9, 11, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog;", 0x9, 11, 4, 2, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0xa, 12, 1, -1, 13, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getParametersToSignWithNSString:);
  methods[2].selector = @selector(getParametersToSignWithNSString:withBoolean:);
  methods[3].selector = @selector(getParametersToSignWithByteArray:);
  methods[4].selector = @selector(getParametersToSignWithByteArray:withBoolean:);
  methods[5].selector = @selector(getParametersToSignAndSaveWithNSString:);
  methods[6].selector = @selector(getParametersToSignAndSaveWithNSString:withBoolean:);
  methods[7].selector = @selector(getParametersToSignAndSaveWithByteArray:);
  methods[8].selector = @selector(getParametersToSignAndSaveWithByteArray:withBoolean:);
  methods[9].selector = @selector(getParametersToSelectCertWithNSString:);
  methods[10].selector = @selector(getParametersToSelectCertWithNSString:withBoolean:);
  methods[11].selector = @selector(getParametersToSelectCertWithByteArray:);
  methods[12].selector = @selector(getParametersToSelectCertWithByteArray:withBoolean:);
  methods[13].selector = @selector(getParametersToSaveWithByteArray:);
  methods[14].selector = @selector(getParametersToSaveWithByteArray:withBoolean:);
  methods[15].selector = @selector(getParametersToSaveWithNSString:);
  methods[16].selector = @selector(getParametersToSaveWithNSString:withBoolean:);
  methods[17].selector = @selector(getParametersToBatchWithByteArray:);
  methods[18].selector = @selector(getParametersToBatchWithByteArray:withBoolean:);
  methods[19].selector = @selector(getParametersToBatchWithNSString:);
  methods[20].selector = @selector(getParametersToBatchWithNSString:withBoolean:);
  methods[21].selector = @selector(getParametersToLoadWithNSString:);
  methods[22].selector = @selector(getParametersToLoadWithByteArray:);
  methods[23].selector = @selector(getParametersToGetCurrentLogWithNSString:);
  methods[24].selector = @selector(getParametersToGetCurrentLogWithByteArray:);
  methods[25].selector = @selector(parserUriWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getParametersToSign", "LNSString;", "LEsGobAfirmaCoreMiscProtocolParameterException;", "LNSString;Z", "[B", "[BZ", "getParametersToSignAndSave", "getParametersToSelectCert", "getParametersToSave", "getParametersToBatch", "getParametersToLoad", "getParametersToGetCurrentLog", "parserUri", "(Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser = { "ProtocolInvocationUriParser", "es.gob.afirma.core.misc.protocol", ptrTable, methods, NULL, 7, 0x11, 26, 0, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser;
}

@end


#line 22
void EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_init(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser *self) {
  NSObject_init(self);
}


#line 22
EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser *new_EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser, init)
}


#line 22
EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser *create_EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser, init)
}


#line 31
EsGobAfirmaCoreMiscProtocolUrlParametersToSign *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 32
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithNSString_withBoolean_(uri, false);
}


#line 42
EsGobAfirmaCoreMiscProtocolUrlParametersToSign *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithNSString_withBoolean_(NSString *uri, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSignWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(
#line 45
  uri), servicesRequired);
}


#line 53
EsGobAfirmaCoreMiscProtocolUrlParametersToSign *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithByteArray_(IOSByteArray *xml) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 54
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithByteArray_withBoolean_(xml, false);
}


#line 64
EsGobAfirmaCoreMiscProtocolUrlParametersToSign *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignWithByteArray_withBoolean_(IOSByteArray *xml, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSignWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(
#line 67
  xml), servicesRequired);
}


#line 75
EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 76
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithNSString_withBoolean_(uri, false);
}


#line 86
EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithNSString_withBoolean_(NSString *uri, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSignAndSaveWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(
#line 89
  uri), servicesRequired);
}


#line 97
EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithByteArray_(IOSByteArray *xml) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 98
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithByteArray_withBoolean_(xml, false);
}


#line 108
EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSignAndSaveWithByteArray_withBoolean_(IOSByteArray *xml, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSignAndSaveWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(
#line 111
  xml), servicesRequired);
}


#line 119
EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 120
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithNSString_withBoolean_(uri, false);
}


#line 130
EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithNSString_withBoolean_(NSString *uri, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSelectCertWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(
#line 133
  uri), servicesRequired);
}


#line 141
EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithByteArray_(IOSByteArray *xml) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 142
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithByteArray_withBoolean_(xml, false);
}


#line 152
EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSelectCertWithByteArray_withBoolean_(IOSByteArray *xml, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSelectCertWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(
#line 155
  xml), servicesRequired);
}


#line 164
EsGobAfirmaCoreMiscProtocolUrlParametersToSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithByteArray_(IOSByteArray *xml) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 165
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithByteArray_withBoolean_(xml, false);
}


#line 176
EsGobAfirmaCoreMiscProtocolUrlParametersToSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithByteArray_withBoolean_(IOSByteArray *xml, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSaveWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(
#line 179
  xml), servicesRequired);
}


#line 188
EsGobAfirmaCoreMiscProtocolUrlParametersToSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 189
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithNSString_withBoolean_(uri, false);
}


#line 200
EsGobAfirmaCoreMiscProtocolUrlParametersToSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToSaveWithNSString_withBoolean_(NSString *uri, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSaveWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(uri), servicesRequired);
}


#line 211
EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithByteArray_(IOSByteArray *xml) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 212
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithByteArray_withBoolean_(xml, false);
}


#line 223
EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithByteArray_withBoolean_(IOSByteArray *xml, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToBatchWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(
#line 226
  xml), servicesRequired);
}


#line 234
EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 235
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithNSString_withBoolean_(uri, false);
}


#line 245
EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToBatchWithNSString_withBoolean_(NSString *uri, jboolean servicesRequired) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToBatchWithJavaUtilMap_withBoolean_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(uri), servicesRequired);
}


#line 256
EsGobAfirmaCoreMiscProtocolUrlParametersToLoad *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToLoadWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 257
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToLoadWithJavaUtilMap_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(uri));
}


#line 266
EsGobAfirmaCoreMiscProtocolUrlParametersToLoad *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToLoadWithByteArray_(IOSByteArray *xml) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 267
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToLoadWithJavaUtilMap_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(xml));
}


#line 276
EsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToGetCurrentLogWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 277
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToGetCurrentLogWithJavaUtilMap_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(uri));
}


#line 286
EsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_getParametersToGetCurrentLogWithByteArray_(IOSByteArray *xml) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 287
  return EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToGetCurrentLogWithJavaUtilMap_(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(xml));
}

id<JavaUtilMap> EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_parserUriWithNSString_(NSString *uri) {
  EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser_initialize();
  
#line 294
  id<JavaUtilMap> params = new_JavaUtilHashMap_init();
  IOSObjectArray *parameters = [((NSString *) nil_chk([((NSString *) nil_chk(uri)) java_substring:[uri java_indexOf:'?'] + 1])) java_split:@"&"];
  {
    IOSObjectArray *a__ =
#line 296
    parameters;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *param = *b__++;
      
#line 297
      jint eqPos = [((NSString *) nil_chk(param)) java_indexOf:'='];
      if (eqPos > 0) {
        @try {
          (void) [params putWithId:
#line 301
          [param java_substring:0 endIndex:eqPos] withId:
#line 302
          eqPos == [param java_length] - 1 ?
#line 303
          @"" : JavaNetURLDecoder_decodeWithNSString_withNSString_(
#line 304
          [param java_substring:eqPos + 1], JreLoadStatic(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil, DEFAULT_URL_ENCODING))];
        }
        @catch (
#line 307
        JavaIoUnsupportedEncodingException *e) {
          (void) [params putWithId:
#line 309
          [param java_substring:0 endIndex:eqPos] withId:
#line 310
          eqPos == [param java_length] - 1 ? @"" : [param java_substring:eqPos + 1]];
        }
      }
    }
  }
  
#line 317
  [((JavaUtilLoggingLogger *) nil_chk(JavaUtilLoggingLogger_getLoggerWithNSString_(@"es.gob.afirma"))) infoWithNSString:JreStrcat("$$", @"URI recibida: ", ([uri java_length] <= 300 ? uri : JreStrcat("$$", [uri java_substring:0 endIndex:300], @"...")))];
  
#line 319
  NSString *path = [uri java_substring:[uri java_indexOfString:@"://"] + [@"://" java_length] endIndex:[uri java_indexOf:'?'] != -1 ? [uri java_indexOf:'?'] : [uri java_length]];
  if ([((NSString *) nil_chk(path)) java_hasSuffix:@"/"]) {
    path = [path java_substring:0 endIndex:[path java_length] - 1];
  }
  
#line 324
  (void) [params putWithId:EsGobAfirmaCoreMiscProtocolProtocolConstants_OPERATION_PARAM withId:[((NSString *) nil_chk(path)) java_indexOfString:@"/"] == -1 ? path : [path java_substring:0 endIndex:[path java_indexOfString:@"/"]]];
  
#line 326
  return params;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParser)

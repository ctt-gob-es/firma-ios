//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/FontDetails.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FontDetails")
#ifdef RESTRICT_FontDetails
#define INCLUDE_ALL_FontDetails 0
#else
#define INCLUDE_ALL_FontDetails 1
#endif
#undef RESTRICT_FontDetails

#if !defined (ComAowagieTextPdfFontDetails_) && (INCLUDE_ALL_FontDetails || defined(INCLUDE_ComAowagieTextPdfFontDetails))
#define ComAowagieTextPdfFontDetails_

@class ComAowagieTextPdfBaseFont;
@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfName;
@class ComAowagieTextPdfPdfWriter;
@class IOSByteArray;

/*!
 @brief Each font in the document will have an instance of this class
  where the characters used will be represented.
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfFontDetails : NSObject

#pragma mark Public

/*!
 @brief Indicates if all the glyphs and widths for that particular
  encoding should be included in the document.
 @return <CODE>false</CODE> to include all the glyphs and widths.
 */
- (jboolean)isSubset;

/*!
 @brief Indicates if all the glyphs and widths for that particular
  encoding should be included in the document.Set to <CODE>false</CODE>
  to include all.
 @param subset new value of property subset
 */
- (void)setSubsetWithBoolean:(jboolean)subset;

#pragma mark Package-Private

/*!
 @brief Each font used in a document has an instance of this class.
 This class stores the characters used in the document and other
  specifics unique to the current working document.
 @param fontName the font name
 @param indirectReference the indirect reference to the font
 @param baseFont the  <CODE> BaseFont </CODE>
 */
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)fontName
                     withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)indirectReference
                                 withComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)baseFont;

/*!
 @brief Converts the text into bytes to be placed in the document.
 The conversion is done according to the font and the encoding and the characters
  used are stored.
 @param text the text to convert
 @return the conversion
 */
- (IOSByteArray *)convertToBytesWithNSString:(NSString *)text;

/*!
 @brief Gets the <CODE>BaseFont</CODE> of this font.
 @return the <CODE>BaseFont</CODE> of this font
 */
- (ComAowagieTextPdfBaseFont *)getBaseFont;

/*!
 @brief Gets the font name as it appears in the document body.
 @return the font name
 */
- (ComAowagieTextPdfPdfName *)getFontName;

/*!
 @brief Gets the indirect reference to this font.
 @return the indirect reference to this font
 */
- (ComAowagieTextPdfPdfIndirectReference *)getIndirectReference;

/*!
 @brief Writes the font definition to the document.
 @param writer the  <CODE> PdfWriter </CODE>  of this document
 */
- (void)writeFontWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfFontDetails)

FOUNDATION_EXPORT void ComAowagieTextPdfFontDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfBaseFont_(ComAowagieTextPdfFontDetails *self, ComAowagieTextPdfPdfName *fontName, ComAowagieTextPdfPdfIndirectReference *indirectReference, ComAowagieTextPdfBaseFont *baseFont);

FOUNDATION_EXPORT ComAowagieTextPdfFontDetails *new_ComAowagieTextPdfFontDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfBaseFont_(ComAowagieTextPdfPdfName *fontName, ComAowagieTextPdfPdfIndirectReference *indirectReference, ComAowagieTextPdfBaseFont *baseFont) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfFontDetails *create_ComAowagieTextPdfFontDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfBaseFont_(ComAowagieTextPdfPdfName *fontName, ComAowagieTextPdfPdfIndirectReference *indirectReference, ComAowagieTextPdfBaseFont *baseFont);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfFontDetails)

#endif

#pragma pop_macro("INCLUDE_ALL_FontDetails")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/X509CRLEntryObject.java
//

#include "ASN1Dump.h"
#include "ASN1Encodable.h"
#include "ASN1Encoding.h"
#include "ASN1Enumerated.h"
#include "ASN1InputStream.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "BCTime.h"
#include "CRLReason.h"
#include "Extension.h"
#include "Extensions.h"
#include "GeneralName.h"
#include "GeneralNames.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Strings.h"
#include "TBSCertList.h"
#include "X500Name.h"
#include "X509CRLEntryObject.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/cert/CRLException.h"
#include "java/security/cert/X509CRLEntry.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "javax/security/auth/x500/X500Principal.h"

#if !__has_feature(objc_arc)
#error "X509CRLEntryObject must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject () {
 @public
  OrgSpongycastleAsn1X509TBSCertList_CRLEntry *c_;
  OrgSpongycastleAsn1X500X500Name *certificateIssuer_;
  jint hashValue_;
  jboolean isHashValueSet_;
}

- (OrgSpongycastleAsn1X500X500Name *)loadCertificateIssuerWithBoolean:(jboolean)isIndirect
                                  withOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)previousCertificateIssuer;

- (id<JavaUtilSet>)getExtensionOIDsWithBoolean:(jboolean)critical;

- (OrgSpongycastleAsn1X509Extension *)getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject, c_, OrgSpongycastleAsn1X509TBSCertList_CRLEntry *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject, certificateIssuer_, OrgSpongycastleAsn1X500X500Name *)

__attribute__((unused)) static OrgSpongycastleAsn1X500X500Name *OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean isIndirect, OrgSpongycastleAsn1X500X500Name *previousCertificateIssuer);

__attribute__((unused)) static id<JavaUtilSet> OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean critical);

__attribute__((unused)) static OrgSpongycastleAsn1X509Extension *OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/X509CRLEntryObject.java"


#line 34
@implementation OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject


#line 42
- (instancetype)initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry:(OrgSpongycastleAsn1X509TBSCertList_CRLEntry *)c {
  OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_(self, c);
  return self;
}


#line 65
- (instancetype)initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry:(OrgSpongycastleAsn1X509TBSCertList_CRLEntry *)c
                                                                      withBoolean:(jboolean)isIndirect
                                              withOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)previousCertificateIssuer {
  OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgSpongycastleAsn1X500X500Name_(self, c, isIndirect, previousCertificateIssuer);
  return self;
}


#line 78
- (jboolean)hasUnsupportedCriticalExtension {
  
#line 80
  id<JavaUtilSet> extns = [self getCriticalExtensionOIDs];
  
#line 82
  return extns != nil && ![extns isEmpty];
}


#line 85
- (OrgSpongycastleAsn1X500X500Name *)loadCertificateIssuerWithBoolean:(jboolean)isIndirect
                                  withOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)previousCertificateIssuer {
  return OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgSpongycastleAsn1X500X500Name_(self, isIndirect, previousCertificateIssuer);
}


#line 116
- (JavaxSecurityAuthX500X500Principal *)getCertificateIssuer {
  
#line 118
  if (certificateIssuer_ == nil) {
    
#line 120
    return nil;
  }
  @try {
    
#line 124
    return new_JavaxSecurityAuthX500X500Principal_initWithByteArray_([certificateIssuer_ getEncoded]);
  }
  @catch (JavaIoIOException *e) {
    
#line 128
    return nil;
  }
}


#line 132
- (id<JavaUtilSet>)getExtensionOIDsWithBoolean:(jboolean)critical {
  return OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(self, critical);
}


#line 158
- (id<JavaUtilSet>)getCriticalExtensionOIDs {
  
#line 160
  return OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(self, true);
}


#line 163
- (id<JavaUtilSet>)getNonCriticalExtensionOIDs {
  
#line 165
  return OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(self, false);
}


#line 168
- (OrgSpongycastleAsn1X509Extension *)getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(self, oid);
}


#line 180
- (IOSByteArray *)getExtensionValueWithNSString:(NSString *)oid {
  
#line 182
  OrgSpongycastleAsn1X509Extension *ext = OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(self, new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(oid));
  
#line 184
  if (ext != nil) {
    
#line 186
    @try {
      
#line 188
      return [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk([ext getExtnValue])) getEncoded];
    }
    @catch (JavaLangException *e) {
      
#line 192
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Exception encoding: ", [e description]));
    }
  }
  
#line 196
  return nil;
}


#line 203
- (NSUInteger)hash {
  
#line 205
  if (!isHashValueSet_) {
    
#line 207
    hashValue_ = ((jint) [super hash]);
    isHashValueSet_ = true;
  }
  
#line 211
  return hashValue_;
}


#line 214
- (jboolean)isEqual:(id)o {
  
#line 216
  if (JreObjectEqualsEquals(o, self)) {
    
#line 218
    return true;
  }
  
#line 221
  if ([o isKindOfClass:[OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject class]]) {
    
#line 223
    OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *other = (OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *) o;
    
#line 225
    return [((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) isEqual:((OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *) nil_chk(other))->c_];
  }
  
#line 228
  return [super isEqual:self];
}


#line 231
- (IOSByteArray *)getEncoded {
  
#line 234
  @try {
    
#line 236
    return [((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getEncodedWithNSString:OrgSpongycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    
#line 240
    @throw new_JavaSecurityCertCRLException_initWithNSString_([e description]);
  }
}


#line 244
- (JavaMathBigInteger *)getSerialNumber {
  
#line 246
  return [((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getUserCertificate])) getValue];
}


#line 249
- (JavaUtilDate *)getRevocationDate {
  
#line 251
  return [((OrgSpongycastleAsn1X509BCTime *) nil_chk([((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getRevocationDate])) getDate];
}


#line 254
- (jboolean)hasExtensions {
  
#line 256
  return [((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getExtensions] != nil;
}


#line 259
- (NSString *)description {
  
#line 261
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = OrgSpongycastleUtilStrings_lineSeparator();
  
#line 264
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"      userCertificate: "])) appendWithId:[self getSerialNumber]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"       revocationDate: "])) appendWithId:[self getRevocationDate]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"       certificateIssuer: "])) appendWithId:[self getCertificateIssuer]])) appendWithNSString:nl];
  
#line 268
  OrgSpongycastleAsn1X509Extensions *extensions = [((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getExtensions];
  
#line 270
  if (extensions != nil) {
    
#line 272
    id<JavaUtilEnumeration> e = [extensions oids];
    if ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      
#line 275
      (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"   crlEntryExtensions:"])) appendWithNSString:nl];
      
#line 277
      while ([e hasMoreElements]) {
        
#line 279
        OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
        OrgSpongycastleAsn1X509Extension *ext = [extensions getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid];
        if ([((OrgSpongycastleAsn1X509Extension *) nil_chk(ext)) getExtnValue] != nil) {
          
#line 283
          IOSByteArray *octs = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk([ext getExtnValue])) getOctets];
          OrgSpongycastleAsn1ASN1InputStream *dIn = new_OrgSpongycastleAsn1ASN1InputStream_initWithByteArray_(octs);
          (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"                       critical("])) appendWithBoolean:[ext isCritical]])) appendWithNSString:@") "];
          @try {
            
#line 288
            if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:JreLoadStatic(OrgSpongycastleAsn1X509Extension, reasonCode)]) {
              
#line 290
              (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithId:OrgSpongycastleAsn1X509CRLReason_getInstanceWithId_(OrgSpongycastleAsn1ASN1Enumerated_getInstanceWithId_([dIn readObject]))])) appendWithNSString:nl];
            }
            else if ([oid isEqual:JreLoadStatic(OrgSpongycastleAsn1X509Extension, certificateIssuer)]) {
              
#line 294
              (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"Certificate issuer: "])) appendWithId:OrgSpongycastleAsn1X509GeneralNames_getInstanceWithId_([dIn readObject])])) appendWithNSString:nl];
            }
            else {
              
#line 298
              (void) [buf appendWithNSString:[oid getId]];
              (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" value = "])) appendWithNSString:OrgSpongycastleAsn1UtilASN1Dump_dumpAsStringWithId_([dIn readObject])])) appendWithNSString:nl];
            }
          }
          @catch (JavaLangException *ex) {
            
#line 304
            (void) [buf appendWithNSString:[oid getId]];
            (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" value = "])) appendWithNSString:@"*****"])) appendWithNSString:nl];
          }
        }
        else {
          
#line 310
          (void) [buf appendWithNSString:nl];
        }
      }
    }
  }
  
#line 316
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaxSecurityAuthX500X500Principal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Extension;", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 13, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry:);
  methods[1].selector = @selector(initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry:withBoolean:withOrgSpongycastleAsn1X500X500Name:);
  methods[2].selector = @selector(hasUnsupportedCriticalExtension);
  methods[3].selector = @selector(loadCertificateIssuerWithBoolean:withOrgSpongycastleAsn1X500X500Name:);
  methods[4].selector = @selector(getCertificateIssuer);
  methods[5].selector = @selector(getExtensionOIDsWithBoolean:);
  methods[6].selector = @selector(getCriticalExtensionOIDs);
  methods[7].selector = @selector(getNonCriticalExtensionOIDs);
  methods[8].selector = @selector(getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(getExtensionValueWithNSString:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getSerialNumber);
  methods[14].selector = @selector(getRevocationDate);
  methods[15].selector = @selector(hasExtensions);
  methods[16].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "LOrgSpongycastleAsn1X509TBSCertList_CRLEntry;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateIssuer_", "LOrgSpongycastleAsn1X500X500Name;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashValue_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isHashValueSet_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1X509TBSCertList_CRLEntry;", "LOrgSpongycastleAsn1X509TBSCertList_CRLEntry;ZLOrgSpongycastleAsn1X500X500Name;", "loadCertificateIssuer", "ZLOrgSpongycastleAsn1X500X500Name;", "getExtensionOIDs", "Z", "getExtension", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", "getExtensionValue", "LNSString;", "hashCode", "equals", "LNSObject;", "LJavaSecurityCertCRLException;", "toString" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject = { "X509CRLEntryObject", "org.spongycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 17, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject;
}

@end


#line 42
void OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgSpongycastleAsn1X509TBSCertList_CRLEntry *c) {
  JavaSecurityCertX509CRLEntry_init(self);
  self->c_ = c;
  self->certificateIssuer_ = nil;
}


#line 42
OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *new_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_(OrgSpongycastleAsn1X509TBSCertList_CRLEntry *c) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_, c)
}


#line 42
OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *create_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_(OrgSpongycastleAsn1X509TBSCertList_CRLEntry *c) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_, c)
}


#line 65
void OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgSpongycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, OrgSpongycastleAsn1X500X500Name *previousCertificateIssuer) {
  JavaSecurityCertX509CRLEntry_init(self);
  
#line 70
  self->c_ = c;
  self->certificateIssuer_ = OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgSpongycastleAsn1X500X500Name_(self, isIndirect, previousCertificateIssuer);
}


#line 65
OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *new_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, OrgSpongycastleAsn1X500X500Name *previousCertificateIssuer) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgSpongycastleAsn1X500X500Name_, c, isIndirect, previousCertificateIssuer)
}


#line 65
OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *create_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, OrgSpongycastleAsn1X500X500Name *previousCertificateIssuer) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgSpongycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgSpongycastleAsn1X500X500Name_, c, isIndirect, previousCertificateIssuer)
}


#line 85
OrgSpongycastleAsn1X500X500Name *OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean isIndirect, OrgSpongycastleAsn1X500X500Name *previousCertificateIssuer) {
  
#line 87
  if (!isIndirect) {
    
#line 89
    return nil;
  }
  
#line 92
  OrgSpongycastleAsn1X509Extension *ext = OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(self, JreLoadStatic(OrgSpongycastleAsn1X509Extension, certificateIssuer));
  if (ext == nil) {
    
#line 95
    return previousCertificateIssuer;
  }
  
#line 98
  @try {
    
#line 100
    IOSObjectArray *names = [((OrgSpongycastleAsn1X509GeneralNames *) nil_chk(OrgSpongycastleAsn1X509GeneralNames_getInstanceWithId_([ext getParsedValue]))) getNames];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(names))->size_; i++) {
      
#line 103
      if ([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getTagNo] == OrgSpongycastleAsn1X509GeneralName_directoryName) {
        
#line 105
        return OrgSpongycastleAsn1X500X500Name_getInstanceWithId_([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getName]);
      }
    }
    return nil;
  }
  @catch (JavaLangException *e) {
    
#line 112
    return nil;
  }
}


#line 132
id<JavaUtilSet> OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean critical) {
  
#line 134
  OrgSpongycastleAsn1X509Extensions *extensions = [((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) getExtensions];
  
#line 136
  if (extensions != nil) {
    
#line 138
    id<JavaUtilSet> set = new_JavaUtilHashSet_init();
    id<JavaUtilEnumeration> e = [extensions oids];
    
#line 141
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      
#line 143
      OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
      OrgSpongycastleAsn1X509Extension *ext = [extensions getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid];
      
#line 146
      if (critical == [((OrgSpongycastleAsn1X509Extension *) nil_chk(ext)) isCritical]) {
        
#line 148
        [set addWithId:[((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]];
      }
    }
    
#line 152
    return set;
  }
  
#line 155
  return nil;
}


#line 168
OrgSpongycastleAsn1X509Extension *OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid) {
  
#line 170
  OrgSpongycastleAsn1X509Extensions *exts = [((OrgSpongycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) getExtensions];
  
#line 172
  if (exts != nil) {
    
#line 174
    return [exts getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid];
  }
  
#line 177
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLEntryObject)

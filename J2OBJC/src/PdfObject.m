//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfObject.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PRIndirectReference.h"
#include "PdfEncodings.h"
#include "PdfObject.h"
#include "PdfWriter.h"
#include "java/io/OutputStream.h"

#if !__has_feature(objc_arc)
#error "PdfObject must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfObject () {
 @public
  /*!
   @brief Holds the indirect reference.
   */
  ComAowagieTextPdfPRIndirectReference *indRef_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfObject, indRef_, ComAowagieTextPdfPRIndirectReference *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfObject.java"

NSString *ComAowagieTextPdfPdfObject_NOTHING = @"";
NSString *ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING = @"PDF";
NSString *ComAowagieTextPdfPdfObject_TEXT_UNICODE = @"UnicodeBig";


#line 73
@implementation ComAowagieTextPdfPdfObject


#line 135
- (instancetype)initWithInt:(jint)type {
  ComAowagieTextPdfPdfObject_initWithInt_(self, type);
  return self;
}


#line 147
- (instancetype)initWithInt:(jint)type
               withNSString:(NSString *)content {
  ComAowagieTextPdfPdfObject_initWithInt_withNSString_(self, type, content);
  return self;
}


#line 160
- (instancetype)initWithInt:(jint)type
              withByteArray:(IOSByteArray *)bytes {
  ComAowagieTextPdfPdfObject_initWithInt_withByteArray_(self, type, bytes);
  return self;
}


#line 175
- (void)toPdfWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withJavaIoOutputStream:(JavaIoOutputStream *)os {
  
#line 176
  if (self->bytes_ != nil) {
    [((JavaIoOutputStream *) nil_chk(os)) writeWithByteArray:self->bytes_];
  }
}


#line 187
- (NSString *)description {
  
#line 189
  if (self->bytes_ == nil) {
    return [super description];
  }
  return ComAowagieTextPdfPdfEncodings_convertToStringWithByteArray_withNSString_(self->bytes_, nil);
}


#line 200
- (IOSByteArray *)getBytes {
  return self->bytes_;
}


#line 213
- (jboolean)canBeInObjStm {
  switch (self->type_) {
    case ComAowagieTextPdfPdfObject_NULL:
    case ComAowagieTextPdfPdfObject_BOOLEAN:
    case ComAowagieTextPdfPdfObject_NUMBER:
    case ComAowagieTextPdfPdfObject_STRING:
    case ComAowagieTextPdfPdfObject_NAME:
    case ComAowagieTextPdfPdfObject_ARRAY:
    case ComAowagieTextPdfPdfObject_DICTIONARY:
    return true;
    case ComAowagieTextPdfPdfObject_STREAM:
    case ComAowagieTextPdfPdfObject_INDIRECT:
    default:
    return false;
  }
}


#line 235
- (void)setContentWithNSString:(NSString *)content {
  self->bytes_ = ComAowagieTextPdfPdfEncodings_convertToBytesWithNSString_withNSString_(content, nil);
}


#line 257
- (jint)type {
  return self->type_;
}


#line 267
- (jboolean)isNull {
  return self->type_ == ComAowagieTextPdfPdfObject_NULL;
}


#line 277
- (jboolean)isBoolean {
  return self->type_ == ComAowagieTextPdfPdfObject_BOOLEAN;
}


#line 287
- (jboolean)isNumber {
  return self->type_ == ComAowagieTextPdfPdfObject_NUMBER;
}


#line 297
- (jboolean)isString {
  return self->type_ == ComAowagieTextPdfPdfObject_STRING;
}


#line 307
- (jboolean)isName {
  return self->type_ == ComAowagieTextPdfPdfObject_NAME;
}


#line 317
- (jboolean)isArray {
  return self->type_ == ComAowagieTextPdfPdfObject_ARRAY;
}


#line 327
- (jboolean)isDictionary {
  return self->type_ == ComAowagieTextPdfPdfObject_DICTIONARY;
}


#line 337
- (jboolean)isStream {
  return self->type_ == ComAowagieTextPdfPdfObject_STREAM;
}


#line 348
- (jboolean)isIndirect {
  return self->type_ == ComAowagieTextPdfPdfObject_INDIRECT;
}


#line 357
- (ComAowagieTextPdfPRIndirectReference *)getIndRef {
  return self->indRef_;
}


#line 366
- (void)setIndRefWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)indRef {
  self->indRef_ = indRef;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPRIndirectReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithInt:withNSString:);
  methods[2].selector = @selector(initWithInt:withByteArray:);
  methods[3].selector = @selector(toPdfWithComAowagieTextPdfPdfWriter:withJavaIoOutputStream:);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getBytes);
  methods[6].selector = @selector(canBeInObjStm);
  methods[7].selector = @selector(setContentWithNSString:);
  methods[8].selector = @selector(type);
  methods[9].selector = @selector(isNull);
  methods[10].selector = @selector(isBoolean);
  methods[11].selector = @selector(isNumber);
  methods[12].selector = @selector(isString);
  methods[13].selector = @selector(isName);
  methods[14].selector = @selector(isArray);
  methods[15].selector = @selector(isDictionary);
  methods[16].selector = @selector(isStream);
  methods[17].selector = @selector(isIndirect);
  methods[18].selector = @selector(getIndRef);
  methods[19].selector = @selector(setIndRefWithComAowagieTextPdfPRIndirectReference:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BOOLEAN", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_BOOLEAN, 0x18, -1, -1, -1, -1 },
    { "NUMBER", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_NUMBER, 0x18, -1, -1, -1, -1 },
    { "STRING", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_STRING, 0x18, -1, -1, -1, -1 },
    { "NAME", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_NAME, 0x18, -1, -1, -1, -1 },
    { "ARRAY", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_ARRAY, 0x19, -1, -1, -1, -1 },
    { "DICTIONARY", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_DICTIONARY, 0x18, -1, -1, -1, -1 },
    { "STREAM", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_STREAM, 0x19, -1, -1, -1, -1 },
    { "NULL", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_NULL, 0x18, -1, -1, -1, -1 },
    { "INDIRECT", "I", .constantValue.asInt = ComAowagieTextPdfPdfObject_INDIRECT, 0x19, -1, -1, -1, -1 },
    { "NOTHING", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 11, -1, -1 },
    { "TEXT_PDFDOCENCODING", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 12, -1, -1 },
    { "TEXT_UNICODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "bytes_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "type_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "indRef_", "LComAowagieTextPdfPRIndirectReference;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "ILNSString;", "I[B", "toPdf", "LComAowagieTextPdfPdfWriter;LJavaIoOutputStream;", "LJavaIoIOException;", "toString", "setContent", "LNSString;", "setIndRef", "LComAowagieTextPdfPRIndirectReference;", &ComAowagieTextPdfPdfObject_NOTHING, &ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING, &ComAowagieTextPdfPdfObject_TEXT_UNICODE };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfObject = { "PdfObject", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x401, 20, 15, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfObject;
}

@end


#line 135
void ComAowagieTextPdfPdfObject_initWithInt_(ComAowagieTextPdfPdfObject *self, jint type) {
  NSObject_init(self);
  
#line 136
  self->type_ = type;
}


#line 147
void ComAowagieTextPdfPdfObject_initWithInt_withNSString_(ComAowagieTextPdfPdfObject *self, jint type, NSString *content) {
  NSObject_init(self);
  
#line 148
  self->type_ = type;
  self->bytes_ = ComAowagieTextPdfPdfEncodings_convertToBytesWithNSString_withNSString_(content, nil);
}


#line 160
void ComAowagieTextPdfPdfObject_initWithInt_withByteArray_(ComAowagieTextPdfPdfObject *self, jint type, IOSByteArray *bytes) {
  NSObject_init(self);
  
#line 161
  self->bytes_ = bytes;
  self->type_ = type;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfObject)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/ocsp/RespID.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "DERBitString.h"
#include "DERNull.h"
#include "DEROctetString.h"
#include "DigestCalculator.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OCSPException.h"
#include "OIWObjectIdentifiers.h"
#include "RespID.h"
#include "ResponderID.h"
#include "SubjectPublicKeyInfo.h"
#include "X500Name.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "RespID must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/ocsp/RespID.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCertOcspRespID)

OrgSpongycastleAsn1X509AlgorithmIdentifier *OrgSpongycastleCertOcspRespID_HASH_SHA1;


#line 17
@implementation OrgSpongycastleCertOcspRespID


#line 23
- (instancetype)initWithOrgSpongycastleAsn1OcspResponderID:(OrgSpongycastleAsn1OcspResponderID *)id_ {
  OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1OcspResponderID_(self, id_);
  return self;
}


#line 29
- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)name {
  OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X500X500Name_(self, name);
  return self;
}


#line 42
- (instancetype)initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)subjectPublicKeyInfo
                        withOrgSpongycastleOperatorDigestCalculator:(id<OrgSpongycastleOperatorDigestCalculator>)digCalc {
  OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_(self, subjectPublicKeyInfo, digCalc);
  return self;
}


#line 67
- (OrgSpongycastleAsn1OcspResponderID *)toASN1Primitive {
  
#line 69
  return id__;
}


#line 72
- (jboolean)isEqual:(id)o {
  
#line 75
  if (!([o isKindOfClass:[OrgSpongycastleCertOcspRespID class]])) {
    
#line 77
    return false;
  }
  
#line 80
  OrgSpongycastleCertOcspRespID *obj = (OrgSpongycastleCertOcspRespID *) cast_chk(o, [OrgSpongycastleCertOcspRespID class]);
  
#line 82
  return [((OrgSpongycastleAsn1OcspResponderID *) nil_chk(id__)) isEqual:((OrgSpongycastleCertOcspRespID *) nil_chk(obj))->id__];
}


#line 85
- (NSUInteger)hash {
  
#line 87
  return ((jint) [((OrgSpongycastleAsn1OcspResponderID *) nil_chk(id__)) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1OcspResponderID;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1OcspResponderID:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1X500X500Name:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:withOrgSpongycastleOperatorDigestCalculator:);
  methods[3].selector = @selector(toASN1Primitive);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HASH_SHA1", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "id__", "LOrgSpongycastleAsn1OcspResponderID;", .constantValue.asLong = 0, 0x0, 8, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1OcspResponderID;", "LOrgSpongycastleAsn1X500X500Name;", "LOrgSpongycastleAsn1X509SubjectPublicKeyInfo;LOrgSpongycastleOperatorDigestCalculator;", "LOrgSpongycastleCertOcspOCSPException;", "equals", "LNSObject;", "hashCode", &OrgSpongycastleCertOcspRespID_HASH_SHA1, "id" };
  static const J2ObjcClassInfo _OrgSpongycastleCertOcspRespID = { "RespID", "org.spongycastle.cert.ocsp", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertOcspRespID;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCertOcspRespID class]) {
    OrgSpongycastleCertOcspRespID_HASH_SHA1 = new_OrgSpongycastleAsn1X509AlgorithmIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(JreLoadStatic(OrgSpongycastleAsn1OiwOIWObjectIdentifiers, idSHA1), JreLoadStatic(OrgSpongycastleAsn1DERNull, INSTANCE));
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCertOcspRespID)
  }
}

@end


#line 23
void OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1OcspResponderID_(OrgSpongycastleCertOcspRespID *self, OrgSpongycastleAsn1OcspResponderID *id_) {
  NSObject_init(self);
  
#line 26
  self->id__ = id_;
}


#line 23
OrgSpongycastleCertOcspRespID *new_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1OcspResponderID_(OrgSpongycastleAsn1OcspResponderID *id_) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspRespID, initWithOrgSpongycastleAsn1OcspResponderID_, id_)
}


#line 23
OrgSpongycastleCertOcspRespID *create_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1OcspResponderID_(OrgSpongycastleAsn1OcspResponderID *id_) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspRespID, initWithOrgSpongycastleAsn1OcspResponderID_, id_)
}


#line 29
void OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleCertOcspRespID *self, OrgSpongycastleAsn1X500X500Name *name) {
  NSObject_init(self);
  
#line 32
  self->id__ = new_OrgSpongycastleAsn1OcspResponderID_initWithOrgSpongycastleAsn1X500X500Name_(name);
}


#line 29
OrgSpongycastleCertOcspRespID *new_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X500X500Name *name) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspRespID, initWithOrgSpongycastleAsn1X500X500Name_, name)
}


#line 29
OrgSpongycastleCertOcspRespID *create_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X500X500Name *name) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspRespID, initWithOrgSpongycastleAsn1X500X500Name_, name)
}


#line 42
void OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_(OrgSpongycastleCertOcspRespID *self, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo, id<OrgSpongycastleOperatorDigestCalculator> digCalc) {
  NSObject_init(self);
  
#line 47
  @try {
    
#line 49
    if (![((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([((id<OrgSpongycastleOperatorDigestCalculator>) nil_chk(digCalc)) getAlgorithmIdentifier])) isEqual:OrgSpongycastleCertOcspRespID_HASH_SHA1]) {
      
#line 51
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"only SHA-1 can be used with RespID - found: ", [((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([digCalc getAlgorithmIdentifier])) getAlgorithm]));
    }
    
#line 54
    JavaIoOutputStream *digOut = [digCalc getOutputStream];
    
#line 56
    [((JavaIoOutputStream *) nil_chk(digOut)) writeWithByteArray:[((OrgSpongycastleAsn1DERBitString *) nil_chk([((OrgSpongycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(subjectPublicKeyInfo)) getPublicKeyData])) getBytes]];
    [digOut close];
    
#line 59
    self->id__ = new_OrgSpongycastleAsn1OcspResponderID_initWithOrgSpongycastleAsn1ASN1OctetString_(new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_([digCalc getDigest]));
  }
  @catch (JavaLangException *e) {
    
#line 63
    @throw new_OrgSpongycastleCertOcspOCSPException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"problem creating ID: ", e), e);
  }
}


#line 42
OrgSpongycastleCertOcspRespID *new_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo, id<OrgSpongycastleOperatorDigestCalculator> digCalc) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspRespID, initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_, subjectPublicKeyInfo, digCalc)
}


#line 42
OrgSpongycastleCertOcspRespID *create_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo, id<OrgSpongycastleOperatorDigestCalculator> digCalc) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspRespID, initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_, subjectPublicKeyInfo, digCalc)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertOcspRespID)

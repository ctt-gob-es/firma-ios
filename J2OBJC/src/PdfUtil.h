//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/PdfUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfUtil")
#ifdef RESTRICT_PdfUtil
#define INCLUDE_ALL_PdfUtil 0
#else
#define INCLUDE_ALL_PdfUtil 1
#endif
#undef RESTRICT_PdfUtil

#if !defined (EsGobAfirmaSignersPadesPdfUtil_) && (INCLUDE_ALL_PdfUtil || defined(INCLUDE_EsGobAfirmaSignersPadesPdfUtil))
#define EsGobAfirmaSignersPadesPdfUtil_

@class ComAowagieTextPdfPdfReader;
@class ComAowagieTextPdfPdfStamper;
@class ComAowagieTextRectangle;
@class IOSByteArray;
@class JavaUtilGregorianCalendar;
@class JavaUtilProperties;
@protocol JavaUtilList;

/*!
 @brief Utilidades variadas para el tratamiento de PDF.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s
 */
@interface EsGobAfirmaSignersPadesPdfUtil : NSObject

#pragma mark Public

/*!
 @brief Comprueba que la cadena introducida en el campo de texto para la selecci&oacute;n de p&aacute;ginas sea correcta.
 @param rangeInput Entrada de texto.
 @return Devuelve true en caso de que el formato sea correcto y false en caso contrario.
 */
+ (jboolean)checkPagesRangeInputFormatWithNSString:(NSString *)rangeInput;

/*!
 @brief Corrige el tama&ntilde;o del area de firma visible para que no se imprima completamente
  fuera de ninguna p&aacute;gina y que no sobresalga en al menos la primera de las p
 &aacute;ginas en la que se va a imprimir.
 @param pdfReader Lector de PDF donde se encuentran las p &aacute; ginas del documento a firmar.
 @param pagesList Lista con las p &aacute; ginas donde estampar la firma visible.
 @param signaturePosition Posici &oacute; n de la firma.
 */
+ (void)correctPositionSignatureWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)pdfReader
                                              withJavaUtilList:(id<JavaUtilList>)pagesList
                                   withComAowagieTextRectangle:(ComAowagieTextRectangle *)signaturePosition;

/*!
 @brief Obtiene el listado de p&aacute;ginas del documento que se han pedido firmar.
 Si se devuelve una p&aacute;gina '0', se referir&aacute; a una p&aacute;gina
  posterior a la &oacute;ltima.
 @param extraParams Propiedades con la configuracion de firma de las que extraer  las p
  &aacute; ginas.
 @param totalPages N &oacute; mero la  &uacute; ltima p &aacute; gina del documento.
 @return P&aacute;ginas del documento.
 */
+ (id<JavaUtilList>)getPagesWithJavaUtilProperties:(JavaUtilProperties *)extraParams
                                           withInt:(jint)totalPages;

/*!
 @brief Carga en el listado de p&aacute;ginas las p&aacute;ginas indicadas en una cadena, que puede
  ser un n&uacute;mero de p&aacute;gina o un rango de ellas.Las p&aacute;ginas se enumeran
  desde 1 y se pueden referenciar desde el final mediante n&uacute;meros negativos, donde la 
 &uacute;ltima p&aacute;gina ser&iacute;a -1.
 Cualquier n&uacute;mero que exceda el
  n&uacute;mero de p&aacute;ginas ser&aacute; se interpretar&aacute; como la &uacute;ltima
  p&aacute;gina si era positivo o la primera si era negativo. Los rangos se indican con guion
  ('-').
 @param pageStr P &aacute; gina o rango de p &aacute; ginas a tratar.
 @param totalPages N &uacute; mero total de p &aacute; ginas del documento.
 @param pagesList Lista de enteros donde se indican las p &aacute; ginas una a una.
 @throw IncorrectPageExceptionCuando la cadena no es v&aacute;lida.
 */
+ (void)getPagesRangeWithNSString:(NSString *)pageStr
                          withInt:(jint)totalPages
                 withJavaUtilList:(id<JavaUtilList>)pagesList;

/*!
 @brief Obtiene los campos de firma vac&iacute;os de un PDF.
 @param pdf PDF de entrada.
 @return Campos de firma vac&iacute;os del PDF proporcionado.
 */
+ (id<JavaUtilList>)getPdfEmptySignatureFieldsWithByteArray:(IOSByteArray *)pdf;

/*!
 @brief Obtiene el lector iText de PDF.
 @param inPDF PDF de entrada.
 @param xParams Par &aacute; metros adicionales.
 @param headless Si se establece a  <code> true </code>  se evita cualquier di &aacute; logo                  gr &aacute; fico.
 @return Lector iText de PDF.
 @throw PdfIsPasswordProtectedExceptionSi el PDF estaba protegido con contrase&ntilde;a y
                                  esta no se proporcion&oacute;
 @throw BadPdfPasswordExceptionSi el PDF estaba protegido con contrase&ntilde;a y
                                  se indic&oacute; una incorrecta.
 @throw InvalidPdfExceptionSi el PDF era inv&aacute;lido o estaba corrupto.
 @throw IOExceptionSi hay errores en la lectura o escritura de datos.
 */
+ (ComAowagieTextPdfPdfReader *)getPdfReaderWithByteArray:(IOSByteArray *)inPDF
                                   withJavaUtilProperties:(JavaUtilProperties *)xParams
                                              withBoolean:(jboolean)headless;

/*!
 @brief Devuelve la posici&oacute;n de la p&aacute;gina en donde debe agregarse el elemento
  gr&aacute;fico indicado como prefijo.La medida de posicionamiento es el p&iacute;xel y se cuenta en
  el eje horizontal de izquierda a derecha y en el vertical de abajo a arriba.
 @param extraParams Definici &oacute; n de las coordenadas como conjunto de propiedades
 @param prefix Prefijo de las propiedades de coordenada en el conjunto
 @return Rect&aacute;ngulo que define una posici&oacute;n de un elemento en una p&aacute;gina del PDF
 */
+ (ComAowagieTextRectangle *)getPositionOnPageWithJavaUtilProperties:(JavaUtilProperties *)extraParams
                                                        withNSString:(NSString *)prefix;

#pragma mark Package-Private

/*!
 @brief Comprueba si un PDF esta certificados y se pueden agregar firmas a &eacute;l.
 @param pdfCertificationLevel Nivel de certificaci &oacute; n.
 @param extraParams Configuraci &oacute; n establecida para la operaci &oacute; n.
 @throw PdfIsCertifiedExceptionCuando el PDF esta certificado y se requiere
  autorizaci&oacute;n del usuario para firmarlo.
 @throw AOExceptionCuando el PDF est&aacute; certificado y no se permite su firma.
 */
+ (void)checkPdfCertificationWithInt:(jint)pdfCertificationLevel
              withJavaUtilProperties:(JavaUtilProperties *)extraParams;

+ (void)enableLtvWithComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stp;

+ (jboolean)getAppendModeWithJavaUtilProperties:(JavaUtilProperties *)extraParams
                 withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)pdfReader;

/*!
 @brief Obtiene el primer filtro de firma obtenido de un documento PDF.
 Si no se encuentra ninguno, devuelve <code>null</code>.
 @param pdf PDF que analizar.
 @param xParams Par &aacute; metros extra con la configuraci &oacute; n de la operaci &oacute; n.
 @return Filtro de firma o <code>null</code> si no se encuentra.
 @throw IOExceptionCuando ocurre un error al leer el PDF.
 @throw InvalidPdfExceptionCuando los datos proporcionados no son un PDF.
 @throw BadPdfPasswordExceptionCuando se ha insertado una contrase&ntilde;a err&oacute;nea en el PDF.
 */
+ (NSString *)getFirstSupportedSignSubFilterWithByteArray:(IOSByteArray *)pdf
                                   withJavaUtilProperties:(JavaUtilProperties *)xParams;

+ (JavaUtilGregorianCalendar *)getSignTimeWithNSString:(NSString *)stStr;

/*!
 @brief Indica si un PDF es de tipo PDF-A1.
 @param metadata Metadatos XMP del PDF.
 @return <code>true</code> si el PDF es de tipo PDF-A1,
          <code>false</code> en caso contrario.
 */
+ (jboolean)isPdfA1WithByteArray:(IOSByteArray *)metadata;

+ (jboolean)isPdfAxWithByteArray:(IOSByteArray *)metadata;

+ (jboolean)pdfHasUnregisteredSignaturesWithByteArray:(IOSByteArray *)pdf
                               withJavaUtilProperties:(JavaUtilProperties *)xParams;

+ (jboolean)pdfHasUnregisteredSignaturesWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)pdfReader;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaSignersPadesPdfUtil)

FOUNDATION_EXPORT jboolean EsGobAfirmaSignersPadesPdfUtil_isPdfA1WithByteArray_(IOSByteArray *metadata);

FOUNDATION_EXPORT jboolean EsGobAfirmaSignersPadesPdfUtil_isPdfAxWithByteArray_(IOSByteArray *metadata);

FOUNDATION_EXPORT JavaUtilGregorianCalendar *EsGobAfirmaSignersPadesPdfUtil_getSignTimeWithNSString_(NSString *stStr);

FOUNDATION_EXPORT ComAowagieTextPdfPdfReader *EsGobAfirmaSignersPadesPdfUtil_getPdfReaderWithByteArray_withJavaUtilProperties_withBoolean_(IOSByteArray *inPDF, JavaUtilProperties *xParams, jboolean headless);

FOUNDATION_EXPORT void EsGobAfirmaSignersPadesPdfUtil_checkPdfCertificationWithInt_withJavaUtilProperties_(jint pdfCertificationLevel, JavaUtilProperties *extraParams);

FOUNDATION_EXPORT void EsGobAfirmaSignersPadesPdfUtil_enableLtvWithComAowagieTextPdfPdfStamper_(ComAowagieTextPdfPdfStamper *stp);

FOUNDATION_EXPORT jboolean EsGobAfirmaSignersPadesPdfUtil_getAppendModeWithJavaUtilProperties_withComAowagieTextPdfPdfReader_(JavaUtilProperties *extraParams, ComAowagieTextPdfPdfReader *pdfReader);

FOUNDATION_EXPORT jboolean EsGobAfirmaSignersPadesPdfUtil_pdfHasUnregisteredSignaturesWithByteArray_withJavaUtilProperties_(IOSByteArray *pdf, JavaUtilProperties *xParams);

FOUNDATION_EXPORT NSString *EsGobAfirmaSignersPadesPdfUtil_getFirstSupportedSignSubFilterWithByteArray_withJavaUtilProperties_(IOSByteArray *pdf, JavaUtilProperties *xParams);

FOUNDATION_EXPORT jboolean EsGobAfirmaSignersPadesPdfUtil_pdfHasUnregisteredSignaturesWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfPdfReader *pdfReader);

FOUNDATION_EXPORT id<JavaUtilList> EsGobAfirmaSignersPadesPdfUtil_getPdfEmptySignatureFieldsWithByteArray_(IOSByteArray *pdf);

FOUNDATION_EXPORT ComAowagieTextRectangle *EsGobAfirmaSignersPadesPdfUtil_getPositionOnPageWithJavaUtilProperties_withNSString_(JavaUtilProperties *extraParams, NSString *prefix);

FOUNDATION_EXPORT void EsGobAfirmaSignersPadesPdfUtil_getPagesRangeWithNSString_withInt_withJavaUtilList_(NSString *pageStr, jint totalPages, id<JavaUtilList> pagesList);

FOUNDATION_EXPORT void EsGobAfirmaSignersPadesPdfUtil_correctPositionSignatureWithComAowagieTextPdfPdfReader_withJavaUtilList_withComAowagieTextRectangle_(ComAowagieTextPdfPdfReader *pdfReader, id<JavaUtilList> pagesList, ComAowagieTextRectangle *signaturePosition);

FOUNDATION_EXPORT jboolean EsGobAfirmaSignersPadesPdfUtil_checkPagesRangeInputFormatWithNSString_(NSString *rangeInput);

FOUNDATION_EXPORT id<JavaUtilList> EsGobAfirmaSignersPadesPdfUtil_getPagesWithJavaUtilProperties_withInt_(JavaUtilProperties *extraParams, jint totalPages);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaSignersPadesPdfUtil)

#endif

#if !defined (EsGobAfirmaSignersPadesPdfUtil_SignatureField_) && (INCLUDE_ALL_PdfUtil || defined(INCLUDE_EsGobAfirmaSignersPadesPdfUtil_SignatureField))
#define EsGobAfirmaSignersPadesPdfUtil_SignatureField_

/*!
 @brief Campo de firma dentro de un PDF.
 */
@interface EsGobAfirmaSignersPadesPdfUtil_SignatureField : NSObject

#pragma mark Public

/*!
 @brief Crea un campo de firma para un PDF.
 @param pg P &aacute; gina del campo de firma.
 @param llx Coordenada horizontal inferior izquierda de la posici &oacute; n del recuadro visible de la firma dentro de la p &aacute; gina.
 @param lly Coordenada vertical inferior izquierda de la posici &oacute; n del recuadro visible de la firma dentro de la p &aacute; gina.
 @param urx Coordenada horizontal superior derecha de la posici &oacute; n del recuadro visible de la firma dentro de la p &aacute; gina.
 @param ury Coordenada vertical superior derecha de la posici &oacute; n del recuadro visible de la firma dentro de la p &aacute; gina.
 @param n Nombre del campo de firma.
 */
- (instancetype)initWithInt:(jint)pg
                    withInt:(jint)llx
                    withInt:(jint)lly
                    withInt:(jint)urx
                    withInt:(jint)ury
               withNSString:(NSString *)n;

/*!
 @brief Obtiene el nombre del campo de firma.
 @return Nombre del campo de firma.
 */
- (NSString *)getName;

/*!
 @brief Obtiene el n&uacute;mero de p&aacute;gina en el que est&aacute; el campo de firma.
 @return N&uacute;mero de p&aacute;gina en el que est&aacute; el campo de firma (empezando desde 1).
 */
- (jint)getPage;

/*!
 @brief Obtiene la Coordenada horizontal inferior izquierda de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 @return Coordenada horizontal inferior izquierda de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 */
- (jint)getSignaturePositionOnPageLowerLeftX;

/*!
 @brief Obtiene la Coordenada vertical inferior izquierda de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 @return Coordenada vertical inferior izquierda de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 */
- (jint)getSignaturePositionOnPageLowerLeftY;

/*!
 @brief Obtiene la coordenada horizontal superior derecha de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 @return Coordenada horizontal superior derecha de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 */
- (jint)getSignaturePositionOnPageUpperRightX;

/*!
 @brief Obtiene la coordenada vertical superior derecha de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 @return Coordenada vertical superior derecha de la posici&oacute;n del recuadro visible de la firma dentro de la p&aacute;gina.
 */
- (jint)getSignaturePositionOnPageUpperRightY;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaSignersPadesPdfUtil_SignatureField)

FOUNDATION_EXPORT void EsGobAfirmaSignersPadesPdfUtil_SignatureField_initWithInt_withInt_withInt_withInt_withInt_withNSString_(EsGobAfirmaSignersPadesPdfUtil_SignatureField *self, jint pg, jint llx, jint lly, jint urx, jint ury, NSString *n);

FOUNDATION_EXPORT EsGobAfirmaSignersPadesPdfUtil_SignatureField *new_EsGobAfirmaSignersPadesPdfUtil_SignatureField_initWithInt_withInt_withInt_withInt_withInt_withNSString_(jint pg, jint llx, jint lly, jint urx, jint ury, NSString *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaSignersPadesPdfUtil_SignatureField *create_EsGobAfirmaSignersPadesPdfUtil_SignatureField_initWithInt_withInt_withInt_withInt_withInt_withNSString_(jint pg, jint llx, jint lly, jint urx, jint ury, NSString *n);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaSignersPadesPdfUtil_SignatureField)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfUtil")

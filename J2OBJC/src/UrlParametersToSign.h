//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/misc/protocol/UrlParametersToSign.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UrlParametersToSign")
#ifdef RESTRICT_UrlParametersToSign
#define INCLUDE_ALL_UrlParametersToSign 0
#else
#define INCLUDE_ALL_UrlParametersToSign 1
#endif
#undef RESTRICT_UrlParametersToSign

#if !defined (EsGobAfirmaCoreMiscProtocolUrlParametersToSign_) && (INCLUDE_ALL_UrlParametersToSign || defined(INCLUDE_EsGobAfirmaCoreMiscProtocolUrlParametersToSign))
#define EsGobAfirmaCoreMiscProtocolUrlParametersToSign_

#define RESTRICT_UrlParameters 1
#define INCLUDE_EsGobAfirmaCoreMiscProtocolUrlParameters 1
#include "UrlParameters.h"

@protocol JavaUtilMap;

/*!
 @brief Par&aacute;metros de la URL de llamada a la aplicaci&oacute;n.
 */
@interface EsGobAfirmaCoreMiscProtocolUrlParametersToSign : EsGobAfirmaCoreMiscProtocolUrlParameters

#pragma mark Public

/*!
 @brief Construye el conjunto de par&aacute;metros vac&iacute;o.
 */
- (instancetype)init;

/*!
 @brief Crea el conjunto de par&aacute;metros necesario para el uso de la operaci&acute;n
  de firma indicando si es necesario proporcionar la URL del servicio para transmitir
  el resultado.
 @param servicesRequired Indica si es necesario proporcionar la URL del servicio de  guardado.
 */
- (instancetype)initWithBoolean:(jboolean)servicesRequired;

/*!
 @brief Expande los <code>extraParams</code> configurados en la URL que lo permitran.Por ejemplo,
  la pol&iacute;tica de firma establecida mediante "expPolicy" se expandir&aacute; a los
  valores correspondientes de la pol&iacute;tica.
 @throw IncompatiblePolicyExceptionCuando se hayan proporcionado par&aacute;metros
                                      incompatibles con la pol&iacute;tica de firma configurada.
 */
- (void)expandExtraParams;

- (id<JavaUtilMap>)getAnotherParams;

/*!
 @brief Obtiene la versi&oacute;n m&iacute;nima requerida del aplicativo.
 @return Versi&oacute;n m&iacute;nima requerida del aplicativo.
 */
- (NSString *)getMinimumProtocolVersion;

/*!
 @brief Obtiene el tipo de operaci&oacute;n a realizar (firma, cofirma o contrafirma).
 @return Operaci&oacute;n.
 */
- (NSString *)getOperation;

/*!
 @brief Obtiene la opci&oacute;n de configuraci&oacute;n <i>resetsticky</i>.
 @return Opci&oacute;n de configuraci&oacute;n que determina si se debe
          ignorar el cualquier certificado seleccionado (<code>true</code>) o si
          deber&iacute;a usarse este si as&iacute; se indica (<code>false</code>).
 */
- (jboolean)getResetSticky;

/*!
 @brief Obtiene el algoritmo de firma.
 @return Algoritmo de firma
 */
- (NSString *)getSignatureAlgorithm;

/*!
 @brief Obtiene el formato de firma.
 @return Formato de firma
 */
- (NSString *)getSignatureFormat;

/*!
 @brief Obtiene la opci&oacute;n de configuraci&oacute;n <i>sticky</i>.
 @return Opci&oacute;n de configuraci&oacute;n que determina si se debe
          mantener el primer certificado seleccionado (<code>true</code>) o se
          debe pedir siempre que el usuario elija uno (<code>false</code>).
 */
- (jboolean)getSticky;

/*!
 @brief Establece los par&aacute;metros desconocidos que se han encontrado entre los parametros de entrada.
 @param params Par &aacute; metros de entrada.
 */
- (void)setAnotherParamsWithJavaUtilMap:(id<JavaUtilMap>)params;

/*!
 @brief Establece la opci&oacute;n de configuraci&oacute;n <i>resetsticky</i>.
 @param resetSticky Opci &oacute; n de configuraci &oacute; n que determina si se debe          ignorar el certificado mantener el primer certificado seleccionado (<code>true</code> )          o si se puede utilizar en caso de que se solicite (<code>false</code> ).
 */
- (void)setResetStickyWithBoolean:(jboolean)resetSticky;

/*!
 @brief Establece el nombre del formato de firma que se debe utilizar.
 @param format Formato de firma.
 */
- (void)setSignFormatWithNSString:(NSString *)format;

- (void)setSignParametersWithJavaUtilMap:(id<JavaUtilMap>)params;

/*!
 @brief Establece la opci&oacute;n de configuraci&oacute;n <i>sticky</i>.
 @param sticky Opci &oacute; n de configuraci &oacute; n que determina si se debe          mantener el primer certificado seleccionado (<code>true</code> ) o se          debe pedir siempre que el usuario elija uno (<code>false</code> ).
 */
- (void)setStickyWithBoolean:(jboolean)sticky;

#pragma mark Package-Private

- (void)setMinimumProtocolVersionWithNSString:(NSString *)minVer;

- (void)setOperationWithNSString:(NSString *)operation;

- (void)setSignAlgorithmWithNSString:(NSString *)algo;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscProtocolUrlParametersToSign)

FOUNDATION_EXPORT void EsGobAfirmaCoreMiscProtocolUrlParametersToSign_init(EsGobAfirmaCoreMiscProtocolUrlParametersToSign *self);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSign *new_EsGobAfirmaCoreMiscProtocolUrlParametersToSign_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSign *create_EsGobAfirmaCoreMiscProtocolUrlParametersToSign_init(void);

FOUNDATION_EXPORT void EsGobAfirmaCoreMiscProtocolUrlParametersToSign_initWithBoolean_(EsGobAfirmaCoreMiscProtocolUrlParametersToSign *self, jboolean servicesRequired);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSign *new_EsGobAfirmaCoreMiscProtocolUrlParametersToSign_initWithBoolean_(jboolean servicesRequired) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSign *create_EsGobAfirmaCoreMiscProtocolUrlParametersToSign_initWithBoolean_(jboolean servicesRequired);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscProtocolUrlParametersToSign)

#endif

#pragma pop_macro("INCLUDE_ALL_UrlParametersToSign")

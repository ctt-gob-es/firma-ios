//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/protocol/ProtocolVersion.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ProtocolVersion")
#ifdef RESTRICT_ProtocolVersion
#define INCLUDE_ALL_ProtocolVersion 0
#else
#define INCLUDE_ALL_ProtocolVersion 1
#endif
#undef RESTRICT_ProtocolVersion

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (EsGobAfirmaCoreMiscProtocolProtocolVersion_) && (INCLUDE_ALL_ProtocolVersion || defined(INCLUDE_EsGobAfirmaCoreMiscProtocolProtocolVersion))
#define EsGobAfirmaCoreMiscProtocolProtocolVersion_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EsGobAfirmaCoreMiscProtocolProtocolVersion_Enum) {
  EsGobAfirmaCoreMiscProtocolProtocolVersion_Enum_VERSION_0 = 0,
  EsGobAfirmaCoreMiscProtocolProtocolVersion_Enum_VERSION_1 = 1,
  EsGobAfirmaCoreMiscProtocolProtocolVersion_Enum_VERSION_2 = 2,
  EsGobAfirmaCoreMiscProtocolProtocolVersion_Enum_VERSION_3 = 3,
  EsGobAfirmaCoreMiscProtocolProtocolVersion_Enum_VERSION_4 = 4,
};

/*!
 @brief Identificadores de las versiones de protocolo en las que se introducen cambios
  que rompen compatibilidad.Estos identificadores no coindicen con la versi&oacute;n
  de la aplicaci&oacute;n, sino con la versi&oacute;n del protocolo.
 */
@interface EsGobAfirmaCoreMiscProtocolProtocolVersion : JavaLangEnum

#pragma mark Public

/*!
 @brief Devuelve el identificador de version asociado.
 @return Identificador de versi&oacute;n.
 */
- (jint)getVersion;

/*!
 @brief Comprueba si la versi&oacute;n de protocolo indicada esta soportada.
 @param protocolVersion Versi &oacute; n de protocolo que se desea comprobar.
 @return <code>true</code> si la versi&oacute;n de protocolo declarada es mayor o igual a la indicada.
 */
- (jboolean)supportWithInt:(jint)protocolVersion;

/*!
 @brief Comprueba si la versi&oacute;n de protocolo indicada esta soportada.
 @param protocolVersion Versi &oacute; n de protocolo que se desea comprobar.
 @return <code>true</code> si la versi&oacute;n de protocolo declarada es mayor o igual a la indicada.
 */
- (jboolean)supportWithId:(id)protocolVersion;

- (NSString *)description;

+ (EsGobAfirmaCoreMiscProtocolProtocolVersion *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (EsGobAfirmaCoreMiscProtocolProtocolVersion_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscProtocolProtocolVersion)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_values_[];

/*!
 @brief Versi&oacute;n inicial.
 */
inline EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_get_VERSION_0(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscProtocolProtocolVersion, VERSION_0)

/*!
 @brief Versi&oacute;n 1: introduce cambios en el cifrado de los datos para el servidor intermedio.
 */
inline EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_get_VERSION_1(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscProtocolProtocolVersion, VERSION_1)

/*!
 @brief Versi&oacute;n 2: realiza cambios en la codificaci&oacute;n del par&aacute;metro keystore.
 */
inline EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_get_VERSION_2(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscProtocolProtocolVersion, VERSION_2)

/*!
 @brief Versi&oacute;n 3: devuelve el nombre del fichero seleccionado en las operaciones de firma.
 */
inline EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_get_VERSION_3(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscProtocolProtocolVersion, VERSION_3)

/*!
 @brief Seguridad adicional en la comunicacion por WebSockets.
 */
inline EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_get_VERSION_4(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscProtocolProtocolVersion, VERSION_4)

FOUNDATION_EXPORT IOSObjectArray *EsGobAfirmaCoreMiscProtocolProtocolVersion_values(void);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolProtocolVersion *EsGobAfirmaCoreMiscProtocolProtocolVersion_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscProtocolProtocolVersion)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ProtocolVersion")

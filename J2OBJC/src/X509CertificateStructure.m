//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/X509CertificateStructure.java
//

#include "ASN1Encodable.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "AlgorithmIdentifier.h"
#include "BCTime.h"
#include "DERBitString.h"
#include "J2ObjC_source.h"
#include "SubjectPublicKeyInfo.h"
#include "TBSCertificateStructure.h"
#include "X500Name.h"
#include "X509CertificateStructure.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "X509CertificateStructure must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/X509CertificateStructure.java"


#line 23
@implementation OrgSpongycastleAsn1X509X509CertificateStructure


#line 32
+ (OrgSpongycastleAsn1X509X509CertificateStructure *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                            withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1X509X509CertificateStructure_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 39
+ (OrgSpongycastleAsn1X509X509CertificateStructure *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1X509X509CertificateStructure_getInstanceWithId_(obj);
}


#line 54
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1X509X509CertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 75
- (OrgSpongycastleAsn1X509TBSCertificateStructure *)getTBSCertificate {
  
#line 77
  return tbsCert_;
}


#line 80
- (jint)getVersion {
  
#line 82
  return [((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getVersion];
}


#line 85
- (OrgSpongycastleAsn1ASN1Integer *)getSerialNumber {
  
#line 87
  return [((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getSerialNumber];
}


#line 90
- (OrgSpongycastleAsn1X500X500Name *)getIssuer {
  
#line 92
  return [((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getIssuer];
}


#line 95
- (OrgSpongycastleAsn1X509BCTime *)getStartDate {
  
#line 97
  return [((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getStartDate];
}


#line 100
- (OrgSpongycastleAsn1X509BCTime *)getEndDate {
  
#line 102
  return [((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getEndDate];
}


#line 105
- (OrgSpongycastleAsn1X500X500Name *)getSubject {
  
#line 107
  return [((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getSubject];
}


#line 110
- (OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)getSubjectPublicKeyInfo {
  
#line 112
  return [((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbsCert_)) getSubjectPublicKeyInfo];
}


#line 115
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm {
  
#line 117
  return sigAlgId_;
}


#line 120
- (OrgSpongycastleAsn1DERBitString *)getSignature {
  
#line 122
  return sig_;
}


#line 125
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 127
  return seq_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1X509X509CertificateStructure;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509X509CertificateStructure;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509TBSCertificateStructure;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509BCTime;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509BCTime;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509SubjectPublicKeyInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getTBSCertificate);
  methods[4].selector = @selector(getVersion);
  methods[5].selector = @selector(getSerialNumber);
  methods[6].selector = @selector(getIssuer);
  methods[7].selector = @selector(getStartDate);
  methods[8].selector = @selector(getEndDate);
  methods[9].selector = @selector(getSubject);
  methods[10].selector = @selector(getSubjectPublicKeyInfo);
  methods[11].selector = @selector(getSignatureAlgorithm);
  methods[12].selector = @selector(getSignature);
  methods[13].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seq_", "LOrgSpongycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "tbsCert_", "LOrgSpongycastleAsn1X509TBSCertificateStructure;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sigAlgId_", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sig_", "LOrgSpongycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509X509CertificateStructure = { "X509CertificateStructure", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 14, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509X509CertificateStructure;
}

@end


#line 32
OrgSpongycastleAsn1X509X509CertificateStructure *OrgSpongycastleAsn1X509X509CertificateStructure_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1X509X509CertificateStructure_initialize();
  
#line 36
  return OrgSpongycastleAsn1X509X509CertificateStructure_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1X509X509CertificateStructure *OrgSpongycastleAsn1X509X509CertificateStructure_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1X509X509CertificateStructure_initialize();
  
#line 42
  if ([obj isKindOfClass:[OrgSpongycastleAsn1X509X509CertificateStructure class]]) {
    
#line 44
    return (OrgSpongycastleAsn1X509X509CertificateStructure *) obj;
  }
  else if (obj != nil) {
    
#line 48
    return new_OrgSpongycastleAsn1X509X509CertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 51
  return nil;
}


#line 54
void OrgSpongycastleAsn1X509X509CertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509X509CertificateStructure *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 57
  self->seq_ = seq;
  
#line 62
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] == 3) {
    
#line 64
    self->tbsCert_ = OrgSpongycastleAsn1X509TBSCertificateStructure_getInstanceWithId_([seq getObjectAtWithInt:0]);
    self->sigAlgId_ = OrgSpongycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
    
#line 67
    self->sig_ = OrgSpongycastleAsn1DERBitString_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
  else {
    
#line 71
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"sequence wrong size for a certificate");
  }
}


#line 54
OrgSpongycastleAsn1X509X509CertificateStructure *new_OrgSpongycastleAsn1X509X509CertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509CertificateStructure, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 54
OrgSpongycastleAsn1X509X509CertificateStructure *create_OrgSpongycastleAsn1X509X509CertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509CertificateStructure, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509X509CertificateStructure)

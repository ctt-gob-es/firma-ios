//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/signers/der/ByteArrayLexOrder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ByteArrayLexOrder")
#ifdef RESTRICT_ByteArrayLexOrder
#define INCLUDE_ALL_ByteArrayLexOrder 0
#else
#define INCLUDE_ALL_ByteArrayLexOrder 1
#endif
#undef RESTRICT_ByteArrayLexOrder

#if !defined (EsGobAfirmaCoreSignersDerByteArrayLexOrder_) && (INCLUDE_ALL_ByteArrayLexOrder || defined(INCLUDE_EsGobAfirmaCoreSignersDerByteArrayLexOrder))
#define EsGobAfirmaCoreSignersDerByteArrayLexOrder_

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class IOSByteArray;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

/*!
 @brief Compare two byte arrays in lexicographical order.
 @author D. N. Hoover
 */
@interface EsGobAfirmaCoreSignersDerByteArrayLexOrder : NSObject < JavaUtilComparator >

#pragma mark Public

- (instancetype)init;

/*!
 @brief Perform lexicographical comparison of two byte arrays,
  regarding each byte as unsigned.That is, compare array entries
  in order until they differ--the array with the smaller entry
  is "smaller".
 If array entries are
  equal till one array ends, then the longer array is "bigger".
 @param bytes1 first byte array to compare.
 @param bytes2 second byte array to compare.
 @return negative number if bytes1 &lt; bytes2, 0 if bytes1 == bytes2,
  positive number if bytes1 &gt; bytes2.
 */
- (jint)compareWithId:(IOSByteArray *)bytes1
               withId:(IOSByteArray *)bytes2;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreSignersDerByteArrayLexOrder)

FOUNDATION_EXPORT void EsGobAfirmaCoreSignersDerByteArrayLexOrder_init(EsGobAfirmaCoreSignersDerByteArrayLexOrder *self);

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerByteArrayLexOrder *new_EsGobAfirmaCoreSignersDerByteArrayLexOrder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerByteArrayLexOrder *create_EsGobAfirmaCoreSignersDerByteArrayLexOrder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreSignersDerByteArrayLexOrder)

#endif

#pragma pop_macro("INCLUDE_ALL_ByteArrayLexOrder")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/BidiOrder.java
//

#include "BidiOrder.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"

#if !__has_feature(objc_arc)
#error "BidiOrder must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfBidiOrder () {
 @public
  IOSByteArray *initialTypes_;
  IOSByteArray *embeddings_;
  jbyte paragraphEmbeddingLevel_;
  jint textLength_;
  IOSByteArray *resultTypes_;
  IOSByteArray *resultLevels_;
}

/*!
 @brief The algorithm.
 Does not include line-based processing (Rules L1, L2).
  These are applied later in the line-based phase of the algorithm.
 */
- (void)runAlgorithm;

/*!
 @brief 1) determining the paragraph level.
 <p>
  Rules P2, P3. 
 <p>
  At the end of this function, the member variable paragraphEmbeddingLevel is set to either 0 or 1.
 */
- (void)determineParagraphEmbeddingLevel;

/*!
 @brief Process embedding format codes.
 <p>
  Calls processEmbeddings to generate an embedding array from the explicit format codes.  The
  embedding overrides in the array are then applied to the result types, and the result levels are
  initialized.
 - seealso: #processEmbeddings
 */
- (void)determineExplicitEmbeddingLevels;

/*!
 @brief Rules X9.
 Remove explicit codes so that they may be ignored during the remainder
  of the main portion of the algorithm.  The length of the resulting text
  is returned.
 @return the length of the data excluding explicit codes and BN.
 */
- (jint)removeExplicitCodes;

/*!
 @brief Reinsert levels information for explicit codes.
 This is for ease of relating the level information
  to the original input data.  Note that the levels
  assigned to these codes are arbitrary, they're
  chosen so as to avoid breaking level runs.
 @param textLength the length of the data after compression
 @return the length of the data (original length of
  types array supplied to constructor)
 */
- (jint)reinsertExplicitCodesWithInt:(jint)textLength;

/*!
 @brief 2) determining explicit levels
  Rules X1 - X8
  The interaction of these rules makes handling them a bit complex.
 This examines resultTypes but does not modify it.  It returns embedding and
  override information in the result array.  The low 7 bits are the level, the high
  bit is set if the level is an override, and clear if it is an embedding.
 @param resultTypes Result types
 @param paragraphEmbeddingLevel Level
 @return embeddings
 */
+ (IOSByteArray *)processEmbeddingsWithByteArray:(IOSByteArray *)resultTypes
                                        withByte:(jbyte)paragraphEmbeddingLevel;

/*!
 @brief 3) resolving weak types
  Rules W1-W7.
 Note that some weak types (EN, AN) remain after this processing is complete.
 @param start start
 @param limit limit
 @param level level
 @param sor previous character type of the start
 @param eor next character type of the end
 */
- (void)resolveWeakTypesWithInt:(jint)start
                        withInt:(jint)limit
                       withByte:(jbyte)level
                       withByte:(jbyte)sor
                       withByte:(jbyte)eor;

/*!
 @brief 6) resolving neutral types
  Rules N1-N2.
 @param start start
 @param limit limit
 @param level level
 @param sor previous character type of the start
 @param eor next character type of the end
 */
- (void)resolveNeutralTypesWithInt:(jint)start
                           withInt:(jint)limit
                          withByte:(jbyte)level
                          withByte:(jbyte)sor
                          withByte:(jbyte)eor;

/*!
 @brief 7) resolving implicit embedding levels
  Rules I1, I2.
 @param start start
 @param limit limit
 @param level level
 @param sor previous character type of the start
 @param eor next character type of the end
 */
- (void)resolveImplicitLevelsWithInt:(jint)start
                             withInt:(jint)limit
                            withByte:(jbyte)level
                            withByte:(jbyte)sor
                            withByte:(jbyte)eor;

/*!
 @brief Return levels array breaking lines at offsets in linebreaks.
 <br>
  Rule L1. 
 <p>
  The returned levels array contains the resolved level for each
  bidi code passed to the constructor. 
 <p>
  The linebreaks array must include at least one value.
  The values must be in strictly increasing order (no duplicates)
  between 1 and the length of the text, inclusive.  The last value
  must be the length of the text.
 @param linebreaks the offsets at which to break the paragraph
 @return the resolved levels of the text
 */
- (IOSByteArray *)getLevelsWithIntArray:(IOSIntArray *)linebreaks;

/*!
 @brief Return multiline reordering array for a given level array.
 Reordering does not occur across a line break.
 @param levels Levels
 @param linebreaks Line braks
 @return Lines
 */
+ (IOSIntArray *)computeMultilineReorderingWithByteArray:(IOSByteArray *)levels
                                            withIntArray:(IOSIntArray *)linebreaks;

/*!
 @brief Return reordering array for a given level array.This reorders a single line.
 The reordering is a visual to logical map.  For example,
  the leftmost char is string.charAt(order[0]).
  Rule L2.
 @param levels Levels
 @return Reordered levels
 */
+ (IOSIntArray *)computeReorderingWithByteArray:(IOSByteArray *)levels;

/*!
 @brief Return true if the type is considered a whitespace type for the line break rules.
 @param biditype Bidi type
 @return It is Bidi type
 */
+ (jboolean)isWhitespaceWithByte:(jbyte)biditype;

/*!
 @brief Return the strong type (L or R) corresponding to the level.
 @param level Level
 @return Type
 */
+ (jbyte)typeForLevelWithInt:(jint)level;

/*!
 @brief Return the limit of the run starting at index that includes only resultTypes in validSet.
 This checks the value at index, and will return index if that value is not in validSet.
 @param index Index
 @param limit Limit
 @param validSet Valid set
 @return limit
 */
- (jint)findRunLimitWithInt:(jint)index
                    withInt:(jint)limit
              withByteArray:(IOSByteArray *)validSet;

/*!
 @brief Return the start of the run including index that includes only resultTypes in validSet.
 This assumes the value at index is valid, and does not check it.
 @param index Index
 @param validSet Valid set
 @return Index
 */
- (jint)findRunStartWithInt:(jint)index
              withByteArray:(IOSByteArray *)validSet;

/*!
 @brief Set resultTypes from start up to (but not including) limit to newType.
 @param start Start
 @param limit Limit
 @param newType New type
 */
- (void)setTypesWithInt:(jint)start
                withInt:(jint)limit
               withByte:(jbyte)newType;

/*!
 @brief Set resultLevels from start up to (but not including) limit to newLevel.
 @param start Start
 @param limit Limit
 @param newLevel New level
 */
- (void)setLevelsWithInt:(jint)start
                 withInt:(jint)limit
                withByte:(jbyte)newLevel;

/*!
 @brief Throw exception if type array is invalid.
 @param types Types
 */
+ (void)validateTypesWithByteArray:(IOSByteArray *)types;

/*!
 @brief Throw exception if paragraph embedding level is invalid.Special allowance for -1 so that
  default processing can still be performed when using this API.
 @param paragraphEmbeddingLevel level.
 */
+ (void)validateParagraphEmbeddingLevelWithByte:(jbyte)paragraphEmbeddingLevel;

/*!
 @brief Throw exception if line breaks array is invalid.
 @param linebreaks Line breaks
 @param textLength Text length
 */
+ (void)validateLineBreaksWithIntArray:(IOSIntArray *)linebreaks
                               withInt:(jint)textLength;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfBidiOrder, initialTypes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBidiOrder, embeddings_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBidiOrder, resultTypes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBidiOrder, resultLevels_, IOSByteArray *)

/*!
 @brief Left-to-Right Embedding
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_LRE(void);
#define ComAowagieTextPdfBidiOrder_LRE 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, LRE, jbyte)

/*!
 @brief Left-to-Right Override
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_LRO(void);
#define ComAowagieTextPdfBidiOrder_LRO 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, LRO, jbyte)

/*!
 @brief Right-to-Left Embedding
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_RLE(void);
#define ComAowagieTextPdfBidiOrder_RLE 5
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, RLE, jbyte)

/*!
 @brief Right-to-Left Override
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_RLO(void);
#define ComAowagieTextPdfBidiOrder_RLO 6
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, RLO, jbyte)

/*!
 @brief Pop Directional Format
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_PDF(void);
#define ComAowagieTextPdfBidiOrder_PDF 7
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, PDF, jbyte)

/*!
 @brief European Number Separator
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_ES(void);
#define ComAowagieTextPdfBidiOrder_ES 9
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, ES, jbyte)

/*!
 @brief European Number Terminator
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_ET(void);
#define ComAowagieTextPdfBidiOrder_ET 10
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, ET, jbyte)

/*!
 @brief Arabic Number
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_AN(void);
#define ComAowagieTextPdfBidiOrder_AN 11
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, AN, jbyte)

/*!
 @brief Common Number Separator
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_CS(void);
#define ComAowagieTextPdfBidiOrder_CS 12
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, CS, jbyte)

/*!
 @brief Non-Spacing Mark
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_NSM(void);
#define ComAowagieTextPdfBidiOrder_NSM 13
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, NSM, jbyte)

/*!
 @brief Boundary Neutral
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_BN(void);
#define ComAowagieTextPdfBidiOrder_BN 14
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, BN, jbyte)

/*!
 @brief Paragraph Separator
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_B(void);
#define ComAowagieTextPdfBidiOrder_B 15
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, B, jbyte)

/*!
 @brief Segment Separator
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_S(void);
#define ComAowagieTextPdfBidiOrder_S 16
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, S, jbyte)

/*!
 @brief Whitespace
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_WS(void);
#define ComAowagieTextPdfBidiOrder_WS 17
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, WS, jbyte)

/*!
 @brief Other Neutrals
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_ON(void);
#define ComAowagieTextPdfBidiOrder_ON 18
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, ON, jbyte)

/*!
 @brief Minimum bidi type value.
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_TYPE_MIN(void);
#define ComAowagieTextPdfBidiOrder_TYPE_MIN 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, TYPE_MIN, jbyte)

/*!
 @brief Maximum bidi type value.
 */
inline jbyte ComAowagieTextPdfBidiOrder_get_TYPE_MAX(void);
#define ComAowagieTextPdfBidiOrder_TYPE_MAX 18
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBidiOrder, TYPE_MAX, jbyte)

inline IOSByteArray *ComAowagieTextPdfBidiOrder_get_rtypes(void);
static IOSByteArray *ComAowagieTextPdfBidiOrder_rtypes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfBidiOrder, rtypes, IOSByteArray *)

inline IOSCharArray *ComAowagieTextPdfBidiOrder_get_baseTypes(void);
inline IOSCharArray *ComAowagieTextPdfBidiOrder_set_baseTypes(IOSCharArray *value);
static IOSCharArray *ComAowagieTextPdfBidiOrder_baseTypes;
J2OBJC_STATIC_FIELD_OBJ(ComAowagieTextPdfBidiOrder, baseTypes, IOSCharArray *)

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_runAlgorithm(ComAowagieTextPdfBidiOrder *self);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_determineParagraphEmbeddingLevel(ComAowagieTextPdfBidiOrder *self);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_determineExplicitEmbeddingLevels(ComAowagieTextPdfBidiOrder *self);

__attribute__((unused)) static jint ComAowagieTextPdfBidiOrder_removeExplicitCodes(ComAowagieTextPdfBidiOrder *self);

__attribute__((unused)) static jint ComAowagieTextPdfBidiOrder_reinsertExplicitCodesWithInt_(ComAowagieTextPdfBidiOrder *self, jint textLength);

__attribute__((unused)) static IOSByteArray *ComAowagieTextPdfBidiOrder_processEmbeddingsWithByteArray_withByte_(IOSByteArray *resultTypes, jbyte paragraphEmbeddingLevel);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_resolveWeakTypesWithInt_withInt_withByte_withByte_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte level, jbyte sor, jbyte eor);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_resolveNeutralTypesWithInt_withInt_withByte_withByte_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte level, jbyte sor, jbyte eor);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_resolveImplicitLevelsWithInt_withInt_withByte_withByte_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte level, jbyte sor, jbyte eor);

__attribute__((unused)) static IOSByteArray *ComAowagieTextPdfBidiOrder_getLevelsWithIntArray_(ComAowagieTextPdfBidiOrder *self, IOSIntArray *linebreaks);

__attribute__((unused)) static IOSIntArray *ComAowagieTextPdfBidiOrder_computeMultilineReorderingWithByteArray_withIntArray_(IOSByteArray *levels, IOSIntArray *linebreaks);

__attribute__((unused)) static IOSIntArray *ComAowagieTextPdfBidiOrder_computeReorderingWithByteArray_(IOSByteArray *levels);

__attribute__((unused)) static jboolean ComAowagieTextPdfBidiOrder_isWhitespaceWithByte_(jbyte biditype);

__attribute__((unused)) static jbyte ComAowagieTextPdfBidiOrder_typeForLevelWithInt_(jint level);

__attribute__((unused)) static jint ComAowagieTextPdfBidiOrder_findRunLimitWithInt_withInt_withByteArray_(ComAowagieTextPdfBidiOrder *self, jint index, jint limit, IOSByteArray *validSet);

__attribute__((unused)) static jint ComAowagieTextPdfBidiOrder_findRunStartWithInt_withByteArray_(ComAowagieTextPdfBidiOrder *self, jint index, IOSByteArray *validSet);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_setTypesWithInt_withInt_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte newType);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_setLevelsWithInt_withInt_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte newLevel);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_validateTypesWithByteArray_(IOSByteArray *types);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_validateParagraphEmbeddingLevelWithByte_(jbyte paragraphEmbeddingLevel);

__attribute__((unused)) static void ComAowagieTextPdfBidiOrder_validateLineBreaksWithIntArray_withInt_(IOSIntArray *linebreaks, jint textLength);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/BidiOrder.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfBidiOrder)


#line 157
@implementation ComAowagieTextPdfBidiOrder


#line 239
- (instancetype)initPackagePrivateWithCharArray:(IOSCharArray *)text
                                        withInt:(jint)offset
                                        withInt:(jint)length
                                       withByte:(jbyte)paragraphEmbeddingLevel {
  ComAowagieTextPdfBidiOrder_initPackagePrivateWithCharArray_withInt_withInt_withByte_(self, text, offset, length, paragraphEmbeddingLevel);
  return self;
}


#line 251
+ (jbyte)getDirectionWithChar:(jchar)c {
  return ComAowagieTextPdfBidiOrder_getDirectionWithChar_(c);
}


#line 260
- (void)runAlgorithm {
  ComAowagieTextPdfBidiOrder_runAlgorithm(self);
}


#line 334
- (void)determineParagraphEmbeddingLevel {
  ComAowagieTextPdfBidiOrder_determineParagraphEmbeddingLevel(self);
}


#line 365
- (void)determineExplicitEmbeddingLevels {
  ComAowagieTextPdfBidiOrder_determineExplicitEmbeddingLevels(self);
}


#line 385
- (jint)removeExplicitCodes {
  return ComAowagieTextPdfBidiOrder_removeExplicitCodes(self);
}


#line 409
- (jint)reinsertExplicitCodesWithInt:(jint)textLength {
  return ComAowagieTextPdfBidiOrder_reinsertExplicitCodesWithInt_(self, textLength);
}


#line 455
+ (IOSByteArray *)processEmbeddingsWithByteArray:(IOSByteArray *)resultTypes
                                        withByte:(jbyte)paragraphEmbeddingLevel {
  return ComAowagieTextPdfBidiOrder_processEmbeddingsWithByteArray_withByte_(resultTypes, paragraphEmbeddingLevel);
}


#line 588
- (void)resolveWeakTypesWithInt:(jint)start
                        withInt:(jint)limit
                       withByte:(jbyte)level
                       withByte:(jbyte)sor
                       withByte:(jbyte)eor {
  ComAowagieTextPdfBidiOrder_resolveWeakTypesWithInt_withInt_withByte_withByte_withByte_(self, start, limit, level, sor, eor);
}


#line 708
- (void)resolveNeutralTypesWithInt:(jint)start
                           withInt:(jint)limit
                          withByte:(jbyte)level
                          withByte:(jbyte)sor
                          withByte:(jbyte)eor {
  ComAowagieTextPdfBidiOrder_resolveNeutralTypesWithInt_withInt_withByte_withByte_withByte_(self, start, limit, level, sor, eor);
}


#line 777
- (void)resolveImplicitLevelsWithInt:(jint)start
                             withInt:(jint)limit
                            withByte:(jbyte)level
                            withByte:(jbyte)sor
                            withByte:(jbyte)eor {
  ComAowagieTextPdfBidiOrder_resolveImplicitLevelsWithInt_withInt_withByte_withByte_withByte_(self, start, limit, level, sor, eor);
}


#line 807
- (IOSByteArray *)getLevels {
  return ComAowagieTextPdfBidiOrder_getLevelsWithIntArray_(self, [IOSIntArray newArrayWithInts:(jint[]){ self->textLength_ } count:1]);
}


#line 826
- (IOSByteArray *)getLevelsWithIntArray:(IOSIntArray *)linebreaks {
  return ComAowagieTextPdfBidiOrder_getLevelsWithIntArray_(self, linebreaks);
}


#line 889
+ (IOSIntArray *)computeMultilineReorderingWithByteArray:(IOSByteArray *)levels
                                            withIntArray:(IOSIntArray *)linebreaks {
  return ComAowagieTextPdfBidiOrder_computeMultilineReorderingWithByteArray_withIntArray_(levels, linebreaks);
}


#line 916
+ (IOSIntArray *)computeReorderingWithByteArray:(IOSByteArray *)levels {
  return ComAowagieTextPdfBidiOrder_computeReorderingWithByteArray_(levels);
}


#line 971
- (jbyte)getBaseLevel {
  return self->paragraphEmbeddingLevel_;
}


#line 982
+ (jboolean)isWhitespaceWithByte:(jbyte)biditype {
  return ComAowagieTextPdfBidiOrder_isWhitespaceWithByte_(biditype);
}


#line 1002
+ (jbyte)typeForLevelWithInt:(jint)level {
  return ComAowagieTextPdfBidiOrder_typeForLevelWithInt_(level);
}


#line 1014
- (jint)findRunLimitWithInt:(jint)index
                    withInt:(jint)limit
              withByteArray:(IOSByteArray *)validSet {
  return ComAowagieTextPdfBidiOrder_findRunLimitWithInt_withInt_withByteArray_(self, index, limit, validSet);
}


#line 1037
- (jint)findRunStartWithInt:(jint)index
              withByteArray:(IOSByteArray *)validSet {
  return ComAowagieTextPdfBidiOrder_findRunStartWithInt_withByteArray_(self, index, validSet);
}


#line 1057
- (void)setTypesWithInt:(jint)start
                withInt:(jint)limit
               withByte:(jbyte)newType {
  ComAowagieTextPdfBidiOrder_setTypesWithInt_withInt_withByte_(self, start, limit, newType);
}


#line 1069
- (void)setLevelsWithInt:(jint)start
                 withInt:(jint)limit
                withByte:(jbyte)newLevel {
  ComAowagieTextPdfBidiOrder_setLevelsWithInt_withInt_withByte_(self, start, limit, newLevel);
}


#line 1081
+ (void)validateTypesWithByteArray:(IOSByteArray *)types {
  ComAowagieTextPdfBidiOrder_validateTypesWithByteArray_(types);
}


#line 1102
+ (void)validateParagraphEmbeddingLevelWithByte:(jbyte)paragraphEmbeddingLevel {
  ComAowagieTextPdfBidiOrder_validateParagraphEmbeddingLevelWithByte_(paragraphEmbeddingLevel);
}


#line 1115
+ (void)validateLineBreaksWithIntArray:(IOSIntArray *)linebreaks
                               withInt:(jint)textLength {
  ComAowagieTextPdfBidiOrder_validateLineBreaksWithIntArray_withInt_(linebreaks, textLength);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "B", 0x8, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[I", 0xa, 13, 14, -1, -1, -1, -1 },
    { NULL, "[I", 0xa, 15, 16, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 17, 18, -1, -1, -1, -1 },
    { NULL, "B", 0xa, 19, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 20, 21, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 22, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 26, 25, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 27, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 28, 18, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 29, 30, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithCharArray:withInt:withInt:withByte:);
  methods[1].selector = @selector(getDirectionWithChar:);
  methods[2].selector = @selector(runAlgorithm);
  methods[3].selector = @selector(determineParagraphEmbeddingLevel);
  methods[4].selector = @selector(determineExplicitEmbeddingLevels);
  methods[5].selector = @selector(removeExplicitCodes);
  methods[6].selector = @selector(reinsertExplicitCodesWithInt:);
  methods[7].selector = @selector(processEmbeddingsWithByteArray:withByte:);
  methods[8].selector = @selector(resolveWeakTypesWithInt:withInt:withByte:withByte:withByte:);
  methods[9].selector = @selector(resolveNeutralTypesWithInt:withInt:withByte:withByte:withByte:);
  methods[10].selector = @selector(resolveImplicitLevelsWithInt:withInt:withByte:withByte:withByte:);
  methods[11].selector = @selector(getLevels);
  methods[12].selector = @selector(getLevelsWithIntArray:);
  methods[13].selector = @selector(computeMultilineReorderingWithByteArray:withIntArray:);
  methods[14].selector = @selector(computeReorderingWithByteArray:);
  methods[15].selector = @selector(getBaseLevel);
  methods[16].selector = @selector(isWhitespaceWithByte:);
  methods[17].selector = @selector(typeForLevelWithInt:);
  methods[18].selector = @selector(findRunLimitWithInt:withInt:withByteArray:);
  methods[19].selector = @selector(findRunStartWithInt:withByteArray:);
  methods[20].selector = @selector(setTypesWithInt:withInt:withByte:);
  methods[21].selector = @selector(setLevelsWithInt:withInt:withByte:);
  methods[22].selector = @selector(validateTypesWithByteArray:);
  methods[23].selector = @selector(validateParagraphEmbeddingLevelWithByte:);
  methods[24].selector = @selector(validateLineBreaksWithIntArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "initialTypes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "embeddings_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "paragraphEmbeddingLevel_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "textLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "resultTypes_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "resultLevels_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "L", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_L, 0x19, -1, -1, -1, -1 },
    { "LRE", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_LRE, 0x1a, -1, -1, -1, -1 },
    { "LRO", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_LRO, 0x1a, -1, -1, -1, -1 },
    { "R", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_R, 0x19, -1, -1, -1, -1 },
    { "AL", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_AL, 0x19, -1, -1, -1, -1 },
    { "RLE", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_RLE, 0x1a, -1, -1, -1, -1 },
    { "RLO", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_RLO, 0x1a, -1, -1, -1, -1 },
    { "PDF", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_PDF, 0x1a, -1, -1, -1, -1 },
    { "EN", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_EN, 0x19, -1, -1, -1, -1 },
    { "ES", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_ES, 0x1a, -1, -1, -1, -1 },
    { "ET", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_ET, 0x1a, -1, -1, -1, -1 },
    { "AN", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_AN, 0x1a, -1, -1, -1, -1 },
    { "CS", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_CS, 0x1a, -1, -1, -1, -1 },
    { "NSM", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_NSM, 0x1a, -1, -1, -1, -1 },
    { "BN", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_BN, 0x1a, -1, -1, -1, -1 },
    { "B", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_B, 0x1a, -1, -1, -1, -1 },
    { "S", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_S, 0x1a, -1, -1, -1, -1 },
    { "WS", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_WS, 0x1a, -1, -1, -1, -1 },
    { "ON", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_ON, 0x1a, -1, -1, -1, -1 },
    { "TYPE_MIN", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_TYPE_MIN, 0x1a, -1, -1, -1, -1 },
    { "TYPE_MAX", "B", .constantValue.asChar = ComAowagieTextPdfBidiOrder_TYPE_MAX, 0x1a, -1, -1, -1, -1 },
    { "rtypes", "[B", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "baseTypes", "[C", .constantValue.asLong = 0, 0xa, -1, 32, -1, -1 },
  };
  static const void *ptrTable[] = { "[CIIB", "getDirection", "C", "reinsertExplicitCodes", "I", "processEmbeddings", "[BB", "resolveWeakTypes", "IIBBB", "resolveNeutralTypes", "resolveImplicitLevels", "getLevels", "[I", "computeMultilineReordering", "[B[I", "computeReordering", "[B", "isWhitespace", "B", "typeForLevel", "findRunLimit", "II[B", "findRunStart", "I[B", "setTypes", "IIB", "setLevels", "validateTypes", "validateParagraphEmbeddingLevel", "validateLineBreaks", "[II", &ComAowagieTextPdfBidiOrder_rtypes, &ComAowagieTextPdfBidiOrder_baseTypes };
  static const J2ObjcClassInfo _ComAowagieTextPdfBidiOrder = { "BidiOrder", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x10, 25, 29, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfBidiOrder;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfBidiOrder class]) {
    ComAowagieTextPdfBidiOrder_rtypes = [IOSByteArray newArrayWithLength:
#line 1129
    (jint) 0x10000];
    ComAowagieTextPdfBidiOrder_baseTypes = [IOSCharArray newArrayWithChars:(jchar[]){
#line 1132
      0, 8, (jchar) ComAowagieTextPdfBidiOrder_BN, 9, 9, (jchar) ComAowagieTextPdfBidiOrder_S, 10, 10, (jchar) ComAowagieTextPdfBidiOrder_B, 11, 11, (jchar) ComAowagieTextPdfBidiOrder_S, 12, 12, (jchar) ComAowagieTextPdfBidiOrder_WS, 13, 13, (jchar) ComAowagieTextPdfBidiOrder_B,
#line 1133
      14, 27, (jchar) ComAowagieTextPdfBidiOrder_BN, 28, 30, (jchar) ComAowagieTextPdfBidiOrder_B, 31, 31, (jchar) ComAowagieTextPdfBidiOrder_S, 32, 32, (jchar) ComAowagieTextPdfBidiOrder_WS, 33, 34, (jchar) ComAowagieTextPdfBidiOrder_ON, 35, 37, (jchar) ComAowagieTextPdfBidiOrder_ET,
#line 1134
      38, 42, (jchar) ComAowagieTextPdfBidiOrder_ON, 43, 43, (jchar) ComAowagieTextPdfBidiOrder_ET, 44, 44, (jchar) ComAowagieTextPdfBidiOrder_CS, 45, 45, (jchar) ComAowagieTextPdfBidiOrder_ET, 46, 46, (jchar) ComAowagieTextPdfBidiOrder_CS, 47, 47, (jchar) ComAowagieTextPdfBidiOrder_ES,
#line 1135
      48, 57, (jchar) ComAowagieTextPdfBidiOrder_EN, 58, 58, (jchar) ComAowagieTextPdfBidiOrder_CS, 59, 64, (jchar) ComAowagieTextPdfBidiOrder_ON, 65, 90, (jchar) ComAowagieTextPdfBidiOrder_L, 91, 96, (jchar) ComAowagieTextPdfBidiOrder_ON, 97, 122, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1136
      123, 126, (jchar) ComAowagieTextPdfBidiOrder_ON, 127, 132, (jchar) ComAowagieTextPdfBidiOrder_BN, 133, 133, (jchar) ComAowagieTextPdfBidiOrder_B, 134, 159, (jchar) ComAowagieTextPdfBidiOrder_BN, 160, 160, (jchar) ComAowagieTextPdfBidiOrder_CS,
#line 1137
      161, 161, (jchar) ComAowagieTextPdfBidiOrder_ON, 162, 165, (jchar) ComAowagieTextPdfBidiOrder_ET, 166, 169, (jchar) ComAowagieTextPdfBidiOrder_ON, 170, 170, (jchar) ComAowagieTextPdfBidiOrder_L, 171, 175, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1138
      176, 177, (jchar) ComAowagieTextPdfBidiOrder_ET, 178, 179, (jchar) ComAowagieTextPdfBidiOrder_EN, 180, 180, (jchar) ComAowagieTextPdfBidiOrder_ON, 181, 181, (jchar) ComAowagieTextPdfBidiOrder_L, 182, 184, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1139
      185, 185, (jchar) ComAowagieTextPdfBidiOrder_EN, 186, 186, (jchar) ComAowagieTextPdfBidiOrder_L, 187, 191, (jchar) ComAowagieTextPdfBidiOrder_ON, 192, 214, (jchar) ComAowagieTextPdfBidiOrder_L, 215, 215, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1140
      216, 246, (jchar) ComAowagieTextPdfBidiOrder_L, 247, 247, (jchar) ComAowagieTextPdfBidiOrder_ON, 248, 696, (jchar) ComAowagieTextPdfBidiOrder_L, 697, 698, (jchar) ComAowagieTextPdfBidiOrder_ON, 699, 705, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1141
      706, 719, (jchar) ComAowagieTextPdfBidiOrder_ON, 720, 721, (jchar) ComAowagieTextPdfBidiOrder_L, 722, 735, (jchar) ComAowagieTextPdfBidiOrder_ON, 736, 740, (jchar) ComAowagieTextPdfBidiOrder_L, 741, 749, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1142
      750, 750, (jchar) ComAowagieTextPdfBidiOrder_L, 751, 767, (jchar) ComAowagieTextPdfBidiOrder_ON, 768, 855, (jchar) ComAowagieTextPdfBidiOrder_NSM, 856, 860, (jchar) ComAowagieTextPdfBidiOrder_L, 861, 879, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1143
      880, 883, (jchar) ComAowagieTextPdfBidiOrder_L, 884, 885, (jchar) ComAowagieTextPdfBidiOrder_ON, 886, 893, (jchar) ComAowagieTextPdfBidiOrder_L, 894, 894, (jchar) ComAowagieTextPdfBidiOrder_ON, 895, 899, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1144
      900, 901, (jchar) ComAowagieTextPdfBidiOrder_ON, 902, 902, (jchar) ComAowagieTextPdfBidiOrder_L, 903, 903, (jchar) ComAowagieTextPdfBidiOrder_ON, 904, 1013, (jchar) ComAowagieTextPdfBidiOrder_L, 1014, 1014, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1145
      1015, 1154, (jchar) ComAowagieTextPdfBidiOrder_L, 1155, 1158, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1159, 1159, (jchar) ComAowagieTextPdfBidiOrder_L, 1160, 1161, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1146
      1162, 1417, (jchar) ComAowagieTextPdfBidiOrder_L, 1418, 1418, (jchar) ComAowagieTextPdfBidiOrder_ON, 1419, 1424, (jchar) ComAowagieTextPdfBidiOrder_L, 1425, 1441, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1147
      1442, 1442, (jchar) ComAowagieTextPdfBidiOrder_L, 1443, 1465, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1466, 1466, (jchar) ComAowagieTextPdfBidiOrder_L, 1467, 1469, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1148
      1470, 1470, (jchar) ComAowagieTextPdfBidiOrder_R, 1471, 1471, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1472, 1472, (jchar) ComAowagieTextPdfBidiOrder_R, 1473, 1474, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1149
      1475, 1475, (jchar) ComAowagieTextPdfBidiOrder_R, 1476, 1476, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1477, 1487, (jchar) ComAowagieTextPdfBidiOrder_L, 1488, 1514, (jchar) ComAowagieTextPdfBidiOrder_R,
#line 1150
      1515, 1519, (jchar) ComAowagieTextPdfBidiOrder_L, 1520, 1524, (jchar) ComAowagieTextPdfBidiOrder_R, 1525, 1535, (jchar) ComAowagieTextPdfBidiOrder_L, 1536, 1539, (jchar) ComAowagieTextPdfBidiOrder_AL,
#line 1151
      1540, 1547, (jchar) ComAowagieTextPdfBidiOrder_L, 1548, 1548, (jchar) ComAowagieTextPdfBidiOrder_CS, 1549, 1549, (jchar) ComAowagieTextPdfBidiOrder_AL, 1550, 1551, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1152
      1552, 1557, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1558, 1562, (jchar) ComAowagieTextPdfBidiOrder_L, 1563, 1563, (jchar) ComAowagieTextPdfBidiOrder_AL, 1564, 1566, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1153
      1567, 1567, (jchar) ComAowagieTextPdfBidiOrder_AL, 1568, 1568, (jchar) ComAowagieTextPdfBidiOrder_L, 1569, 1594, (jchar) ComAowagieTextPdfBidiOrder_AL, 1595, 1599, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1154
      1600, 1610, (jchar) ComAowagieTextPdfBidiOrder_AL, 1611, 1624, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1625, 1631, (jchar) ComAowagieTextPdfBidiOrder_L, 1632, 1641, (jchar) ComAowagieTextPdfBidiOrder_AN,
#line 1155
      1642, 1642, (jchar) ComAowagieTextPdfBidiOrder_ET, 1643, 1644, (jchar) ComAowagieTextPdfBidiOrder_AN, 1645, 1647, (jchar) ComAowagieTextPdfBidiOrder_AL, 1648, 1648, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1156
      1649, 1749, (jchar) ComAowagieTextPdfBidiOrder_AL, 1750, 1756, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1757, 1757, (jchar) ComAowagieTextPdfBidiOrder_AL, 1758, 1764, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1157
      1765, 1766, (jchar) ComAowagieTextPdfBidiOrder_AL, 1767, 1768, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1769, 1769, (jchar) ComAowagieTextPdfBidiOrder_ON, 1770, 1773, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1158
      1774, 1775, (jchar) ComAowagieTextPdfBidiOrder_AL, 1776, 1785, (jchar) ComAowagieTextPdfBidiOrder_EN, 1786, 1805, (jchar) ComAowagieTextPdfBidiOrder_AL, 1806, 1806, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1159
      1807, 1807, (jchar) ComAowagieTextPdfBidiOrder_BN, 1808, 1808, (jchar) ComAowagieTextPdfBidiOrder_AL, 1809, 1809, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1810, 1839, (jchar) ComAowagieTextPdfBidiOrder_AL,
#line 1160
      1840, 1866, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1867, 1868, (jchar) ComAowagieTextPdfBidiOrder_L, 1869, 1871, (jchar) ComAowagieTextPdfBidiOrder_AL, 1872, 1919, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1161
      1920, 1957, (jchar) ComAowagieTextPdfBidiOrder_AL, 1958, 1968, (jchar) ComAowagieTextPdfBidiOrder_NSM, 1969, 1969, (jchar) ComAowagieTextPdfBidiOrder_AL, 1970, 2304, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1162
      2305, 2306, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2307, 2363, (jchar) ComAowagieTextPdfBidiOrder_L, 2364, 2364, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2365, 2368, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1163
      2369, 2376, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2377, 2380, (jchar) ComAowagieTextPdfBidiOrder_L, 2381, 2381, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2382, 2384, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1164
      2385, 2388, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2389, 2401, (jchar) ComAowagieTextPdfBidiOrder_L, 2402, 2403, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2404, 2432, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1165
      2433, 2433, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2434, 2491, (jchar) ComAowagieTextPdfBidiOrder_L, 2492, 2492, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2493, 2496, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1166
      2497, 2500, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2501, 2508, (jchar) ComAowagieTextPdfBidiOrder_L, 2509, 2509, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2510, 2529, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1167
      2530, 2531, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2532, 2545, (jchar) ComAowagieTextPdfBidiOrder_L, 2546, 2547, (jchar) ComAowagieTextPdfBidiOrder_ET, 2548, 2560, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1168
      2561, 2562, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2563, 2619, (jchar) ComAowagieTextPdfBidiOrder_L, 2620, 2620, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2621, 2624, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1169
      2625, 2626, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2627, 2630, (jchar) ComAowagieTextPdfBidiOrder_L, 2631, 2632, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2633, 2634, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1170
      2635, 2637, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2638, 2671, (jchar) ComAowagieTextPdfBidiOrder_L, 2672, 2673, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2674, 2688, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1171
      2689, 2690, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2691, 2747, (jchar) ComAowagieTextPdfBidiOrder_L, 2748, 2748, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2749, 2752, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1172
      2753, 2757, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2758, 2758, (jchar) ComAowagieTextPdfBidiOrder_L, 2759, 2760, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2761, 2764, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1173
      2765, 2765, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2766, 2785, (jchar) ComAowagieTextPdfBidiOrder_L, 2786, 2787, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2788, 2800, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1174
      2801, 2801, (jchar) ComAowagieTextPdfBidiOrder_ET, 2802, 2816, (jchar) ComAowagieTextPdfBidiOrder_L, 2817, 2817, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2818, 2875, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1175
      2876, 2876, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2877, 2878, (jchar) ComAowagieTextPdfBidiOrder_L, 2879, 2879, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2880, 2880, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1176
      2881, 2883, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2884, 2892, (jchar) ComAowagieTextPdfBidiOrder_L, 2893, 2893, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2894, 2901, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1177
      2902, 2902, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2903, 2945, (jchar) ComAowagieTextPdfBidiOrder_L, 2946, 2946, (jchar) ComAowagieTextPdfBidiOrder_NSM, 2947, 3007, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1178
      3008, 3008, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3009, 3020, (jchar) ComAowagieTextPdfBidiOrder_L, 3021, 3021, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3022, 3058, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1179
      3059, 3064, (jchar) ComAowagieTextPdfBidiOrder_ON, 3065, 3065, (jchar) ComAowagieTextPdfBidiOrder_ET, 3066, 3066, (jchar) ComAowagieTextPdfBidiOrder_ON, 3067, 3133, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1180
      3134, 3136, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3137, 3141, (jchar) ComAowagieTextPdfBidiOrder_L, 3142, 3144, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3145, 3145, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1181
      3146, 3149, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3150, 3156, (jchar) ComAowagieTextPdfBidiOrder_L, 3157, 3158, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3159, 3259, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1182
      3260, 3260, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3261, 3275, (jchar) ComAowagieTextPdfBidiOrder_L, 3276, 3277, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3278, 3392, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1183
      3393, 3395, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3396, 3404, (jchar) ComAowagieTextPdfBidiOrder_L, 3405, 3405, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3406, 3529, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1184
      3530, 3530, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3531, 3537, (jchar) ComAowagieTextPdfBidiOrder_L, 3538, 3540, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3541, 3541, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1185
      3542, 3542, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3543, 3632, (jchar) ComAowagieTextPdfBidiOrder_L, 3633, 3633, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3634, 3635, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1186
      3636, 3642, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3643, 3646, (jchar) ComAowagieTextPdfBidiOrder_L, 3647, 3647, (jchar) ComAowagieTextPdfBidiOrder_ET, 3648, 3654, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1187
      3655, 3662, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3663, 3760, (jchar) ComAowagieTextPdfBidiOrder_L, 3761, 3761, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3762, 3763, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1188
      3764, 3769, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3770, 3770, (jchar) ComAowagieTextPdfBidiOrder_L, 3771, 3772, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3773, 3783, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1189
      3784, 3789, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3790, 3863, (jchar) ComAowagieTextPdfBidiOrder_L, 3864, 3865, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3866, 3892, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1190
      3893, 3893, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3894, 3894, (jchar) ComAowagieTextPdfBidiOrder_L, 3895, 3895, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3896, 3896, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1191
      3897, 3897, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3898, 3901, (jchar) ComAowagieTextPdfBidiOrder_ON, 3902, 3952, (jchar) ComAowagieTextPdfBidiOrder_L, 3953, 3966, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1192
      3967, 3967, (jchar) ComAowagieTextPdfBidiOrder_L, 3968, 3972, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3973, 3973, (jchar) ComAowagieTextPdfBidiOrder_L, 3974, 3975, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1193
      3976, 3983, (jchar) ComAowagieTextPdfBidiOrder_L, 3984, 3991, (jchar) ComAowagieTextPdfBidiOrder_NSM, 3992, 3992, (jchar) ComAowagieTextPdfBidiOrder_L, 3993, 4028, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1194
      4029, 4037, (jchar) ComAowagieTextPdfBidiOrder_L, 4038, 4038, (jchar) ComAowagieTextPdfBidiOrder_NSM, 4039, 4140, (jchar) ComAowagieTextPdfBidiOrder_L, 4141, 4144, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1195
      4145, 4145, (jchar) ComAowagieTextPdfBidiOrder_L, 4146, 4146, (jchar) ComAowagieTextPdfBidiOrder_NSM, 4147, 4149, (jchar) ComAowagieTextPdfBidiOrder_L, 4150, 4151, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1196
      4152, 4152, (jchar) ComAowagieTextPdfBidiOrder_L, 4153, 4153, (jchar) ComAowagieTextPdfBidiOrder_NSM, 4154, 4183, (jchar) ComAowagieTextPdfBidiOrder_L, 4184, 4185, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1197
      4186, 5759, (jchar) ComAowagieTextPdfBidiOrder_L, 5760, 5760, (jchar) ComAowagieTextPdfBidiOrder_WS, 5761, 5786, (jchar) ComAowagieTextPdfBidiOrder_L, 5787, 5788, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1198
      5789, 5905, (jchar) ComAowagieTextPdfBidiOrder_L, 5906, 5908, (jchar) ComAowagieTextPdfBidiOrder_NSM, 5909, 5937, (jchar) ComAowagieTextPdfBidiOrder_L, 5938, 5940, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1199
      5941, 5969, (jchar) ComAowagieTextPdfBidiOrder_L, 5970, 5971, (jchar) ComAowagieTextPdfBidiOrder_NSM, 5972, 6001, (jchar) ComAowagieTextPdfBidiOrder_L, 6002, 6003, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1200
      6004, 6070, (jchar) ComAowagieTextPdfBidiOrder_L, 6071, 6077, (jchar) ComAowagieTextPdfBidiOrder_NSM, 6078, 6085, (jchar) ComAowagieTextPdfBidiOrder_L, 6086, 6086, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1201
      6087, 6088, (jchar) ComAowagieTextPdfBidiOrder_L, 6089, 6099, (jchar) ComAowagieTextPdfBidiOrder_NSM, 6100, 6106, (jchar) ComAowagieTextPdfBidiOrder_L, 6107, 6107, (jchar) ComAowagieTextPdfBidiOrder_ET,
#line 1202
      6108, 6108, (jchar) ComAowagieTextPdfBidiOrder_L, 6109, 6109, (jchar) ComAowagieTextPdfBidiOrder_NSM, 6110, 6127, (jchar) ComAowagieTextPdfBidiOrder_L, 6128, 6137, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1203
      6138, 6143, (jchar) ComAowagieTextPdfBidiOrder_L, 6144, 6154, (jchar) ComAowagieTextPdfBidiOrder_ON, 6155, 6157, (jchar) ComAowagieTextPdfBidiOrder_NSM, 6158, 6158, (jchar) ComAowagieTextPdfBidiOrder_WS,
#line 1204
      6159, 6312, (jchar) ComAowagieTextPdfBidiOrder_L, 6313, 6313, (jchar) ComAowagieTextPdfBidiOrder_NSM, 6314, 6431, (jchar) ComAowagieTextPdfBidiOrder_L, 6432, 6434, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1205
      6435, 6438, (jchar) ComAowagieTextPdfBidiOrder_L, 6439, 6443, (jchar) ComAowagieTextPdfBidiOrder_NSM, 6444, 6449, (jchar) ComAowagieTextPdfBidiOrder_L, 6450, 6450, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1206
      6451, 6456, (jchar) ComAowagieTextPdfBidiOrder_L, 6457, 6459, (jchar) ComAowagieTextPdfBidiOrder_NSM, 6460, 6463, (jchar) ComAowagieTextPdfBidiOrder_L, 6464, 6464, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1207
      6465, 6467, (jchar) ComAowagieTextPdfBidiOrder_L, 6468, 6469, (jchar) ComAowagieTextPdfBidiOrder_ON, 6470, 6623, (jchar) ComAowagieTextPdfBidiOrder_L, 6624, 6655, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1208
      6656, 8124, (jchar) ComAowagieTextPdfBidiOrder_L, 8125, 8125, (jchar) ComAowagieTextPdfBidiOrder_ON, 8126, 8126, (jchar) ComAowagieTextPdfBidiOrder_L, 8127, 8129, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1209
      8130, 8140, (jchar) ComAowagieTextPdfBidiOrder_L, 8141, 8143, (jchar) ComAowagieTextPdfBidiOrder_ON, 8144, 8156, (jchar) ComAowagieTextPdfBidiOrder_L, 8157, 8159, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1210
      8160, 8172, (jchar) ComAowagieTextPdfBidiOrder_L, 8173, 8175, (jchar) ComAowagieTextPdfBidiOrder_ON, 8176, 8188, (jchar) ComAowagieTextPdfBidiOrder_L, 8189, 8190, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1211
      8191, 8191, (jchar) ComAowagieTextPdfBidiOrder_L, 8192, 8202, (jchar) ComAowagieTextPdfBidiOrder_WS, 8203, 8205, (jchar) ComAowagieTextPdfBidiOrder_BN, 8206, 8206, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1212
      8207, 8207, (jchar) ComAowagieTextPdfBidiOrder_R, 8208, 8231, (jchar) ComAowagieTextPdfBidiOrder_ON, 8232, 8232, (jchar) ComAowagieTextPdfBidiOrder_WS, 8233, 8233, (jchar) ComAowagieTextPdfBidiOrder_B,
#line 1213
      8234, 8234, (jchar) ComAowagieTextPdfBidiOrder_LRE, 8235, 8235, (jchar) ComAowagieTextPdfBidiOrder_RLE, 8236, 8236, (jchar) ComAowagieTextPdfBidiOrder_PDF, 8237, 8237, (jchar) ComAowagieTextPdfBidiOrder_LRO,
#line 1214
      8238, 8238, (jchar) ComAowagieTextPdfBidiOrder_RLO, 8239, 8239, (jchar) ComAowagieTextPdfBidiOrder_WS, 8240, 8244, (jchar) ComAowagieTextPdfBidiOrder_ET, 8245, 8276, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1215
      8277, 8278, (jchar) ComAowagieTextPdfBidiOrder_L, 8279, 8279, (jchar) ComAowagieTextPdfBidiOrder_ON, 8280, 8286, (jchar) ComAowagieTextPdfBidiOrder_L, 8287, 8287, (jchar) ComAowagieTextPdfBidiOrder_WS,
#line 1216
      8288, 8291, (jchar) ComAowagieTextPdfBidiOrder_BN, 8292, 8297, (jchar) ComAowagieTextPdfBidiOrder_L, 8298, 8303, (jchar) ComAowagieTextPdfBidiOrder_BN, 8304, 8304, (jchar) ComAowagieTextPdfBidiOrder_EN,
#line 1217
      8305, 8307, (jchar) ComAowagieTextPdfBidiOrder_L, 8308, 8313, (jchar) ComAowagieTextPdfBidiOrder_EN, 8314, 8315, (jchar) ComAowagieTextPdfBidiOrder_ET, 8316, 8318, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1218
      8319, 8319, (jchar) ComAowagieTextPdfBidiOrder_L, 8320, 8329, (jchar) ComAowagieTextPdfBidiOrder_EN, 8330, 8331, (jchar) ComAowagieTextPdfBidiOrder_ET, 8332, 8334, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1219
      8335, 8351, (jchar) ComAowagieTextPdfBidiOrder_L, 8352, 8369, (jchar) ComAowagieTextPdfBidiOrder_ET, 8370, 8399, (jchar) ComAowagieTextPdfBidiOrder_L, 8400, 8426, (jchar) ComAowagieTextPdfBidiOrder_NSM,
#line 1220
      8427, 8447, (jchar) ComAowagieTextPdfBidiOrder_L, 8448, 8449, (jchar) ComAowagieTextPdfBidiOrder_ON, 8450, 8450, (jchar) ComAowagieTextPdfBidiOrder_L, 8451, 8454, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1221
      8455, 8455, (jchar) ComAowagieTextPdfBidiOrder_L, 8456, 8457, (jchar) ComAowagieTextPdfBidiOrder_ON, 8458, 8467, (jchar) ComAowagieTextPdfBidiOrder_L, 8468, 8468, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1222
      8469, 8469, (jchar) ComAowagieTextPdfBidiOrder_L, 8470, 8472, (jchar) ComAowagieTextPdfBidiOrder_ON, 8473, 8477, (jchar) ComAowagieTextPdfBidiOrder_L, 8478, 8483, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1223
      8484, 8484, (jchar) ComAowagieTextPdfBidiOrder_L, 8485, 8485, (jchar) ComAowagieTextPdfBidiOrder_ON, 8486, 8486, (jchar) ComAowagieTextPdfBidiOrder_L, 8487, 8487, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1224
      8488, 8488, (jchar) ComAowagieTextPdfBidiOrder_L, 8489, 8489, (jchar) ComAowagieTextPdfBidiOrder_ON, 8490, 8493, (jchar) ComAowagieTextPdfBidiOrder_L, 8494, 8494, (jchar) ComAowagieTextPdfBidiOrder_ET,
#line 1225
      8495, 8497, (jchar) ComAowagieTextPdfBidiOrder_L, 8498, 8498, (jchar) ComAowagieTextPdfBidiOrder_ON, 8499, 8505, (jchar) ComAowagieTextPdfBidiOrder_L, 8506, 8507, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1226
      8508, 8511, (jchar) ComAowagieTextPdfBidiOrder_L, 8512, 8516, (jchar) ComAowagieTextPdfBidiOrder_ON, 8517, 8521, (jchar) ComAowagieTextPdfBidiOrder_L, 8522, 8523, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1227
      8524, 8530, (jchar) ComAowagieTextPdfBidiOrder_L, 8531, 8543, (jchar) ComAowagieTextPdfBidiOrder_ON, 8544, 8591, (jchar) ComAowagieTextPdfBidiOrder_L, 8592, 8721, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1228
      8722, 8723, (jchar) ComAowagieTextPdfBidiOrder_ET, 8724, 9013, (jchar) ComAowagieTextPdfBidiOrder_ON, 9014, 9082, (jchar) ComAowagieTextPdfBidiOrder_L, 9083, 9108, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1229
      9109, 9109, (jchar) ComAowagieTextPdfBidiOrder_L, 9110, 9168, (jchar) ComAowagieTextPdfBidiOrder_ON, 9169, 9215, (jchar) ComAowagieTextPdfBidiOrder_L, 9216, 9254, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1230
      9255, 9279, (jchar) ComAowagieTextPdfBidiOrder_L, 9280, 9290, (jchar) ComAowagieTextPdfBidiOrder_ON, 9291, 9311, (jchar) ComAowagieTextPdfBidiOrder_L, 9312, 9371, (jchar) ComAowagieTextPdfBidiOrder_EN,
#line 1231
      9372, 9449, (jchar) ComAowagieTextPdfBidiOrder_L, 9450, 9450, (jchar) ComAowagieTextPdfBidiOrder_EN, 9451, 9751, (jchar) ComAowagieTextPdfBidiOrder_ON, 9752, 9752, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1232
      9753, 9853, (jchar) ComAowagieTextPdfBidiOrder_ON, 9854, 9855, (jchar) ComAowagieTextPdfBidiOrder_L, 9856, 9873, (jchar) ComAowagieTextPdfBidiOrder_ON, 9874, 9887, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1233
      9888, 9889, (jchar) ComAowagieTextPdfBidiOrder_ON, 9890, 9984, (jchar) ComAowagieTextPdfBidiOrder_L, 9985, 9988, (jchar) ComAowagieTextPdfBidiOrder_ON, 9989, 9989, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1234
      9990, 9993, (jchar) ComAowagieTextPdfBidiOrder_ON, 9994, 9995, (jchar) ComAowagieTextPdfBidiOrder_L, 9996, 10023, (jchar) ComAowagieTextPdfBidiOrder_ON, 10024, 10024, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1235
      10025, 10059, (jchar) ComAowagieTextPdfBidiOrder_ON, 10060, 10060, (jchar) ComAowagieTextPdfBidiOrder_L, 10061, 10061, (jchar) ComAowagieTextPdfBidiOrder_ON, 10062, 10062, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1236
      10063, 10066, (jchar) ComAowagieTextPdfBidiOrder_ON, 10067, 10069, (jchar) ComAowagieTextPdfBidiOrder_L, 10070, 10070, (jchar) ComAowagieTextPdfBidiOrder_ON, 10071, 10071, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1237
      10072, 10078, (jchar) ComAowagieTextPdfBidiOrder_ON, 10079, 10080, (jchar) ComAowagieTextPdfBidiOrder_L, 10081, 10132, (jchar) ComAowagieTextPdfBidiOrder_ON, 10133, 10135, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1238
      10136, 10159, (jchar) ComAowagieTextPdfBidiOrder_ON, 10160, 10160, (jchar) ComAowagieTextPdfBidiOrder_L, 10161, 10174, (jchar) ComAowagieTextPdfBidiOrder_ON, 10175, 10191, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1239
      10192, 10219, (jchar) ComAowagieTextPdfBidiOrder_ON, 10220, 10223, (jchar) ComAowagieTextPdfBidiOrder_L, 10224, 11021, (jchar) ComAowagieTextPdfBidiOrder_ON, 11022, 11903, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1240
      11904, 11929, (jchar) ComAowagieTextPdfBidiOrder_ON, 11930, 11930, (jchar) ComAowagieTextPdfBidiOrder_L, 11931, 12019, (jchar) ComAowagieTextPdfBidiOrder_ON, 12020, 12031, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1241
      12032, 12245, (jchar) ComAowagieTextPdfBidiOrder_ON, 12246, 12271, (jchar) ComAowagieTextPdfBidiOrder_L, 12272, 12283, (jchar) ComAowagieTextPdfBidiOrder_ON, 12284, 12287, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1242
      12288, 12288, (jchar) ComAowagieTextPdfBidiOrder_WS, 12289, 12292, (jchar) ComAowagieTextPdfBidiOrder_ON, 12293, 12295, (jchar) ComAowagieTextPdfBidiOrder_L, 12296, 12320, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1243
      12321, 12329, (jchar) ComAowagieTextPdfBidiOrder_L, 12330, 12335, (jchar) ComAowagieTextPdfBidiOrder_NSM, 12336, 12336, (jchar) ComAowagieTextPdfBidiOrder_ON, 12337, 12341, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1244
      12342, 12343, (jchar) ComAowagieTextPdfBidiOrder_ON, 12344, 12348, (jchar) ComAowagieTextPdfBidiOrder_L, 12349, 12351, (jchar) ComAowagieTextPdfBidiOrder_ON, 12352, 12440, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1245
      12441, 12442, (jchar) ComAowagieTextPdfBidiOrder_NSM, 12443, 12444, (jchar) ComAowagieTextPdfBidiOrder_ON, 12445, 12447, (jchar) ComAowagieTextPdfBidiOrder_L, 12448, 12448, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1246
      12449, 12538, (jchar) ComAowagieTextPdfBidiOrder_L, 12539, 12539, (jchar) ComAowagieTextPdfBidiOrder_ON, 12540, 12828, (jchar) ComAowagieTextPdfBidiOrder_L, 12829, 12830, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1247
      12831, 12879, (jchar) ComAowagieTextPdfBidiOrder_L, 12880, 12895, (jchar) ComAowagieTextPdfBidiOrder_ON, 12896, 12923, (jchar) ComAowagieTextPdfBidiOrder_L, 12924, 12925, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1248
      12926, 12976, (jchar) ComAowagieTextPdfBidiOrder_L, 12977, 12991, (jchar) ComAowagieTextPdfBidiOrder_ON, 12992, 13003, (jchar) ComAowagieTextPdfBidiOrder_L, 13004, 13007, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1249
      13008, 13174, (jchar) ComAowagieTextPdfBidiOrder_L, 13175, 13178, (jchar) ComAowagieTextPdfBidiOrder_ON, 13179, 13277, (jchar) ComAowagieTextPdfBidiOrder_L, 13278, 13279, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1250
      13280, 13310, (jchar) ComAowagieTextPdfBidiOrder_L, 13311, 13311, (jchar) ComAowagieTextPdfBidiOrder_ON, 13312, 19903, (jchar) ComAowagieTextPdfBidiOrder_L, 19904, 19967, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1251
      19968, 42127, (jchar) ComAowagieTextPdfBidiOrder_L, 42128, 42182, (jchar) ComAowagieTextPdfBidiOrder_ON, 42183, 64284, (jchar) ComAowagieTextPdfBidiOrder_L, 64285, 64285, (jchar) ComAowagieTextPdfBidiOrder_R,
#line 1252
      64286, 64286, (jchar) ComAowagieTextPdfBidiOrder_NSM, 64287, 64296, (jchar) ComAowagieTextPdfBidiOrder_R, 64297, 64297, (jchar) ComAowagieTextPdfBidiOrder_ET, 64298, 64310, (jchar) ComAowagieTextPdfBidiOrder_R,
#line 1253
      64311, 64311, (jchar) ComAowagieTextPdfBidiOrder_L, 64312, 64316, (jchar) ComAowagieTextPdfBidiOrder_R, 64317, 64317, (jchar) ComAowagieTextPdfBidiOrder_L, 64318, 64318, (jchar) ComAowagieTextPdfBidiOrder_R,
#line 1254
      64319, 64319, (jchar) ComAowagieTextPdfBidiOrder_L, 64320, 64321, (jchar) ComAowagieTextPdfBidiOrder_R, 64322, 64322, (jchar) ComAowagieTextPdfBidiOrder_L, 64323, 64324, (jchar) ComAowagieTextPdfBidiOrder_R,
#line 1255
      64325, 64325, (jchar) ComAowagieTextPdfBidiOrder_L, 64326, 64335, (jchar) ComAowagieTextPdfBidiOrder_R, 64336, 64433, (jchar) ComAowagieTextPdfBidiOrder_AL, 64434, 64466, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1256
      64467, 64829, (jchar) ComAowagieTextPdfBidiOrder_AL, 64830, 64831, (jchar) ComAowagieTextPdfBidiOrder_ON, 64832, 64847, (jchar) ComAowagieTextPdfBidiOrder_L, 64848, 64911, (jchar) ComAowagieTextPdfBidiOrder_AL,
#line 1257
      64912, 64913, (jchar) ComAowagieTextPdfBidiOrder_L, 64914, 64967, (jchar) ComAowagieTextPdfBidiOrder_AL, 64968, 65007, (jchar) ComAowagieTextPdfBidiOrder_L, 65008, 65020, (jchar) ComAowagieTextPdfBidiOrder_AL,
#line 1258
      65021, 65021, (jchar) ComAowagieTextPdfBidiOrder_ON, 65022, 65023, (jchar) ComAowagieTextPdfBidiOrder_L, 65024, 65039, (jchar) ComAowagieTextPdfBidiOrder_NSM, 65040, 65055, (jchar) ComAowagieTextPdfBidiOrder_L,
#line 1259
      65056, 65059, (jchar) ComAowagieTextPdfBidiOrder_NSM, 65060, 65071, (jchar) ComAowagieTextPdfBidiOrder_L, 65072, 65103, (jchar) ComAowagieTextPdfBidiOrder_ON, 65104, 65104, (jchar) ComAowagieTextPdfBidiOrder_CS,
#line 1260
      65105, 65105, (jchar) ComAowagieTextPdfBidiOrder_ON, 65106, 65106, (jchar) ComAowagieTextPdfBidiOrder_CS, 65107, 65107, (jchar) ComAowagieTextPdfBidiOrder_L, 65108, 65108, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1261
      65109, 65109, (jchar) ComAowagieTextPdfBidiOrder_CS, 65110, 65118, (jchar) ComAowagieTextPdfBidiOrder_ON, 65119, 65119, (jchar) ComAowagieTextPdfBidiOrder_ET, 65120, 65121, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1262
      65122, 65123, (jchar) ComAowagieTextPdfBidiOrder_ET, 65124, 65126, (jchar) ComAowagieTextPdfBidiOrder_ON, 65127, 65127, (jchar) ComAowagieTextPdfBidiOrder_L, 65128, 65128, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1263
      65129, 65130, (jchar) ComAowagieTextPdfBidiOrder_ET, 65131, 65131, (jchar) ComAowagieTextPdfBidiOrder_ON, 65132, 65135, (jchar) ComAowagieTextPdfBidiOrder_L, 65136, 65140, (jchar) ComAowagieTextPdfBidiOrder_AL,
#line 1264
      65141, 65141, (jchar) ComAowagieTextPdfBidiOrder_L, 65142, 65276, (jchar) ComAowagieTextPdfBidiOrder_AL, 65277, 65278, (jchar) ComAowagieTextPdfBidiOrder_L, 65279, 65279, (jchar) ComAowagieTextPdfBidiOrder_BN,
#line 1265
      65280, 65280, (jchar) ComAowagieTextPdfBidiOrder_L, 65281, 65282, (jchar) ComAowagieTextPdfBidiOrder_ON, 65283, 65285, (jchar) ComAowagieTextPdfBidiOrder_ET, 65286, 65290, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1266
      65291, 65291, (jchar) ComAowagieTextPdfBidiOrder_ET, 65292, 65292, (jchar) ComAowagieTextPdfBidiOrder_CS, 65293, 65293, (jchar) ComAowagieTextPdfBidiOrder_ET, 65294, 65294, (jchar) ComAowagieTextPdfBidiOrder_CS,
#line 1267
      65295, 65295, (jchar) ComAowagieTextPdfBidiOrder_ES, 65296, 65305, (jchar) ComAowagieTextPdfBidiOrder_EN, 65306, 65306, (jchar) ComAowagieTextPdfBidiOrder_CS, 65307, 65312, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1268
      65313, 65338, (jchar) ComAowagieTextPdfBidiOrder_L, 65339, 65344, (jchar) ComAowagieTextPdfBidiOrder_ON, 65345, 65370, (jchar) ComAowagieTextPdfBidiOrder_L, 65371, 65381, (jchar) ComAowagieTextPdfBidiOrder_ON,
#line 1269
      65382, 65503, (jchar) ComAowagieTextPdfBidiOrder_L, 65504, 65505, (jchar) ComAowagieTextPdfBidiOrder_ET, 65506, 65508, (jchar) ComAowagieTextPdfBidiOrder_ON, 65509, 65510, (jchar) ComAowagieTextPdfBidiOrder_ET,
#line 1270
      65511, 65511, (jchar) ComAowagieTextPdfBidiOrder_L, 65512, 65518, (jchar) ComAowagieTextPdfBidiOrder_ON, 65519, 65528, (jchar) ComAowagieTextPdfBidiOrder_L, 65529, 65531, (jchar) ComAowagieTextPdfBidiOrder_BN,
#line 1271
      65532, 65533, (jchar) ComAowagieTextPdfBidiOrder_ON, 65534, 65535, (jchar) ComAowagieTextPdfBidiOrder_L } count:1725];
      {
        
#line 1274
        for (jint k = 0; k < ComAowagieTextPdfBidiOrder_baseTypes->size_; ++k) {
          jint start = IOSCharArray_Get(ComAowagieTextPdfBidiOrder_baseTypes, k);
          jint end = IOSCharArray_Get(ComAowagieTextPdfBidiOrder_baseTypes, ++k);
          jbyte b = (jbyte) IOSCharArray_Get(ComAowagieTextPdfBidiOrder_baseTypes, ++k);
          while (start <= end) {
            *IOSByteArray_GetRef(ComAowagieTextPdfBidiOrder_rtypes, start++) = b;
          }
        }
      }
      J2OBJC_SET_INITIALIZED(ComAowagieTextPdfBidiOrder)
    }
  }

@end


#line 239
void ComAowagieTextPdfBidiOrder_initPackagePrivateWithCharArray_withInt_withInt_withByte_(ComAowagieTextPdfBidiOrder *self, IOSCharArray *text, jint offset, jint length, jbyte paragraphEmbeddingLevel) {
  NSObject_init(self);
  self->paragraphEmbeddingLevel_ =
#line 160
  -1;
  
#line 240
  self->initialTypes_ = [IOSByteArray newArrayWithLength:length];
  for (jint k = 0; k < length; ++k) {
    *IOSByteArray_GetRef(self->initialTypes_, k) = IOSByteArray_Get(nil_chk(ComAowagieTextPdfBidiOrder_rtypes), IOSCharArray_Get(nil_chk(text), offset + k));
  }
  ComAowagieTextPdfBidiOrder_validateParagraphEmbeddingLevelWithByte_(paragraphEmbeddingLevel);
  
#line 246
  self->paragraphEmbeddingLevel_ = paragraphEmbeddingLevel;
  
#line 248
  ComAowagieTextPdfBidiOrder_runAlgorithm(self);
}


#line 239
ComAowagieTextPdfBidiOrder *new_ComAowagieTextPdfBidiOrder_initPackagePrivateWithCharArray_withInt_withInt_withByte_(IOSCharArray *text, jint offset, jint length, jbyte paragraphEmbeddingLevel) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfBidiOrder, initPackagePrivateWithCharArray_withInt_withInt_withByte_, text, offset, length, paragraphEmbeddingLevel)
}


#line 239
ComAowagieTextPdfBidiOrder *create_ComAowagieTextPdfBidiOrder_initPackagePrivateWithCharArray_withInt_withInt_withByte_(IOSCharArray *text, jint offset, jint length, jbyte paragraphEmbeddingLevel) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfBidiOrder, initPackagePrivateWithCharArray_withInt_withInt_withByte_, text, offset, length, paragraphEmbeddingLevel)
}


#line 251
jbyte ComAowagieTextPdfBidiOrder_getDirectionWithChar_(jchar c) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 252
  return IOSByteArray_Get(nil_chk(ComAowagieTextPdfBidiOrder_rtypes), c);
}


#line 260
void ComAowagieTextPdfBidiOrder_runAlgorithm(ComAowagieTextPdfBidiOrder *self) {
  self->textLength_ = ((IOSByteArray *) nil_chk(self->initialTypes_))->size_;
  
#line 265
  self->resultTypes_ = [self->initialTypes_ java_clone];
  
#line 272
  if (self->paragraphEmbeddingLevel_ == -1) {
    ComAowagieTextPdfBidiOrder_determineParagraphEmbeddingLevel(self);
  }
  
#line 277
  self->resultLevels_ = [IOSByteArray newArrayWithLength:self->textLength_];
  ComAowagieTextPdfBidiOrder_setLevelsWithInt_withInt_withByte_(self, 0, self->textLength_, self->paragraphEmbeddingLevel_);
  
#line 282
  ComAowagieTextPdfBidiOrder_determineExplicitEmbeddingLevels(self);
  
#line 285
  self->textLength_ = ComAowagieTextPdfBidiOrder_removeExplicitCodes(self);
  
#line 289
  jbyte prevLevel = self->paragraphEmbeddingLevel_;
  jint start = 0;
  while (start < self->textLength_) {
    jbyte level = IOSByteArray_Get(nil_chk(self->resultLevels_), start);
    jbyte prevType = ComAowagieTextPdfBidiOrder_typeForLevelWithInt_(JavaLangMath_maxWithInt_withInt_(prevLevel, level));
    
#line 295
    jint limit = start + 1;
    while (limit < self->textLength_ && IOSByteArray_Get(nil_chk(self->resultLevels_), limit) == level) {
      ++limit;
    }
    
#line 300
    jbyte succLevel = limit < self->textLength_ ? IOSByteArray_Get(nil_chk(self->resultLevels_), limit) : self->paragraphEmbeddingLevel_;
    jbyte succType = ComAowagieTextPdfBidiOrder_typeForLevelWithInt_(JavaLangMath_maxWithInt_withInt_(succLevel, level));
    
#line 305
    ComAowagieTextPdfBidiOrder_resolveWeakTypesWithInt_withInt_withByte_withByte_withByte_(self, start, limit, level, prevType, succType);
    
#line 309
    ComAowagieTextPdfBidiOrder_resolveNeutralTypesWithInt_withInt_withByte_withByte_withByte_(self, start, limit, level, prevType, succType);
    
#line 313
    ComAowagieTextPdfBidiOrder_resolveImplicitLevelsWithInt_withInt_withByte_withByte_withByte_(self, start, limit, level, prevType, succType);
    
#line 315
    prevLevel = level;
    start = limit;
  }
  
#line 324
  self->textLength_ = ComAowagieTextPdfBidiOrder_reinsertExplicitCodesWithInt_(self, self->textLength_);
}


#line 334
void ComAowagieTextPdfBidiOrder_determineParagraphEmbeddingLevel(ComAowagieTextPdfBidiOrder *self) {
  jbyte strongType = -1;
  
#line 338
  for (jint i = 0; i < self->textLength_; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), i);
    if (t == ComAowagieTextPdfBidiOrder_L || t == ComAowagieTextPdfBidiOrder_AL || t == ComAowagieTextPdfBidiOrder_R) {
      strongType = t;
      break;
    }
  }
  
#line 347
  if (strongType == -1) {
    
#line 349
    self->paragraphEmbeddingLevel_ = 0;
  }
  else
#line 350
  if (strongType == ComAowagieTextPdfBidiOrder_L) {
    self->paragraphEmbeddingLevel_ = 0;
  }
  else {
    
#line 353
    self->paragraphEmbeddingLevel_ = 1;
  }
}


#line 365
void ComAowagieTextPdfBidiOrder_determineExplicitEmbeddingLevels(ComAowagieTextPdfBidiOrder *self) {
  self->embeddings_ = ComAowagieTextPdfBidiOrder_processEmbeddingsWithByteArray_withByte_(self->resultTypes_, self->paragraphEmbeddingLevel_);
  
#line 368
  for (jint i = 0; i < self->textLength_; ++i) {
    jbyte level = IOSByteArray_Get(nil_chk(self->embeddings_), i);
    if ((level & (jint) 0x80) != 0) {
      level &= (jint) 0x7f;
      *IOSByteArray_GetRef(nil_chk(self->resultTypes_), i) = ComAowagieTextPdfBidiOrder_typeForLevelWithInt_(level);
    }
    *IOSByteArray_GetRef(nil_chk(self->resultLevels_), i) = level;
  }
}


#line 385
jint ComAowagieTextPdfBidiOrder_removeExplicitCodes(ComAowagieTextPdfBidiOrder *self) {
  jint w = 0;
  for (jint i = 0; i < self->textLength_; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(self->initialTypes_), i);
    if (!(t == ComAowagieTextPdfBidiOrder_LRE || t == ComAowagieTextPdfBidiOrder_RLE || t == ComAowagieTextPdfBidiOrder_LRO || t == ComAowagieTextPdfBidiOrder_RLO || t == ComAowagieTextPdfBidiOrder_PDF || t == ComAowagieTextPdfBidiOrder_BN)) {
      *IOSByteArray_GetRef(nil_chk(self->embeddings_), w) = IOSByteArray_Get(self->embeddings_, i);
      *IOSByteArray_GetRef(nil_chk(self->resultTypes_), w) = IOSByteArray_Get(self->resultTypes_, i);
      *IOSByteArray_GetRef(nil_chk(self->resultLevels_), w) = IOSByteArray_Get(self->resultLevels_, i);
      w++;
    }
  }
  return w;
}


#line 409
jint ComAowagieTextPdfBidiOrder_reinsertExplicitCodesWithInt_(ComAowagieTextPdfBidiOrder *self, jint textLength) {
  for (jint i = ((IOSByteArray *) nil_chk(self->initialTypes_))->size_; --i >= 0; ) {
    jbyte t = IOSByteArray_Get(self->initialTypes_, i);
    if (t == ComAowagieTextPdfBidiOrder_LRE || t == ComAowagieTextPdfBidiOrder_RLE || t == ComAowagieTextPdfBidiOrder_LRO || t == ComAowagieTextPdfBidiOrder_RLO || t == ComAowagieTextPdfBidiOrder_PDF || t == ComAowagieTextPdfBidiOrder_BN) {
      *IOSByteArray_GetRef(nil_chk(self->embeddings_), i) = 0;
      *IOSByteArray_GetRef(nil_chk(self->resultTypes_), i) = t;
      *IOSByteArray_GetRef(nil_chk(self->resultLevels_), i) = -1;
    }
    else {
      
#line 417
      --textLength;
      *IOSByteArray_GetRef(nil_chk(self->embeddings_), i) = IOSByteArray_Get(self->embeddings_, textLength);
      *IOSByteArray_GetRef(nil_chk(self->resultTypes_), i) = IOSByteArray_Get(self->resultTypes_, textLength);
      *IOSByteArray_GetRef(nil_chk(self->resultLevels_), i) = IOSByteArray_Get(self->resultLevels_, textLength);
    }
  }
  
#line 428
  if (IOSByteArray_Get(nil_chk(self->resultLevels_), 0) == -1) {
    *IOSByteArray_GetRef(self->resultLevels_, 0) = self->paragraphEmbeddingLevel_;
  }
  for (jint i = 1; i < self->initialTypes_->size_; ++i) {
    if (IOSByteArray_Get(self->resultLevels_, i) == -1) {
      *IOSByteArray_GetRef(self->resultLevels_, i) = IOSByteArray_Get(self->resultLevels_, i - 1);
    }
  }
  
#line 440
  return self->initialTypes_->size_;
}


#line 455
IOSByteArray *ComAowagieTextPdfBidiOrder_processEmbeddingsWithByteArray_withByte_(IOSByteArray *resultTypes, jbyte paragraphEmbeddingLevel) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 456
  jint EXPLICIT_LEVEL_LIMIT = 62;
  
#line 458
  jint textLength = ((IOSByteArray *) nil_chk(resultTypes))->size_;
  IOSByteArray *embeddings = [IOSByteArray newArrayWithLength:textLength];
  
#line 463
  IOSByteArray *embeddingValueStack = [IOSByteArray newArrayWithLength:EXPLICIT_LEVEL_LIMIT];
  jint stackCounter = 0;
  
#line 471
  jint overflowAlmostCounter = 0;
  
#line 475
  jint overflowCounter = 0;
  
#line 480
  jbyte currentEmbeddingLevel = paragraphEmbeddingLevel;
  jbyte currentEmbeddingValue = paragraphEmbeddingLevel;
  
#line 484
  for (jint i = 0; i < textLength; ++i) {
    
#line 486
    *IOSByteArray_GetRef(embeddings, i) = currentEmbeddingValue;
    
#line 488
    jbyte t = IOSByteArray_Get(resultTypes, i);
    
#line 491
    switch (t) {
      case ComAowagieTextPdfBidiOrder_RLE:
      case ComAowagieTextPdfBidiOrder_LRE:
      case ComAowagieTextPdfBidiOrder_RLO:
      case ComAowagieTextPdfBidiOrder_LRO:
      
#line 497
      if (overflowCounter == 0) {
        jbyte newLevel;
        if (t == ComAowagieTextPdfBidiOrder_RLE || t == ComAowagieTextPdfBidiOrder_RLO) {
          newLevel = (jbyte) ((currentEmbeddingLevel + 1) | 1);
        }
        else {
          
#line 502
          newLevel = (jbyte) ((currentEmbeddingLevel + 2) & ~1);
        }
        
#line 507
        if (newLevel < EXPLICIT_LEVEL_LIMIT) {
          *IOSByteArray_GetRef(embeddingValueStack, stackCounter) = currentEmbeddingValue;
          stackCounter++;
          
#line 511
          currentEmbeddingLevel = newLevel;
          if (t == ComAowagieTextPdfBidiOrder_LRO || t == ComAowagieTextPdfBidiOrder_RLO) {
            currentEmbeddingValue = (jbyte) (newLevel | (jint) 0x80);
          }
          else {
            
#line 515
            currentEmbeddingValue = newLevel;
          }
          
#line 520
          *IOSByteArray_GetRef(embeddings, i) = currentEmbeddingValue;
          break;
        }
        
#line 527
        if (currentEmbeddingLevel == 60) {
          overflowAlmostCounter++;
          break;
        }
      }
      
#line 534
      overflowCounter++;
      break;
      
#line 537
      case ComAowagieTextPdfBidiOrder_PDF:
      
#line 544
      if (overflowCounter > 0) {
        --overflowCounter;
      }
      else
#line 546
      if (overflowAlmostCounter > 0 && currentEmbeddingLevel != 61) {
        --overflowAlmostCounter;
      }
      else
#line 548
      if (stackCounter > 0) {
        --stackCounter;
        currentEmbeddingValue = IOSByteArray_Get(embeddingValueStack, stackCounter);
        currentEmbeddingLevel = (jbyte) (currentEmbeddingValue & (jint) 0x7f);
      }
      break;
      
#line 555
      case ComAowagieTextPdfBidiOrder_B:
      
#line 560
      stackCounter = 0;
      overflowCounter = 0;
      overflowAlmostCounter = 0;
      currentEmbeddingLevel = paragraphEmbeddingLevel;
      currentEmbeddingValue = paragraphEmbeddingLevel;
      
#line 566
      *IOSByteArray_GetRef(embeddings, i) = paragraphEmbeddingLevel;
      break;
      
#line 569
      default:
      break;
    }
  }
  
#line 574
  return embeddings;
}


#line 588
void ComAowagieTextPdfBidiOrder_resolveWeakTypesWithInt_withInt_withByte_withByte_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte level, jbyte sor, jbyte eor) {
  
#line 592
  jbyte preceedingCharacterType = sor;
  for (jint i = start; i < limit; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), i);
    if (t == ComAowagieTextPdfBidiOrder_NSM) {
      *IOSByteArray_GetRef(self->resultTypes_, i) = preceedingCharacterType;
    }
    else {
      
#line 598
      preceedingCharacterType = t;
    }
  }
  
#line 604
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(self->resultTypes_), i) == ComAowagieTextPdfBidiOrder_EN) {
      for (jint j = i - 1; j >= start; --j) {
        jbyte t = IOSByteArray_Get(self->resultTypes_, j);
        if (t == ComAowagieTextPdfBidiOrder_L || t == ComAowagieTextPdfBidiOrder_R || t == ComAowagieTextPdfBidiOrder_AL) {
          if (t == ComAowagieTextPdfBidiOrder_AL) {
            *IOSByteArray_GetRef(self->resultTypes_, i) = ComAowagieTextPdfBidiOrder_AN;
          }
          break;
        }
      }
    }
  }
  
#line 619
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(self->resultTypes_), i) == ComAowagieTextPdfBidiOrder_AL) {
      *IOSByteArray_GetRef(self->resultTypes_, i) = ComAowagieTextPdfBidiOrder_R;
    }
  }
  
#line 637
  for (jint i = start + 1; i < limit - 1; ++i) {
    if (IOSByteArray_Get(nil_chk(self->resultTypes_), i) == ComAowagieTextPdfBidiOrder_ES || IOSByteArray_Get(self->resultTypes_, i) == ComAowagieTextPdfBidiOrder_CS) {
      jbyte prevSepType = IOSByteArray_Get(self->resultTypes_, i - 1);
      jbyte succSepType = IOSByteArray_Get(self->resultTypes_, i + 1);
      if (prevSepType == ComAowagieTextPdfBidiOrder_EN && succSepType == ComAowagieTextPdfBidiOrder_EN) {
        *IOSByteArray_GetRef(self->resultTypes_, i) = ComAowagieTextPdfBidiOrder_EN;
      }
      else
#line 643
      if (IOSByteArray_Get(self->resultTypes_, i) == ComAowagieTextPdfBidiOrder_CS && prevSepType == ComAowagieTextPdfBidiOrder_AN && succSepType == ComAowagieTextPdfBidiOrder_AN) {
        *IOSByteArray_GetRef(self->resultTypes_, i) = ComAowagieTextPdfBidiOrder_AN;
      }
    }
  }
  
#line 650
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(self->resultTypes_), i) == ComAowagieTextPdfBidiOrder_ET) {
      
#line 653
      jint runstart = i;
      jint runlimit = ComAowagieTextPdfBidiOrder_findRunLimitWithInt_withInt_withByteArray_(self, runstart, limit, [IOSByteArray newArrayWithBytes:(jbyte[]){ ComAowagieTextPdfBidiOrder_ET } count:1]);
      
#line 657
      jbyte t = runstart == start ? sor : IOSByteArray_Get(nil_chk(self->resultTypes_), runstart - 1);
      
#line 659
      if (t != ComAowagieTextPdfBidiOrder_EN) {
        t = runlimit == limit ? eor : IOSByteArray_Get(nil_chk(self->resultTypes_), runlimit);
      }
      
#line 663
      if (t == ComAowagieTextPdfBidiOrder_EN) {
        ComAowagieTextPdfBidiOrder_setTypesWithInt_withInt_withByte_(self, runstart, runlimit, ComAowagieTextPdfBidiOrder_EN);
      }
      
#line 668
      i = runlimit;
    }
  }
  
#line 673
  for (jint i = start; i < limit; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), i);
    if (t == ComAowagieTextPdfBidiOrder_ES || t == ComAowagieTextPdfBidiOrder_ET || t == ComAowagieTextPdfBidiOrder_CS) {
      *IOSByteArray_GetRef(self->resultTypes_, i) = ComAowagieTextPdfBidiOrder_ON;
    }
  }
  
#line 681
  for (jint i = start; i < limit; ++i) {
    if (IOSByteArray_Get(nil_chk(self->resultTypes_), i) == ComAowagieTextPdfBidiOrder_EN) {
      
#line 684
      jbyte prevStrongType = sor;
      for (jint j = i - 1; j >= start; --j) {
        jbyte t = IOSByteArray_Get(self->resultTypes_, j);
        if (t == ComAowagieTextPdfBidiOrder_L || t == ComAowagieTextPdfBidiOrder_R) {
          prevStrongType = t;
          break;
        }
      }
      if (prevStrongType == ComAowagieTextPdfBidiOrder_L) {
        *IOSByteArray_GetRef(self->resultTypes_, i) = ComAowagieTextPdfBidiOrder_L;
      }
    }
  }
}


#line 708
void ComAowagieTextPdfBidiOrder_resolveNeutralTypesWithInt_withInt_withByte_withByte_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte level, jbyte sor, jbyte eor) {
  
#line 710
  for (jint i = start; i < limit; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), i);
    if (t == ComAowagieTextPdfBidiOrder_WS || t == ComAowagieTextPdfBidiOrder_ON || t == ComAowagieTextPdfBidiOrder_B || t == ComAowagieTextPdfBidiOrder_S) {
      
#line 714
      jint runstart = i;
      jint runlimit = ComAowagieTextPdfBidiOrder_findRunLimitWithInt_withInt_withByteArray_(self, runstart, limit, [IOSByteArray newArrayWithBytes:(jbyte[]){ ComAowagieTextPdfBidiOrder_B, ComAowagieTextPdfBidiOrder_S, ComAowagieTextPdfBidiOrder_WS, ComAowagieTextPdfBidiOrder_ON } count:4]);
      
#line 718
      jbyte leadingType;
      jbyte trailingType;
      
#line 721
      if (runstart == start) {
        leadingType = sor;
      }
      else {
        
#line 724
        leadingType = IOSByteArray_Get(nil_chk(self->resultTypes_), runstart - 1);
        if (leadingType == ComAowagieTextPdfBidiOrder_L || leadingType == ComAowagieTextPdfBidiOrder_R) {
        }
        else if (leadingType == ComAowagieTextPdfBidiOrder_AN) {
          leadingType = ComAowagieTextPdfBidiOrder_R;
        }
        else
#line 729
        if (leadingType == ComAowagieTextPdfBidiOrder_EN) {
          
#line 732
          leadingType = ComAowagieTextPdfBidiOrder_R;
        }
      }
      
#line 736
      if (runlimit == limit) {
        trailingType = eor;
      }
      else {
        
#line 739
        trailingType = IOSByteArray_Get(nil_chk(self->resultTypes_), runlimit);
        if (trailingType == ComAowagieTextPdfBidiOrder_L || trailingType == ComAowagieTextPdfBidiOrder_R) {
        }
        else if (trailingType == ComAowagieTextPdfBidiOrder_AN) {
          trailingType = ComAowagieTextPdfBidiOrder_R;
        }
        else
#line 744
        if (trailingType == ComAowagieTextPdfBidiOrder_EN) {
          trailingType = ComAowagieTextPdfBidiOrder_R;
        }
      }
      
#line 749
      jbyte resolvedType;
      if (leadingType == trailingType) {
        
#line 752
        resolvedType = leadingType;
      }
      else {
        
#line 757
        resolvedType = ComAowagieTextPdfBidiOrder_typeForLevelWithInt_(level);
      }
      
#line 760
      ComAowagieTextPdfBidiOrder_setTypesWithInt_withInt_withByte_(self, runstart, runlimit, resolvedType);
      
#line 763
      i = runlimit;
    }
  }
}


#line 777
void ComAowagieTextPdfBidiOrder_resolveImplicitLevelsWithInt_withInt_withByte_withByte_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte level, jbyte sor, jbyte eor) {
  if ((level & 1) == 0) {
    for (jint i = start; i < limit; ++i) {
      jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), i);
      
#line 782
      if (t == ComAowagieTextPdfBidiOrder_L) {
      }
      else if (t == ComAowagieTextPdfBidiOrder_R) {
        *IOSByteArray_GetRef(nil_chk(self->resultLevels_), i) += 1;
      }
      else {
        
#line 787
        *IOSByteArray_GetRef(nil_chk(self->resultLevels_), i) += 2;
      }
    }
  }
  else {
    
#line 791
    for (jint i = start; i < limit; ++i) {
      jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), i);
      
#line 794
      if (t == ComAowagieTextPdfBidiOrder_R) {
      }
      else {
        *IOSByteArray_GetRef(nil_chk(self->resultLevels_), i) += 1;
      }
    }
  }
}


#line 826
IOSByteArray *ComAowagieTextPdfBidiOrder_getLevelsWithIntArray_(ComAowagieTextPdfBidiOrder *self, IOSIntArray *linebreaks) {
  
#line 839
  ComAowagieTextPdfBidiOrder_validateLineBreaksWithIntArray_withInt_(linebreaks, self->textLength_);
  
#line 841
  IOSByteArray *result = [((IOSByteArray *) nil_chk(self->resultLevels_)) java_clone];
  
#line 846
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(result))->size_; ++i) {
    jbyte t = IOSByteArray_Get(nil_chk(self->initialTypes_), i);
    if (t == ComAowagieTextPdfBidiOrder_B || t == ComAowagieTextPdfBidiOrder_S) {
      
#line 850
      *IOSByteArray_GetRef(result, i) = self->paragraphEmbeddingLevel_;
      
#line 853
      for (jint j = i - 1; j >= 0; --j) {
        if (ComAowagieTextPdfBidiOrder_isWhitespaceWithByte_(IOSByteArray_Get(self->initialTypes_, j))) {
          *IOSByteArray_GetRef(result, j) = self->paragraphEmbeddingLevel_;
        }
        else {
          
#line 857
          break;
        }
      }
    }
  }
  
#line 864
  jint start = 0;
  {
    IOSIntArray *a__ =
#line 865
    linebreaks;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint limit = *b__++;
      
#line 866
      for (jint j = limit - 1; j >= start; --j) {
        if (ComAowagieTextPdfBidiOrder_isWhitespaceWithByte_(IOSByteArray_Get(nil_chk(self->initialTypes_), j))) {
          *IOSByteArray_GetRef(result, j) = self->paragraphEmbeddingLevel_;
        }
        else {
          
#line 870
          break;
        }
      }
      
#line 874
      start = limit;
    }
  }
  return result;
}


#line 889
IOSIntArray *ComAowagieTextPdfBidiOrder_computeMultilineReorderingWithByteArray_withIntArray_(IOSByteArray *levels, IOSIntArray *linebreaks) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 890
  IOSIntArray *result = [IOSIntArray newArrayWithLength:((IOSByteArray *) nil_chk(levels))->size_];
  
#line 892
  jint start = 0;
  {
    IOSIntArray *a__ =
#line 893
    linebreaks;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint limit = *b__++;
      
#line 894
      IOSByteArray *templevels = [IOSByteArray newArrayWithLength:limit - start];
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(levels, start, templevels, 0, templevels->size_);
      
#line 897
      IOSIntArray *temporder = ComAowagieTextPdfBidiOrder_computeReorderingWithByteArray_(templevels);
      for (jint j = 0; j < ((IOSIntArray *) nil_chk(temporder))->size_; ++j) {
        *IOSIntArray_GetRef(result, start + j) = IOSIntArray_Get(temporder, j) + start;
      }
      
#line 902
      start = limit;
    }
  }
  return result;
}


#line 916
IOSIntArray *ComAowagieTextPdfBidiOrder_computeReorderingWithByteArray_(IOSByteArray *levels) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 917
  jint lineLength = ((IOSByteArray *) nil_chk(levels))->size_;
  
#line 919
  IOSIntArray *result = [IOSIntArray newArrayWithLength:lineLength];
  
#line 922
  for (jint i = 0; i < lineLength; ++i) {
    *IOSIntArray_GetRef(result, i) = i;
  }
  
#line 929
  jbyte highestLevel = 0;
  jbyte lowestOddLevel = 63;
  for (jint i = 0; i < lineLength; ++i) {
    jbyte level = IOSByteArray_Get(levels, i);
    if (level > highestLevel) {
      highestLevel = level;
    }
    if ((level & 1) != 0 && level < lowestOddLevel) {
      lowestOddLevel = level;
    }
  }
  
#line 941
  for (jint level = highestLevel; level >= lowestOddLevel; --level) {
    for (jint i = 0; i < lineLength; ++i) {
      if (IOSByteArray_Get(levels, i) >= level) {
        
#line 945
        jint start = i;
        jint limit = i + 1;
        while (limit < lineLength && IOSByteArray_Get(levels, limit) >= level) {
          ++limit;
        }
        
#line 952
        for (jint j = start, k = limit - 1; j < k; ++j, --k) {
          jint temp = IOSIntArray_Get(result, j);
          *IOSIntArray_GetRef(result, j) = IOSIntArray_Get(result, k);
          *IOSIntArray_GetRef(result, k) = temp;
        }
        
#line 959
        i = limit;
      }
    }
  }
  
#line 964
  return result;
}


#line 982
jboolean ComAowagieTextPdfBidiOrder_isWhitespaceWithByte_(jbyte biditype) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 983
  switch (biditype) {
    case ComAowagieTextPdfBidiOrder_LRE:
    case ComAowagieTextPdfBidiOrder_RLE:
    case ComAowagieTextPdfBidiOrder_LRO:
    case ComAowagieTextPdfBidiOrder_RLO:
    case ComAowagieTextPdfBidiOrder_PDF:
    case ComAowagieTextPdfBidiOrder_BN:
    case ComAowagieTextPdfBidiOrder_WS:
    return true;
    default:
    return false;
  }
}


#line 1002
jbyte ComAowagieTextPdfBidiOrder_typeForLevelWithInt_(jint level) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 1003
  return (level & (jint) 0x1) == 0 ? ComAowagieTextPdfBidiOrder_L : ComAowagieTextPdfBidiOrder_R;
}


#line 1014
jint ComAowagieTextPdfBidiOrder_findRunLimitWithInt_withInt_withByteArray_(ComAowagieTextPdfBidiOrder *self, jint index, jint limit, IOSByteArray *validSet) {
  --index;
  
#line 1017
  while (++index < limit) {
    {
      
#line 1018
      jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), index);
      for (jint i = 0; i < ((IOSByteArray *) nil_chk(validSet))->size_; ++i) {
        if (t == IOSByteArray_Get(validSet, i)) {
          goto continue_loop;
        }
      }
      
#line 1025
      return index;
    }
    continue_loop: ;
  }
  
#line 1027
  return limit;
}


#line 1037
jint ComAowagieTextPdfBidiOrder_findRunStartWithInt_withByteArray_(ComAowagieTextPdfBidiOrder *self, jint index, IOSByteArray *validSet) {
  
#line 1039
  while (--index >= 0) {
    {
      
#line 1040
      jbyte t = IOSByteArray_Get(nil_chk(self->resultTypes_), index);
      for (jint i = 0; i < ((IOSByteArray *) nil_chk(validSet))->size_; ++i) {
        if (t == IOSByteArray_Get(validSet, i)) {
          goto continue_loop;
        }
      }
      return index + 1;
    }
    continue_loop: ;
  }
  
#line 1048
  return 0;
}


#line 1057
void ComAowagieTextPdfBidiOrder_setTypesWithInt_withInt_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte newType) {
  for (jint i = start; i < limit; ++i) {
    *IOSByteArray_GetRef(nil_chk(self->resultTypes_), i) = newType;
  }
}


#line 1069
void ComAowagieTextPdfBidiOrder_setLevelsWithInt_withInt_withByte_(ComAowagieTextPdfBidiOrder *self, jint start, jint limit, jbyte newLevel) {
  for (jint i = start; i < limit; ++i) {
    *IOSByteArray_GetRef(nil_chk(self->resultLevels_), i) = newLevel;
  }
}


#line 1081
void ComAowagieTextPdfBidiOrder_validateTypesWithByteArray_(IOSByteArray *types) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 1082
  if (types == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"types is null");
  }
  for (jint i = 0; i < types->size_; ++i) {
    if (IOSByteArray_Get(types, i) < ComAowagieTextPdfBidiOrder_TYPE_MIN || IOSByteArray_Get(types, i) > ComAowagieTextPdfBidiOrder_TYPE_MAX) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$B", @"illegal type value at ", i, @": ", IOSByteArray_Get(types, i)));
    }
  }
  for (jint i = 0; i < types->size_ - 1; ++i) {
    if (IOSByteArray_Get(types, i) == ComAowagieTextPdfBidiOrder_B) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"B type before end of paragraph at index: ", i));
    }
  }
}


#line 1102
void ComAowagieTextPdfBidiOrder_validateParagraphEmbeddingLevelWithByte_(jbyte paragraphEmbeddingLevel) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 1103
  if (paragraphEmbeddingLevel != -1 &&
#line 1104
  paragraphEmbeddingLevel != 0 &&
#line 1105
  paragraphEmbeddingLevel != 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$B", @"illegal paragraph embedding level: ", paragraphEmbeddingLevel));
  }
}

void ComAowagieTextPdfBidiOrder_validateLineBreaksWithIntArray_withInt_(IOSIntArray *linebreaks, jint textLength) {
  ComAowagieTextPdfBidiOrder_initialize();
  
#line 1116
  jint prev = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(linebreaks))->size_; ++i) {
    jint next = IOSIntArray_Get(linebreaks, i);
    if (next <= prev) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"bad linebreak: ", next, @" at index: ", i));
    }
    prev = next;
  }
  if (prev != textLength) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"last linebreak must be at ", textLength));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfBidiOrder)

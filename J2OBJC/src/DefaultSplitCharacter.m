//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/DefaultSplitCharacter.java
//

#include "DefaultSplitCharacter.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PdfChunk.h"
#include "SplitCharacter.h"
#include "java/lang/Math.h"

#if !__has_feature(objc_arc)
#error "DefaultSplitCharacter must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfDefaultSplitCharacter ()

/*!
 @brief Returns the current character
 @param current current position in the array
 @param cc the character array that has to be checked
 @param ck chunk array
 @return the current character
 */
- (jchar)getCurrentCharacterWithInt:(jint)current
                      withCharArray:(IOSCharArray *)cc
 withComAowagieTextPdfPdfChunkArray:(IOSObjectArray *)ck;

@end

__attribute__((unused)) static jchar ComAowagieTextPdfDefaultSplitCharacter_getCurrentCharacterWithInt_withCharArray_withComAowagieTextPdfPdfChunkArray_(ComAowagieTextPdfDefaultSplitCharacter *self, jint current, IOSCharArray *cc, IOSObjectArray *ck);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/DefaultSplitCharacter.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfDefaultSplitCharacter)

id<ComAowagieTextSplitCharacter> ComAowagieTextPdfDefaultSplitCharacter_DEFAULT;


#line 60
@implementation ComAowagieTextPdfDefaultSplitCharacter


#line 60
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfDefaultSplitCharacter_initPackagePrivate(self);
  return self;
}


#line 80
- (jboolean)isSplitCharacterWithInt:(jint)start
                            withInt:(jint)current
                            withInt:(jint)end
                      withCharArray:(IOSCharArray *)cc
 withComAowagieTextPdfPdfChunkArray:(IOSObjectArray *)ck {
  
#line 82
  jchar c = ComAowagieTextPdfDefaultSplitCharacter_getCurrentCharacterWithInt_withCharArray_withComAowagieTextPdfPdfChunkArray_(self, current, cc, ck);
  if (c <= ' ' || c == '-' || c == 0x2010) {
    return true;
  }
  if (c < (jint) 0x2002) {
    return false;
  }
  return (c >= (jint) 0x2002 && c <= (jint) 0x200b) || (
#line 90
  c >= (jint) 0x2e80 && c < (jint) 0xd7a0) || (
#line 91
  c >= (jint) 0xf900 && c < (jint) 0xfb00) || (
#line 92
  c >= (jint) 0xfe30 && c < (jint) 0xfe50) || (
#line 93
  c >= (jint) 0xff61 && c < (jint) 0xffa0);
}


#line 103
- (jchar)getCurrentCharacterWithInt:(jint)current
                      withCharArray:(IOSCharArray *)cc
 withComAowagieTextPdfPdfChunkArray:(IOSObjectArray *)ck {
  return ComAowagieTextPdfDefaultSplitCharacter_getCurrentCharacterWithInt_withCharArray_withComAowagieTextPdfPdfChunkArray_(self, current, cc, ck);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "C", 0x2, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(isSplitCharacterWithInt:withInt:withInt:withCharArray:withComAowagieTextPdfPdfChunkArray:);
  methods[2].selector = @selector(getCurrentCharacterWithInt:withCharArray:withComAowagieTextPdfPdfChunkArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT", "LComAowagieTextSplitCharacter;", .constantValue.asLong = 0, 0x18, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "isSplitCharacter", "III[C[LComAowagieTextPdfPdfChunk;", "getCurrentCharacter", "I[C[LComAowagieTextPdfPdfChunk;", &ComAowagieTextPdfDefaultSplitCharacter_DEFAULT };
  static const J2ObjcClassInfo _ComAowagieTextPdfDefaultSplitCharacter = { "DefaultSplitCharacter", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 3, 1, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfDefaultSplitCharacter;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfDefaultSplitCharacter class]) {
    ComAowagieTextPdfDefaultSplitCharacter_DEFAULT = new_ComAowagieTextPdfDefaultSplitCharacter_initPackagePrivate();
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfDefaultSplitCharacter)
  }
}

@end


#line 60
void ComAowagieTextPdfDefaultSplitCharacter_initPackagePrivate(ComAowagieTextPdfDefaultSplitCharacter *self) {
  NSObject_init(self);
}


#line 60
ComAowagieTextPdfDefaultSplitCharacter *new_ComAowagieTextPdfDefaultSplitCharacter_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfDefaultSplitCharacter, initPackagePrivate)
}


#line 60
ComAowagieTextPdfDefaultSplitCharacter *create_ComAowagieTextPdfDefaultSplitCharacter_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfDefaultSplitCharacter, initPackagePrivate)
}


#line 103
jchar ComAowagieTextPdfDefaultSplitCharacter_getCurrentCharacterWithInt_withCharArray_withComAowagieTextPdfPdfChunkArray_(ComAowagieTextPdfDefaultSplitCharacter *self, jint current, IOSCharArray *cc, IOSObjectArray *ck) {
  if (ck == nil) {
    return IOSCharArray_Get(nil_chk(cc), current);
  }
  return (jchar) [((ComAowagieTextPdfPdfChunk *) nil_chk(IOSObjectArray_Get(ck, JavaLangMath_minWithInt_withInt_(current, ck->size_ - 1)))) getUnicodeEquivalentWithInt:IOSCharArray_Get(nil_chk(cc), current)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfDefaultSplitCharacter)

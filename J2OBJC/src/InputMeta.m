//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/codec/wmf/InputMeta.java
//

#include "Color.h"
#include "InputMeta.h"
#include "J2ObjC_source.h"
#include "Utilities.h"
#include "java/io/InputStream.h"

#if !__has_feature(objc_arc)
#error "InputMeta must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCodecWmfInputMeta () {
 @public
  JavaIoInputStream *in_;
  jint length_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecWmfInputMeta, in_, JavaIoInputStream *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/codec/wmf/InputMeta.java"


#line 59
@implementation ComAowagieTextPdfCodecWmfInputMeta


#line 64
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  ComAowagieTextPdfCodecWmfInputMeta_initWithJavaIoInputStream_(self, inArg);
  return self;
}


#line 68
- (jint)readWord {
  self->length_ += 2;
  jint k1 = [((JavaIoInputStream *) nil_chk(self->in_)) read];
  if (k1 < 0) {
    return 0;
  }
  return (k1 + (JreLShift32([self->in_ read], 8))) & (jint) 0xffff;
}

- (jint)readShort {
  jint k = [self readWord];
  if (k > (jint) 0x7fff) {
    k -= (jint) 0x10000;
  }
  return k;
}

- (jint)readInt {
  self->length_ += 4;
  jint k1 = [((JavaIoInputStream *) nil_chk(self->in_)) read];
  if (k1 < 0) {
    return 0;
  }
  jint k2 = JreLShift32([self->in_ read], 8);
  jint k3 = JreLShift32([self->in_ read], 16);
  return k1 + k2 + k3 + (JreLShift32([self->in_ read], 24));
}

- (jint)readByte {
  ++self->length_;
  return [((JavaIoInputStream *) nil_chk(self->in_)) read] & (jint) 0xff;
}

- (void)skipWithInt:(jint)len {
  self->length_ += len;
  ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->in_, len);
}

- (jint)getLength {
  return self->length_;
}

- (HarmonyJavaAwtColor *)readColor {
  jint red = [self readByte];
  jint green = [self readByte];
  jint blue = [self readByte];
  [self readByte];
  return new_HarmonyJavaAwtColor_initWithInt_withInt_withInt_(red, green, blue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x0, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(readWord);
  methods[2].selector = @selector(readShort);
  methods[3].selector = @selector(readInt);
  methods[4].selector = @selector(readByte);
  methods[5].selector = @selector(skipWithInt:);
  methods[6].selector = @selector(getLength);
  methods[7].selector = @selector(readColor);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;", "LJavaIoIOException;", "skip", "I" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecWmfInputMeta = { "InputMeta", "com.aowagie.text.pdf.codec.wmf", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecWmfInputMeta;
}

@end


#line 64
void ComAowagieTextPdfCodecWmfInputMeta_initWithJavaIoInputStream_(ComAowagieTextPdfCodecWmfInputMeta *self, JavaIoInputStream *inArg) {
  NSObject_init(self);
  
#line 65
  self->in_ = inArg;
}


#line 64
ComAowagieTextPdfCodecWmfInputMeta *new_ComAowagieTextPdfCodecWmfInputMeta_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecWmfInputMeta, initWithJavaIoInputStream_, inArg)
}


#line 64
ComAowagieTextPdfCodecWmfInputMeta *create_ComAowagieTextPdfCodecWmfInputMeta_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecWmfInputMeta, initWithJavaIoInputStream_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecWmfInputMeta)

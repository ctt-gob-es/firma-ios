//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/gl/color/ColorScaler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorScaler")
#ifdef RESTRICT_OrgApacheHarmonyAwtGlColorColorScaler
#define INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorScaler 0
#else
#define INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorScaler 1
#endif
#undef RESTRICT_OrgApacheHarmonyAwtGlColorColorScaler

#if !defined (OrgApacheHarmonyAwtGlColorColorScaler_) && (INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorScaler || defined(INCLUDE_OrgApacheHarmonyAwtGlColorColorScaler))
#define OrgApacheHarmonyAwtGlColorColorScaler_

@class HarmonyJavaAwtColorColorSpace;
@class HarmonyJavaAwtColorICC_Profile;
@class IOSFloatArray;
@class IOSShortArray;

/*!
 @brief This class provides functionality for scaling color data when ranges of the
  source and destination color values differs.
 */
@interface OrgApacheHarmonyAwtGlColorColorScaler : NSObject {
 @public
  jint nColorChannels_;
  jboolean isTTypeIntegral_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief Extracts scaling data from the color space
 @param cs - color space
 */
- (void)loadScalingDataWithHarmonyJavaAwtColorColorSpace:(HarmonyJavaAwtColorColorSpace *)cs;

/*!
 @brief Use this method only for double of float transfer types.Extracts scaling
  data from the color space signature and other tags, stored in the profile
 @param pf - ICC profile
 */
- (void)loadScalingDataWithHarmonyJavaAwtColorICC_Profile:(HarmonyJavaAwtColorICC_Profile *)pf;

/*!
 @brief Scales one pixel and puts obtained values to the chanData
 @param pixelData - input pixel
 @param chanData - output buffer
 @param chanDataOffset - output buffer offset
 */
- (void)scale__WithFloatArray:(IOSFloatArray *)pixelData
               withShortArray:(IOSShortArray *)chanData
                      withInt:(jint)chanDataOffset;

/*!
 @brief Unscales one pixel and puts obtained values to the pixelData
 @param pixelData - output pixel
 @param chanData - input buffer
 @param chanDataOffset - input buffer offset
 */
- (void)unscaleWithFloatArray:(IOSFloatArray *)pixelData
               withShortArray:(IOSShortArray *)chanData
                      withInt:(jint)chanDataOffset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheHarmonyAwtGlColorColorScaler)

FOUNDATION_EXPORT void OrgApacheHarmonyAwtGlColorColorScaler_init(OrgApacheHarmonyAwtGlColorColorScaler *self);

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorColorScaler *new_OrgApacheHarmonyAwtGlColorColorScaler_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorColorScaler *create_OrgApacheHarmonyAwtGlColorColorScaler_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonyAwtGlColorColorScaler)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorScaler")

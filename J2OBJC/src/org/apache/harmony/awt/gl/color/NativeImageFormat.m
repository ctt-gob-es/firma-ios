//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/gl/color/NativeImageFormat.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/harmony/awt/gl/color/NativeCMM.h"
#include "org/apache/harmony/awt/gl/color/NativeImageFormat.h"
#include "org/apache/harmony/awt/internal/nls/Messages.h"

#if !__has_feature(objc_arc)
#error "org/apache/harmony/awt/gl/color/NativeImageFormat must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheHarmonyAwtGlColorNativeImageFormat () {
 @public
  jint cmmFormat_;
  jint rows_;
  jint cols_;
  id imageData_;
  jint dataOffset_;
}

+ (void)initIDs OBJC_METHOD_FAMILY_NONE;

+ (jint)colorspaceShWithInt:(jint)s;

+ (jint)swapfirstShWithInt:(jint)s;

+ (jint)flavorShWithInt:(jint)s;

+ (jint)planarShWithInt:(jint)s;

+ (jint)endianShWithInt:(jint)s;

+ (jint)doswapShWithInt:(jint)s;

+ (jint)extraShWithInt:(jint)s;

+ (jint)channelsShWithInt:(jint)s;

+ (jint)bytesShWithInt:(jint)s;

@end

J2OBJC_FIELD_SETTER(OrgApacheHarmonyAwtGlColorNativeImageFormat, imageData_, id)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_PT_ANY(void);
#define OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_ANY 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheHarmonyAwtGlColorNativeImageFormat, PT_ANY, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_PT_GRAY(void);
#define OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_GRAY 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheHarmonyAwtGlColorNativeImageFormat, PT_GRAY, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_PT_RGB(void);
#define OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_RGB 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheHarmonyAwtGlColorNativeImageFormat, PT_RGB, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_INT_RGB_LCMS_FMT(void);
static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_RGB_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheHarmonyAwtGlColorNativeImageFormat, INT_RGB_LCMS_FMT, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_INT_ARGB_LCMS_FMT(void);
static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_ARGB_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheHarmonyAwtGlColorNativeImageFormat, INT_ARGB_LCMS_FMT, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_INT_BGR_LCMS_FMT(void);
static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_BGR_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheHarmonyAwtGlColorNativeImageFormat, INT_BGR_LCMS_FMT, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_THREE_BYTE_BGR_LCMS_FMT(void);
static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_THREE_BYTE_BGR_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheHarmonyAwtGlColorNativeImageFormat, THREE_BYTE_BGR_LCMS_FMT, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_FOUR_BYTE_ABGR_LCMS_FMT(void);
static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_FOUR_BYTE_ABGR_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheHarmonyAwtGlColorNativeImageFormat, FOUR_BYTE_ABGR_LCMS_FMT, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_BYTE_GRAY_LCMS_FMT(void);
static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_BYTE_GRAY_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheHarmonyAwtGlColorNativeImageFormat, BYTE_GRAY_LCMS_FMT, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_USHORT_GRAY_LCMS_FMT(void);
static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_USHORT_GRAY_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheHarmonyAwtGlColorNativeImageFormat, USHORT_GRAY_LCMS_FMT, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_scanlineStride(void);
#define OrgApacheHarmonyAwtGlColorNativeImageFormat_scanlineStride -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheHarmonyAwtGlColorNativeImageFormat, scanlineStride, jint)

inline jint OrgApacheHarmonyAwtGlColorNativeImageFormat_get_alphaOffset(void);
#define OrgApacheHarmonyAwtGlColorNativeImageFormat_alphaOffset -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheHarmonyAwtGlColorNativeImageFormat, alphaOffset, jint)

__attribute__((unused)) static void OrgApacheHarmonyAwtGlColorNativeImageFormat_initIDs(void);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_swapfirstShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_flavorShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_planarShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_endianShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_doswapShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_extraShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(jint s);

__attribute__((unused)) static jint OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(jint s);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/gl/color/NativeImageFormat.java"

J2OBJC_INITIALIZED_DEFN(OrgApacheHarmonyAwtGlColorNativeImageFormat)


#line 34
@implementation OrgApacheHarmonyAwtGlColorNativeImageFormat


#line 80
+ (void)initIDs {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initIDs();
}


#line 92
+ (jint)colorspaceShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(s);
}

+ (jint)swapfirstShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_swapfirstShWithInt_(s);
}

+ (jint)flavorShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_flavorShWithInt_(s);
}

+ (jint)planarShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_planarShWithInt_(s);
}

+ (jint)endianShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_endianShWithInt_(s);
}

+ (jint)doswapShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_doswapShWithInt_(s);
}

+ (jint)extraShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_extraShWithInt_(s);
}

+ (jint)channelsShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(s);
}

+ (jint)bytesShWithInt:(jint)s {
  return OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(s);
}


#line 133
- (id)getChannelData {
  return self->imageData_;
}

- (jint)getNumCols {
  return self->cols_;
}

- (jint)getNumRows {
  return self->rows_;
}


#line 146
- (instancetype)initPackagePrivate {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivate(self);
  return self;
}


#line 171
- (instancetype)initPackagePrivateWithId:(id)imgData
                                 withInt:(jint)nChannels
                                 withInt:(jint)nRows
                                 withInt:(jint)nCols {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(self, imgData, nChannels, nRows, nCols);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 4, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 5, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 6, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 7, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 8, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 9, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initIDs);
  methods[1].selector = @selector(colorspaceShWithInt:);
  methods[2].selector = @selector(swapfirstShWithInt:);
  methods[3].selector = @selector(flavorShWithInt:);
  methods[4].selector = @selector(planarShWithInt:);
  methods[5].selector = @selector(endianShWithInt:);
  methods[6].selector = @selector(doswapShWithInt:);
  methods[7].selector = @selector(extraShWithInt:);
  methods[8].selector = @selector(channelsShWithInt:);
  methods[9].selector = @selector(bytesShWithInt:);
  methods[10].selector = @selector(getChannelData);
  methods[11].selector = @selector(getNumCols);
  methods[12].selector = @selector(getNumRows);
  methods[13].selector = @selector(initPackagePrivate);
  methods[14].selector = @selector(initPackagePrivateWithId:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PT_ANY", "I", .constantValue.asInt = OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_ANY, 0x1a, -1, -1, -1, -1 },
    { "PT_GRAY", "I", .constantValue.asInt = OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_GRAY, 0x1a, -1, -1, -1, -1 },
    { "PT_RGB", "I", .constantValue.asInt = OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_RGB, 0x1a, -1, -1, -1, -1 },
    { "INT_RGB_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "INT_ARGB_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "INT_BGR_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "THREE_BYTE_BGR_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "FOUR_BYTE_ABGR_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "BYTE_GRAY_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "USHORT_GRAY_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "cmmFormat_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rows_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cols_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "scanlineStride", "I", .constantValue.asInt = OrgApacheHarmonyAwtGlColorNativeImageFormat_scanlineStride, 0x12, 18, -1, -1, -1 },
    { "imageData_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dataOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "alphaOffset", "I", .constantValue.asInt = OrgApacheHarmonyAwtGlColorNativeImageFormat_alphaOffset, 0x12, 19, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "colorspaceSh", "I", "swapfirstSh", "flavorSh", "planarSh", "endianSh", "doswapSh", "extraSh", "channelsSh", "bytesSh", "LNSObject;III", &OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_RGB_LCMS_FMT, &OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_ARGB_LCMS_FMT, &OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_BGR_LCMS_FMT, &OrgApacheHarmonyAwtGlColorNativeImageFormat_THREE_BYTE_BGR_LCMS_FMT, &OrgApacheHarmonyAwtGlColorNativeImageFormat_FOUR_BYTE_ABGR_LCMS_FMT, &OrgApacheHarmonyAwtGlColorNativeImageFormat_BYTE_GRAY_LCMS_FMT, &OrgApacheHarmonyAwtGlColorNativeImageFormat_USHORT_GRAY_LCMS_FMT, "scanlineStride", "alphaOffset" };
  static const J2ObjcClassInfo _OrgApacheHarmonyAwtGlColorNativeImageFormat = { "NativeImageFormat", "org.apache.harmony.awt.gl.color", ptrTable, methods, fields, 7, 0x0, 15, 17, -1, -1, -1, -1, -1 };
  return &_OrgApacheHarmonyAwtGlColorNativeImageFormat;
}

+ (void)initialize {
  if (self == [OrgApacheHarmonyAwtGlColorNativeImageFormat class]) {
    OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_RGB_LCMS_FMT =
#line 45
    OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_RGB) | OrgApacheHarmonyAwtGlColorNativeImageFormat_extraShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(3) | OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_doswapShWithInt_(
#line 46
    1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_swapfirstShWithInt_(1);
    OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_ARGB_LCMS_FMT =
#line 48
    OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_RGB_LCMS_FMT;
    OrgApacheHarmonyAwtGlColorNativeImageFormat_INT_BGR_LCMS_FMT =
#line 50
    OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_RGB) | OrgApacheHarmonyAwtGlColorNativeImageFormat_extraShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(3) | OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(1);
    OrgApacheHarmonyAwtGlColorNativeImageFormat_THREE_BYTE_BGR_LCMS_FMT =
#line 52
    OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_RGB) | OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(3) | OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_doswapShWithInt_(1);
    OrgApacheHarmonyAwtGlColorNativeImageFormat_FOUR_BYTE_ABGR_LCMS_FMT =
#line 54
    OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_RGB) | OrgApacheHarmonyAwtGlColorNativeImageFormat_extraShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(3) | OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_doswapShWithInt_(
#line 55
    1);
    OrgApacheHarmonyAwtGlColorNativeImageFormat_BYTE_GRAY_LCMS_FMT =
#line 57
    OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_GRAY) | OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(1);
    OrgApacheHarmonyAwtGlColorNativeImageFormat_USHORT_GRAY_LCMS_FMT =
#line 59
    OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat_PT_GRAY) | OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(1) | OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(2);
    {
      
#line 85
      OrgApacheHarmonyAwtGlColorNativeCMM_loadCMM();
      OrgApacheHarmonyAwtGlColorNativeImageFormat_initIDs();
    }
    J2OBJC_SET_INITIALIZED(OrgApacheHarmonyAwtGlColorNativeImageFormat)
  }
}

@end


#line 80
void OrgApacheHarmonyAwtGlColorNativeImageFormat_initIDs() {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
}


#line 92
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_colorspaceShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 93
  return JreLShift32(s, 16);
}


#line 96
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_swapfirstShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 97
  return JreLShift32(s, 14);
}


#line 100
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_flavorShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 101
  return JreLShift32(s, 13);
}


#line 104
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_planarShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 105
  return JreLShift32(s, 12);
}


#line 108
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_endianShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 109
  return JreLShift32(s, 11);
}


#line 112
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_doswapShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 113
  return JreLShift32(s, 10);
}


#line 116
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_extraShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 117
  return JreLShift32(s, 7);
}


#line 120
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 121
  return JreLShift32(s, 3);
}


#line 124
jint OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(jint s) {
  OrgApacheHarmonyAwtGlColorNativeImageFormat_initialize();
  
#line 125
  return s;
}


#line 146
void OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivate(OrgApacheHarmonyAwtGlColorNativeImageFormat *self) {
  NSObject_init(self);
  self->cmmFormat_ =
#line 63
  0;
  self->rows_ =
#line 66
  0;
  self->cols_ = 0;
}


#line 146
OrgApacheHarmonyAwtGlColorNativeImageFormat *new_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgApacheHarmonyAwtGlColorNativeImageFormat, initPackagePrivate)
}


#line 146
OrgApacheHarmonyAwtGlColorNativeImageFormat *create_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgApacheHarmonyAwtGlColorNativeImageFormat, initPackagePrivate)
}


#line 171
void OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat *self, id imgData, jint nChannels, jint nRows, jint nCols) {
  NSObject_init(self);
  self->cmmFormat_ =
#line 63
  0;
  self->rows_ =
#line 66
  0;
  self->cols_ = 0;
  
#line 172
  if ([imgData isKindOfClass:[IOSShortArray class]]) {
    self->cmmFormat_ |= OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(2);
  }
  else
#line 174
  if ([imgData isKindOfClass:[IOSByteArray class]]) {
    self->cmmFormat_ |= OrgApacheHarmonyAwtGlColorNativeImageFormat_bytesShWithInt_(1);
  }
  else {
    
#line 179
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.47"));
  }
  
#line 182
  self->cmmFormat_ |= OrgApacheHarmonyAwtGlColorNativeImageFormat_channelsShWithInt_(nChannels);
  
#line 184
  self->rows_ = nRows;
  self->cols_ = nCols;
  
#line 187
  self->imageData_ = imgData;
  
#line 189
  self->dataOffset_ = 0;
}


#line 171
OrgApacheHarmonyAwtGlColorNativeImageFormat *new_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(id imgData, jint nChannels, jint nRows, jint nCols) {
  J2OBJC_NEW_IMPL(OrgApacheHarmonyAwtGlColorNativeImageFormat, initPackagePrivateWithId_withInt_withInt_withInt_, imgData, nChannels, nRows, nCols)
}


#line 171
OrgApacheHarmonyAwtGlColorNativeImageFormat *create_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(id imgData, jint nChannels, jint nRows, jint nCols) {
  J2OBJC_CREATE_IMPL(OrgApacheHarmonyAwtGlColorNativeImageFormat, initPackagePrivateWithId_withInt_withInt_withInt_, imgData, nChannels, nRows, nCols)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheHarmonyAwtGlColorNativeImageFormat)

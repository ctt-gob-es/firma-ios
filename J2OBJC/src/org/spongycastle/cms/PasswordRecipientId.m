//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/PasswordRecipientId.java
//

#include "J2ObjC_source.h"
#include "org/spongycastle/cms/PasswordRecipientId.h"
#include "org/spongycastle/cms/PasswordRecipientInformation.h"
#include "org/spongycastle/cms/RecipientId.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/cms/PasswordRecipientId must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/PasswordRecipientId.java"


#line 3
@implementation OrgSpongycastleCmsPasswordRecipientId

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 9
- (instancetype)init {
  OrgSpongycastleCmsPasswordRecipientId_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 14
- (NSUInteger)hash {
  
#line 16
  return OrgSpongycastleCmsRecipientId_password;
}


#line 19
- (jboolean)isEqual:(id)o {
  
#line 22
  if (!([o isKindOfClass:[OrgSpongycastleCmsPasswordRecipientId class]])) {
    
#line 24
    return false;
  }
  
#line 27
  return true;
}


#line 30
- (id)java_clone {
  
#line 32
  return new_OrgSpongycastleCmsPasswordRecipientId_init();
}


#line 35
- (jboolean)matchWithId:(id)obj {
  
#line 37
  if ([obj isKindOfClass:[OrgSpongycastleCmsPasswordRecipientInformation class]]) {
    
#line 39
    return true;
  }
  
#line 42
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(java_clone);
  methods[4].selector = @selector(matchWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "hashCode", "equals", "LNSObject;", "clone", "match" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsPasswordRecipientId = { "PasswordRecipientId", "org.spongycastle.cms", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCmsPasswordRecipientId;
}

@end


#line 9
void OrgSpongycastleCmsPasswordRecipientId_init(OrgSpongycastleCmsPasswordRecipientId *self) {
  OrgSpongycastleCmsRecipientId_initWithInt_(self, OrgSpongycastleCmsRecipientId_password);
}


#line 9
OrgSpongycastleCmsPasswordRecipientId *new_OrgSpongycastleCmsPasswordRecipientId_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsPasswordRecipientId, init)
}


#line 9
OrgSpongycastleCmsPasswordRecipientId *create_OrgSpongycastleCmsPasswordRecipientId_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsPasswordRecipientId, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsPasswordRecipientId)

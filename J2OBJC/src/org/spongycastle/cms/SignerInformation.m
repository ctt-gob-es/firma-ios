//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/SignerInformation.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/RuntimeException.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1Encoding.h"
#include "org/spongycastle/asn1/ASN1Integer.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Set.h"
#include "org/spongycastle/asn1/DERNull.h"
#include "org/spongycastle/asn1/DERSet.h"
#include "org/spongycastle/asn1/cms/Attribute.h"
#include "org/spongycastle/asn1/cms/AttributeTable.h"
#include "org/spongycastle/asn1/cms/CMSAlgorithmProtection.h"
#include "org/spongycastle/asn1/cms/CMSAttributes.h"
#include "org/spongycastle/asn1/cms/IssuerAndSerialNumber.h"
#include "org/spongycastle/asn1/cms/SignerIdentifier.h"
#include "org/spongycastle/asn1/cms/SignerInfo.h"
#include "org/spongycastle/asn1/cms/Time.h"
#include "org/spongycastle/asn1/x500/X500Name.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/asn1/x509/DigestInfo.h"
#include "org/spongycastle/cert/X509CertificateHolder.h"
#include "org/spongycastle/cms/CMSException.h"
#include "org/spongycastle/cms/CMSProcessable.h"
#include "org/spongycastle/cms/CMSProcessableByteArray.h"
#include "org/spongycastle/cms/CMSSignedHelper.h"
#include "org/spongycastle/cms/CMSSignerDigestMismatchException.h"
#include "org/spongycastle/cms/CMSUtils.h"
#include "org/spongycastle/cms/CMSVerifierCertificateNotValidException.h"
#include "org/spongycastle/cms/SignerId.h"
#include "org/spongycastle/cms/SignerInformation.h"
#include "org/spongycastle/cms/SignerInformationStore.h"
#include "org/spongycastle/cms/SignerInformationVerifier.h"
#include "org/spongycastle/operator/ContentVerifier.h"
#include "org/spongycastle/operator/DigestCalculator.h"
#include "org/spongycastle/operator/OperatorCreationException.h"
#include "org/spongycastle/operator/RawContentVerifier.h"
#include "org/spongycastle/util/Arrays.h"
#include "org/spongycastle/util/io/TeeOutputStream.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/cms/SignerInformation must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCmsSignerInformation () {
 @public
  OrgSpongycastleCmsSignerId *sid_;
  id<OrgSpongycastleCmsCMSProcessable> content_;
  IOSByteArray *signature_;
  OrgSpongycastleAsn1ASN1ObjectIdentifier *contentType_;
  jboolean isCounterSignature_;
  OrgSpongycastleAsn1CmsAttributeTable *signedAttributeValues_;
  OrgSpongycastleAsn1CmsAttributeTable *unsignedAttributeValues_;
  IOSByteArray *resultDigest_;
}

- (IOSByteArray *)encodeObjWithOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)obj;

- (jboolean)doVerifyWithOrgSpongycastleCmsSignerInformationVerifier:(OrgSpongycastleCmsSignerInformationVerifier *)verifier;

- (OrgSpongycastleAsn1ASN1Primitive *)getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)attrOID
                                                                                                   withNSString:(NSString *)printableName;

- (OrgSpongycastleAsn1CmsTime *)getSigningTime;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformation, sid_, OrgSpongycastleCmsSignerId *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformation, content_, id<OrgSpongycastleCmsCMSProcessable>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformation, signature_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformation, contentType_, OrgSpongycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformation, signedAttributeValues_, OrgSpongycastleAsn1CmsAttributeTable *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformation, unsignedAttributeValues_, OrgSpongycastleAsn1CmsAttributeTable *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformation, resultDigest_, IOSByteArray *)

__attribute__((unused)) static IOSByteArray *OrgSpongycastleCmsSignerInformation_encodeObjWithOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleCmsSignerInformation *self, id<OrgSpongycastleAsn1ASN1Encodable> obj);

__attribute__((unused)) static jboolean OrgSpongycastleCmsSignerInformation_doVerifyWithOrgSpongycastleCmsSignerInformationVerifier_(OrgSpongycastleCmsSignerInformation *self, OrgSpongycastleCmsSignerInformationVerifier *verifier);

__attribute__((unused)) static OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleCmsSignerInformation_getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleCmsSignerInformation *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *attrOID, NSString *printableName);

__attribute__((unused)) static OrgSpongycastleAsn1CmsTime *OrgSpongycastleCmsSignerInformation_getSigningTime(OrgSpongycastleCmsSignerInformation *self);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/SignerInformation.java"


#line 40
@implementation OrgSpongycastleCmsSignerInformation


#line 59
- (instancetype)initWithOrgSpongycastleAsn1CmsSignerInfo:(OrgSpongycastleAsn1CmsSignerInfo *)info
             withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)contentType
                    withOrgSpongycastleCmsCMSProcessable:(id<OrgSpongycastleCmsCMSProcessable>)content
                                           withByteArray:(IOSByteArray *)resultDigest {
  OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_(self, info, contentType, content, resultDigest);
  return self;
}


#line 101
- (instancetype)initWithOrgSpongycastleCmsSignerInformation:(OrgSpongycastleCmsSignerInformation *)baseInfo {
  OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleCmsSignerInformation_(self, baseInfo);
  return self;
}


#line 116
- (jboolean)isCounterSignature {
  
#line 118
  return isCounterSignature_;
}


#line 121
- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getContentType {
  
#line 123
  return self->contentType_;
}


#line 126
- (IOSByteArray *)encodeObjWithOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)obj {
  return OrgSpongycastleCmsSignerInformation_encodeObjWithOrgSpongycastleAsn1ASN1Encodable_(self, obj);
}


#line 138
- (OrgSpongycastleCmsSignerId *)getSID {
  
#line 140
  return sid_;
}


#line 146
- (jint)getVersion {
  
#line 148
  return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(info_)) getVersion])) getValue])) intValue];
}


#line 151
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithmID {
  
#line 153
  return digestAlgorithm_;
}


#line 159
- (NSString *)getDigestAlgOID {
  
#line 161
  return [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(digestAlgorithm_)) getAlgorithm])) getId];
}


#line 167
- (IOSByteArray *)getDigestAlgParams {
  
#line 169
  @try {
    
#line 171
    return OrgSpongycastleCmsSignerInformation_encodeObjWithOrgSpongycastleAsn1ASN1Encodable_(self, [((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(digestAlgorithm_)) getParameters]);
  }
  @catch (JavaLangException *e) {
    
#line 175
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"exception getting digest parameters ", e));
  }
}

- (IOSByteArray *)getContentDigest {
  
#line 184
  if (resultDigest_ == nil) {
    
#line 186
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"method can only be called after verify.");
  }
  
#line 189
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(resultDigest_);
}

- (NSString *)getEncryptionAlgOID {
  
#line 197
  return [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(encryptionAlgorithm_)) getAlgorithm])) getId];
}


#line 204
- (IOSByteArray *)getEncryptionAlgParams {
  
#line 206
  @try {
    
#line 208
    return OrgSpongycastleCmsSignerInformation_encodeObjWithOrgSpongycastleAsn1ASN1Encodable_(self, [((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(encryptionAlgorithm_)) getParameters]);
  }
  @catch (JavaLangException *e) {
    
#line 212
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"exception getting encryption parameters ", e));
  }
}


#line 220
- (OrgSpongycastleAsn1CmsAttributeTable *)getSignedAttributes {
  
#line 222
  if (signedAttributeSet_ != nil && signedAttributeValues_ == nil) {
    
#line 224
    signedAttributeValues_ = new_OrgSpongycastleAsn1CmsAttributeTable_initWithOrgSpongycastleAsn1ASN1Set_(signedAttributeSet_);
  }
  
#line 227
  return signedAttributeValues_;
}


#line 234
- (OrgSpongycastleAsn1CmsAttributeTable *)getUnsignedAttributes {
  
#line 236
  if (unsignedAttributeSet_ != nil && unsignedAttributeValues_ == nil) {
    
#line 238
    unsignedAttributeValues_ = new_OrgSpongycastleAsn1CmsAttributeTable_initWithOrgSpongycastleAsn1ASN1Set_(unsignedAttributeSet_);
  }
  
#line 241
  return unsignedAttributeValues_;
}

- (IOSByteArray *)getSignature {
  
#line 249
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(signature_);
}


#line 256
- (OrgSpongycastleCmsSignerInformationStore *)getCounterSignatures {
  
#line 265
  OrgSpongycastleAsn1CmsAttributeTable *unsignedAttributeTable = [self getUnsignedAttributes];
  if (unsignedAttributeTable == nil) {
    
#line 268
    return new_OrgSpongycastleCmsSignerInformationStore_initWithJavaUtilCollection_(new_JavaUtilArrayList_initWithInt_(0));
  }
  
#line 271
  id<JavaUtilList> counterSignatures = new_JavaUtilArrayList_init();
  
#line 278
  OrgSpongycastleAsn1ASN1EncodableVector *allCSAttrs = [unsignedAttributeTable getAllWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, counterSignature)];
  
#line 280
  for (jint i = 0; i < [((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk(allCSAttrs)) size]; ++i) {
    
#line 282
    OrgSpongycastleAsn1CmsAttribute *counterSignatureAttribute = (OrgSpongycastleAsn1CmsAttribute *) cast_chk([allCSAttrs getWithInt:i], [OrgSpongycastleAsn1CmsAttribute class]);
    
#line 289
    OrgSpongycastleAsn1ASN1Set *values = [((OrgSpongycastleAsn1CmsAttribute *) nil_chk(counterSignatureAttribute)) getAttrValues];
    if ([((OrgSpongycastleAsn1ASN1Set *) nil_chk(values)) size] < 1) {
    }
    
#line 295
    for (id<JavaUtilEnumeration> en = [values getObjects]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
      
#line 311
      OrgSpongycastleAsn1CmsSignerInfo *si = OrgSpongycastleAsn1CmsSignerInfo_getInstanceWithId_([en nextElement]);
      
#line 313
      [counterSignatures addWithId:new_OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_(si, nil, new_OrgSpongycastleCmsCMSProcessableByteArray_initWithByteArray_([self getSignature]), nil)];
    }
  }
  
#line 317
  return new_OrgSpongycastleCmsSignerInformationStore_initWithJavaUtilCollection_(counterSignatures);
}


#line 324
- (IOSByteArray *)getEncodedSignedAttributes {
  
#line 327
  if (signedAttributeSet_ != nil) {
    
#line 329
    return [signedAttributeSet_ getEncodedWithNSString:OrgSpongycastleAsn1ASN1Encoding_DER];
  }
  
#line 332
  return nil;
}


#line 335
- (jboolean)doVerifyWithOrgSpongycastleCmsSignerInformationVerifier:(OrgSpongycastleCmsSignerInformationVerifier *)verifier {
  return OrgSpongycastleCmsSignerInformation_doVerifyWithOrgSpongycastleCmsSignerInformationVerifier_(self, verifier);
}


#line 583
- (jboolean)verifyWithOrgSpongycastleCmsSignerInformationVerifier:(OrgSpongycastleCmsSignerInformationVerifier *)verifier {
  
#line 586
  OrgSpongycastleAsn1CmsTime *signingTime = OrgSpongycastleCmsSignerInformation_getSigningTime(self);
  
#line 588
  if ([((OrgSpongycastleCmsSignerInformationVerifier *) nil_chk(verifier)) hasAssociatedCertificate]) {
    
#line 590
    if (signingTime != nil) {
      
#line 592
      OrgSpongycastleCertX509CertificateHolder *dcv = [verifier getAssociatedCertificate];
      
#line 594
      if (![((OrgSpongycastleCertX509CertificateHolder *) nil_chk(dcv)) isValidOnWithJavaUtilDate:[signingTime getDate]]) {
        
#line 596
        @throw new_OrgSpongycastleCmsCMSVerifierCertificateNotValidException_initWithNSString_(@"verifier not valid at signingTime");
      }
    }
  }
  
#line 601
  return OrgSpongycastleCmsSignerInformation_doVerifyWithOrgSpongycastleCmsSignerInformationVerifier_(self, verifier);
}


#line 609
- (OrgSpongycastleAsn1CmsSignerInfo *)toASN1Structure {
  
#line 611
  return info_;
}


#line 614
- (OrgSpongycastleAsn1ASN1Primitive *)getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)attrOID
                                                                                                   withNSString:(NSString *)printableName {
  return OrgSpongycastleCmsSignerInformation_getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, attrOID, printableName);
}


#line 655
- (OrgSpongycastleAsn1CmsTime *)getSigningTime {
  return OrgSpongycastleCmsSignerInformation_getSigningTime(self);
}


#line 684
+ (OrgSpongycastleCmsSignerInformation *)replaceUnsignedAttributesWithOrgSpongycastleCmsSignerInformation:(OrgSpongycastleCmsSignerInformation *)signerInformation
                                                                 withOrgSpongycastleAsn1CmsAttributeTable:(OrgSpongycastleAsn1CmsAttributeTable *)unsignedAttributes {
  return OrgSpongycastleCmsSignerInformation_replaceUnsignedAttributesWithOrgSpongycastleCmsSignerInformation_withOrgSpongycastleAsn1CmsAttributeTable_(signerInformation, unsignedAttributes);
}


#line 710
+ (OrgSpongycastleCmsSignerInformation *)addCounterSignersWithOrgSpongycastleCmsSignerInformation:(OrgSpongycastleCmsSignerInformation *)signerInformation
                                                     withOrgSpongycastleCmsSignerInformationStore:(OrgSpongycastleCmsSignerInformationStore *)counterSigners {
  return OrgSpongycastleCmsSignerInformation_addCounterSignersWithOrgSpongycastleCmsSignerInformation_withOrgSpongycastleCmsSignerInformationStore_(signerInformation, counterSigners);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsSignerId;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmsAttributeTable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmsAttributeTable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsSignerInformationStore;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "Z", 0x2, 5, 6, 7, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 6, 7, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmsSignerInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x2, 9, 10, 7, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmsTime;", 0x2, -1, -1, 7, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsSignerInformation;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsSignerInformation;", 0x9, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1CmsSignerInfo:withOrgSpongycastleAsn1ASN1ObjectIdentifier:withOrgSpongycastleCmsCMSProcessable:withByteArray:);
  methods[1].selector = @selector(initWithOrgSpongycastleCmsSignerInformation:);
  methods[2].selector = @selector(isCounterSignature);
  methods[3].selector = @selector(getContentType);
  methods[4].selector = @selector(encodeObjWithOrgSpongycastleAsn1ASN1Encodable:);
  methods[5].selector = @selector(getSID);
  methods[6].selector = @selector(getVersion);
  methods[7].selector = @selector(getDigestAlgorithmID);
  methods[8].selector = @selector(getDigestAlgOID);
  methods[9].selector = @selector(getDigestAlgParams);
  methods[10].selector = @selector(getContentDigest);
  methods[11].selector = @selector(getEncryptionAlgOID);
  methods[12].selector = @selector(getEncryptionAlgParams);
  methods[13].selector = @selector(getSignedAttributes);
  methods[14].selector = @selector(getUnsignedAttributes);
  methods[15].selector = @selector(getSignature);
  methods[16].selector = @selector(getCounterSignatures);
  methods[17].selector = @selector(getEncodedSignedAttributes);
  methods[18].selector = @selector(doVerifyWithOrgSpongycastleCmsSignerInformationVerifier:);
  methods[19].selector = @selector(verifyWithOrgSpongycastleCmsSignerInformationVerifier:);
  methods[20].selector = @selector(toASN1Structure);
  methods[21].selector = @selector(getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[22].selector = @selector(getSigningTime);
  methods[23].selector = @selector(replaceUnsignedAttributesWithOrgSpongycastleCmsSignerInformation:withOrgSpongycastleAsn1CmsAttributeTable:);
  methods[24].selector = @selector(addCounterSignersWithOrgSpongycastleCmsSignerInformation:withOrgSpongycastleCmsSignerInformationStore:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sid_", "LOrgSpongycastleCmsSignerId;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "content_", "LOrgSpongycastleCmsCMSProcessable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "signature_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "contentType_", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "isCounterSignature_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "signedAttributeValues_", "LOrgSpongycastleAsn1CmsAttributeTable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "unsignedAttributeValues_", "LOrgSpongycastleAsn1CmsAttributeTable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "resultDigest_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "info_", "LOrgSpongycastleAsn1CmsSignerInfo;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "digestAlgorithm_", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "encryptionAlgorithm_", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "signedAttributeSet_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "unsignedAttributeSet_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1CmsSignerInfo;LOrgSpongycastleAsn1ASN1ObjectIdentifier;LOrgSpongycastleCmsCMSProcessable;[B", "LOrgSpongycastleCmsSignerInformation;", "encodeObj", "LOrgSpongycastleAsn1ASN1Encodable;", "LJavaIoIOException;", "doVerify", "LOrgSpongycastleCmsSignerInformationVerifier;", "LOrgSpongycastleCmsCMSException;", "verify", "getSingleValuedSignedAttribute", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;LNSString;", "replaceUnsignedAttributes", "LOrgSpongycastleCmsSignerInformation;LOrgSpongycastleAsn1CmsAttributeTable;", "addCounterSigners", "LOrgSpongycastleCmsSignerInformation;LOrgSpongycastleCmsSignerInformationStore;" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsSignerInformation = { "SignerInformation", "org.spongycastle.cms", ptrTable, methods, fields, 7, 0x1, 25, 13, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCmsSignerInformation;
}

@end


#line 59
void OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_(OrgSpongycastleCmsSignerInformation *self, OrgSpongycastleAsn1CmsSignerInfo *info, OrgSpongycastleAsn1ASN1ObjectIdentifier *contentType, id<OrgSpongycastleCmsCMSProcessable> content, IOSByteArray *resultDigest) {
  NSObject_init(self);
  
#line 65
  self->info_ = info;
  self->contentType_ = contentType;
  self->isCounterSignature_ = (contentType == nil);
  
#line 69
  OrgSpongycastleAsn1CmsSignerIdentifier *s = [((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(info)) getSID];
  
#line 71
  if ([((OrgSpongycastleAsn1CmsSignerIdentifier *) nil_chk(s)) isTagged]) {
    
#line 73
    OrgSpongycastleAsn1ASN1OctetString *octs = OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([s getId]);
    
#line 75
    self->sid_ = new_OrgSpongycastleCmsSignerId_initWithByteArray_([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(octs)) getOctets]);
  }
  else {
    
#line 79
    OrgSpongycastleAsn1CmsIssuerAndSerialNumber *iAnds = OrgSpongycastleAsn1CmsIssuerAndSerialNumber_getInstanceWithId_([s getId]);
    
#line 81
    self->sid_ = new_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_([((OrgSpongycastleAsn1CmsIssuerAndSerialNumber *) nil_chk(iAnds)) getName], [((OrgSpongycastleAsn1ASN1Integer *) nil_chk([iAnds getSerialNumber])) getValue]);
  }
  
#line 84
  self->digestAlgorithm_ = [info getDigestAlgorithm];
  self->signedAttributeSet_ = [info getAuthenticatedAttributes];
  self->unsignedAttributeSet_ = [info getUnauthenticatedAttributes];
  self->encryptionAlgorithm_ = [info getDigestEncryptionAlgorithm];
  self->signature_ = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk([info getEncryptedDigest])) getOctets];
  
#line 90
  self->content_ = content;
  self->resultDigest_ = resultDigest;
}


#line 59
OrgSpongycastleCmsSignerInformation *new_OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_(OrgSpongycastleAsn1CmsSignerInfo *info, OrgSpongycastleAsn1ASN1ObjectIdentifier *contentType, id<OrgSpongycastleCmsCMSProcessable> content, IOSByteArray *resultDigest) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerInformation, initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_, info, contentType, content, resultDigest)
}


#line 59
OrgSpongycastleCmsSignerInformation *create_OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_(OrgSpongycastleAsn1CmsSignerInfo *info, OrgSpongycastleAsn1ASN1ObjectIdentifier *contentType, id<OrgSpongycastleCmsCMSProcessable> content, IOSByteArray *resultDigest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerInformation, initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_, info, contentType, content, resultDigest)
}


#line 101
void OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleCmsSignerInformation_(OrgSpongycastleCmsSignerInformation *self, OrgSpongycastleCmsSignerInformation *baseInfo) {
  NSObject_init(self);
  self->info_ = ((OrgSpongycastleCmsSignerInformation *) nil_chk(baseInfo))->info_;
  self->contentType_ = baseInfo->contentType_;
  self->isCounterSignature_ = [baseInfo isCounterSignature];
  self->sid_ = [baseInfo getSID];
  self->digestAlgorithm_ = [((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(self->info_)) getDigestAlgorithm];
  self->signedAttributeSet_ = [self->info_ getAuthenticatedAttributes];
  self->unsignedAttributeSet_ = [self->info_ getUnauthenticatedAttributes];
  self->encryptionAlgorithm_ = [self->info_ getDigestEncryptionAlgorithm];
  self->signature_ = [((OrgSpongycastleAsn1ASN1OctetString *) nil_chk([self->info_ getEncryptedDigest])) getOctets];
  self->content_ = baseInfo->content_;
  self->resultDigest_ = baseInfo->resultDigest_;
}


#line 101
OrgSpongycastleCmsSignerInformation *new_OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleCmsSignerInformation_(OrgSpongycastleCmsSignerInformation *baseInfo) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerInformation, initWithOrgSpongycastleCmsSignerInformation_, baseInfo)
}


#line 101
OrgSpongycastleCmsSignerInformation *create_OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleCmsSignerInformation_(OrgSpongycastleCmsSignerInformation *baseInfo) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerInformation, initWithOrgSpongycastleCmsSignerInformation_, baseInfo)
}


#line 126
IOSByteArray *OrgSpongycastleCmsSignerInformation_encodeObjWithOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleCmsSignerInformation *self, id<OrgSpongycastleAsn1ASN1Encodable> obj) {
  
#line 130
  if (obj != nil) {
    
#line 132
    return [((OrgSpongycastleAsn1ASN1Primitive *) nil_chk([obj toASN1Primitive])) getEncoded];
  }
  
#line 135
  return nil;
}


#line 335
jboolean OrgSpongycastleCmsSignerInformation_doVerifyWithOrgSpongycastleCmsSignerInformationVerifier_(OrgSpongycastleCmsSignerInformation *self, OrgSpongycastleCmsSignerInformationVerifier *verifier) {
  
#line 339
  NSString *encName = [((OrgSpongycastleCmsCMSSignedHelper *) nil_chk(JreLoadStatic(OrgSpongycastleCmsCMSSignedHelper, INSTANCE))) getEncryptionAlgNameWithNSString:[self getEncryptionAlgOID]];
  id<OrgSpongycastleOperatorContentVerifier> contentVerifier;
  
#line 342
  @try {
    
#line 344
    contentVerifier = [((OrgSpongycastleCmsSignerInformationVerifier *) nil_chk(verifier)) getContentVerifierWithOrgSpongycastleAsn1X509AlgorithmIdentifier:self->encryptionAlgorithm_ withOrgSpongycastleAsn1X509AlgorithmIdentifier:[((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(self->info_)) getDigestAlgorithm]];
  }
  @catch (OrgSpongycastleOperatorOperatorCreationException *e) {
    
#line 348
    @throw new_OrgSpongycastleCmsCMSException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"can't create content verifier: ", [e getMessage]), e);
  }
  
#line 351
  @try {
    
#line 353
    JavaIoOutputStream *sigOut = [((id<OrgSpongycastleOperatorContentVerifier>) nil_chk(contentVerifier)) getOutputStream];
    
#line 355
    if (self->resultDigest_ == nil) {
      
#line 357
      id<OrgSpongycastleOperatorDigestCalculator> calc = [verifier getDigestCalculatorWithOrgSpongycastleAsn1X509AlgorithmIdentifier:[self getDigestAlgorithmID]];
      if (self->content_ != nil) {
        
#line 360
        JavaIoOutputStream *digOut = [((id<OrgSpongycastleOperatorDigestCalculator>) nil_chk(calc)) getOutputStream];
        
#line 362
        if (self->signedAttributeSet_ == nil) {
          
#line 364
          if ([OrgSpongycastleOperatorRawContentVerifier_class_() isInstance:contentVerifier]) {
            
#line 366
            [self->content_ writeWithJavaIoOutputStream:digOut];
          }
          else {
            
#line 370
            JavaIoOutputStream *cOut = new_OrgSpongycastleUtilIoTeeOutputStream_initWithJavaIoOutputStream_withJavaIoOutputStream_(digOut, sigOut);
            
#line 372
            [self->content_ writeWithJavaIoOutputStream:cOut];
            
#line 374
            [cOut close];
          }
        }
        else {
          
#line 379
          [self->content_ writeWithJavaIoOutputStream:digOut];
          [((JavaIoOutputStream *) nil_chk(sigOut)) writeWithByteArray:[self getEncodedSignedAttributes]];
        }
        
#line 383
        [((JavaIoOutputStream *) nil_chk(digOut)) close];
      }
      else if (self->signedAttributeSet_ != nil) {
        
#line 387
        [((JavaIoOutputStream *) nil_chk(sigOut)) writeWithByteArray:[self getEncodedSignedAttributes]];
      }
      else {
        
#line 392
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"data not encapsulated in signature - use detached constructor.");
      }
      
#line 395
      self->resultDigest_ = [((id<OrgSpongycastleOperatorDigestCalculator>) nil_chk(calc)) getDigest];
    }
    else {
      
#line 399
      if (self->signedAttributeSet_ == nil) {
        
#line 401
        if (self->content_ != nil) {
          
#line 403
          [self->content_ writeWithJavaIoOutputStream:sigOut];
        }
      }
      else {
        
#line 408
        [((JavaIoOutputStream *) nil_chk(sigOut)) writeWithByteArray:[self getEncodedSignedAttributes]];
      }
    }
    
#line 412
    [((JavaIoOutputStream *) nil_chk(sigOut)) close];
  }
  @catch (JavaIoIOException *e) {
    
#line 416
    @throw new_OrgSpongycastleCmsCMSException_initWithNSString_withJavaLangException_(@"can't process mime object to create signature.", e);
  }
  @catch (OrgSpongycastleOperatorOperatorCreationException *e) {
    
#line 420
    @throw new_OrgSpongycastleCmsCMSException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"can't create digest calculator: ", [e getMessage]), e);
  }
  {
    
#line 425
    OrgSpongycastleAsn1ASN1Primitive *validContentType = OrgSpongycastleCmsSignerInformation_getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, contentType),
#line 426
    @"content-type");
    if (validContentType == nil) {
      
#line 429
      if (!self->isCounterSignature_ && self->signedAttributeSet_ != nil) {
        
#line 431
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"The content-type attribute type MUST be present whenever signed attributes are present in signed-data");
      }
    }
    else {
      
#line 436
      if (self->isCounterSignature_) {
        
#line 438
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"[For counter signatures,] the signedAttributes field MUST NOT contain a content-type attribute");
      }
      
#line 441
      if (!([validContentType isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]])) {
        
#line 443
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"content-type attribute value not of ASN.1 type 'OBJECT IDENTIFIER'");
      }
      
#line 446
      OrgSpongycastleAsn1ASN1ObjectIdentifier *signedContentType = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk(validContentType, [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
      
#line 448
      if (![signedContentType isEqual:self->contentType_]) {
        
#line 450
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"content-type attribute value does not match eContentType");
      }
    }
  }
  
#line 455
  OrgSpongycastleAsn1CmsAttributeTable *signedAttrTable = [self getSignedAttributes];
  {
    
#line 459
    OrgSpongycastleAsn1CmsAttributeTable *unsignedAttrTable = [self getUnsignedAttributes];
    if (unsignedAttrTable != nil && [((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk([unsignedAttrTable getAllWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, cmsAlgorithmProtect)])) size] > 0) {
      
#line 462
      @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"A cmsAlgorithmProtect attribute MUST be a signed attribute");
    }
    if (signedAttrTable != nil) {
      
#line 466
      OrgSpongycastleAsn1ASN1EncodableVector *protectionAttributes = [signedAttrTable getAllWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, cmsAlgorithmProtect)];
      if ([((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk(protectionAttributes)) size] > 1) {
        
#line 469
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"Only one instance of a cmsAlgorithmProtect attribute can be present");
      }
      
#line 472
      if ([protectionAttributes size] > 0) {
        
#line 474
        OrgSpongycastleAsn1CmsAttribute *attr = OrgSpongycastleAsn1CmsAttribute_getInstanceWithId_([protectionAttributes getWithInt:0]);
        if ([((OrgSpongycastleAsn1ASN1Set *) nil_chk([((OrgSpongycastleAsn1CmsAttribute *) nil_chk(attr)) getAttrValues])) size] != 1) {
          
#line 477
          @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"A cmsAlgorithmProtect attribute MUST contain exactly one value");
        }
        
#line 480
        OrgSpongycastleAsn1CmsCMSAlgorithmProtection *algorithmProtection = OrgSpongycastleAsn1CmsCMSAlgorithmProtection_getInstanceWithId_(IOSObjectArray_Get(nil_chk([attr getAttributeValues]), 0));
        
#line 482
        if (!OrgSpongycastleCmsCMSUtils_isEquivalentWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_([((OrgSpongycastleAsn1CmsCMSAlgorithmProtection *) nil_chk(algorithmProtection)) getDigestAlgorithm], [self->info_ getDigestAlgorithm])) {
          
#line 484
          @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"CMS Algorithm Identifier Protection check failed for digestAlgorithm");
        }
        
#line 487
        if (!OrgSpongycastleCmsCMSUtils_isEquivalentWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_([algorithmProtection getSignatureAlgorithm], [self->info_ getDigestEncryptionAlgorithm])) {
          
#line 489
          @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"CMS Algorithm Identifier Protection check failed for signatureAlgorithm");
        }
      }
    }
  }
  {
    
#line 497
    OrgSpongycastleAsn1ASN1Primitive *validMessageDigest = OrgSpongycastleCmsSignerInformation_getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, messageDigest),
#line 498
    @"message-digest");
    if (validMessageDigest == nil) {
      
#line 501
      if (self->signedAttributeSet_ != nil) {
        
#line 503
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"the message-digest signed attribute type MUST be present when there are any signed attributes present");
      }
    }
    else {
      
#line 508
      if (!([validMessageDigest isKindOfClass:[OrgSpongycastleAsn1ASN1OctetString class]])) {
        
#line 510
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"message-digest attribute value not of ASN.1 type 'OCTET STRING'");
      }
      
#line 513
      OrgSpongycastleAsn1ASN1OctetString *signedMessageDigest = (OrgSpongycastleAsn1ASN1OctetString *) cast_chk(validMessageDigest, [OrgSpongycastleAsn1ASN1OctetString class]);
      
#line 515
      if (!OrgSpongycastleUtilArrays_constantTimeAreEqualWithByteArray_withByteArray_(self->resultDigest_, [signedMessageDigest getOctets])) {
        
#line 517
        @throw new_OrgSpongycastleCmsCMSSignerDigestMismatchException_initWithNSString_(@"message-digest attribute value does not match calculated value");
      }
    }
  }
  {
    
#line 524
    if (signedAttrTable != nil &&
#line 525
    [((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk([signedAttrTable getAllWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, counterSignature)])) size] > 0) {
      
#line 527
      @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"A countersignature attribute MUST NOT be a signed attribute");
    }
    
#line 530
    OrgSpongycastleAsn1CmsAttributeTable *unsignedAttrTable = [self getUnsignedAttributes];
    if (unsignedAttrTable != nil) {
      
#line 533
      OrgSpongycastleAsn1ASN1EncodableVector *csAttrs = [unsignedAttrTable getAllWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, counterSignature)];
      for (jint i = 0; i < [((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk(csAttrs)) size]; ++i) {
        
#line 536
        OrgSpongycastleAsn1CmsAttribute *csAttr = OrgSpongycastleAsn1CmsAttribute_getInstanceWithId_([csAttrs getWithInt:i]);
        if ([((OrgSpongycastleAsn1ASN1Set *) nil_chk([((OrgSpongycastleAsn1CmsAttribute *) nil_chk(csAttr)) getAttrValues])) size] < 1) {
          
#line 539
          @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"A countersignature attribute MUST contain at least one AttributeValue");
        }
      }
    }
  }
  
#line 547
  @try {
    
#line 549
    if (self->signedAttributeSet_ == nil && self->resultDigest_ != nil) {
      
#line 551
      if ([OrgSpongycastleOperatorRawContentVerifier_class_() isInstance:contentVerifier]) {
        
#line 553
        id<OrgSpongycastleOperatorRawContentVerifier> rawVerifier = (id<OrgSpongycastleOperatorRawContentVerifier>) cast_check(contentVerifier, OrgSpongycastleOperatorRawContentVerifier_class_());
        
#line 555
        if ([((NSString *) nil_chk(encName)) isEqual:@"RSA"]) {
          
#line 557
          OrgSpongycastleAsn1X509DigestInfo *digInfo = new_OrgSpongycastleAsn1X509DigestInfo_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(new_OrgSpongycastleAsn1X509AlgorithmIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(self->digestAlgorithm_)) getAlgorithm], JreLoadStatic(OrgSpongycastleAsn1DERNull, INSTANCE)), self->resultDigest_);
          
#line 559
          return [rawVerifier verifyWithByteArray:[digInfo getEncodedWithNSString:OrgSpongycastleAsn1ASN1Encoding_DER] withByteArray:[self getSignature]];
        }
        
#line 562
        return [rawVerifier verifyWithByteArray:self->resultDigest_ withByteArray:[self getSignature]];
      }
    }
    
#line 566
    return [contentVerifier verifyWithByteArray:[self getSignature]];
  }
  @catch (JavaIoIOException *e) {
    
#line 570
    @throw new_OrgSpongycastleCmsCMSException_initWithNSString_withJavaLangException_(@"can't process mime object to create signature.", e);
  }
}


#line 614
OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleCmsSignerInformation_getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleCmsSignerInformation *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *attrOID, NSString *printableName) {
  
#line 618
  OrgSpongycastleAsn1CmsAttributeTable *unsignedAttrTable = [self getUnsignedAttributes];
  if (unsignedAttrTable != nil &&
#line 620
  [((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk([unsignedAttrTable getAllWithOrgSpongycastleAsn1ASN1ObjectIdentifier:attrOID])) size] > 0) {
    
#line 622
    @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(JreStrcat("$$$", @"The ", printableName, @" attribute MUST NOT be an unsigned attribute"));
  }
  
#line 626
  OrgSpongycastleAsn1CmsAttributeTable *signedAttrTable = [self getSignedAttributes];
  if (signedAttrTable == nil) {
    
#line 629
    return nil;
  }
  
#line 632
  OrgSpongycastleAsn1ASN1EncodableVector *v = [signedAttrTable getAllWithOrgSpongycastleAsn1ASN1ObjectIdentifier:attrOID];
  switch ([((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk(v)) size]) {
    
#line 635
    case 0:
    return nil;
    case 1:
    {
      OrgSpongycastleAsn1CmsAttribute *t = (OrgSpongycastleAsn1CmsAttribute *) cast_chk([v getWithInt:0], [OrgSpongycastleAsn1CmsAttribute class]);
      OrgSpongycastleAsn1ASN1Set *attrValues = [((OrgSpongycastleAsn1CmsAttribute *) nil_chk(t)) getAttrValues];
      if ([((OrgSpongycastleAsn1ASN1Set *) nil_chk(attrValues)) size] != 1) {
        
#line 643
        @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(JreStrcat("$$$", @"A ", printableName, @" attribute MUST have a single attribute value"));
      }
      
#line 647
      return [((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([attrValues getObjectAtWithInt:0])) toASN1Primitive];
    }
    default:
    @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(JreStrcat("$$$", @"The SignedAttributes in a signerInfo MUST NOT include multiple instances of the ",
#line 651
    printableName, @" attribute"));
  }
}


#line 655
OrgSpongycastleAsn1CmsTime *OrgSpongycastleCmsSignerInformation_getSigningTime(OrgSpongycastleCmsSignerInformation *self) {
  
#line 657
  OrgSpongycastleAsn1ASN1Primitive *validSigningTime = OrgSpongycastleCmsSignerInformation_getSingleValuedSignedAttributeWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, signingTime),
#line 658
  @"signing-time");
  
#line 660
  if (validSigningTime == nil) {
    
#line 662
    return nil;
  }
  
#line 665
  @try {
    
#line 667
    return OrgSpongycastleAsn1CmsTime_getInstanceWithId_(validSigningTime);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    
#line 671
    @throw new_OrgSpongycastleCmsCMSException_initWithNSString_(@"signing-time attribute value not a valid 'Time' structure");
  }
}


#line 684
OrgSpongycastleCmsSignerInformation *OrgSpongycastleCmsSignerInformation_replaceUnsignedAttributesWithOrgSpongycastleCmsSignerInformation_withOrgSpongycastleAsn1CmsAttributeTable_(OrgSpongycastleCmsSignerInformation *signerInformation, OrgSpongycastleAsn1CmsAttributeTable *unsignedAttributes) {
  OrgSpongycastleCmsSignerInformation_initialize();
  
#line 688
  OrgSpongycastleAsn1CmsSignerInfo *sInfo = ((OrgSpongycastleCmsSignerInformation *) nil_chk(signerInformation))->info_;
  OrgSpongycastleAsn1ASN1Set *unsignedAttr = nil;
  
#line 691
  if (unsignedAttributes != nil) {
    
#line 693
    unsignedAttr = new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1EncodableVector_([unsignedAttributes toASN1EncodableVector]);
  }
  
#line 696
  return new_OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_(new_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Set_(
#line 697
  [((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(sInfo)) getSID], [sInfo getDigestAlgorithm],
#line 698
  [sInfo getAuthenticatedAttributes], [sInfo getDigestEncryptionAlgorithm], [sInfo getEncryptedDigest], unsignedAttr),
#line 699
  signerInformation->contentType_, signerInformation->content_, nil);
}


#line 710
OrgSpongycastleCmsSignerInformation *OrgSpongycastleCmsSignerInformation_addCounterSignersWithOrgSpongycastleCmsSignerInformation_withOrgSpongycastleCmsSignerInformationStore_(OrgSpongycastleCmsSignerInformation *signerInformation, OrgSpongycastleCmsSignerInformationStore *counterSigners) {
  OrgSpongycastleCmsSignerInformation_initialize();
  
#line 716
  OrgSpongycastleAsn1CmsSignerInfo *sInfo = ((OrgSpongycastleCmsSignerInformation *) nil_chk(signerInformation))->info_;
  OrgSpongycastleAsn1CmsAttributeTable *unsignedAttr = [signerInformation getUnsignedAttributes];
  OrgSpongycastleAsn1ASN1EncodableVector *v;
  
#line 720
  if (unsignedAttr != nil) {
    
#line 722
    v = [unsignedAttr toASN1EncodableVector];
  }
  else {
    
#line 726
    v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  }
  
#line 729
  OrgSpongycastleAsn1ASN1EncodableVector *sigs = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 731
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((OrgSpongycastleCmsSignerInformationStore *) nil_chk(counterSigners)) getSigners])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 733
    [sigs addWithOrgSpongycastleAsn1ASN1Encodable:[((OrgSpongycastleCmsSignerInformation *) nil_chk(((OrgSpongycastleCmsSignerInformation *) cast_chk([it next], [OrgSpongycastleCmsSignerInformation class])))) toASN1Structure]];
  }
  
#line 736
  [((OrgSpongycastleAsn1ASN1EncodableVector *) nil_chk(v)) addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1CmsAttribute_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Set_(JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, counterSignature), new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1EncodableVector_(sigs))];
  
#line 738
  return new_OrgSpongycastleCmsSignerInformation_initWithOrgSpongycastleAsn1CmsSignerInfo_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleCmsCMSProcessable_withByteArray_(new_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Set_(
#line 739
  [((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(sInfo)) getSID], [sInfo getDigestAlgorithm],
#line 740
  [sInfo getAuthenticatedAttributes], [sInfo getDigestEncryptionAlgorithm], [sInfo getEncryptedDigest], new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v)),
#line 741
  signerInformation->contentType_, signerInformation->content_, nil);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsSignerInformation)

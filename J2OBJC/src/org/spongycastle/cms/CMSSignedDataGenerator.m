//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/CMSSignedDataGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1OctetString.h"
#include "org/spongycastle/asn1/ASN1Set.h"
#include "org/spongycastle/asn1/BEROctetString.h"
#include "org/spongycastle/asn1/DERSet.h"
#include "org/spongycastle/asn1/cms/CMSObjectIdentifiers.h"
#include "org/spongycastle/asn1/cms/ContentInfo.h"
#include "org/spongycastle/asn1/cms/SignedData.h"
#include "org/spongycastle/asn1/cms/SignerInfo.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/cms/CMSException.h"
#include "org/spongycastle/cms/CMSProcessableByteArray.h"
#include "org/spongycastle/cms/CMSSignedData.h"
#include "org/spongycastle/cms/CMSSignedDataGenerator.h"
#include "org/spongycastle/cms/CMSSignedGenerator.h"
#include "org/spongycastle/cms/CMSSignedHelper.h"
#include "org/spongycastle/cms/CMSTypedData.h"
#include "org/spongycastle/cms/CMSUtils.h"
#include "org/spongycastle/cms/SignerInfoGenerator.h"
#include "org/spongycastle/cms/SignerInformation.h"
#include "org/spongycastle/cms/SignerInformationStore.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/cms/CMSSignedDataGenerator must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCmsCMSSignedDataGenerator () {
 @public
  id<JavaUtilList> signerInfs_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCmsCMSSignedDataGenerator, signerInfs_, id<JavaUtilList>)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/CMSSignedDataGenerator.java"


#line 47
@implementation OrgSpongycastleCmsCMSSignedDataGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 55
- (instancetype)init {
  OrgSpongycastleCmsCMSSignedDataGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 64
- (OrgSpongycastleCmsCMSSignedData *)generateWithOrgSpongycastleCmsCMSTypedData:(id<OrgSpongycastleCmsCMSTypedData>)content {
  
#line 68
  return [self generateWithOrgSpongycastleCmsCMSTypedData:content withBoolean:false];
}


#line 78
- (OrgSpongycastleCmsCMSSignedData *)generateWithOrgSpongycastleCmsCMSTypedData:(id<OrgSpongycastleCmsCMSTypedData>)content
                                                                    withBoolean:(jboolean)encapsulate {
  
#line 84
  if (![((id<JavaUtilList>) nil_chk(signerInfs_)) isEmpty]) {
    
#line 86
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"this method can only be used with SignerInfoGenerator");
  }
  
#line 119
  OrgSpongycastleAsn1ASN1EncodableVector *digestAlgs = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  OrgSpongycastleAsn1ASN1EncodableVector *signerInfos = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 122
  [((id<JavaUtilMap>) nil_chk(digests_)) clear];
  
#line 127
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(_signers_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 129
    OrgSpongycastleCmsSignerInformation *signer = (OrgSpongycastleCmsSignerInformation *) cast_chk([it next], [OrgSpongycastleCmsSignerInformation class]);
    [digestAlgs addWithOrgSpongycastleAsn1ASN1Encodable:[((OrgSpongycastleCmsCMSSignedHelper *) nil_chk(JreLoadStatic(OrgSpongycastleCmsCMSSignedHelper, INSTANCE))) fixAlgIDWithOrgSpongycastleAsn1X509AlgorithmIdentifier:[((OrgSpongycastleCmsSignerInformation *) nil_chk(signer)) getDigestAlgorithmID]]];
    
#line 133
    [signerInfos addWithOrgSpongycastleAsn1ASN1Encodable:[signer toASN1Structure]];
  }
  
#line 139
  OrgSpongycastleAsn1ASN1ObjectIdentifier *contentTypeOID = [((id<OrgSpongycastleCmsCMSTypedData>) nil_chk(content)) getContentType];
  
#line 141
  OrgSpongycastleAsn1ASN1OctetString *octs = nil;
  
#line 143
  if ([content getContent] != nil) {
    
#line 145
    JavaIoByteArrayOutputStream *bOut = nil;
    
#line 147
    if (encapsulate) {
      
#line 149
      bOut = new_JavaIoByteArrayOutputStream_init();
    }
    
#line 152
    JavaIoOutputStream *cOut = OrgSpongycastleCmsCMSUtils_attachSignersToOutputStreamWithJavaUtilCollection_withJavaIoOutputStream_(signerGens_, bOut);
    
#line 155
    cOut = OrgSpongycastleCmsCMSUtils_getSafeOutputStreamWithJavaIoOutputStream_(cOut);
    
#line 157
    @try {
      
#line 159
      [content writeWithJavaIoOutputStream:cOut];
      
#line 161
      [((JavaIoOutputStream *) nil_chk(cOut)) close];
    }
    @catch (JavaIoIOException *e) {
      
#line 165
      @throw new_OrgSpongycastleCmsCMSException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"data processing exception: ", [e getMessage]), e);
    }
    
#line 168
    if (encapsulate) {
      
#line 170
      octs = new_OrgSpongycastleAsn1BEROctetString_initWithByteArray_([((JavaIoByteArrayOutputStream *) nil_chk(bOut)) toByteArray]);
    }
  }
  
#line 174
  for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(signerGens_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 176
    OrgSpongycastleCmsSignerInfoGenerator *sGen = (OrgSpongycastleCmsSignerInfoGenerator *) cast_chk([it next], [OrgSpongycastleCmsSignerInfoGenerator class]);
    OrgSpongycastleAsn1CmsSignerInfo *inf = [((OrgSpongycastleCmsSignerInfoGenerator *) nil_chk(sGen)) generateWithOrgSpongycastleAsn1ASN1ObjectIdentifier:contentTypeOID];
    
#line 179
    [digestAlgs addWithOrgSpongycastleAsn1ASN1Encodable:[((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(inf)) getDigestAlgorithm]];
    [signerInfos addWithOrgSpongycastleAsn1ASN1Encodable:inf];
    
#line 182
    IOSByteArray *calcDigest = [sGen getCalculatedDigest];
    
#line 184
    if (calcDigest != nil) {
      
#line 186
      (void) [((id<JavaUtilMap>) nil_chk(digests_)) putWithId:[((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([inf getDigestAlgorithm])) getAlgorithm])) getId] withId:calcDigest];
    }
  }
  
#line 190
  OrgSpongycastleAsn1ASN1Set *certificates = nil;
  
#line 192
  if ([((id<JavaUtilList>) nil_chk(certs_)) size] != 0) {
    
#line 194
    certificates = OrgSpongycastleCmsCMSUtils_createBerSetFromListWithJavaUtilList_(certs_);
  }
  
#line 197
  OrgSpongycastleAsn1ASN1Set *certrevlist = nil;
  
#line 199
  if ([((id<JavaUtilList>) nil_chk(crls_)) size] != 0) {
    
#line 201
    certrevlist = OrgSpongycastleCmsCMSUtils_createBerSetFromListWithJavaUtilList_(crls_);
  }
  
#line 204
  OrgSpongycastleAsn1CmsContentInfo *encInfo = new_OrgSpongycastleAsn1CmsContentInfo_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(contentTypeOID, octs);
  
#line 206
  OrgSpongycastleAsn1CmsSignedData *sd = new_OrgSpongycastleAsn1CmsSignedData_initWithOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsContentInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1ASN1Set_(new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1EncodableVector_(
#line 207
  digestAlgs),
#line 208
  encInfo,
#line 209
  certificates,
#line 210
  certrevlist, new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1EncodableVector_(
#line 211
  signerInfos));
  
#line 213
  OrgSpongycastleAsn1CmsContentInfo *contentInfo = new_OrgSpongycastleAsn1CmsContentInfo_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(JreLoadStatic(OrgSpongycastleAsn1CmsCMSObjectIdentifiers, signedData),
#line 214
  sd);
  
#line 216
  return new_OrgSpongycastleCmsCMSSignedData_initWithOrgSpongycastleCmsCMSProcessable_withOrgSpongycastleAsn1CmsContentInfo_(content, contentInfo);
}


#line 226
- (OrgSpongycastleCmsSignerInformationStore *)generateCounterSignersWithOrgSpongycastleCmsSignerInformation:(OrgSpongycastleCmsSignerInformation *)signer {
  
#line 229
  return [((OrgSpongycastleCmsCMSSignedData *) nil_chk([self generateWithOrgSpongycastleCmsCMSTypedData:new_OrgSpongycastleCmsCMSProcessableByteArray_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_(nil, [((OrgSpongycastleCmsSignerInformation *) nil_chk(signer)) getSignature]) withBoolean:false])) getSignerInfos];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsCMSSignedData;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsCMSSignedData;", 0x1, 0, 3, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsSignerInformationStore;", 0x1, 4, 5, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(generateWithOrgSpongycastleCmsCMSTypedData:);
  methods[2].selector = @selector(generateWithOrgSpongycastleCmsCMSTypedData:withBoolean:);
  methods[3].selector = @selector(generateCounterSignersWithOrgSpongycastleCmsSignerInformation:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "signerInfs_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "generate", "LOrgSpongycastleCmsCMSTypedData;", "LOrgSpongycastleCmsCMSException;", "LOrgSpongycastleCmsCMSTypedData;Z", "generateCounterSigners", "LOrgSpongycastleCmsSignerInformation;" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsCMSSignedDataGenerator = { "CMSSignedDataGenerator", "org.spongycastle.cms", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCmsCMSSignedDataGenerator;
}

@end


#line 55
void OrgSpongycastleCmsCMSSignedDataGenerator_init(OrgSpongycastleCmsCMSSignedDataGenerator *self) {
  OrgSpongycastleCmsCMSSignedGenerator_init(self);
  self->signerInfs_ = new_JavaUtilArrayList_init();
}


#line 55
OrgSpongycastleCmsCMSSignedDataGenerator *new_OrgSpongycastleCmsCMSSignedDataGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsCMSSignedDataGenerator, init)
}


#line 55
OrgSpongycastleCmsCMSSignedDataGenerator *create_OrgSpongycastleCmsCMSSignedDataGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsCMSSignedDataGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsCMSSignedDataGenerator)

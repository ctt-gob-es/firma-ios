//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jce/provider/X509CertParser.java
//

#include "J2ObjC_source.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/security/cert/Certificate.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1InputStream.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1Set.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/pkcs/BCSignedData.h"
#include "org/spongycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/spongycastle/asn1/x509/Certificate.h"
#include "org/spongycastle/jce/provider/BCPEMUtil.h"
#include "org/spongycastle/jce/provider/BCX509CertificateObject.h"
#include "org/spongycastle/jce/provider/X509CertParser.h"
#include "org/spongycastle/x509/X509StreamParserSpi.h"
#include "org/spongycastle/x509/util/StreamParsingException.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/jce/provider/X509CertParser must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleJceProviderX509CertParser () {
 @public
  OrgSpongycastleAsn1ASN1Set *sData_;
  jint sDataObjectCount_;
  JavaIoInputStream *currentStream_;
}

- (JavaSecurityCertCertificate *)readDERCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (JavaSecurityCertCertificate *)getCertificate;

- (JavaSecurityCertCertificate *)readPEMCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleJceProviderX509CertParser, sData_, OrgSpongycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJceProviderX509CertParser, currentStream_, JavaIoInputStream *)

inline OrgSpongycastleJceProviderBCPEMUtil *OrgSpongycastleJceProviderX509CertParser_get_PEM_PARSER(void);
static OrgSpongycastleJceProviderBCPEMUtil *OrgSpongycastleJceProviderX509CertParser_PEM_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJceProviderX509CertParser, PEM_PARSER, OrgSpongycastleJceProviderBCPEMUtil *)

__attribute__((unused)) static JavaSecurityCertCertificate *OrgSpongycastleJceProviderX509CertParser_readDERCertificateWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CertParser *self, JavaIoInputStream *inArg);

__attribute__((unused)) static JavaSecurityCertCertificate *OrgSpongycastleJceProviderX509CertParser_getCertificate(OrgSpongycastleJceProviderX509CertParser *self);

__attribute__((unused)) static JavaSecurityCertCertificate *OrgSpongycastleJceProviderX509CertParser_readPEMCertificateWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CertParser *self, JavaIoInputStream *inArg);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jce/provider/X509CertParser.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleJceProviderX509CertParser)


#line 25
@implementation OrgSpongycastleJceProviderX509CertParser

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 25
- (instancetype)init {
  OrgSpongycastleJceProviderX509CertParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 34
- (JavaSecurityCertCertificate *)readDERCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgSpongycastleJceProviderX509CertParser_readDERCertificateWithJavaIoInputStream_(self, inArg);
}


#line 57
- (JavaSecurityCertCertificate *)getCertificate {
  return OrgSpongycastleJceProviderX509CertParser_getCertificate(self);
}


#line 77
- (JavaSecurityCertCertificate *)readPEMCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgSpongycastleJceProviderX509CertParser_readPEMCertificateWithJavaIoInputStream_(self, inArg);
}


#line 92
- (void)engineInitWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  
#line 94
  currentStream_ = inArg;
  sData_ = nil;
  sDataObjectCount_ = 0;
  
#line 98
  if (![((JavaIoInputStream *) nil_chk(currentStream_)) markSupported]) {
    
#line 100
    currentStream_ = new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(currentStream_);
  }
}


#line 104
- (id)engineRead {
  
#line 107
  @try {
    
#line 109
    if (sData_ != nil) {
      
#line 111
      if (sDataObjectCount_ != [sData_ size]) {
        
#line 113
        return OrgSpongycastleJceProviderX509CertParser_getCertificate(self);
      }
      else {
        
#line 117
        sData_ = nil;
        sDataObjectCount_ = 0;
        return nil;
      }
    }
    
#line 123
    [((JavaIoInputStream *) nil_chk(currentStream_)) markWithInt:10];
    jint tag = [((JavaIoInputStream *) nil_chk(currentStream_)) read];
    
#line 126
    if (tag == -1) {
      
#line 128
      return nil;
    }
    
#line 131
    if (tag != (jint) 0x30) {
      
#line 133
      [((JavaIoInputStream *) nil_chk(currentStream_)) reset];
      return OrgSpongycastleJceProviderX509CertParser_readPEMCertificateWithJavaIoInputStream_(self, currentStream_);
    }
    else {
      
#line 138
      [((JavaIoInputStream *) nil_chk(currentStream_)) reset];
      return OrgSpongycastleJceProviderX509CertParser_readDERCertificateWithJavaIoInputStream_(self, currentStream_);
    }
  }
  @catch (JavaLangException *e) {
    
#line 144
    @throw new_OrgSpongycastleX509UtilStreamParsingException_initWithNSString_withJavaLangThrowable_([e description], e);
  }
}


#line 148
- (id<JavaUtilCollection>)engineReadAll {
  
#line 151
  JavaSecurityCertCertificate *cert;
  id<JavaUtilList> certs = new_JavaUtilArrayList_init();
  
#line 154
  while ((cert = (JavaSecurityCertCertificate *) cast_chk([self engineRead], [JavaSecurityCertCertificate class])) != nil) {
    
#line 156
    [certs addWithId:cert];
  }
  
#line 159
  return certs;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x2, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x2, 4, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readDERCertificateWithJavaIoInputStream:);
  methods[2].selector = @selector(getCertificate);
  methods[3].selector = @selector(readPEMCertificateWithJavaIoInputStream:);
  methods[4].selector = @selector(engineInitWithJavaIoInputStream:);
  methods[5].selector = @selector(engineRead);
  methods[6].selector = @selector(engineReadAll);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PEM_PARSER", "LOrgSpongycastleJceProviderBCPEMUtil;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "sData_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sDataObjectCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "readDERCertificate", "LJavaIoInputStream;", "LJavaIoIOException;LJavaSecurityCertCertificateParsingException;", "LJavaSecurityCertCertificateParsingException;", "readPEMCertificate", "engineInit", "LOrgSpongycastleX509UtilStreamParsingException;", &OrgSpongycastleJceProviderX509CertParser_PEM_PARSER };
  static const J2ObjcClassInfo _OrgSpongycastleJceProviderX509CertParser = { "X509CertParser", "org.spongycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJceProviderX509CertParser;
}

+ (void)initialize {
  if (self == [OrgSpongycastleJceProviderX509CertParser class]) {
    OrgSpongycastleJceProviderX509CertParser_PEM_PARSER = new_OrgSpongycastleJceProviderBCPEMUtil_initWithNSString_(
#line 28
    @"CERTIFICATE");
    J2OBJC_SET_INITIALIZED(OrgSpongycastleJceProviderX509CertParser)
  }
}

@end


#line 25
void OrgSpongycastleJceProviderX509CertParser_init(OrgSpongycastleJceProviderX509CertParser *self) {
  OrgSpongycastleX509X509StreamParserSpi_init(self);
  self->sData_ =
#line 30
  nil;
  self->sDataObjectCount_ = 0;
  self->currentStream_ = nil;
}


#line 25
OrgSpongycastleJceProviderX509CertParser *new_OrgSpongycastleJceProviderX509CertParser_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleJceProviderX509CertParser, init)
}


#line 25
OrgSpongycastleJceProviderX509CertParser *create_OrgSpongycastleJceProviderX509CertParser_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJceProviderX509CertParser, init)
}


#line 34
JavaSecurityCertCertificate *OrgSpongycastleJceProviderX509CertParser_readDERCertificateWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CertParser *self, JavaIoInputStream *inArg) {
  
#line 38
  OrgSpongycastleAsn1ASN1InputStream *dIn = new_OrgSpongycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(inArg);
  OrgSpongycastleAsn1ASN1Sequence *seq = (OrgSpongycastleAsn1ASN1Sequence *) cast_chk([dIn readObject], [OrgSpongycastleAsn1ASN1Sequence class]);
  
#line 41
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 1 &&
#line 42
  [[seq getObjectAtWithInt:0] isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 44
    if ([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:0])) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, signedData)]) {
      
#line 46
      self->sData_ = [new_OrgSpongycastleAsn1PkcsBCSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(
#line 47
      (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:1], [OrgSpongycastleAsn1ASN1TaggedObject class]), true)) getCertificates];
      
#line 49
      return OrgSpongycastleJceProviderX509CertParser_getCertificate(self);
    }
  }
  
#line 53
  return new_OrgSpongycastleJceProviderBCX509CertificateObject_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(
#line 54
  seq));
}


#line 57
JavaSecurityCertCertificate *OrgSpongycastleJceProviderX509CertParser_getCertificate(OrgSpongycastleJceProviderX509CertParser *self) {
  
#line 60
  if (self->sData_ != nil) {
    
#line 62
    while (self->sDataObjectCount_ < [((OrgSpongycastleAsn1ASN1Set *) nil_chk(self->sData_)) size]) {
      
#line 64
      id obj = [((OrgSpongycastleAsn1ASN1Set *) nil_chk(self->sData_)) getObjectAtWithInt:self->sDataObjectCount_++];
      
#line 66
      if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]]) {
        
#line 68
        return new_OrgSpongycastleJceProviderBCX509CertificateObject_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(
#line 69
        obj));
      }
    }
  }
  
#line 74
  return nil;
}


#line 77
JavaSecurityCertCertificate *OrgSpongycastleJceProviderX509CertParser_readPEMCertificateWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CertParser *self, JavaIoInputStream *inArg) {
  
#line 81
  OrgSpongycastleAsn1ASN1Sequence *seq = [((OrgSpongycastleJceProviderBCPEMUtil *) nil_chk(OrgSpongycastleJceProviderX509CertParser_PEM_PARSER)) readPEMObjectWithJavaIoInputStream:inArg];
  
#line 83
  if (seq != nil) {
    
#line 85
    return new_OrgSpongycastleJceProviderBCX509CertificateObject_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(
#line 86
    seq));
  }
  
#line 89
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJceProviderX509CertParser)

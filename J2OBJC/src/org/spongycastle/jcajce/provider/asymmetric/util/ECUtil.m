//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/util/ECUtil.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/interfaces/ECPrivateKey.h"
#include "java/security/interfaces/ECPublicKey.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/util/Enumeration.h"
#include "java/util/Map.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/anssi/ANSSINamedCurves.h"
#include "org/spongycastle/asn1/cryptopro/ECGOST3410NamedCurves.h"
#include "org/spongycastle/asn1/gm/GMNamedCurves.h"
#include "org/spongycastle/asn1/nist/NISTNamedCurves.h"
#include "org/spongycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/spongycastle/asn1/sec/SECNamedCurves.h"
#include "org/spongycastle/asn1/teletrust/TeleTrusTNamedCurves.h"
#include "org/spongycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/spongycastle/asn1/x9/ECNamedCurveTable.h"
#include "org/spongycastle/asn1/x9/X962NamedCurves.h"
#include "org/spongycastle/asn1/x9/X962Parameters.h"
#include "org/spongycastle/asn1/x9/X9ECParameters.h"
#include "org/spongycastle/crypto/ec/CustomNamedCurves.h"
#include "org/spongycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/spongycastle/crypto/params/ECDomainParameters.h"
#include "org/spongycastle/crypto/params/ECNamedDomainParameters.h"
#include "org/spongycastle/crypto/params/ECPrivateKeyParameters.h"
#include "org/spongycastle/crypto/params/ECPublicKeyParameters.h"
#include "org/spongycastle/jcajce/provider/asymmetric/util/EC5Util.h"
#include "org/spongycastle/jcajce/provider/asymmetric/util/ECUtil.h"
#include "org/spongycastle/jcajce/provider/config/ProviderConfiguration.h"
#include "org/spongycastle/jce/interfaces/ECPrivateKey.h"
#include "org/spongycastle/jce/interfaces/ECPublicKey.h"
#include "org/spongycastle/jce/provider/BouncyCastleProvider.h"
#include "org/spongycastle/jce/spec/ECNamedCurveParameterSpec.h"
#include "org/spongycastle/jce/spec/ECParameterSpec.h"
#include "org/spongycastle/math/ec/ECCurve.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/ECPoint.h"
#include "org/spongycastle/util/Arrays.h"
#include "org/spongycastle/util/Fingerprint.h"
#include "org/spongycastle/util/Strings.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/jcajce/provider/asymmetric/util/ECUtil must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleJcajceProviderAsymmetricUtilECUtil ()

+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)lookupOidByNameWithNSString:(NSString *)name;

+ (OrgSpongycastleMathEcECPoint *)calculateQWithJavaMathBigInteger:(JavaMathBigInteger *)d
                         withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec;

@end

__attribute__((unused)) static OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_lookupOidByNameWithNSString_(NSString *name);

__attribute__((unused)) static OrgSpongycastleMathEcECPoint *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_calculateQWithJavaMathBigInteger_withOrgSpongycastleJceSpecECParameterSpec_(JavaMathBigInteger *d, OrgSpongycastleJceSpecECParameterSpec *spec);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/util/ECUtil.java"


#line 45
@implementation OrgSpongycastleJcajceProviderAsymmetricUtilECUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 45
- (instancetype)init {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 54
+ (IOSIntArray *)convertMidTermsWithIntArray:(IOSIntArray *)k {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_convertMidTermsWithIntArray_(k);
}


#line 117
+ (OrgSpongycastleCryptoParamsECDomainParameters *)getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                         withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)params {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleJceSpecECParameterSpec_(configuration, params);
}


#line 144
+ (OrgSpongycastleCryptoParamsECDomainParameters *)getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                           withOrgSpongycastleAsn1X9X962Parameters:(OrgSpongycastleAsn1X9X962Parameters *)params {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleAsn1X9X962Parameters_(configuration, params);
}


#line 178
+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)generatePublicKeyParameterWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePublicKeyParameterWithJavaSecurityPublicKey_(key);
}


#line 227
+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)generatePrivateKeyParameterWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(key);
}


#line 281
+ (jint)getOrderBitLengthWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)order
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)privateValue {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getOrderBitLengthWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withJavaMathBigInteger_withJavaMathBigInteger_(configuration, order, privateValue);
}


#line 300
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getNamedCurveOidWithNSString:(NSString *)curveName {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveOidWithNSString_(curveName);
}


#line 331
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)lookupOidByNameWithNSString:(NSString *)name {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_lookupOidByNameWithNSString_(name);
}


#line 363
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getNamedCurveOidWithOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)ecParameterSpec {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveOidWithOrgSpongycastleJceSpecECParameterSpec_(ecParameterSpec);
}


#line 384
+ (OrgSpongycastleAsn1X9X9ECParameters *)getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 417
+ (OrgSpongycastleAsn1X9X9ECParameters *)getNamedCurveByNameWithNSString:(NSString *)curveName {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByNameWithNSString_(curveName);
}


#line 450
+ (NSString *)getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 483
+ (NSString *)privateKeyToStringWithNSString:(NSString *)algorithm
                      withJavaMathBigInteger:(JavaMathBigInteger *)d
   withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_privateKeyToStringWithNSString_withJavaMathBigInteger_withOrgSpongycastleJceSpecECParameterSpec_(algorithm, d, spec);
}


#line 498
+ (OrgSpongycastleMathEcECPoint *)calculateQWithJavaMathBigInteger:(JavaMathBigInteger *)d
                         withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_calculateQWithJavaMathBigInteger_withOrgSpongycastleJceSpecECParameterSpec_(d, spec);
}

+ (NSString *)publicKeyToStringWithNSString:(NSString *)algorithm
           withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)q
  withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_publicKeyToStringWithNSString_withOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(algorithm, q, spec);
}


#line 516
+ (NSString *)generateKeyFingerprintWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)publicPoint
                           withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec {
  return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generateKeyFingerprintWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(publicPoint, spec);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsECDomainParameters;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsECDomainParameters;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 5, 6, 7, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 8, 9, 7, -1, -1, -1 },
    { NULL, "I", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0xa, 14, 13, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x9, 12, 15, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X9X9ECParameters;", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X9X9ECParameters;", 0x9, 18, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 19, 17, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 20, 21, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0xa, 22, 23, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 24, 25, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 26, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertMidTermsWithIntArray:);
  methods[2].selector = @selector(getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:withOrgSpongycastleJceSpecECParameterSpec:);
  methods[3].selector = @selector(getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:withOrgSpongycastleAsn1X9X962Parameters:);
  methods[4].selector = @selector(generatePublicKeyParameterWithJavaSecurityPublicKey:);
  methods[5].selector = @selector(generatePrivateKeyParameterWithJavaSecurityPrivateKey:);
  methods[6].selector = @selector(getOrderBitLengthWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[7].selector = @selector(getNamedCurveOidWithNSString:);
  methods[8].selector = @selector(lookupOidByNameWithNSString:);
  methods[9].selector = @selector(getNamedCurveOidWithOrgSpongycastleJceSpecECParameterSpec:);
  methods[10].selector = @selector(getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[11].selector = @selector(getNamedCurveByNameWithNSString:);
  methods[12].selector = @selector(getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[13].selector = @selector(privateKeyToStringWithNSString:withJavaMathBigInteger:withOrgSpongycastleJceSpecECParameterSpec:);
  methods[14].selector = @selector(calculateQWithJavaMathBigInteger:withOrgSpongycastleJceSpecECParameterSpec:);
  methods[15].selector = @selector(publicKeyToStringWithNSString:withOrgSpongycastleMathEcECPoint:withOrgSpongycastleJceSpecECParameterSpec:);
  methods[16].selector = @selector(generateKeyFingerprintWithOrgSpongycastleMathEcECPoint:withOrgSpongycastleJceSpecECParameterSpec:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertMidTerms", "[I", "getDomainParameters", "LOrgSpongycastleJcajceProviderConfigProviderConfiguration;LOrgSpongycastleJceSpecECParameterSpec;", "LOrgSpongycastleJcajceProviderConfigProviderConfiguration;LOrgSpongycastleAsn1X9X962Parameters;", "generatePublicKeyParameter", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "generatePrivateKeyParameter", "LJavaSecurityPrivateKey;", "getOrderBitLength", "LOrgSpongycastleJcajceProviderConfigProviderConfiguration;LJavaMathBigInteger;LJavaMathBigInteger;", "getNamedCurveOid", "LNSString;", "lookupOidByName", "LOrgSpongycastleJceSpecECParameterSpec;", "getNamedCurveByOid", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", "getNamedCurveByName", "getCurveName", "privateKeyToString", "LNSString;LJavaMathBigInteger;LOrgSpongycastleJceSpecECParameterSpec;", "calculateQ", "LJavaMathBigInteger;LOrgSpongycastleJceSpecECParameterSpec;", "publicKeyToString", "LNSString;LOrgSpongycastleMathEcECPoint;LOrgSpongycastleJceSpecECParameterSpec;", "generateKeyFingerprint", "LOrgSpongycastleMathEcECPoint;LOrgSpongycastleJceSpecECParameterSpec;" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajceProviderAsymmetricUtilECUtil = { "ECUtil", "org.spongycastle.jcajce.provider.asymmetric.util", ptrTable, methods, NULL, 7, 0x1, 17, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJcajceProviderAsymmetricUtilECUtil;
}

@end


#line 45
void OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_init(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil *self) {
  NSObject_init(self);
}


#line 45
OrgSpongycastleJcajceProviderAsymmetricUtilECUtil *new_OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil, init)
}


#line 45
OrgSpongycastleJcajceProviderAsymmetricUtilECUtil *create_OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil, init)
}


#line 54
IOSIntArray *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_convertMidTermsWithIntArray_(IOSIntArray *k) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 57
  IOSIntArray *res = [IOSIntArray newArrayWithLength:3];
  
#line 59
  if (((IOSIntArray *) nil_chk(k))->size_ == 1) {
    
#line 61
    *IOSIntArray_GetRef(res, 0) = IOSIntArray_Get(k, 0);
  }
  else {
    
#line 65
    if (k->size_ != 3) {
      
#line 67
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Only Trinomials and pentanomials supported");
    }
    
#line 70
    if (IOSIntArray_Get(k, 0) < IOSIntArray_Get(k, 1) && IOSIntArray_Get(k, 0) < IOSIntArray_Get(k, 2)) {
      
#line 72
      *IOSIntArray_GetRef(res, 0) = IOSIntArray_Get(k, 0);
      if (IOSIntArray_Get(k, 1) < IOSIntArray_Get(k, 2)) {
        
#line 75
        *IOSIntArray_GetRef(res, 1) = IOSIntArray_Get(k, 1);
        *IOSIntArray_GetRef(res, 2) = IOSIntArray_Get(k, 2);
      }
      else {
        
#line 80
        *IOSIntArray_GetRef(res, 1) = IOSIntArray_Get(k, 2);
        *IOSIntArray_GetRef(res, 2) = IOSIntArray_Get(k, 1);
      }
    }
    else if (IOSIntArray_Get(k, 1) < IOSIntArray_Get(k, 2)) {
      
#line 86
      *IOSIntArray_GetRef(res, 0) = IOSIntArray_Get(k, 1);
      if (IOSIntArray_Get(k, 0) < IOSIntArray_Get(k, 2)) {
        
#line 89
        *IOSIntArray_GetRef(res, 1) = IOSIntArray_Get(k, 0);
        *IOSIntArray_GetRef(res, 2) = IOSIntArray_Get(k, 2);
      }
      else {
        
#line 94
        *IOSIntArray_GetRef(res, 1) = IOSIntArray_Get(k, 2);
        *IOSIntArray_GetRef(res, 2) = IOSIntArray_Get(k, 0);
      }
    }
    else {
      
#line 100
      *IOSIntArray_GetRef(res, 0) = IOSIntArray_Get(k, 2);
      if (IOSIntArray_Get(k, 0) < IOSIntArray_Get(k, 1)) {
        
#line 103
        *IOSIntArray_GetRef(res, 1) = IOSIntArray_Get(k, 0);
        *IOSIntArray_GetRef(res, 2) = IOSIntArray_Get(k, 1);
      }
      else {
        
#line 108
        *IOSIntArray_GetRef(res, 1) = IOSIntArray_Get(k, 1);
        *IOSIntArray_GetRef(res, 2) = IOSIntArray_Get(k, 0);
      }
    }
  }
  
#line 114
  return res;
}


#line 117
OrgSpongycastleCryptoParamsECDomainParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleJceSpecECParameterSpec_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, OrgSpongycastleJceSpecECParameterSpec *params) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 121
  OrgSpongycastleCryptoParamsECDomainParameters *domainParameters;
  
#line 123
  if ([params isKindOfClass:[OrgSpongycastleJceSpecECNamedCurveParameterSpec class]]) {
    
#line 125
    OrgSpongycastleJceSpecECNamedCurveParameterSpec *nParams = (OrgSpongycastleJceSpecECNamedCurveParameterSpec *) params;
    OrgSpongycastleAsn1ASN1ObjectIdentifier *nameOid = OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveOidWithNSString_([((OrgSpongycastleJceSpecECNamedCurveParameterSpec *) nil_chk(nParams)) getName]);
    
#line 128
    domainParameters = new_OrgSpongycastleCryptoParamsECNamedDomainParameters_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(nameOid, [nParams getCurve], [nParams getG], [nParams getN], [nParams getH], [nParams getSeed]);
  }
  else if (params == nil) {
    
#line 132
    OrgSpongycastleJceSpecECParameterSpec *iSpec = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getEcImplicitlyCa];
    
#line 134
    domainParameters = new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(iSpec)) getCurve], [iSpec getG], [iSpec getN], [iSpec getH], [iSpec getSeed]);
  }
  else {
    
#line 138
    domainParameters = new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([params getCurve], [params getG], [params getN], [params getH], [params getSeed]);
  }
  
#line 141
  return domainParameters;
}


#line 144
OrgSpongycastleCryptoParamsECDomainParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleAsn1X9X962Parameters_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, OrgSpongycastleAsn1X9X962Parameters *params) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 148
  OrgSpongycastleCryptoParamsECDomainParameters *domainParameters;
  
#line 150
  if ([((OrgSpongycastleAsn1X9X962Parameters *) nil_chk(params)) isNamedCurve]) {
    
#line 152
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([params getParameters]);
    OrgSpongycastleAsn1X9X9ECParameters *ecP = OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    if (ecP == nil) {
      
#line 156
      id<JavaUtilMap> extraCurves = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getAdditionalECParameters];
      
#line 158
      ecP = (OrgSpongycastleAsn1X9X9ECParameters *) cast_chk([((id<JavaUtilMap>) nil_chk(extraCurves)) getWithId:oid], [OrgSpongycastleAsn1X9X9ECParameters class]);
    }
    domainParameters = new_OrgSpongycastleCryptoParamsECNamedDomainParameters_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(oid, [((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve], [ecP getG], [ecP getN], [ecP getH], [ecP getSeed]);
  }
  else if ([params isImplicitlyCA]) {
    
#line 164
    OrgSpongycastleJceSpecECParameterSpec *iSpec = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getEcImplicitlyCa];
    
#line 166
    domainParameters = new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(iSpec)) getCurve], [iSpec getG], [iSpec getN], [iSpec getH], [iSpec getSeed]);
  }
  else {
    
#line 170
    OrgSpongycastleAsn1X9X9ECParameters *ecP = OrgSpongycastleAsn1X9X9ECParameters_getInstanceWithId_([params getParameters]);
    
#line 172
    domainParameters = new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve], [ecP getG], [ecP getN], [ecP getH], [ecP getSeed]);
  }
  
#line 175
  return domainParameters;
}


#line 178
OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePublicKeyParameterWithJavaSecurityPublicKey_(id<JavaSecurityPublicKey> key) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 182
  if ([OrgSpongycastleJceInterfacesECPublicKey_class_() isInstance:key]) {
    
#line 184
    id<OrgSpongycastleJceInterfacesECPublicKey> k = (id<OrgSpongycastleJceInterfacesECPublicKey>) cast_check(key, OrgSpongycastleJceInterfacesECPublicKey_class_());
    OrgSpongycastleJceSpecECParameterSpec *s = [((id<OrgSpongycastleJceInterfacesECPublicKey>) nil_chk(k)) getParameters];
    
#line 187
    return new_OrgSpongycastleCryptoParamsECPublicKeyParameters_initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleCryptoParamsECDomainParameters_(
#line 188
    [k getQ], new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(
#line 189
    [((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(s)) getCurve], [s getG], [s getN], [s getH], [s getSeed]));
  }
  else if ([JavaSecurityInterfacesECPublicKey_class_() isInstance:key]) {
    
#line 193
    id<JavaSecurityInterfacesECPublicKey> pubKey = (id<JavaSecurityInterfacesECPublicKey>) cast_check(key, JavaSecurityInterfacesECPublicKey_class_());
    OrgSpongycastleJceSpecECParameterSpec *s = OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_([((id<JavaSecurityInterfacesECPublicKey>) nil_chk(pubKey)) getParams], false);
    return new_OrgSpongycastleCryptoParamsECPublicKeyParameters_initWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleCryptoParamsECDomainParameters_(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(
#line 196
    [pubKey getParams], [pubKey getW], false), new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(
#line 197
    [((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(s)) getCurve], [s getG], [s getN], [s getH], [s getSeed]));
  }
  else {
    
#line 202
    @try {
      
#line 204
      IOSByteArray *bytes = [((id<JavaSecurityPublicKey>) nil_chk(key)) getEncoded];
      
#line 206
      if (bytes == nil) {
        
#line 208
        @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"no encoding for EC public key");
      }
      
#line 211
      id<JavaSecurityPublicKey> publicKey = OrgSpongycastleJceProviderBouncyCastleProvider_getPublicKeyWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(bytes));
      
#line 213
      if ([JavaSecurityInterfacesECPublicKey_class_() isInstance:publicKey]) {
        
#line 215
        return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePublicKeyParameterWithJavaSecurityPublicKey_(publicKey);
      }
    }
    @catch (JavaLangException *e) {
      
#line 220
      @throw new_JavaSecurityInvalidKeyException_initWithNSString_(JreStrcat("$$", @"cannot identify EC public key: ", [e description]));
    }
  }
  
#line 224
  @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"cannot identify EC public key.");
}


#line 227
OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(id<JavaSecurityPrivateKey> key) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 231
  if ([OrgSpongycastleJceInterfacesECPrivateKey_class_() isInstance:key]) {
    
#line 233
    id<OrgSpongycastleJceInterfacesECPrivateKey> k = (id<OrgSpongycastleJceInterfacesECPrivateKey>) cast_check(key, OrgSpongycastleJceInterfacesECPrivateKey_class_());
    OrgSpongycastleJceSpecECParameterSpec *s = [((id<OrgSpongycastleJceInterfacesECPrivateKey>) nil_chk(k)) getParameters];
    
#line 236
    if (s == nil) {
      
#line 238
      s = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(JreLoadStatic(OrgSpongycastleJceProviderBouncyCastleProvider, CONFIGURATION))) getEcImplicitlyCa];
    }
    
#line 241
    return new_OrgSpongycastleCryptoParamsECPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsECDomainParameters_(
#line 242
    [k getD], new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(
#line 243
    [((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(s)) getCurve], [s getG], [s getN], [s getH], [s getSeed]));
  }
  else if ([JavaSecurityInterfacesECPrivateKey_class_() isInstance:key]) {
    
#line 247
    id<JavaSecurityInterfacesECPrivateKey> privKey = (id<JavaSecurityInterfacesECPrivateKey>) cast_check(key, JavaSecurityInterfacesECPrivateKey_class_());
    OrgSpongycastleJceSpecECParameterSpec *s = OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_([((id<JavaSecurityInterfacesECPrivateKey>) nil_chk(privKey)) getParams], false);
    return new_OrgSpongycastleCryptoParamsECPrivateKeyParameters_initWithJavaMathBigInteger_withOrgSpongycastleCryptoParamsECDomainParameters_(
#line 250
    [privKey getS], new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(
#line 251
    [((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(s)) getCurve], [s getG], [s getN], [s getH], [s getSeed]));
  }
  else {
    
#line 256
    @try {
      
#line 258
      IOSByteArray *bytes = [((id<JavaSecurityPrivateKey>) nil_chk(key)) getEncoded];
      
#line 260
      if (bytes == nil) {
        
#line 262
        @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"no encoding for EC private key");
      }
      
#line 265
      id<JavaSecurityPrivateKey> privateKey = OrgSpongycastleJceProviderBouncyCastleProvider_getPrivateKeyWithOrgSpongycastleAsn1PkcsPrivateKeyInfo_(OrgSpongycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(bytes));
      
#line 267
      if ([JavaSecurityInterfacesECPrivateKey_class_() isInstance:privateKey]) {
        
#line 269
        return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(privateKey);
      }
    }
    @catch (JavaLangException *e) {
      
#line 274
      @throw new_JavaSecurityInvalidKeyException_initWithNSString_(JreStrcat("$$", @"cannot identify EC private key: ", [e description]));
    }
  }
  
#line 278
  @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"can't identify EC private key.");
}


#line 281
jint OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getOrderBitLengthWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, JavaMathBigInteger *order, JavaMathBigInteger *privateValue) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  if (order == nil) {
    
#line 285
    OrgSpongycastleJceSpecECParameterSpec *implicitCA = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getEcImplicitlyCa];
    
#line 287
    if (implicitCA == nil) {
      
#line 289
      return [((JavaMathBigInteger *) nil_chk(privateValue)) bitLength];
    }
    
#line 292
    return [((JavaMathBigInteger *) nil_chk([implicitCA getN])) bitLength];
  }
  else {
    
#line 296
    return [order bitLength];
  }
}


#line 300
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveOidWithNSString_(NSString *curveName) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 303
  NSString *name;
  
#line 305
  if ([((NSString *) nil_chk(curveName)) java_indexOf:' '] > 0) {
    
#line 307
    name = [curveName java_substring:[curveName java_indexOf:' '] + 1];
  }
  else {
    
#line 311
    name = curveName;
  }
  
#line 314
  @try {
    
#line 316
    if ([((NSString *) nil_chk(name)) charAtWithInt:0] >= '0' && [name charAtWithInt:0] <= '2') {
      
#line 318
      return new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(name);
    }
    else {
      
#line 322
      return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_lookupOidByNameWithNSString_(name);
    }
  }
  @catch (JavaLangIllegalArgumentException *ex) {
    
#line 327
    return OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_lookupOidByNameWithNSString_(name);
  }
}


#line 331
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_lookupOidByNameWithNSString_(NSString *name) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = OrgSpongycastleAsn1X9X962NamedCurves_getOIDWithNSString_(name);
  
#line 335
  if (oid == nil) {
    
#line 337
    oid = OrgSpongycastleAsn1SecSECNamedCurves_getOIDWithNSString_(name);
    if (oid == nil) {
      
#line 340
      oid = OrgSpongycastleAsn1NistNISTNamedCurves_getOIDWithNSString_(name);
    }
    if (oid == nil) {
      
#line 344
      oid = OrgSpongycastleAsn1TeletrustTeleTrusTNamedCurves_getOIDWithNSString_(name);
    }
    if (oid == nil) {
      
#line 348
      oid = OrgSpongycastleAsn1CryptoproECGOST3410NamedCurves_getOIDWithNSString_(name);
    }
    if (oid == nil) {
      
#line 352
      oid = OrgSpongycastleAsn1AnssiANSSINamedCurves_getOIDWithNSString_(name);
    }
    if (oid == nil) {
      
#line 356
      oid = OrgSpongycastleAsn1GmGMNamedCurves_getOIDWithNSString_(name);
    }
  }
  
#line 360
  return oid;
}


#line 363
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveOidWithOrgSpongycastleJceSpecECParameterSpec_(OrgSpongycastleJceSpecECParameterSpec *ecParameterSpec) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 366
  for (id<JavaUtilEnumeration> names = OrgSpongycastleAsn1X9ECNamedCurveTable_getNames(); [((id<JavaUtilEnumeration>) nil_chk(names)) hasMoreElements]; ) {
    
#line 368
    NSString *name = (NSString *) cast_chk([names nextElement], [NSString class]);
    
#line 370
    OrgSpongycastleAsn1X9X9ECParameters *params = OrgSpongycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(name);
    
#line 372
    if ([((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(params)) getN])) isEqual:[((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(ecParameterSpec)) getN]] &&
#line 373
    [((JavaMathBigInteger *) nil_chk([params getH])) isEqual:[ecParameterSpec getH]] &&
#line 374
    [((OrgSpongycastleMathEcECCurve *) nil_chk([params getCurve])) equalsWithOrgSpongycastleMathEcECCurve:[ecParameterSpec getCurve]] &&
#line 375
    [((OrgSpongycastleMathEcECPoint *) nil_chk([params getG])) equalsWithOrgSpongycastleMathEcECPoint:[ecParameterSpec getG]]) {
      
#line 377
      return OrgSpongycastleAsn1X9ECNamedCurveTable_getOIDWithNSString_(name);
    }
  }
  
#line 381
  return nil;
}


#line 384
OrgSpongycastleAsn1X9X9ECParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 387
  OrgSpongycastleAsn1X9X9ECParameters *params = OrgSpongycastleCryptoEcCustomNamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
  
#line 389
  if (params == nil) {
    
#line 391
    params = OrgSpongycastleAsn1X9X962NamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    if (params == nil) {
      
#line 394
      params = OrgSpongycastleAsn1SecSECNamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (params == nil) {
      
#line 398
      params = OrgSpongycastleAsn1NistNISTNamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (params == nil) {
      
#line 402
      params = OrgSpongycastleAsn1TeletrustTeleTrusTNamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (params == nil) {
      
#line 406
      params = OrgSpongycastleAsn1AnssiANSSINamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (params == nil) {
      
#line 410
      params = OrgSpongycastleAsn1GmGMNamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
  }
  
#line 414
  return params;
}


#line 417
OrgSpongycastleAsn1X9X9ECParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByNameWithNSString_(NSString *curveName) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 420
  OrgSpongycastleAsn1X9X9ECParameters *params = OrgSpongycastleCryptoEcCustomNamedCurves_getByNameWithNSString_(curveName);
  
#line 422
  if (params == nil) {
    
#line 424
    params = OrgSpongycastleAsn1X9X962NamedCurves_getByNameWithNSString_(curveName);
    if (params == nil) {
      
#line 427
      params = OrgSpongycastleAsn1SecSECNamedCurves_getByNameWithNSString_(curveName);
    }
    if (params == nil) {
      
#line 431
      params = OrgSpongycastleAsn1NistNISTNamedCurves_getByNameWithNSString_(curveName);
    }
    if (params == nil) {
      
#line 435
      params = OrgSpongycastleAsn1TeletrustTeleTrusTNamedCurves_getByNameWithNSString_(curveName);
    }
    if (params == nil) {
      
#line 439
      params = OrgSpongycastleAsn1AnssiANSSINamedCurves_getByNameWithNSString_(curveName);
    }
    if (params == nil) {
      
#line 443
      params = OrgSpongycastleAsn1GmGMNamedCurves_getByNameWithNSString_(curveName);
    }
  }
  
#line 447
  return params;
}


#line 450
NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  
#line 453
  NSString *name = OrgSpongycastleAsn1X9X962NamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
  
#line 455
  if (name == nil) {
    
#line 457
    name = OrgSpongycastleAsn1SecSECNamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    if (name == nil) {
      
#line 460
      name = OrgSpongycastleAsn1NistNISTNamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (name == nil) {
      
#line 464
      name = OrgSpongycastleAsn1TeletrustTeleTrusTNamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (name == nil) {
      
#line 468
      name = OrgSpongycastleAsn1CryptoproECGOST3410NamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (name == nil) {
      
#line 472
      name = OrgSpongycastleAsn1AnssiANSSINamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
    if (name == nil) {
      
#line 476
      name = OrgSpongycastleAsn1GmGMNamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    }
  }
  
#line 480
  return name;
}


#line 483
NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_privateKeyToStringWithNSString_withJavaMathBigInteger_withOrgSpongycastleJceSpecECParameterSpec_(NSString *algorithm, JavaMathBigInteger *d, OrgSpongycastleJceSpecECParameterSpec *spec) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = OrgSpongycastleUtilStrings_lineSeparator();
  
#line 488
  OrgSpongycastleMathEcECPoint *q = OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_calculateQWithJavaMathBigInteger_withOrgSpongycastleJceSpecECParameterSpec_(d, spec);
  
#line 490
  (void) [buf appendWithNSString:algorithm];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" Private Key ["])) appendWithNSString:OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generateKeyFingerprintWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(q, spec)])) appendWithNSString:@"]"])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"            X: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(q)) getAffineXCoord])) toBigInteger])) toStringWithInt:16]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"            Y: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([q getAffineYCoord])) toBigInteger])) toStringWithInt:16]])) appendWithNSString:nl];
  
#line 495
  return [buf description];
}


#line 498
OrgSpongycastleMathEcECPoint *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_calculateQWithJavaMathBigInteger_withOrgSpongycastleJceSpecECParameterSpec_(JavaMathBigInteger *d, OrgSpongycastleJceSpecECParameterSpec *spec) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  return [((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(spec)) getG])) multiplyWithJavaMathBigInteger:d])) normalize];
}

NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_publicKeyToStringWithNSString_withOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(NSString *algorithm, OrgSpongycastleMathEcECPoint *q, OrgSpongycastleJceSpecECParameterSpec *spec) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = OrgSpongycastleUtilStrings_lineSeparator();
  
#line 508
  (void) [buf appendWithNSString:algorithm];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" Public Key ["])) appendWithNSString:OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generateKeyFingerprintWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(q, spec)])) appendWithNSString:@"]"])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"            X: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk(q)) getAffineXCoord])) toBigInteger])) toStringWithInt:16]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"            Y: "])) appendWithNSString:[((JavaMathBigInteger *) nil_chk([((OrgSpongycastleMathEcECFieldElement *) nil_chk([q getAffineYCoord])) toBigInteger])) toStringWithInt:16]])) appendWithNSString:nl];
  
#line 513
  return [buf description];
}


#line 516
NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generateKeyFingerprintWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(OrgSpongycastleMathEcECPoint *publicPoint, OrgSpongycastleJceSpecECParameterSpec *spec) {
  OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_initialize();
  OrgSpongycastleMathEcECCurve *curve = [((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(spec)) getCurve];
  OrgSpongycastleMathEcECPoint *g = [spec getG];
  
#line 521
  if (curve != nil) {
    
#line 523
    return [new_OrgSpongycastleUtilFingerprint_initWithByteArray_(OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_([((OrgSpongycastleMathEcECPoint *) nil_chk(publicPoint)) getEncodedWithBoolean:false], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getA])) getEncoded], [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) getEncoded], [((OrgSpongycastleMathEcECPoint *) nil_chk(g)) getEncodedWithBoolean:false])) description];
  }
  
#line 526
  return [new_OrgSpongycastleUtilFingerprint_initWithByteArray_([((OrgSpongycastleMathEcECPoint *) nil_chk(publicPoint)) getEncodedWithBoolean:false]) description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil)

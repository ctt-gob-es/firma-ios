//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/PKIXCertPath.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath")
#ifdef RESTRICT_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath
#define INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath 0
#else
#define INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath 1
#endif
#undef RESTRICT_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath

#if !defined (OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_) && (INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath || defined(INCLUDE_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath))
#define OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_

#define RESTRICT_JavaSecurityCertCertPath 1
#define INCLUDE_JavaSecurityCertCertPath 1
#include "java/security/cert/CertPath.h"

@class IOSByteArray;
@class JavaIoInputStream;
@protocol JavaUtilIterator;
@protocol JavaUtilList;

/*!
 @brief CertPath implementation for X.509 certificates.
 <br>
 */
@interface OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath : JavaSecurityCertCertPath

#pragma mark Public

/*!
 @brief Returns the list of certificates in this certification
  path.The List returned must be immutable and thread-safe.
 @return an immutable List of Certificates (may be empty, but not null)
 */
- (id<JavaUtilList>)getCertificates;

/*!
 @brief Returns the encoded form of this certification path, using
  the default encoding.
 @return the encoded bytes
 @throw java.security.cert.CertificateEncodingExceptionif an encoding error occurs
 */
- (IOSByteArray *)getEncoded;

/*!
 @brief Returns the encoded form of this certification path, using
  the specified encoding.
 @param encoding the name of the encoding to use
 @return the encoded bytes
 @throw java.security.cert.CertificateEncodingExceptionif an encoding error
  occurs or the encoding requested is not supported
 */
- (IOSByteArray *)getEncodedWithNSString:(NSString *)encoding;

/*!
 @brief Returns an iteration of the encodings supported by this
  certification path, with the default encoding
  first.Attempts to modify the returned Iterator via its
  remove method result in an UnsupportedOperationException.
 @return an Iterator over the names of the supported encodings (as Strings)
 */
- (id<JavaUtilIterator>)getEncodings;

#pragma mark Package-Private

/*!
 @brief Creates a CertPath of the specified type.
 This constructor is protected because most users should use
  a CertificateFactory to create CertPaths.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inStream
                             withNSString:(NSString *)encoding;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)certificates;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath)

inline id<JavaUtilList> OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_get_certPathEncodings(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilList> OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_certPathEncodings;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath, certPathEncodings, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaUtilList_(OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath *self, id<JavaUtilList> certificates);

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath *new_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaUtilList_(id<JavaUtilList> certificates) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath *create_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaUtilList_(id<JavaUtilList> certificates);

FOUNDATION_EXPORT void OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaIoInputStream_withNSString_(OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath *self, JavaIoInputStream *inStream, NSString *encoding);

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath *new_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *inStream, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath *create_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaIoInputStream_withNSString_(JavaIoInputStream *inStream, NSString *encoding);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath")

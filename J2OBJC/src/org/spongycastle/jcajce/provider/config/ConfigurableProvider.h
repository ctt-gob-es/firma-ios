//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/config/ConfigurableProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleJcajceProviderConfigConfigurableProvider")
#ifdef RESTRICT_OrgSpongycastleJcajceProviderConfigConfigurableProvider
#define INCLUDE_ALL_OrgSpongycastleJcajceProviderConfigConfigurableProvider 0
#else
#define INCLUDE_ALL_OrgSpongycastleJcajceProviderConfigConfigurableProvider 1
#endif
#undef RESTRICT_OrgSpongycastleJcajceProviderConfigConfigurableProvider

#if !defined (OrgSpongycastleJcajceProviderConfigConfigurableProvider_) && (INCLUDE_ALL_OrgSpongycastleJcajceProviderConfigConfigurableProvider || defined(INCLUDE_OrgSpongycastleJcajceProviderConfigConfigurableProvider))
#define OrgSpongycastleJcajceProviderConfigConfigurableProvider_

@class OrgSpongycastleAsn1ASN1ObjectIdentifier;
@protocol JavaUtilMap;
@protocol OrgSpongycastleJcajceProviderUtilAsymmetricKeyInfoConverter;

/*!
 @brief Implemented by the BC provider.This allows setting of hidden parameters,
  such as the ImplicitCA parameters from X.962, if used.
 */
@protocol OrgSpongycastleJcajceProviderConfigConfigurableProvider < JavaObject >

- (void)setParameterWithNSString:(NSString *)parameterName
                          withId:(id)parameter;

- (void)addAlgorithmWithNSString:(NSString *)key
                    withNSString:(NSString *)value;

- (void)addAlgorithmWithNSString:(NSString *)type
withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                    withNSString:(NSString *)className_;

- (jboolean)hasAlgorithmWithNSString:(NSString *)type
                        withNSString:(NSString *)name;

- (void)addKeyInfoConverterWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
       withOrgSpongycastleJcajceProviderUtilAsymmetricKeyInfoConverter:(id<OrgSpongycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)keyInfoConverter;

- (void)addAttributesWithNSString:(NSString *)key
                  withJavaUtilMap:(id<JavaUtilMap>)attributeMap;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajceProviderConfigConfigurableProvider)

/*!
 @brief Elliptic Curve CA parameters - thread local version
 */
inline NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_get_THREAD_LOCAL_EC_IMPLICITLY_CA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_EC_IMPLICITLY_CA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderConfigConfigurableProvider, THREAD_LOCAL_EC_IMPLICITLY_CA, NSString *)

/*!
 @brief Elliptic Curve CA parameters - VM wide version
 */
inline NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_get_EC_IMPLICITLY_CA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_EC_IMPLICITLY_CA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderConfigConfigurableProvider, EC_IMPLICITLY_CA, NSString *)

/*!
 @brief Diffie-Hellman Default Parameters - thread local version
 */
inline NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_get_THREAD_LOCAL_DH_DEFAULT_PARAMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_THREAD_LOCAL_DH_DEFAULT_PARAMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderConfigConfigurableProvider, THREAD_LOCAL_DH_DEFAULT_PARAMS, NSString *)

/*!
 @brief Diffie-Hellman Default Parameters - VM wide version
 */
inline NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_get_DH_DEFAULT_PARAMS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_DH_DEFAULT_PARAMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderConfigConfigurableProvider, DH_DEFAULT_PARAMS, NSString *)

/*!
 @brief A set of OBJECT IDENTIFIERs representing acceptable named curves for imported keys.
 */
inline NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_get_ACCEPTABLE_EC_CURVES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_ACCEPTABLE_EC_CURVES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderConfigConfigurableProvider, ACCEPTABLE_EC_CURVES, NSString *)

/*!
 @brief A set of OBJECT IDENTIFIERs to EC Curves providing local curve name mapping.
 */
inline NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_get_ADDITIONAL_EC_PARAMETERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderConfigConfigurableProvider_ADDITIONAL_EC_PARAMETERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderConfigConfigurableProvider, ADDITIONAL_EC_PARAMETERS, NSString *)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajceProviderConfigConfigurableProvider)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleJcajceProviderConfigConfigurableProvider")

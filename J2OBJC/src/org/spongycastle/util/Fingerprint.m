//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/Fingerprint.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuffer.h"
#include "org/spongycastle/crypto/digests/SHA512tDigest.h"
#include "org/spongycastle/util/Arrays.h"
#include "org/spongycastle/util/Fingerprint.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/util/Fingerprint must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleUtilFingerprint () {
 @public
  IOSByteArray *fingerprint_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleUtilFingerprint, fingerprint_, IOSByteArray *)

inline IOSCharArray *OrgSpongycastleUtilFingerprint_get_encodingTable(void);
inline IOSCharArray *OrgSpongycastleUtilFingerprint_set_encodingTable(IOSCharArray *value);
static IOSCharArray *OrgSpongycastleUtilFingerprint_encodingTable;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleUtilFingerprint, encodingTable, IOSCharArray *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/Fingerprint.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleUtilFingerprint)


#line 5
@implementation OrgSpongycastleUtilFingerprint


#line 15
- (instancetype)initWithByteArray:(IOSByteArray *)source {
  OrgSpongycastleUtilFingerprint_initWithByteArray_(self, source);
  return self;
}

- (IOSByteArray *)getFingerprint {
  
#line 22
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(fingerprint_);
}


#line 25
- (NSString *)description {
  
#line 27
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  for (jint i = 0; i != ((IOSByteArray *) nil_chk(fingerprint_))->size_; i++) {
    
#line 30
    if (i > 0) {
      
#line 32
      (void) [sb appendWithNSString:@":"];
    }
    (void) [sb appendWithChar:IOSCharArray_Get(nil_chk(OrgSpongycastleUtilFingerprint_encodingTable), (JreURShift32(IOSByteArray_Get(fingerprint_, i), 4)) & (jint) 0xf)];
    (void) [sb appendWithChar:IOSCharArray_Get(nil_chk(OrgSpongycastleUtilFingerprint_encodingTable), IOSByteArray_Get(fingerprint_, i) & (jint) 0x0f)];
  }
  
#line 38
  return [sb description];
}


#line 41
- (jboolean)isEqual:(id)o {
  
#line 43
  if (JreObjectEqualsEquals(o, self)) {
    
#line 45
    return true;
  }
  if ([o isKindOfClass:[OrgSpongycastleUtilFingerprint class]]) {
    
#line 49
    return OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(((OrgSpongycastleUtilFingerprint *) nil_chk(((OrgSpongycastleUtilFingerprint *) o)))->fingerprint_, fingerprint_);
  }
  
#line 52
  return false;
}


#line 55
- (NSUInteger)hash {
  
#line 57
  return OrgSpongycastleUtilArrays_hashCodeWithByteArray_(fingerprint_);
}


#line 60
+ (IOSByteArray *)calculateFingerprintWithByteArray:(IOSByteArray *)input {
  return OrgSpongycastleUtilFingerprint_calculateFingerprintWithByteArray_(input);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 5, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(getFingerprint);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(calculateFingerprintWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "encodingTable", "[C", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
    { "fingerprint_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "toString", "equals", "LNSObject;", "hashCode", "calculateFingerprint", &OrgSpongycastleUtilFingerprint_encodingTable };
  static const J2ObjcClassInfo _OrgSpongycastleUtilFingerprint = { "Fingerprint", "org.spongycastle.util", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleUtilFingerprint;
}

+ (void)initialize {
  if (self == [OrgSpongycastleUtilFingerprint class]) {
    OrgSpongycastleUtilFingerprint_encodingTable = [IOSCharArray newArrayWithChars:(jchar[]){
#line 9
      '0', '1', '2', '3', '4', '5', '6', '7',
#line 10
      '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' } count:16];
      J2OBJC_SET_INITIALIZED(OrgSpongycastleUtilFingerprint)
    }
  }

@end


#line 15
void OrgSpongycastleUtilFingerprint_initWithByteArray_(OrgSpongycastleUtilFingerprint *self, IOSByteArray *source) {
  NSObject_init(self);
  self->fingerprint_ = OrgSpongycastleUtilFingerprint_calculateFingerprintWithByteArray_(source);
}


#line 15
OrgSpongycastleUtilFingerprint *new_OrgSpongycastleUtilFingerprint_initWithByteArray_(IOSByteArray *source) {
  J2OBJC_NEW_IMPL(OrgSpongycastleUtilFingerprint, initWithByteArray_, source)
}


#line 15
OrgSpongycastleUtilFingerprint *create_OrgSpongycastleUtilFingerprint_initWithByteArray_(IOSByteArray *source) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleUtilFingerprint, initWithByteArray_, source)
}


#line 60
IOSByteArray *OrgSpongycastleUtilFingerprint_calculateFingerprintWithByteArray_(IOSByteArray *input) {
  OrgSpongycastleUtilFingerprint_initialize();
  OrgSpongycastleCryptoDigestsSHA512tDigest *digest = new_OrgSpongycastleCryptoDigestsSHA512tDigest_initWithInt_(160);
  
#line 64
  [digest updateWithByteArray:input withInt:0 withInt:((IOSByteArray *) nil_chk(input))->size_];
  
#line 66
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:[digest getDigestSize]];
  
#line 68
  [digest doFinalWithByteArray:rv withInt:0];
  
#line 70
  return rv;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleUtilFingerprint)

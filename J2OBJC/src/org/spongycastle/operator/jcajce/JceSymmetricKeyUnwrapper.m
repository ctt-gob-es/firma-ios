//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/operator/jcajce/JceSymmetricKeyUnwrapper.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/Key.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/security/Provider.h"
#include "javax/crypto/Cipher.h"
#include "javax/crypto/SecretKey.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/jcajce/util/DefaultJcaJceHelper.h"
#include "org/spongycastle/jcajce/util/NamedJcaJceHelper.h"
#include "org/spongycastle/jcajce/util/ProviderJcaJceHelper.h"
#include "org/spongycastle/operator/GenericKey.h"
#include "org/spongycastle/operator/OperatorException.h"
#include "org/spongycastle/operator/SymmetricKeyUnwrapper.h"
#include "org/spongycastle/operator/jcajce/JceGenericKey.h"
#include "org/spongycastle/operator/jcajce/JceSymmetricKeyUnwrapper.h"
#include "org/spongycastle/operator/jcajce/OperatorHelper.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/operator/jcajce/JceSymmetricKeyUnwrapper must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper () {
 @public
  OrgSpongycastleOperatorJcajceOperatorHelper *helper_;
  id<JavaxCryptoSecretKey> secretKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper, helper_, OrgSpongycastleOperatorJcajceOperatorHelper *)
J2OBJC_FIELD_SETTER(OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper, secretKey_, id<JavaxCryptoSecretKey>)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/operator/jcajce/JceSymmetricKeyUnwrapper.java"


#line 18
@implementation OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper


#line 24
- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algorithmIdentifier
                                          withJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)secretKey {
  OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaxCryptoSecretKey_(self, algorithmIdentifier, secretKey);
  return self;
}


#line 31
- (OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  
#line 33
  self->helper_ = new_OrgSpongycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_(new_OrgSpongycastleJcajceUtilProviderJcaJceHelper_initWithJavaSecurityProvider_(provider));
  
#line 35
  return self;
}


#line 38
- (OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper *)setProviderWithNSString:(NSString *)providerName {
  
#line 40
  self->helper_ = new_OrgSpongycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_(new_OrgSpongycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(providerName));
  
#line 42
  return self;
}


#line 45
- (OrgSpongycastleOperatorGenericKey *)generateUnwrappedKeyWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)encryptedKeyAlgorithm
                                                                                            withByteArray:(IOSByteArray *)encryptedKey {
  
#line 48
  @try {
    
#line 50
    JavaxCryptoCipher *keyCipher = [((OrgSpongycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) createSymmetricWrapperWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([self getAlgorithmIdentifier])) getAlgorithm]];
    
#line 52
    [((JavaxCryptoCipher *) nil_chk(keyCipher)) init__WithInt:JavaxCryptoCipher_UNWRAP_MODE withJavaSecurityKey:secretKey_];
    
#line 54
    return new_OrgSpongycastleOperatorJcajceJceGenericKey_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityKey_(encryptedKeyAlgorithm, [keyCipher unwrapWithByteArray:encryptedKey withNSString:[((OrgSpongycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) getKeyAlgorithmNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(encryptedKeyAlgorithm)) getAlgorithm]] withInt:JavaxCryptoCipher_SECRET_KEY]);
  }
  @catch (JavaSecurityInvalidKeyException *e) {
    
#line 58
    @throw new_OrgSpongycastleOperatorOperatorException_initWithNSString_withJavaLangThrowable_(@"key invalid in message.", e);
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    
#line 62
    @throw new_OrgSpongycastleOperatorOperatorException_initWithNSString_withJavaLangThrowable_(@"can't find algorithm.", e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorGenericKey;", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withJavaxCryptoSecretKey:);
  methods[1].selector = @selector(setProviderWithJavaSecurityProvider:);
  methods[2].selector = @selector(setProviderWithNSString:);
  methods[3].selector = @selector(generateUnwrappedKeyWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LOrgSpongycastleOperatorJcajceOperatorHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "secretKey_", "LJavaxCryptoSecretKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LJavaxCryptoSecretKey;", "setProvider", "LJavaSecurityProvider;", "LNSString;", "generateUnwrappedKey", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;[B", "LOrgSpongycastleOperatorOperatorException;" };
  static const J2ObjcClassInfo _OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper = { "JceSymmetricKeyUnwrapper", "org.spongycastle.operator.jcajce", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper;
}

@end


#line 24
void OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaxCryptoSecretKey_(OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier, id<JavaxCryptoSecretKey> secretKey) {
  OrgSpongycastleOperatorSymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_(self,
#line 26
  algorithmIdentifier);
  self->helper_ = new_OrgSpongycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_(new_OrgSpongycastleJcajceUtilDefaultJcaJceHelper_init());
  self->secretKey_ = secretKey;
}


#line 24
OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper *new_OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaxCryptoSecretKey_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier, id<JavaxCryptoSecretKey> secretKey) {
  J2OBJC_NEW_IMPL(OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper, initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaxCryptoSecretKey_, algorithmIdentifier, secretKey)
}


#line 24
OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper *create_OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaxCryptoSecretKey_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier, id<JavaxCryptoSecretKey> secretKey) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper, initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaxCryptoSecretKey_, algorithmIdentifier, secretKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper)

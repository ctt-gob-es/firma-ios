//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/crypto/util/DEROtherInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoUtilDEROtherInfo")
#ifdef RESTRICT_OrgSpongycastleCryptoUtilDEROtherInfo
#define INCLUDE_ALL_OrgSpongycastleCryptoUtilDEROtherInfo 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoUtilDEROtherInfo 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoUtilDEROtherInfo

#if !defined (OrgSpongycastleCryptoUtilDEROtherInfo_) && (INCLUDE_ALL_OrgSpongycastleCryptoUtilDEROtherInfo || defined(INCLUDE_OrgSpongycastleCryptoUtilDEROtherInfo))
#define OrgSpongycastleCryptoUtilDEROtherInfo_

@class IOSByteArray;

/*!
 @brief Builder and holder class for preparing SP 800-56A compliant OtherInfo.The data is ultimately encoded as a DER SEQUENCE.
 Empty octet strings are used to represent nulls in compulsory fields.
 */
@interface OrgSpongycastleCryptoUtilDEROtherInfo : NSObject

#pragma mark Public

- (IOSByteArray *)getEncoded;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoUtilDEROtherInfo)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoUtilDEROtherInfo)

#endif

#if !defined (OrgSpongycastleCryptoUtilDEROtherInfo_Builder_) && (INCLUDE_ALL_OrgSpongycastleCryptoUtilDEROtherInfo || defined(INCLUDE_OrgSpongycastleCryptoUtilDEROtherInfo_Builder))
#define OrgSpongycastleCryptoUtilDEROtherInfo_Builder_

@class IOSByteArray;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;
@class OrgSpongycastleCryptoUtilDEROtherInfo;

/*!
 @brief Builder to create OtherInfo
 */
@interface OrgSpongycastleCryptoUtilDEROtherInfo_Builder : NSObject

#pragma mark Public

/*!
 @brief Create a basic builder with just the compulsory fields.
 @param algorithmID the algorithm associated with this invocation of the KDF.
 @param partyUInfo sender party info.
 @param partyVInfo receiver party info.
 */
- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algorithmID
                                                     withByteArray:(IOSByteArray *)partyUInfo
                                                     withByteArray:(IOSByteArray *)partyVInfo;

/*!
 @brief Build the KTSOtherInfo.
 @return an KTSOtherInfo containing the data.
 */
- (OrgSpongycastleCryptoUtilDEROtherInfo *)build;

/*!
 @brief Add optional supplementary private info (DER tagged, implicit, 1).
 @param suppPrivInfo supplementary private info.
 @return the current builder instance.
 */
- (OrgSpongycastleCryptoUtilDEROtherInfo_Builder *)withSuppPrivInfoWithByteArray:(IOSByteArray *)suppPrivInfo;

/*!
 @brief Add optional supplementary public info (DER tagged, implicit, 0).
 @param suppPubInfo supplementary public info.
 @return the current builder instance.
 */
- (OrgSpongycastleCryptoUtilDEROtherInfo_Builder *)withSuppPubInfoWithByteArray:(IOSByteArray *)suppPubInfo;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoUtilDEROtherInfo_Builder)

FOUNDATION_EXPORT void OrgSpongycastleCryptoUtilDEROtherInfo_Builder_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgSpongycastleCryptoUtilDEROtherInfo_Builder *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo);

FOUNDATION_EXPORT OrgSpongycastleCryptoUtilDEROtherInfo_Builder *new_OrgSpongycastleCryptoUtilDEROtherInfo_Builder_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoUtilDEROtherInfo_Builder *create_OrgSpongycastleCryptoUtilDEROtherInfo_Builder_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoUtilDEROtherInfo_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoUtilDEROtherInfo")

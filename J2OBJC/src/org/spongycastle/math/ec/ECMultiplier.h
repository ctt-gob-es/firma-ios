//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/ec/ECMultiplier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleMathEcECMultiplier")
#ifdef RESTRICT_OrgSpongycastleMathEcECMultiplier
#define INCLUDE_ALL_OrgSpongycastleMathEcECMultiplier 0
#else
#define INCLUDE_ALL_OrgSpongycastleMathEcECMultiplier 1
#endif
#undef RESTRICT_OrgSpongycastleMathEcECMultiplier

#if !defined (OrgSpongycastleMathEcECMultiplier_) && (INCLUDE_ALL_OrgSpongycastleMathEcECMultiplier || defined(INCLUDE_OrgSpongycastleMathEcECMultiplier))
#define OrgSpongycastleMathEcECMultiplier_

@class JavaMathBigInteger;
@class OrgSpongycastleMathEcECPoint;

/*!
 @brief Interface for classes encapsulating a point multiplication algorithm for 
 <code>ECPoint</code>s.
 */
@protocol OrgSpongycastleMathEcECMultiplier < JavaObject >

/*!
 @brief Multiplies the <code>ECPoint p</code> by <code>k</code>, i.e.
 <code>p</code> is added <code>k</code> times to itself.
 @param p The  <code> ECPoint </code>  to be multiplied.
 @param k The factor by which  <code> p </code>  is multiplied.
 @return <code>p</code> multiplied by <code>k</code>.
 */
- (OrgSpongycastleMathEcECPoint *)multiplyWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)p
                                                    withJavaMathBigInteger:(JavaMathBigInteger *)k;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleMathEcECMultiplier)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathEcECMultiplier)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleMathEcECMultiplier")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/ExtensionsGenerator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1Encoding.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/x509/Extension.h"
#include "org/spongycastle/asn1/x509/Extensions.h"
#include "org/spongycastle/asn1/x509/ExtensionsGenerator.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/asn1/x509/ExtensionsGenerator must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1X509ExtensionsGenerator () {
 @public
  JavaUtilHashtable *extensions_;
  JavaUtilVector *extOrdering_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509ExtensionsGenerator, extensions_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509ExtensionsGenerator, extOrdering_, JavaUtilVector *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/ExtensionsGenerator.java"


#line 15
@implementation OrgSpongycastleAsn1X509ExtensionsGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 15
- (instancetype)init {
  OrgSpongycastleAsn1X509ExtensionsGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 23
- (void)reset {
  
#line 25
  extensions_ = new_JavaUtilHashtable_init();
  extOrdering_ = new_JavaUtilVector_init();
}


#line 37
- (void)addExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                                                    withBoolean:(jboolean)critical
                           withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)value {
  
#line 43
  [self addExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid withBoolean:critical withByteArray:[((OrgSpongycastleAsn1ASN1Primitive *) nil_chk([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(value)) toASN1Primitive])) getEncodedWithNSString:OrgSpongycastleAsn1ASN1Encoding_DER]];
}


#line 54
- (void)addExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                                                    withBoolean:(jboolean)critical
                                                  withByteArray:(IOSByteArray *)value {
  
#line 59
  if ([((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:oid]) {
    
#line 61
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"extension ", oid, @" already added"));
  }
  
#line 64
  [((JavaUtilVector *) nil_chk(extOrdering_)) addElementWithId:oid];
  (void) [((JavaUtilHashtable *) nil_chk(extensions_)) putWithId:oid withId:new_OrgSpongycastleAsn1X509Extension_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withBoolean_withOrgSpongycastleAsn1ASN1OctetString_(oid, critical, new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(value))];
}


#line 73
- (void)addExtensionWithOrgSpongycastleAsn1X509Extension:(OrgSpongycastleAsn1X509Extension *)extension {
  
#line 76
  if ([((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:[((OrgSpongycastleAsn1X509Extension *) nil_chk(extension)) getExtnId]]) {
    
#line 78
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"extension ", [extension getExtnId], @" already added"));
  }
  
#line 81
  [((JavaUtilVector *) nil_chk(extOrdering_)) addElementWithId:[extension getExtnId]];
  (void) [((JavaUtilHashtable *) nil_chk(extensions_)) putWithId:[extension getExtnId] withId:extension];
}


#line 90
- (jboolean)isEmpty {
  
#line 92
  return [((JavaUtilVector *) nil_chk(extOrdering_)) isEmpty];
}


#line 100
- (OrgSpongycastleAsn1X509Extensions *)generate {
  
#line 102
  IOSObjectArray *exts = [IOSObjectArray newArrayWithLength:[((JavaUtilVector *) nil_chk(extOrdering_)) size] type:OrgSpongycastleAsn1X509Extension_class_()];
  
#line 104
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(extOrdering_)) size]; i++) {
    
#line 106
    (void) IOSObjectArray_Set(exts, i, (OrgSpongycastleAsn1X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:[((JavaUtilVector *) nil_chk(extOrdering_)) elementAtWithInt:i]], [OrgSpongycastleAsn1X509Extension class]));
  }
  
#line 109
  return new_OrgSpongycastleAsn1X509Extensions_initWithOrgSpongycastleAsn1X509ExtensionArray_(exts);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Extensions;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(addExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:withBoolean:withOrgSpongycastleAsn1ASN1Encodable:);
  methods[3].selector = @selector(addExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:withBoolean:withByteArray:);
  methods[4].selector = @selector(addExtensionWithOrgSpongycastleAsn1X509Extension:);
  methods[5].selector = @selector(isEmpty);
  methods[6].selector = @selector(generate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "extensions_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extOrdering_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addExtension", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;ZLOrgSpongycastleAsn1ASN1Encodable;", "LJavaIoIOException;", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;Z[B", "LOrgSpongycastleAsn1X509Extension;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509ExtensionsGenerator = { "ExtensionsGenerator", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509ExtensionsGenerator;
}

@end


#line 15
void OrgSpongycastleAsn1X509ExtensionsGenerator_init(OrgSpongycastleAsn1X509ExtensionsGenerator *self) {
  NSObject_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->extOrdering_ = new_JavaUtilVector_init();
}


#line 15
OrgSpongycastleAsn1X509ExtensionsGenerator *new_OrgSpongycastleAsn1X509ExtensionsGenerator_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509ExtensionsGenerator, init)
}


#line 15
OrgSpongycastleAsn1X509ExtensionsGenerator *create_OrgSpongycastleAsn1X509ExtensionsGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509ExtensionsGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509ExtensionsGenerator)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/TBSCertificateStructure.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1X509TBSCertificateStructure")
#ifdef RESTRICT_OrgSpongycastleAsn1X509TBSCertificateStructure
#define INCLUDE_ALL_OrgSpongycastleAsn1X509TBSCertificateStructure 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1X509TBSCertificateStructure 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1X509TBSCertificateStructure

#if !defined (OrgSpongycastleAsn1X509TBSCertificateStructure_) && (INCLUDE_ALL_OrgSpongycastleAsn1X509TBSCertificateStructure || defined(INCLUDE_OrgSpongycastleAsn1X509TBSCertificateStructure))
#define OrgSpongycastleAsn1X509TBSCertificateStructure_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

#define RESTRICT_OrgSpongycastleAsn1X509X509ObjectIdentifiers 1
#define INCLUDE_OrgSpongycastleAsn1X509X509ObjectIdentifiers 1
#include "org/spongycastle/asn1/x509/X509ObjectIdentifiers.h"

#define RESTRICT_OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers 1
#define INCLUDE_OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers 1
#include "org/spongycastle/asn1/pkcs/PKCSObjectIdentifiers.h"

@class OrgSpongycastleAsn1ASN1Integer;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1DERBitString;
@class OrgSpongycastleAsn1X500X500Name;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;
@class OrgSpongycastleAsn1X509BCTime;
@class OrgSpongycastleAsn1X509SubjectPublicKeyInfo;
@class OrgSpongycastleAsn1X509X509Extensions;

/*!
 @brief The TBSCertificate object.
 @code

  TBSCertificate ::= SEQUENCE {
       version          [ 0 ]  Version DEFAULT v1(0),
       serialNumber            CertificateSerialNumber,
       signature               AlgorithmIdentifier,
       issuer                  Name,
       validity                Validity,
       subject                 Name,
       subjectPublicKeyInfo    SubjectPublicKeyInfo,
       issuerUniqueID    [ 1 ] IMPLICIT UniqueIdentifier OPTIONAL,
       subjectUniqueID   [ 2 ] IMPLICIT UniqueIdentifier OPTIONAL,
       extensions        [ 3 ] Extensions OPTIONAL
       } 
  
@endcode
  <p>
  Note: issuerUniqueID and subjectUniqueID are both deprecated by the IETF. This class
  will parse them, but you really shouldn't be creating new ones.
 */
@interface OrgSpongycastleAsn1X509TBSCertificateStructure : OrgSpongycastleAsn1ASN1Object < OrgSpongycastleAsn1X509X509ObjectIdentifiers, OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers > {
 @public
  OrgSpongycastleAsn1ASN1Sequence *seq_;
  OrgSpongycastleAsn1ASN1Integer *version__;
  OrgSpongycastleAsn1ASN1Integer *serialNumber_;
  OrgSpongycastleAsn1X509AlgorithmIdentifier *signature_;
  OrgSpongycastleAsn1X500X500Name *issuer_;
  OrgSpongycastleAsn1X509BCTime *startDate_;
  OrgSpongycastleAsn1X509BCTime *endDate_;
  OrgSpongycastleAsn1X500X500Name *subject_;
  OrgSpongycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo_;
  OrgSpongycastleAsn1DERBitString *issuerUniqueId_;
  OrgSpongycastleAsn1DERBitString *subjectUniqueId_;
  OrgSpongycastleAsn1X509X509Extensions *extensions_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

- (OrgSpongycastleAsn1X509BCTime *)getEndDate;

- (OrgSpongycastleAsn1X509X509Extensions *)getExtensions;

+ (OrgSpongycastleAsn1X509TBSCertificateStructure *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                           withBoolean:(jboolean)explicit_;

+ (OrgSpongycastleAsn1X509TBSCertificateStructure *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1X500X500Name *)getIssuer;

- (OrgSpongycastleAsn1DERBitString *)getIssuerUniqueId;

- (OrgSpongycastleAsn1ASN1Integer *)getSerialNumber;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignature;

- (OrgSpongycastleAsn1X509BCTime *)getStartDate;

- (OrgSpongycastleAsn1X500X500Name *)getSubject;

- (OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)getSubjectPublicKeyInfo;

- (OrgSpongycastleAsn1DERBitString *)getSubjectUniqueId;

- (jint)getVersion;

- (OrgSpongycastleAsn1ASN1Integer *)getVersionNumber;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1X509TBSCertificateStructure)

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, seq_, OrgSpongycastleAsn1ASN1Sequence *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, version__, OrgSpongycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, serialNumber_, OrgSpongycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, signature_, OrgSpongycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, issuer_, OrgSpongycastleAsn1X500X500Name *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, startDate_, OrgSpongycastleAsn1X509BCTime *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, endDate_, OrgSpongycastleAsn1X509BCTime *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, subject_, OrgSpongycastleAsn1X500X500Name *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, subjectPublicKeyInfo_, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, issuerUniqueId_, OrgSpongycastleAsn1DERBitString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, subjectUniqueId_, OrgSpongycastleAsn1DERBitString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509TBSCertificateStructure, extensions_, OrgSpongycastleAsn1X509X509Extensions *)

FOUNDATION_EXPORT OrgSpongycastleAsn1X509TBSCertificateStructure *OrgSpongycastleAsn1X509TBSCertificateStructure_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509TBSCertificateStructure *OrgSpongycastleAsn1X509TBSCertificateStructure_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509TBSCertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509TBSCertificateStructure *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509TBSCertificateStructure *new_OrgSpongycastleAsn1X509TBSCertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509TBSCertificateStructure *create_OrgSpongycastleAsn1X509TBSCertificateStructure_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1X509TBSCertificateStructure)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1X509TBSCertificateStructure")

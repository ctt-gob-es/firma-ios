//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/ocsp/CertID.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1OcspCertID")
#ifdef RESTRICT_OrgSpongycastleAsn1OcspCertID
#define INCLUDE_ALL_OrgSpongycastleAsn1OcspCertID 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1OcspCertID 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1OcspCertID

#if !defined (OrgSpongycastleAsn1OcspCertID_) && (INCLUDE_ALL_OrgSpongycastleAsn1OcspCertID || defined(INCLUDE_OrgSpongycastleAsn1OcspCertID))
#define OrgSpongycastleAsn1OcspCertID_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Integer;
@class OrgSpongycastleAsn1ASN1OctetString;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

@interface OrgSpongycastleAsn1OcspCertID : OrgSpongycastleAsn1ASN1Object {
 @public
  OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm_;
  OrgSpongycastleAsn1ASN1OctetString *issuerNameHash_;
  OrgSpongycastleAsn1ASN1OctetString *issuerKeyHash_;
  OrgSpongycastleAsn1ASN1Integer *serialNumber_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                            withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)issuerNameHash
                            withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)issuerKeyHash
                                withOrgSpongycastleAsn1ASN1Integer:(OrgSpongycastleAsn1ASN1Integer *)serialNumber;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm;

+ (OrgSpongycastleAsn1OcspCertID *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                          withBoolean:(jboolean)explicit_;

+ (OrgSpongycastleAsn1OcspCertID *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1ASN1OctetString *)getIssuerKeyHash;

- (OrgSpongycastleAsn1ASN1OctetString *)getIssuerNameHash;

- (OrgSpongycastleAsn1ASN1Integer *)getSerialNumber;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

  CertID          ::=     SEQUENCE {
      hashAlgorithm       AlgorithmIdentifier,
      issuerNameHash      OCTET STRING, -- Hash of Issuer's DN
      issuerKeyHash       OCTET STRING, -- Hash of Issuers public key
      serialNumber        CertificateSerialNumber } 
  
@endcode
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1OcspCertID)

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1OcspCertID, hashAlgorithm_, OrgSpongycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1OcspCertID, issuerNameHash_, OrgSpongycastleAsn1ASN1OctetString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1OcspCertID, issuerKeyHash_, OrgSpongycastleAsn1ASN1OctetString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1OcspCertID, serialNumber_, OrgSpongycastleAsn1ASN1Integer *)

FOUNDATION_EXPORT void OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1OcspCertID *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *issuerNameHash, OrgSpongycastleAsn1ASN1OctetString *issuerKeyHash, OrgSpongycastleAsn1ASN1Integer *serialNumber);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertID *new_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *issuerNameHash, OrgSpongycastleAsn1ASN1OctetString *issuerKeyHash, OrgSpongycastleAsn1ASN1Integer *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertID *create_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *issuerNameHash, OrgSpongycastleAsn1ASN1OctetString *issuerKeyHash, OrgSpongycastleAsn1ASN1Integer *serialNumber);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertID *OrgSpongycastleAsn1OcspCertID_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertID *OrgSpongycastleAsn1OcspCertID_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1OcspCertID)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1OcspCertID")

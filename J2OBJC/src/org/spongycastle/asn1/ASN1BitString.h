//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/ASN1BitString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1ASN1BitString")
#ifdef RESTRICT_OrgSpongycastleAsn1ASN1BitString
#define INCLUDE_ALL_OrgSpongycastleAsn1ASN1BitString 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1ASN1BitString 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1ASN1BitString

#if !defined (OrgSpongycastleAsn1ASN1BitString_) && (INCLUDE_ALL_OrgSpongycastleAsn1ASN1BitString || defined(INCLUDE_OrgSpongycastleAsn1ASN1BitString))
#define OrgSpongycastleAsn1ASN1BitString_

#define RESTRICT_OrgSpongycastleAsn1ASN1Primitive 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Primitive 1
#include "org/spongycastle/asn1/ASN1Primitive.h"

#define RESTRICT_OrgSpongycastleAsn1ASN1String 1
#define INCLUDE_OrgSpongycastleAsn1ASN1String 1
#include "org/spongycastle/asn1/ASN1String.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class OrgSpongycastleAsn1ASN1OutputStream;

/*!
 @brief Base class for BIT STRING objects
 */
@interface OrgSpongycastleAsn1ASN1BitString : OrgSpongycastleAsn1ASN1Primitive < OrgSpongycastleAsn1ASN1String > {
 @public
  IOSByteArray *data_;
  jint padBits_;
}

#pragma mark Public

/*!
 @brief Base constructor.
 @param data the octets making up the bit string.
 @param padBits the number of extra bits at the end of the string.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)padBits;

- (IOSByteArray *)getBytes;

- (OrgSpongycastleAsn1ASN1Primitive *)getLoadedObject;

/*!
 @brief Return the octets contained in this BIT STRING, checking that this BIT STRING really
  does represent an octet aligned string.Only use this method when the standard you are
  following dictates that the BIT STRING will be octet aligned.
 @return a copy of the octet aligned data.
 */
- (IOSByteArray *)getOctets;

- (jint)getPadBits;

/*!
 @brief Return a String representation of this BIT STRING
 @return a String representation.
 */
- (NSString *)getString;

- (NSUInteger)hash;

/*!
 @return the value of the bit string as an int (truncating if necessary)
 */
- (jint)intValue;

- (NSString *)description;

#pragma mark Protected

- (jboolean)asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)o;

+ (IOSByteArray *)derFormWithByteArray:(IOSByteArray *)data
                               withInt:(jint)padBits;

/*!
 @param bitString an int containing the BIT STRING
 @return the correct number of bytes for a bit string defined in
  a 32 bit constant
 */
+ (IOSByteArray *)getBytesWithInt:(jint)bitString;

/*!
 @param bitString an int containing the BIT STRING
 @return the correct number of pad bits for a bit string defined in
  a 32 bit constant
 */
+ (jint)getPadBitsWithInt:(jint)bitString;

#pragma mark Package-Private

- (void)encodeWithOrgSpongycastleAsn1ASN1OutputStream:(OrgSpongycastleAsn1ASN1OutputStream *)outArg;

+ (OrgSpongycastleAsn1ASN1BitString *)fromInputStreamWithInt:(jint)length
                                       withJavaIoInputStream:(JavaIoInputStream *)stream;

- (OrgSpongycastleAsn1ASN1Primitive *)toDERObject;

- (OrgSpongycastleAsn1ASN1Primitive *)toDLObject;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleAsn1ASN1BitString)

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1ASN1BitString, data_, IOSByteArray *)

FOUNDATION_EXPORT jint OrgSpongycastleAsn1ASN1BitString_getPadBitsWithInt_(jint bitString);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleAsn1ASN1BitString_getBytesWithInt_(jint bitString);

FOUNDATION_EXPORT void OrgSpongycastleAsn1ASN1BitString_initWithByteArray_withInt_(OrgSpongycastleAsn1ASN1BitString *self, IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT IOSByteArray *OrgSpongycastleAsn1ASN1BitString_derFormWithByteArray_withInt_(IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1BitString *OrgSpongycastleAsn1ASN1BitString_fromInputStreamWithInt_withJavaIoInputStream_(jint length, JavaIoInputStream *stream);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1ASN1BitString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1ASN1BitString")

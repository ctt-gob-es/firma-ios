//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/InvalidITextException.java
//

#include "InvalidITextException.h"
#include "InvalidLibraryException.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

#if !__has_feature(objc_arc)
#error "InvalidITextException must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong EsGobAfirmaSignersPadesInvalidITextException_get_serialVersionUID(void);
#define EsGobAfirmaSignersPadesInvalidITextException_serialVersionUID -322997692480101275LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesInvalidITextException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/InvalidITextException.java"


#line 17
@implementation EsGobAfirmaSignersPadesInvalidITextException


#line 23
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)e {
  EsGobAfirmaSignersPadesInvalidITextException_initWithJavaLangThrowable_(self, e);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaSignersPadesInvalidITextException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangThrowable;" };
  static const J2ObjcClassInfo _EsGobAfirmaSignersPadesInvalidITextException = { "InvalidITextException", "es.gob.afirma.signers.pades", ptrTable, methods, fields, 7, 0x11, 1, 1, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersPadesInvalidITextException;
}

@end


#line 23
void EsGobAfirmaSignersPadesInvalidITextException_initWithJavaLangThrowable_(EsGobAfirmaSignersPadesInvalidITextException *self, JavaLangThrowable *e) {
  EsGobAfirmaCoreInvalidLibraryException_initWithNSString_withJavaLangThrowable_(self, @"El Cliente afirma necesita una version especifica propia de iText", e);
}


#line 23
EsGobAfirmaSignersPadesInvalidITextException *new_EsGobAfirmaSignersPadesInvalidITextException_initWithJavaLangThrowable_(JavaLangThrowable *e) {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesInvalidITextException, initWithJavaLangThrowable_, e)
}


#line 23
EsGobAfirmaSignersPadesInvalidITextException *create_EsGobAfirmaSignersPadesInvalidITextException_initWithJavaLangThrowable_(JavaLangThrowable *e) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesInvalidITextException, initWithJavaLangThrowable_, e)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersPadesInvalidITextException)

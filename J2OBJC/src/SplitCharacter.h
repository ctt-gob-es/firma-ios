//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/SplitCharacter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SplitCharacter")
#ifdef RESTRICT_SplitCharacter
#define INCLUDE_ALL_SplitCharacter 0
#else
#define INCLUDE_ALL_SplitCharacter 1
#endif
#undef RESTRICT_SplitCharacter

#if !defined (ComAowagieTextSplitCharacter_) && (INCLUDE_ALL_SplitCharacter || defined(INCLUDE_ComAowagieTextSplitCharacter))
#define ComAowagieTextSplitCharacter_

@class IOSCharArray;
@class IOSObjectArray;

/*!
 @brief Interface for customizing the split character.
 @author Paulo Soares (psoares@@consiste.pt)
 */
@protocol ComAowagieTextSplitCharacter < JavaObject >

/*!
 @brief Returns <CODE>true</CODE> if the character can split a line.The splitting implementation
  is free to look ahead or look behind characters to make a decision.
 <p>
  The default implementation is: 
 </p>
  @code

  public boolean isSplitCharacter(int start, int current, int end, char[] cc, PdfChunk[] ck) {
     char c;
     if (ck == null)
         c = cc[current];
     else
         c = (char) ck[Math.min(current, ck.length - 1)].getUnicodeEquivalent(cc[current]);
     if (c &lt;= ' ' || c == '-') {
         return true;
     }
     if (c &lt; 0x2e80)
         return false;
     return ((c &gt;= 0x2e80 &amp;&amp; c &lt; 0xd7a0)
     || (c &gt;= 0xf900 &amp;&amp; c &lt; 0xfb00)
     || (c &gt;= 0xfe30 &amp;&amp; c &lt; 0xfe50)
     || (c &gt;= 0xff61 &amp;&amp; c &lt; 0xffa0));
  } 
  
@endcode
 @param start the lower limit of  <CODE> cc </CODE>  inclusive
 @param current the pointer to the character in  <CODE> cc </CODE>
 @param end the upper limit of  <CODE> cc </CODE>  exclusive
 @param cc an array of characters at least  <CODE> end </CODE>  sized
 @param ck an array of  <CODE> PdfChunk </CODE> . The main use is to be able to call
   <code>PdfChunk.getUnicodeEquivalent(int)</code> . It may be  <CODE> null </CODE>  or shorter than 
  <CODE> end </CODE> . If  <CODE> null </CODE>  no conversion takes place.
   If shorter than  <CODE> end </CODE>  the last element is used
 @return <CODE>true</CODE> if the character(s) can split a line
 */
- (jboolean)isSplitCharacterWithInt:(jint)start
                            withInt:(jint)current
                            withInt:(jint)end
                      withCharArray:(IOSCharArray *)cc
 withComAowagieTextPdfPdfChunkArray:(IOSObjectArray *)ck;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextSplitCharacter)

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextSplitCharacter)

#endif

#pragma pop_macro("INCLUDE_ALL_SplitCharacter")

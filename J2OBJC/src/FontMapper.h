//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/FontMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FontMapper")
#ifdef RESTRICT_FontMapper
#define INCLUDE_ALL_FontMapper 0
#else
#define INCLUDE_ALL_FontMapper 1
#endif
#undef RESTRICT_FontMapper

#if !defined (ComAowagieTextPdfFontMapper_) && (INCLUDE_ALL_FontMapper || defined(INCLUDE_ComAowagieTextPdfFontMapper))
#define ComAowagieTextPdfFontMapper_

@class ComAowagieTextPdfBaseFont;
@class HarmonyJavaAwtAWTFont;

/*!
 @brief A FontMapper implementation handles mappings between AWT Fonts and PDF
  fonts.An interface is used instead of a fixed class because there isn't
  an exact correlation between the font types, so each application is free
  to define a mapping which is appropriate for it.
 */
@protocol ComAowagieTextPdfFontMapper < JavaObject >

/*!
 @brief Returns a BaseFont which can be used to represent the given AWT Font
 @param font the font to be converted
 @return a BaseFont which has similar properties to the provided Font
 */
- (ComAowagieTextPdfBaseFont *)awtToPdfWithHarmonyJavaAwtAWTFont:(HarmonyJavaAwtAWTFont *)font;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfFontMapper)

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfFontMapper)

#endif

#pragma pop_macro("INCLUDE_ALL_FontMapper")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/ess/ESSCertIDv2.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ESSCertIDv2")
#ifdef RESTRICT_ESSCertIDv2
#define INCLUDE_ALL_ESSCertIDv2 0
#else
#define INCLUDE_ALL_ESSCertIDv2 1
#endif
#undef RESTRICT_ESSCertIDv2

#if !defined (OrgSpongycastleAsn1EssESSCertIDv2_) && (INCLUDE_ALL_ESSCertIDv2 || defined(INCLUDE_OrgSpongycastleAsn1EssESSCertIDv2))
#define OrgSpongycastleAsn1EssESSCertIDv2_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class IOSByteArray;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;
@class OrgSpongycastleAsn1X509IssuerSerial;

@interface OrgSpongycastleAsn1EssESSCertIDv2 : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algId
                                                     withByteArray:(IOSByteArray *)certHash;

- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algId
                                                     withByteArray:(IOSByteArray *)certHash
                           withOrgSpongycastleAsn1X509IssuerSerial:(OrgSpongycastleAsn1X509IssuerSerial *)issuerSerial;

- (instancetype)initWithByteArray:(IOSByteArray *)certHash;

- (instancetype)initWithByteArray:(IOSByteArray *)certHash
withOrgSpongycastleAsn1X509IssuerSerial:(OrgSpongycastleAsn1X509IssuerSerial *)issuerSerial;

- (IOSByteArray *)getCertHash;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm;

+ (OrgSpongycastleAsn1EssESSCertIDv2 *)getInstanceWithId:(id)o;

- (OrgSpongycastleAsn1X509IssuerSerial *)getIssuerSerial;

/*!
 @brief @code

  ESSCertIDv2 ::=  SEQUENCE {
      hashAlgorithm     AlgorithmIdentifier
               DEFAULT {algorithm id-sha256},
      certHash          Hash,
      issuerSerial      IssuerSerial OPTIONAL
  }
  Hash ::= OCTET STRING
  IssuerSerial ::= SEQUENCE {
      issuer         GeneralNames,
      serialNumber   CertificateSerialNumber
  }
  
@endcode
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleAsn1EssESSCertIDv2)

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *OrgSpongycastleAsn1EssESSCertIDv2_getInstanceWithId_(id o);

FOUNDATION_EXPORT void OrgSpongycastleAsn1EssESSCertIDv2_initWithByteArray_(OrgSpongycastleAsn1EssESSCertIDv2 *self, IOSByteArray *certHash);

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *new_OrgSpongycastleAsn1EssESSCertIDv2_initWithByteArray_(IOSByteArray *certHash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *create_OrgSpongycastleAsn1EssESSCertIDv2_initWithByteArray_(IOSByteArray *certHash);

FOUNDATION_EXPORT void OrgSpongycastleAsn1EssESSCertIDv2_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1EssESSCertIDv2 *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash);

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *new_OrgSpongycastleAsn1EssESSCertIDv2_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *create_OrgSpongycastleAsn1EssESSCertIDv2_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash);

FOUNDATION_EXPORT void OrgSpongycastleAsn1EssESSCertIDv2_initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(OrgSpongycastleAsn1EssESSCertIDv2 *self, IOSByteArray *certHash, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial);

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *new_OrgSpongycastleAsn1EssESSCertIDv2_initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(IOSByteArray *certHash, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *create_OrgSpongycastleAsn1EssESSCertIDv2_initWithByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(IOSByteArray *certHash, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial);

FOUNDATION_EXPORT void OrgSpongycastleAsn1EssESSCertIDv2_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(OrgSpongycastleAsn1EssESSCertIDv2 *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial);

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *new_OrgSpongycastleAsn1EssESSCertIDv2_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1EssESSCertIDv2 *create_OrgSpongycastleAsn1EssESSCertIDv2_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withOrgSpongycastleAsn1X509IssuerSerial_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *certHash, OrgSpongycastleAsn1X509IssuerSerial *issuerSerial);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1EssESSCertIDv2)

#endif

#pragma pop_macro("INCLUDE_ALL_ESSCertIDv2")

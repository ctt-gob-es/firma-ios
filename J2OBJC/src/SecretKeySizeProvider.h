//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/operator/SecretKeySizeProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SecretKeySizeProvider")
#ifdef RESTRICT_SecretKeySizeProvider
#define INCLUDE_ALL_SecretKeySizeProvider 0
#else
#define INCLUDE_ALL_SecretKeySizeProvider 1
#endif
#undef RESTRICT_SecretKeySizeProvider

#if !defined (OrgSpongycastleOperatorSecretKeySizeProvider_) && (INCLUDE_ALL_SecretKeySizeProvider || defined(INCLUDE_OrgSpongycastleOperatorSecretKeySizeProvider))
#define OrgSpongycastleOperatorSecretKeySizeProvider_

@class OrgSpongycastleAsn1ASN1ObjectIdentifier;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

@protocol OrgSpongycastleOperatorSecretKeySizeProvider < JavaObject >

- (jint)getKeySizeWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algorithmIdentifier;

/*!
 @brief Return the key size implied by the OID, if one exists.
 @param algorithm the OID of the algorithm of interest.
 @return -1 if there is no fixed key size associated with the OID, or more information is required.
 */
- (jint)getKeySizeWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)algorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleOperatorSecretKeySizeProvider)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleOperatorSecretKeySizeProvider)

#endif

#pragma pop_macro("INCLUDE_ALL_SecretKeySizeProvider")

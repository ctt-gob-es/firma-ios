//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/x509/GeneralSubtree.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "DERSequence.h"
#include "DERTaggedObject.h"
#include "GeneralName.h"
#include "GeneralSubtree.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

#if !__has_feature(objc_arc)
#error "GeneralSubtree must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1X509GeneralSubtree () {
 @public
  OrgSpongycastleAsn1X509GeneralName *base_;
  OrgSpongycastleAsn1ASN1Integer *minimum_;
  OrgSpongycastleAsn1ASN1Integer *maximum_;
}

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509GeneralSubtree, base_, OrgSpongycastleAsn1X509GeneralName *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509GeneralSubtree, minimum_, OrgSpongycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509GeneralSubtree, maximum_, OrgSpongycastleAsn1ASN1Integer *)

inline JavaMathBigInteger *OrgSpongycastleAsn1X509GeneralSubtree_get_ZERO(void);
static JavaMathBigInteger *OrgSpongycastleAsn1X509GeneralSubtree_ZERO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1X509GeneralSubtree, ZERO, JavaMathBigInteger *)

__attribute__((unused)) static void OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509GeneralSubtree *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1X509GeneralSubtree *new_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1X509GeneralSubtree *create_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/x509/GeneralSubtree.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleAsn1X509GeneralSubtree)


#line 31
@implementation OrgSpongycastleAsn1X509GeneralSubtree


#line 42
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 111
- (instancetype)initWithOrgSpongycastleAsn1X509GeneralName:(OrgSpongycastleAsn1X509GeneralName *)base
                                    withJavaMathBigInteger:(JavaMathBigInteger *)minimum
                                    withJavaMathBigInteger:(JavaMathBigInteger *)maximum {
  OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_withJavaMathBigInteger_withJavaMathBigInteger_(self, base, minimum, maximum);
  return self;
}


#line 131
- (instancetype)initWithOrgSpongycastleAsn1X509GeneralName:(OrgSpongycastleAsn1X509GeneralName *)base {
  OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_(self, base);
  return self;
}

+ (OrgSpongycastleAsn1X509GeneralSubtree *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)o
                                                                                  withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1X509GeneralSubtree_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(o, explicit_);
}


#line 143
+ (OrgSpongycastleAsn1X509GeneralSubtree *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1X509GeneralSubtree_getInstanceWithId_(obj);
}


#line 159
- (OrgSpongycastleAsn1X509GeneralName *)getBase {
  
#line 161
  return base_;
}


#line 164
- (JavaMathBigInteger *)getMinimum {
  
#line 166
  if (minimum_ == nil) {
    
#line 168
    return OrgSpongycastleAsn1X509GeneralSubtree_ZERO;
  }
  
#line 171
  return [minimum_ getValue];
}


#line 174
- (JavaMathBigInteger *)getMaximum {
  
#line 176
  if (maximum_ == nil) {
    
#line 178
    return nil;
  }
  
#line 181
  return [maximum_ getValue];
}


#line 200
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 202
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 204
  [v addWithOrgSpongycastleAsn1ASN1Encodable:base_];
  
#line 206
  if (minimum_ != nil && ![((JavaMathBigInteger *) nil_chk([minimum_ getValue])) isEqual:OrgSpongycastleAsn1X509GeneralSubtree_ZERO]) {
    
#line 208
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 0, minimum_)];
  }
  
#line 211
  if (maximum_ != nil) {
    
#line 213
    [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgSpongycastleAsn1ASN1Encodable_(false, 1, maximum_)];
  }
  
#line 216
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509GeneralSubtree;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509GeneralSubtree;", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509GeneralName;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1X509GeneralName:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1X509GeneralName:);
  methods[3].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[4].selector = @selector(getInstanceWithId:);
  methods[5].selector = @selector(getBase);
  methods[6].selector = @selector(getMinimum);
  methods[7].selector = @selector(getMaximum);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "base_", "LOrgSpongycastleAsn1X509GeneralName;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "minimum_", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maximum_", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1ASN1Sequence;", "LOrgSpongycastleAsn1X509GeneralName;LJavaMathBigInteger;LJavaMathBigInteger;", "LOrgSpongycastleAsn1X509GeneralName;", "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", &OrgSpongycastleAsn1X509GeneralSubtree_ZERO };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509GeneralSubtree = { "GeneralSubtree", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509GeneralSubtree;
}

+ (void)initialize {
  if (self == [OrgSpongycastleAsn1X509GeneralSubtree class]) {
    OrgSpongycastleAsn1X509GeneralSubtree_ZERO = JavaMathBigInteger_valueOfWithLong_(
#line 34
    0);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleAsn1X509GeneralSubtree)
  }
}

@end


#line 42
void OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509GeneralSubtree *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 45
  self->base_ = OrgSpongycastleAsn1X509GeneralName_getInstanceWithId_([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  {
    
#line 52
    OrgSpongycastleAsn1ASN1TaggedObject *o;
    
#line 47
    switch ([seq size]) {
      
#line 49
      case 1:
      break;
      case 2:
      o = OrgSpongycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:1]);
      switch ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(o)) getTagNo]) {
        
#line 55
        case 0:
        self->minimum_ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(o, false);
        break;
        case 1:
        self->maximum_ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(o, false);
        break;
        default:
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad tag number: ",
#line 63
        [o getTagNo]));
      }
      break;
      case 3:
      {
        {
          OrgSpongycastleAsn1ASN1TaggedObject *oMin = OrgSpongycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:1]);
          if ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(oMin)) getTagNo] != 0) {
            
#line 72
            @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad tag number for 'minimum': ", [oMin getTagNo]));
          }
          self->minimum_ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(oMin, false);
        }
        {
          
#line 78
          OrgSpongycastleAsn1ASN1TaggedObject *oMax = OrgSpongycastleAsn1ASN1TaggedObject_getInstanceWithId_([seq getObjectAtWithInt:2]);
          if ([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(oMax)) getTagNo] != 1) {
            
#line 81
            @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad tag number for 'maximum': ", [oMax getTagNo]));
          }
          self->maximum_ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(oMax, false);
        }
        
#line 86
        break;
      }
      default:
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ",
#line 90
      [seq size]));
    }
  }
}


#line 42
OrgSpongycastleAsn1X509GeneralSubtree *new_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509GeneralSubtree, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 42
OrgSpongycastleAsn1X509GeneralSubtree *create_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509GeneralSubtree, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 111
void OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleAsn1X509GeneralSubtree *self, OrgSpongycastleAsn1X509GeneralName *base, JavaMathBigInteger *minimum, JavaMathBigInteger *maximum) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 116
  self->base_ = base;
  if (maximum != nil) {
    
#line 119
    self->maximum_ = new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(maximum);
  }
  if (minimum == nil) {
    
#line 123
    self->minimum_ = nil;
  }
  else {
    
#line 127
    self->minimum_ = new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(minimum);
  }
}


#line 111
OrgSpongycastleAsn1X509GeneralSubtree *new_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleAsn1X509GeneralName *base, JavaMathBigInteger *minimum, JavaMathBigInteger *maximum) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509GeneralSubtree, initWithOrgSpongycastleAsn1X509GeneralName_withJavaMathBigInteger_withJavaMathBigInteger_, base, minimum, maximum)
}


#line 111
OrgSpongycastleAsn1X509GeneralSubtree *create_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleAsn1X509GeneralName *base, JavaMathBigInteger *minimum, JavaMathBigInteger *maximum) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509GeneralSubtree, initWithOrgSpongycastleAsn1X509GeneralName_withJavaMathBigInteger_withJavaMathBigInteger_, base, minimum, maximum)
}


#line 131
void OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_(OrgSpongycastleAsn1X509GeneralSubtree *self, OrgSpongycastleAsn1X509GeneralName *base) {
  OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_withJavaMathBigInteger_withJavaMathBigInteger_(self,
#line 133
  base, nil, nil);
}


#line 131
OrgSpongycastleAsn1X509GeneralSubtree *new_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_(OrgSpongycastleAsn1X509GeneralName *base) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509GeneralSubtree, initWithOrgSpongycastleAsn1X509GeneralName_, base)
}


#line 131
OrgSpongycastleAsn1X509GeneralSubtree *create_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1X509GeneralName_(OrgSpongycastleAsn1X509GeneralName *base) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509GeneralSubtree, initWithOrgSpongycastleAsn1X509GeneralName_, base)
}


#line 136
OrgSpongycastleAsn1X509GeneralSubtree *OrgSpongycastleAsn1X509GeneralSubtree_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *o, jboolean explicit_) {
  OrgSpongycastleAsn1X509GeneralSubtree_initialize();
  
#line 140
  return new_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(o, explicit_));
}

OrgSpongycastleAsn1X509GeneralSubtree *OrgSpongycastleAsn1X509GeneralSubtree_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1X509GeneralSubtree_initialize();
  
#line 146
  if (obj == nil) {
    
#line 148
    return nil;
  }
  
#line 151
  if ([obj isKindOfClass:[OrgSpongycastleAsn1X509GeneralSubtree class]]) {
    
#line 153
    return (OrgSpongycastleAsn1X509GeneralSubtree *) obj;
  }
  
#line 156
  return new_OrgSpongycastleAsn1X509GeneralSubtree_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509GeneralSubtree)

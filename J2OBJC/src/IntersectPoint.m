//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/IntersectPoint.java
//

#include "IntersectPoint.h"
#include "J2ObjC_source.h"

#if !__has_feature(objc_arc)
#error "IntersectPoint must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComIntersectPoint () {
 @public
  jint begIndex1_;
  jint endIndex1_;
  jint rule1_;
  jint ruleIndex1_;
  jdouble param1_;
  jint begIndex2_;
  jint endIndex2_;
  jint rule2_;
  jint ruleIndex2_;
  jdouble x_;
  jdouble y_;
  jdouble param2_;
}

@end

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/IntersectPoint.java"


#line 20
@implementation ComIntersectPoint


#line 46
- (instancetype)initWithInt:(jint)begIndex1
                    withInt:(jint)endIndex1
                    withInt:(jint)begIndex2
                    withInt:(jint)endIndex2
                 withDouble:(jdouble)x
                 withDouble:(jdouble)y {
  ComIntersectPoint_initWithInt_withInt_withInt_withInt_withDouble_withDouble_(self, begIndex1, endIndex1, begIndex2, endIndex2, x, y);
  return self;
}


#line 55
- (instancetype)initWithInt:(jint)begIndex1
                    withInt:(jint)endIndex1
                    withInt:(jint)rule1
                    withInt:(jint)ruleIndex1
                    withInt:(jint)begIndex2
                    withInt:(jint)endIndex2
                    withInt:(jint)rule2
                    withInt:(jint)ruleIndex2
                 withDouble:(jdouble)x
                 withDouble:(jdouble)y
                 withDouble:(jdouble)param1
                 withDouble:(jdouble)param2 {
  ComIntersectPoint_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withDouble_(self, begIndex1, endIndex1, rule1, ruleIndex1, begIndex2, endIndex2, rule2, ruleIndex2, x, y, param1, param2);
  return self;
}

- (jint)getBegIndexWithBoolean:(jboolean)isCurrentArea {
  return isCurrentArea ? begIndex1_ : begIndex2_;
}

- (jint)getEndIndexWithBoolean:(jboolean)isCurrentArea {
  return isCurrentArea ? endIndex1_ : endIndex2_;
}

- (jint)getRuleIndexWithBoolean:(jboolean)isCurrentArea {
  return isCurrentArea ? ruleIndex1_ : ruleIndex2_;
}

- (jdouble)getParamWithBoolean:(jboolean)isCurrentArea {
  return isCurrentArea ? param1_ : param2_;
}

- (jint)getRuleWithBoolean:(jboolean)isCurrentArea {
  return isCurrentArea ? rule1_ : rule2_;
}

- (jdouble)getX {
  return x_;
}

- (jdouble)getY {
  return y_;
}

- (void)setBegIndex1WithInt:(jint)begIndex {
  self->begIndex1_ = begIndex;
}

- (void)setEndIndex1WithInt:(jint)endIndex {
  self->endIndex1_ = endIndex;
}

- (void)setBegIndex2WithInt:(jint)begIndex {
  self->begIndex2_ = begIndex;
}

- (void)setEndIndex2WithInt:(jint)endIndex {
  self->endIndex2_ = endIndex;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 3, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:withInt:withDouble:withDouble:);
  methods[1].selector = @selector(initWithInt:withInt:withInt:withInt:withInt:withInt:withInt:withInt:withDouble:withDouble:withDouble:withDouble:);
  methods[2].selector = @selector(getBegIndexWithBoolean:);
  methods[3].selector = @selector(getEndIndexWithBoolean:);
  methods[4].selector = @selector(getRuleIndexWithBoolean:);
  methods[5].selector = @selector(getParamWithBoolean:);
  methods[6].selector = @selector(getRuleWithBoolean:);
  methods[7].selector = @selector(getX);
  methods[8].selector = @selector(getY);
  methods[9].selector = @selector(setBegIndex1WithInt:);
  methods[10].selector = @selector(setEndIndex1WithInt:);
  methods[11].selector = @selector(setBegIndex2WithInt:);
  methods[12].selector = @selector(setEndIndex2WithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "begIndex1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "endIndex1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rule1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ruleIndex1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "param1_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "begIndex2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "endIndex2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rule2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ruleIndex2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "x_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "y_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "param2_", "D", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIIIDD", "IIIIIIIIDDDD", "getBegIndex", "Z", "getEndIndex", "getRuleIndex", "getParam", "getRule", "setBegIndex1", "I", "setEndIndex1", "setBegIndex2", "setEndIndex2" };
  static const J2ObjcClassInfo _ComIntersectPoint = { "IntersectPoint", "com", ptrTable, methods, fields, 7, 0x1, 13, 12, -1, -1, -1, -1, -1 };
  return &_ComIntersectPoint;
}

@end


#line 46
void ComIntersectPoint_initWithInt_withInt_withInt_withInt_withDouble_withDouble_(ComIntersectPoint *self, jint begIndex1, jint endIndex1, jint begIndex2, jint endIndex2, jdouble x, jdouble y) {
  NSObject_init(self);
  
#line 47
  self->begIndex1_ = begIndex1;
  self->endIndex1_ = endIndex1;
  self->begIndex2_ = begIndex2;
  self->endIndex2_ = endIndex2;
  self->x_ = x;
  self->y_ = y;
}


#line 46
ComIntersectPoint *new_ComIntersectPoint_initWithInt_withInt_withInt_withInt_withDouble_withDouble_(jint begIndex1, jint endIndex1, jint begIndex2, jint endIndex2, jdouble x, jdouble y) {
  J2OBJC_NEW_IMPL(ComIntersectPoint, initWithInt_withInt_withInt_withInt_withDouble_withDouble_, begIndex1, endIndex1, begIndex2, endIndex2, x, y)
}


#line 46
ComIntersectPoint *create_ComIntersectPoint_initWithInt_withInt_withInt_withInt_withDouble_withDouble_(jint begIndex1, jint endIndex1, jint begIndex2, jint endIndex2, jdouble x, jdouble y) {
  J2OBJC_CREATE_IMPL(ComIntersectPoint, initWithInt_withInt_withInt_withInt_withDouble_withDouble_, begIndex1, endIndex1, begIndex2, endIndex2, x, y)
}


#line 55
void ComIntersectPoint_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withDouble_(ComIntersectPoint *self, jint begIndex1, jint endIndex1, jint rule1, jint ruleIndex1, jint begIndex2, jint endIndex2, jint rule2, jint ruleIndex2, jdouble x, jdouble y, jdouble param1, jdouble param2) {
  NSObject_init(self);
  self->begIndex1_ = begIndex1;
  self->endIndex1_ = endIndex1;
  self->rule1_ = rule1;
  self->ruleIndex1_ = ruleIndex1;
  self->param1_ = param1;
  self->begIndex2_ = begIndex2;
  self->endIndex2_ = endIndex2;
  self->rule2_ = rule2;
  self->ruleIndex2_ = ruleIndex2;
  self->param2_ = param2;
  self->x_ = x;
  self->y_ = y;
}


#line 55
ComIntersectPoint *new_ComIntersectPoint_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withDouble_(jint begIndex1, jint endIndex1, jint rule1, jint ruleIndex1, jint begIndex2, jint endIndex2, jint rule2, jint ruleIndex2, jdouble x, jdouble y, jdouble param1, jdouble param2) {
  J2OBJC_NEW_IMPL(ComIntersectPoint, initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withDouble_, begIndex1, endIndex1, rule1, ruleIndex1, begIndex2, endIndex2, rule2, ruleIndex2, x, y, param1, param2)
}


#line 55
ComIntersectPoint *create_ComIntersectPoint_initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withDouble_(jint begIndex1, jint endIndex1, jint rule1, jint ruleIndex1, jint begIndex2, jint endIndex2, jint rule2, jint ruleIndex2, jdouble x, jdouble y, jdouble param1, jdouble param2) {
  J2OBJC_CREATE_IMPL(ComIntersectPoint, initWithInt_withInt_withInt_withInt_withInt_withInt_withInt_withInt_withDouble_withDouble_withDouble_withDouble_, begIndex1, endIndex1, rule1, ruleIndex1, begIndex2, endIndex2, rule2, ruleIndex2, x, y, param1, param2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComIntersectPoint)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/AGEPolicyIncompatibilityException.java
//

#include "AGEPolicyIncompatibilityException.h"
#include "CustomRuntimeConfigNeededException.h"
#include "J2ObjC_source.h"
#include "RuntimeConfigNeededException.h"
#include "java/lang/Throwable.h"
#include "java/util/Properties.h"

#if !__has_feature(objc_arc)
#error "AGEPolicyIncompatibilityException must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreAGEPolicyIncompatibilityException ()

/*!
 @brief Obtiene el c&oacute;digo del mensaje que se debe mostrar a un usuario para una
  operaci&oacute;n.
 @param operation C &oacute; digo de operaci &oacute; n.
 @return Mensaje que mostrar al usuario.
 */
+ (NSString *)getMessageCodeWithInt:(jint)operation;

@end

/*!
 @brief Serial Id.
 */
inline jlong EsGobAfirmaCoreAGEPolicyIncompatibilityException_get_serialVersionUID(void);
#define EsGobAfirmaCoreAGEPolicyIncompatibilityException_serialVersionUID 8278487852684799319LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreAGEPolicyIncompatibilityException, serialVersionUID, jlong)

inline NSString *EsGobAfirmaCoreAGEPolicyIncompatibilityException_get_EXTRA_PARAM_NEEDED(void);
static NSString *EsGobAfirmaCoreAGEPolicyIncompatibilityException_EXTRA_PARAM_NEEDED = @"avoidAGEPolicyIncompatibilities";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, EXTRA_PARAM_NEEDED, NSString *)

__attribute__((unused)) static NSString *EsGobAfirmaCoreAGEPolicyIncompatibilityException_getMessageCodeWithInt_(jint operation);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/AGEPolicyIncompatibilityException.java"

NSString *EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_SIGN_MSG_CODE = @"agePolicyIncompatibilitySign";
NSString *EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_COSIGN_MSG_CODE = @"agePolicyIncompatibilityCosign";
NSString *EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_COUNTERSIGN_MSG_CODE = @"agePolicyIncompatibilityCounterSign";


#line 18
@implementation EsGobAfirmaCoreAGEPolicyIncompatibilityException


#line 40
- (instancetype)initWithNSString:(NSString *)message {
  EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_(self, message);
  return self;
}


#line 50
- (instancetype)initWithNSString:(NSString *)message
                         withInt:(jint)operation {
  EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_(self, message, operation);
  return self;
}


#line 59
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}


#line 70
- (instancetype)initWithNSString:(NSString *)message
                         withInt:(jint)operation
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_withJavaLangThrowable_(self, message, operation, cause);
  return self;
}


#line 74
- (void)prepareOperationWithConfirmationWithJavaUtilProperties:(JavaUtilProperties *)extraParams {
  
#line 76
  if (extraParams != nil) {
    (void) [extraParams removeWithId:@"policyIdentifier"];
    (void) [extraParams removeWithId:@"policyIdentifierHash"];
    (void) [extraParams removeWithId:@"policyIdentifierHashAlgorithm"];
    (void) [extraParams removeWithId:@"policyDescription"];
    (void) [extraParams removeWithId:@"policyQualifier"];
  }
}


#line 91
+ (NSString *)getMessageCodeWithInt:(jint)operation {
  return EsGobAfirmaCoreAGEPolicyIncompatibilityException_getMessageCodeWithInt_(operation);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withInt:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[3].selector = @selector(initWithNSString:withInt:withJavaLangThrowable:);
  methods[4].selector = @selector(prepareOperationWithConfirmationWithJavaUtilProperties:);
  methods[5].selector = @selector(getMessageCodeWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaCoreAGEPolicyIncompatibilityException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "REQUESTOR_SIGN_MSG_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "REQUESTOR_COSIGN_MSG_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "REQUESTOR_COUNTERSIGN_MSG_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "EXTRA_PARAM_NEEDED", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "OP_SIGN", "I", .constantValue.asInt = EsGobAfirmaCoreAGEPolicyIncompatibilityException_OP_SIGN, 0x19, -1, -1, -1, -1 },
    { "OP_COSIGN", "I", .constantValue.asInt = EsGobAfirmaCoreAGEPolicyIncompatibilityException_OP_COSIGN, 0x19, -1, -1, -1, -1 },
    { "OP_COUNTERSIGN", "I", .constantValue.asInt = EsGobAfirmaCoreAGEPolicyIncompatibilityException_OP_COUNTERSIGN, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;I", "LNSString;LJavaLangThrowable;", "LNSString;ILJavaLangThrowable;", "prepareOperationWithConfirmation", "LJavaUtilProperties;", "getMessageCode", "I", &EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_SIGN_MSG_CODE, &EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_COSIGN_MSG_CODE, &EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_COUNTERSIGN_MSG_CODE, &EsGobAfirmaCoreAGEPolicyIncompatibilityException_EXTRA_PARAM_NEEDED };
  static const J2ObjcClassInfo _EsGobAfirmaCoreAGEPolicyIncompatibilityException = { "AGEPolicyIncompatibilityException", "es.gob.afirma.core", ptrTable, methods, fields, 7, 0x1, 6, 8, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreAGEPolicyIncompatibilityException;
}

@end


#line 40
void EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_(EsGobAfirmaCoreAGEPolicyIncompatibilityException *self, NSString *message) {
  EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_(self, message, EsGobAfirmaCoreAGEPolicyIncompatibilityException_OP_SIGN);
}


#line 40
EsGobAfirmaCoreAGEPolicyIncompatibilityException *new_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_, message)
}


#line 40
EsGobAfirmaCoreAGEPolicyIncompatibilityException *create_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_, message)
}


#line 50
void EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_(EsGobAfirmaCoreAGEPolicyIncompatibilityException *self, NSString *message, jint operation) {
  EsGobAfirmaCoreCustomRuntimeConfigNeededException_initWithNSString_withEsGobAfirmaCoreRuntimeConfigNeededException_RequestType_withNSString_withNSString_(self, message, JreLoadEnum(EsGobAfirmaCoreRuntimeConfigNeededException_RequestType, CONFIRM), EsGobAfirmaCoreAGEPolicyIncompatibilityException_getMessageCodeWithInt_(operation), EsGobAfirmaCoreAGEPolicyIncompatibilityException_EXTRA_PARAM_NEEDED);
}


#line 50
EsGobAfirmaCoreAGEPolicyIncompatibilityException *new_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_(NSString *message, jint operation) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_withInt_, message, operation)
}


#line 50
EsGobAfirmaCoreAGEPolicyIncompatibilityException *create_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_(NSString *message, jint operation) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_withInt_, message, operation)
}


#line 59
void EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withJavaLangThrowable_(EsGobAfirmaCoreAGEPolicyIncompatibilityException *self, NSString *message, JavaLangThrowable *cause) {
  EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_withJavaLangThrowable_(self, message, EsGobAfirmaCoreAGEPolicyIncompatibilityException_OP_SIGN, cause);
}


#line 59
EsGobAfirmaCoreAGEPolicyIncompatibilityException *new_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_withJavaLangThrowable_, message, cause)
}


#line 59
EsGobAfirmaCoreAGEPolicyIncompatibilityException *create_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_withJavaLangThrowable_, message, cause)
}


#line 70
void EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_withJavaLangThrowable_(EsGobAfirmaCoreAGEPolicyIncompatibilityException *self, NSString *message, jint operation, JavaLangThrowable *cause) {
  EsGobAfirmaCoreCustomRuntimeConfigNeededException_initWithNSString_withEsGobAfirmaCoreRuntimeConfigNeededException_RequestType_withNSString_withNSString_withJavaLangThrowable_(self, message, JreLoadEnum(EsGobAfirmaCoreRuntimeConfigNeededException_RequestType, CONFIRM), EsGobAfirmaCoreAGEPolicyIncompatibilityException_getMessageCodeWithInt_(operation), EsGobAfirmaCoreAGEPolicyIncompatibilityException_EXTRA_PARAM_NEEDED, cause);
}


#line 70
EsGobAfirmaCoreAGEPolicyIncompatibilityException *new_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_withJavaLangThrowable_(NSString *message, jint operation, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_withInt_withJavaLangThrowable_, message, operation, cause)
}


#line 70
EsGobAfirmaCoreAGEPolicyIncompatibilityException *create_EsGobAfirmaCoreAGEPolicyIncompatibilityException_initWithNSString_withInt_withJavaLangThrowable_(NSString *message, jint operation, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreAGEPolicyIncompatibilityException, initWithNSString_withInt_withJavaLangThrowable_, message, operation, cause)
}


#line 91
NSString *EsGobAfirmaCoreAGEPolicyIncompatibilityException_getMessageCodeWithInt_(jint operation) {
  EsGobAfirmaCoreAGEPolicyIncompatibilityException_initialize();
  
#line 92
  NSString *msg;
  switch (operation) {
    case EsGobAfirmaCoreAGEPolicyIncompatibilityException_OP_COSIGN:
    msg = EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_COSIGN_MSG_CODE;
    break;
    case EsGobAfirmaCoreAGEPolicyIncompatibilityException_OP_COUNTERSIGN:
    msg = EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_COUNTERSIGN_MSG_CODE;
    break;
    default:
    msg = EsGobAfirmaCoreAGEPolicyIncompatibilityException_REQUESTOR_SIGN_MSG_CODE;
    break;
  }
  return msg;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreAGEPolicyIncompatibilityException)

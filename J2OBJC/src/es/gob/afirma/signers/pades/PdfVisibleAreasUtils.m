//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/PdfVisibleAreasUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/Element.h"
#include "com/aowagie/text/ExceptionConverter.h"
#include "com/aowagie/text/Font.h"
#include "com/aowagie/text/Image.h"
#include "com/aowagie/text/Phrase.h"
#include "com/aowagie/text/Rectangle.h"
#include "com/aowagie/text/pdf/BaseFont.h"
#include "com/aowagie/text/pdf/ByteBuffer.h"
#include "com/aowagie/text/pdf/ColumnText.h"
#include "com/aowagie/text/pdf/PdfSignatureAppearance.h"
#include "com/aowagie/text/pdf/PdfStamper.h"
#include "com/aowagie/text/pdf/PdfTemplate.h"
#include "com/aowagie/text/pdf/PdfWriter.h"
#include "es/gob/afirma/core/misc/AOUtil.h"
#include "es/gob/afirma/core/misc/Platform.h"
#include "es/gob/afirma/signers/pades/PdfTextMask.h"
#include "es/gob/afirma/signers/pades/PdfUtil.h"
#include "es/gob/afirma/signers/pades/PdfVisibleAreasUtils.h"
#include "es/gob/afirma/signers/pades/common/PdfExtraParams.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/math/BigInteger.h"
#include "java/security/cert/X509Certificate.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "javax/security/auth/x500/X500Principal.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/signers/pades/PdfVisibleAreasUtils must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaSignersPadesPdfVisibleAreasUtils ()

- (instancetype)init;

+ (ComAowagieTextPdfBaseFont *)getBaseFontWithInt:(jint)fontFamily
                                      withBoolean:(jboolean)pdfa;

/*!
 @brief Carga una de las fuentes incluidas en la biblioteca y la marca para que se incruste en el PDF.
 @param fontFamily Familia de fuentes.
 @return Fuente de letra.
 @throw DocumentExceptionCuando falla la composici&oacute;n de la fuente.
 @throw IOExceptionCuando falla la carga de la fuente.
 */
+ (ComAowagieTextPdfBaseFont *)loadFontToEmbedWithInt:(jint)fontFamily;

/*!
 @brief Compone una de las fuentes por defecto de PDF.
 @param fontFamily Familia de fuentes.
 @return Fuente de letra.
 @throw DocumentExceptionCuando falla la composici&oacute;n de la fuente.
 @throw IOExceptionCuando falla la carga de la fuente.
 */
+ (ComAowagieTextPdfBaseFont *)loadInternalFontWithInt:(jint)fontFamily;

/*!
 @brief Genera una mascara de ofuscacion si se solicita ofuscar.
 @param obfuscate Indica si se debe ofuscar texto o no.
 @param maskConfig Configuraci &oacute; n de la mascara a aplicar o <code>null</code>  si se quiere usar la por defecto.
 @return M&aacute;scara de ofuscaci&oacute;n.
 */
+ (EsGobAfirmaSignersPadesPdfTextMask *)prepareMaskWithBoolean:(jboolean)obfuscate
                                                  withNSString:(NSString *)maskConfig;

/*!
 @brief Imprime un texto en una plantilla PDF.
 @param template_ Plantilla en la que imprimir el texto.
 @param text Texto.
 @param font Fuente que aplicar.
 @param dataRect Espacio que debe ocupar la firma.
 @throw DocumentExceptionCuando ocurre un error al imprimir el texto.
 */
+ (void)printTextWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)template_
                                     withNSString:(NSString *)text
                           withComAowagieTextFont:(ComAowagieTextFont *)font
                      withComAowagieTextRectangle:(ComAowagieTextRectangle *)dataRect;

/*!
 @brief Fits the text to some rectangle adjusting the font size as needed.M&eacute;todo copiado de iText.
 @param font the font to use
 @param text the text
 @param rect the rectangle where the text must fit
 @param maxFontSize the maximum font size
 @param runDirection the run direction
 @return the calculated font size that makes the text fit.
 @author Paulo Soares
 */
+ (jfloat)fitTextWithComAowagieTextFont:(ComAowagieTextFont *)font
                           withNSString:(NSString *)text
            withComAowagieTextRectangle:(ComAowagieTextRectangle *)rect
                              withFloat:(jfloat)maxFontSize
                                withInt:(jint)runDirection;

/*!
 @brief Aplica el algoritmo de ofuscaci&oacute;n sobre un fragmento determinado
  de un texto.
 @param text Array de caracteres del texto.
 @param pos Posici &oacute; n del texto a partir de la cual aplicar el  algoritmo de ofuscaci &oacute; n.
 @param length Longitud de la subcadena sobre la que hay que aplicar la  ofuscaci
  &oacute; n.
 @param mask Configuraci &oacute; n con la m &aacute; scara a aplicar.
 */
+ (void)obfuscateWithCharArray:(IOSCharArray *)text
                       withInt:(jint)pos
                       withInt:(jint)length
withEsGobAfirmaSignersPadesPdfTextMask:(EsGobAfirmaSignersPadesPdfTextMask *)mask;

/*!
 @brief Cuenta el n&uacute;mero de caracteres en claro que admite la
  m&aacute;scara.
 @param positions Posiciones contempladas por la m &aacute; scara.
 @return N&uacute;mero de caracteres que la m&aacute;scara no
  ofuscar&aacute;.
 */
+ (jint)countPlainPositionsWithBooleanArray:(IOSBooleanArray *)positions;

/*!
 @brief Cuenta el n&uacute;mero de d&iacute;gitos de una cadena de texto.
 @param text Cadena de texto.
 @return N&uacute;mero de d&iacute;gitos en la cadena.
 */
+ (jint)countDigitsWithCharArray:(IOSCharArray *)text;

@end

inline JavaUtilLoggingLogger *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LOGGER, JavaUtilLoggingLogger *)

inline jint EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_DEFAULT_LAYER_2_FONT_SIZE(void);
#define EsGobAfirmaSignersPadesPdfVisibleAreasUtils_DEFAULT_LAYER_2_FONT_SIZE 12
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, DEFAULT_LAYER_2_FONT_SIZE, jint)

inline jint EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_UNDEFINED(void);
#define EsGobAfirmaSignersPadesPdfVisibleAreasUtils_UNDEFINED -1
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, UNDEFINED, jint)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_BLACK(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_BLACK = @"black";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, BLACK, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_DELIMITER(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DELIMITER = @"$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_DELIMITER, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_DATE_DELIMITER(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_DELIMITER = @"=";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_DATE_DELIMITER, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_SUBJECTDN(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SUBJECTDN = @"$$SUBJECTDN$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_SUBJECTDN, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_ISSUERCN(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_ISSUERCN = @"$$ISSUERCN$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_ISSUERCN, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_CERTSERIAL(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_CERTSERIAL = @"$$CERTSERIAL$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_CERTSERIAL, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_GIVENNAME(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_GIVENNAME = @"$$GIVENNAME$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_GIVENNAME, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_SURNAME(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SURNAME = @"$$SURNAME$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_SURNAME, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_ORGANIZATION(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_ORGANIZATION = @"$$ORGANIZATION$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_ORGANIZATION, NSString *)

inline NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_LAYERTEXT_TAG_CONTACT(void);
static NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_CONTACT = @"$$CONTACT$$";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, LAYERTEXT_TAG_CONTACT, NSString *)

/*!
 @brief Margen de la firmas visibles PDF rotadas.
 */
inline jfloat EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_MARGIN(void);
#define EsGobAfirmaSignersPadesPdfVisibleAreasUtils_MARGIN 2.0f
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, MARGIN, jfloat)

inline id<JavaUtilMap> EsGobAfirmaSignersPadesPdfVisibleAreasUtils_get_COLORS(void);
static id<JavaUtilMap> EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, COLORS, id<JavaUtilMap>)

__attribute__((unused)) static void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_init(EsGobAfirmaSignersPadesPdfVisibleAreasUtils *self);

__attribute__((unused)) static EsGobAfirmaSignersPadesPdfVisibleAreasUtils *new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaSignersPadesPdfVisibleAreasUtils *create_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_init(void);

__attribute__((unused)) static ComAowagieTextPdfBaseFont *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getBaseFontWithInt_withBoolean_(jint fontFamily, jboolean pdfa);

__attribute__((unused)) static ComAowagieTextPdfBaseFont *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadFontToEmbedWithInt_(jint fontFamily);

__attribute__((unused)) static ComAowagieTextPdfBaseFont *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadInternalFontWithInt_(jint fontFamily);

__attribute__((unused)) static EsGobAfirmaSignersPadesPdfTextMask *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_prepareMaskWithBoolean_withNSString_(jboolean obfuscate, NSString *maskConfig);

__attribute__((unused)) static void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_printTextWithComAowagieTextPdfPdfTemplate_withNSString_withComAowagieTextFont_withComAowagieTextRectangle_(ComAowagieTextPdfPdfTemplate *template_, NSString *text, ComAowagieTextFont *font, ComAowagieTextRectangle *dataRect);

__attribute__((unused)) static jfloat EsGobAfirmaSignersPadesPdfVisibleAreasUtils_fitTextWithComAowagieTextFont_withNSString_withComAowagieTextRectangle_withFloat_withInt_(ComAowagieTextFont *font, NSString *text, ComAowagieTextRectangle *rect, jfloat maxFontSize, jint runDirection);

__attribute__((unused)) static void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithCharArray_withInt_withInt_withEsGobAfirmaSignersPadesPdfTextMask_(IOSCharArray *text, jint pos, jint length, EsGobAfirmaSignersPadesPdfTextMask *mask);

__attribute__((unused)) static jint EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countPlainPositionsWithBooleanArray_(IOSBooleanArray *positions);

__attribute__((unused)) static jint EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countDigitsWithCharArray_(IOSCharArray *text);

@interface EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues : NSObject {
 @public
  jint r_;
  jint g_;
  jint b_;
}

- (instancetype)initWithInt:(jint)red
                    withInt:(jint)green
                    withInt:(jint)blue;

- (jint)getR;

- (jint)getG;

- (jint)getB;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues)

__attribute__((unused)) static void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues *self, jint red, jint green, jint blue);

__attribute__((unused)) static EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues *new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(jint red, jint green, jint blue) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues *create_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(jint red, jint green, jint blue);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/PdfVisibleAreasUtils.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaSignersPadesPdfVisibleAreasUtils)

NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_PREFIX = @"$$SIGNDATE";
NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SUBJECTCN = @"$$SUBJECTCN$$";
NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_REASON = @"$$REASON$$";
NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_LOCATION = @"$$LOCATION$$";


#line 43
@implementation EsGobAfirmaSignersPadesPdfVisibleAreasUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 79
- (instancetype)init {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 94
+ (ComAowagieTextFont *)getFontWithInt:(jint)fontFamily
                               withInt:(jint)fontSize
                               withInt:(jint)fontStyle
                          withNSString:(NSString *)fontColor
                           withBoolean:(jboolean)pdfa {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getFontWithInt_withInt_withInt_withNSString_withBoolean_(fontFamily, fontSize, fontStyle, fontColor, pdfa);
}


#line 154
+ (ComAowagieTextPdfBaseFont *)getBaseFontWithInt:(jint)fontFamily
                                      withBoolean:(jboolean)pdfa {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getBaseFontWithInt_withBoolean_(fontFamily, pdfa);
}


#line 186
+ (ComAowagieTextPdfBaseFont *)loadFontToEmbedWithInt:(jint)fontFamily {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadFontToEmbedWithInt_(fontFamily);
}


#line 210
+ (ComAowagieTextPdfBaseFont *)loadInternalFontWithInt:(jint)fontFamily {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadInternalFontWithInt_(fontFamily);
}


#line 240
+ (NSString *)getLayerTextWithNSString:(NSString *)txt
   withJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert
                  withJavaUtilCalendar:(JavaUtilCalendar *)signDate
                          withNSString:(NSString *)reason
                          withNSString:(NSString *)signatureProductionCity
                          withNSString:(NSString *)signerContact
                           withBoolean:(jboolean)obfuscate
                          withNSString:(NSString *)maskConfig {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getLayerTextWithNSString_withJavaSecurityCertX509Certificate_withJavaUtilCalendar_withNSString_withNSString_withNSString_withBoolean_withNSString_(txt, cert, signDate, reason, signatureProductionCity, signerContact, obfuscate, maskConfig);
}


#line 337
+ (EsGobAfirmaSignersPadesPdfTextMask *)prepareMaskWithBoolean:(jboolean)obfuscate
                                                  withNSString:(NSString *)maskConfig {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_prepareMaskWithBoolean_withNSString_(obfuscate, maskConfig);
}


#line 392
+ (ComAowagieTextImage *)buildRotatedSignatureImageWithComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stamper
                                       withComAowagieTextPdfPdfSignatureAppearance:(ComAowagieTextPdfPdfSignatureAppearance *)appearance
                                                       withComAowagieTextRectangle:(ComAowagieTextRectangle *)rubricRect
                                                                           withInt:(jint)degrees
                                                           withComAowagieTextImage:(ComAowagieTextImage *)rubricImg {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_buildRotatedSignatureImageWithComAowagieTextPdfPdfStamper_withComAowagieTextPdfPdfSignatureAppearance_withComAowagieTextRectangle_withInt_withComAowagieTextImage_(stamper, appearance, rubricRect, degrees, rubricImg);
}


#line 509
+ (void)printTextWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)template_
                                     withNSString:(NSString *)text
                           withComAowagieTextFont:(ComAowagieTextFont *)font
                      withComAowagieTextRectangle:(ComAowagieTextRectangle *)dataRect {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_printTextWithComAowagieTextPdfPdfTemplate_withNSString_withComAowagieTextFont_withComAowagieTextRectangle_(template_, text, font, dataRect);
}


#line 531
+ (jfloat)fitTextWithComAowagieTextFont:(ComAowagieTextFont *)font
                           withNSString:(NSString *)text
            withComAowagieTextRectangle:(ComAowagieTextRectangle *)rect
                              withFloat:(jfloat)maxFontSize
                                withInt:(jint)runDirection {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_fitTextWithComAowagieTextFont_withNSString_withComAowagieTextRectangle_withFloat_withInt_(font, text, rect, maxFontSize, runDirection);
}


#line 593
+ (ComAowagieTextRectangle *)getSignaturePositionOnPageWithJavaUtilProperties:(JavaUtilProperties *)extraParams {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getSignaturePositionOnPageWithJavaUtilProperties_(extraParams);
}


#line 606
+ (jboolean)isVisibleSignatureWithJavaUtilProperties:(JavaUtilProperties *)extraParams {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_isVisibleSignatureWithJavaUtilProperties_(extraParams);
}


#line 634
+ (NSString *)obfuscateWithNSString:(NSString *)text
withEsGobAfirmaSignersPadesPdfTextMask:(EsGobAfirmaSignersPadesPdfTextMask *)mask {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithNSString_withEsGobAfirmaSignersPadesPdfTextMask_(text, mask);
}


#line 679
+ (void)obfuscateWithCharArray:(IOSCharArray *)text
                       withInt:(jint)pos
                       withInt:(jint)length
withEsGobAfirmaSignersPadesPdfTextMask:(EsGobAfirmaSignersPadesPdfTextMask *)mask {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithCharArray_withInt_withInt_withEsGobAfirmaSignersPadesPdfTextMask_(text, pos, length, mask);
}


#line 746
+ (jint)countPlainPositionsWithBooleanArray:(IOSBooleanArray *)positions {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countPlainPositionsWithBooleanArray_(positions);
}


#line 761
+ (jint)countDigitsWithCharArray:(IOSCharArray *)text {
  return EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countDigitsWithCharArray_(text);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextFont;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfBaseFont;", 0xa, 2, 3, 4, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfBaseFont;", 0xa, 5, 6, 4, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfBaseFont;", 0xa, 7, 6, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaSignersPadesPdfTextMask;", 0xa, 10, 11, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x8, 12, 13, 4, -1, -1, -1 },
    { NULL, "V", 0xa, 14, 15, 16, -1, -1, -1 },
    { NULL, "F", 0xa, 17, 18, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextRectangle;", 0x8, 19, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 21, 20, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 22, 23, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 22, 24, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 25, 26, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 27, 28, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getFontWithInt:withInt:withInt:withNSString:withBoolean:);
  methods[2].selector = @selector(getBaseFontWithInt:withBoolean:);
  methods[3].selector = @selector(loadFontToEmbedWithInt:);
  methods[4].selector = @selector(loadInternalFontWithInt:);
  methods[5].selector = @selector(getLayerTextWithNSString:withJavaSecurityCertX509Certificate:withJavaUtilCalendar:withNSString:withNSString:withNSString:withBoolean:withNSString:);
  methods[6].selector = @selector(prepareMaskWithBoolean:withNSString:);
  methods[7].selector = @selector(buildRotatedSignatureImageWithComAowagieTextPdfPdfStamper:withComAowagieTextPdfPdfSignatureAppearance:withComAowagieTextRectangle:withInt:withComAowagieTextImage:);
  methods[8].selector = @selector(printTextWithComAowagieTextPdfPdfTemplate:withNSString:withComAowagieTextFont:withComAowagieTextRectangle:);
  methods[9].selector = @selector(fitTextWithComAowagieTextFont:withNSString:withComAowagieTextRectangle:withFloat:withInt:);
  methods[10].selector = @selector(getSignaturePositionOnPageWithJavaUtilProperties:);
  methods[11].selector = @selector(isVisibleSignatureWithJavaUtilProperties:);
  methods[12].selector = @selector(obfuscateWithNSString:withEsGobAfirmaSignersPadesPdfTextMask:);
  methods[13].selector = @selector(obfuscateWithCharArray:withInt:withInt:withEsGobAfirmaSignersPadesPdfTextMask:);
  methods[14].selector = @selector(countPlainPositionsWithBooleanArray:);
  methods[15].selector = @selector(countDigitsWithCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "DEFAULT_LAYER_2_FONT_SIZE", "I", .constantValue.asInt = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_DEFAULT_LAYER_2_FONT_SIZE, 0x1a, -1, -1, -1, -1 },
    { "UNDEFINED", "I", .constantValue.asInt = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_UNDEFINED, 0x1a, -1, -1, -1, -1 },
    { "BLACK", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "LAYERTEXT_TAG_DELIMITER", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "LAYERTEXT_TAG_DATE_PREFIX", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 32, -1, -1 },
    { "LAYERTEXT_TAG_DATE_DELIMITER", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "LAYERTEXT_TAG_SUBJECTCN", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 34, -1, -1 },
    { "LAYERTEXT_TAG_SUBJECTDN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "LAYERTEXT_TAG_ISSUERCN", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "LAYERTEXT_TAG_CERTSERIAL", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "LAYERTEXT_TAG_GIVENNAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "LAYERTEXT_TAG_SURNAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
    { "LAYERTEXT_TAG_ORGANIZATION", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 40, -1, -1 },
    { "LAYERTEXT_TAG_REASON", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 41, -1, -1 },
    { "LAYERTEXT_TAG_LOCATION", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 42, -1, -1 },
    { "LAYERTEXT_TAG_CONTACT", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 43, -1, -1 },
    { "MARGIN", "F", .constantValue.asFloat = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_MARGIN, 0x1a, -1, -1, -1, -1 },
    { "COLORS", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 44, 45, -1 },
  };
  static const void *ptrTable[] = { "getFont", "IIILNSString;Z", "getBaseFont", "IZ", "LComAowagieTextDocumentException;LJavaIoIOException;", "loadFontToEmbed", "I", "loadInternalFont", "getLayerText", "LNSString;LJavaSecurityCertX509Certificate;LJavaUtilCalendar;LNSString;LNSString;LNSString;ZLNSString;", "prepareMask", "ZLNSString;", "buildRotatedSignatureImage", "LComAowagieTextPdfPdfStamper;LComAowagieTextPdfPdfSignatureAppearance;LComAowagieTextRectangle;ILComAowagieTextImage;", "printText", "LComAowagieTextPdfPdfTemplate;LNSString;LComAowagieTextFont;LComAowagieTextRectangle;", "LComAowagieTextDocumentException;", "fitText", "LComAowagieTextFont;LNSString;LComAowagieTextRectangle;FI", "getSignaturePositionOnPage", "LJavaUtilProperties;", "isVisibleSignature", "obfuscate", "LNSString;LEsGobAfirmaSignersPadesPdfTextMask;", "[CIILEsGobAfirmaSignersPadesPdfTextMask;", "countPlainPositions", "[Z", "countDigits", "[C", &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_BLACK, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DELIMITER, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_PREFIX, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_DELIMITER, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SUBJECTCN, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SUBJECTDN, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_ISSUERCN, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_CERTSERIAL, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_GIVENNAME, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SURNAME, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_ORGANIZATION, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_REASON, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_LOCATION, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_CONTACT, &EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS, "Ljava/util/Map<Ljava/lang/String;Les/gob/afirma/signers/pades/PdfVisibleAreasUtils$ColorValues;>;", "LEsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues;" };
  static const J2ObjcClassInfo _EsGobAfirmaSignersPadesPdfVisibleAreasUtils = { "PdfVisibleAreasUtils", "es.gob.afirma.signers.pades", ptrTable, methods, fields, 7, 0x11, 16, 19, -1, 46, -1, -1, -1 };
  return &_EsGobAfirmaSignersPadesPdfVisibleAreasUtils;
}

+ (void)initialize {
  if (self == [EsGobAfirmaSignersPadesPdfVisibleAreasUtils class]) {
    EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 45
    @"es.gob.afirma");
    EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS = new_JavaUtilHashMap_initWithInt_(
#line 68
    7);
    {
      
#line 70
      (void) [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS putWithId:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_BLACK withId:new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(0, 0, 0)];
      (void) [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS putWithId:@"white" withId:new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(255, 255, 255)];
      (void) [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS putWithId:@"lightGray" withId:new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(192, 192, 192)];
      (void) [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS putWithId:@"gray" withId:new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(128, 128, 128)];
      (void) [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS putWithId:@"darkGray" withId:new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(64, 64, 64)];
      (void) [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS putWithId:@"red" withId:new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(255, 0, 0)];
      (void) [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS putWithId:@"pink" withId:new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(255, 175, 175)];
    }
    J2OBJC_SET_INITIALIZED(EsGobAfirmaSignersPadesPdfVisibleAreasUtils)
  }
}

@end


#line 79
void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_init(EsGobAfirmaSignersPadesPdfVisibleAreasUtils *self) {
  NSObject_init(self);
}


#line 79
EsGobAfirmaSignersPadesPdfVisibleAreasUtils *new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, init)
}


#line 79
EsGobAfirmaSignersPadesPdfVisibleAreasUtils *create_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils, init)
}


#line 94
ComAowagieTextFont *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getFontWithInt_withInt_withInt_withNSString_withBoolean_(jint fontFamily, jint fontSize, jint fontStyle, NSString *fontColor, jboolean pdfa) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 100
  jint family = fontFamily == EsGobAfirmaSignersPadesPdfVisibleAreasUtils_UNDEFINED ? ComAowagieTextFont_COURIER : fontFamily;
  jint size = fontSize == EsGobAfirmaSignersPadesPdfVisibleAreasUtils_UNDEFINED ? EsGobAfirmaSignersPadesPdfVisibleAreasUtils_DEFAULT_LAYER_2_FONT_SIZE : fontSize;
  jint style = fontStyle == EsGobAfirmaSignersPadesPdfVisibleAreasUtils_UNDEFINED ? ComAowagieTextFont_NORMAL : fontStyle;
  
#line 104
  ComAowagieTextPdfBaseFont *baseFont;
  @try {
    baseFont = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getBaseFontWithInt_withBoolean_(fontFamily, pdfa);
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER)) warningWithNSString:JreStrcat("$@", @"Error construyendo la fuente de letra para la firma visible PDF, se usara la por defecto y el PDF no sera compatible PDF/A: ",
#line 110
    e)];
    
#line 113
    return new_ComAowagieTextFont_initWithInt_withFloat_withInt_withHarmonyJavaAwtColor_(family, size, style, nil);
  }
  
#line 116
  NSString *colorName = fontColor != nil ? [fontColor lowercaseString] : EsGobAfirmaSignersPadesPdfVisibleAreasUtils_BLACK;
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues *cv = [((id<JavaUtilMap>) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS)) getWithId:colorName] != nil ? [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS getWithId:colorName] : [EsGobAfirmaSignersPadesPdfVisibleAreasUtils_COLORS getWithId:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_BLACK];
  
#line 119
  @try {
    IOSClass *colorClass;
    if (EsGobAfirmaCoreMiscPlatform_getOS() == JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, ANDROID) || EsGobAfirmaCoreMiscPlatform_getOS() == JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, OTHER)) {
      colorClass = IOSClass_forName_(@"harmony.java.awt.Color");
    }
    else {
      colorClass = IOSClass_forName_(@"java.awt.Color");
    }
    id color = [((JavaLangReflectConstructor *) nil_chk(([((IOSClass *) nil_chk(colorClass)) getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(JavaLangInteger, TYPE), JreLoadStatic(JavaLangInteger, TYPE), JreLoadStatic(JavaLangInteger, TYPE) } count:3 type:IOSClass_class_()]]))) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(
#line 132
    [cv getR]), JavaLangInteger_valueOfWithInt_(
#line 133
    [cv getG]), JavaLangInteger_valueOfWithInt_(
#line 134
    [cv getB]) } count:3 type:NSObject_class_()]];
    
#line 140
    return [((JavaLangReflectConstructor *) nil_chk(([ComAowagieTextFont_class_() getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){
#line 141
      ComAowagieTextPdfBaseFont_class_(), JreLoadStatic(JavaLangFloat, TYPE), JreLoadStatic(JavaLangInteger, TYPE),
#line 144
      colorClass } count:4 type:IOSClass_class_()]]))) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){
#line 145
        baseFont, JavaLangFloat_valueOfWithFloat_(size), JavaLangInteger_valueOfWithInt_(style), color } count:4 type:NSObject_class_()]];
      }
      @catch (JavaLangException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER)) warningWithNSString:JreStrcat("$@", @"Error estableciendo el color del tipo de letra para la firma visible PDF, se usara el por defecto: ",
#line 149
        e)];
        return new_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_withFloat_withInt_withHarmonyJavaAwtColor_(baseFont, size, style, nil);
      }
    }

ComAowagieTextPdfBaseFont *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getBaseFontWithInt_withBoolean_(jint fontFamily, jboolean pdfa) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  ComAowagieTextPdfBaseFont *font;
  
#line 160
  if (pdfa) {
    @try {
      font = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadFontToEmbedWithInt_(fontFamily);
    }
    @catch (
#line 166
    JavaLangThrowable *e) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:
#line 168
      @"No se ha podido cargar la fuente de letra para incrustar. Puede que el resultado no sea un PDF/A" withJavaLangThrowable:
#line 169
      e];
      font = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadInternalFontWithInt_(fontFamily);
    }
  }
  else {
    font = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadInternalFontWithInt_(fontFamily);
  }
  return font;
}


#line 186
ComAowagieTextPdfBaseFont *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadFontToEmbedWithInt_(jint fontFamily) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 187
  ComAowagieTextPdfBaseFont *font;
  switch (fontFamily) {
    case ComAowagieTextFont_HELVETICA:
    font = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(@"/fonts/helvetica.ttf", ComAowagieTextPdfBaseFont_IDENTITY_H, ComAowagieTextPdfBaseFont_EMBEDDED);
    break;
    case ComAowagieTextFont_TIMES_ROMAN:
    font = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(@"/fonts/times.ttf", ComAowagieTextPdfBaseFont_IDENTITY_H, ComAowagieTextPdfBaseFont_EMBEDDED);
    break;
    case ComAowagieTextFont_COURIER:
    default:
    font = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(@"/fonts/courier.ttf", ComAowagieTextPdfBaseFont_IDENTITY_H, ComAowagieTextPdfBaseFont_EMBEDDED);
  }
  [((ComAowagieTextPdfBaseFont *) nil_chk(font)) setSubsetWithBoolean:false];
  return font;
}


#line 210
ComAowagieTextPdfBaseFont *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_loadInternalFontWithInt_(jint fontFamily) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 211
  ComAowagieTextPdfBaseFont *font;
  switch (fontFamily) {
    case ComAowagieTextFont_HELVETICA:
    font = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(ComAowagieTextPdfBaseFont_HELVETICA, @"", ComAowagieTextPdfBaseFont_NOT_EMBEDDED);
    break;
    case ComAowagieTextFont_TIMES_ROMAN:
    font = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(ComAowagieTextPdfBaseFont_TIMES_ROMAN, @"", ComAowagieTextPdfBaseFont_NOT_EMBEDDED);
    break;
    case ComAowagieTextFont_COURIER:
    default:
    font = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(ComAowagieTextPdfBaseFont_COURIER, @"", ComAowagieTextPdfBaseFont_NOT_EMBEDDED);
  }
  return font;
}


#line 240
NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getLayerTextWithNSString_withJavaSecurityCertX509Certificate_withJavaUtilCalendar_withNSString_withNSString_withNSString_withBoolean_withNSString_(NSString *txt, JavaSecurityCertX509Certificate *cert, JavaUtilCalendar *signDate, NSString *reason, NSString *signatureProductionCity, NSString *signerContact, jboolean obfuscate, NSString *maskConfig) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 249
  if (txt == nil) {
    return nil;
  }
  
#line 253
  NSString *ret = txt;
  
#line 256
  if (cert != nil) {
    
#line 258
    EsGobAfirmaSignersPadesPdfTextMask *mask = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_prepareMaskWithBoolean_withNSString_(obfuscate, maskConfig);
    NSString *cn = EsGobAfirmaCoreMiscAOUtil_getCNWithJavaSecurityCertX509Certificate_(cert);
    if (cn != nil && mask != nil) {
      cn = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithNSString_withEsGobAfirmaSignersPadesPdfTextMask_(cn, mask);
    }
    ret = [((NSString *) nil_chk([((NSString *) nil_chk([ret java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SUBJECTCN withSequence:cn])) java_replace:
#line 264
    EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_ISSUERCN withSequence:EsGobAfirmaCoreMiscAOUtil_getCNWithNSString_([((JavaxSecurityAuthX500X500Principal *) nil_chk([cert getIssuerX500Principal])) getName])])) java_replace:
#line 265
    EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_CERTSERIAL withSequence:[((JavaMathBigInteger *) nil_chk([cert getSerialNumber])) description]];
    
#line 268
    NSString *subjectPrincipal = [((JavaxSecurityAuthX500X500Principal *) nil_chk([cert getSubjectX500Principal])) description];
    if (subjectPrincipal != nil && mask != nil) {
      subjectPrincipal = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithNSString_withEsGobAfirmaSignersPadesPdfTextMask_(subjectPrincipal, mask);
    }
    ret = [((NSString *) nil_chk(ret)) java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SUBJECTDN withSequence:subjectPrincipal];
    
#line 275
    NSString *givenName = EsGobAfirmaCoreMiscAOUtil_getRDNvalueFromLdapNameWithNSString_withNSString_(@"GIVENNAME", subjectPrincipal);
    ret = [((NSString *) nil_chk(ret)) java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_GIVENNAME withSequence:givenName != nil ? givenName : @""];
    
#line 279
    NSString *surname = EsGobAfirmaCoreMiscAOUtil_getRDNvalueFromLdapNameWithNSString_withNSString_(@"SURNAME", subjectPrincipal);
    if (subjectPrincipal != nil && obfuscate) {
      subjectPrincipal = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithNSString_withEsGobAfirmaSignersPadesPdfTextMask_(subjectPrincipal, mask);
    }
    ret = [((NSString *) nil_chk(ret)) java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_SURNAME withSequence:surname != nil ? surname : @""];
    
#line 286
    NSString *organization = EsGobAfirmaCoreMiscAOUtil_getRDNvalueFromLdapNameWithNSString_withNSString_(@"o", subjectPrincipal);
    ret = [((NSString *) nil_chk(ret)) java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_ORGANIZATION withSequence:organization != nil ? organization : @""];
  }
  
#line 291
  ret = [((NSString *) nil_chk(ret)) java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_REASON withSequence:reason != nil ? reason : @""];
  ret = [((NSString *) nil_chk(ret)) java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_LOCATION withSequence:signatureProductionCity != nil ? signatureProductionCity : @""];
  ret = [((NSString *) nil_chk(ret)) java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_CONTACT withSequence:signerContact != nil ? signerContact : @""];
  
#line 296
  while ([((NSString *) nil_chk(ret)) java_contains:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_PREFIX]) {
    jint strIdx = [ret java_indexOfString:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_PREFIX];
    NSString *sdTag = [ret java_substring:
#line 299
    strIdx endIndex:
#line 300
    [ret java_indexOfString:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DELIMITER fromIndex:strIdx + [((NSString *) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_PREFIX)) java_length]] + [((NSString *) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DELIMITER)) java_length]];
    
#line 302
    NSString *date;
    JavaUtilDate *tbpDate = signDate != nil ? [signDate getTime] : new_JavaUtilDate_init();
    if ([((NSString *) nil_chk(sdTag)) java_contains:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_DELIMITER]) {
      NSString *dateFormat = IOSObjectArray_Get(nil_chk([((NSString *) nil_chk([sdTag java_replace:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DELIMITER withSequence:@""])) java_split:EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LAYERTEXT_TAG_DATE_DELIMITER]), 1);
      @try {
        date = [new_JavaTextSimpleDateFormat_initWithNSString_(dateFormat) formatWithJavaUtilDate:
#line 308
        tbpDate];
      }
      @catch (
#line 311
      JavaLangException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER)) warningWithNSString:JreStrcat("$$$@", @"Patron incorrecto para la fecha de firma en la firma visible (",
#line 313
        dateFormat, @"), se usara el por defecto: ", e)];
        
#line 315
        date = [new_JavaTextSimpleDateFormat_init() formatWithJavaUtilDate:
#line 316
        tbpDate];
      }
    }
    else {
      
#line 321
      date = [new_JavaTextSimpleDateFormat_init() formatWithJavaUtilDate:
#line 322
      tbpDate];
    }
    
#line 325
    ret = [ret java_replace:sdTag withSequence:date];
  }
  return ret;
}


#line 337
EsGobAfirmaSignersPadesPdfTextMask *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_prepareMaskWithBoolean_withNSString_(jboolean obfuscate, NSString *maskConfig) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  EsGobAfirmaSignersPadesPdfTextMask *mask = nil;
  if (obfuscate) {
    if (maskConfig != nil) {
      @try {
        mask = EsGobAfirmaSignersPadesPdfTextMask_parseParamWithNSString_(maskConfig);
      }
      @catch (JavaLangException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:@"La mascara de ofuscacion no esta bien definida. Se usara la por defecto" withJavaLangThrowable:e];
      }
    }
    else {
      mask = new_EsGobAfirmaSignersPadesPdfTextMask_init();
    }
  }
  return mask;
}


#line 392
ComAowagieTextImage *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_buildRotatedSignatureImageWithComAowagieTextPdfPdfStamper_withComAowagieTextPdfPdfSignatureAppearance_withComAowagieTextRectangle_withInt_withComAowagieTextImage_(ComAowagieTextPdfPdfStamper *stamper, ComAowagieTextPdfPdfSignatureAppearance *appearance, ComAowagieTextRectangle *rubricRect, jint degrees, ComAowagieTextImage *rubricImg) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 400
  jfloat rubricWidth = [((ComAowagieTextRectangle *) nil_chk(rubricRect)) getWidth];
  jfloat rubricHeight = [rubricRect getHeight];
  
#line 404
  jint rotation = JreIntMod(degrees, 360);
  if (rotation < 0) {
    rotation += 360;
  }
  
#line 420
  jfloat canvasWidth = rotation == 0 || rotation == 180 ? rubricWidth : rubricHeight;
  jfloat canvasHeight = rotation == 0 || rotation == 180 ? rubricHeight : rubricWidth;
  ComAowagieTextPdfPdfTemplate *canvas = ComAowagieTextPdfPdfTemplate_createTemplateWithComAowagieTextPdfPdfWriter_withFloat_withFloat_([((ComAowagieTextPdfPdfStamper *) nil_chk(stamper)) getWriter], canvasWidth, canvasHeight);
  
#line 426
  if (rubricImg != nil) {
    
#line 428
    [rubricImg setInterpolationWithBoolean:true];
    [rubricImg setAbsolutePositionWithFloat:0 withFloat:0];
    
#line 432
    if (rotation == 90 || rotation == 270) {
      jfloat scale_ = JavaLangMath_minWithFloat_withFloat_(rubricHeight / [rubricImg getWidth], rubricWidth / [rubricImg getHeight]);
      jfloat w = [rubricImg getWidth] * scale_;
      jfloat h = [rubricImg getHeight] * scale_;
      jfloat x = (rubricWidth - h) / 2;
      jfloat y = (rubricHeight - w) / 2;
      [((ComAowagieTextPdfPdfTemplate *) nil_chk(canvas)) addImageWithComAowagieTextImage:rubricImg withFloat:w withFloat:0 withFloat:0 withFloat:h withFloat:y withFloat:x];
    }
    else {
      
#line 440
      jfloat scale_ = JavaLangMath_minWithFloat_withFloat_(rubricWidth / [rubricImg getWidth], rubricHeight / [rubricImg getHeight]);
      jfloat w = [rubricImg getWidth] * scale_;
      jfloat h = [rubricImg getHeight] * scale_;
      jfloat x = (rubricWidth - w) / 2;
      jfloat y = (rubricHeight - h) / 2;
      [((ComAowagieTextPdfPdfTemplate *) nil_chk(canvas)) addImageWithComAowagieTextImage:rubricImg withFloat:w withFloat:0 withFloat:0 withFloat:h withFloat:x withFloat:y];
    }
  }
  
#line 450
  if ([((ComAowagieTextPdfPdfSignatureAppearance *) nil_chk(appearance)) getLayer2Text] != nil) {
    
#line 452
    ComAowagieTextFont *f = [appearance getLayer2Font];
    if (f == nil) {
      f = new_ComAowagieTextFont_init();
    }
    ComAowagieTextPdfBaseFont *bf = [f getCalculatedBaseFontWithBoolean:false];
    [((ComAowagieTextPdfPdfTemplate *) nil_chk(canvas)) setFontAndSizeWithComAowagieTextPdfBaseFont:bf withFloat:[f getSize]];
    
#line 459
    ComAowagieTextRectangle *rect = new_ComAowagieTextRectangle_initWithComAowagieTextRectangle_([canvas getBoundingBox]);
    EsGobAfirmaSignersPadesPdfVisibleAreasUtils_printTextWithComAowagieTextPdfPdfTemplate_withNSString_withComAowagieTextFont_withComAowagieTextRectangle_(canvas, [appearance getLayer2Text], f, rect);
  }
  
#line 464
  ComAowagieTextImage *rotatedRubric = ComAowagieTextImage_getInstanceWithComAowagieTextPdfPdfTemplate_(canvas);
  [((ComAowagieTextImage *) nil_chk(rotatedRubric)) setInterpolationWithBoolean:true];
  [rotatedRubric setRotationDegreesWithFloat:rotation];
  [rotatedRubric setAbsolutePositionWithFloat:0 withFloat:0];
  
#line 481
  ComAowagieTextPdfPdfTemplate *rotatedCanvas = ComAowagieTextPdfPdfTemplate_createTemplateWithComAowagieTextPdfPdfWriter_withFloat_withFloat_([stamper getWriter], rubricWidth, rubricHeight);
  {
    ComAowagieTextPdfByteBuffer *actualBuffer =
#line 482
    [((ComAowagieTextPdfPdfTemplate *) nil_chk(canvas)) getInternalBuffer];
    JavaLangThrowable *__primaryException2 = nil;
    
#line 482
    @try {
      ComAowagieTextPdfByteBuffer *rotatedBuffer = [((ComAowagieTextPdfPdfTemplate *) nil_chk(rotatedCanvas)) getInternalBuffer];
      JavaLangThrowable *__primaryException1 = nil;
      @try {
        
#line 484
        [((ComAowagieTextPdfByteBuffer *) nil_chk(rotatedBuffer)) writeWithByteArray:[((ComAowagieTextPdfByteBuffer *) nil_chk(actualBuffer)) toByteArray]];
      }
      @catch (JavaLangThrowable *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (rotatedBuffer != nil) {
          if (__primaryException1 != nil) {
            @try {
              [rotatedBuffer close];
            }
            @catch (JavaLangThrowable *e) {
              [__primaryException1 addSuppressedWithJavaLangThrowable:e];
            }
          }
          else {
            [rotatedBuffer close];
          }
        }
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException2 = e;
      @throw e;
    }
    @finally {
      if (actualBuffer != nil) {
        if (__primaryException2 != nil) {
          @try {
            [actualBuffer close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException2 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [actualBuffer close];
        }
      }
    }
  }
  
#line 488
  [rotatedCanvas reset];
  
#line 491
  [rotatedCanvas addImageWithComAowagieTextImage:rotatedRubric];
  
#line 494
  rotatedRubric = ComAowagieTextImage_getInstanceWithComAowagieTextPdfPdfTemplate_(rotatedCanvas);
  [((ComAowagieTextImage *) nil_chk(rotatedRubric)) setInterpolationWithBoolean:true];
  [rotatedRubric setAbsolutePositionWithFloat:0 withFloat:0];
  
#line 498
  return rotatedRubric;
}


#line 509
void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_printTextWithComAowagieTextPdfPdfTemplate_withNSString_withComAowagieTextFont_withComAowagieTextRectangle_(ComAowagieTextPdfPdfTemplate *template_, NSString *text, ComAowagieTextFont *font, ComAowagieTextRectangle *dataRect) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  ComAowagieTextRectangle *sr = new_ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_MARGIN, EsGobAfirmaSignersPadesPdfVisibleAreasUtils_MARGIN, [((ComAowagieTextRectangle *) nil_chk(dataRect)) getWidth] - EsGobAfirmaSignersPadesPdfVisibleAreasUtils_MARGIN, [dataRect getHeight] - EsGobAfirmaSignersPadesPdfVisibleAreasUtils_MARGIN);
  
#line 513
  jfloat adjustedFontSize = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_fitTextWithComAowagieTextFont_withNSString_withComAowagieTextRectangle_withFloat_withInt_(font, text, sr, [((ComAowagieTextFont *) nil_chk(font)) getSize], ComAowagieTextPdfPdfWriter_RUN_DIRECTION_DEFAULT);
  
#line 515
  ComAowagieTextPdfColumnText *ct = new_ComAowagieTextPdfColumnText_initWithComAowagieTextPdfPdfContentByte_(template_);
  [ct setRunDirectionWithInt:ComAowagieTextPdfPdfWriter_RUN_DIRECTION_DEFAULT];
  [ct setSimpleColumnWithComAowagieTextPhrase:new_ComAowagieTextPhrase_initWithNSString_withComAowagieTextFont_(text, font) withFloat:[sr getLeft] withFloat:[sr getBottom] withFloat:[sr getRight] withFloat:[sr getTop] withFloat:adjustedFontSize withInt:ComAowagieTextElement_ALIGN_LEFT];
  [ct go];
}


#line 531
jfloat EsGobAfirmaSignersPadesPdfVisibleAreasUtils_fitTextWithComAowagieTextFont_withNSString_withComAowagieTextRectangle_withFloat_withInt_(ComAowagieTextFont *font, NSString *text, ComAowagieTextRectangle *rect, jfloat maxFontSize, jint runDirection) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 532
  jfloat maxSize = maxFontSize;
  @try {
    ComAowagieTextPdfColumnText *ct = nil;
    jint status = 0;
    if (maxSize <= 0) {
      jint cr = 0;
      jint lf = 0;
      IOSCharArray *t = [((NSString *) nil_chk(text)) java_toCharArray];
      for (jint k = 0; k < ((IOSCharArray *) nil_chk(t))->size_; ++k) {
        if (IOSCharArray_Get(t, k) == 0x000a) {
          ++lf;
        }
        else
#line 543
        if (IOSCharArray_Get(t, k) == 0x000d) {
          ++cr;
        }
      }
      jint minLines = JavaLangMath_maxWithInt_withInt_(cr, lf) + 1;
      maxSize = JavaLangMath_absWithFloat_([((ComAowagieTextRectangle *) nil_chk(rect)) getHeight]) / minLines - 0.001f;
    }
    [((ComAowagieTextFont *) nil_chk(font)) setSizeWithFloat:maxSize];
    ComAowagieTextPhrase *ph = new_ComAowagieTextPhrase_initWithNSString_withComAowagieTextFont_(text, font);
    ct = new_ComAowagieTextPdfColumnText_initWithComAowagieTextPdfPdfContentByte_(nil);
    [ct setSimpleColumnWithComAowagieTextPhrase:ph withFloat:[((ComAowagieTextRectangle *) nil_chk(rect)) getLeft] withFloat:[rect getBottom] withFloat:[rect getRight] withFloat:[rect getTop] withFloat:maxFontSize withInt:ComAowagieTextElement_ALIGN_LEFT];
    [ct setRunDirectionWithInt:runDirection];
    status = [ct goWithBoolean:true];
    if ((status & ComAowagieTextPdfColumnText_NO_MORE_TEXT) != 0) {
      return maxSize;
    }
    jfloat precision = 0.1f;
    jfloat min = 0;
    jfloat max = maxSize;
    jfloat size = maxSize;
    for (jint k = 0; k < 50; ++k) {
      size = (min + max) / 2;
      ct = new_ComAowagieTextPdfColumnText_initWithComAowagieTextPdfPdfContentByte_(nil);
      [font setSizeWithFloat:size];
      [ct setSimpleColumnWithComAowagieTextPhrase:new_ComAowagieTextPhrase_initWithNSString_withComAowagieTextFont_(text, font) withFloat:[rect getLeft] withFloat:[rect getBottom] withFloat:[rect getRight] withFloat:[rect getTop] withFloat:size withInt:ComAowagieTextElement_ALIGN_LEFT];
      [ct setRunDirectionWithInt:runDirection];
      status = [ct goWithBoolean:true];
      if ((status & ComAowagieTextPdfColumnText_NO_MORE_TEXT) != 0) {
        if (max - min < size * precision) {
          return size;
        }
        min = size;
      }
      else {
        
#line 576
        max = size;
      }
    }
    return size;
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 593
ComAowagieTextRectangle *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_getSignaturePositionOnPageWithJavaUtilProperties_(JavaUtilProperties *extraParams) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 594
  return EsGobAfirmaSignersPadesPdfUtil_getPositionOnPageWithJavaUtilProperties_withNSString_(extraParams, @"signature");
}


#line 606
jboolean EsGobAfirmaSignersPadesPdfVisibleAreasUtils_isVisibleSignatureWithJavaUtilProperties_(JavaUtilProperties *extraParams) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  if (extraParams == nil) {
    return true;
  }
  
#line 612
  NSString *signatureField = [extraParams getPropertyWithNSString:EsGobAfirmaSignersPadesCommonPdfExtraParams_SIGNATURE_FIELD];
  if (signatureField != nil) {
    return true;
  }
  
#line 617
  ComAowagieTextRectangle *signatureRect = EsGobAfirmaSignersPadesPdfUtil_getPositionOnPageWithJavaUtilProperties_withNSString_(extraParams, @"signature");
  if (signatureRect != nil &&
#line 619
  JavaLangMath_signumWithFloat_([signatureRect getWidth]) != 0 &&
#line 620
  JavaLangMath_signumWithFloat_([signatureRect getHeight]) != 0) {
    return true;
  }
  
#line 624
  return false;
}


#line 634
NSString *EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithNSString_withEsGobAfirmaSignersPadesPdfTextMask_(NSString *text, EsGobAfirmaSignersPadesPdfTextMask *mask) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  IOSCharArray *chars = [((NSString *) nil_chk(text)) java_toCharArray];
  
#line 638
  jint digitCount = 0;
  jint pos = 0;
  jboolean found = false;
  for (jint i = 0; i < ((IOSCharArray *) nil_chk(chars))->size_; i++) {
    if (JavaLangCharacter_isLetterOrDigitWithChar_(IOSCharArray_Get(chars, i))) {
      if (JavaLangCharacter_isDigitWithChar_(IOSCharArray_Get(chars, i))) {
        digitCount++;
        if (digitCount == [((EsGobAfirmaSignersPadesPdfTextMask *) nil_chk(mask)) getMinLength]) {
          found = true;
        }
      }
      else {
        digitCount = 0;
      }
    }
    else {
      if (found) {
        EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithCharArray_withInt_withInt_withEsGobAfirmaSignersPadesPdfTextMask_(chars, pos, i - pos, mask);
        found = false;
      }
      pos = i + 1;
    }
  }
  if (found) {
    EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithCharArray_withInt_withInt_withEsGobAfirmaSignersPadesPdfTextMask_(chars, pos, chars->size_ - pos, mask);
    found = false;
  }
  
#line 666
  return [NSString java_stringWithCharacters:chars];
}


#line 679
void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_obfuscateWithCharArray_withInt_withInt_withEsGobAfirmaSignersPadesPdfTextMask_(IOSCharArray *text, jint pos, jint length, EsGobAfirmaSignersPadesPdfTextMask *mask) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  jint numDigits = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countDigitsWithCharArray_(text);
  jint plainDigits = EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countPlainPositionsWithBooleanArray_([((EsGobAfirmaSignersPadesPdfTextMask *) nil_chk(mask)) getPositions]);
  jboolean applyOnlyDigits = numDigits >= plainDigits;
  
#line 687
  if (applyOnlyDigits) {
    
#line 689
    IOSBooleanArray *posMasked = [mask getPositions];
    
#line 694
    if ([mask isShiftSupported] && numDigits < ((IOSBooleanArray *) nil_chk(posMasked))->size_) {
      
#line 696
      posMasked = [IOSBooleanArray newArrayWithLength:numDigits];
      IOSBooleanArray *maskPositions = [mask getPositions];
      
#line 699
      jint currentCount = 0;
      jint omitCount = ((IOSBooleanArray *) nil_chk(maskPositions))->size_ - numDigits;
      for (jint i = 0; i < maskPositions->size_; i++) {
        if (IOSBooleanArray_Get(maskPositions, i) || currentCount >= omitCount) {
          *IOSBooleanArray_GetRef(posMasked, i - currentCount) = IOSBooleanArray_Get(maskPositions, i);
        }
        else {
          currentCount++;
        }
      }
    }
    
#line 713
    for (jint i = 0, j = 0; i < length; i++) {
      if (JavaLangCharacter_isDigitWithChar_(IOSCharArray_Get(nil_chk(text), pos + i))) {
        if (j >= ((IOSBooleanArray *) nil_chk(posMasked))->size_ || !IOSBooleanArray_Get(posMasked, j)) {
          *IOSCharArray_GetRef(text, pos + i) = [mask getObfuscatedChar];
        }
        j++;
      }
      else {
        *IOSCharArray_GetRef(text, pos + i) = [mask getObfuscatedChar];
      }
    }
  }
  else {
    
#line 728
    IOSBooleanArray *posMasked = [mask getPositions];
    jint posMaskedPos = ((IOSBooleanArray *) nil_chk(posMasked))->size_ - 1;
    for (jint i = pos + length - 1; i >= pos; i--) {
      if (posMaskedPos < 0 || !IOSBooleanArray_Get(posMasked, posMaskedPos)) {
        *IOSCharArray_GetRef(nil_chk(text), i) = [mask getObfuscatedChar];
      }
      posMaskedPos--;
    }
  }
}


#line 746
jint EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countPlainPositionsWithBooleanArray_(IOSBooleanArray *positions) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 747
  jint count = 0;
  {
    IOSBooleanArray *a__ =
#line 748
    positions;
    jboolean const *b__ = ((IOSBooleanArray *) nil_chk(a__))->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean position = *b__++;
      
#line 749
      if (position) {
        count++;
      }
    }
  }
  
#line 753
  return count;
}


#line 761
jint EsGobAfirmaSignersPadesPdfVisibleAreasUtils_countDigitsWithCharArray_(IOSCharArray *text) {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_initialize();
  
#line 762
  jint digitsCount = 0;
  {
    IOSCharArray *a__ =
#line 763
    text;
    jchar const *b__ = ((IOSCharArray *) nil_chk(a__))->buffer_;
    jchar const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jchar c = *b__++;
      
#line 764
      if (JavaLangCharacter_isDigitWithChar_(c)) {
        digitsCount++;
      }
    }
  }
  
#line 768
  return digitsCount;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersPadesPdfVisibleAreasUtils)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/PdfVisibleAreasUtils.java"


#line 356
@implementation EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues


#line 362
- (instancetype)initWithInt:(jint)red
                    withInt:(jint)green
                    withInt:(jint)blue {
  EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(self, red, green, blue);
  return self;
}


#line 368
- (jint)getR {
  return self->r_;
}

- (jint)getG {
  return self->g_;
}

- (jint)getB {
  return self->b_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:);
  methods[1].selector = @selector(getR);
  methods[2].selector = @selector(getG);
  methods[3].selector = @selector(getB);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "r_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "g_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "b_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "III", "LEsGobAfirmaSignersPadesPdfVisibleAreasUtils;" };
  static const J2ObjcClassInfo _EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues = { "ColorValues", "es.gob.afirma.signers.pades", ptrTable, methods, fields, 7, 0x1a, 4, 3, 1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues;
}

@end


#line 362
void EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues *self, jint red, jint green, jint blue) {
  NSObject_init(self);
  
#line 363
  self->r_ = red;
  self->g_ = green;
  self->b_ = blue;
}


#line 362
EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues *new_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(jint red, jint green, jint blue) {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues, initWithInt_withInt_withInt_, red, green, blue)
}


#line 362
EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues *create_EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues_initWithInt_withInt_withInt_(jint red, jint green, jint blue) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues, initWithInt_withInt_withInt_, red, green, blue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersPadesPdfVisibleAreasUtils_ColorValues)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/Base64.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobAfirmaCoreMiscBase64")
#ifdef RESTRICT_EsGobAfirmaCoreMiscBase64
#define INCLUDE_ALL_EsGobAfirmaCoreMiscBase64 0
#else
#define INCLUDE_ALL_EsGobAfirmaCoreMiscBase64 1
#endif
#undef RESTRICT_EsGobAfirmaCoreMiscBase64

#if !defined (EsGobAfirmaCoreMiscBase64_) && (INCLUDE_ALL_EsGobAfirmaCoreMiscBase64 || defined(INCLUDE_EsGobAfirmaCoreMiscBase64))
#define EsGobAfirmaCoreMiscBase64_

@class IOSByteArray;

/*!
 @brief <p>Encodes and decodes to and from Base64 notation.
 </p>
  <p>Homepage: <a href="http://iharder.net/base64">http://iharder.net/base64</a>.</p>
  
 <p>Example:</p>
  
 <code>String encoded = Base64.encode( myByteArray );</code>
  <br>
  <code>byte[] myByteArray = Base64.decode( encoded );</code>
  
 <p>The <code>options</code> parameter, which appears in a few places, is used to pass
  several pieces of information to the encoder. In the "higher level" methods such as
  encodeBytes( bytes, options ) the options parameter can be used to indicate such
  things as not inserting linefeeds,
  and encoding using the URL-safe and Ordered dialects.</p>
  
 <p>Note, according to <a href="http://www.faqs.org/rfcs/rfc3548.html">RFC3548</a>,
  Section 2.1, implementations should not add line feeds unless explicitly told
  to do so. I've got Base64 set to this behavior now, although earlier versions
  broke lines by default.</p>
  
 <p>The constants defined in Base64 can be OR-ed together to combine options, so you
  might make a call like this:</p>
  
 <code>String encoded = Base64.encodeBytes( mybytes, Base64.DO_BREAK_LINES );</code>
  <p>to compress the data before encoding it and then making the output have newline characters.</p>
  <p>Also...</p>
  <code>String encoded = Base64.encodeBytes( crazyString.getBytes() );</code>
  
 <p>
  I am placing this code in the Public Domain. Do with it as you will.
  This software comes with no guarantees or warranties but with
  plenty of well-wishing instead!
  Please visit <a href="http://iharder.net/base64">http://iharder.net/base64</a>
  periodically to check for updates or to contribute improvements. 
 </p>
 @author Robert Harder
 @author rob@@iharder.net
 @version 2.3.7
 */
@interface EsGobAfirmaCoreMiscBase64 : NSObject

#pragma mark Public

/*!
 @brief Descodifica datos en Base64.
 @param source Datos codificados en Base64.
 @param off El  &iacute; ndice inicial por el que empezar a descodificar.
 @param len N &uacute; mero de caracteres que descodificar.
 @param urlSafe Si se establece a  <code> true </code>  indica que los datos est &aacute; n con un alfabeto Base64                 susceptible de ser usado en URL, seg &uacute; n se indica en la seccti &oacute; n 4 de la RFC3548,                 si se establece a  <code> false </code>  los datos deben estar en Base64 normal
 @return Datos descodificados
 @throw java.io.IOExceptionsi ocurre cualquier error
 */
+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)source
                              withInt:(jint)off
                              withInt:(jint)len
                          withBoolean:(jboolean)urlSafe;

/*!
 @brief Descodifica datos en Base64.
 @param str Cadena de caracteres en formato Base64
 @return Datos descodificados
 @throw java.io.IOExceptionsi ocurre cualquier error
 */
+ (IOSByteArray *)decodeWithNSString:(NSString *)str;

/*!
 @brief Descodifica datos en Base64.
 @param str Cadena de caracteres en formato Base64
 @param urlSafe Si se establece a  <code> true </code>  indica que los datos est &aacute; n con un alfabeto Base64                 susceptible de ser usado en URL, seg &uacute; n se indica en la seccti &oacute; n 4 de la RFC3548,                 si se establece a  <code> false </code>  los datos deben estar en Base64 normal
 @return Datos descodificados
 @throw java.io.IOExceptionsi ocurre cualquier error
 */
+ (IOSByteArray *)decodeWithNSString:(NSString *)str
                         withBoolean:(jboolean)urlSafe;

/*!
 @brief Codifica un binario en Base64.
 @param source Datos a convertir a Base64
 @return Datos codificados como texto Base64
 */
+ (NSString *)encodeWithByteArray:(IOSByteArray *)source;

/*!
 @brief Codifica un binario en Base64.
 @param source Datos a convertir a Base64
 @param urlSafe Si se establece a  <code> true </code>  indica que los datos se codificar &aacute; n con un alfabeto Base64                 susceptible de ser usado en URL, seg &uacute; n se indica en la seccti &oacute; n 4 de la RFC3548,                 si se establece a  <code> false </code>  los datos se codificar &aacute; n en Base64 normal
 @return Datos codificados como texto Base64.
 */
+ (NSString *)encodeWithByteArray:(IOSByteArray *)source
                      withBoolean:(jboolean)urlSafe;

/*!
 @brief Comprueba si un array de datos es una cadena en base 64.
 @param data Datos a comprobar si podr &iacute; an o no ser Base64.
 @return <code>true</code> si los datos proporcionado pueden ser una
          codificaci&oacute;n base64 de un original binario (que no tiene
          necesariamente porqu&eacute; serlo), <code>false</code> en caso
          contrario.
 */
+ (jboolean)isBase64WithByteArray:(IOSByteArray *)data;

/*!
 @brief Comprueba si una cadena de texto es una cadena en base 64.
 @param data Cadena de texto a comprobar si podr &iacute; an o no ser Base64.
 @return <code>true</code> si los datos proporcionado pueden ser una
          codificaci&oacute;n base64 de un original binario (que no tiene
          necesariamente porqu&eacute; serlo), <code>false</code> en caso
          contrario.
 */
+ (jboolean)isBase64WithNSString:(NSString *)data;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscBase64)

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscBase64_encodeWithByteArray_(IOSByteArray *source);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscBase64_encodeWithByteArray_withBoolean_(IOSByteArray *source, jboolean urlSafe);

FOUNDATION_EXPORT IOSByteArray *EsGobAfirmaCoreMiscBase64_decodeWithByteArray_withInt_withInt_withBoolean_(IOSByteArray *source, jint off, jint len, jboolean urlSafe);

FOUNDATION_EXPORT IOSByteArray *EsGobAfirmaCoreMiscBase64_decodeWithNSString_(NSString *str);

FOUNDATION_EXPORT IOSByteArray *EsGobAfirmaCoreMiscBase64_decodeWithNSString_withBoolean_(NSString *str, jboolean urlSafe);

FOUNDATION_EXPORT jboolean EsGobAfirmaCoreMiscBase64_isBase64WithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT jboolean EsGobAfirmaCoreMiscBase64_isBase64WithNSString_(NSString *data);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscBase64)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobAfirmaCoreMiscBase64")

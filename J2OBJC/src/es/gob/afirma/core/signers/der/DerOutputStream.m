//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/der/DerOutputStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/afirma/core/signers/der/BitArray.h"
#include "es/gob/afirma/core/signers/der/ByteArrayLexOrder.h"
#include "es/gob/afirma/core/signers/der/ByteArrayTagOrder.h"
#include "es/gob/afirma/core/signers/der/DerEncoder.h"
#include "es/gob/afirma/core/signers/der/DerOutputStream.h"
#include "es/gob/afirma/core/signers/der/DerValue.h"
#include "es/gob/afirma/core/signers/der/ObjectIdentifier.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Integer.h"
#include "java/math/BigInteger.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/core/signers/der/DerOutputStream must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreSignersDerDerOutputStream ()

- (void)putIntegerContentsWithInt:(jint)i;

/*!
 @brief Marshals a the contents of a set on the output stream with the
  encodings of its sorted in increasing order.
 @param tag DER tag value.
 @param set DER encoded data.
 @param order the order to use when sorting encodings of components.
 @throw IOExceptionWhen no it possible write data.
 */
- (void)putOrderedSetWithByte:(jbyte)tag
withEsGobAfirmaCoreSignersDerDerEncoderArray:(IOSObjectArray *)set
       withJavaUtilComparator:(id<JavaUtilComparator>)order;

/*!
 @brief Private helper routine for writing DER encoded string values.
 @param s the string to write
 @param stringTag one of the DER string tags that indicate which  encoding should be used to write the string out.
 @param enc the name of the encoder that should be used corresponding  to the above tag.
 @throw IOExceptionWhen no it possible write data.
 */
- (void)writeStringWithNSString:(NSString *)s
                       withByte:(jbyte)stringTag
                   withNSString:(NSString *)enc;

/*!
 @brief Private helper routine for marshalling a DER UTC/Generalized
  time/date value.If the tag specified is not that for UTC Time
  then it defaults to Generalized Time.
 @param d the date to be marshalled
 @param tag the tag for UTC Time or Generalized Time
 @throw IOExceptionWhen no it possible write data.
 */
- (void)putTimeWithJavaUtilDate:(JavaUtilDate *)d
                       withByte:(jbyte)tag;

@end

/*!
 @brief Lexicographical order comparison on byte arrays, for ordering
   elements of a SET OF objects in DER encoding.
 */
inline EsGobAfirmaCoreSignersDerByteArrayLexOrder *EsGobAfirmaCoreSignersDerDerOutputStream_get_lexOrder(void);
inline EsGobAfirmaCoreSignersDerByteArrayLexOrder *EsGobAfirmaCoreSignersDerDerOutputStream_set_lexOrder(EsGobAfirmaCoreSignersDerByteArrayLexOrder *value);
static EsGobAfirmaCoreSignersDerByteArrayLexOrder *EsGobAfirmaCoreSignersDerDerOutputStream_lexOrder;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreSignersDerDerOutputStream, lexOrder, EsGobAfirmaCoreSignersDerByteArrayLexOrder *)

/*!
 @brief Tag order comparison on byte arrays, for ordering elements of
   SET objects in DER encoding.
 */
inline EsGobAfirmaCoreSignersDerByteArrayTagOrder *EsGobAfirmaCoreSignersDerDerOutputStream_get_tagOrder(void);
inline EsGobAfirmaCoreSignersDerByteArrayTagOrder *EsGobAfirmaCoreSignersDerDerOutputStream_set_tagOrder(EsGobAfirmaCoreSignersDerByteArrayTagOrder *value);
static EsGobAfirmaCoreSignersDerByteArrayTagOrder *EsGobAfirmaCoreSignersDerDerOutputStream_tagOrder;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreSignersDerDerOutputStream, tagOrder, EsGobAfirmaCoreSignersDerByteArrayTagOrder *)

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerDerOutputStream_putIntegerContentsWithInt_(EsGobAfirmaCoreSignersDerDerOutputStream *self, jint i);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerDerOutputStream_putOrderedSetWithByte_withEsGobAfirmaCoreSignersDerDerEncoderArray_withJavaUtilComparator_(EsGobAfirmaCoreSignersDerDerOutputStream *self, jbyte tag, IOSObjectArray *set, id<JavaUtilComparator> order);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(EsGobAfirmaCoreSignersDerDerOutputStream *self, NSString *s, jbyte stringTag, NSString *enc);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerDerOutputStream_putTimeWithJavaUtilDate_withByte_(EsGobAfirmaCoreSignersDerDerOutputStream *self, JavaUtilDate *d, jbyte tag);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/der/DerOutputStream.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreSignersDerDerOutputStream)


#line 54
@implementation EsGobAfirmaCoreSignersDerDerOutputStream


#line 61
- (instancetype)initWithInt:(jint)size {
  EsGobAfirmaCoreSignersDerDerOutputStream_initWithInt_(self, size);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 66
- (instancetype)init {
  EsGobAfirmaCoreSignersDerDerOutputStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 78
- (void)writeWithByte:(jbyte)tag
        withByteArray:(IOSByteArray *)buf {
  
#line 79
  [self writeWithInt:tag];
  [self putLengthWithInt:((IOSByteArray *) nil_chk(buf))->size_];
  [self writeWithByteArray:buf withInt:0 withInt:buf->size_];
}


#line 94
- (void)writeWithByte:(jbyte)tag
withEsGobAfirmaCoreSignersDerDerOutputStream:(EsGobAfirmaCoreSignersDerDerOutputStream *)outArg {
  
#line 95
  [self writeWithInt:tag];
  [self putLengthWithInt:((EsGobAfirmaCoreSignersDerDerOutputStream *) nil_chk(outArg))->count_];
  [self writeWithByteArray:outArg->buf_ withInt:0 withInt:outArg->count_];
}


#line 118
- (void)writeImplicitWithByte:(jbyte)tag
withEsGobAfirmaCoreSignersDerDerOutputStream:(EsGobAfirmaCoreSignersDerDerOutputStream *)value {
  [self writeWithInt:tag];
  [self writeWithByteArray:((EsGobAfirmaCoreSignersDerDerOutputStream *) nil_chk(value))->buf_ withInt:1 withInt:value->count_ - 1];
}


#line 129
- (void)putDerValueWithEsGobAfirmaCoreSignersDerDerValue:(EsGobAfirmaCoreSignersDerDerValue *)val {
  [((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(val)) encodeWithEsGobAfirmaCoreSignersDerDerOutputStream:self];
}


#line 146
- (void)putBooleanWithBoolean:(jboolean)val {
  [self writeWithInt:EsGobAfirmaCoreSignersDerDerValue_tag_Boolean];
  [self putLengthWithInt:1];
  if (val) {
    [self writeWithInt:(jint) 0xff];
  }
  else {
    
#line 152
    [self writeWithInt:0];
  }
}


#line 161
- (void)putEnumeratedWithInt:(jint)i {
  [self writeWithInt:EsGobAfirmaCoreSignersDerDerValue_tag_Enumerated];
  EsGobAfirmaCoreSignersDerDerOutputStream_putIntegerContentsWithInt_(self, i);
}


#line 172
- (void)putIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)i {
  [self writeWithInt:EsGobAfirmaCoreSignersDerDerValue_tag_Integer];
  IOSByteArray *buf = [((JavaMathBigInteger *) nil_chk(i)) toByteArray];
  [self putLengthWithInt:((IOSByteArray *) nil_chk(buf))->size_];
  [self writeWithByteArray:buf withInt:0 withInt:buf->size_];
}


#line 184
- (void)putIntegerWithJavaLangInteger:(JavaLangInteger *)i {
  [self putIntegerWithInt:[((JavaLangInteger *) nil_chk(i)) intValue]];
}


#line 193
- (void)putIntegerWithInt:(jint)i {
  [self writeWithInt:EsGobAfirmaCoreSignersDerDerValue_tag_Integer];
  EsGobAfirmaCoreSignersDerDerOutputStream_putIntegerContentsWithInt_(self, i);
}

- (void)putIntegerContentsWithInt:(jint)i {
  EsGobAfirmaCoreSignersDerDerOutputStream_putIntegerContentsWithInt_(self, i);
}


#line 252
- (void)putBitStringWithByteArray:(IOSByteArray *)bits {
  [self writeWithInt:EsGobAfirmaCoreSignersDerDerValue_tag_BitString];
  [self putLengthWithInt:((IOSByteArray *) nil_chk(bits))->size_ + 1];
  [self writeWithInt:0];
  [self writeWithByteArray:bits];
}


#line 266
- (void)putUnalignedBitStringWithEsGobAfirmaCoreSignersDerBitArray:(EsGobAfirmaCoreSignersDerBitArray *)ba {
  IOSByteArray *bits = [((EsGobAfirmaCoreSignersDerBitArray *) nil_chk(ba)) toByteArray];
  
#line 269
  [self writeWithInt:EsGobAfirmaCoreSignersDerDerValue_tag_BitString];
  [self putLengthWithInt:((IOSByteArray *) nil_chk(bits))->size_ + 1];
  [self writeWithInt:bits->size_ * 8 - [ba length]];
  [self writeWithByteArray:bits];
}


#line 282
- (void)putTruncatedUnalignedBitStringWithEsGobAfirmaCoreSignersDerBitArray:(EsGobAfirmaCoreSignersDerBitArray *)ba {
  [self putUnalignedBitStringWithEsGobAfirmaCoreSignersDerBitArray:[((EsGobAfirmaCoreSignersDerBitArray *) nil_chk(ba)) truncate]];
}


#line 292
- (void)putOctetStringWithByteArray:(IOSByteArray *)octets {
  [self writeWithByte:EsGobAfirmaCoreSignersDerDerValue_tag_OctetString withByteArray:octets];
}


#line 301
- (void)putNull {
  [self writeWithInt:EsGobAfirmaCoreSignersDerDerValue_tag_Null];
  [self putLengthWithInt:0];
}


#line 312
- (void)putOIDWithEsGobAfirmaCoreSignersDerObjectIdentifier:(EsGobAfirmaCoreSignersDerObjectIdentifier *)oid {
  [((EsGobAfirmaCoreSignersDerObjectIdentifier *) nil_chk(oid)) encodeWithEsGobAfirmaCoreSignersDerDerOutputStream:self];
}


#line 323
- (void)putSequenceWithEsGobAfirmaCoreSignersDerDerValueArray:(IOSObjectArray *)seq {
  EsGobAfirmaCoreSignersDerDerOutputStream *bytes = new_EsGobAfirmaCoreSignersDerDerOutputStream_init();
  jint i;
  
#line 327
  for (i = 0; i < ((IOSObjectArray *) nil_chk(seq))->size_; i++) {
    [((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(IOSObjectArray_Get(seq, i))) encodeWithEsGobAfirmaCoreSignersDerDerOutputStream:bytes];
  }
  
#line 331
  [self writeWithByte:EsGobAfirmaCoreSignersDerDerValue_tag_Sequence withEsGobAfirmaCoreSignersDerDerOutputStream:bytes];
}


#line 343
- (void)putSetWithEsGobAfirmaCoreSignersDerDerValueArray:(IOSObjectArray *)set {
  EsGobAfirmaCoreSignersDerDerOutputStream *bytes = new_EsGobAfirmaCoreSignersDerDerOutputStream_init();
  jint i;
  
#line 347
  for (i = 0; i < ((IOSObjectArray *) nil_chk(set))->size_; i++) {
    [((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(IOSObjectArray_Get(set, i))) encodeWithEsGobAfirmaCoreSignersDerDerOutputStream:bytes];
  }
  
#line 351
  [self writeWithByte:EsGobAfirmaCoreSignersDerDerValue_tag_Set withEsGobAfirmaCoreSignersDerDerOutputStream:bytes];
}


#line 367
- (void)putOrderedSetOfWithByte:(jbyte)tag
withEsGobAfirmaCoreSignersDerDerEncoderArray:(IOSObjectArray *)set {
  
#line 368
  EsGobAfirmaCoreSignersDerDerOutputStream_putOrderedSetWithByte_withEsGobAfirmaCoreSignersDerDerEncoderArray_withJavaUtilComparator_(self, tag, set, EsGobAfirmaCoreSignersDerDerOutputStream_lexOrder);
}


#line 384
- (void)putOrderedSetWithByte:(jbyte)tag
withEsGobAfirmaCoreSignersDerDerEncoderArray:(IOSObjectArray *)set {
  
#line 385
  EsGobAfirmaCoreSignersDerDerOutputStream_putOrderedSetWithByte_withEsGobAfirmaCoreSignersDerDerEncoderArray_withJavaUtilComparator_(self, tag, set, EsGobAfirmaCoreSignersDerDerOutputStream_tagOrder);
}


#line 408
- (void)putOrderedSetWithByte:(jbyte)tag
withEsGobAfirmaCoreSignersDerDerEncoderArray:(IOSObjectArray *)set
       withJavaUtilComparator:(id<JavaUtilComparator>)order {
  EsGobAfirmaCoreSignersDerDerOutputStream_putOrderedSetWithByte_withEsGobAfirmaCoreSignersDerDerEncoderArray_withJavaUtilComparator_(self, tag, set, order);
}


#line 437
- (void)putUTF8StringWithNSString:(NSString *)s {
  EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(self, s, EsGobAfirmaCoreSignersDerDerValue_tag_UTF8String, @"UTF8");
}


#line 446
- (void)putPrintableStringWithNSString:(NSString *)s {
  EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(self, s, EsGobAfirmaCoreSignersDerDerValue_tag_PrintableString, @"ASCII");
}


#line 455
- (void)putT61StringWithNSString:(NSString *)s {
  
#line 460
  EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(self, s, EsGobAfirmaCoreSignersDerDerValue_tag_T61String, @"ISO-8859-1");
}


#line 468
- (void)putIA5StringWithNSString:(NSString *)s {
  EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(self, s, EsGobAfirmaCoreSignersDerDerValue_tag_IA5String, @"ASCII");
}


#line 477
- (void)putBMPStringWithNSString:(NSString *)s {
  EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(self, s, EsGobAfirmaCoreSignersDerDerValue_tag_BMPString, @"UnicodeBigUnmarked");
}


#line 486
- (void)putGeneralStringWithNSString:(NSString *)s {
  EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(self, s, EsGobAfirmaCoreSignersDerDerValue_tag_GeneralString, @"ASCII");
}


#line 499
- (void)writeStringWithNSString:(NSString *)s
                       withByte:(jbyte)stringTag
                   withNSString:(NSString *)enc {
  EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(self, s, stringTag, enc);
}


#line 516
- (void)putUTCTimeWithJavaUtilDate:(JavaUtilDate *)d {
  EsGobAfirmaCoreSignersDerDerOutputStream_putTimeWithJavaUtilDate_withByte_(self, d, EsGobAfirmaCoreSignersDerDerValue_tag_UtcTime);
}


#line 528
- (void)putGeneralizedTimeWithJavaUtilDate:(JavaUtilDate *)d {
  EsGobAfirmaCoreSignersDerDerOutputStream_putTimeWithJavaUtilDate_withByte_(self, d, EsGobAfirmaCoreSignersDerDerValue_tag_GeneralizedTime);
}


#line 540
- (void)putTimeWithJavaUtilDate:(JavaUtilDate *)d
                       withByte:(jbyte)tag {
  EsGobAfirmaCoreSignersDerDerOutputStream_putTimeWithJavaUtilDate_withByte_(self, d, tag);
}


#line 575
- (void)putLengthWithInt:(jint)len {
  if (len < 128) {
    [self writeWithInt:(jbyte) len];
  }
  else if (len < JreLShift32(1, 8)) {
    [self writeWithInt:(jbyte) (jint) 0x081];
    [self writeWithInt:(jbyte) len];
  }
  else if (len < JreLShift32(1, 16)) {
    [self writeWithInt:(jbyte) (jint) 0x082];
    [self writeWithInt:(jbyte) (JreRShift32(len, 8))];
    [self writeWithInt:(jbyte) len];
  }
  else if (len < JreLShift32(1, 24)) {
    [self writeWithInt:(jbyte) (jint) 0x083];
    [self writeWithInt:(jbyte) (JreRShift32(len, 16))];
    [self writeWithInt:(jbyte) (JreRShift32(len, 8))];
    [self writeWithInt:(jbyte) len];
  }
  else {
    [self writeWithInt:(jbyte) (jint) 0x084];
    [self writeWithInt:(jbyte) (JreRShift32(len, 24))];
    [self writeWithInt:(jbyte) (JreRShift32(len, 16))];
    [self writeWithInt:(jbyte) (JreRShift32(len, 8))];
    [self writeWithInt:(jbyte) len];
  }
}


#line 612
- (void)putTagWithByte:(jbyte)tagClass
           withBoolean:(jboolean)form
              withByte:(jbyte)val {
  
#line 613
  jbyte tag = (jbyte) (tagClass | val);
  if (form) {
    tag |= (jbyte) (jint) 0x20;
  }
  [self writeWithInt:tag];
}


#line 626
- (void)derEncodeWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  
#line 628
  [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:[self toByteArray]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 0, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 13, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 0, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 0, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 18, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 16, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 24, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 24, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 27, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 27, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 28, 29, 3, 30, -1, -1 },
    { NULL, "V", 0x1, 31, 32, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 33, 32, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 34, 32, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 32, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 36, 32, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 32, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 38, 39, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 41, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 42, 41, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 43, 44, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 45, 0, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 47, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 48, 49, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(writeWithByte:withByteArray:);
  methods[3].selector = @selector(writeWithByte:withEsGobAfirmaCoreSignersDerDerOutputStream:);
  methods[4].selector = @selector(writeImplicitWithByte:withEsGobAfirmaCoreSignersDerDerOutputStream:);
  methods[5].selector = @selector(putDerValueWithEsGobAfirmaCoreSignersDerDerValue:);
  methods[6].selector = @selector(putBooleanWithBoolean:);
  methods[7].selector = @selector(putEnumeratedWithInt:);
  methods[8].selector = @selector(putIntegerWithJavaMathBigInteger:);
  methods[9].selector = @selector(putIntegerWithJavaLangInteger:);
  methods[10].selector = @selector(putIntegerWithInt:);
  methods[11].selector = @selector(putIntegerContentsWithInt:);
  methods[12].selector = @selector(putBitStringWithByteArray:);
  methods[13].selector = @selector(putUnalignedBitStringWithEsGobAfirmaCoreSignersDerBitArray:);
  methods[14].selector = @selector(putTruncatedUnalignedBitStringWithEsGobAfirmaCoreSignersDerBitArray:);
  methods[15].selector = @selector(putOctetStringWithByteArray:);
  methods[16].selector = @selector(putNull);
  methods[17].selector = @selector(putOIDWithEsGobAfirmaCoreSignersDerObjectIdentifier:);
  methods[18].selector = @selector(putSequenceWithEsGobAfirmaCoreSignersDerDerValueArray:);
  methods[19].selector = @selector(putSetWithEsGobAfirmaCoreSignersDerDerValueArray:);
  methods[20].selector = @selector(putOrderedSetOfWithByte:withEsGobAfirmaCoreSignersDerDerEncoderArray:);
  methods[21].selector = @selector(putOrderedSetWithByte:withEsGobAfirmaCoreSignersDerDerEncoderArray:);
  methods[22].selector = @selector(putOrderedSetWithByte:withEsGobAfirmaCoreSignersDerDerEncoderArray:withJavaUtilComparator:);
  methods[23].selector = @selector(putUTF8StringWithNSString:);
  methods[24].selector = @selector(putPrintableStringWithNSString:);
  methods[25].selector = @selector(putT61StringWithNSString:);
  methods[26].selector = @selector(putIA5StringWithNSString:);
  methods[27].selector = @selector(putBMPStringWithNSString:);
  methods[28].selector = @selector(putGeneralStringWithNSString:);
  methods[29].selector = @selector(writeStringWithNSString:withByte:withNSString:);
  methods[30].selector = @selector(putUTCTimeWithJavaUtilDate:);
  methods[31].selector = @selector(putGeneralizedTimeWithJavaUtilDate:);
  methods[32].selector = @selector(putTimeWithJavaUtilDate:withByte:);
  methods[33].selector = @selector(putLengthWithInt:);
  methods[34].selector = @selector(putTagWithByte:withBoolean:withByte:);
  methods[35].selector = @selector(derEncodeWithJavaIoOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lexOrder", "LEsGobAfirmaCoreSignersDerByteArrayLexOrder;", .constantValue.asLong = 0, 0xa, -1, 50, -1, -1 },
    { "tagOrder", "LEsGobAfirmaCoreSignersDerByteArrayTagOrder;", .constantValue.asLong = 0, 0xa, -1, 51, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "write", "B[B", "LJavaIoIOException;", "BLEsGobAfirmaCoreSignersDerDerOutputStream;", "writeImplicit", "putDerValue", "LEsGobAfirmaCoreSignersDerDerValue;", "putBoolean", "Z", "putEnumerated", "putInteger", "LJavaMathBigInteger;", "LJavaLangInteger;", "putIntegerContents", "putBitString", "[B", "putUnalignedBitString", "LEsGobAfirmaCoreSignersDerBitArray;", "putTruncatedUnalignedBitString", "putOctetString", "putOID", "LEsGobAfirmaCoreSignersDerObjectIdentifier;", "putSequence", "[LEsGobAfirmaCoreSignersDerDerValue;", "putSet", "putOrderedSetOf", "B[LEsGobAfirmaCoreSignersDerDerEncoder;", "putOrderedSet", "B[LEsGobAfirmaCoreSignersDerDerEncoder;LJavaUtilComparator;", "(B[Les/gob/afirma/core/signers/der/DerEncoder;Ljava/util/Comparator<[B>;)V", "putUTF8String", "LNSString;", "putPrintableString", "putT61String", "putIA5String", "putBMPString", "putGeneralString", "writeString", "LNSString;BLNSString;", "putUTCTime", "LJavaUtilDate;", "putGeneralizedTime", "putTime", "LJavaUtilDate;B", "putLength", "putTag", "BZB", "derEncode", "LJavaIoOutputStream;", &EsGobAfirmaCoreSignersDerDerOutputStream_lexOrder, &EsGobAfirmaCoreSignersDerDerOutputStream_tagOrder };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersDerDerOutputStream = { "DerOutputStream", "es.gob.afirma.core.signers.der", ptrTable, methods, fields, 7, 0x1, 36, 2, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersDerDerOutputStream;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreSignersDerDerOutputStream class]) {
    EsGobAfirmaCoreSignersDerDerOutputStream_lexOrder = new_EsGobAfirmaCoreSignersDerByteArrayLexOrder_init();
    EsGobAfirmaCoreSignersDerDerOutputStream_tagOrder = new_EsGobAfirmaCoreSignersDerByteArrayTagOrder_init();
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreSignersDerDerOutputStream)
  }
}

@end


#line 61
void EsGobAfirmaCoreSignersDerDerOutputStream_initWithInt_(EsGobAfirmaCoreSignersDerDerOutputStream *self, jint size) {
  JavaIoByteArrayOutputStream_initWithInt_(self,
#line 61
  size);
}


#line 61
EsGobAfirmaCoreSignersDerDerOutputStream *new_EsGobAfirmaCoreSignersDerDerOutputStream_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerOutputStream, initWithInt_, size)
}


#line 61
EsGobAfirmaCoreSignersDerDerOutputStream *create_EsGobAfirmaCoreSignersDerDerOutputStream_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerOutputStream, initWithInt_, size)
}


#line 66
void EsGobAfirmaCoreSignersDerDerOutputStream_init(EsGobAfirmaCoreSignersDerDerOutputStream *self) {
  JavaIoByteArrayOutputStream_init(self);
}


#line 66
EsGobAfirmaCoreSignersDerDerOutputStream *new_EsGobAfirmaCoreSignersDerDerOutputStream_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerOutputStream, init)
}


#line 66
EsGobAfirmaCoreSignersDerDerOutputStream *create_EsGobAfirmaCoreSignersDerDerOutputStream_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerOutputStream, init)
}


#line 198
void EsGobAfirmaCoreSignersDerDerOutputStream_putIntegerContentsWithInt_(EsGobAfirmaCoreSignersDerDerOutputStream *self, jint i) {
  
#line 200
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:4];
  jint start = 0;
  
#line 205
  *IOSByteArray_GetRef(bytes, 3) = (jbyte) (i & (jint) 0xff);
  *IOSByteArray_GetRef(bytes, 2) = (jbyte) (JreURShift32((i & (jint) 0xff00), 8));
  *IOSByteArray_GetRef(bytes, 1) = (jbyte) (JreURShift32((i & (jint) 0xff0000), 16));
  *IOSByteArray_GetRef(bytes, 0) = (jbyte) (JreURShift32((i & (jint) 0xff000000), 24));
  
#line 213
  if (IOSByteArray_Get(bytes, 0) == (jbyte) (jint) 0xff) {
    
#line 217
    for (jint j = 0; j < 3; j++) {
      if (IOSByteArray_Get(bytes, j) == (jbyte) (jint) 0xff &&
#line 219
      (IOSByteArray_Get(bytes, j + 1) & (jint) 0x80) == (jint) 0x80) {
        start++;
      }
      else {
        
#line 222
        break;
      }
    }
  }
  else
#line 225
  if (IOSByteArray_Get(bytes, 0) == (jint) 0x00) {
    
#line 229
    for (jint j = 0; j < 3; j++) {
      if (IOSByteArray_Get(bytes, j) == (jint) 0x00 &&
#line 231
      (IOSByteArray_Get(bytes, j + 1) & (jint) 0x80) == 0) {
        start++;
      }
      else {
        
#line 234
        break;
      }
    }
  }
  
#line 239
  [self putLengthWithInt:4 - start];
  for (jint k = start; k < 4; k++) {
    [self writeWithInt:IOSByteArray_Get(bytes, k)];
  }
}


#line 408
void EsGobAfirmaCoreSignersDerDerOutputStream_putOrderedSetWithByte_withEsGobAfirmaCoreSignersDerDerEncoderArray_withJavaUtilComparator_(EsGobAfirmaCoreSignersDerDerOutputStream *self, jbyte tag, IOSObjectArray *set, id<JavaUtilComparator> order) {
  
#line 410
  IOSObjectArray *streams = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(set))->size_ type:EsGobAfirmaCoreSignersDerDerOutputStream_class_()];
  
#line 412
  for (jint i = 0; i < set->size_; i++) {
    (void) IOSObjectArray_SetAndConsume(streams, i, new_EsGobAfirmaCoreSignersDerDerOutputStream_init());
    [((id<EsGobAfirmaCoreSignersDerDerEncoder>) nil_chk(IOSObjectArray_Get(set, i))) derEncodeWithJavaIoOutputStream:IOSObjectArray_Get(streams, i)];
  }
  
#line 418
  IOSObjectArray *bufs = [IOSObjectArray newArrayWithLength:streams->size_ type:IOSClass_byteArray(1)];
  for (jint i = 0; i < streams->size_; i++) {
    (void) IOSObjectArray_Set(bufs, i, [((EsGobAfirmaCoreSignersDerDerOutputStream *) nil_chk(IOSObjectArray_Get(streams, i))) toByteArray]);
  }
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(bufs, order);
  
#line 424
  EsGobAfirmaCoreSignersDerDerOutputStream *bytes = new_EsGobAfirmaCoreSignersDerDerOutputStream_init();
  for (jint i = 0; i < streams->size_; i++) {
    [bytes writeWithByteArray:IOSObjectArray_Get(bufs, i)];
  }
  [self writeWithByte:tag withEsGobAfirmaCoreSignersDerDerOutputStream:bytes];
}


#line 499
void EsGobAfirmaCoreSignersDerDerOutputStream_writeStringWithNSString_withByte_withNSString_(EsGobAfirmaCoreSignersDerDerOutputStream *self, NSString *s, jbyte stringTag, NSString *enc) {
  
#line 502
  IOSByteArray *data = [((NSString *) nil_chk(s)) java_getBytesWithCharsetName:enc];
  [self writeWithInt:stringTag];
  [self putLengthWithInt:((IOSByteArray *) nil_chk(data))->size_];
  [self writeWithByteArray:data];
}


#line 540
void EsGobAfirmaCoreSignersDerDerOutputStream_putTimeWithJavaUtilDate_withByte_(EsGobAfirmaCoreSignersDerDerOutputStream *self, JavaUtilDate *d, jbyte tag) {
  
#line 546
  JavaUtilTimeZone *tz = JavaUtilTimeZone_getTimeZoneWithNSString_(@"GMT");
  NSString *pattern = nil;
  
#line 549
  if (tag == EsGobAfirmaCoreSignersDerDerValue_tag_UtcTime) {
    pattern = @"yyMMddHHmmss'Z'";
  }
  else {
    
#line 552
    tag = EsGobAfirmaCoreSignersDerDerValue_tag_GeneralizedTime;
    pattern = @"yyyyMMddHHmmss'Z'";
  }
  
#line 556
  JavaTextSimpleDateFormat *sdf = new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(pattern, JreLoadStatic(JavaUtilLocale, US));
  [sdf setTimeZoneWithJavaUtilTimeZone:tz];
  IOSByteArray *time = [((NSString *) nil_chk([sdf formatWithJavaUtilDate:d])) java_getBytesWithCharsetName:@"ISO-8859-1"];
  
#line 564
  [self writeWithInt:tag];
  [self putLengthWithInt:((IOSByteArray *) nil_chk(time))->size_];
  [self writeWithByteArray:time];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersDerDerOutputStream)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/IssuerSerial.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "DERBitString.h"
#include "DERSequence.h"
#include "GeneralName.h"
#include "GeneralNames.h"
#include "IssuerSerial.h"
#include "J2ObjC_source.h"
#include "X500Name.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"

#if !__has_feature(objc_arc)
#error "IssuerSerial must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1X509IssuerSerial ()

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/IssuerSerial.java"


#line 15
@implementation OrgSpongycastleAsn1X509IssuerSerial


#line 22
+ (OrgSpongycastleAsn1X509IssuerSerial *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithId_(obj);
}


#line 38
+ (OrgSpongycastleAsn1X509IssuerSerial *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 45
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 62
- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serial {
  OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuer, serial);
  return self;
}


#line 69
- (instancetype)initWithOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)issuer
                                     withJavaMathBigInteger:(JavaMathBigInteger *)serial {
  OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_(self, issuer, serial);
  return self;
}


#line 76
- (instancetype)initWithOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)issuer
                         withOrgSpongycastleAsn1ASN1Integer:(OrgSpongycastleAsn1ASN1Integer *)serial {
  OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(self, issuer, serial);
  return self;
}


#line 84
- (OrgSpongycastleAsn1X509GeneralNames *)getIssuer {
  
#line 86
  return issuer_;
}


#line 89
- (OrgSpongycastleAsn1ASN1Integer *)getSerial {
  
#line 91
  return serial_;
}


#line 94
- (OrgSpongycastleAsn1DERBitString *)getIssuerUID {
  
#line 96
  return issuerUID_;
}


#line 109
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 111
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 113
  [v addWithOrgSpongycastleAsn1ASN1Encodable:issuer_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:serial_];
  
#line 116
  if (issuerUID_ != nil) {
    
#line 118
    [v addWithOrgSpongycastleAsn1ASN1Encodable:issuerUID_];
  }
  
#line 121
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1X509IssuerSerial;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509IssuerSerial;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509GeneralNames;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERBitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[4].selector = @selector(initWithOrgSpongycastleAsn1X509GeneralNames:withJavaMathBigInteger:);
  methods[5].selector = @selector(initWithOrgSpongycastleAsn1X509GeneralNames:withOrgSpongycastleAsn1ASN1Integer:);
  methods[6].selector = @selector(getIssuer);
  methods[7].selector = @selector(getSerial);
  methods[8].selector = @selector(getIssuerUID);
  methods[9].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "issuer_", "LOrgSpongycastleAsn1X509GeneralNames;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "serial_", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "issuerUID_", "LOrgSpongycastleAsn1DERBitString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LOrgSpongycastleAsn1ASN1Sequence;", "LOrgSpongycastleAsn1X500X500Name;LJavaMathBigInteger;", "LOrgSpongycastleAsn1X509GeneralNames;LJavaMathBigInteger;", "LOrgSpongycastleAsn1X509GeneralNames;LOrgSpongycastleAsn1ASN1Integer;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509IssuerSerial = { "IssuerSerial", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 10, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509IssuerSerial;
}

@end


#line 22
OrgSpongycastleAsn1X509IssuerSerial *OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1X509IssuerSerial_initialize();
  
#line 25
  if ([obj isKindOfClass:[OrgSpongycastleAsn1X509IssuerSerial class]]) {
    
#line 27
    return (OrgSpongycastleAsn1X509IssuerSerial *) obj;
  }
  
#line 30
  if (obj != nil) {
    
#line 32
    return new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 35
  return nil;
}


#line 38
OrgSpongycastleAsn1X509IssuerSerial *OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1X509IssuerSerial_initialize();
  
#line 42
  return OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 48
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] != 2 && [seq size] != 3) {
    
#line 50
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  
#line 53
  self->issuer_ = OrgSpongycastleAsn1X509GeneralNames_getInstanceWithId_([seq getObjectAtWithInt:0]);
  self->serial_ = OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:1]);
  
#line 56
  if ([seq size] == 3) {
    
#line 58
    self->issuerUID_ = OrgSpongycastleAsn1DERBitString_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
}


#line 45
OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 45
OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 62
void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serial) {
  OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(self, new_OrgSpongycastleAsn1X509GeneralNames_initWithOrgSpongycastleAsn1X509GeneralName_(new_OrgSpongycastleAsn1X509GeneralName_initWithOrgSpongycastleAsn1X500X500Name_(
#line 66
  issuer)), new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(serial));
}


#line 62
OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serial) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serial)
}


#line 62
OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serial) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serial)
}


#line 69
void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1X509GeneralNames *issuer, JavaMathBigInteger *serial) {
  OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(self,
#line 73
  issuer, new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(serial));
}


#line 69
OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_(OrgSpongycastleAsn1X509GeneralNames *issuer, JavaMathBigInteger *serial) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_, issuer, serial)
}


#line 69
OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_(OrgSpongycastleAsn1X509GeneralNames *issuer, JavaMathBigInteger *serial) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_, issuer, serial)
}


#line 76
void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1X509GeneralNames *issuer, OrgSpongycastleAsn1ASN1Integer *serial) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 80
  self->issuer_ = issuer;
  self->serial_ = serial;
}


#line 76
OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509GeneralNames *issuer, OrgSpongycastleAsn1ASN1Integer *serial) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_, issuer, serial)
}


#line 76
OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509GeneralNames *issuer, OrgSpongycastleAsn1ASN1Integer *serial) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509IssuerSerial, initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_, issuer, serial)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509IssuerSerial)

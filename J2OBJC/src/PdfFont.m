//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfFont.java
//

#include "BaseFont.h"
#include "ExceptionConverter.h"
#include "Image.h"
#include "J2ObjC_source.h"
#include "PdfFont.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Exception.h"

#if !__has_feature(objc_arc)
#error "PdfFont must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfFont () {
 @public
  /*!
   @brief the font metrics.
   */
  ComAowagieTextPdfBaseFont *font_;
  /*!
   @brief the size.
   */
  jfloat size_;
  /*!
   @brief an image.
   */
  ComAowagieTextImage *image_;
  jfloat hScale_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfFont, font_, ComAowagieTextPdfBaseFont *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfFont, image_, ComAowagieTextImage *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfFont.java"


#line 70
@implementation ComAowagieTextPdfPdfFont


#line 86
- (instancetype)initPackagePrivateWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)bf
                                                      withFloat:(jfloat)size {
  ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(self, bf, size);
  return self;
}


#line 100
- (jint)compareToWithId:(id)object {
  
#line 102
  if (self->image_ != nil) {
    return 0;
  }
  if (object == nil) {
    return -1;
  }
  ComAowagieTextPdfPdfFont *pdfFont;
  @try {
    pdfFont = (ComAowagieTextPdfPdfFont *) cast_chk(object, [ComAowagieTextPdfPdfFont class]);
    if (!JreObjectEqualsEquals(self->font_, pdfFont->font_)) {
      return 1;
    }
    if ([self size] != [pdfFont size]) {
      return 2;
    }
    return 0;
  }
  @catch (JavaLangClassCastException *cce) {
    return -2;
  }
}


#line 130
- (jfloat)size {
  if (self->image_ == nil) {
    return self->size_;
  }
  else {
    
#line 134
    return [self->image_ getScaledHeight];
  }
}


#line 144
- (jfloat)width {
  return [self widthWithInt:' '];
}


#line 155
- (jfloat)widthWithInt:(jint)character {
  if (self->image_ == nil) {
    return [((ComAowagieTextPdfBaseFont *) nil_chk(self->font_)) getWidthPointWithInt:character withFloat:self->size_] * self->hScale_;
  }
  else {
    
#line 159
    return [self->image_ getScaledWidth];
  }
}


#line 163
- (jfloat)widthWithNSString:(NSString *)s {
  if (self->image_ == nil) {
    return [((ComAowagieTextPdfBaseFont *) nil_chk(self->font_)) getWidthPointWithNSString:s withFloat:self->size_] * self->hScale_;
  }
  else {
    
#line 167
    return [self->image_ getScaledWidth];
  }
}


#line 171
- (ComAowagieTextPdfBaseFont *)getFont {
  return self->font_;
}

- (void)setImageWithComAowagieTextImage:(ComAowagieTextImage *)image {
  self->image_ = image;
}

+ (ComAowagieTextPdfPdfFont *)getDefaultFont {
  return ComAowagieTextPdfPdfFont_getDefaultFont();
}


#line 188
- (void)setHorizontalScalingWithFloat:(jfloat)hScale {
  self->hScale_ = hScale;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "F", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "F", 0x0, 3, 5, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfBaseFont;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfFont;", 0x8, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfBaseFont:withFloat:);
  methods[1].selector = @selector(compareToWithId:);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(width);
  methods[4].selector = @selector(widthWithInt:);
  methods[5].selector = @selector(widthWithNSString:);
  methods[6].selector = @selector(getFont);
  methods[7].selector = @selector(setImageWithComAowagieTextImage:);
  methods[8].selector = @selector(getDefaultFont);
  methods[9].selector = @selector(setHorizontalScalingWithFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "font_", "LComAowagieTextPdfBaseFont;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "size_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "image_", "LComAowagieTextImage;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hScale_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfBaseFont;F", "compareTo", "LNSObject;", "width", "I", "LNSString;", "setImage", "LComAowagieTextImage;", "setHorizontalScaling", "F" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfFont = { "PdfFont", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 10, 4, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfFont;
}

@end


#line 86
void ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(ComAowagieTextPdfPdfFont *self, ComAowagieTextPdfBaseFont *bf, jfloat size) {
  NSObject_init(self);
  self->hScale_ =
#line 82
  1;
  
#line 87
  self->size_ = size;
  self->font_ = bf;
}


#line 86
ComAowagieTextPdfPdfFont *new_ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(ComAowagieTextPdfBaseFont *bf, jfloat size) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfFont, initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_, bf, size)
}


#line 86
ComAowagieTextPdfPdfFont *create_ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(ComAowagieTextPdfBaseFont *bf, jfloat size) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfFont, initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_, bf, size)
}


#line 179
ComAowagieTextPdfPdfFont *ComAowagieTextPdfPdfFont_getDefaultFont() {
  ComAowagieTextPdfPdfFont_initialize();
  
#line 180
  @try {
    ComAowagieTextPdfBaseFont *bf = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(ComAowagieTextPdfBaseFont_HELVETICA, ComAowagieTextPdfBaseFont_WINANSI, false);
    return new_ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(bf, 12);
  }
  @catch (JavaLangException *ee) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ee);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfFont)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfPattern.java
//

#include "ExceptionConverter.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PdfArray.h"
#include "PdfName.h"
#include "PdfNumber.h"
#include "PdfObject.h"
#include "PdfPattern.h"
#include "PdfPatternPainter.h"
#include "PdfRectangle.h"
#include "PdfStream.h"
#include "Rectangle.h"
#include "java/lang/Exception.h"

#if !__has_feature(objc_arc)
#error "PdfPattern must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfPattern.java"


#line 57
@implementation ComAowagieTextPdfPdfPattern


#line 67
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfPatternPainter:(ComAowagieTextPdfPdfPatternPainter *)painter
                                                                 withInt:(jint)compressionLevel {
  ComAowagieTextPdfPdfPattern_initPackagePrivateWithComAowagieTextPdfPdfPatternPainter_withInt_(self, painter, compressionLevel);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfPdfPatternPainter:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfPatternPainter;I" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfPattern = { "PdfPattern", "com.aowagie.text.pdf", ptrTable, methods, NULL, 7, 0x0, 1, 0, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfPattern;
}

@end


#line 67
void ComAowagieTextPdfPdfPattern_initPackagePrivateWithComAowagieTextPdfPdfPatternPainter_withInt_(ComAowagieTextPdfPdfPattern *self, ComAowagieTextPdfPdfPatternPainter *painter, jint compressionLevel) {
  ComAowagieTextPdfPdfStream_init(self);
  ComAowagieTextPdfPdfNumber *one = new_ComAowagieTextPdfPdfNumber_initWithInt_(1);
  ComAowagieTextPdfPdfArray *matrix = [((ComAowagieTextPdfPdfPatternPainter *) nil_chk(painter)) getMatrix];
  if (matrix != nil) {
    [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MATRIX) withComAowagieTextPdfPdfObject:matrix];
  }
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, PATTERN)];
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, BBOX) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithComAowagieTextRectangle_([painter getBoundingBox])];
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES) withComAowagieTextPdfPdfObject:[painter getResources]];
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TILINGTYPE) withComAowagieTextPdfPdfObject:one];
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PATTERNTYPE) withComAowagieTextPdfPdfObject:one];
  if ([painter isStencil]) {
    [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PAINTTYPE) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(2)];
  }
  else {
    
#line 82
    [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PAINTTYPE) withComAowagieTextPdfPdfObject:one];
  }
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, XSTEP) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_([painter getXStep])];
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, YSTEP) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_([painter getYStep])];
  self->bytes_ = [painter toPdfWithComAowagieTextPdfPdfWriter:nil];
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LENGTH) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(((IOSByteArray *) nil_chk(self->bytes_))->size_)];
  @try {
    [self flateCompressWithInt:compressionLevel];
  }
  @catch (
#line 90
  JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 67
ComAowagieTextPdfPdfPattern *new_ComAowagieTextPdfPdfPattern_initPackagePrivateWithComAowagieTextPdfPdfPatternPainter_withInt_(ComAowagieTextPdfPdfPatternPainter *painter, jint compressionLevel) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfPattern, initPackagePrivateWithComAowagieTextPdfPdfPatternPainter_withInt_, painter, compressionLevel)
}


#line 67
ComAowagieTextPdfPdfPattern *create_ComAowagieTextPdfPdfPattern_initPackagePrivateWithComAowagieTextPdfPdfPatternPainter_withInt_(ComAowagieTextPdfPdfPatternPainter *painter, jint compressionLevel) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfPattern, initPackagePrivateWithComAowagieTextPdfPdfPatternPainter_withInt_, painter, compressionLevel)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfPattern)

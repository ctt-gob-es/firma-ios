//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfEncryption.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfEncryption")
#ifdef RESTRICT_PdfEncryption
#define INCLUDE_ALL_PdfEncryption 0
#else
#define INCLUDE_ALL_PdfEncryption 1
#endif
#undef RESTRICT_PdfEncryption

#if !defined (ComAowagieTextPdfPdfEncryption_) && (INCLUDE_ALL_PdfEncryption || defined(INCLUDE_ComAowagieTextPdfPdfEncryption))
#define ComAowagieTextPdfPdfEncryption_

@class ComAowagieTextPdfOutputStreamEncryption;
@class ComAowagieTextPdfPdfDictionary;
@class ComAowagieTextPdfPdfObject;
@class ComAowagieTextPdfStandardDecryption;
@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaSecurityCertCertificate;

/*!
 @author Paulo Soares (psoares@@consiste.pt)
 @author Kazuya Ujihara
 */
@interface ComAowagieTextPdfPdfEncryption : NSObject {
 @public
  /*!
   @brief The encryption key for the user
   */
  IOSByteArray *userKey_;
  jint permissions_;
  IOSByteArray *oeKey_;
  IOSByteArray *ueKey_;
  IOSByteArray *perms_;
}

#pragma mark Public

- (instancetype)initPackagePrivate;

- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfEncryption:(ComAowagieTextPdfPdfEncryption *)enc;

- (void)addRecipientWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert
                                            withInt:(jint)permission;

+ (IOSByteArray *)createDocumentId;

+ (ComAowagieTextPdfPdfObject *)createInfoIdWithByteArray:(IOSByteArray *)id_;

/*!
 @brief implements step f of Algorithm 2.A: Retrieving the file encryption key from an encrypted document in order to
  decrypt it (revision 6 and later) - ISO 32000-2 section 7.6.4.3.3
 */
- (jboolean)decryptAndCheckPermsWithByteArray:(IOSByteArray *)permsValue;

- (IOSByteArray *)decryptByteArrayWithByteArray:(IOSByteArray *)b;

- (jint)getCryptoMode;

- (ComAowagieTextPdfStandardDecryption *)getDecryptor;

- (ComAowagieTextPdfPdfDictionary *)getEncryptionDictionary;

- (ComAowagieTextPdfOutputStreamEncryption *)getEncryptionStreamWithJavaIoOutputStream:(JavaIoOutputStream *)os;

- (ComAowagieTextPdfPdfObject *)getFileID;

/*!
 @brief Indicates if only the embedded files have to be encrypted.
 @return if true only the embedded files will be encrypted
 @since 2.1.3
 */
- (jboolean)isEmbeddedFilesOnly;

- (jboolean)isMetadataEncrypted;

- (void)setCryptoModeWithInt:(jint)mode
                     withInt:(jint)kl;

- (void)setHashKeyWithInt:(jint)number
                  withInt:(jint)generation;

- (void)setupAllKeysWithByteArray:(IOSByteArray *)userPassword
                    withByteArray:(IOSByteArray *)ownerPassword
                          withInt:(jint)permissions;

- (void)setupByEncryptionKeyWithByteArray:(IOSByteArray *)key
                                  withInt:(jint)keylength;

/*!
 @brief implements step d of Algorithm 2.A: Retrieving the file encryption key from an encrypted document in order to
  decrypt it (revision 6 and later) - ISO 32000-2 section 7.6.4.3.3
 */
- (void)setupByOwnerPasswordWithByteArray:(IOSByteArray *)documentID
                            withByteArray:(IOSByteArray *)ownerPassword
                            withByteArray:(IOSByteArray *)uValue
                            withByteArray:(IOSByteArray *)ueValue
                            withByteArray:(IOSByteArray *)oValue
                            withByteArray:(IOSByteArray *)oeValue
                                  withInt:(jint)permissions;

- (void)setupByOwnerPasswordWithByteArray:(IOSByteArray *)documentID
                            withByteArray:(IOSByteArray *)ownerPassword
                            withByteArray:(IOSByteArray *)userKey
                            withByteArray:(IOSByteArray *)ownerKey
                                  withInt:(jint)permissions;

/*!
 @brief implements step e of Algorithm 2.A: Retrieving the file encryption key from
  an encrypted document in order to decrypt it (revision 6 and later) - ISO
  32000-2 section 7.6.4.3.3
 */
- (void)setupByUserPasswordWithByteArray:(IOSByteArray *)documentID
                           withByteArray:(IOSByteArray *)userPassword
                           withByteArray:(IOSByteArray *)uValue
                           withByteArray:(IOSByteArray *)ueValue
                           withByteArray:(IOSByteArray *)oValue
                           withByteArray:(IOSByteArray *)oeValue
                                 withInt:(jint)permissions;

- (void)setupByUserPasswordWithByteArray:(IOSByteArray *)documentID
                           withByteArray:(IOSByteArray *)userPassword
                           withByteArray:(IOSByteArray *)ownerKey
                                 withInt:(jint)permissions;

#pragma mark Package-Private

- (jint)calculateStreamSizeWithInt:(jint)n;

/*!
 @brief implements Algorithm 9: Computing the encryption dictionary’s O (owner password) and OE (owner encryption) values
  (Security handlers of revision 6) - ISO 32000-2 section 7.6.4.4.8
 */
- (void)computeOAndOeAlg9WithByteArray:(IOSByteArray *)ownerPassword;

/*!
 @brief implements Algorithm 10: Computing the encryption dictionary’s Perms (permissions) value (Security handlers of
  revision 6) - ISO 32000-2 section 7.6.4.4.9
 */
- (void)computePermsAlg10WithInt:(jint)permissions;

/*!
 @brief implements Algorithm 8: Computing the encryption dictionary’s U (user password) and UE (user encryption) values
  (Security handlers of revision 6) - ISO 32000-2 section 7.6.4.4.7
 */
- (void)computeUAndUeAlg8WithByteArray:(IOSByteArray *)userPassword;

- (IOSByteArray *)encryptByteArrayWithByteArray:(IOSByteArray *)b;

/*!
 @brief implements Algorithm 2.B: Computing a hash (revision 6 and later) - ISO 32000-2 section 7.6.4.3.4
 */
+ (IOSByteArray *)hashAlg2BWithByteArray:(IOSByteArray *)input
                           withByteArray:(IOSByteArray *)salt
                           withByteArray:(IOSByteArray *)userKey;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfPdfEncryption)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfEncryption, userKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfEncryption, oeKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfEncryption, ueKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfEncryption, perms_, IOSByteArray *)

inline jint ComAowagieTextPdfPdfEncryption_get_AES_256_V3(void);
#define ComAowagieTextPdfPdfEncryption_AES_256_V3 6
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfEncryption, AES_256_V3, jint)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfEncryption_initPackagePrivate(ComAowagieTextPdfPdfEncryption *self);

FOUNDATION_EXPORT ComAowagieTextPdfPdfEncryption *new_ComAowagieTextPdfPdfEncryption_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfEncryption *create_ComAowagieTextPdfPdfEncryption_initPackagePrivate(void);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfEncryption_initPackagePrivateWithComAowagieTextPdfPdfEncryption_(ComAowagieTextPdfPdfEncryption *self, ComAowagieTextPdfPdfEncryption *enc);

FOUNDATION_EXPORT ComAowagieTextPdfPdfEncryption *new_ComAowagieTextPdfPdfEncryption_initPackagePrivateWithComAowagieTextPdfPdfEncryption_(ComAowagieTextPdfPdfEncryption *enc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfEncryption *create_ComAowagieTextPdfPdfEncryption_initPackagePrivateWithComAowagieTextPdfPdfEncryption_(ComAowagieTextPdfPdfEncryption *enc);

FOUNDATION_EXPORT IOSByteArray *ComAowagieTextPdfPdfEncryption_createDocumentId(void);

FOUNDATION_EXPORT ComAowagieTextPdfPdfObject *ComAowagieTextPdfPdfEncryption_createInfoIdWithByteArray_(IOSByteArray *id_);

FOUNDATION_EXPORT IOSByteArray *ComAowagieTextPdfPdfEncryption_hashAlg2BWithByteArray_withByteArray_withByteArray_(IOSByteArray *input, IOSByteArray *salt, IOSByteArray *userKey);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfEncryption)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfEncryption")

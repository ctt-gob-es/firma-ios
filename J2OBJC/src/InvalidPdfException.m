//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/signers/pades/InvalidPdfException.java
//

#include "AOFormatFileException.h"
#include "InvalidPdfException.h"
#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"

#if !__has_feature(objc_arc)
#error "InvalidPdfException must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong EsGobAfirmaSignersPadesInvalidPdfException_get_serialVersionUID(void);
#define EsGobAfirmaSignersPadesInvalidPdfException_serialVersionUID 674827105543544636LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesInvalidPdfException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/signers/pades/InvalidPdfException.java"


#line 17
@implementation EsGobAfirmaSignersPadesInvalidPdfException


#line 25
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  EsGobAfirmaSignersPadesInvalidPdfException_initWithJavaLangThrowable_(self, cause);
  return self;
}


#line 33
- (instancetype)initWithNSString:(NSString *)msg {
  EsGobAfirmaSignersPadesInvalidPdfException_initWithNSString_(self, msg);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangThrowable:);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaSignersPadesInvalidPdfException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangThrowable;", "LNSString;" };
  static const J2ObjcClassInfo _EsGobAfirmaSignersPadesInvalidPdfException = { "InvalidPdfException", "es.gob.afirma.signers.pades", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersPadesInvalidPdfException;
}

@end


#line 25
void EsGobAfirmaSignersPadesInvalidPdfException_initWithJavaLangThrowable_(EsGobAfirmaSignersPadesInvalidPdfException *self, JavaLangThrowable *cause) {
  EsGobAfirmaCoreAOFormatFileException_initWithNSString_withJavaLangThrowable_(self, @"El fichero no es un PDF o es un PDF no soportado", cause);
}


#line 25
EsGobAfirmaSignersPadesInvalidPdfException *new_EsGobAfirmaSignersPadesInvalidPdfException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesInvalidPdfException, initWithJavaLangThrowable_, cause)
}


#line 25
EsGobAfirmaSignersPadesInvalidPdfException *create_EsGobAfirmaSignersPadesInvalidPdfException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesInvalidPdfException, initWithJavaLangThrowable_, cause)
}


#line 33
void EsGobAfirmaSignersPadesInvalidPdfException_initWithNSString_(EsGobAfirmaSignersPadesInvalidPdfException *self, NSString *msg) {
  EsGobAfirmaCoreAOFormatFileException_initWithNSString_(self, msg);
}


#line 33
EsGobAfirmaSignersPadesInvalidPdfException *new_EsGobAfirmaSignersPadesInvalidPdfException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesInvalidPdfException, initWithNSString_, msg)
}


#line 33
EsGobAfirmaSignersPadesInvalidPdfException *create_EsGobAfirmaSignersPadesInvalidPdfException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesInvalidPdfException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersPadesInvalidPdfException)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/jcajce/JceKeyTransRecipient.java
//

#include "ASN1ObjectIdentifier.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "BCCMSUtils.h"
#include "CMSException.h"
#include "CryptoProObjectIdentifiers.h"
#include "DefaultJcaJceExtHelper.h"
#include "EnvelopedDataHelper.h"
#include "GOST28147WrapParameterSpec.h"
#include "GenericKey.h"
#include "Gost2814789EncryptedKey.h"
#include "GostR3410KeyTransport.h"
#include "GostR3410TransportParameters.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JceAsymmetricKeyUnwrapper.h"
#include "JceKeyTransRecipient.h"
#include "NamedJcaJceExtHelper.h"
#include "OperatorException.h"
#include "ProviderJcaJceExtHelper.h"
#include "SubjectPublicKeyInfo.h"
#include "UserKeyingMaterialSpec.h"
#include "java/lang/Exception.h"
#include "java/security/Key.h"
#include "java/security/KeyFactory.h"
#include "java/security/PrivateKey.h"
#include "java/security/Provider.h"
#include "java/security/PublicKey.h"
#include "java/security/spec/X509EncodedKeySpec.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "javax/crypto/Cipher.h"
#include "javax/crypto/KeyAgreement.h"
#include "javax/crypto/SecretKey.h"

#if !__has_feature(objc_arc)
#error "JceKeyTransRecipient must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgSpongycastleCmsJcajceJceKeyTransRecipient () {
 @public
  id<JavaSecurityPrivateKey> recipientKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCmsJcajceJceKeyTransRecipient, recipientKey_, id<JavaSecurityPrivateKey>)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/jcajce/JceKeyTransRecipient.java"


#line 31
@implementation OrgSpongycastleCmsJcajceJceKeyTransRecipient


#line 42
- (instancetype)initWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)recipientKey {
  OrgSpongycastleCmsJcajceJceKeyTransRecipient_initWithJavaSecurityPrivateKey_(self, recipientKey);
  return self;
}


#line 53
- (OrgSpongycastleCmsJcajceJceKeyTransRecipient *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  
#line 55
  self->helper_ = new_OrgSpongycastleCmsJcajceEnvelopedDataHelper_initWithOrgSpongycastleCmsJcajceJcaJceExtHelper_(new_OrgSpongycastleCmsJcajceProviderJcaJceExtHelper_initPackagePrivateWithJavaSecurityProvider_(provider));
  self->contentHelper_ = helper_;
  
#line 58
  return self;
}


#line 67
- (OrgSpongycastleCmsJcajceJceKeyTransRecipient *)setProviderWithNSString:(NSString *)providerName {
  
#line 69
  self->helper_ = new_OrgSpongycastleCmsJcajceEnvelopedDataHelper_initWithOrgSpongycastleCmsJcajceJcaJceExtHelper_(new_OrgSpongycastleCmsJcajceNamedJcaJceExtHelper_initPackagePrivateWithNSString_(providerName));
  self->contentHelper_ = helper_;
  
#line 72
  return self;
}


#line 90
- (OrgSpongycastleCmsJcajceJceKeyTransRecipient *)setAlgorithmMappingWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)algorithm
                                                                                                    withNSString:(NSString *)algorithmName {
  (void) [((id<JavaUtilMap>) nil_chk(extraMappings_)) putWithId:algorithm withId:algorithmName];
  
#line 94
  return self;
}


#line 104
- (OrgSpongycastleCmsJcajceJceKeyTransRecipient *)setContentProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  
#line 106
  self->contentHelper_ = OrgSpongycastleCmsJcajceBCCMSUtils_createContentHelperWithJavaSecurityProvider_(provider);
  
#line 108
  return self;
}


#line 119
- (OrgSpongycastleCmsJcajceJceKeyTransRecipient *)setMustProduceEncodableUnwrappedKeyWithBoolean:(jboolean)unwrappedKeyMustBeEncodable {
  
#line 121
  self->unwrappedKeyMustBeEncodable_ = unwrappedKeyMustBeEncodable;
  
#line 123
  return self;
}


#line 133
- (OrgSpongycastleCmsJcajceJceKeyTransRecipient *)setContentProviderWithNSString:(NSString *)providerName {
  
#line 135
  self->contentHelper_ = OrgSpongycastleCmsJcajceBCCMSUtils_createContentHelperWithNSString_(providerName);
  
#line 137
  return self;
}


#line 150
- (OrgSpongycastleCmsJcajceJceKeyTransRecipient *)setKeySizeValidationWithBoolean:(jboolean)doValidate {
  
#line 152
  self->validateKeySize_ = doValidate;
  
#line 154
  return self;
}


#line 157
- (id<JavaSecurityKey>)extractSecretKeyWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                                       withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)encryptedKeyAlgorithm
                                                                        withByteArray:(IOSByteArray *)encryptedEncryptionKey {
  if (OrgSpongycastleCmsJcajceBCCMSUtils_isGOSTWithOrgSpongycastleAsn1ASN1ObjectIdentifier_([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(keyEncryptionAlgorithm)) getAlgorithm])) {
    
#line 162
    @try {
      
#line 164
      OrgSpongycastleAsn1CryptoproGostR3410KeyTransport *transport = OrgSpongycastleAsn1CryptoproGostR3410KeyTransport_getInstanceWithId_(encryptedEncryptionKey);
      
#line 166
      OrgSpongycastleAsn1CryptoproGostR3410TransportParameters *transParams = [((OrgSpongycastleAsn1CryptoproGostR3410KeyTransport *) nil_chk(transport)) getTransportParameters];
      
#line 168
      JavaSecurityKeyFactory *keyFactory = [((OrgSpongycastleCmsJcajceEnvelopedDataHelper *) nil_chk(helper_)) createKeyFactoryWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[keyEncryptionAlgorithm getAlgorithm]];
      
#line 170
      id<JavaSecurityPublicKey> pubKey = [((JavaSecurityKeyFactory *) nil_chk(keyFactory)) generatePublicWithJavaSecuritySpecKeySpec:new_JavaSecuritySpecX509EncodedKeySpec_initWithByteArray_([((OrgSpongycastleAsn1X509SubjectPublicKeyInfo *) nil_chk([((OrgSpongycastleAsn1CryptoproGostR3410TransportParameters *) nil_chk(transParams)) getEphemeralPublicKey])) getEncoded])];
      
#line 172
      JavaxCryptoKeyAgreement *agreement = [((OrgSpongycastleCmsJcajceEnvelopedDataHelper *) nil_chk(helper_)) createKeyAgreementWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[keyEncryptionAlgorithm getAlgorithm]];
      
#line 174
      [((JavaxCryptoKeyAgreement *) nil_chk(agreement)) init__WithJavaSecurityKey:recipientKey_ withJavaSecuritySpecAlgorithmParameterSpec:new_OrgSpongycastleJcajceSpecUserKeyingMaterialSpec_initWithByteArray_([transParams getUkm])];
      
#line 176
      (void) [agreement doPhaseWithJavaSecurityKey:pubKey withBoolean:true];
      
#line 178
      id<JavaxCryptoSecretKey> key = [agreement generateSecretWithNSString:@"GOST28147"];
      
#line 180
      JavaxCryptoCipher *keyCipher = [((OrgSpongycastleCmsJcajceEnvelopedDataHelper *) nil_chk(helper_)) createCipherWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1CryptoproCryptoProObjectIdentifiers, id_Gost28147_89_CryptoPro_KeyWrap)];
      
#line 182
      [((JavaxCryptoCipher *) nil_chk(keyCipher)) init__WithInt:JavaxCryptoCipher_UNWRAP_MODE withJavaSecurityKey:key withJavaSecuritySpecAlgorithmParameterSpec:new_OrgSpongycastleJcajceSpecGOST28147WrapParameterSpec_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withByteArray_([transParams getEncryptionParamSet], [transParams getUkm])];
      
#line 184
      OrgSpongycastleAsn1CryptoproGost2814789EncryptedKey *encKey = [transport getSessionEncryptedKey];
      
#line 186
      return [keyCipher unwrapWithByteArray:OrgSpongycastleUtilArrays_concatenateWithByteArray_withByteArray_([((OrgSpongycastleAsn1CryptoproGost2814789EncryptedKey *) nil_chk(encKey)) getEncryptedKey], [encKey getMacKey]) withNSString:[((OrgSpongycastleCmsJcajceEnvelopedDataHelper *) nil_chk(helper_)) getBaseCipherNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(encryptedKeyAlgorithm)) getAlgorithm]] withInt:JavaxCryptoCipher_SECRET_KEY];
    }
    @catch (JavaLangException *e) {
      
#line 190
      @throw new_OrgSpongycastleCmsCMSException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"exception unwrapping key: ", [e getMessage]), e);
    }
  }
  else {
    
#line 195
    OrgSpongycastleOperatorJcajceJceAsymmetricKeyUnwrapper *unwrapper = [((OrgSpongycastleOperatorJcajceJceAsymmetricKeyUnwrapper *) nil_chk([((OrgSpongycastleCmsJcajceEnvelopedDataHelper *) nil_chk(helper_)) createAsymmetricUnwrapperWithOrgSpongycastleAsn1X509AlgorithmIdentifier:keyEncryptionAlgorithm withJavaSecurityPrivateKey:recipientKey_])) setMustProduceEncodableUnwrappedKeyWithBoolean:unwrappedKeyMustBeEncodable_];
    
#line 197
    if (![((id<JavaUtilMap>) nil_chk(extraMappings_)) isEmpty]) {
      
#line 199
      for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((id<JavaUtilMap>) nil_chk(extraMappings_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        
#line 201
        OrgSpongycastleAsn1ASN1ObjectIdentifier *algorithm = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([it next], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
        
#line 203
        (void) [((OrgSpongycastleOperatorJcajceJceAsymmetricKeyUnwrapper *) nil_chk(unwrapper)) setAlgorithmMappingWithOrgSpongycastleAsn1ASN1ObjectIdentifier:algorithm withNSString:(NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(extraMappings_)) getWithId:algorithm], [NSString class])];
      }
    }
    
#line 207
    @try {
      
#line 209
      id<JavaSecurityKey> key = [((OrgSpongycastleCmsJcajceEnvelopedDataHelper *) nil_chk(helper_)) getJceKeyWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(encryptedKeyAlgorithm)) getAlgorithm] withOrgSpongycastleOperatorGenericKey:[((OrgSpongycastleOperatorJcajceJceAsymmetricKeyUnwrapper *) nil_chk(unwrapper)) generateUnwrappedKeyWithOrgSpongycastleAsn1X509AlgorithmIdentifier:encryptedKeyAlgorithm withByteArray:encryptedEncryptionKey]];
      
#line 211
      if (validateKeySize_) {
        
#line 213
        [((OrgSpongycastleCmsJcajceEnvelopedDataHelper *) nil_chk(helper_)) keySizeCheckWithOrgSpongycastleAsn1X509AlgorithmIdentifier:encryptedKeyAlgorithm withJavaSecurityKey:key];
      }
      
#line 216
      return key;
    }
    @catch (OrgSpongycastleOperatorOperatorException *e) {
      
#line 220
      @throw new_OrgSpongycastleCmsCMSException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"exception unwrapping key: ", [e getMessage]), e);
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsJcajceJceKeyTransRecipient;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsJcajceJceKeyTransRecipient;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsJcajceJceKeyTransRecipient;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsJcajceJceKeyTransRecipient;", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsJcajceJceKeyTransRecipient;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsJcajceJceKeyTransRecipient;", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCmsJcajceJceKeyTransRecipient;", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityKey;", 0x4, 10, 11, 12, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecurityPrivateKey:);
  methods[1].selector = @selector(setProviderWithJavaSecurityProvider:);
  methods[2].selector = @selector(setProviderWithNSString:);
  methods[3].selector = @selector(setAlgorithmMappingWithOrgSpongycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[4].selector = @selector(setContentProviderWithJavaSecurityProvider:);
  methods[5].selector = @selector(setMustProduceEncodableUnwrappedKeyWithBoolean:);
  methods[6].selector = @selector(setContentProviderWithNSString:);
  methods[7].selector = @selector(setKeySizeValidationWithBoolean:);
  methods[8].selector = @selector(extractSecretKeyWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withOrgSpongycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "recipientKey_", "LJavaSecurityPrivateKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "helper_", "LOrgSpongycastleCmsJcajceEnvelopedDataHelper;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "contentHelper_", "LOrgSpongycastleCmsJcajceEnvelopedDataHelper;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "extraMappings_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "validateKeySize_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "unwrappedKeyMustBeEncodable_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityPrivateKey;", "setProvider", "LJavaSecurityProvider;", "LNSString;", "setAlgorithmMapping", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;LNSString;", "setContentProvider", "setMustProduceEncodableUnwrappedKey", "Z", "setKeySizeValidation", "extractSecretKey", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LOrgSpongycastleAsn1X509AlgorithmIdentifier;[B", "LOrgSpongycastleCmsCMSException;" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsJcajceJceKeyTransRecipient = { "JceKeyTransRecipient", "org.spongycastle.cms.jcajce", ptrTable, methods, fields, 7, 0x401, 9, 6, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCmsJcajceJceKeyTransRecipient;
}

@end


#line 42
void OrgSpongycastleCmsJcajceJceKeyTransRecipient_initWithJavaSecurityPrivateKey_(OrgSpongycastleCmsJcajceJceKeyTransRecipient *self, id<JavaSecurityPrivateKey> recipientKey) {
  NSObject_init(self);
  self->helper_ = new_OrgSpongycastleCmsJcajceEnvelopedDataHelper_initWithOrgSpongycastleCmsJcajceJcaJceExtHelper_(new_OrgSpongycastleCmsJcajceDefaultJcaJceExtHelper_initPackagePrivate());
  self->contentHelper_ = self->helper_;
  self->extraMappings_ = new_JavaUtilHashMap_init();
  self->validateKeySize_ =
#line 39
  false;
  
#line 44
  self->recipientKey_ = recipientKey;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsJcajceJceKeyTransRecipient)

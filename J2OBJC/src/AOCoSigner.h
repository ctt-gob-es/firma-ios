//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/signers/AOCoSigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AOCoSigner")
#ifdef RESTRICT_AOCoSigner
#define INCLUDE_ALL_AOCoSigner 0
#else
#define INCLUDE_ALL_AOCoSigner 1
#endif
#undef RESTRICT_AOCoSigner

#if !defined (EsGobAfirmaCoreSignersAOCoSigner_) && (INCLUDE_ALL_AOCoSigner || defined(INCLUDE_EsGobAfirmaCoreSignersAOCoSigner))
#define EsGobAfirmaCoreSignersAOCoSigner_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaUtilProperties;
@protocol JavaSecurityPrivateKey;

/*!
 @brief Define los requerimientos de las clases capaces de efectuar cofirmas digitales.
 @version 1.0
 */
@protocol EsGobAfirmaCoreSignersAOCoSigner < JavaObject >

/*!
 @brief Cofirma un contenido (t&iacute;picamente un fichero).Para realizar la
  cofirma se necesitan los datos originales (que este m&eacute;todo
  firmar&aacute; normalmente) y la firma sobre la que se realiza la cofirma
  (a los que se agregar&aacute; el resultado de la nueva firma).
 <br>
 @param data Datos que deseamos a cofirmar.
 @param sign Flujo de lectura de la firma de los datos que se quiere              cofirmar.
 @param algorithm Algoritmo a usar para la firma (SHA1withRSA, SHA512withRSA,...)
 @param key Clave privada a usar para firmar
 @param certChain Cadena de certificados del firmante
 @param extraParams Par &aacute; metros adicionales para la cofirma
 @return Contenido firmado
 @throw AOExceptionCuando ocurre cualquier problema durante el proceso
 @throw IOExceptionSi ocurren problemas relacionados con la lectura de la firma o los datos
 */
- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)data
                        withByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)extraParams;

/*!
 @brief Cofirma un contenido (t&iacute;picamente un fichero).Para realizar la
  cofirma se necesita el documento en el que se encuentra la firma sobre la
  que se realiza la cofirma (a los que se agregar&aacute; el resultado de
  la nueva firma).
 <br>
 @param sign Firma de los datos que se quiere cofirmar.
 @param algorithm Algoritmo a usar para la firma (SHA1withRSA, SHA512withRSA,...)
 @param key Clave privada a usar para firmar
 @param certChain cadena de certificados del firmante
 @param extraParams Par
  &aacute; metros adicionales para la cofirma
 @return Contenido firmado
 @throw AOException
 Cuando ocurre cualquier problema durante el proceso
 @throw IOExceptionSi ocurren problemas relacionados con la lectura de la firma
 */
- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)extraParams;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreSignersAOCoSigner)

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreSignersAOCoSigner)

#endif

#pragma pop_macro("INCLUDE_ALL_AOCoSigner")

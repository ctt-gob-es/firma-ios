//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/der/DerInputBuffer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DerInputBuffer")
#ifdef RESTRICT_DerInputBuffer
#define INCLUDE_ALL_DerInputBuffer 0
#else
#define INCLUDE_ALL_DerInputBuffer 1
#endif
#undef RESTRICT_DerInputBuffer

#if !defined (EsGobAfirmaCoreSignersDerDerInputBuffer_) && (INCLUDE_ALL_DerInputBuffer || defined(INCLUDE_EsGobAfirmaCoreSignersDerDerInputBuffer))
#define EsGobAfirmaCoreSignersDerDerInputBuffer_

#define RESTRICT_JavaIoByteArrayInputStream 1
#define INCLUDE_JavaIoByteArrayInputStream 1
#include "java/io/ByteArrayInputStream.h"

@class EsGobAfirmaCoreSignersDerBitArray;
@class IOSByteArray;
@class JavaMathBigInteger;

/*!
 @brief DER input buffer ...this is the main abstraction in the DER library
  which actively works with the "untyped byte stream" abstraction.
 It
  does so with impunity, since it's not intended to be exposed to
  anyone who could violate the "typed value stream" DER model and hence
  corrupt the input stream of DER values.
 @author David Brownell
 */
@interface EsGobAfirmaCoreSignersDerDerInputBuffer : JavaIoByteArrayInputStream < NSCopying > {
 @public
  jboolean allowBER_;
}

#pragma mark Public

/*!
 @brief Compares this DerInputBuffer for equality with the specified
  object.
 @param Other object.
 @return <code>true</code> if the object is a DerInputBuffer with the same
  content.
 */
- (jboolean)isEqual:(id)other;

/*!
 @brief Returns the bit string which takes up the specified
  number of bytes in this buffer.
 @param len bit string's length.
 @return bit string
 @throw IOExceptionWhen no it possible read data.
 */
- (IOSByteArray *)getBitStringWithInt:(jint)len;

/*!
 @brief Returns the integer which takes up the specified number
  of bytes in this buffer.
 @throw IOExceptionif the result is not within the valid
  range for integer, i.e. between Integer.MIN_VALUE and
  Integer.MAX_VALUE.
 @param len the number of bytes to use.
 @return the integer.
 @throw IOExceptionWhen no it possible read data.
 */
- (jint)getIntegerWithInt:(jint)len;

/*!
 @brief Returns a hashcode for this DerInputBuffer.
 @return a hashcode for this DerInputBuffer.
 */
- (NSUInteger)hash;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)buf;

- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)buf
                                    withBoolean:(jboolean)allowBER;

- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)buf
                                        withInt:(jint)offset
                                        withInt:(jint)len
                                    withBoolean:(jboolean)allowBER;

- (EsGobAfirmaCoreSignersDerDerInputBuffer *)dup;

- (jboolean)equalsWithEsGobAfirmaCoreSignersDerDerInputBuffer:(EsGobAfirmaCoreSignersDerDerInputBuffer *)other;

/*!
 @brief Returns the integer which takes up the specified number
  of bytes in this buffer as a BigInteger.
 @param len the number of bytes to use.
 @param makePositive whether to always return a positive value,    irrespective of actual encoding
 @return the integer as a BigInteger.
 @throw IOExceptionWhen no it possible read data.
 */
- (JavaMathBigInteger *)getBigIntegerWithInt:(jint)len
                                 withBoolean:(jboolean)makePositive;

/*!
 @brief Returns the bit string which takes up the rest of this buffer.
 @return BitString.
 @throw IOExceptionWhen no it possible read data.
 */
- (IOSByteArray *)getBitString;

/*!
 @brief Returns the bit string which takes up the rest of this buffer.
 The bit string need not be byte-aligned.
 @return BitArray.
 @throw IOExceptionWhen no it possible read data.
 */
- (EsGobAfirmaCoreSignersDerBitArray *)getUnalignedBitString;

- (jint)peek;

- (IOSByteArray *)toByteArray;

- (void)truncateWithInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithByteArray:(IOSByteArray *)arg0
                          withInt:(jint)arg1
                          withInt:(jint)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreSignersDerDerInputBuffer)

FOUNDATION_EXPORT void EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_(EsGobAfirmaCoreSignersDerDerInputBuffer *self, IOSByteArray *buf);

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerDerInputBuffer *new_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_(IOSByteArray *buf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerDerInputBuffer *create_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_(IOSByteArray *buf);

FOUNDATION_EXPORT void EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withBoolean_(EsGobAfirmaCoreSignersDerDerInputBuffer *self, IOSByteArray *buf, jboolean allowBER);

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerDerInputBuffer *new_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withBoolean_(IOSByteArray *buf, jboolean allowBER) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerDerInputBuffer *create_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withBoolean_(IOSByteArray *buf, jboolean allowBER);

FOUNDATION_EXPORT void EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withInt_withInt_withBoolean_(EsGobAfirmaCoreSignersDerDerInputBuffer *self, IOSByteArray *buf, jint offset, jint len, jboolean allowBER);

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerDerInputBuffer *new_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withInt_withInt_withBoolean_(IOSByteArray *buf, jint offset, jint len, jboolean allowBER) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreSignersDerDerInputBuffer *create_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withInt_withInt_withBoolean_(IOSByteArray *buf, jint offset, jint len, jboolean allowBER);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreSignersDerDerInputBuffer)

#endif

#pragma pop_macro("INCLUDE_ALL_DerInputBuffer")

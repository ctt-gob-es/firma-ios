//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/BlockCipher.java
//

#include "BlockCipher.h"
#include "J2ObjC_source.h"

#if !__has_feature(objc_arc)
#error "BlockCipher must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCryptoBlockCipher : NSObject

@end

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/BlockCipher.java"


#line 7
@implementation OrgSpongycastleCryptoBlockCipher

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[1].selector = @selector(getAlgorithmName);
  methods[2].selector = @selector(getBlockSize);
  methods[3].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[4].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "init", "ZLOrgSpongycastleCryptoCipherParameters;", "LJavaLangIllegalArgumentException;", "processBlock", "[BI[BI", "LOrgSpongycastleCryptoDataLengthException;LJavaLangIllegalStateException;" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoBlockCipher = { "BlockCipher", "org.spongycastle.crypto", ptrTable, methods, NULL, 7, 0x609, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoBlockCipher;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoBlockCipher)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfString.java
//

#include "ByteBuffer.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PdfContentByte.h"
#include "PdfEncodings.h"
#include "PdfEncryption.h"
#include "PdfObject.h"
#include "PdfReader.h"
#include "PdfString.h"
#include "PdfWriter.h"
#include "java/io/OutputStream.h"

#if !__has_feature(objc_arc)
#error "PdfString must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfString () {
 @public
  NSString *originalValue_;
  /*!
   @brief The encoding.
   */
  NSString *encoding_;
  jint objNum_;
  jint objGen_;
  jboolean hexWriting_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfString, originalValue_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfString, encoding_, NSString *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfString.java"


#line 73
@implementation ComAowagieTextPdfPdfString

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 96
- (instancetype)init {
  ComAowagieTextPdfPdfString_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 106
- (instancetype)initWithNSString:(NSString *)value {
  ComAowagieTextPdfPdfString_initWithNSString_(self, value);
  return self;
}


#line 118
- (instancetype)initWithNSString:(NSString *)value
                    withNSString:(NSString *)encoding {
  ComAowagieTextPdfPdfString_initWithNSString_withNSString_(self, value, encoding);
  return self;
}


#line 129
- (instancetype)initWithByteArray:(IOSByteArray *)bytes {
  ComAowagieTextPdfPdfString_initWithByteArray_(self, bytes);
  return self;
}


#line 144
- (void)toPdfWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withJavaIoOutputStream:(JavaIoOutputStream *)os {
  IOSByteArray *b = [self getBytes];
  ComAowagieTextPdfPdfEncryption *crypto = nil;
  if (writer != nil) {
    crypto = [writer getEncryption];
  }
  if (crypto != nil && ![crypto isEmbeddedFilesOnly]) {
    b = [crypto encryptByteArrayWithByteArray:b];
  }
  if (self->hexWriting_) {
    ComAowagieTextPdfByteBuffer *buf = new_ComAowagieTextPdfByteBuffer_init();
    (void) [buf appendWithChar:'<'];
    jint len = ((IOSByteArray *) nil_chk(b))->size_;
    for (jint k = 0; k < len; ++k) {
      (void) [buf appendHexWithByte:IOSByteArray_Get(b, k)];
    }
    (void) [buf appendWithChar:'>'];
    [((JavaIoOutputStream *) nil_chk(os)) writeWithByteArray:[buf toByteArray]];
  }
  else {
    
#line 164
    [((JavaIoOutputStream *) nil_chk(os)) writeWithByteArray:ComAowagieTextPdfPdfContentByte_escapeStringWithByteArray_(b)];
  }
}


#line 173
- (NSString *)description {
  
#line 175
  return self->value_;
}


#line 178
- (IOSByteArray *)getBytes {
  
#line 180
  if (self->bytes_ == nil) {
    if (self->encoding_ != nil && [self->encoding_ isEqual:ComAowagieTextPdfPdfObject_TEXT_UNICODE] && ComAowagieTextPdfPdfEncodings_isPdfDocEncodingWithNSString_(self->value_)) {
      self->bytes_ = ComAowagieTextPdfPdfEncodings_convertToBytesWithNSString_withNSString_(self->value_, ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING);
    }
    else {
      
#line 184
      self->bytes_ = ComAowagieTextPdfPdfEncodings_convertToBytesWithNSString_withNSString_(self->value_, self->encoding_);
    }
  }
  return self->bytes_;
}


#line 198
- (NSString *)toUnicodeString {
  if (self->encoding_ != nil && [self->encoding_ java_length] != 0) {
    return self->value_;
  }
  (void) [self getBytes];
  if (((IOSByteArray *) nil_chk(self->bytes_))->size_ >= 2 && IOSByteArray_Get(self->bytes_, 0) == (jbyte) 254 && IOSByteArray_Get(self->bytes_, 1) == (jbyte) 255) {
    return ComAowagieTextPdfPdfEncodings_convertToStringWithByteArray_withNSString_(self->bytes_, ComAowagieTextPdfPdfObject_TEXT_UNICODE);
  }
  else {
    
#line 206
    return ComAowagieTextPdfPdfEncodings_convertToStringWithByteArray_withNSString_(self->bytes_, ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING);
  }
}


#line 215
- (NSString *)getEncoding {
  return self->encoding_;
}

- (void)setObjNumWithInt:(jint)objNum
                 withInt:(jint)objGen {
  
#line 220
  self->objNum_ = objNum;
  self->objGen_ = objGen;
}


#line 228
- (void)decryptWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  ComAowagieTextPdfPdfEncryption *decrypt = [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getDecrypt];
  if (decrypt != nil) {
    self->originalValue_ = self->value_;
    [decrypt setHashKeyWithInt:self->objNum_ withInt:self->objGen_];
    self->bytes_ = ComAowagieTextPdfPdfEncodings_convertToBytesWithNSString_withNSString_(self->value_, nil);
    self->bytes_ = [decrypt decryptByteArrayWithByteArray:self->bytes_];
    self->value_ = ComAowagieTextPdfPdfEncodings_convertToStringWithByteArray_withNSString_(self->bytes_, nil);
  }
}

- (IOSByteArray *)getOriginalBytes {
  if (self->originalValue_ == nil) {
    return [self getBytes];
  }
  return ComAowagieTextPdfPdfEncodings_convertToBytesWithNSString_withNSString_(self->originalValue_, nil);
}

- (ComAowagieTextPdfPdfString *)setHexWritingWithBoolean:(jboolean)hexWriting {
  self->hexWriting_ = hexWriting;
  return self;
}

- (jboolean)isHexWriting {
  return self->hexWriting_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfString;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withNSString:);
  methods[3].selector = @selector(initWithByteArray:);
  methods[4].selector = @selector(toPdfWithComAowagieTextPdfPdfWriter:withJavaIoOutputStream:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(getBytes);
  methods[7].selector = @selector(toUnicodeString);
  methods[8].selector = @selector(getEncoding);
  methods[9].selector = @selector(setObjNumWithInt:withInt:);
  methods[10].selector = @selector(decryptWithComAowagieTextPdfPdfReader:);
  methods[11].selector = @selector(getOriginalBytes);
  methods[12].selector = @selector(setHexWritingWithBoolean:);
  methods[13].selector = @selector(isHexWriting);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "originalValue_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "encoding_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "objNum_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "objGen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hexWriting_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSString;", "[B", "toPdf", "LComAowagieTextPdfPdfWriter;LJavaIoOutputStream;", "LJavaIoIOException;", "toString", "setObjNum", "II", "decrypt", "LComAowagieTextPdfPdfReader;", "setHexWriting", "Z" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfString = { "PdfString", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1, 14, 6, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfString;
}

@end


#line 96
void ComAowagieTextPdfPdfString_init(ComAowagieTextPdfPdfString *self) {
  ComAowagieTextPdfPdfObject_initWithInt_(self, ComAowagieTextPdfPdfObject_STRING);
  self->value_ = ComAowagieTextPdfPdfObject_NOTHING;
  self->originalValue_ =
#line 80
  nil;
  self->encoding_ = ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING;
  self->objNum_ =
#line 85
  0;
  self->objGen_ =
#line 87
  0;
  self->hexWriting_ =
#line 89
  false;
}


#line 96
ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfString, init)
}


#line 96
ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfString, init)
}


#line 106
void ComAowagieTextPdfPdfString_initWithNSString_(ComAowagieTextPdfPdfString *self, NSString *value) {
  ComAowagieTextPdfPdfObject_initWithInt_(self, ComAowagieTextPdfPdfObject_STRING);
  self->value_ = ComAowagieTextPdfPdfObject_NOTHING;
  self->originalValue_ =
#line 80
  nil;
  self->encoding_ = ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING;
  self->objNum_ =
#line 85
  0;
  self->objGen_ =
#line 87
  0;
  self->hexWriting_ =
#line 89
  false;
  
#line 108
  self->value_ = value;
}


#line 106
ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_initWithNSString_(NSString *value) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfString, initWithNSString_, value)
}


#line 106
ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_initWithNSString_(NSString *value) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfString, initWithNSString_, value)
}


#line 118
void ComAowagieTextPdfPdfString_initWithNSString_withNSString_(ComAowagieTextPdfPdfString *self, NSString *value, NSString *encoding) {
  ComAowagieTextPdfPdfObject_initWithInt_(self, ComAowagieTextPdfPdfObject_STRING);
  self->value_ = ComAowagieTextPdfPdfObject_NOTHING;
  self->originalValue_ =
#line 80
  nil;
  self->encoding_ = ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING;
  self->objNum_ =
#line 85
  0;
  self->objGen_ =
#line 87
  0;
  self->hexWriting_ =
#line 89
  false;
  
#line 120
  self->value_ = value;
  self->encoding_ = encoding;
}


#line 118
ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(NSString *value, NSString *encoding) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfString, initWithNSString_withNSString_, value, encoding)
}


#line 118
ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(NSString *value, NSString *encoding) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfString, initWithNSString_withNSString_, value, encoding)
}


#line 129
void ComAowagieTextPdfPdfString_initWithByteArray_(ComAowagieTextPdfPdfString *self, IOSByteArray *bytes) {
  ComAowagieTextPdfPdfObject_initWithInt_(self, ComAowagieTextPdfPdfObject_STRING);
  self->value_ = ComAowagieTextPdfPdfObject_NOTHING;
  self->originalValue_ =
#line 80
  nil;
  self->encoding_ = ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING;
  self->objNum_ =
#line 85
  0;
  self->objGen_ =
#line 87
  0;
  self->hexWriting_ =
#line 89
  false;
  
#line 131
  self->value_ = ComAowagieTextPdfPdfEncodings_convertToStringWithByteArray_withNSString_(bytes, nil);
  self->encoding_ = ComAowagieTextPdfPdfObject_NOTHING;
}


#line 129
ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfString, initWithByteArray_, bytes)
}


#line 129
ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfString, initWithByteArray_, bytes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfString)

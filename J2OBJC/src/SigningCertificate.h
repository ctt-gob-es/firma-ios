//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ess/SigningCertificate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SigningCertificate")
#ifdef RESTRICT_SigningCertificate
#define INCLUDE_ALL_SigningCertificate 0
#else
#define INCLUDE_ALL_SigningCertificate 1
#endif
#undef RESTRICT_SigningCertificate

#if !defined (OrgSpongycastleAsn1EssSigningCertificate_) && (INCLUDE_ALL_SigningCertificate || defined(INCLUDE_OrgSpongycastleAsn1EssSigningCertificate))
#define OrgSpongycastleAsn1EssSigningCertificate_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class IOSObjectArray;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1EssESSCertID;

@interface OrgSpongycastleAsn1EssSigningCertificate : OrgSpongycastleAsn1ASN1Object {
 @public
  OrgSpongycastleAsn1ASN1Sequence *certs_;
  OrgSpongycastleAsn1ASN1Sequence *policies_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1EssESSCertID:(OrgSpongycastleAsn1EssESSCertID *)essCertID;

- (IOSObjectArray *)getCerts;

+ (OrgSpongycastleAsn1EssSigningCertificate *)getInstanceWithId:(id)o;

- (IOSObjectArray *)getPolicies;

/*!
 @brief The definition of SigningCertificate is
 @code

  SigningCertificate ::=  SEQUENCE {
       certs        SEQUENCE OF ESSCertID,
       policies     SEQUENCE OF PolicyInformation OPTIONAL
  } 
  
@endcode
  id-aa-signingCertificate OBJECT IDENTIFIER ::= { iso(1)
   member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
   smime(16) id-aa(2) 12 }
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1EssSigningCertificate)

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EssSigningCertificate, certs_, OrgSpongycastleAsn1ASN1Sequence *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1EssSigningCertificate, policies_, OrgSpongycastleAsn1ASN1Sequence *)

FOUNDATION_EXPORT OrgSpongycastleAsn1EssSigningCertificate *OrgSpongycastleAsn1EssSigningCertificate_getInstanceWithId_(id o);

FOUNDATION_EXPORT void OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1EssESSCertID_(OrgSpongycastleAsn1EssSigningCertificate *self, OrgSpongycastleAsn1EssESSCertID *essCertID);

FOUNDATION_EXPORT OrgSpongycastleAsn1EssSigningCertificate *new_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1EssESSCertID_(OrgSpongycastleAsn1EssESSCertID *essCertID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1EssSigningCertificate *create_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1EssESSCertID_(OrgSpongycastleAsn1EssESSCertID *essCertID);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1EssSigningCertificate)

#endif

#pragma pop_macro("INCLUDE_ALL_SigningCertificate")

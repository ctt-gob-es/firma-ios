//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/digests/MD2Digest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MD2Digest")
#ifdef RESTRICT_MD2Digest
#define INCLUDE_ALL_MD2Digest 0
#else
#define INCLUDE_ALL_MD2Digest 1
#endif
#undef RESTRICT_MD2Digest

#if !defined (OrgSpongycastleCryptoDigestsMD2Digest_) && (INCLUDE_ALL_MD2Digest || defined(INCLUDE_OrgSpongycastleCryptoDigestsMD2Digest))
#define OrgSpongycastleCryptoDigestsMD2Digest_

#define RESTRICT_ExtendedDigest 1
#define INCLUDE_OrgSpongycastleCryptoExtendedDigest 1
#include "ExtendedDigest.h"

#define RESTRICT_Memoable 1
#define INCLUDE_OrgSpongycastleUtilMemoable 1
#include "Memoable.h"

@class IOSByteArray;

/*!
 @brief implementation of MD2
  as outlined in RFC1319 by B.Kaliski from RSA Laboratories April 1992
 */
@interface OrgSpongycastleCryptoDigestsMD2Digest : NSObject < OrgSpongycastleCryptoExtendedDigest, OrgSpongycastleUtilMemoable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgSpongycastleCryptoDigestsMD2Digest:(OrgSpongycastleCryptoDigestsMD2Digest *)t;

- (id<OrgSpongycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

/*!
 @brief close the digest, producing the final digest value.The doFinal
  call leaves the digest reset.
 @param outArg the array the digest is to be copied into.
 @param outOff the offset into the out array the digest is to start at.
 */
- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

/*!
 @brief return the algorithm name
 @return the algorithm name
 */
- (NSString *)getAlgorithmName;

- (jint)getByteLength;

/*!
 @brief return the size, in bytes, of the digest produced by this message digest.
 @return the size, in bytes, of the digest produced by this message digest.
 */
- (jint)getDigestSize;

/*!
 @brief reset the digest back to it's initial state.
 */
- (void)reset;

- (void)resetWithOrgSpongycastleUtilMemoable:(id<OrgSpongycastleUtilMemoable>)other;

/*!
 @brief update the message digest with a single byte.
 @param inArg the input byte to be entered.
 */
- (void)updateWithByte:(jbyte)inArg;

/*!
 @brief update the message digest with a block of bytes.
 @param inArg the byte array containing the data.
 @param inOff the offset into the byte array where the data starts.
 @param len the length of the data.
 */
- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

#pragma mark Protected

- (void)processBlockWithByteArray:(IOSByteArray *)m;

- (void)processCheckSumWithByteArray:(IOSByteArray *)m;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCryptoDigestsMD2Digest)

FOUNDATION_EXPORT void OrgSpongycastleCryptoDigestsMD2Digest_init(OrgSpongycastleCryptoDigestsMD2Digest *self);

FOUNDATION_EXPORT OrgSpongycastleCryptoDigestsMD2Digest *new_OrgSpongycastleCryptoDigestsMD2Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoDigestsMD2Digest *create_OrgSpongycastleCryptoDigestsMD2Digest_init(void);

FOUNDATION_EXPORT void OrgSpongycastleCryptoDigestsMD2Digest_initWithOrgSpongycastleCryptoDigestsMD2Digest_(OrgSpongycastleCryptoDigestsMD2Digest *self, OrgSpongycastleCryptoDigestsMD2Digest *t);

FOUNDATION_EXPORT OrgSpongycastleCryptoDigestsMD2Digest *new_OrgSpongycastleCryptoDigestsMD2Digest_initWithOrgSpongycastleCryptoDigestsMD2Digest_(OrgSpongycastleCryptoDigestsMD2Digest *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoDigestsMD2Digest *create_OrgSpongycastleCryptoDigestsMD2Digest_initWithOrgSpongycastleCryptoDigestsMD2Digest_(OrgSpongycastleCryptoDigestsMD2Digest *t);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoDigestsMD2Digest)

#endif

#pragma pop_macro("INCLUDE_ALL_MD2Digest")

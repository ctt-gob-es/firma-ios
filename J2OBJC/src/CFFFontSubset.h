//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFontSubset.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CFFFontSubset")
#ifdef RESTRICT_CFFFontSubset
#define INCLUDE_ALL_CFFFontSubset 0
#else
#define INCLUDE_ALL_CFFFontSubset 1
#endif
#undef RESTRICT_CFFFontSubset

#if !defined (ComAowagieTextPdfCFFFontSubset_) && (INCLUDE_ALL_CFFFontSubset || defined(INCLUDE_ComAowagieTextPdfCFFFontSubset))
#define ComAowagieTextPdfCFFFontSubset_

#define RESTRICT_CFFFont 1
#define INCLUDE_ComAowagieTextPdfCFFFont 1
#include "CFFFont.h"

@class ComAowagieTextPdfRandomAccessFileOrArray;
@class IOSByteArray;
@class JavaUtilHashMap;

/*!
 @brief This Class subsets a CFF Type Font.The subset is preformed for CID fonts and NON CID fonts.
 The Charstring is subsetted for both types. For CID fonts only the FDArray which are used are embedded.
  The Lsubroutines of the FDArrays used are subsetted as well. The Subroutine subset supports both Type1 and Type2
  formatting although only tested on Type2 Format.
  For Non CID the Lsubroutines are subsetted. On both types the Gsubroutines is subsetted.
  A font which was not of CID type is transformed into CID as a part of the subset process.
  The CID synthetic creation was written by Sivan Toledo (sivan@@math.tau.ac.il)
 @author Oren Manor (manorore@@post.tau.ac.il) and Ygal Blum (blumygal@@post.tau.ac.il)
 */
@interface ComAowagieTextPdfCFFFontSubset : ComAowagieTextPdfCFFFont

#pragma mark Public

/*!
 @brief C'tor for CFFFontSubset
 @param rf - The font file
 @param GlyphsUsed - a HashMap that contains the glyph used in the subset
 */
- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)rf
                                                           withJavaUtilHashMap:(JavaUtilHashMap *)GlyphsUsed;

/*!
 @brief The Process function extracts one font out of the CFF file and returns a
  subset version of the original.
 @param fontName - The name of the font to be taken out of the CFF
 @return The new font stream
 @throw IOExceptionIf I/O error.
 */
- (IOSByteArray *)ProcessWithNSString:(NSString *)fontName;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfCFFFontSubset)

FOUNDATION_EXPORT void ComAowagieTextPdfCFFFontSubset_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaUtilHashMap_(ComAowagieTextPdfCFFFontSubset *self, ComAowagieTextPdfRandomAccessFileOrArray *rf, JavaUtilHashMap *GlyphsUsed);

FOUNDATION_EXPORT ComAowagieTextPdfCFFFontSubset *new_ComAowagieTextPdfCFFFontSubset_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaUtilHashMap_(ComAowagieTextPdfRandomAccessFileOrArray *rf, JavaUtilHashMap *GlyphsUsed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfCFFFontSubset *create_ComAowagieTextPdfCFFFontSubset_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaUtilHashMap_(ComAowagieTextPdfRandomAccessFileOrArray *rf, JavaUtilHashMap *GlyphsUsed);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfCFFFontSubset)

#endif

#pragma pop_macro("INCLUDE_ALL_CFFFontSubset")

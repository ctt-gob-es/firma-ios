//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/util/tree/AOTreeModel.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AOTreeModel")
#ifdef RESTRICT_AOTreeModel
#define INCLUDE_ALL_AOTreeModel 0
#else
#define INCLUDE_ALL_AOTreeModel 1
#endif
#undef RESTRICT_AOTreeModel

#if !defined (EsGobAfirmaCoreUtilTreeAOTreeModel_) && (INCLUDE_ALL_AOTreeModel || defined(INCLUDE_EsGobAfirmaCoreUtilTreeAOTreeModel))
#define EsGobAfirmaCoreUtilTreeAOTreeModel_

@class EsGobAfirmaCoreUtilTreeAOTreeNode;

/*!
 @brief Adaptaci&oacute;n de las clases AOTreeModel de Swing para su uso sin interfaz gr6aacute;fico.
 */
@interface EsGobAfirmaCoreUtilTreeAOTreeModel : NSObject

#pragma mark Public

/*!
 @brief Crea un &aacute;rbol en el que cualquier nodo puede tener hijos.
 @param root La ra &iacute; z del  &aacute; rbol
 */
- (instancetype)initWithEsGobAfirmaCoreUtilTreeAOTreeNode:(EsGobAfirmaCoreUtilTreeAOTreeNode *)root;

/*!
 @brief Returns the child of <I>parent</I> at index <I>index</I> in the parent's
  child array.
 <I>parent</I> must be a node previously obtained from this
  data source. This should not return null if <i>index</i> is a valid index
  for <i>parent</i> (that is <i>index</i> &gt;= 0 &amp;&amp; <i>index</i> &lt;
  getChildCount(<i>parent</i>)).
 @param index the position index of the child
 @param parent a node in the tree, obtained from this data source
 @return the child of <I>parent</I> at index <I>index</I>
 */
+ (id)getChildWithId:(id)parent
             withInt:(jint)index;

/*!
 @brief Returns the number of children of <I>parent</I>.Returns 0 if the node is
  a leaf or if it has no children.
 <I>parent</I> must be a node previously
  obtained from this data source.
 @param parent a node in the tree, obtained from this data source
 @return the number of children of the node <I>parent</I>
 */
+ (jint)getChildCountWithId:(id)parent;

/*!
 @brief Returns the root of the tree.Returns null only if the tree has no nodes.
 @return the root of the tree
 */
- (id)getRoot;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreUtilTreeAOTreeModel)

FOUNDATION_EXPORT void EsGobAfirmaCoreUtilTreeAOTreeModel_initWithEsGobAfirmaCoreUtilTreeAOTreeNode_(EsGobAfirmaCoreUtilTreeAOTreeModel *self, EsGobAfirmaCoreUtilTreeAOTreeNode *root);

FOUNDATION_EXPORT EsGobAfirmaCoreUtilTreeAOTreeModel *new_EsGobAfirmaCoreUtilTreeAOTreeModel_initWithEsGobAfirmaCoreUtilTreeAOTreeNode_(EsGobAfirmaCoreUtilTreeAOTreeNode *root) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreUtilTreeAOTreeModel *create_EsGobAfirmaCoreUtilTreeAOTreeModel_initWithEsGobAfirmaCoreUtilTreeAOTreeNode_(EsGobAfirmaCoreUtilTreeAOTreeNode *root);

FOUNDATION_EXPORT id EsGobAfirmaCoreUtilTreeAOTreeModel_getChildWithId_withInt_(id parent, jint index);

FOUNDATION_EXPORT jint EsGobAfirmaCoreUtilTreeAOTreeModel_getChildCountWithId_(id parent);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreUtilTreeAOTreeModel)

#endif

#pragma pop_macro("INCLUDE_ALL_AOTreeModel")

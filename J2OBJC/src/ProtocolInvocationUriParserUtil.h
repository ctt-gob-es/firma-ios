//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/protocol/ProtocolInvocationUriParserUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ProtocolInvocationUriParserUtil")
#ifdef RESTRICT_ProtocolInvocationUriParserUtil
#define INCLUDE_ALL_ProtocolInvocationUriParserUtil 0
#else
#define INCLUDE_ALL_ProtocolInvocationUriParserUtil 1
#endif
#undef RESTRICT_ProtocolInvocationUriParserUtil

#if !defined (EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_) && (INCLUDE_ALL_ProtocolInvocationUriParserUtil || defined(INCLUDE_EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil))
#define EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_

@class EsGobAfirmaCoreMiscProtocolUrlParametersForBatch;
@class EsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog;
@class EsGobAfirmaCoreMiscProtocolUrlParametersToLoad;
@class EsGobAfirmaCoreMiscProtocolUrlParametersToSave;
@class EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert;
@class EsGobAfirmaCoreMiscProtocolUrlParametersToSign;
@class EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave;
@class IOSByteArray;
@protocol JavaUtilMap;

/*!
 @brief Utilidades para en an&aacute;lisis de URL de invocaci&oacute;n por protocolo.
 */
@interface EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil : NSObject

#pragma mark Public

/*!
 @brief Recupera los par&aacute;metros necesarios para la configuraci&oacute;n de una
  operaci&oacute;n de firma de lote.Si falta alg&uacute;n par&aacute;metro o
  es err&oacute;neo se lanzar&aacute; una excepci&oacute;n.
 @param params Par &aacute; metros de con la configuraci &oacute; n de la operaci &oacute; n.
 @param servicesRequired Indica si es obligatorio que los par &acute; metros incluyan la  configuraci &oacute; n del servicio de comunicaci &oacute; n.
 @return Par&aacute;metros.
 @throw ParameterExceptionSi alg&uacute;n par&aacute;metro proporcionado es incorrecto.
 */
+ (EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *)getParametersToBatchWithJavaUtilMap:(id<JavaUtilMap>)params
                                                                              withBoolean:(jboolean)servicesRequired;

/*!
 @brief Recupera los par&aacute;metros necesarios para la configuraci&oacute;n de una
  operaci&oacute;n de obtenci&oacute;n del log actual de la aplicaci&oacute;n
 @param params Par &aacute; metros de con la configuraci &oacute; n de la operaci &oacute; n.
 @return Par&aacute;metros
 @throw ParameterExceptionSi alg&uacute;n par&aacute;metro proporcionado es incorrecto.
 */
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog *)getParametersToGetCurrentLogWithJavaUtilMap:(id<JavaUtilMap>)params;

/*!
 @brief Recupera los par&aacute;metros necesarios para la configuraci&oacute;n de una
  operaci&oacute;n de carga de datos.Si falta alg&uacute;n par&aacute;metro o
  es err&oacute;neo se lanzar&aacute; una excepci&oacute;n.
 @param params Par &aacute; metros de con la configuraci &oacute; n de la operaci &oacute; n.
 @return Par&aacute;metros
 @throw ParameterExceptionSi alg&uacute;n par&aacute;metro proporcionado es incorrecto.
 */
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToLoad *)getParametersToLoadWithJavaUtilMap:(id<JavaUtilMap>)params;

/*!
 @brief Recupera los par&aacute;metros necesarios para la configuraci&oacute;n de una
  operaci&oacute;n de guardado de datos en el dispositivo.Si falta alg&uacute;n par&aacute;metro o
  es err&oacute;neo se lanzar&aacute; una excepci&oacute;n.
 @param params Par &aacute; metros de con la configuraci &oacute; n de la operaci &oacute; n.
 @param servicesRequired Indica si es obligatorio que los par &acute; metros incluyan la  configuraci &oacute; n del servicio de comunicaci &oacute; n.
 @return Par&aacute;metros
 @throw ParameterExceptionSi alg&uacute;n par&aacute;metro proporcionado es incorrecto.
 */
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSave *)getParametersToSaveWithJavaUtilMap:(id<JavaUtilMap>)params
                                                                           withBoolean:(jboolean)servicesRequired;

/*!
 @brief Comprueba que est&eacute;n disponibles todos los parametros disponibles en la entrada de
  datos para la operaci&oacute;n de selecci&oacute;n de certificado.
 @param params Par &aacute; metros para el proceso de firma.
 @param servicesRequired Indica si es obligatorio que los par &acute; metros incluyan la  configuraci &oacute; n del servicio de comunicaci &oacute; n.
 @return Par&aacute;metros para la operaci&oacute;n de selecci&oacute;n de certificado.
 @throw ParameterExceptionSi alg&uacute;n par&aacute;metro proporcionado es incorrecto.
 */
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *)getParametersToSelectCertWithJavaUtilMap:(id<JavaUtilMap>)params
                                                                                       withBoolean:(jboolean)servicesRequired;

/*!
 @brief Comprueba que est&eacute;n disponibles todos los parametros disponibles en la entrada de
  datos para la operaci&oacute;n de firma.
 @param params Par &aacute; metros para el proceso de firma.
 @param servicesRequired Indica si es obligatorio que los par &acute; metros incluyan la  configuraci &oacute; n del servicio de comunicaci &oacute; n.
 @return Par&aacute;metros para la operaci&oacute;n de firma.
 @throw ParameterExceptionSi alg&uacute;n par&aacute;metro proporcionado es incorrecto.
 */
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSign *)getParametersToSignWithJavaUtilMap:(id<JavaUtilMap>)params
                                                                           withBoolean:(jboolean)servicesRequired;

/*!
 @brief Comprueba que est&eacute;n disponibles todos los parametros disponibles en la entrada de
  datos para la operaci&oacute;n de firma.
 @param params Par &aacute; metros para el proceso de firma.
 @param servicesRequired Indica si es obligatorio que los par &acute; metros incluyan la  configuraci &oacute; n del servicio de comunicaci &oacute; n.
 @return Par&aacute;metros para la operaci&oacute;n de firma y guardado.
 @throw ParameterExceptionSi alg&uacute;n par&aacute;metro proporcionado es incorrecto.
 */
+ (EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *)getParametersToSignAndSaveWithJavaUtilMap:(id<JavaUtilMap>)params
                                                                                         withBoolean:(jboolean)servicesRequired;

/*!
 @brief Analiza un XML de entrada para obtener la lista de par&aacute;metros asociados
 @param xml XML con el listado de par &aacute; metros.
 @return Devuelve una tabla <i>hash</i> con cada par&aacute;metro asociado a un valor
 @throw ParameterExceptionCuando el XML de entrada no es v&acute;lido.
 */
+ (id<JavaUtilMap>)parseXmlWithByteArray:(IOSByteArray *)xml;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil)

inline NSString *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_get_DEFAULT_URL_ENCODING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_DEFAULT_URL_ENCODING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil, DEFAULT_URL_ENCODING, NSString *)

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSaveWithJavaUtilMap_withBoolean_(id<JavaUtilMap> params, jboolean servicesRequired);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersForBatch *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToBatchWithJavaUtilMap_withBoolean_(id<JavaUtilMap> params, jboolean servicesRequired);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToLoad *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToLoadWithJavaUtilMap_(id<JavaUtilMap> params);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToGetCurrentLog *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToGetCurrentLogWithJavaUtilMap_(id<JavaUtilMap> params);

FOUNDATION_EXPORT id<JavaUtilMap> EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_parseXmlWithByteArray_(IOSByteArray *xml);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSign *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSignWithJavaUtilMap_withBoolean_(id<JavaUtilMap> params, jboolean servicesRequired);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSignAndSave *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSignAndSaveWithJavaUtilMap_withBoolean_(id<JavaUtilMap> params, jboolean servicesRequired);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscProtocolUrlParametersToSelectCert *EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil_getParametersToSelectCertWithJavaUtilMap_withBoolean_(id<JavaUtilMap> params, jboolean servicesRequired);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscProtocolProtocolInvocationUriParserUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_ProtocolInvocationUriParserUtil")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/CAdESParameters.java
//

#include "AOException.h"
#include "AOSignConstants.h"
#include "ASN1Encodable.h"
#include "ASN1ObjectIdentifier.h"
#include "AdESPolicy.h"
#include "Attribute.h"
#include "AttributeTable.h"
#include "CAdESAttributes.h"
#include "CAdESExtraParams.h"
#include "CAdESParameters.h"
#include "CAdESSignerMetadata.h"
#include "CAdESSignerMetadataHelper.h"
#include "CMSAttributes.h"
#include "CMSSignedData.h"
#include "CommitmentTypeIndicationsHelper.h"
#include "ContentHints.h"
#include "DERUTF8String.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "MimeHelper.h"
#include "SignerInformation.h"
#include "SignerInformationStore.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Properties.h"
#include "java/util/logging/Logger.h"
#include "java/util/regex/Pattern.h"

#if !__has_feature(objc_arc)
#error "CAdESParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaSignersCadesCAdESParameters () {
 @public
  EsGobAfirmaCoreSignersAdESPolicy *externalPolicy_;
  jboolean signingCertificateV2_;
  jboolean includedOnlySigningCertificate_;
  NSString *digestAlgorithm_;
  IOSByteArray *dataDigest_;
  jboolean contentNeeded_;
  IOSByteArray *contentData_;
  JavaUtilDate *signingTime_;
  NSString *contentTypeOid_;
  NSString *contentDescription_;
  NSString *mimetype_;
  id<JavaUtilList> commitmentTypeIndications_;
  IOSObjectArray *claimedRoles_;
  EsGobAfirmaSignersCadesCAdESSignerMetadata *metadata_;
  jboolean includedPolicyOnSigningCertificate_;
  jboolean includedIssuerSerial_;
  JavaUtilProperties *extraParams_;
  NSString *profileSet_;
}

/*!
 @brief Establece el texto descriptivo del tipo de contenido.
 @param contentDescription Descripci &oacute; n del tipo de contenido o <code>null</code>  si no se estableci &oacute; .
 */
- (void)setMimeTypeWithNSString:(NSString *)mimeType;

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, externalPolicy_, EsGobAfirmaCoreSignersAdESPolicy *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, digestAlgorithm_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, dataDigest_, IOSByteArray *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, contentData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, signingTime_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, contentTypeOid_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, contentDescription_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, mimetype_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, commitmentTypeIndications_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, claimedRoles_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, metadata_, EsGobAfirmaSignersCadesCAdESSignerMetadata *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, extraParams_, JavaUtilProperties *)
J2OBJC_FIELD_SETTER(EsGobAfirmaSignersCadesCAdESParameters, profileSet_, NSString *)

inline JavaUtilLoggingLogger *EsGobAfirmaSignersCadesCAdESParameters_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaSignersCadesCAdESParameters_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersCadesCAdESParameters, LOGGER, JavaUtilLoggingLogger *)

inline NSString *EsGobAfirmaSignersCadesCAdESParameters_get_SHA1_ALGORITHM(void);
static NSString *EsGobAfirmaSignersCadesCAdESParameters_SHA1_ALGORITHM = @"SHA1";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersCadesCAdESParameters, SHA1_ALGORITHM, NSString *)

__attribute__((unused)) static void EsGobAfirmaSignersCadesCAdESParameters_setMimeTypeWithNSString_(EsGobAfirmaSignersCadesCAdESParameters *self, NSString *mimeType);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/CAdESParameters.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaSignersCadesCAdESParameters)


#line 32
@implementation EsGobAfirmaSignersCadesCAdESParameters

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 32
- (instancetype)init {
  EsGobAfirmaSignersCadesCAdESParameters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 84
+ (EsGobAfirmaSignersCadesCAdESParameters *)load__WithByteArray:(IOSByteArray *)data
                                                   withNSString:(NSString *)algorithm
                                         withJavaUtilProperties:(JavaUtilProperties *)config {
  return EsGobAfirmaSignersCadesCAdESParameters_load__WithByteArray_withNSString_withJavaUtilProperties_(data, algorithm, config);
}


#line 100
+ (EsGobAfirmaSignersCadesCAdESParameters *)load__WithByteArray:(IOSByteArray *)data
                            withOrgSpongycastleCmsCMSSignedData:(OrgSpongycastleCmsCMSSignedData *)signedData
                                                   withNSString:(NSString *)algorithm
                                         withJavaUtilProperties:(JavaUtilProperties *)config {
  return EsGobAfirmaSignersCadesCAdESParameters_load__WithByteArray_withOrgSpongycastleCmsCMSSignedData_withNSString_withJavaUtilProperties_(data, signedData, algorithm, config);
}


#line 355
- (EsGobAfirmaCoreSignersAdESPolicy *)getExternalPolicy {
  return self->externalPolicy_;
}


#line 364
- (void)setExternalPolicyWithEsGobAfirmaCoreSignersAdESPolicy:(EsGobAfirmaCoreSignersAdESPolicy *)externalPolicy {
  self->externalPolicy_ = externalPolicy;
}


#line 374
- (jboolean)isSigningCertificateV2 {
  return self->signingCertificateV2_;
}


#line 384
- (void)setSigningCertificateV2WithBoolean:(jboolean)signingCertificateV2 {
  self->signingCertificateV2_ = signingCertificateV2;
}


#line 394
- (jboolean)isIncludedOnlySigningCertificate {
  return self->includedOnlySigningCertificate_;
}


#line 404
- (void)setIncludedOnlySigningCertificateWithBoolean:(jboolean)includedOnlySigningCertificate {
  self->includedOnlySigningCertificate_ = includedOnlySigningCertificate;
}


#line 413
- (NSString *)getDigestAlgorithm {
  return self->digestAlgorithm_;
}


#line 422
- (void)setDigestAlgorithmWithNSString:(NSString *)digestAlgorithm {
  self->digestAlgorithm_ = digestAlgorithm;
}


#line 433
- (IOSByteArray *)getDataDigest {
  return self->dataDigest_ != nil ? [self->dataDigest_ java_clone] : nil;
}


#line 446
- (void)setDataDigestWithByteArray:(IOSByteArray *)dataDigest {
  self->dataDigest_ = dataDigest != nil ? [dataDigest java_clone] : nil;
}


#line 455
- (void)setContentNeededWithBoolean:(jboolean)contentNeeded {
  self->contentNeeded_ = contentNeeded;
}


#line 464
- (jboolean)isContentNeeded {
  return self->contentNeeded_;
}


#line 472
- (IOSByteArray *)getContentData {
  return self->contentData_;
}


#line 483
- (void)setContentDataWithByteArray:(IOSByteArray *)contentData {
  self->contentData_ = contentData;
}


#line 491
- (JavaUtilDate *)getSigningTime {
  return self->signingTime_;
}


#line 499
- (void)setSigningTimeWithJavaUtilDate:(JavaUtilDate *)signingTime {
  self->signingTime_ = signingTime;
}


#line 507
- (NSString *)getContentTypeOid {
  return self->contentTypeOid_;
}


#line 515
- (void)setContentTypeOidWithNSString:(NSString *)contentTypeOid {
  self->contentTypeOid_ = contentTypeOid;
}


#line 523
- (NSString *)getContentDescription {
  return self->contentDescription_;
}


#line 531
- (void)setContentDescriptionWithNSString:(NSString *)contentDescription {
  self->contentDescription_ = contentDescription;
}


#line 539
- (NSString *)getMimeType {
  return self->mimetype_;
}


#line 547
- (void)setMimeTypeWithNSString:(NSString *)mimeType {
  EsGobAfirmaSignersCadesCAdESParameters_setMimeTypeWithNSString_(self, mimeType);
}


#line 555
- (id<JavaUtilList>)getCommitmentTypeIndications {
  return self->commitmentTypeIndications_ != nil ? new_JavaUtilArrayList_initWithJavaUtilCollection_(self->commitmentTypeIndications_) : nil;
}


#line 563
- (void)setCommitmentTypeIndicationsWithJavaUtilList:(id<JavaUtilList>)commitmentTypeIndications {
  self->commitmentTypeIndications_ = commitmentTypeIndications != nil ? new_JavaUtilArrayList_initWithJavaUtilCollection_(commitmentTypeIndications) : nil;
}


#line 571
- (IOSObjectArray *)getClaimedRoles {
  return self->claimedRoles_ != nil ? [self->claimedRoles_ java_clone] : nil;
}


#line 579
- (void)setClaimedRolesWithNSStringArray:(IOSObjectArray *)claimedRoles {
  self->claimedRoles_ = claimedRoles != nil ? [claimedRoles java_clone] : nil;
}


#line 587
- (EsGobAfirmaSignersCadesCAdESSignerMetadata *)getMetadata {
  return self->metadata_;
}


#line 595
- (void)setMetadataWithEsGobAfirmaSignersCadesCAdESSignerMetadata:(EsGobAfirmaSignersCadesCAdESSignerMetadata *)metadata {
  self->metadata_ = metadata;
}


#line 604
- (jboolean)isIncludedPolicyOnSigningCertificate {
  return self->includedPolicyOnSigningCertificate_;
}


#line 612
- (void)setIncludedPolicyOnSigningCertificateWithBoolean:(jboolean)includedPolicyOnSigningCertificate {
  self->includedPolicyOnSigningCertificate_ = includedPolicyOnSigningCertificate;
}


#line 621
- (jboolean)isIncludedIssuerSerial {
  return self->includedIssuerSerial_;
}


#line 630
- (void)setIncludedIssuerSerialWithBoolean:(jboolean)includedIssuerSerial {
  self->includedIssuerSerial_ = includedIssuerSerial;
}


#line 638
- (JavaUtilProperties *)getExtraParams {
  return self->extraParams_ != nil ? (JavaUtilProperties *) cast_chk([self->extraParams_ java_clone], [JavaUtilProperties class]) : nil;
}


#line 649
- (void)setExtraParamsWithJavaUtilProperties:(JavaUtilProperties *)extraParams {
  self->extraParams_ = extraParams != nil ? (JavaUtilProperties *) cast_chk([extraParams java_clone], [JavaUtilProperties class]) : nil;
}


#line 659
- (NSString *)getProfileSet {
  return self->profileSet_;
}


#line 669
- (void)setProfileSetWithNSString:(NSString *)profileSet {
  self->profileSet_ = profileSet;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaSignersCadesCAdESParameters;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaSignersCadesCAdESParameters;", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersAdESPolicy;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 12, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 10, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 20, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, 23, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaSignersCadesCAdESSignerMetadata;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 7, -1, -1, -1, -1 },
    { NULL, "LJavaUtilProperties;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(load__WithByteArray:withNSString:withJavaUtilProperties:);
  methods[2].selector = @selector(load__WithByteArray:withOrgSpongycastleCmsCMSSignedData:withNSString:withJavaUtilProperties:);
  methods[3].selector = @selector(getExternalPolicy);
  methods[4].selector = @selector(setExternalPolicyWithEsGobAfirmaCoreSignersAdESPolicy:);
  methods[5].selector = @selector(isSigningCertificateV2);
  methods[6].selector = @selector(setSigningCertificateV2WithBoolean:);
  methods[7].selector = @selector(isIncludedOnlySigningCertificate);
  methods[8].selector = @selector(setIncludedOnlySigningCertificateWithBoolean:);
  methods[9].selector = @selector(getDigestAlgorithm);
  methods[10].selector = @selector(setDigestAlgorithmWithNSString:);
  methods[11].selector = @selector(getDataDigest);
  methods[12].selector = @selector(setDataDigestWithByteArray:);
  methods[13].selector = @selector(setContentNeededWithBoolean:);
  methods[14].selector = @selector(isContentNeeded);
  methods[15].selector = @selector(getContentData);
  methods[16].selector = @selector(setContentDataWithByteArray:);
  methods[17].selector = @selector(getSigningTime);
  methods[18].selector = @selector(setSigningTimeWithJavaUtilDate:);
  methods[19].selector = @selector(getContentTypeOid);
  methods[20].selector = @selector(setContentTypeOidWithNSString:);
  methods[21].selector = @selector(getContentDescription);
  methods[22].selector = @selector(setContentDescriptionWithNSString:);
  methods[23].selector = @selector(getMimeType);
  methods[24].selector = @selector(setMimeTypeWithNSString:);
  methods[25].selector = @selector(getCommitmentTypeIndications);
  methods[26].selector = @selector(setCommitmentTypeIndicationsWithJavaUtilList:);
  methods[27].selector = @selector(getClaimedRoles);
  methods[28].selector = @selector(setClaimedRolesWithNSStringArray:);
  methods[29].selector = @selector(getMetadata);
  methods[30].selector = @selector(setMetadataWithEsGobAfirmaSignersCadesCAdESSignerMetadata:);
  methods[31].selector = @selector(isIncludedPolicyOnSigningCertificate);
  methods[32].selector = @selector(setIncludedPolicyOnSigningCertificateWithBoolean:);
  methods[33].selector = @selector(isIncludedIssuerSerial);
  methods[34].selector = @selector(setIncludedIssuerSerialWithBoolean:);
  methods[35].selector = @selector(getExtraParams);
  methods[36].selector = @selector(setExtraParamsWithJavaUtilProperties:);
  methods[37].selector = @selector(getProfileSet);
  methods[38].selector = @selector(setProfileSetWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "SHA1_ALGORITHM", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "externalPolicy_", "LEsGobAfirmaCoreSignersAdESPolicy;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signingCertificateV2_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "includedOnlySigningCertificate_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "digestAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dataDigest_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentNeeded_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentData_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signingTime_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentTypeOid_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentDescription_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mimetype_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "commitmentTypeIndications_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 35, -1 },
    { "claimedRoles_", "[LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "metadata_", "LEsGobAfirmaSignersCadesCAdESSignerMetadata;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "includedPolicyOnSigningCertificate_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "includedIssuerSerial_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraParams_", "LJavaUtilProperties;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "profileSet_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "load", "[BLNSString;LJavaUtilProperties;", "LEsGobAfirmaCoreAOException;", "[BLOrgSpongycastleCmsCMSSignedData;LNSString;LJavaUtilProperties;", "setExternalPolicy", "LEsGobAfirmaCoreSignersAdESPolicy;", "setSigningCertificateV2", "Z", "setIncludedOnlySigningCertificate", "setDigestAlgorithm", "LNSString;", "setDataDigest", "[B", "setContentNeeded", "setContentData", "setSigningTime", "LJavaUtilDate;", "setContentTypeOid", "setContentDescription", "setMimeType", "()Ljava/util/List<Les/gob/afirma/signers/cades/CommitmentTypeIndicationBean;>;", "setCommitmentTypeIndications", "LJavaUtilList;", "(Ljava/util/List<Les/gob/afirma/signers/cades/CommitmentTypeIndicationBean;>;)V", "setClaimedRoles", "[LNSString;", "setMetadata", "LEsGobAfirmaSignersCadesCAdESSignerMetadata;", "setIncludedPolicyOnSigningCertificate", "setIncludedIssuerSerial", "setExtraParams", "LJavaUtilProperties;", "setProfileSet", &EsGobAfirmaSignersCadesCAdESParameters_LOGGER, &EsGobAfirmaSignersCadesCAdESParameters_SHA1_ALGORITHM, "Ljava/util/List<Les/gob/afirma/signers/cades/CommitmentTypeIndicationBean;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaSignersCadesCAdESParameters = { "CAdESParameters", "es.gob.afirma.signers.cades", ptrTable, methods, fields, 7, 0x1, 39, 20, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersCadesCAdESParameters;
}

+ (void)initialize {
  if (self == [EsGobAfirmaSignersCadesCAdESParameters class]) {
    EsGobAfirmaSignersCadesCAdESParameters_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 34
    @"es.gob.afirma");
    J2OBJC_SET_INITIALIZED(EsGobAfirmaSignersCadesCAdESParameters)
  }
}

@end


#line 32
void EsGobAfirmaSignersCadesCAdESParameters_init(EsGobAfirmaSignersCadesCAdESParameters *self) {
  NSObject_init(self);
  self->signingCertificateV2_ =
#line 40
  true;
  self->includedOnlySigningCertificate_ =
#line 42
  false;
  self->contentNeeded_ =
#line 48
  true;
  self->includedPolicyOnSigningCertificate_ =
#line 66
  true;
  self->includedIssuerSerial_ =
#line 68
  true;
  self->profileSet_ =
#line 72
  EsGobAfirmaCoreSignersAOSignConstants_DEFAULT_SIGN_PROFILE;
}


#line 32
EsGobAfirmaSignersCadesCAdESParameters *new_EsGobAfirmaSignersCadesCAdESParameters_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersCadesCAdESParameters, init)
}


#line 32
EsGobAfirmaSignersCadesCAdESParameters *create_EsGobAfirmaSignersCadesCAdESParameters_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersCadesCAdESParameters, init)
}


#line 84
EsGobAfirmaSignersCadesCAdESParameters *EsGobAfirmaSignersCadesCAdESParameters_load__WithByteArray_withNSString_withJavaUtilProperties_(IOSByteArray *data, NSString *algorithm, JavaUtilProperties *config) {
  EsGobAfirmaSignersCadesCAdESParameters_initialize();
  
#line 85
  return EsGobAfirmaSignersCadesCAdESParameters_load__WithByteArray_withOrgSpongycastleCmsCMSSignedData_withNSString_withJavaUtilProperties_(data, nil, algorithm, config);
}


#line 100
EsGobAfirmaSignersCadesCAdESParameters *EsGobAfirmaSignersCadesCAdESParameters_load__WithByteArray_withOrgSpongycastleCmsCMSSignedData_withNSString_withJavaUtilProperties_(IOSByteArray *data, OrgSpongycastleCmsCMSSignedData *signedData, NSString *algorithm, JavaUtilProperties *config) {
  EsGobAfirmaSignersCadesCAdESParameters_initialize();
  EsGobAfirmaSignersCadesCAdESParameters *dataConfig = new_EsGobAfirmaSignersCadesCAdESParameters_init();
  
#line 105
  jboolean signingCertificateV2;
  if (EsGobAfirmaCoreSignersAOSignConstants_isSHA2SignatureAlgorithmWithNSString_(algorithm)) {
    signingCertificateV2 = true;
  }
  else if ([((JavaUtilProperties *) nil_chk(config)) containsKeyWithId:EsGobAfirmaSignersCadesCAdESExtraParams_SIGNING_CERTIFICATE_V2]) {
    signingCertificateV2 = JavaLangBoolean_parseBooleanWithNSString_([config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_SIGNING_CERTIFICATE_V2]);
  }
  else {
    signingCertificateV2 = ![((NSString *) nil_chk(EsGobAfirmaSignersCadesCAdESParameters_SHA1_ALGORITHM)) isEqual:EsGobAfirmaCoreSignersAOSignConstants_getDigestAlgorithmNameWithNSString_(algorithm)];
  }
  [dataConfig setSigningCertificateV2WithBoolean:signingCertificateV2];
  
#line 118
  NSString *precalculatedDigestAlgorithm = [((JavaUtilProperties *) nil_chk(config)) getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_PRECALCULATED_HASH_ALGORITHM];
  
#line 121
  jboolean omitContent = false;
  NSString *mode = [config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_MODE withNSString:EsGobAfirmaCoreSignersAOSignConstants_DEFAULT_SIGN_MODE];
  if (precalculatedDigestAlgorithm != nil || [((NSString *) nil_chk(EsGobAfirmaCoreSignersAOSignConstants_SIGN_MODE_EXPLICIT)) java_equalsIgnoreCase:mode]) {
    omitContent = true;
  }
  [dataConfig setContentNeededWithBoolean:!omitContent];
  
#line 129
  IOSByteArray *dataDigest;
  IOSByteArray *contentData;
  NSString *digestAlgorithmName;
  if (precalculatedDigestAlgorithm != nil) {
    digestAlgorithmName = EsGobAfirmaCoreSignersAOSignConstants_getDigestAlgorithmNameWithNSString_(precalculatedDigestAlgorithm);
    dataDigest = data;
    contentData = nil;
  }
  else {
    digestAlgorithmName = EsGobAfirmaCoreSignersAOSignConstants_getDigestAlgorithmNameWithNSString_(algorithm);
    contentData = omitContent ? nil : data;
    if (data != nil) {
      @try {
        dataDigest = [((JavaSecurityMessageDigest *) nil_chk(JavaSecurityMessageDigest_getInstanceWithNSString_(digestAlgorithmName))) digestWithByteArray:data];
      }
      @catch (JavaSecurityNoSuchAlgorithmException *e) {
        @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Algoritmo no soportado: ", e), e);
      }
    }
    else {
      dataDigest = nil;
    }
  }
  [dataConfig setContentDataWithByteArray:contentData];
  [dataConfig setDigestAlgorithmWithNSString:digestAlgorithmName];
  [dataConfig setDataDigestWithByteArray:dataDigest];
  
#line 157
  IOSObjectArray *claimedRoles = nil;
  NSString *claimedRolesParam = [config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_SIGNER_CLAIMED_ROLES];
  if (claimedRolesParam != nil && ![claimedRolesParam java_isEmpty]) {
    claimedRoles = [claimedRolesParam java_split:JavaUtilRegexPattern_quoteWithNSString_(@"|")];
  }
  [dataConfig setClaimedRolesWithNSStringArray:claimedRoles];
  
#line 165
  jboolean doNotIncludePolicyOnSigningCertificate = JavaLangBoolean_parseBooleanWithNSString_(
#line 166
  [config getPropertyWithNSString:
#line 167
  EsGobAfirmaSignersCadesCAdESExtraParams_DO_NOT_INCLUDE_POLICY_ON_SIGNING_CERTIFICATE withNSString:[((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, FALSE))) description]]);
  
#line 170
  [dataConfig setIncludedPolicyOnSigningCertificateWithBoolean:!doNotIncludePolicyOnSigningCertificate];
  
#line 173
  [dataConfig setExternalPolicyWithEsGobAfirmaCoreSignersAdESPolicy:EsGobAfirmaCoreSignersAdESPolicy_buildAdESPolicyWithJavaUtilProperties_(config)];
  
#line 176
  [dataConfig setIncludedOnlySigningCertificateWithBoolean:JavaLangBoolean_parseBooleanWithNSString_(
#line 177
  [config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_INCLUDE_ONLY_SIGNNING_CERTIFICATE withNSString:[JreLoadStatic(JavaLangBoolean, FALSE) description]])];
  
#line 180
  [dataConfig setCommitmentTypeIndicationsWithJavaUtilList:EsGobAfirmaSignersCadesCommitmentTypeIndicationsHelper_getCommitmentTypeIndicationsWithJavaUtilProperties_(config)];
  
#line 183
  jboolean includeSigningTime = true;
  if ([config containsKeyWithId:EsGobAfirmaSignersCadesCAdESExtraParams_INCLUDE_SIGNING_TIME_ATTRIBUTE]) {
    includeSigningTime = JavaLangBoolean_parseBooleanWithNSString_([config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_INCLUDE_SIGNING_TIME_ATTRIBUTE]);
  }
  if (includeSigningTime) {
    [dataConfig setSigningTimeWithJavaUtilDate:new_JavaUtilDate_init()];
  }
  
#line 195
  jboolean contentHintNeeded = ![config containsKeyWithId:EsGobAfirmaSignersCadesCAdESExtraParams_INCLUDE_CONTENT_HINT_ATTRIBUTE] ||
#line 196
  ![((NSString *) nil_chk([JreLoadStatic(JavaLangBoolean, FALSE) description])) java_equalsIgnoreCase:[config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_INCLUDE_CONTENT_HINT_ATTRIBUTE]];
  
#line 198
  jboolean mimetypeNeeded = JavaLangBoolean_parseBooleanWithNSString_([config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_INCLUDE_MIMETYPE_ATTRIBUTE]);
  
#line 200
  if (contentHintNeeded || mimetypeNeeded) {
    NSString *contentTypeOid = [config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_CONTENT_TYPE_OID];
    NSString *contentTypeDescription = [config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_CONTENT_DESCRIPTION];
    NSString *mimeType = [config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_CONTENT_MIME_TYPE];
    
#line 207
    if (mimetypeNeeded && mimeType == nil && contentTypeOid != nil) {
      @try {
        mimeType = EsGobAfirmaCoreMiscMimeHelper_transformOidToMimeTypeWithNSString_(contentTypeOid);
      }
      @catch (
#line 210
      JavaIoIOException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESParameters_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se pudo cargar la tabla de correspondencias entre OIDs y MimeTypes: ", e)];
      }
      
#line 217
      if ([((NSString *) nil_chk(EsGobAfirmaCoreMiscMimeHelper_DEFAULT_MIMETYPE)) isEqual:mimeType]) {
        mimeType = nil;
      }
    }
    
#line 224
    if (((contentHintNeeded && contentTypeOid == nil) || (
#line 225
    mimetypeNeeded && mimeType == nil)) && signedData != nil) {
      
#line 228
      jboolean foundPreviousDataType = false;
      OrgSpongycastleCmsSignerInformationStore *signersInfo = [signedData getSignerInfos];
      id<JavaUtilIterator> signersIt = [((OrgSpongycastleCmsSignerInformationStore *) nil_chk(signersInfo)) iterator];
      while ([((id<JavaUtilIterator>) nil_chk(signersIt)) hasNext] && !foundPreviousDataType) {
        OrgSpongycastleCmsSignerInformation *signerInfo = [signersIt next];
        
#line 234
        OrgSpongycastleAsn1CmsAttributeTable *signedAttributes = [((OrgSpongycastleCmsSignerInformation *) nil_chk(signerInfo)) getSignedAttributes];
        
#line 236
        if (mimetypeNeeded && mimeType == nil) {
          OrgSpongycastleAsn1CmsAttribute *mimetypeAttr = [((OrgSpongycastleAsn1CmsAttributeTable *) nil_chk(signedAttributes)) getWithOrgSpongycastleAsn1ASN1ObjectIdentifier:new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(EsGobAfirmaSignersCadesCAdESAttributes_OID_id_aa_ets_mimeType)];
          if (mimetypeAttr != nil) {
            mimeType = [((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(IOSObjectArray_Get(nil_chk([mimetypeAttr getAttributeValues]), 0))) description];
            foundPreviousDataType = true;
          }
        }
        
#line 244
        if (contentHintNeeded && contentTypeOid == nil) {
          OrgSpongycastleAsn1CmsAttribute *contentHintsAttr = [((OrgSpongycastleAsn1CmsAttributeTable *) nil_chk(signedAttributes)) getWithOrgSpongycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgSpongycastleAsn1CmsCMSAttributes, contentHint)];
          if (contentHintsAttr != nil && [contentHintsAttr getAttributeValues] != nil &&
#line 247
          ((IOSObjectArray *) nil_chk([contentHintsAttr getAttributeValues]))->size_ >= 1) {
            OrgSpongycastleAsn1EssContentHints *contentHints = OrgSpongycastleAsn1EssContentHints_getInstanceWithId_(IOSObjectArray_Get(nil_chk([contentHintsAttr getAttributeValues]), 0));
            contentTypeOid = [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1EssContentHints *) nil_chk(contentHints)) getContentType])) getId];
            
#line 251
            if (contentTypeDescription == nil) {
              OrgSpongycastleAsn1DERUTF8String *descriptionAttr = [contentHints getContentDescription];
              if (descriptionAttr != nil) {
                contentTypeDescription = [descriptionAttr getString];
              }
            }
            foundPreviousDataType = true;
          }
        }
        
#line 261
        @try {
          if (mimeType != nil && contentTypeOid == nil) {
            contentTypeOid = EsGobAfirmaCoreMiscMimeHelper_transformMimeTypeToOidWithNSString_(mimeType);
            if ([((NSString *) nil_chk(EsGobAfirmaCoreMiscMimeHelper_DEFAULT_CONTENT_OID_DATA)) isEqual:contentTypeOid]) {
              contentTypeOid = nil;
            }
          }
          else if (mimetypeNeeded && mimeType == nil &&
#line 269
          contentTypeOid != nil && ![((NSString *) nil_chk(EsGobAfirmaCoreMiscMimeHelper_DEFAULT_CONTENT_OID_DATA)) isEqual:contentTypeOid]) {
            mimeType = EsGobAfirmaCoreMiscMimeHelper_transformOidToMimeTypeWithNSString_(contentTypeOid);
            if ([((NSString *) nil_chk(EsGobAfirmaCoreMiscMimeHelper_DEFAULT_MIMETYPE)) isEqual:mimeType]) {
              mimeType = nil;
            }
          }
        }
        @catch (JavaLangException *e) {
          [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESParameters_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se han podido las tablas de relacion entre MimeTypes y OIDs: ",
#line 278
          e)];
        }
      }
    }
    
#line 285
    if (((contentHintNeeded && contentTypeOid == nil) || (
#line 286
    mimetypeNeeded && mimeType == nil)) && data != nil) {
      @try {
        EsGobAfirmaCoreMiscMimeHelper *mimeHelper = new_EsGobAfirmaCoreMiscMimeHelper_initWithByteArray_(data);
        if (contentHintNeeded && contentTypeOid == nil) {
          contentTypeOid = EsGobAfirmaCoreMiscMimeHelper_transformMimeTypeToOidWithNSString_([mimeHelper getMimeType]);
          if ([((NSString *) nil_chk(EsGobAfirmaCoreMiscMimeHelper_DEFAULT_CONTENT_OID_DATA)) isEqual:contentTypeOid]) {
            contentTypeOid = nil;
          }
        }
        if (contentHintNeeded && contentTypeDescription == nil) {
          contentTypeDescription = [mimeHelper getDescription];
        }
        if (mimetypeNeeded && mimeType == nil) {
          mimeType = [mimeHelper getMimeType];
        }
      }
      @catch (JavaLangException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESParameters_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se han podido cargar las librerias para identificar el tipo de dato firmado: ",
#line 304
        e)];
      }
    }
    
#line 310
    if (contentHintNeeded) {
      [dataConfig setContentTypeOidWithNSString:contentTypeOid != nil ?
#line 312
      contentTypeOid : EsGobAfirmaCoreMiscMimeHelper_DEFAULT_CONTENT_OID_DATA];
      [dataConfig setContentDescriptionWithNSString:contentTypeDescription != nil ?
#line 314
      contentTypeDescription : EsGobAfirmaCoreMiscMimeHelper_DEFAULT_CONTENT_DESCRIPTION];
    }
    if (mimetypeNeeded) {
      EsGobAfirmaSignersCadesCAdESParameters_setMimeTypeWithNSString_(dataConfig, mimeType != nil ?
#line 318
      mimeType : EsGobAfirmaCoreMiscMimeHelper_DEFAULT_MIMETYPE);
    }
  }
  
#line 323
  [dataConfig setMetadataWithEsGobAfirmaSignersCadesCAdESSignerMetadata:EsGobAfirmaSignersCadesCAdESSignerMetadataHelper_getCAdESSignerMetadataWithJavaUtilProperties_(config)];
  
#line 327
  jboolean baselineProfile = [((NSString *) nil_chk(EsGobAfirmaCoreSignersAOSignConstants_SIGN_PROFILE_BASELINE)) isEqual:
#line 328
  [config getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_PROFILE]];
  
#line 331
  if (baselineProfile) {
    [dataConfig setProfileSetWithNSString:EsGobAfirmaCoreSignersAOSignConstants_SIGN_PROFILE_BASELINE];
  }
  else {
    
#line 334
    [dataConfig setProfileSetWithNSString:EsGobAfirmaCoreSignersAOSignConstants_SIGN_PROFILE_ADVANCED];
  }
  
#line 344
  [dataConfig setExtraParamsWithJavaUtilProperties:config];
  
#line 346
  return dataConfig;
}


#line 547
void EsGobAfirmaSignersCadesCAdESParameters_setMimeTypeWithNSString_(EsGobAfirmaSignersCadesCAdESParameters *self, NSString *mimeType) {
  self->mimetype_ = mimeType;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersCadesCAdESParameters)

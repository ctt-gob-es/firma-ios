//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/xml/SAXiTextHandler.java
//

#include "Anchor.h"
#include "Annotation.h"
#include "BadElementException.h"
#include "BaseFont.h"
#include "Cell.h"
#include "Chapter.h"
#include "ChapterAutoNumber.h"
#include "Chunk.h"
#include "DocListener.h"
#include "DocumentException.h"
#include "Element.h"
#include "ElementFactory.h"
#include "ElementTags.h"
#include "EntitiesToSymbol.h"
#include "ExceptionConverter.h"
#include "Font.h"
#include "HtmlTagMap.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "J2ObjC_source.h"
#include "LineSeparator.h"
#include "List.h"
#include "ListItem.h"
#include "Meta.h"
#include "PageSize.h"
#include "Paragraph.h"
#include "Phrase.h"
#include "Rectangle.h"
#include "SAXiTextHandler.h"
#include "Section.h"
#include "Table.h"
#include "TextElementArray.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/reflect/Field.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/EmptyStackException.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Properties.h"
#include "java/util/Set.h"
#include "java/util/Stack.h"
#include "org/xml/sax/Attributes.h"
#include "org/xml/sax/helpers/DefaultHandler.h"

#if !__has_feature(objc_arc)
#error "SAXiTextHandler must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextXmlSAXiTextHandler () {
 @public
  /*!
   @brief This is the resulting document.
   */
  id<ComAowagieTextDocListener> document_;
  /*!
   @brief This is a <CODE>Stack</CODE> of objects, waiting to be added to the
  document.
   */
  JavaUtilStack *stack_;
  /*!
   @brief This is the current chunk to which characters can be added.
   */
  ComAowagieTextChunk *currentChunk_;
  /*!
   @brief This is the current chunk to which characters can be added.
   */
  jboolean ignore_;
  /*!
   @brief This is a flag that can be set, if you want to open and close the
  Document-object yourself.
   */
  jboolean controlOpenClose_;
  /*!
   @brief current margin of a page.
   */
  jfloat topMargin_;
  /*!
   @brief current margin of a page.
   */
  jfloat rightMargin_;
  /*!
   @brief current margin of a page.
   */
  jfloat leftMargin_;
  /*!
   @brief current margin of a page.
   */
  jfloat bottomMargin_;
  ComAowagieTextPdfBaseFont *bf_;
}

/*!
 @param document Document
 @param myTags Tags
 */
- (instancetype)initPackagePrivateWithComAowagieTextDocListener:(id<ComAowagieTextDocListener>)document
                               withComAowagieTextHtmlHtmlTagMap:(ComAowagieTextHtmlHtmlTagMap *)myTags;

- (void)addImageWithComAowagieTextImage:(ComAowagieTextImage *)img;

/*!
 @brief Checks if a certain tag corresponds with the newpage-tag.
 @param tag a presumed tagname
 @return <CODE>true</CODE> or <CODE>false</CODE>
 */
- (jboolean)isNewpageWithNSString:(NSString *)tag;

/*!
 @brief Checks if a certain tag corresponds with the newpage-tag.
 @param tag a presumed tagname
 @return <CODE>true</CODE> or <CODE>false</CODE>
 */
- (jboolean)isNewlineWithNSString:(NSString *)tag;

/*!
 @brief Checks if a certain tag corresponds with the roottag.
 @param tag a presumed tagname
 @return <CODE>true</CODE> if <VAR>tag </VAR> equals <CODE>itext
          </CODE>,<CODE>false</CODE> otherwise.
 */
- (jboolean)isDocumentRootWithNSString:(NSString *)tag;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextXmlSAXiTextHandler, document_, id<ComAowagieTextDocListener>)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSAXiTextHandler, stack_, JavaUtilStack *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSAXiTextHandler, currentChunk_, ComAowagieTextChunk *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSAXiTextHandler, bf_, ComAowagieTextPdfBaseFont *)

__attribute__((unused)) static void ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_(ComAowagieTextXmlSAXiTextHandler *self, id<ComAowagieTextDocListener> document, ComAowagieTextHtmlHtmlTagMap *myTags);

__attribute__((unused)) static ComAowagieTextXmlSAXiTextHandler *new_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_(id<ComAowagieTextDocListener> document, ComAowagieTextHtmlHtmlTagMap *myTags) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextXmlSAXiTextHandler *create_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_(id<ComAowagieTextDocListener> document, ComAowagieTextHtmlHtmlTagMap *myTags);

__attribute__((unused)) static void ComAowagieTextXmlSAXiTextHandler_addImageWithComAowagieTextImage_(ComAowagieTextXmlSAXiTextHandler *self, ComAowagieTextImage *img);

__attribute__((unused)) static jboolean ComAowagieTextXmlSAXiTextHandler_isNewpageWithNSString_(ComAowagieTextXmlSAXiTextHandler *self, NSString *tag);

__attribute__((unused)) static jboolean ComAowagieTextXmlSAXiTextHandler_isNewlineWithNSString_(ComAowagieTextXmlSAXiTextHandler *self, NSString *tag);

__attribute__((unused)) static jboolean ComAowagieTextXmlSAXiTextHandler_isDocumentRootWithNSString_(ComAowagieTextXmlSAXiTextHandler *self, NSString *tag);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/xml/SAXiTextHandler.java"


#line 97
@implementation ComAowagieTextXmlSAXiTextHandler


#line 137
- (instancetype)initPackagePrivateWithComAowagieTextDocListener:(id<ComAowagieTextDocListener>)document {
  ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_(self, document);
  return self;
}


#line 150
- (instancetype)initPackagePrivateWithComAowagieTextDocListener:(id<ComAowagieTextDocListener>)document
                               withComAowagieTextHtmlHtmlTagMap:(ComAowagieTextHtmlHtmlTagMap *)myTags {
  ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_(self, document, myTags);
  return self;
}


#line 161
- (instancetype)initPackagePrivateWithComAowagieTextDocListener:(id<ComAowagieTextDocListener>)document
                                            withJavaUtilHashMap:(JavaUtilHashMap *)myTags {
  ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withJavaUtilHashMap_(self, document, myTags);
  return self;
}


#line 180
- (void)setControlOpenCloseWithBoolean:(jboolean)controlOpenClose {
  self->controlOpenClose_ = controlOpenClose;
}


#line 198
- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)lname
                    withNSString:(NSString *)name
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)attrs {
  JavaUtilProperties *attributes = new_JavaUtilProperties_init();
  if (attrs != nil) {
    for (jint i = 0; i < [attrs getLength]; i++) {
      NSString *attribute = [attrs getQNameWithInt:i];
      (void) [attributes setPropertyWithNSString:attribute withNSString:[attrs getValueWithInt:i]];
    }
  }
  [self handleStartingTagsWithNSString:name withJavaUtilProperties:attributes];
}


#line 221
- (void)handleStartingTagsWithNSString:(NSString *)name
                withJavaUtilProperties:(JavaUtilProperties *)attributes {
  if (self->ignore_ || [((NSString *) nil_chk(ComAowagieTextElementTags_IGNORE)) isEqual:name]) {
    self->ignore_ = true;
    return;
  }
  
#line 229
  if (self->currentChunk_ != nil) {
    id<ComAowagieTextTextElementArray> current;
    @try {
      current = (id<ComAowagieTextTextElementArray>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextTextElementArray_class_());
    }
    @catch (
#line 233
    JavaUtilEmptyStackException *ese) {
      if (self->bf_ == nil) {
        current = new_ComAowagieTextParagraph_initWithNSString_withComAowagieTextFont_(@"", new_ComAowagieTextFont_init());
      }
      else {
        current = new_ComAowagieTextParagraph_initWithNSString_withComAowagieTextFont_(@"", new_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_(self->bf_));
      }
    }
    [((id<ComAowagieTextTextElementArray>) nil_chk(current)) addWithId:self->currentChunk_];
    (void) [self->stack_ pushWithId:current];
    self->currentChunk_ = nil;
  }
  
#line 247
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_CHUNK)) isEqual:name]) {
    self->currentChunk_ = ComAowagieTextFactoriesElementFactory_getChunkWithJavaUtilProperties_(attributes);
    if (self->bf_ != nil) {
      [((ComAowagieTextChunk *) nil_chk(self->currentChunk_)) setFontWithComAowagieTextFont:new_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_(self->bf_)];
    }
    return;
  }
  
#line 256
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_ENTITY)) isEqual:name]) {
    ComAowagieTextFont *f = new_ComAowagieTextFont_init();
    if (self->currentChunk_ != nil) {
      [self handleEndingTagsWithNSString:ComAowagieTextElementTags_CHUNK];
      f = [((ComAowagieTextChunk *) nil_chk(self->currentChunk_)) getFont];
    }
    self->currentChunk_ = ComAowagieTextXmlSimpleparserEntitiesToSymbol_getWithNSString_withComAowagieTextFont_([((JavaUtilProperties *) nil_chk(attributes)) getPropertyWithNSString:ComAowagieTextElementTags_ID],
#line 263
    f);
    return;
  }
  
#line 268
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_PHRASE)) isEqual:name]) {
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:ComAowagieTextFactoriesElementFactory_getPhraseWithJavaUtilProperties_(attributes)];
    return;
  }
  
#line 274
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_ANCHOR)) isEqual:name]) {
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:ComAowagieTextFactoriesElementFactory_getAnchorWithJavaUtilProperties_(attributes)];
    return;
  }
  
#line 280
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_PARAGRAPH)) isEqual:name] || [((NSString *) nil_chk(ComAowagieTextElementTags_TITLE)) isEqual:name]) {
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:ComAowagieTextFactoriesElementFactory_getParagraphWithJavaUtilProperties_(attributes)];
    return;
  }
  
#line 286
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_LIST)) isEqual:name]) {
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:ComAowagieTextFactoriesElementFactory_getListWithJavaUtilProperties_(attributes)];
    return;
  }
  
#line 292
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_LISTITEM)) isEqual:name]) {
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:ComAowagieTextFactoriesElementFactory_getListItemWithJavaUtilProperties_(attributes)];
    return;
  }
  
#line 298
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_CELL)) isEqual:name]) {
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:ComAowagieTextFactoriesElementFactory_getCellWithJavaUtilProperties_(attributes)];
    return;
  }
  
#line 304
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_TABLE)) isEqual:name]) {
    ComAowagieTextTable *table = ComAowagieTextFactoriesElementFactory_getTableWithJavaUtilProperties_(attributes);
    IOSFloatArray *widths = [((ComAowagieTextTable *) nil_chk(table)) getProportionalWidths];
    for (jint i = 0; i < ((IOSFloatArray *) nil_chk(widths))->size_; i++) {
      if (IOSFloatArray_Get(widths, i) == 0) {
        *IOSFloatArray_GetRef(widths, i) = 100.0f / widths->size_;
      }
    }
    @try {
      [table setWidthsWithFloatArray:widths];
    }
    @catch (
#line 314
    ComAowagieTextBadElementException *bee) {
      
#line 316
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(bee);
    }
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:table];
    return;
  }
  
#line 323
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_SECTION)) isEqual:name]) {
    id<ComAowagieTextElement> previous = (id<ComAowagieTextElement>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextElement_class_());
    ComAowagieTextSection *section;
    @try {
      section = ComAowagieTextFactoriesElementFactory_getSectionWithComAowagieTextSection_withJavaUtilProperties_((ComAowagieTextSection *) cast_chk(previous, [ComAowagieTextSection class]), attributes);
    }
    @catch (
#line 328
    JavaLangClassCastException *cce) {
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(cce);
    }
    (void) [self->stack_ pushWithId:previous];
    (void) [self->stack_ pushWithId:section];
    return;
  }
  
#line 337
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_CHAPTER)) isEqual:name]) {
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:ComAowagieTextFactoriesElementFactory_getChapterWithJavaUtilProperties_(attributes)];
    return;
  }
  
#line 343
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_IMAGE)) isEqual:name]) {
    @try {
      ComAowagieTextImage *img = ComAowagieTextFactoriesElementFactory_getImageWithJavaUtilProperties_(attributes);
      @try {
        ComAowagieTextXmlSAXiTextHandler_addImageWithComAowagieTextImage_(self, img);
        return;
      }
      @catch (
#line 349
      JavaUtilEmptyStackException *ese) {
        
#line 352
        @try {
          [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:img];
        }
        @catch (
#line 354
        ComAowagieTextDocumentException *de) {
          @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(de);
        }
        return;
      }
    }
    @catch (
#line 359
    JavaLangException *e) {
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
    }
  }
  
#line 365
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_ANNOTATION)) isEqual:name]) {
    ComAowagieTextAnnotation *annotation = ComAowagieTextFactoriesElementFactory_getAnnotationWithJavaUtilProperties_(attributes);
    id<ComAowagieTextTextElementArray> current;
    @try {
      @try {
        current = (id<ComAowagieTextTextElementArray>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextTextElementArray_class_());
        @try {
          [((id<ComAowagieTextTextElementArray>) nil_chk(current)) addWithId:annotation];
        }
        @catch (
#line 373
        JavaLangException *e) {
          [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:annotation];
        }
        (void) [self->stack_ pushWithId:current];
      }
      @catch (
#line 377
      JavaUtilEmptyStackException *ese) {
        [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:annotation];
      }
      return;
    }
    @catch (
#line 381
    ComAowagieTextDocumentException *de) {
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(de);
    }
  }
  
#line 387
  if (ComAowagieTextXmlSAXiTextHandler_isNewlineWithNSString_(self, name)) {
    id<ComAowagieTextTextElementArray> current;
    @try {
      current = (id<ComAowagieTextTextElementArray>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextTextElementArray_class_());
      [((id<ComAowagieTextTextElementArray>) nil_chk(current)) addWithId:JreLoadStatic(ComAowagieTextChunk, NEWLINE)];
      (void) [self->stack_ pushWithId:current];
    }
    @catch (
#line 393
    JavaUtilEmptyStackException *ese) {
      if (self->currentChunk_ == nil) {
        @try {
          [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:JreLoadStatic(ComAowagieTextChunk, NEWLINE)];
        }
        @catch (
#line 397
        ComAowagieTextDocumentException *de) {
          @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(de);
        }
      }
      else {
        
#line 401
        (void) [self->currentChunk_ appendWithNSString:@"\n"];
      }
    }
    return;
  }
  
#line 408
  if (ComAowagieTextXmlSAXiTextHandler_isNewpageWithNSString_(self, name)) {
    id<ComAowagieTextTextElementArray> current;
    @try {
      current = (id<ComAowagieTextTextElementArray>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextTextElementArray_class_());
      ComAowagieTextChunk *newPage = new_ComAowagieTextChunk_initWithNSString_(@"");
      (void) [newPage setNewPage];
      if (self->bf_ != nil) {
        [newPage setFontWithComAowagieTextFont:new_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_(self->bf_)];
      }
      [((id<ComAowagieTextTextElementArray>) nil_chk(current)) addWithId:newPage];
      (void) [self->stack_ pushWithId:current];
    }
    @catch (
#line 419
    JavaUtilEmptyStackException *ese) {
      [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) newPage];
    }
    return;
  }
  
#line 425
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_HORIZONTALRULE)) isEqual:name]) {
    id<ComAowagieTextTextElementArray> current;
    ComAowagieTextPdfDrawLineSeparator *hr = new_ComAowagieTextPdfDrawLineSeparator_initWithFloat_withFloat_withHarmonyJavaAwtColor_withInt_withFloat_(1.0f, 100.0f, nil, ComAowagieTextElement_ALIGN_CENTER, 0);
    @try {
      current = (id<ComAowagieTextTextElementArray>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextTextElementArray_class_());
      [((id<ComAowagieTextTextElementArray>) nil_chk(current)) addWithId:hr];
      (void) [self->stack_ pushWithId:current];
    }
    @catch (
#line 432
    JavaUtilEmptyStackException *ese) {
      @try {
        [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:hr];
      }
      @catch (
#line 435
      ComAowagieTextDocumentException *de) {
        @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(de);
      }
    }
    return;
  }
  
#line 443
  if (ComAowagieTextXmlSAXiTextHandler_isDocumentRootWithNSString_(self, name)) {
    NSString *key;
    NSString *value;
    
#line 448
    ComAowagieTextRectangle *pageSize = nil;
    NSString *orientation = nil;
    for (id __strong element in nil_chk([((JavaUtilProperties *) nil_chk(attributes)) keySet])) {
      key = (NSString *) cast_chk(element, [NSString class]);
      value = [attributes getPropertyWithNSString:key];
      @try {
        
#line 455
        if ([((NSString *) nil_chk(ComAowagieTextElementTags_LEFT)) java_equalsIgnoreCase:key]) {
          self->leftMargin_ = JavaLangFloat_parseFloatWithNSString_(JreStrcat("$C", value, 'f'));
        }
        if ([((NSString *) nil_chk(ComAowagieTextElementTags_RIGHT)) java_equalsIgnoreCase:key]) {
          self->rightMargin_ = JavaLangFloat_parseFloatWithNSString_(JreStrcat("$C", value, 'f'));
        }
        if ([((NSString *) nil_chk(ComAowagieTextElementTags_TOP)) java_equalsIgnoreCase:key]) {
          self->topMargin_ = JavaLangFloat_parseFloatWithNSString_(JreStrcat("$C", value, 'f'));
        }
        if ([((NSString *) nil_chk(ComAowagieTextElementTags_BOTTOM)) java_equalsIgnoreCase:key]) {
          self->bottomMargin_ = JavaLangFloat_parseFloatWithNSString_(JreStrcat("$C", value, 'f'));
        }
      }
      @catch (
#line 467
      JavaLangException *ex) {
        @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ex);
      }
      if ([((NSString *) nil_chk(ComAowagieTextElementTags_PAGE_SIZE)) isEqual:key]) {
        @try {
          NSString *pageSizeName = value;
          JavaLangReflectField *pageSizeField = [ComAowagieTextPageSize_class_() getField:
#line 474
          pageSizeName];
          pageSize = (ComAowagieTextRectangle *) cast_chk([((JavaLangReflectField *) nil_chk(pageSizeField)) getWithId:nil], [ComAowagieTextRectangle class]);
        }
        @catch (
#line 476
        JavaLangException *ex) {
          @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ex);
        }
      }
      else
#line 479
      if ([((NSString *) nil_chk(ComAowagieTextElementTags_ORIENTATION)) isEqual:key]) {
        @try {
          if ([@"landscape" isEqual:value]) {
            orientation = @"landscape";
          }
        }
        @catch (
#line 484
        JavaLangException *ex) {
          @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ex);
        }
      }
      else {
        
#line 488
        @try {
          [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:new_ComAowagieTextMeta_initWithNSString_withNSString_(key, value)];
        }
        @catch (
#line 490
        ComAowagieTextDocumentException *de) {
          @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(de);
        }
      }
    }
    if (pageSize != nil) {
      if ([@"landscape" isEqual:orientation]) {
        pageSize = [pageSize rotate];
      }
      [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) setPageSizeWithComAowagieTextRectangle:pageSize];
    }
    [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) setMarginsWithFloat:self->leftMargin_ withFloat:self->rightMargin_ withFloat:self->topMargin_ withFloat:
#line 502
    self->bottomMargin_];
    
#line 504
    if (self->controlOpenClose_) {
      [self->document_ open];
    }
  }
}


#line 511
- (void)addImageWithComAowagieTextImage:(ComAowagieTextImage *)img {
  ComAowagieTextXmlSAXiTextHandler_addImageWithComAowagieTextImage_(self, img);
}


#line 555
- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length {
  
#line 557
  [self charactersWithCharArray:ch withInt:start withInt:length];
}


#line 571
- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length {
  if (self->ignore_) {
    return;
  }
  
#line 578
  NSString *content = [NSString java_stringWithCharacters:ch offset:start length:length];
  
#line 581
  if ([((NSString *) nil_chk([content java_trim])) java_length] == 0 && [content java_indexOf:' '] < 0) {
    return;
  }
  
#line 585
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  jint len = [content java_length];
  jchar character;
  jboolean newline = false;
  for (jint i = 0; i < len; i++) {
    switch (character = [content charAtWithInt:i]) {
      case ' ':
      if (!newline) {
        (void) [buf appendWithChar:character];
      }
      break;
      case 0x000a:
      if (i > 0) {
        newline = true;
        (void) [buf appendWithChar:' '];
      }
      break;
      case 0x000d:
      break;
      case 0x0009:
      break;
      default:
      newline = false;
      (void) [buf appendWithChar:character];
    }
  }
  if (self->currentChunk_ == nil) {
    if (self->bf_ == nil) {
      self->currentChunk_ = new_ComAowagieTextChunk_initWithNSString_([buf description]);
    }
    else {
      self->currentChunk_ = new_ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_([buf description], new_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_(self->bf_));
    }
  }
  else {
    
#line 619
    (void) [self->currentChunk_ appendWithNSString:[buf description]];
  }
}


#line 629
- (void)setBaseFontWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)bf {
  self->bf_ = bf;
}


#line 645
- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)lname
                  withNSString:(NSString *)name {
  
#line 647
  [self handleEndingTagsWithNSString:name];
}


#line 657
- (void)handleEndingTagsWithNSString:(NSString *)name {
  
#line 661
  if ([((NSString *) nil_chk(ComAowagieTextElementTags_IGNORE)) isEqual:name]) {
    self->ignore_ = false;
    return;
  }
  if (self->ignore_) {
    return;
  }
  
#line 669
  if (ComAowagieTextXmlSAXiTextHandler_isNewpageWithNSString_(self, name) || [((NSString *) nil_chk(ComAowagieTextElementTags_ANNOTATION)) isEqual:name] || [((NSString *) nil_chk(ComAowagieTextElementTags_IMAGE)) isEqual:name] || ComAowagieTextXmlSAXiTextHandler_isNewlineWithNSString_(self,
#line 670
  name)) {
    return;
  }
  
#line 674
  @try {
    
#line 676
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_TITLE)) isEqual:name]) {
      ComAowagieTextParagraph *current = (ComAowagieTextParagraph *) cast_chk([((JavaUtilStack *) nil_chk(self->stack_)) pop], [ComAowagieTextParagraph class]);
      if (self->currentChunk_ != nil) {
        [((ComAowagieTextParagraph *) nil_chk(current)) addWithId:self->currentChunk_];
        self->currentChunk_ = nil;
      }
      ComAowagieTextSection *previous = (ComAowagieTextSection *) cast_chk([self->stack_ pop], [ComAowagieTextSection class]);
      [((ComAowagieTextSection *) nil_chk(previous)) setTitleWithComAowagieTextParagraph:current];
      (void) [self->stack_ pushWithId:previous];
      return;
    }
    
#line 689
    if (self->currentChunk_ != nil) {
      id<ComAowagieTextTextElementArray> current;
      @try {
        current = (id<ComAowagieTextTextElementArray>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextTextElementArray_class_());
      }
      @catch (
#line 693
      JavaUtilEmptyStackException *ese) {
        current = new_ComAowagieTextParagraph_init();
      }
      [((id<ComAowagieTextTextElementArray>) nil_chk(current)) addWithId:self->currentChunk_];
      (void) [self->stack_ pushWithId:current];
      self->currentChunk_ = nil;
    }
    
#line 702
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_CHUNK)) isEqual:name]) {
      return;
    }
    
#line 707
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_PHRASE)) isEqual:name] || [((NSString *) nil_chk(ComAowagieTextElementTags_ANCHOR)) isEqual:name] || [((NSString *) nil_chk(ComAowagieTextElementTags_LIST)) isEqual:name] ||
#line 708
    [((NSString *) nil_chk(ComAowagieTextElementTags_PARAGRAPH)) isEqual:name]) {
      id<ComAowagieTextElement> current = (id<ComAowagieTextElement>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextElement_class_());
      @try {
        id<ComAowagieTextTextElementArray> previous = (id<ComAowagieTextTextElementArray>) cast_check([self->stack_ pop], ComAowagieTextTextElementArray_class_());
        [((id<ComAowagieTextTextElementArray>) nil_chk(previous)) addWithId:current];
        (void) [self->stack_ pushWithId:previous];
      }
      @catch (
#line 714
      JavaUtilEmptyStackException *ese) {
        [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:current];
      }
      return;
    }
    
#line 721
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_LISTITEM)) isEqual:name]) {
      ComAowagieTextListItem *listItem = (ComAowagieTextListItem *) cast_chk([((JavaUtilStack *) nil_chk(self->stack_)) pop], [ComAowagieTextListItem class]);
      ComAowagieTextList *list = (ComAowagieTextList *) cast_chk([self->stack_ pop], [ComAowagieTextList class]);
      [((ComAowagieTextList *) nil_chk(list)) addWithId:listItem];
      (void) [self->stack_ pushWithId:list];
    }
    
#line 729
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_TABLE)) isEqual:name]) {
      ComAowagieTextTable *table = (ComAowagieTextTable *) cast_chk([((JavaUtilStack *) nil_chk(self->stack_)) pop], [ComAowagieTextTable class]);
      @try {
        id<ComAowagieTextTextElementArray> previous = (id<ComAowagieTextTextElementArray>) cast_check([self->stack_ pop], ComAowagieTextTextElementArray_class_());
        [((id<ComAowagieTextTextElementArray>) nil_chk(previous)) addWithId:table];
        (void) [self->stack_ pushWithId:previous];
      }
      @catch (
#line 735
      JavaUtilEmptyStackException *ese) {
        [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:table];
      }
      return;
    }
    
#line 742
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_ROW)) isEqual:name]) {
      JavaUtilArrayList *cells = new_JavaUtilArrayList_init();
      jint columns = 0;
      ComAowagieTextTable *table;
      ComAowagieTextCell *cell;
      while (true) {
        id<ComAowagieTextElement> element = (id<ComAowagieTextElement>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextElement_class_());
        if ([((id<ComAowagieTextElement>) nil_chk(element)) type] == ComAowagieTextElement_CELL) {
          cell = (ComAowagieTextCell *) cast_chk(element, [ComAowagieTextCell class]);
          columns += [cell getColspan];
          [cells addWithId:cell];
        }
        else {
          
#line 754
          table = (ComAowagieTextTable *) cast_chk(element, [ComAowagieTextTable class]);
          break;
        }
      }
      if ([((ComAowagieTextTable *) nil_chk(table)) getColumns] < columns) {
        [table addColumnsWithInt:columns - [table getColumns]];
      }
      JavaUtilCollections_reverseWithJavaUtilList_(cells);
      NSString *width;
      IOSFloatArray *cellWidths = [IOSFloatArray newArrayWithLength:columns];
      IOSBooleanArray *cellNulls = [IOSBooleanArray newArrayWithLength:columns];
      for (jint i = 0; i < columns; i++) {
        *IOSFloatArray_GetRef(cellWidths, i) = 0;
        *IOSBooleanArray_GetRef(cellNulls, i) = true;
      }
      jfloat total = 0;
      jint j = 0;
      for (id<JavaUtilIterator> i = [cells iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
        cell = (ComAowagieTextCell *) cast_chk([i next], [ComAowagieTextCell class]);
        width = [((ComAowagieTextCell *) nil_chk(cell)) getWidthAsString];
        if ([cell getWidth] == 0) {
          if ([cell getColspan] == 1 && IOSFloatArray_Get(cellWidths, j) == 0) {
            @try {
              *IOSFloatArray_GetRef(cellWidths, j) = 100.0f / columns;
              JrePlusAssignFloatF(&total, IOSFloatArray_Get(cellWidths, j));
            }
            @catch (
#line 779
            JavaLangException *e) {
            }
          }
          else if ([cell getColspan] == 1) {
            *IOSBooleanArray_GetRef(cellNulls, j) = false;
          }
        }
        else
#line 785
        if ([cell getColspan] == 1 && [((NSString *) nil_chk(width)) java_hasSuffix:@"%"]) {
          @try {
            *IOSFloatArray_GetRef(cellWidths, j) = JavaLangFloat_parseFloatWithNSString_(JreStrcat("$C",
#line 788
            [((NSString *) nil_chk(width)) java_substring:0 endIndex:[width java_length] - 1], 'f'));
            
#line 790
            JrePlusAssignFloatF(&total, IOSFloatArray_Get(cellWidths, j));
          }
          @catch (
#line 791
          JavaLangException *e) {
          }
        }
        
#line 795
        j += [cell getColspan];
        [table addCellWithComAowagieTextCell:cell];
      }
      IOSFloatArray *widths = [table getProportionalWidths];
      if (((IOSFloatArray *) nil_chk(widths))->size_ == columns) {
        jfloat left = 0.0f;
        for (jint i = 0; i < columns; i++) {
          if (IOSBooleanArray_Get(cellNulls, i) && IOSFloatArray_Get(widths, i) != 0) {
            JrePlusAssignFloatF(&left, IOSFloatArray_Get(widths, i));
            *IOSFloatArray_GetRef(cellWidths, i) = IOSFloatArray_Get(widths, i);
          }
        }
        if (100.0 >= total) {
          for (jint i = 0; i < widths->size_; i++) {
            if (IOSFloatArray_Get(cellWidths, i) == 0 && IOSFloatArray_Get(widths, i) != 0) {
              *IOSFloatArray_GetRef(cellWidths, i) = IOSFloatArray_Get(widths, i) / left *
#line 811
              (100.0f - total);
            }
          }
        }
        [table setWidthsWithFloatArray:cellWidths];
      }
      (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:table];
    }
    
#line 821
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_CELL)) isEqual:name]) {
      return;
    }
    
#line 826
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_SECTION)) isEqual:name]) {
      (void) [((JavaUtilStack *) nil_chk(self->stack_)) pop];
      return;
    }
    
#line 832
    if ([((NSString *) nil_chk(ComAowagieTextElementTags_CHAPTER)) isEqual:name]) {
      [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:(id<ComAowagieTextElement>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextElement_class_())];
      return;
    }
    
#line 838
    if (ComAowagieTextXmlSAXiTextHandler_isDocumentRootWithNSString_(self, name)) {
      @try {
        while (true) {
          id<ComAowagieTextElement> element = (id<ComAowagieTextElement>) cast_check([((JavaUtilStack *) nil_chk(self->stack_)) pop], ComAowagieTextElement_class_());
          @try {
            id<ComAowagieTextTextElementArray> previous = (id<ComAowagieTextTextElementArray>) cast_check([self->stack_ pop], ComAowagieTextTextElementArray_class_());
            
#line 845
            [((id<ComAowagieTextTextElementArray>) nil_chk(previous)) addWithId:element];
            (void) [self->stack_ pushWithId:previous];
          }
          @catch (
#line 847
          JavaUtilEmptyStackException *es) {
            [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) addWithComAowagieTextElement:element];
          }
        }
      }
      @catch (
#line 851
      JavaUtilEmptyStackException *ese) {
      }
      
#line 854
      if (self->controlOpenClose_) {
        [((id<ComAowagieTextDocListener>) nil_chk(self->document_)) close];
      }
      return;
    }
  }
  @catch (
#line 859
  ComAowagieTextDocumentException *de) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(de);
  }
}


#line 872
- (jboolean)isNewpageWithNSString:(NSString *)tag {
  return ComAowagieTextXmlSAXiTextHandler_isNewpageWithNSString_(self, tag);
}


#line 884
- (jboolean)isNewlineWithNSString:(NSString *)tag {
  return ComAowagieTextXmlSAXiTextHandler_isNewlineWithNSString_(self, tag);
}


#line 897
- (jboolean)isDocumentRootWithNSString:(NSString *)tag {
  return ComAowagieTextXmlSAXiTextHandler_isDocumentRootWithNSString_(self, tag);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, 11, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 19, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 21, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 22, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 23, 20, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextDocListener:);
  methods[1].selector = @selector(initPackagePrivateWithComAowagieTextDocListener:withComAowagieTextHtmlHtmlTagMap:);
  methods[2].selector = @selector(initPackagePrivateWithComAowagieTextDocListener:withJavaUtilHashMap:);
  methods[3].selector = @selector(setControlOpenCloseWithBoolean:);
  methods[4].selector = @selector(startElementWithNSString:withNSString:withNSString:withOrgXmlSaxAttributes:);
  methods[5].selector = @selector(handleStartingTagsWithNSString:withJavaUtilProperties:);
  methods[6].selector = @selector(addImageWithComAowagieTextImage:);
  methods[7].selector = @selector(ignorableWhitespaceWithCharArray:withInt:withInt:);
  methods[8].selector = @selector(charactersWithCharArray:withInt:withInt:);
  methods[9].selector = @selector(setBaseFontWithComAowagieTextPdfBaseFont:);
  methods[10].selector = @selector(endElementWithNSString:withNSString:withNSString:);
  methods[11].selector = @selector(handleEndingTagsWithNSString:);
  methods[12].selector = @selector(isNewpageWithNSString:);
  methods[13].selector = @selector(isNewlineWithNSString:);
  methods[14].selector = @selector(isDocumentRootWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "document_", "LComAowagieTextDocListener;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "stack_", "LJavaUtilStack;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "currentChunk_", "LComAowagieTextChunk;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ignore_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "controlOpenClose_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "topMargin_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rightMargin_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "leftMargin_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bottomMargin_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "myTags_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "bf_", "LComAowagieTextPdfBaseFont;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextDocListener;", "LComAowagieTextDocListener;LComAowagieTextHtmlHtmlTagMap;", "LComAowagieTextDocListener;LJavaUtilHashMap;", "setControlOpenClose", "Z", "startElement", "LNSString;LNSString;LNSString;LOrgXmlSaxAttributes;", "handleStartingTags", "LNSString;LJavaUtilProperties;", "addImage", "LComAowagieTextImage;", "LJavaUtilEmptyStackException;", "ignorableWhitespace", "[CII", "characters", "setBaseFont", "LComAowagieTextPdfBaseFont;", "endElement", "LNSString;LNSString;LNSString;", "handleEndingTags", "LNSString;", "isNewpage", "isNewline", "isDocumentRoot" };
  static const J2ObjcClassInfo _ComAowagieTextXmlSAXiTextHandler = { "SAXiTextHandler", "com.aowagie.text.xml", ptrTable, methods, fields, 7, 0x0, 15, 11, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextXmlSAXiTextHandler;
}

@end


#line 137
void ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_(ComAowagieTextXmlSAXiTextHandler *self, id<ComAowagieTextDocListener> document) {
  OrgXmlSaxHelpersDefaultHandler_init(self);
  self->currentChunk_ =
#line 111
  nil;
  self->ignore_ =
#line 114
  false;
  self->controlOpenClose_ =
#line 120
  true;
  self->topMargin_ =
#line 123
  36;
  self->rightMargin_ =
#line 126
  36;
  self->leftMargin_ =
#line 129
  36;
  self->bottomMargin_ =
#line 132
  36;
  self->bf_ =
#line 623
  nil;
  
#line 139
  self->document_ = document;
  self->stack_ = new_JavaUtilStack_init();
}


#line 137
ComAowagieTextXmlSAXiTextHandler *new_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_(id<ComAowagieTextDocListener> document) {
  J2OBJC_NEW_IMPL(ComAowagieTextXmlSAXiTextHandler, initPackagePrivateWithComAowagieTextDocListener_, document)
}


#line 137
ComAowagieTextXmlSAXiTextHandler *create_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_(id<ComAowagieTextDocListener> document) {
  J2OBJC_CREATE_IMPL(ComAowagieTextXmlSAXiTextHandler, initPackagePrivateWithComAowagieTextDocListener_, document)
}


#line 150
void ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_(ComAowagieTextXmlSAXiTextHandler *self, id<ComAowagieTextDocListener> document, ComAowagieTextHtmlHtmlTagMap *myTags) {
  ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_(self, document);
  self->myTags_ = myTags;
}


#line 150
ComAowagieTextXmlSAXiTextHandler *new_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_(id<ComAowagieTextDocListener> document, ComAowagieTextHtmlHtmlTagMap *myTags) {
  J2OBJC_NEW_IMPL(ComAowagieTextXmlSAXiTextHandler, initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_, document, myTags)
}


#line 150
ComAowagieTextXmlSAXiTextHandler *create_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_(id<ComAowagieTextDocListener> document, ComAowagieTextHtmlHtmlTagMap *myTags) {
  J2OBJC_CREATE_IMPL(ComAowagieTextXmlSAXiTextHandler, initPackagePrivateWithComAowagieTextDocListener_withComAowagieTextHtmlHtmlTagMap_, document, myTags)
}


#line 161
void ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withJavaUtilHashMap_(ComAowagieTextXmlSAXiTextHandler *self, id<ComAowagieTextDocListener> document, JavaUtilHashMap *myTags) {
  ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_(self, document);
  self->myTags_ = myTags;
}


#line 161
ComAowagieTextXmlSAXiTextHandler *new_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withJavaUtilHashMap_(id<ComAowagieTextDocListener> document, JavaUtilHashMap *myTags) {
  J2OBJC_NEW_IMPL(ComAowagieTextXmlSAXiTextHandler, initPackagePrivateWithComAowagieTextDocListener_withJavaUtilHashMap_, document, myTags)
}


#line 161
ComAowagieTextXmlSAXiTextHandler *create_ComAowagieTextXmlSAXiTextHandler_initPackagePrivateWithComAowagieTextDocListener_withJavaUtilHashMap_(id<ComAowagieTextDocListener> document, JavaUtilHashMap *myTags) {
  J2OBJC_CREATE_IMPL(ComAowagieTextXmlSAXiTextHandler, initPackagePrivateWithComAowagieTextDocListener_withJavaUtilHashMap_, document, myTags)
}


#line 511
void ComAowagieTextXmlSAXiTextHandler_addImageWithComAowagieTextImage_(ComAowagieTextXmlSAXiTextHandler *self, ComAowagieTextImage *img) {
  
#line 513
  id current = [((JavaUtilStack *) nil_chk(self->stack_)) pop];
  
#line 516
  if ([current isKindOfClass:[ComAowagieTextChapter class]] ||
#line 517
  [current isKindOfClass:[ComAowagieTextSection class]] ||
#line 518
  [current isKindOfClass:[ComAowagieTextCell class]]) {
    [((id<ComAowagieTextTextElementArray>) nil_chk(((id<ComAowagieTextTextElementArray>) cast_check(current, ComAowagieTextTextElementArray_class_())))) addWithId:img];
    (void) [self->stack_ pushWithId:current];
    return;
  }
  else {
    
#line 525
    JavaUtilStack *newStack = new_JavaUtilStack_init();
    while (!([current isKindOfClass:[ComAowagieTextChapter class]] ||
#line 527
    [current isKindOfClass:[ComAowagieTextSection class]] || [current isKindOfClass:[ComAowagieTextCell class]])) {
      (void) [newStack pushWithId:current];
      if ([current isKindOfClass:[ComAowagieTextAnchor class]]) {
        [((ComAowagieTextImage *) nil_chk(img)) setAnnotationWithComAowagieTextAnnotation:new_ComAowagieTextAnnotation_initWithFloat_withFloat_withFloat_withFloat_withNSString_(0, 0, 0,
#line 531
        0, [((ComAowagieTextAnchor *) nil_chk(((ComAowagieTextAnchor *) current))) getReference])];
      }
      current = [self->stack_ pop];
    }
    [((id<ComAowagieTextTextElementArray>) nil_chk(((id<ComAowagieTextTextElementArray>) cast_check(current, ComAowagieTextTextElementArray_class_())))) addWithId:img];
    (void) [self->stack_ pushWithId:current];
    while (![newStack empty]) {
      (void) [self->stack_ pushWithId:[newStack pop]];
    }
    return;
  }
}


#line 872
jboolean ComAowagieTextXmlSAXiTextHandler_isNewpageWithNSString_(ComAowagieTextXmlSAXiTextHandler *self, NSString *tag) {
  return [((NSString *) nil_chk(ComAowagieTextElementTags_NEWPAGE)) isEqual:tag];
}


#line 884
jboolean ComAowagieTextXmlSAXiTextHandler_isNewlineWithNSString_(ComAowagieTextXmlSAXiTextHandler *self, NSString *tag) {
  return [((NSString *) nil_chk(ComAowagieTextElementTags_NEWLINE)) isEqual:tag];
}


#line 897
jboolean ComAowagieTextXmlSAXiTextHandler_isDocumentRootWithNSString_(ComAowagieTextXmlSAXiTextHandler *self, NSString *tag) {
  return [((NSString *) nil_chk(ComAowagieTextElementTags_ITEXT)) isEqual:tag];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextXmlSAXiTextHandler)

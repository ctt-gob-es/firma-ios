//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/ciphers/AOCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AOCipher")
#ifdef RESTRICT_AOCipher
#define INCLUDE_ALL_AOCipher 0
#else
#define INCLUDE_ALL_AOCipher 1
#endif
#undef RESTRICT_AOCipher

#if !defined (EsGobAfirmaCoreCiphersAOCipher_) && (INCLUDE_ALL_AOCipher || defined(INCLUDE_EsGobAfirmaCoreCiphersAOCipher))
#define EsGobAfirmaCoreCiphersAOCipher_

@class EsGobAfirmaCoreCiphersAOCipherConfig;
@class IOSByteArray;
@class IOSCharArray;
@class IOSObjectArray;
@protocol JavaSecurityKey;

/*!
 @brief Define los requerimientos de las clases capaces de efectuar cifrado de datos.
 Una clase de cifrado puede efectuar cifrados y descifrado de datos en
  m&aacute;s de un formato.
 @version 1.0
 */
@protocol EsGobAfirmaCoreCiphersAOCipher < JavaObject >

/*!
 @brief Recupera las distintas configuraciones de algoritmos de cifrado
  (algoritmo-modo_de_bloque-padding) que soporta el proveedor.
 @return Configuraciones de cifrado.
 */
- (IOSObjectArray *)getSupportedConfigs;

/*!
 @brief Cifra un mensaje.El algoritmo que deseamos utilizar para el descifrado
  puede ir acompa&ntilde;ado de una configuraci&oacute;n, seg&uacute;n lo
  requiera el proveedor de cifrado.
 Por ejemplo, podr&iacute;a utilizarse
  una de las siguientes cadenas:<br>
  <ul>
  <li><i>Algoritmo</i></li>
  <li><i>Algoritmo</i>/<i>Modo</i>/<i>Padding</i></li>
  </ul>
 @param data Datos a cifrar.
 @param algorithmConfig Configuraci
  &oacute; n del algoritmo de cifrado.
 @param cipherKey Clave con la que se desea cifrar.
 @return Datos cifrados.
 @throw AOException
 Cuando ocurre un error durante la operaci&oacute;n
 @throw KeyException
 Cuando la clave de cifrado introducida no es compatible con
          este algoritmo.
 */
- (IOSByteArray *)cipherWithByteArray:(IOSByteArray *)data
withEsGobAfirmaCoreCiphersAOCipherConfig:(EsGobAfirmaCoreCiphersAOCipherConfig *)algorithmConfig
                  withJavaSecurityKey:(id<JavaSecurityKey>)cipherKey;

/*!
 @brief Descifra un mensaje.El algoritmo que deseamos utilizar para el
  descifrado puede ir acompa&ntilde;ado de una configuraci&oacute;n,
  seg&uacute;n lo requiera el proveedor de cifrado.
 Por ejemplo,
  podr&iacute;a utilizarse una de las siguientes cadenas:<br>
  <ul>
  <li><i>Algoritmo</i></li>
  <li><i>Algoritmo</i>/<i>Modo</i>/<i>Padding</i></li>
  </ul>
 @param data Datos a descifrar.
 @param algorithmConfig Configuraci
  &oacute; n del algoritmo de cifrado.
 @param decipherKey Clave para el descifrado de los datos.
 @return Datos descifrados.
 @throw AOException
 Cuando ocurre un error durante la operaci&oacute;n
 @throw KeyException
 Cuando la clave de cifrado introducida no es compatible con
          este algoritmo.
 */
- (IOSByteArray *)decipherWithByteArray:(IOSByteArray *)data
withEsGobAfirmaCoreCiphersAOCipherConfig:(EsGobAfirmaCoreCiphersAOCipherConfig *)algorithmConfig
                    withJavaSecurityKey:(id<JavaSecurityKey>)decipherKey;

/*!
 @brief Obtiene una clave para el algoritmo seleccionado a partir de su
  codificaci&oacute;n.Seg&uacute;n el algoritmo puede ser necesario o no
  el uso de par&aacute;metros adicionales.
 @param key Clave codificada.
 @param algorithmConfig Algoritmo de cifrado.
 @param params Par
  &aacute; metros adicionales.
 @return Clave.
 @throw KeyException
 Cuando se produce un error al generar la clave.
 */
- (id<JavaSecurityKey>)decodeKeyWithByteArray:(IOSByteArray *)key
     withEsGobAfirmaCoreCiphersAOCipherConfig:(EsGobAfirmaCoreCiphersAOCipherConfig *)algorithmConfig
                            withNSObjectArray:(IOSObjectArray *)params;

/*!
 @brief Obtiene una clave para el algoritmo seleccionado a partir de la
  contrase&ntilde;a.Seg&uacute;n el algoritmo puede ser necesario o no el
  uso de par&aacute;metros adicionales.
 @param passphrase Contrase
  &ntilde; a para la generaci &oacute; n de la clave.
 @param algorithmConfig Algoritmo de cifrado.
 @param params Par
  &aacute; metros adicionales.
 @return Clave.
 @throw AOException
 Cuando se produce un error al generar la clave.
 */
- (id<JavaSecurityKey>)decodePassphraseWithCharArray:(IOSCharArray *)passphrase
            withEsGobAfirmaCoreCiphersAOCipherConfig:(EsGobAfirmaCoreCiphersAOCipherConfig *)algorithmConfig
                                   withNSObjectArray:(IOSObjectArray *)params;

/*!
 @brief Genera una nueva clave para el algoritmo seleccionado.
 @param algorithmConfig Algoritmo de cifrado.
 @return Clave.
 @throw NoSuchAlgorithmException
 Cuando el algoritmo de cifrado no est&aacute; soportado.
 @throw AOException
 Cuando se produce un error al generar la clave.
 */
- (id<JavaSecurityKey>)generateKeyWithEsGobAfirmaCoreCiphersAOCipherConfig:(EsGobAfirmaCoreCiphersAOCipherConfig *)algorithmConfig;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreCiphersAOCipher)

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreCiphersAOCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_AOCipher")

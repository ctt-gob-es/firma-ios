//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/BEROctetStringGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BEROctetStringGenerator")
#ifdef RESTRICT_BEROctetStringGenerator
#define INCLUDE_ALL_BEROctetStringGenerator 0
#else
#define INCLUDE_ALL_BEROctetStringGenerator 1
#endif
#undef RESTRICT_BEROctetStringGenerator

#if !defined (OrgSpongycastleAsn1BEROctetStringGenerator_) && (INCLUDE_ALL_BEROctetStringGenerator || defined(INCLUDE_OrgSpongycastleAsn1BEROctetStringGenerator))
#define OrgSpongycastleAsn1BEROctetStringGenerator_

#define RESTRICT_BERGenerator 1
#define INCLUDE_OrgSpongycastleAsn1BERGenerator 1
#include "BERGenerator.h"

@class IOSByteArray;
@class JavaIoOutputStream;

/*!
 @brief A generator for indefinite-length OCTET STRINGs
 */
@interface OrgSpongycastleAsn1BEROctetStringGenerator : OrgSpongycastleAsn1BERGenerator

#pragma mark Public

/*!
 @brief Use the passed in stream as the target for the generator, writing out the header tag
  for a constructed OCTET STRING.
 @param outArg target stream
 @throw IOExceptionif the target stream cannot be written to.
 */
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

/*!
 @brief Use the passed in stream as the target for the generator, writing out the header tag
  for a tagged constructed OCTET STRING (possibly implicit).
 @param outArg target stream
 @param tagNo the tag number to introduce
 @param isExplicit true if this is an explicitly tagged object, false otherwise.
 @throw IOExceptionif the target stream cannot be written to.
 */
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                   withInt:(jint)tagNo
                               withBoolean:(jboolean)isExplicit;

/*!
 @brief Return a stream representing the content target for this OCTET STRING
 @return an OutputStream which chunks data in blocks of 1000 (CER limit).
 */
- (JavaIoOutputStream *)getOctetOutputStream;

/*!
 @brief Return a stream representing the content target for this OCTET STRING
 @param buf the buffer to use for chunking the data.
 @return an OutputStream which chunks data in blocks of buf length.
 */
- (JavaIoOutputStream *)getOctetOutputStreamWithByteArray:(IOSByteArray *)buf;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1BEROctetStringGenerator)

FOUNDATION_EXPORT void OrgSpongycastleAsn1BEROctetStringGenerator_initWithJavaIoOutputStream_(OrgSpongycastleAsn1BEROctetStringGenerator *self, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT OrgSpongycastleAsn1BEROctetStringGenerator *new_OrgSpongycastleAsn1BEROctetStringGenerator_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1BEROctetStringGenerator *create_OrgSpongycastleAsn1BEROctetStringGenerator_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg);

FOUNDATION_EXPORT void OrgSpongycastleAsn1BEROctetStringGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(OrgSpongycastleAsn1BEROctetStringGenerator *self, JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit);

FOUNDATION_EXPORT OrgSpongycastleAsn1BEROctetStringGenerator *new_OrgSpongycastleAsn1BEROctetStringGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1BEROctetStringGenerator *create_OrgSpongycastleAsn1BEROctetStringGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1BEROctetStringGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_BEROctetStringGenerator")

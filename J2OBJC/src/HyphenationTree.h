//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/hyphenation/HyphenationTree.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HyphenationTree")
#ifdef RESTRICT_HyphenationTree
#define INCLUDE_ALL_HyphenationTree 0
#else
#define INCLUDE_ALL_HyphenationTree 1
#endif
#undef RESTRICT_HyphenationTree

#if !defined (ComAowagieTextPdfHyphenationHyphenationTree_) && (INCLUDE_ALL_HyphenationTree || defined(INCLUDE_ComAowagieTextPdfHyphenationHyphenationTree))
#define ComAowagieTextPdfHyphenationHyphenationTree_

#define RESTRICT_TernaryTree 1
#define INCLUDE_ComAowagieTextPdfHyphenationTernaryTree 1
#include "TernaryTree.h"

#define RESTRICT_PatternConsumer 1
#define INCLUDE_ComAowagieTextPdfHyphenationPatternConsumer 1
#include "PatternConsumer.h"

@class ComAowagieTextPdfHyphenationHyphenation;
@class JavaIoInputStream;
@class JavaUtilArrayList;

/*!
 @brief This tree structure stores the hyphenation patterns in an efficient
  way for fast lookup.It provides the provides the method to
  hyphenate a word.
 @author Carlos Villegas (cav@@uniscope.co.jp)
 */
@interface ComAowagieTextPdfHyphenationHyphenationTree : ComAowagieTextPdfHyphenationTernaryTree < ComAowagieTextPdfHyphenationPatternConsumer >

#pragma mark Public

- (instancetype)initPackagePrivate;

/*!
 @brief Add a character class to the tree.It is used by 
 <code>SimplePatternParser</code> as callback to
  add character classes.
 Character classes define the
  valid word characters for hyphenation. If a word contains
  a character not defined in any of the classes, it is not hyphenated.
  It also defines a way to normalize the characters in order
  to compare them with the stored patterns. Usually pattern
  files use only lower case characters, in this case a class
  for letter 'a', for example, should be defined as "aA", the first
  character being the normalization char.
 */
- (void)addClassWithNSString:(NSString *)chargroup;

/*!
 @brief Add an exception to the tree.It is used by 
 <code>SimplePatternParser</code> class as callback to
  store the hyphenation exceptions.
 @param word normalized word
 @param hyphenatedword a vector of alternating strings and  
 <code>hyphen</code>  objects.
 */
- (void)addExceptionWithNSString:(NSString *)word
           withJavaUtilArrayList:(JavaUtilArrayList *)hyphenatedword;

/*!
 @brief Add a pattern to the tree.Mainly, to be used by 
 <code>SimplePatternParser</code> class as callback to
  add a pattern to the tree.
 @param pattern the hyphenation pattern
 @param ivalue interletter weight values indicating the  desirability and priority of hyphenating at a given point
   within the pattern. It should contain only digit characters.
   (i.e. '0' to '9').
 */
- (void)addPatternWithNSString:(NSString *)pattern
                  withNSString:(NSString *)ivalue;

- (void)printStats;

#pragma mark Package-Private

/*!
 @brief Hyphenate word and return a Hyphenation object.
 @param word the word to be hyphenated
 @param remainCharCount Minimum number of characters allowed  before the hyphenation point.
 @param pushCharCount Minimum number of characters allowed after  the hyphenation point.
 @return a <code>Hyphenation</code> object representing
  the hyphenated word or null if word is not hyphenated.
 */
- (ComAowagieTextPdfHyphenationHyphenation *)hyphenateWithNSString:(NSString *)word
                                                           withInt:(jint)remainCharCount
                                                           withInt:(jint)pushCharCount;

- (void)loadSimplePatternsWithJavaIoInputStream:(JavaIoInputStream *)stream;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfHyphenationHyphenationTree)

FOUNDATION_EXPORT void ComAowagieTextPdfHyphenationHyphenationTree_initPackagePrivate(ComAowagieTextPdfHyphenationHyphenationTree *self);

FOUNDATION_EXPORT ComAowagieTextPdfHyphenationHyphenationTree *new_ComAowagieTextPdfHyphenationHyphenationTree_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfHyphenationHyphenationTree *create_ComAowagieTextPdfHyphenationHyphenationTree_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfHyphenationHyphenationTree)

#endif

#pragma pop_macro("INCLUDE_ALL_HyphenationTree")

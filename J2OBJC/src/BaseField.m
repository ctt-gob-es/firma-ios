//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/BaseField.java
//

#include "BaseField.h"
#include "BaseFont.h"
#include "Color.h"
#include "Element.h"
#include "J2ObjC_source.h"
#include "PdfAppearance.h"
#include "PdfBorderDictionary.h"
#include "PdfCopyFieldsImp.h"
#include "PdfName.h"
#include "PdfWriter.h"
#include "Rectangle.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"

#if !__has_feature(objc_arc)
#error "BaseField must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfBaseField () {
 @public
  ComAowagieTextPdfBaseFont *font_;
}

+ (void)trimRightWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf;

- (void)drawTopFrameWithComAowagieTextPdfPdfAppearance:(ComAowagieTextPdfPdfAppearance *)app;

- (void)drawBottomFrameWithComAowagieTextPdfPdfAppearance:(ComAowagieTextPdfPdfAppearance *)app;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, font_, ComAowagieTextPdfBaseFont *)

/*!
 @brief A thin border with 1 point width.
 */
inline jfloat ComAowagieTextPdfBaseField_get_BORDER_WIDTH_THIN(void);
#define ComAowagieTextPdfBaseField_BORDER_WIDTH_THIN 1.0f
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, BORDER_WIDTH_THIN, jfloat)

inline JavaUtilHashMap *ComAowagieTextPdfBaseField_get_fieldKeys(void);
static JavaUtilHashMap *ComAowagieTextPdfBaseField_fieldKeys;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfBaseField, fieldKeys, JavaUtilHashMap *)

__attribute__((unused)) static void ComAowagieTextPdfBaseField_trimRightWithJavaLangStringBuffer_(JavaLangStringBuffer *buf);

__attribute__((unused)) static void ComAowagieTextPdfBaseField_drawTopFrameWithComAowagieTextPdfPdfAppearance_(ComAowagieTextPdfBaseField *self, ComAowagieTextPdfPdfAppearance *app);

__attribute__((unused)) static void ComAowagieTextPdfBaseField_drawBottomFrameWithComAowagieTextPdfPdfAppearance_(ComAowagieTextPdfBaseField *self, ComAowagieTextPdfPdfAppearance *app);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/BaseField.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfBaseField)


#line 63
@implementation ComAowagieTextPdfBaseField


#line 156
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                     withComAowagieTextRectangle:(ComAowagieTextRectangle *)box
                                                    withNSString:(NSString *)fieldName {
  ComAowagieTextPdfBaseField_initPackagePrivateWithComAowagieTextPdfPdfWriter_withComAowagieTextRectangle_withNSString_(self, writer, box, fieldName);
  return self;
}


#line 162
- (ComAowagieTextPdfBaseFont *)getRealFont {
  if (self->font_ == nil) {
    return ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(ComAowagieTextPdfBaseFont_HELVETICA, ComAowagieTextPdfBaseFont_WINANSI, false);
  }
  else {
    
#line 166
    return self->font_;
  }
}


#line 170
- (ComAowagieTextPdfPdfAppearance *)getBorderAppearance {
  ComAowagieTextPdfPdfAppearance *app = ComAowagieTextPdfPdfAppearance_createAppearanceWithComAowagieTextPdfPdfWriter_withFloat_withFloat_(self->writer_, [((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth], [((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight]);
  switch (self->rotation_) {
    case 90:
    [((ComAowagieTextPdfPdfAppearance *) nil_chk(app)) setMatrixWithFloat:0 withFloat:1 withFloat:-1 withFloat:0 withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] withFloat:0];
    break;
    case 180:
    [((ComAowagieTextPdfPdfAppearance *) nil_chk(app)) setMatrixWithFloat:-1 withFloat:0 withFloat:0 withFloat:-1 withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight]];
    break;
    case 270:
    [((ComAowagieTextPdfPdfAppearance *) nil_chk(app)) setMatrixWithFloat:0 withFloat:-1 withFloat:1 withFloat:0 withFloat:0 withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth]];
    break;
  }
  [((ComAowagieTextPdfPdfAppearance *) nil_chk(app)) saveState];
  
#line 185
  if (self->backgroundColor_ != nil) {
    [app setColorFillWithHarmonyJavaAwtColor:self->backgroundColor_];
    [app rectangleWithFloat:0 withFloat:0 withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight]];
    [app fill];
  }
  
#line 191
  if (self->borderStyle_ == ComAowagieTextPdfPdfBorderDictionary_STYLE_UNDERLINE) {
    if (self->borderWidth_ != 0 && self->borderColor_ != nil) {
      [app setColorStrokeWithHarmonyJavaAwtColor:self->borderColor_];
      [app setLineWidthWithFloat:self->borderWidth_];
      [app moveToWithFloat:0 withFloat:self->borderWidth_ / 2];
      [app lineToWithFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] withFloat:self->borderWidth_ / 2];
      [app stroke];
    }
  }
  else if (self->borderStyle_ == ComAowagieTextPdfPdfBorderDictionary_STYLE_BEVELED) {
    if (self->borderWidth_ != 0 && self->borderColor_ != nil) {
      [app setColorStrokeWithHarmonyJavaAwtColor:self->borderColor_];
      [app setLineWidthWithFloat:self->borderWidth_];
      [app rectangleWithFloat:self->borderWidth_ / 2 withFloat:self->borderWidth_ / 2 withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - self->borderWidth_];
      [app stroke];
    }
    
#line 208
    HarmonyJavaAwtColor *actual = self->backgroundColor_;
    if (actual == nil) {
      actual = JreLoadStatic(HarmonyJavaAwtColor, white);
    }
    [app setGrayFillWithFloat:1];
    ComAowagieTextPdfBaseField_drawTopFrameWithComAowagieTextPdfPdfAppearance_(self, app);
    [app setColorFillWithHarmonyJavaAwtColor:[((HarmonyJavaAwtColor *) nil_chk(actual)) darker]];
    ComAowagieTextPdfBaseField_drawBottomFrameWithComAowagieTextPdfPdfAppearance_(self, app);
  }
  else if (self->borderStyle_ == ComAowagieTextPdfPdfBorderDictionary_STYLE_INSET) {
    if (self->borderWidth_ != 0 && self->borderColor_ != nil) {
      [app setColorStrokeWithHarmonyJavaAwtColor:self->borderColor_];
      [app setLineWidthWithFloat:self->borderWidth_];
      [app rectangleWithFloat:self->borderWidth_ / 2 withFloat:self->borderWidth_ / 2 withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - self->borderWidth_];
      [app stroke];
    }
    
#line 225
    [app setGrayFillWithFloat:0.5f];
    ComAowagieTextPdfBaseField_drawTopFrameWithComAowagieTextPdfPdfAppearance_(self, app);
    [app setGrayFillWithFloat:0.75f];
    ComAowagieTextPdfBaseField_drawBottomFrameWithComAowagieTextPdfPdfAppearance_(self, app);
  }
  else {
    if (self->borderWidth_ != 0 && self->borderColor_ != nil) {
      if (self->borderStyle_ == ComAowagieTextPdfPdfBorderDictionary_STYLE_DASHED) {
        [app setLineDashWithFloat:3 withFloat:0];
      }
      [app setColorStrokeWithHarmonyJavaAwtColor:self->borderColor_];
      [app setLineWidthWithFloat:self->borderWidth_];
      [app rectangleWithFloat:self->borderWidth_ / 2 withFloat:self->borderWidth_ / 2 withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - self->borderWidth_];
      [app stroke];
      if ((self->options_ & ComAowagieTextPdfBaseField_COMB) != 0 && self->maxCharacterLength_ > 1) {
        jfloat step = [((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] / self->maxCharacterLength_;
        jfloat yb = self->borderWidth_ / 2;
        jfloat yt = [((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - self->borderWidth_ / 2;
        for (jint k = 1; k < self->maxCharacterLength_; ++k) {
          jfloat x = step * k;
          [app moveToWithFloat:x withFloat:yb];
          [app lineToWithFloat:x withFloat:yt];
        }
        [app stroke];
      }
    }
  }
  [app restoreState];
  return app;
}


#line 258
+ (void)trimRightWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf {
  ComAowagieTextPdfBaseField_trimRightWithJavaLangStringBuffer_(buf);
}


#line 273
- (void)drawTopFrameWithComAowagieTextPdfPdfAppearance:(ComAowagieTextPdfPdfAppearance *)app {
  ComAowagieTextPdfBaseField_drawTopFrameWithComAowagieTextPdfPdfAppearance_(self, app);
}


#line 284
- (void)drawBottomFrameWithComAowagieTextPdfPdfAppearance:(ComAowagieTextPdfPdfAppearance *)app {
  ComAowagieTextPdfBaseField_drawBottomFrameWithComAowagieTextPdfPdfAppearance_(self, app);
}


#line 297
- (jfloat)getBorderWidth {
  return self->borderWidth_;
}


#line 305
- (void)setBorderWidthWithFloat:(jfloat)borderWidth {
  self->borderWidth_ = borderWidth;
}


#line 312
- (jint)getBorderStyle {
  return self->borderStyle_;
}


#line 322
- (void)setBorderStyleWithInt:(jint)borderStyle {
  self->borderStyle_ = borderStyle;
}


#line 329
- (HarmonyJavaAwtColor *)getBorderColor {
  return self->borderColor_;
}


#line 337
- (void)setBorderColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColor {
  self->borderColor_ = borderColor;
}


#line 344
- (HarmonyJavaAwtColor *)getBackgroundColor {
  return self->backgroundColor_;
}


#line 352
- (void)setBackgroundColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)backgroundColor {
  self->backgroundColor_ = backgroundColor;
}


#line 359
- (HarmonyJavaAwtColor *)getTextColor {
  return self->textColor_;
}


#line 367
- (void)setTextColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)textColor {
  self->textColor_ = textColor;
}


#line 374
- (ComAowagieTextPdfBaseFont *)getFont {
  return self->font_;
}


#line 382
- (void)setFontWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)font {
  self->font_ = font;
}


#line 389
- (jfloat)getFontSize {
  return self->fontSize_;
}


#line 397
- (void)setFontSizeWithFloat:(jfloat)fontSize {
  self->fontSize_ = fontSize;
}


#line 404
- (jint)getAlignment {
  return self->alignment_;
}


#line 412
- (void)setAlignmentWithInt:(jint)alignment {
  self->alignment_ = alignment;
}


#line 419
- (NSString *)getText {
  return self->text_;
}


#line 426
- (void)setTextWithNSString:(NSString *)text {
  self->text_ = text;
}


#line 433
- (ComAowagieTextRectangle *)getBox {
  return self->box_;
}


#line 440
- (void)setBoxWithComAowagieTextRectangle:(ComAowagieTextRectangle *)box {
  if (box == nil) {
    self->box_ = nil;
  }
  else {
    self->box_ = new_ComAowagieTextRectangle_initWithComAowagieTextRectangle_(box);
    [self->box_ normalize];
  }
}


#line 453
- (jint)getRotation {
  return self->rotation_;
}


#line 461
- (void)setRotationWithInt:(jint)rotation {
  if (JreIntMod(rotation, 90) != 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Rotation must be a multiple of 90.");
  }
  rotation %= 360;
  if (rotation < 0) {
    rotation += 360;
  }
  self->rotation_ = rotation;
}


#line 476
- (void)setRotationFromPageWithComAowagieTextRectangle:(ComAowagieTextRectangle *)page {
  [self setRotationWithInt:[((ComAowagieTextRectangle *) nil_chk(page)) getRotation]];
}


#line 483
- (jint)getVisibility {
  return self->visibility_;
}


#line 492
- (void)setVisibilityWithInt:(jint)visibility {
  self->visibility_ = visibility;
}


#line 499
- (NSString *)getFieldName {
  return self->fieldName_;
}


#line 507
- (void)setFieldNameWithNSString:(NSString *)fieldName {
  self->fieldName_ = fieldName;
}


#line 514
- (jint)getOptions {
  return self->options_;
}


#line 525
- (void)setOptionsWithInt:(jint)options {
  self->options_ = options;
}


#line 532
- (jint)getMaxCharacterLength {
  return self->maxCharacterLength_;
}


#line 540
- (void)setMaxCharacterLengthWithInt:(jint)maxCharacterLength {
  self->maxCharacterLength_ = maxCharacterLength;
}


#line 548
- (ComAowagieTextPdfPdfWriter *)getWriter {
  return self->writer_;
}


#line 556
- (void)setWriterWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  self->writer_ = writer;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfBaseFont;", 0x4, -1, -1, 1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfAppearance;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 5, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 12, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 12, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfBaseFont;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextRectangle;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 20, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 10, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfWriter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 30, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfPdfWriter:withComAowagieTextRectangle:withNSString:);
  methods[1].selector = @selector(getRealFont);
  methods[2].selector = @selector(getBorderAppearance);
  methods[3].selector = @selector(trimRightWithJavaLangStringBuffer:);
  methods[4].selector = @selector(drawTopFrameWithComAowagieTextPdfPdfAppearance:);
  methods[5].selector = @selector(drawBottomFrameWithComAowagieTextPdfPdfAppearance:);
  methods[6].selector = @selector(getBorderWidth);
  methods[7].selector = @selector(setBorderWidthWithFloat:);
  methods[8].selector = @selector(getBorderStyle);
  methods[9].selector = @selector(setBorderStyleWithInt:);
  methods[10].selector = @selector(getBorderColor);
  methods[11].selector = @selector(setBorderColorWithHarmonyJavaAwtColor:);
  methods[12].selector = @selector(getBackgroundColor);
  methods[13].selector = @selector(setBackgroundColorWithHarmonyJavaAwtColor:);
  methods[14].selector = @selector(getTextColor);
  methods[15].selector = @selector(setTextColorWithHarmonyJavaAwtColor:);
  methods[16].selector = @selector(getFont);
  methods[17].selector = @selector(setFontWithComAowagieTextPdfBaseFont:);
  methods[18].selector = @selector(getFontSize);
  methods[19].selector = @selector(setFontSizeWithFloat:);
  methods[20].selector = @selector(getAlignment);
  methods[21].selector = @selector(setAlignmentWithInt:);
  methods[22].selector = @selector(getText);
  methods[23].selector = @selector(setTextWithNSString:);
  methods[24].selector = @selector(getBox);
  methods[25].selector = @selector(setBoxWithComAowagieTextRectangle:);
  methods[26].selector = @selector(getRotation);
  methods[27].selector = @selector(setRotationWithInt:);
  methods[28].selector = @selector(setRotationFromPageWithComAowagieTextRectangle:);
  methods[29].selector = @selector(getVisibility);
  methods[30].selector = @selector(setVisibilityWithInt:);
  methods[31].selector = @selector(getFieldName);
  methods[32].selector = @selector(setFieldNameWithNSString:);
  methods[33].selector = @selector(getOptions);
  methods[34].selector = @selector(setOptionsWithInt:);
  methods[35].selector = @selector(getMaxCharacterLength);
  methods[36].selector = @selector(setMaxCharacterLengthWithInt:);
  methods[37].selector = @selector(getWriter);
  methods[38].selector = @selector(setWriterWithComAowagieTextPdfPdfWriter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BORDER_WIDTH_THIN", "F", .constantValue.asFloat = ComAowagieTextPdfBaseField_BORDER_WIDTH_THIN, 0x1a, -1, -1, -1, -1 },
    { "VISIBLE", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_VISIBLE, 0x18, -1, -1, -1, -1 },
    { "HIDDEN", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_HIDDEN, 0x19, -1, -1, -1, -1 },
    { "VISIBLE_BUT_DOES_NOT_PRINT", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_VISIBLE_BUT_DOES_NOT_PRINT, 0x18, -1, -1, -1, -1 },
    { "HIDDEN_BUT_PRINTABLE", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_HIDDEN_BUT_PRINTABLE, 0x18, -1, -1, -1, -1 },
    { "READ_ONLY", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_READ_ONLY, 0x18, -1, -1, -1, -1 },
    { "REQUIRED", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_REQUIRED, 0x18, -1, -1, -1, -1 },
    { "MULTILINE", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_MULTILINE, 0x18, -1, -1, -1, -1 },
    { "DO_NOT_SCROLL", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_DO_NOT_SCROLL, 0x18, -1, -1, -1, -1 },
    { "PASSWORD", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_PASSWORD, 0x18, -1, -1, -1, -1 },
    { "FILE_SELECTION", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_FILE_SELECTION, 0x18, -1, -1, -1, -1 },
    { "DO_NOT_SPELL_CHECK", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_DO_NOT_SPELL_CHECK, 0x18, -1, -1, -1, -1 },
    { "EDIT", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_EDIT, 0x19, -1, -1, -1, -1 },
    { "COMB", "I", .constantValue.asInt = ComAowagieTextPdfBaseField_COMB, 0x19, -1, -1, -1, -1 },
    { "borderWidth_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "borderStyle_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "borderColor_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "backgroundColor_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "textColor_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "font_", "LComAowagieTextPdfBaseFont;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fontSize_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "alignment_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "writer_", "LComAowagieTextPdfPdfWriter;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "text_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "box_", "LComAowagieTextRectangle;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "rotation_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "visibility_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "fieldName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "options_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "maxCharacterLength_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "fieldKeys", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfWriter;LComAowagieTextRectangle;LNSString;", "LJavaIoIOException;LComAowagieTextDocumentException;", "trimRight", "LJavaLangStringBuffer;", "drawTopFrame", "LComAowagieTextPdfPdfAppearance;", "drawBottomFrame", "setBorderWidth", "F", "setBorderStyle", "I", "setBorderColor", "LHarmonyJavaAwtColor;", "setBackgroundColor", "setTextColor", "setFont", "LComAowagieTextPdfBaseFont;", "setFontSize", "setAlignment", "setText", "LNSString;", "setBox", "LComAowagieTextRectangle;", "setRotation", "setRotationFromPage", "setVisibility", "setFieldName", "setOptions", "setMaxCharacterLength", "setWriter", "LComAowagieTextPdfPdfWriter;", &ComAowagieTextPdfBaseField_fieldKeys };
  static const J2ObjcClassInfo _ComAowagieTextPdfBaseField = { "BaseField", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x400, 39, 31, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfBaseField;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfBaseField class]) {
    ComAowagieTextPdfBaseField_fieldKeys = new_JavaUtilLinkedHashMap_init();
    {
      
#line 147
      [ComAowagieTextPdfBaseField_fieldKeys putAllWithJavaUtilMap:JreLoadStatic(ComAowagieTextPdfPdfCopyFieldsImp, fieldKeys)];
      (void) [ComAowagieTextPdfBaseField_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, T) withId:new_JavaLangInteger_initWithInt_(1)];
    }
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfBaseField)
  }
}

@end


#line 156
void ComAowagieTextPdfBaseField_initPackagePrivateWithComAowagieTextPdfPdfWriter_withComAowagieTextRectangle_withNSString_(ComAowagieTextPdfBaseField *self, ComAowagieTextPdfPdfWriter *writer, ComAowagieTextRectangle *box, NSString *fieldName) {
  NSObject_init(self);
  self->borderWidth_ = ComAowagieTextPdfBaseField_BORDER_WIDTH_THIN;
  self->borderStyle_ =
#line 118
  ComAowagieTextPdfPdfBorderDictionary_STYLE_SOLID;
  self->fontSize_ =
#line 123
  0;
  self->alignment_ = ComAowagieTextElement_ALIGN_LEFT;
  self->rotation_ =
#line 130
  0;
  
#line 157
  self->writer_ = writer;
  [self setBoxWithComAowagieTextRectangle:box];
  self->fieldName_ = fieldName;
}


#line 258
void ComAowagieTextPdfBaseField_trimRightWithJavaLangStringBuffer_(JavaLangStringBuffer *buf) {
  ComAowagieTextPdfBaseField_initialize();
  
#line 259
  jint len = [((JavaLangStringBuffer *) nil_chk(buf)) java_length];
  while (true) {
    if (len == 0) {
      return;
    }
    if ([buf charAtWithInt:--len] != ' ') {
      return;
    }
    [buf setLengthWithInt:len];
  }
}


#line 273
void ComAowagieTextPdfBaseField_drawTopFrameWithComAowagieTextPdfPdfAppearance_(ComAowagieTextPdfBaseField *self, ComAowagieTextPdfPdfAppearance *app) {
  [((ComAowagieTextPdfPdfAppearance *) nil_chk(app)) moveToWithFloat:self->borderWidth_ withFloat:self->borderWidth_];
  [app lineToWithFloat:self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - self->borderWidth_];
  [app lineToWithFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - self->borderWidth_];
  [app lineToWithFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - 2 * self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - 2 * self->borderWidth_];
  [app lineToWithFloat:2 * self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - 2 * self->borderWidth_];
  [app lineToWithFloat:2 * self->borderWidth_ withFloat:2 * self->borderWidth_];
  [app lineToWithFloat:self->borderWidth_ withFloat:self->borderWidth_];
  [app fill];
}

void ComAowagieTextPdfBaseField_drawBottomFrameWithComAowagieTextPdfPdfAppearance_(ComAowagieTextPdfBaseField *self, ComAowagieTextPdfPdfAppearance *app) {
  [((ComAowagieTextPdfPdfAppearance *) nil_chk(app)) moveToWithFloat:self->borderWidth_ withFloat:self->borderWidth_];
  [app lineToWithFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - self->borderWidth_ withFloat:self->borderWidth_];
  [app lineToWithFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - self->borderWidth_];
  [app lineToWithFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - 2 * self->borderWidth_ withFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getHeight] - 2 * self->borderWidth_];
  [app lineToWithFloat:[((ComAowagieTextRectangle *) nil_chk(self->box_)) getWidth] - 2 * self->borderWidth_ withFloat:2 * self->borderWidth_];
  [app lineToWithFloat:2 * self->borderWidth_ withFloat:2 * self->borderWidth_];
  [app lineToWithFloat:self->borderWidth_ withFloat:self->borderWidth_];
  [app fill];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfBaseField)

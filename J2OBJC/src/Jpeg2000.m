//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/Jpeg2000.java
//

#include "Element.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "J2ObjC_source.h"
#include "Jpeg2000.h"
#include "Utilities.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/net/URL.h"

#if !__has_feature(objc_arc)
#error "Jpeg2000 must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextJpeg2000 () {
 @public
  JavaIoInputStream *inp_;
  jint boxLength_;
  jint boxType_;
}

- (jint)cio_readWithInt:(jint)n;

- (void)jp2_read_boxhdr;

/*!
 @brief This method checks if the image is a valid JPEG and processes some parameters.
 @throw IOExceptionon error
 */
- (void)processParameters;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextJpeg2000, inp_, JavaIoInputStream *)

inline jint ComAowagieTextJpeg2000_get_JP2_JP(void);
#define ComAowagieTextJpeg2000_JP2_JP 1783636000
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg2000, JP2_JP, jint)

inline jint ComAowagieTextJpeg2000_get_JP2_IHDR(void);
#define ComAowagieTextJpeg2000_JP2_IHDR 1768449138
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg2000, JP2_IHDR, jint)

inline jint ComAowagieTextJpeg2000_get_JP2_FTYP(void);
#define ComAowagieTextJpeg2000_JP2_FTYP 1718909296
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg2000, JP2_FTYP, jint)

inline jint ComAowagieTextJpeg2000_get_JP2_JP2H(void);
#define ComAowagieTextJpeg2000_JP2_JP2H 1785737832
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg2000, JP2_JP2H, jint)

inline jint ComAowagieTextJpeg2000_get_JP2_JP2C(void);
#define ComAowagieTextJpeg2000_JP2_JP2C 1785737827
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg2000, JP2_JP2C, jint)

__attribute__((unused)) static jint ComAowagieTextJpeg2000_cio_readWithInt_(ComAowagieTextJpeg2000 *self, jint n);

__attribute__((unused)) static void ComAowagieTextJpeg2000_jp2_read_boxhdr(ComAowagieTextJpeg2000 *self);

__attribute__((unused)) static void ComAowagieTextJpeg2000_processParameters(ComAowagieTextJpeg2000 *self);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/Jpeg2000.java"


#line 64
@implementation ComAowagieTextJpeg2000


#line 81
- (instancetype)initWithComAowagieTextImage:(ComAowagieTextImage *)image {
  ComAowagieTextJpeg2000_initWithComAowagieTextImage_(self, image);
  return self;
}


#line 92
- (instancetype)initWithJavaNetURL:(JavaNetURL *)url {
  ComAowagieTextJpeg2000_initWithJavaNetURL_(self, url);
  return self;
}


#line 105
- (instancetype)initWithByteArray:(IOSByteArray *)img {
  ComAowagieTextJpeg2000_initWithByteArray_(self, img);
  return self;
}


#line 112
- (jint)cio_readWithInt:(jint)n {
  return ComAowagieTextJpeg2000_cio_readWithInt_(self, n);
}


#line 120
- (void)jp2_read_boxhdr {
  ComAowagieTextJpeg2000_jp2_read_boxhdr(self);
}


#line 141
- (void)processParameters {
  ComAowagieTextJpeg2000_processParameters(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, 2, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextImage:);
  methods[1].selector = @selector(initWithJavaNetURL:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(cio_readWithInt:);
  methods[4].selector = @selector(jp2_read_boxhdr);
  methods[5].selector = @selector(processParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "JP2_JP", "I", .constantValue.asInt = ComAowagieTextJpeg2000_JP2_JP, 0x1a, -1, -1, -1, -1 },
    { "JP2_IHDR", "I", .constantValue.asInt = ComAowagieTextJpeg2000_JP2_IHDR, 0x1a, -1, -1, -1, -1 },
    { "JP2_FTYP", "I", .constantValue.asInt = ComAowagieTextJpeg2000_JP2_FTYP, 0x1a, -1, -1, -1, -1 },
    { "JP2_JP2H", "I", .constantValue.asInt = ComAowagieTextJpeg2000_JP2_JP2H, 0x1a, -1, -1, -1, -1 },
    { "JP2_JP2C", "I", .constantValue.asInt = ComAowagieTextJpeg2000_JP2_JP2C, 0x1a, -1, -1, -1, -1 },
    { "inp_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "boxLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "boxType_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextImage;", "LJavaNetURL;", "LComAowagieTextBadElementException;LJavaIoIOException;", "[B", "cio_read", "I", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _ComAowagieTextJpeg2000 = { "Jpeg2000", "com.aowagie.text", ptrTable, methods, fields, 7, 0x1, 6, 8, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextJpeg2000;
}

@end


#line 81
void ComAowagieTextJpeg2000_initWithComAowagieTextImage_(ComAowagieTextJpeg2000 *self, ComAowagieTextImage *image) {
  ComAowagieTextImage_initWithComAowagieTextImage_(self, image);
}


#line 81
ComAowagieTextJpeg2000 *new_ComAowagieTextJpeg2000_initWithComAowagieTextImage_(ComAowagieTextImage *image) {
  J2OBJC_NEW_IMPL(ComAowagieTextJpeg2000, initWithComAowagieTextImage_, image)
}


#line 81
ComAowagieTextJpeg2000 *create_ComAowagieTextJpeg2000_initWithComAowagieTextImage_(ComAowagieTextImage *image) {
  J2OBJC_CREATE_IMPL(ComAowagieTextJpeg2000, initWithComAowagieTextImage_, image)
}


#line 92
void ComAowagieTextJpeg2000_initWithJavaNetURL_(ComAowagieTextJpeg2000 *self, JavaNetURL *url) {
  ComAowagieTextImage_initWithJavaNetURL_(self, url);
  ComAowagieTextJpeg2000_processParameters(self);
}


#line 92
ComAowagieTextJpeg2000 *new_ComAowagieTextJpeg2000_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_NEW_IMPL(ComAowagieTextJpeg2000, initWithJavaNetURL_, url)
}


#line 92
ComAowagieTextJpeg2000 *create_ComAowagieTextJpeg2000_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_CREATE_IMPL(ComAowagieTextJpeg2000, initWithJavaNetURL_, url)
}


#line 105
void ComAowagieTextJpeg2000_initWithByteArray_(ComAowagieTextJpeg2000 *self, IOSByteArray *img) {
  ComAowagieTextImage_initWithJavaNetURL_(self, nil);
  self->rawData_ = img;
  self->originalData_ = img;
  ComAowagieTextJpeg2000_processParameters(self);
}


#line 105
ComAowagieTextJpeg2000 *new_ComAowagieTextJpeg2000_initWithByteArray_(IOSByteArray *img) {
  J2OBJC_NEW_IMPL(ComAowagieTextJpeg2000, initWithByteArray_, img)
}


#line 105
ComAowagieTextJpeg2000 *create_ComAowagieTextJpeg2000_initWithByteArray_(IOSByteArray *img) {
  J2OBJC_CREATE_IMPL(ComAowagieTextJpeg2000, initWithByteArray_, img)
}


#line 112
jint ComAowagieTextJpeg2000_cio_readWithInt_(ComAowagieTextJpeg2000 *self, jint n) {
  jint v = 0;
  for (jint i = n - 1; i >= 0; i--) {
    v += JreLShift32([((JavaIoInputStream *) nil_chk(self->inp_)) read], (JreLShift32(i, 3)));
  }
  return v;
}

void ComAowagieTextJpeg2000_jp2_read_boxhdr(ComAowagieTextJpeg2000 *self) {
  self->boxLength_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
  self->boxType_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
  if (self->boxLength_ == 1) {
    if (ComAowagieTextJpeg2000_cio_readWithInt_(self, 4) != 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"Cannot handle box sizes higher than 2^32");
    }
    self->boxLength_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
    if (self->boxLength_ == 0) {
      @throw new_JavaIoIOException_initWithNSString_(@"Unsupported box size == 0");
    }
  }
  else if (self->boxLength_ == 0) {
    @throw new_JavaIoIOException_initWithNSString_(@"Unsupported box size == 0");
  }
}


#line 141
void ComAowagieTextJpeg2000_processParameters(ComAowagieTextJpeg2000 *self) {
  self->type_ = ComAowagieTextElement_JPEG2000;
  self->originalType_ = ComAowagieTextImage_ORIGINAL_JPEG2000;
  self->inp_ = nil;
  @try {
    NSString *errorID;
    if (self->rawData_ == nil) {
      self->inp_ = [((JavaNetURL *) nil_chk(self->url_)) openStream];
      errorID = [((JavaNetURL *) nil_chk(self->url_)) description];
    }
    else {
      self->inp_ = new_JavaIoByteArrayInputStream_initWithByteArray_(self->rawData_);
      errorID = @"Byte array";
    }
    self->boxLength_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
    if (self->boxLength_ == (jint) 0x0000000c) {
      self->boxType_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
      if (ComAowagieTextJpeg2000_JP2_JP != self->boxType_) {
        @throw new_JavaIoIOException_initWithNSString_(@"Expected JP Marker");
      }
      if ((jint) 0x0d0a870a != ComAowagieTextJpeg2000_cio_readWithInt_(self, 4)) {
        @throw new_JavaIoIOException_initWithNSString_(@"Error with JP Marker");
      }
      
#line 165
      ComAowagieTextJpeg2000_jp2_read_boxhdr(self);
      if (ComAowagieTextJpeg2000_JP2_FTYP != self->boxType_) {
        @throw new_JavaIoIOException_initWithNSString_(@"Expected FTYP Marker");
      }
      ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->inp_, self->boxLength_ - 8);
      ComAowagieTextJpeg2000_jp2_read_boxhdr(self);
      do {
        if (ComAowagieTextJpeg2000_JP2_JP2H != self->boxType_) {
          if (self->boxType_ == ComAowagieTextJpeg2000_JP2_JP2C) {
            @throw new_JavaIoIOException_initWithNSString_(@"Expected JP2H Marker");
          }
          ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->inp_, self->boxLength_ - 8);
          ComAowagieTextJpeg2000_jp2_read_boxhdr(self);
        }
      }
      while (
#line 179
      ComAowagieTextJpeg2000_JP2_JP2H != self->boxType_);
      ComAowagieTextJpeg2000_jp2_read_boxhdr(self);
      if (ComAowagieTextJpeg2000_JP2_IHDR != self->boxType_) {
        @throw new_JavaIoIOException_initWithNSString_(@"Expected IHDR Marker");
      }
      self->scaledHeight_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
      [self setTopWithFloat:self->scaledHeight_];
      self->scaledWidth_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
      [self setRightWithFloat:self->scaledWidth_];
      self->bpc_ = -1;
    }
    else if (self->boxLength_ == (jint) 0xff4fff51) {
      ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->inp_, 4);
      jint x1 = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
      jint y1 = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
      jint x0 = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
      jint y0 = ComAowagieTextJpeg2000_cio_readWithInt_(self, 4);
      ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->inp_, 16);
      self->colorspace_ = ComAowagieTextJpeg2000_cio_readWithInt_(self, 2);
      self->bpc_ = 8;
      self->scaledHeight_ = y1 - y0;
      [self setTopWithFloat:self->scaledHeight_];
      self->scaledWidth_ = x1 - x0;
      [self setRightWithFloat:self->scaledWidth_];
    }
    else {
      @throw new_JavaIoIOException_initWithNSString_(@"Not a valid Jpeg2000 file");
    }
  }
  @finally {
    if (self->inp_ != nil) {
      @try {
        
#line 210
        [self->inp_ close];
      }
      @catch (
#line 210
      JavaLangException *e) {
      }
      
#line 211
      self->inp_ = nil;
    }
  }
  self->plainWidth_ = [self getWidth];
  self->plainHeight_ = [self getHeight];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextJpeg2000)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/NativeImageFormat.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Messages.h"
#include "NativeCMM.h"
#include "NativeImageFormat.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "NativeImageFormat must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComNativeImageFormat () {
 @public
  jint cmmFormat_;
  jint rows_;
  jint cols_;
  id imageData_;
  jint dataOffset_;
}

+ (jint)colorspaceShWithInt:(jint)s;

+ (jint)swapfirstShWithInt:(jint)s;

+ (jint)flavorShWithInt:(jint)s;

+ (jint)planarShWithInt:(jint)s;

+ (jint)endianShWithInt:(jint)s;

+ (jint)doswapShWithInt:(jint)s;

+ (jint)extraShWithInt:(jint)s;

+ (jint)channelsShWithInt:(jint)s;

+ (jint)bytesShWithInt:(jint)s;

@end

J2OBJC_FIELD_SETTER(ComNativeImageFormat, imageData_, id)

inline jint ComNativeImageFormat_get_PT_ANY(void);
#define ComNativeImageFormat_PT_ANY 0
J2OBJC_STATIC_FIELD_CONSTANT(ComNativeImageFormat, PT_ANY, jint)

inline jint ComNativeImageFormat_get_PT_GRAY(void);
#define ComNativeImageFormat_PT_GRAY 3
J2OBJC_STATIC_FIELD_CONSTANT(ComNativeImageFormat, PT_GRAY, jint)

inline jint ComNativeImageFormat_get_PT_RGB(void);
#define ComNativeImageFormat_PT_RGB 4
J2OBJC_STATIC_FIELD_CONSTANT(ComNativeImageFormat, PT_RGB, jint)

inline jint ComNativeImageFormat_get_INT_RGB_LCMS_FMT(void);
static jint ComNativeImageFormat_INT_RGB_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComNativeImageFormat, INT_RGB_LCMS_FMT, jint)

inline jint ComNativeImageFormat_get_INT_ARGB_LCMS_FMT(void);
static jint ComNativeImageFormat_INT_ARGB_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComNativeImageFormat, INT_ARGB_LCMS_FMT, jint)

inline jint ComNativeImageFormat_get_INT_BGR_LCMS_FMT(void);
static jint ComNativeImageFormat_INT_BGR_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComNativeImageFormat, INT_BGR_LCMS_FMT, jint)

inline jint ComNativeImageFormat_get_THREE_BYTE_BGR_LCMS_FMT(void);
static jint ComNativeImageFormat_THREE_BYTE_BGR_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComNativeImageFormat, THREE_BYTE_BGR_LCMS_FMT, jint)

inline jint ComNativeImageFormat_get_FOUR_BYTE_ABGR_LCMS_FMT(void);
static jint ComNativeImageFormat_FOUR_BYTE_ABGR_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComNativeImageFormat, FOUR_BYTE_ABGR_LCMS_FMT, jint)

inline jint ComNativeImageFormat_get_BYTE_GRAY_LCMS_FMT(void);
static jint ComNativeImageFormat_BYTE_GRAY_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComNativeImageFormat, BYTE_GRAY_LCMS_FMT, jint)

inline jint ComNativeImageFormat_get_USHORT_GRAY_LCMS_FMT(void);
static jint ComNativeImageFormat_USHORT_GRAY_LCMS_FMT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComNativeImageFormat, USHORT_GRAY_LCMS_FMT, jint)

inline jint ComNativeImageFormat_get_scanlineStride(void);
#define ComNativeImageFormat_scanlineStride -1
J2OBJC_STATIC_FIELD_CONSTANT(ComNativeImageFormat, scanlineStride, jint)

inline jint ComNativeImageFormat_get_alphaOffset(void);
#define ComNativeImageFormat_alphaOffset -1
J2OBJC_STATIC_FIELD_CONSTANT(ComNativeImageFormat, alphaOffset, jint)

__attribute__((unused)) static jint ComNativeImageFormat_colorspaceShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_swapfirstShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_flavorShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_planarShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_endianShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_doswapShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_extraShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_channelsShWithInt_(jint s);

__attribute__((unused)) static jint ComNativeImageFormat_bytesShWithInt_(jint s);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/NativeImageFormat.java"

J2OBJC_INITIALIZED_DEFN(ComNativeImageFormat)


#line 32
@implementation ComNativeImageFormat


#line 86
+ (jint)colorspaceShWithInt:(jint)s {
  return ComNativeImageFormat_colorspaceShWithInt_(s);
}

+ (jint)swapfirstShWithInt:(jint)s {
  return ComNativeImageFormat_swapfirstShWithInt_(s);
}

+ (jint)flavorShWithInt:(jint)s {
  return ComNativeImageFormat_flavorShWithInt_(s);
}

+ (jint)planarShWithInt:(jint)s {
  return ComNativeImageFormat_planarShWithInt_(s);
}

+ (jint)endianShWithInt:(jint)s {
  return ComNativeImageFormat_endianShWithInt_(s);
}

+ (jint)doswapShWithInt:(jint)s {
  return ComNativeImageFormat_doswapShWithInt_(s);
}

+ (jint)extraShWithInt:(jint)s {
  return ComNativeImageFormat_extraShWithInt_(s);
}

+ (jint)channelsShWithInt:(jint)s {
  return ComNativeImageFormat_channelsShWithInt_(s);
}

+ (jint)bytesShWithInt:(jint)s {
  return ComNativeImageFormat_bytesShWithInt_(s);
}


#line 127
- (id)getChannelData {
  return self->imageData_;
}

- (jint)getNumCols {
  return self->cols_;
}

- (jint)getNumRows {
  return self->rows_;
}


#line 140
- (instancetype)initPackagePrivate {
  ComNativeImageFormat_initPackagePrivate(self);
  return self;
}


#line 165
- (instancetype)initPackagePrivateWithId:(id)imgData
                                 withInt:(jint)nChannels
                                 withInt:(jint)nRows
                                 withInt:(jint)nCols {
  ComNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(self, imgData, nChannels, nRows, nCols);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 4, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 5, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 6, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 7, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 8, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 9, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(colorspaceShWithInt:);
  methods[1].selector = @selector(swapfirstShWithInt:);
  methods[2].selector = @selector(flavorShWithInt:);
  methods[3].selector = @selector(planarShWithInt:);
  methods[4].selector = @selector(endianShWithInt:);
  methods[5].selector = @selector(doswapShWithInt:);
  methods[6].selector = @selector(extraShWithInt:);
  methods[7].selector = @selector(channelsShWithInt:);
  methods[8].selector = @selector(bytesShWithInt:);
  methods[9].selector = @selector(getChannelData);
  methods[10].selector = @selector(getNumCols);
  methods[11].selector = @selector(getNumRows);
  methods[12].selector = @selector(initPackagePrivate);
  methods[13].selector = @selector(initPackagePrivateWithId:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PT_ANY", "I", .constantValue.asInt = ComNativeImageFormat_PT_ANY, 0x1a, -1, -1, -1, -1 },
    { "PT_GRAY", "I", .constantValue.asInt = ComNativeImageFormat_PT_GRAY, 0x1a, -1, -1, -1, -1 },
    { "PT_RGB", "I", .constantValue.asInt = ComNativeImageFormat_PT_RGB, 0x1a, -1, -1, -1, -1 },
    { "INT_RGB_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "INT_ARGB_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "INT_BGR_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "THREE_BYTE_BGR_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "FOUR_BYTE_ABGR_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "BYTE_GRAY_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "USHORT_GRAY_LCMS_FMT", "I", .constantValue.asLong = 0, 0x1a, -1, 17, -1, -1 },
    { "cmmFormat_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rows_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "cols_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "scanlineStride", "I", .constantValue.asInt = ComNativeImageFormat_scanlineStride, 0x12, 18, -1, -1, -1 },
    { "imageData_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dataOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "alphaOffset", "I", .constantValue.asInt = ComNativeImageFormat_alphaOffset, 0x12, 19, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "colorspaceSh", "I", "swapfirstSh", "flavorSh", "planarSh", "endianSh", "doswapSh", "extraSh", "channelsSh", "bytesSh", "LNSObject;III", &ComNativeImageFormat_INT_RGB_LCMS_FMT, &ComNativeImageFormat_INT_ARGB_LCMS_FMT, &ComNativeImageFormat_INT_BGR_LCMS_FMT, &ComNativeImageFormat_THREE_BYTE_BGR_LCMS_FMT, &ComNativeImageFormat_FOUR_BYTE_ABGR_LCMS_FMT, &ComNativeImageFormat_BYTE_GRAY_LCMS_FMT, &ComNativeImageFormat_USHORT_GRAY_LCMS_FMT, "scanlineStride", "alphaOffset" };
  static const J2ObjcClassInfo _ComNativeImageFormat = { "NativeImageFormat", "com", ptrTable, methods, fields, 7, 0x0, 14, 17, -1, -1, -1, -1, -1 };
  return &_ComNativeImageFormat;
}

+ (void)initialize {
  if (self == [ComNativeImageFormat class]) {
    ComNativeImageFormat_INT_RGB_LCMS_FMT =
#line 43
    ComNativeImageFormat_colorspaceShWithInt_(ComNativeImageFormat_PT_RGB) | ComNativeImageFormat_extraShWithInt_(1) | ComNativeImageFormat_channelsShWithInt_(3) | ComNativeImageFormat_bytesShWithInt_(1) | ComNativeImageFormat_doswapShWithInt_(
#line 44
    1) | ComNativeImageFormat_swapfirstShWithInt_(1);
    ComNativeImageFormat_INT_ARGB_LCMS_FMT =
#line 46
    ComNativeImageFormat_INT_RGB_LCMS_FMT;
    ComNativeImageFormat_INT_BGR_LCMS_FMT =
#line 48
    ComNativeImageFormat_colorspaceShWithInt_(ComNativeImageFormat_PT_RGB) | ComNativeImageFormat_extraShWithInt_(1) | ComNativeImageFormat_channelsShWithInt_(3) | ComNativeImageFormat_bytesShWithInt_(1);
    ComNativeImageFormat_THREE_BYTE_BGR_LCMS_FMT =
#line 50
    ComNativeImageFormat_colorspaceShWithInt_(ComNativeImageFormat_PT_RGB) | ComNativeImageFormat_channelsShWithInt_(3) | ComNativeImageFormat_bytesShWithInt_(1) | ComNativeImageFormat_doswapShWithInt_(1);
    ComNativeImageFormat_FOUR_BYTE_ABGR_LCMS_FMT =
#line 52
    ComNativeImageFormat_colorspaceShWithInt_(ComNativeImageFormat_PT_RGB) | ComNativeImageFormat_extraShWithInt_(1) | ComNativeImageFormat_channelsShWithInt_(3) | ComNativeImageFormat_bytesShWithInt_(1) | ComNativeImageFormat_doswapShWithInt_(
#line 53
    1);
    ComNativeImageFormat_BYTE_GRAY_LCMS_FMT =
#line 55
    ComNativeImageFormat_colorspaceShWithInt_(ComNativeImageFormat_PT_GRAY) | ComNativeImageFormat_channelsShWithInt_(1) | ComNativeImageFormat_bytesShWithInt_(1);
    ComNativeImageFormat_USHORT_GRAY_LCMS_FMT =
#line 57
    ComNativeImageFormat_colorspaceShWithInt_(ComNativeImageFormat_PT_GRAY) | ComNativeImageFormat_channelsShWithInt_(1) | ComNativeImageFormat_bytesShWithInt_(2);
    {
      
#line 79
      ComNativeCMM_loadCMM();
    }
    J2OBJC_SET_INITIALIZED(ComNativeImageFormat)
  }
}

@end


#line 86
jint ComNativeImageFormat_colorspaceShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 87
  return JreLShift32(s, 16);
}


#line 90
jint ComNativeImageFormat_swapfirstShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 91
  return JreLShift32(s, 14);
}


#line 94
jint ComNativeImageFormat_flavorShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 95
  return JreLShift32(s, 13);
}


#line 98
jint ComNativeImageFormat_planarShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 99
  return JreLShift32(s, 12);
}


#line 102
jint ComNativeImageFormat_endianShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 103
  return JreLShift32(s, 11);
}


#line 106
jint ComNativeImageFormat_doswapShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 107
  return JreLShift32(s, 10);
}


#line 110
jint ComNativeImageFormat_extraShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 111
  return JreLShift32(s, 7);
}


#line 114
jint ComNativeImageFormat_channelsShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 115
  return JreLShift32(s, 3);
}


#line 118
jint ComNativeImageFormat_bytesShWithInt_(jint s) {
  ComNativeImageFormat_initialize();
  
#line 119
  return s;
}


#line 140
void ComNativeImageFormat_initPackagePrivate(ComNativeImageFormat *self) {
  NSObject_init(self);
  self->cmmFormat_ =
#line 61
  0;
  self->rows_ =
#line 64
  0;
  self->cols_ = 0;
}


#line 140
ComNativeImageFormat *new_ComNativeImageFormat_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComNativeImageFormat, initPackagePrivate)
}


#line 140
ComNativeImageFormat *create_ComNativeImageFormat_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComNativeImageFormat, initPackagePrivate)
}


#line 165
void ComNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(ComNativeImageFormat *self, id imgData, jint nChannels, jint nRows, jint nCols) {
  NSObject_init(self);
  self->cmmFormat_ =
#line 61
  0;
  self->rows_ =
#line 64
  0;
  self->cols_ = 0;
  
#line 166
  if ([imgData isKindOfClass:[IOSShortArray class]]) {
    self->cmmFormat_ |= ComNativeImageFormat_bytesShWithInt_(2);
  }
  else
#line 168
  if ([imgData isKindOfClass:[IOSByteArray class]]) {
    self->cmmFormat_ |= ComNativeImageFormat_bytesShWithInt_(1);
  }
  else {
    
#line 173
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(ComMessages_getStringWithNSString_(@"awt.47"));
  }
  
#line 176
  self->cmmFormat_ |= ComNativeImageFormat_channelsShWithInt_(nChannels);
  
#line 178
  self->rows_ = nRows;
  self->cols_ = nCols;
  
#line 181
  self->imageData_ = imgData;
  
#line 183
  self->dataOffset_ = 0;
}


#line 165
ComNativeImageFormat *new_ComNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(id imgData, jint nChannels, jint nRows, jint nCols) {
  J2OBJC_NEW_IMPL(ComNativeImageFormat, initPackagePrivateWithId_withInt_withInt_withInt_, imgData, nChannels, nRows, nCols)
}


#line 165
ComNativeImageFormat *create_ComNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(id imgData, jint nChannels, jint nRows, jint nCols) {
  J2OBJC_CREATE_IMPL(ComNativeImageFormat, initPackagePrivateWithId_withInt_withInt_withInt_, imgData, nChannels, nRows, nCols)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComNativeImageFormat)

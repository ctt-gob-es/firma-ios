//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/harmony/java/awt/geom/CubicCurve2D.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CubicCurve2D")
#ifdef RESTRICT_CubicCurve2D
#define INCLUDE_ALL_CubicCurve2D 0
#else
#define INCLUDE_ALL_CubicCurve2D 1
#endif
#undef RESTRICT_CubicCurve2D
#ifdef INCLUDE_HarmonyJavaAwtGeomCubicCurve2D_Double
#define INCLUDE_HarmonyJavaAwtGeomCubicCurve2D 1
#endif
#ifdef INCLUDE_HarmonyJavaAwtGeomCubicCurve2D_Float
#define INCLUDE_HarmonyJavaAwtGeomCubicCurve2D 1
#endif

#if !defined (HarmonyJavaAwtGeomCubicCurve2D_) && (INCLUDE_ALL_CubicCurve2D || defined(INCLUDE_HarmonyJavaAwtGeomCubicCurve2D))
#define HarmonyJavaAwtGeomCubicCurve2D_

#define RESTRICT_Shape 1
#define INCLUDE_HarmonyJavaAwtShape 1
#include "Shape.h"

@class HarmonyJavaAwtAWTRectangle;
@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomPoint2D;
@class HarmonyJavaAwtGeomRectangle2D;
@class IOSDoubleArray;
@class IOSObjectArray;
@protocol HarmonyJavaAwtGeomPathIterator;

@interface HarmonyJavaAwtGeomCubicCurve2D : NSObject < HarmonyJavaAwtShape, NSCopying >

#pragma mark Public

- (id)java_clone;

- (jboolean)containsWithDouble:(jdouble)px
                    withDouble:(jdouble)py;

- (jboolean)containsWithDouble:(jdouble)rx
                    withDouble:(jdouble)ry
                    withDouble:(jdouble)rw
                    withDouble:(jdouble)rh;

- (jboolean)containsWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p;

- (jboolean)containsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (HarmonyJavaAwtAWTRectangle *)getBounds;

- (HarmonyJavaAwtGeomPoint2D *)getCtrlP1;

- (HarmonyJavaAwtGeomPoint2D *)getCtrlP2;

- (jdouble)getCtrlX1;

- (jdouble)getCtrlX2;

- (jdouble)getCtrlY1;

- (jdouble)getCtrlY2;

- (jdouble)getFlatness;

+ (jdouble)getFlatnessWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)ctrlx1
                      withDouble:(jdouble)ctrly1
                      withDouble:(jdouble)ctrlx2
                      withDouble:(jdouble)ctrly2
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2;

+ (jdouble)getFlatnessWithDoubleArray:(IOSDoubleArray *)coords
                              withInt:(jint)offset;

- (jdouble)getFlatnessSq;

+ (jdouble)getFlatnessSqWithDouble:(jdouble)x1
                        withDouble:(jdouble)y1
                        withDouble:(jdouble)ctrlx1
                        withDouble:(jdouble)ctrly1
                        withDouble:(jdouble)ctrlx2
                        withDouble:(jdouble)ctrly2
                        withDouble:(jdouble)x2
                        withDouble:(jdouble)y2;

+ (jdouble)getFlatnessSqWithDoubleArray:(IOSDoubleArray *)coords
                                withInt:(jint)offset;

- (HarmonyJavaAwtGeomPoint2D *)getP1;

- (HarmonyJavaAwtGeomPoint2D *)getP2;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at
                                                                                withDouble:(jdouble)flatness;

- (jdouble)getX1;

- (jdouble)getX2;

- (jdouble)getY1;

- (jdouble)getY2;

- (jboolean)intersectsWithDouble:(jdouble)rx
                      withDouble:(jdouble)ry
                      withDouble:(jdouble)rw
                      withDouble:(jdouble)rh;

- (jboolean)intersectsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (void)setCurveWithHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)curve;

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx1
                withDouble:(jdouble)ctrly1
                withDouble:(jdouble)ctrlx2
                withDouble:(jdouble)ctrly2
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2;

- (void)setCurveWithDoubleArray:(IOSDoubleArray *)coords
                        withInt:(jint)offset;

- (void)setCurveWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p1
                withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)cp1
                withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)cp2
                withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p2;

- (void)setCurveWithHarmonyJavaAwtGeomPoint2DArray:(IOSObjectArray *)points
                                           withInt:(jint)offset;

+ (jint)solveCubicWithDoubleArray:(IOSDoubleArray *)eqn;

+ (jint)solveCubicWithDoubleArray:(IOSDoubleArray *)eqn
                  withDoubleArray:(IOSDoubleArray *)res;

- (void)subdivideWithHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)left
                 withHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)right;

+ (void)subdivideWithHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)src
                 withHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)left
                 withHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)right;

+ (void)subdivideWithDoubleArray:(IOSDoubleArray *)src
                         withInt:(jint)srcOff
                 withDoubleArray:(IOSDoubleArray *)left
                         withInt:(jint)leftOff
                 withDoubleArray:(IOSDoubleArray *)right
                         withInt:(jint)rightOff;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomCubicCurve2D)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_init(HarmonyJavaAwtGeomCubicCurve2D *self);

FOUNDATION_EXPORT jdouble HarmonyJavaAwtGeomCubicCurve2D_getFlatnessSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx1, jdouble ctrly1, jdouble ctrlx2, jdouble ctrly2, jdouble x2, jdouble y2);

FOUNDATION_EXPORT jdouble HarmonyJavaAwtGeomCubicCurve2D_getFlatnessSqWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset);

FOUNDATION_EXPORT jdouble HarmonyJavaAwtGeomCubicCurve2D_getFlatnessWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx1, jdouble ctrly1, jdouble ctrlx2, jdouble ctrly2, jdouble x2, jdouble y2);

FOUNDATION_EXPORT jdouble HarmonyJavaAwtGeomCubicCurve2D_getFlatnessWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_subdivideWithHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomCubicCurve2D_(HarmonyJavaAwtGeomCubicCurve2D *src, HarmonyJavaAwtGeomCubicCurve2D *left, HarmonyJavaAwtGeomCubicCurve2D *right);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_subdivideWithDoubleArray_withInt_withDoubleArray_withInt_withDoubleArray_withInt_(IOSDoubleArray *src, jint srcOff, IOSDoubleArray *left, jint leftOff, IOSDoubleArray *right, jint rightOff);

FOUNDATION_EXPORT jint HarmonyJavaAwtGeomCubicCurve2D_solveCubicWithDoubleArray_(IOSDoubleArray *eqn);

FOUNDATION_EXPORT jint HarmonyJavaAwtGeomCubicCurve2D_solveCubicWithDoubleArray_withDoubleArray_(IOSDoubleArray *eqn, IOSDoubleArray *res);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomCubicCurve2D)

#endif

#if !defined (HarmonyJavaAwtGeomCubicCurve2D_Float_) && (INCLUDE_ALL_CubicCurve2D || defined(INCLUDE_HarmonyJavaAwtGeomCubicCurve2D_Float))
#define HarmonyJavaAwtGeomCubicCurve2D_Float_

@class HarmonyJavaAwtGeomPoint2D;
@class HarmonyJavaAwtGeomRectangle2D;

@interface HarmonyJavaAwtGeomCubicCurve2D_Float : HarmonyJavaAwtGeomCubicCurve2D {
 @public
  jfloat x1_;
  jfloat y1_;
  jfloat ctrlx1_;
  jfloat ctrly1_;
  jfloat ctrlx2_;
  jfloat ctrly2_;
  jfloat x2_;
  jfloat y2_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithFloat:(jfloat)x1
                    withFloat:(jfloat)y1
                    withFloat:(jfloat)ctrlx1
                    withFloat:(jfloat)ctrly1
                    withFloat:(jfloat)ctrlx2
                    withFloat:(jfloat)ctrly2
                    withFloat:(jfloat)x2
                    withFloat:(jfloat)y2;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (HarmonyJavaAwtGeomPoint2D *)getCtrlP1;

- (HarmonyJavaAwtGeomPoint2D *)getCtrlP2;

- (jdouble)getCtrlX1;

- (jdouble)getCtrlX2;

- (jdouble)getCtrlY1;

- (jdouble)getCtrlY2;

- (HarmonyJavaAwtGeomPoint2D *)getP1;

- (HarmonyJavaAwtGeomPoint2D *)getP2;

- (jdouble)getX1;

- (jdouble)getX2;

- (jdouble)getY1;

- (jdouble)getY2;

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx1
                withDouble:(jdouble)ctrly1
                withDouble:(jdouble)ctrlx2
                withDouble:(jdouble)ctrly2
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2;

- (void)setCurveWithFloat:(jfloat)x1
                withFloat:(jfloat)y1
                withFloat:(jfloat)ctrlx1
                withFloat:(jfloat)ctrly1
                withFloat:(jfloat)ctrlx2
                withFloat:(jfloat)ctrly2
                withFloat:(jfloat)x2
                withFloat:(jfloat)y2;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomCubicCurve2D_Float)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_Float_init(HarmonyJavaAwtGeomCubicCurve2D_Float *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Float *new_HarmonyJavaAwtGeomCubicCurve2D_Float_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Float *create_HarmonyJavaAwtGeomCubicCurve2D_Float_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(HarmonyJavaAwtGeomCubicCurve2D_Float *self, jfloat x1, jfloat y1, jfloat ctrlx1, jfloat ctrly1, jfloat ctrlx2, jfloat ctrly2, jfloat x2, jfloat y2);

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Float *new_HarmonyJavaAwtGeomCubicCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat ctrlx1, jfloat ctrly1, jfloat ctrlx2, jfloat ctrly2, jfloat x2, jfloat y2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Float *create_HarmonyJavaAwtGeomCubicCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat ctrlx1, jfloat ctrly1, jfloat ctrlx2, jfloat ctrly2, jfloat x2, jfloat y2);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomCubicCurve2D_Float)

#endif

#if !defined (HarmonyJavaAwtGeomCubicCurve2D_Double_) && (INCLUDE_ALL_CubicCurve2D || defined(INCLUDE_HarmonyJavaAwtGeomCubicCurve2D_Double))
#define HarmonyJavaAwtGeomCubicCurve2D_Double_

@class HarmonyJavaAwtGeomPoint2D;
@class HarmonyJavaAwtGeomRectangle2D;

@interface HarmonyJavaAwtGeomCubicCurve2D_Double : HarmonyJavaAwtGeomCubicCurve2D {
 @public
  jdouble x1_;
  jdouble y1_;
  jdouble ctrlx1_;
  jdouble ctrly1_;
  jdouble ctrlx2_;
  jdouble ctrly2_;
  jdouble x2_;
  jdouble y2_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1
                    withDouble:(jdouble)ctrlx1
                    withDouble:(jdouble)ctrly1
                    withDouble:(jdouble)ctrlx2
                    withDouble:(jdouble)ctrly2
                    withDouble:(jdouble)x2
                    withDouble:(jdouble)y2;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (HarmonyJavaAwtGeomPoint2D *)getCtrlP1;

- (HarmonyJavaAwtGeomPoint2D *)getCtrlP2;

- (jdouble)getCtrlX1;

- (jdouble)getCtrlX2;

- (jdouble)getCtrlY1;

- (jdouble)getCtrlY2;

- (HarmonyJavaAwtGeomPoint2D *)getP1;

- (HarmonyJavaAwtGeomPoint2D *)getP2;

- (jdouble)getX1;

- (jdouble)getX2;

- (jdouble)getY1;

- (jdouble)getY2;

- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx1
                withDouble:(jdouble)ctrly1
                withDouble:(jdouble)ctrlx2
                withDouble:(jdouble)ctrly2
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomCubicCurve2D_Double)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_Double_init(HarmonyJavaAwtGeomCubicCurve2D_Double *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Double *new_HarmonyJavaAwtGeomCubicCurve2D_Double_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Double *create_HarmonyJavaAwtGeomCubicCurve2D_Double_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(HarmonyJavaAwtGeomCubicCurve2D_Double *self, jdouble x1, jdouble y1, jdouble ctrlx1, jdouble ctrly1, jdouble ctrlx2, jdouble ctrly2, jdouble x2, jdouble y2);

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Double *new_HarmonyJavaAwtGeomCubicCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx1, jdouble ctrly1, jdouble ctrlx2, jdouble ctrly2, jdouble x2, jdouble y2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Double *create_HarmonyJavaAwtGeomCubicCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx1, jdouble ctrly1, jdouble ctrlx2, jdouble ctrly2, jdouble x2, jdouble y2);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomCubicCurve2D_Double)

#endif

#if !defined (HarmonyJavaAwtGeomCubicCurve2D_Iterator_) && (INCLUDE_ALL_CubicCurve2D || defined(INCLUDE_HarmonyJavaAwtGeomCubicCurve2D_Iterator))
#define HarmonyJavaAwtGeomCubicCurve2D_Iterator_

#define RESTRICT_PathIterator 1
#define INCLUDE_HarmonyJavaAwtGeomPathIterator 1
#include "PathIterator.h"

@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomCubicCurve2D;
@class IOSDoubleArray;
@class IOSFloatArray;

@interface HarmonyJavaAwtGeomCubicCurve2D_Iterator : NSObject < HarmonyJavaAwtGeomPathIterator > {
 @public
  /*!
   @brief The source CubicCurve2D object
   */
  HarmonyJavaAwtGeomCubicCurve2D *c_;
  /*!
   @brief The path iterator transformation
   */
  HarmonyJavaAwtGeomAffineTransform *t_;
  /*!
   @brief The current segmenet index
   */
  jint index_;
}

#pragma mark Public

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

#pragma mark Package-Private

/*!
 @brief Constructs a new CubicCurve2D.Iterator for given line and
  transformation
 @param c - the source CubicCurve2D object
 @param at - the AffineTransform object to apply rectangle path
 */
- (instancetype)initWithHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)outer$
                    withHarmonyJavaAwtGeomCubicCurve2D:(HarmonyJavaAwtGeomCubicCurve2D *)c
                 withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomCubicCurve2D_Iterator)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomCubicCurve2D_Iterator, c_, HarmonyJavaAwtGeomCubicCurve2D *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomCubicCurve2D_Iterator, t_, HarmonyJavaAwtGeomAffineTransform *)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomCubicCurve2D_Iterator_initWithHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomCubicCurve2D_Iterator *self, HarmonyJavaAwtGeomCubicCurve2D *outer$, HarmonyJavaAwtGeomCubicCurve2D *c, HarmonyJavaAwtGeomAffineTransform *t);

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Iterator *new_HarmonyJavaAwtGeomCubicCurve2D_Iterator_initWithHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomCubicCurve2D *outer$, HarmonyJavaAwtGeomCubicCurve2D *c, HarmonyJavaAwtGeomAffineTransform *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomCubicCurve2D_Iterator *create_HarmonyJavaAwtGeomCubicCurve2D_Iterator_initWithHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomCubicCurve2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomCubicCurve2D *outer$, HarmonyJavaAwtGeomCubicCurve2D *c, HarmonyJavaAwtGeomAffineTransform *t);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomCubicCurve2D_Iterator)

#endif

#pragma pop_macro("INCLUDE_ALL_CubicCurve2D")

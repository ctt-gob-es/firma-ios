//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jce/provider/X509CRLParser.java
//

#include "ASN1Encodable.h"
#include "ASN1InputStream.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1Set.h"
#include "ASN1TaggedObject.h"
#include "BCPEMUtil.h"
#include "BCSignedData.h"
#include "BCX509CRLObject.h"
#include "CertificateList.h"
#include "J2ObjC_source.h"
#include "PKCSObjectIdentifiers.h"
#include "StreamParsingException.h"
#include "X509CRLParser.h"
#include "X509StreamParserSpi.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/security/cert/CRL.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"

#if !__has_feature(objc_arc)
#error "X509CRLParser must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleJceProviderX509CRLParser () {
 @public
  OrgSpongycastleAsn1ASN1Set *sData_;
  jint sDataObjectCount_;
  JavaIoInputStream *currentStream_;
}

- (JavaSecurityCertCRL *)readDERCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (JavaSecurityCertCRL *)getCRL;

- (JavaSecurityCertCRL *)readPEMCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleJceProviderX509CRLParser, sData_, OrgSpongycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJceProviderX509CRLParser, currentStream_, JavaIoInputStream *)

inline OrgSpongycastleJceProviderBCPEMUtil *OrgSpongycastleJceProviderX509CRLParser_get_PEM_PARSER(void);
static OrgSpongycastleJceProviderBCPEMUtil *OrgSpongycastleJceProviderX509CRLParser_PEM_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJceProviderX509CRLParser, PEM_PARSER, OrgSpongycastleJceProviderBCPEMUtil *)

__attribute__((unused)) static JavaSecurityCertCRL *OrgSpongycastleJceProviderX509CRLParser_readDERCRLWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CRLParser *self, JavaIoInputStream *inArg);

__attribute__((unused)) static JavaSecurityCertCRL *OrgSpongycastleJceProviderX509CRLParser_getCRL(OrgSpongycastleJceProviderX509CRLParser *self);

__attribute__((unused)) static JavaSecurityCertCRL *OrgSpongycastleJceProviderX509CRLParser_readPEMCRLWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CRLParser *self, JavaIoInputStream *inArg);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jce/provider/X509CRLParser.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleJceProviderX509CRLParser)


#line 23
@implementation OrgSpongycastleJceProviderX509CRLParser

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 23
- (instancetype)init {
  OrgSpongycastleJceProviderX509CRLParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 32
- (JavaSecurityCertCRL *)readDERCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgSpongycastleJceProviderX509CRLParser_readDERCRLWithJavaIoInputStream_(self, inArg);
}


#line 54
- (JavaSecurityCertCRL *)getCRL {
  return OrgSpongycastleJceProviderX509CRLParser_getCRL(self);
}


#line 67
- (JavaSecurityCertCRL *)readPEMCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgSpongycastleJceProviderX509CRLParser_readPEMCRLWithJavaIoInputStream_(self, inArg);
}


#line 81
- (void)engineInitWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  
#line 83
  currentStream_ = inArg;
  sData_ = nil;
  sDataObjectCount_ = 0;
  
#line 87
  if (![((JavaIoInputStream *) nil_chk(currentStream_)) markSupported]) {
    
#line 89
    currentStream_ = new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(currentStream_);
  }
}


#line 93
- (id)engineRead {
  
#line 96
  @try {
    
#line 98
    if (sData_ != nil) {
      
#line 100
      if (sDataObjectCount_ != [sData_ size]) {
        
#line 102
        return OrgSpongycastleJceProviderX509CRLParser_getCRL(self);
      }
      else {
        
#line 106
        sData_ = nil;
        sDataObjectCount_ = 0;
        return nil;
      }
    }
    
#line 112
    [((JavaIoInputStream *) nil_chk(currentStream_)) markWithInt:10];
    jint tag = [((JavaIoInputStream *) nil_chk(currentStream_)) read];
    
#line 115
    if (tag == -1) {
      
#line 117
      return nil;
    }
    
#line 120
    if (tag != (jint) 0x30) {
      
#line 122
      [((JavaIoInputStream *) nil_chk(currentStream_)) reset];
      return OrgSpongycastleJceProviderX509CRLParser_readPEMCRLWithJavaIoInputStream_(self, currentStream_);
    }
    else {
      
#line 127
      [((JavaIoInputStream *) nil_chk(currentStream_)) reset];
      return OrgSpongycastleJceProviderX509CRLParser_readDERCRLWithJavaIoInputStream_(self, currentStream_);
    }
  }
  @catch (JavaLangException *e) {
    
#line 133
    @throw new_OrgSpongycastleX509UtilStreamParsingException_initWithNSString_withJavaLangThrowable_([e description], e);
  }
}


#line 137
- (id<JavaUtilCollection>)engineReadAll {
  
#line 140
  JavaSecurityCertCRL *crl;
  id<JavaUtilList> certs = new_JavaUtilArrayList_init();
  
#line 143
  while ((crl = (JavaSecurityCertCRL *) cast_chk([self engineRead], [JavaSecurityCertCRL class])) != nil) {
    
#line 145
    [certs addWithId:crl];
  }
  
#line 148
  return certs;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x2, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x2, 4, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readDERCRLWithJavaIoInputStream:);
  methods[2].selector = @selector(getCRL);
  methods[3].selector = @selector(readPEMCRLWithJavaIoInputStream:);
  methods[4].selector = @selector(engineInitWithJavaIoInputStream:);
  methods[5].selector = @selector(engineRead);
  methods[6].selector = @selector(engineReadAll);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PEM_PARSER", "LOrgSpongycastleJceProviderBCPEMUtil;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "sData_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sDataObjectCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "readDERCRL", "LJavaIoInputStream;", "LJavaIoIOException;LJavaSecurityCertCRLException;", "LJavaSecurityCertCRLException;", "readPEMCRL", "engineInit", "LOrgSpongycastleX509UtilStreamParsingException;", &OrgSpongycastleJceProviderX509CRLParser_PEM_PARSER };
  static const J2ObjcClassInfo _OrgSpongycastleJceProviderX509CRLParser = { "X509CRLParser", "org.spongycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJceProviderX509CRLParser;
}

+ (void)initialize {
  if (self == [OrgSpongycastleJceProviderX509CRLParser class]) {
    OrgSpongycastleJceProviderX509CRLParser_PEM_PARSER = new_OrgSpongycastleJceProviderBCPEMUtil_initWithNSString_(
#line 26
    @"CRL");
    J2OBJC_SET_INITIALIZED(OrgSpongycastleJceProviderX509CRLParser)
  }
}

@end


#line 23
void OrgSpongycastleJceProviderX509CRLParser_init(OrgSpongycastleJceProviderX509CRLParser *self) {
  OrgSpongycastleX509X509StreamParserSpi_init(self);
  self->sData_ =
#line 28
  nil;
  self->sDataObjectCount_ = 0;
  self->currentStream_ = nil;
}


#line 23
OrgSpongycastleJceProviderX509CRLParser *new_OrgSpongycastleJceProviderX509CRLParser_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleJceProviderX509CRLParser, init)
}


#line 23
OrgSpongycastleJceProviderX509CRLParser *create_OrgSpongycastleJceProviderX509CRLParser_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJceProviderX509CRLParser, init)
}


#line 32
JavaSecurityCertCRL *OrgSpongycastleJceProviderX509CRLParser_readDERCRLWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CRLParser *self, JavaIoInputStream *inArg) {
  
#line 36
  OrgSpongycastleAsn1ASN1InputStream *dIn = new_OrgSpongycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(inArg);
  OrgSpongycastleAsn1ASN1Sequence *seq = (OrgSpongycastleAsn1ASN1Sequence *) cast_chk([dIn readObject], [OrgSpongycastleAsn1ASN1Sequence class]);
  
#line 39
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] > 1 &&
#line 40
  [[seq getObjectAtWithInt:0] isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 42
    if ([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:0])) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, signedData)]) {
      
#line 44
      self->sData_ = [new_OrgSpongycastleAsn1PkcsBCSignedData_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(
#line 45
      (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:1], [OrgSpongycastleAsn1ASN1TaggedObject class]), true)) getCRLs];
      
#line 47
      return OrgSpongycastleJceProviderX509CRLParser_getCRL(self);
    }
  }
  
#line 51
  return new_OrgSpongycastleJceProviderBCX509CRLObject_initWithOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(seq));
}


#line 54
JavaSecurityCertCRL *OrgSpongycastleJceProviderX509CRLParser_getCRL(OrgSpongycastleJceProviderX509CRLParser *self) {
  
#line 57
  if (self->sData_ == nil || self->sDataObjectCount_ >= [self->sData_ size]) {
    
#line 59
    return nil;
  }
  
#line 62
  return new_OrgSpongycastleJceProviderBCX509CRLObject_initWithOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(
#line 64
  [self->sData_ getObjectAtWithInt:self->sDataObjectCount_++]));
}


#line 67
JavaSecurityCertCRL *OrgSpongycastleJceProviderX509CRLParser_readPEMCRLWithJavaIoInputStream_(OrgSpongycastleJceProviderX509CRLParser *self, JavaIoInputStream *inArg) {
  
#line 71
  OrgSpongycastleAsn1ASN1Sequence *seq = [((OrgSpongycastleJceProviderBCPEMUtil *) nil_chk(OrgSpongycastleJceProviderX509CRLParser_PEM_PARSER)) readPEMObjectWithJavaIoInputStream:inArg];
  
#line 73
  if (seq != nil) {
    
#line 75
    return new_OrgSpongycastleJceProviderBCX509CRLObject_initWithOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(seq));
  }
  
#line 78
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJceProviderX509CRLParser)

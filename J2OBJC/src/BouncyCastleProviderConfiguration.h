//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jce/provider/BouncyCastleProviderConfiguration.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_BouncyCastleProviderConfiguration")
#ifdef RESTRICT_BouncyCastleProviderConfiguration
#define INCLUDE_ALL_BouncyCastleProviderConfiguration 0
#else
#define INCLUDE_ALL_BouncyCastleProviderConfiguration 1
#endif
#undef RESTRICT_BouncyCastleProviderConfiguration

#if !defined (OrgSpongycastleJceProviderBouncyCastleProviderConfiguration_) && (INCLUDE_ALL_BouncyCastleProviderConfiguration || defined(INCLUDE_OrgSpongycastleJceProviderBouncyCastleProviderConfiguration))
#define OrgSpongycastleJceProviderBouncyCastleProviderConfiguration_

#define RESTRICT_ProviderConfiguration 1
#define INCLUDE_OrgSpongycastleJcajceProviderConfigProviderConfiguration 1
#include "ProviderConfiguration.h"

@class JavaxCryptoSpecDHParameterSpec;
@class OrgSpongycastleJceSpecECParameterSpec;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgSpongycastleJceProviderBouncyCastleProviderConfiguration : NSObject < OrgSpongycastleJcajceProviderConfigProviderConfiguration >

#pragma mark Public

- (id<JavaUtilSet>)getAcceptableNamedCurves;

- (id<JavaUtilMap>)getAdditionalECParameters;

- (JavaxCryptoSpecDHParameterSpec *)getDHDefaultParametersWithInt:(jint)keySize;

- (OrgSpongycastleJceSpecECParameterSpec *)getEcImplicitlyCa;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

- (void)setParameterWithNSString:(NSString *)parameterName
                          withId:(id)parameter;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleJceProviderBouncyCastleProviderConfiguration)

FOUNDATION_EXPORT void OrgSpongycastleJceProviderBouncyCastleProviderConfiguration_initPackagePrivate(OrgSpongycastleJceProviderBouncyCastleProviderConfiguration *self);

FOUNDATION_EXPORT OrgSpongycastleJceProviderBouncyCastleProviderConfiguration *new_OrgSpongycastleJceProviderBouncyCastleProviderConfiguration_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceProviderBouncyCastleProviderConfiguration *create_OrgSpongycastleJceProviderBouncyCastleProviderConfiguration_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJceProviderBouncyCastleProviderConfiguration)

#endif

#pragma pop_macro("INCLUDE_ALL_BouncyCastleProviderConfiguration")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jce/exception/ExtCertPathValidatorException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ExtCertPathValidatorException")
#ifdef RESTRICT_ExtCertPathValidatorException
#define INCLUDE_ALL_ExtCertPathValidatorException 0
#else
#define INCLUDE_ALL_ExtCertPathValidatorException 1
#endif
#undef RESTRICT_ExtCertPathValidatorException

#if !defined (OrgSpongycastleJceExceptionExtCertPathValidatorException_) && (INCLUDE_ALL_ExtCertPathValidatorException || defined(INCLUDE_OrgSpongycastleJceExceptionExtCertPathValidatorException))
#define OrgSpongycastleJceExceptionExtCertPathValidatorException_

#define RESTRICT_JavaSecurityCertCertPathValidatorException 1
#define INCLUDE_JavaSecurityCertCertPathValidatorException 1
#include "java/security/cert/CertPathValidatorException.h"

#define RESTRICT_ExtException 1
#define INCLUDE_OrgSpongycastleJceExceptionExtException 1
#include "ExtException.h"

@class JavaLangThrowable;
@class JavaSecurityCertCertPath;
@protocol JavaSecurityCertCertPathValidatorException_Reason;

@interface OrgSpongycastleJceExceptionExtCertPathValidatorException : JavaSecurityCertCertPathValidatorException < OrgSpongycastleJceExceptionExtException >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause
    withJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)certPath
                         withInt:(jint)index;

- (JavaLangThrowable *)getCause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
    withJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)arg2
                         withInt:(jint)arg3
withJavaSecurityCertCertPathValidatorException_Reason:(id<JavaSecurityCertCertPathValidatorException_Reason>)arg4 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJceExceptionExtCertPathValidatorException)

FOUNDATION_EXPORT void OrgSpongycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_(OrgSpongycastleJceExceptionExtCertPathValidatorException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgSpongycastleJceExceptionExtCertPathValidatorException *new_OrgSpongycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceExceptionExtCertPathValidatorException *create_OrgSpongycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT void OrgSpongycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_withJavaSecurityCertCertPath_withInt_(OrgSpongycastleJceExceptionExtCertPathValidatorException *self, NSString *msg, JavaLangThrowable *cause, JavaSecurityCertCertPath *certPath, jint index);

FOUNDATION_EXPORT OrgSpongycastleJceExceptionExtCertPathValidatorException *new_OrgSpongycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_withJavaSecurityCertCertPath_withInt_(NSString *msg, JavaLangThrowable *cause, JavaSecurityCertCertPath *certPath, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceExceptionExtCertPathValidatorException *create_OrgSpongycastleJceExceptionExtCertPathValidatorException_initWithNSString_withJavaLangThrowable_withJavaSecurityCertCertPath_withInt_(NSString *msg, JavaLangThrowable *cause, JavaSecurityCertCertPath *certPath, jint index);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJceExceptionExtCertPathValidatorException)

#endif

#pragma pop_macro("INCLUDE_ALL_ExtCertPathValidatorException")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ocsp/CertStatus.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CertStatus")
#ifdef RESTRICT_CertStatus
#define INCLUDE_ALL_CertStatus 0
#else
#define INCLUDE_ALL_CertStatus 1
#endif
#undef RESTRICT_CertStatus

#if !defined (OrgSpongycastleAsn1OcspCertStatus_) && (INCLUDE_ALL_CertStatus || defined(INCLUDE_OrgSpongycastleAsn1OcspCertStatus))
#define OrgSpongycastleAsn1OcspCertStatus_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

#define RESTRICT_ASN1Choice 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Choice 1
#include "ASN1Choice.h"

@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1OcspRevokedInfo;
@protocol OrgSpongycastleAsn1ASN1Encodable;

@interface OrgSpongycastleAsn1OcspCertStatus : OrgSpongycastleAsn1ASN1Object < OrgSpongycastleAsn1ASN1Choice >

#pragma mark Public

/*!
 @brief create a CertStatus object with a tag of zero.
 */
- (instancetype)init;

- (instancetype)initWithInt:(jint)tagNo
withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)value;

- (instancetype)initWithOrgSpongycastleAsn1OcspRevokedInfo:(OrgSpongycastleAsn1OcspRevokedInfo *)info;

+ (OrgSpongycastleAsn1OcspCertStatus *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                              withBoolean:(jboolean)explicit_;

+ (OrgSpongycastleAsn1OcspCertStatus *)getInstanceWithId:(id)obj;

- (id<OrgSpongycastleAsn1ASN1Encodable>)getStatus;

- (jint)getTagNo;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

   CertStatus ::= CHOICE {
                   good        [0]     IMPLICIT NULL,
                   revoked     [1]     IMPLICIT RevokedInfo,
                   unknown     [2]     IMPLICIT UnknownInfo } 
  
@endcode
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1OcspCertStatus)

FOUNDATION_EXPORT void OrgSpongycastleAsn1OcspCertStatus_init(OrgSpongycastleAsn1OcspCertStatus *self);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *new_OrgSpongycastleAsn1OcspCertStatus_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *create_OrgSpongycastleAsn1OcspCertStatus_init(void);

FOUNDATION_EXPORT void OrgSpongycastleAsn1OcspCertStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(OrgSpongycastleAsn1OcspCertStatus *self, OrgSpongycastleAsn1OcspRevokedInfo *info);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *new_OrgSpongycastleAsn1OcspCertStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(OrgSpongycastleAsn1OcspRevokedInfo *info) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *create_OrgSpongycastleAsn1OcspCertStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(OrgSpongycastleAsn1OcspRevokedInfo *info);

FOUNDATION_EXPORT void OrgSpongycastleAsn1OcspCertStatus_initWithInt_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1OcspCertStatus *self, jint tagNo, id<OrgSpongycastleAsn1ASN1Encodable> value);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *new_OrgSpongycastleAsn1OcspCertStatus_initWithInt_withOrgSpongycastleAsn1ASN1Encodable_(jint tagNo, id<OrgSpongycastleAsn1ASN1Encodable> value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *create_OrgSpongycastleAsn1OcspCertStatus_initWithInt_withOrgSpongycastleAsn1ASN1Encodable_(jint tagNo, id<OrgSpongycastleAsn1ASN1Encodable> value);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *OrgSpongycastleAsn1OcspCertStatus_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgSpongycastleAsn1OcspCertStatus *OrgSpongycastleAsn1OcspCertStatus_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1OcspCertStatus)

#endif

#pragma pop_macro("INCLUDE_ALL_CertStatus")

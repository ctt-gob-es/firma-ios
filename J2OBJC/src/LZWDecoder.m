//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/LZWDecoder.java
//

#include "ExceptionConverter.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "LZWDecoder.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"

#if !__has_feature(objc_arc)
#error "LZWDecoder must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfLZWDecoder () {
 @public
  IOSObjectArray *stringTable_;
  IOSByteArray *data_;
  JavaIoOutputStream *uncompData_;
  jint tableIndex_;
  jint bitsToGet_;
  jint bytePointer_;
  jint bitPointer_;
  jint nextData_;
  jint nextBits_;
  IOSIntArray *andTable_;
}

/*!
 @brief Initialize the string table.
 */
- (void)initializeStringTable OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Write out the string just uncompressed.
 @param string String
 */
- (void)writeStringWithByteArray:(IOSByteArray *)string;

/*!
 @brief Add a new string to the string table.
 @param oldString Old string
 @param newString New string
 */
- (void)addStringToTableWithByteArray:(IOSByteArray *)oldString
                             withByte:(jbyte)newString;

/*!
 @brief Add a new string to the string table.
 @param string String
 */
- (void)addStringToTableWithByteArray:(IOSByteArray *)string;

/*!
 @brief Append <code>newString</code> to the end of <code>oldString</code>.
 @param oldString Old string
 @param newString New string
 @return String
 */
- (IOSByteArray *)composeStringWithByteArray:(IOSByteArray *)oldString
                                    withByte:(jbyte)newString;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfLZWDecoder, stringTable_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfLZWDecoder, data_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfLZWDecoder, uncompData_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfLZWDecoder, andTable_, IOSIntArray *)

__attribute__((unused)) static void ComAowagieTextPdfLZWDecoder_initializeStringTable(ComAowagieTextPdfLZWDecoder *self);

__attribute__((unused)) static void ComAowagieTextPdfLZWDecoder_writeStringWithByteArray_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *string);

__attribute__((unused)) static void ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_withByte_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *oldString, jbyte newString);

__attribute__((unused)) static void ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *string);

__attribute__((unused)) static IOSByteArray *ComAowagieTextPdfLZWDecoder_composeStringWithByteArray_withByte_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *oldString, jbyte newString);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/LZWDecoder.java"


#line 56
@implementation ComAowagieTextPdfLZWDecoder


#line 73
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfLZWDecoder_initPackagePrivate(self);
  return self;
}


#line 82
- (void)decodeWithByteArray:(IOSByteArray *)data
     withJavaIoOutputStream:(JavaIoOutputStream *)uncompData {
  if (IOSByteArray_Get(nil_chk(data), 0) == (jbyte) (jint) 0x00 && IOSByteArray_Get(data, 1) == (jbyte) (jint) 0x01) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"LZW flavour not supported.");
  }
  
#line 88
  ComAowagieTextPdfLZWDecoder_initializeStringTable(self);
  
#line 90
  self->data_ = data;
  self->uncompData_ = uncompData;
  
#line 94
  self->bytePointer_ = 0;
  self->bitPointer_ = 0;
  
#line 97
  self->nextData_ = 0;
  self->nextBits_ = 0;
  
#line 100
  jint code;
  
#line 100
  jint oldCode = 0;
  IOSByteArray *string;
  
#line 103
  while ((code = [self getNextCode]) != 257) {
    
#line 105
    if (code == 256) {
      
#line 107
      ComAowagieTextPdfLZWDecoder_initializeStringTable(self);
      code = [self getNextCode];
      
#line 110
      if (code == 257) {
        break;
      }
      
#line 114
      ComAowagieTextPdfLZWDecoder_writeStringWithByteArray_(self, IOSObjectArray_Get(nil_chk(self->stringTable_), code));
      oldCode = code;
    }
    else {
      
#line 119
      if (code < self->tableIndex_) {
        
#line 121
        string = IOSObjectArray_Get(nil_chk(self->stringTable_), code);
        
#line 123
        ComAowagieTextPdfLZWDecoder_writeStringWithByteArray_(self, string);
        ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_withByte_(self, IOSObjectArray_Get(nil_chk(self->stringTable_), oldCode), IOSByteArray_Get(nil_chk(string), 0));
        oldCode = code;
      }
      else {
        
#line 129
        string = IOSObjectArray_Get(nil_chk(self->stringTable_), oldCode);
        string = ComAowagieTextPdfLZWDecoder_composeStringWithByteArray_withByte_(self, string, IOSByteArray_Get(nil_chk(string), 0));
        ComAowagieTextPdfLZWDecoder_writeStringWithByteArray_(self, string);
        ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_(self, string);
        oldCode = code;
      }
    }
  }
}


#line 143
- (void)initializeStringTable {
  ComAowagieTextPdfLZWDecoder_initializeStringTable(self);
}


#line 160
- (void)writeStringWithByteArray:(IOSByteArray *)string {
  ComAowagieTextPdfLZWDecoder_writeStringWithByteArray_(self, string);
}


#line 174
- (void)addStringToTableWithByteArray:(IOSByteArray *)oldString
                             withByte:(jbyte)newString {
  ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_withByte_(self, oldString, newString);
}


#line 196
- (void)addStringToTableWithByteArray:(IOSByteArray *)string {
  ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_(self, string);
}


#line 216
- (IOSByteArray *)composeStringWithByteArray:(IOSByteArray *)oldString
                                    withByte:(jbyte)newString {
  return ComAowagieTextPdfLZWDecoder_composeStringWithByteArray_withByte_(self, oldString, newString);
}


#line 226
- (jint)getNextCode {
  
#line 231
  @try {
    self->nextData_ = (JreLShift32(self->nextData_, 8)) | (IOSByteArray_Get(nil_chk(self->data_), self->bytePointer_++) & (jint) 0xff);
    self->nextBits_ += 8;
    
#line 235
    if (self->nextBits_ < self->bitsToGet_) {
      self->nextData_ = (JreLShift32(self->nextData_, 8)) | (IOSByteArray_Get(self->data_, self->bytePointer_++) & (jint) 0xff);
      self->nextBits_ += 8;
    }
    
#line 240
    jint code =
#line 241
    (JreRShift32(self->nextData_, self->nextBits_ - self->bitsToGet_)) & IOSIntArray_Get(nil_chk(self->andTable_), self->bitsToGet_ - 9);
    self->nextBits_ -= self->bitsToGet_;
    
#line 244
    return code;
  }
  @catch (
#line 245
  JavaLangArrayIndexOutOfBoundsException *e) {
    
#line 247
    return 257;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(decodeWithByteArray:withJavaIoOutputStream:);
  methods[2].selector = @selector(initializeStringTable);
  methods[3].selector = @selector(writeStringWithByteArray:);
  methods[4].selector = @selector(addStringToTableWithByteArray:withByte:);
  methods[5].selector = @selector(addStringToTableWithByteArray:);
  methods[6].selector = @selector(composeStringWithByteArray:withByte:);
  methods[7].selector = @selector(getNextCode);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stringTable_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "data_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "uncompData_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tableIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bitsToGet_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bytePointer_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bitPointer_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextData_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextBits_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "andTable_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "decode", "[BLJavaIoOutputStream;", "writeString", "[B", "addStringToTable", "[BB", "composeString" };
  static const J2ObjcClassInfo _ComAowagieTextPdfLZWDecoder = { "LZWDecoder", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 8, 10, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfLZWDecoder;
}

@end


#line 73
void ComAowagieTextPdfLZWDecoder_initPackagePrivate(ComAowagieTextPdfLZWDecoder *self) {
  NSObject_init(self);
  self->data_ =
#line 59
  nil;
  self->bitsToGet_ =
#line 61
  9;
  self->nextData_ =
#line 63
  0;
  self->nextBits_ = 0;
  self->andTable_ = [IOSIntArray newArrayWithInts:(jint[]){
#line 67
    511,
#line 68
    1023,
#line 69
    2047,
#line 70
    4095 } count:4];
  }


#line 73
ComAowagieTextPdfLZWDecoder *new_ComAowagieTextPdfLZWDecoder_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfLZWDecoder, initPackagePrivate)
}


#line 73
ComAowagieTextPdfLZWDecoder *create_ComAowagieTextPdfLZWDecoder_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfLZWDecoder, initPackagePrivate)
}


#line 143
void ComAowagieTextPdfLZWDecoder_initializeStringTable(ComAowagieTextPdfLZWDecoder *self) {
  
#line 145
  self->stringTable_ = [IOSObjectArray newArrayWithLength:8192 type:IOSClass_byteArray(1)];
  
#line 147
  for (jint i = 0; i < 256; i++) {
    (void) IOSObjectArray_SetAndConsume(self->stringTable_, i, [IOSByteArray newArrayWithLength:1]);
    *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(self->stringTable_, i)), 0) = (jbyte) i;
  }
  
#line 152
  self->tableIndex_ = 258;
  self->bitsToGet_ = 9;
}


#line 160
void ComAowagieTextPdfLZWDecoder_writeStringWithByteArray_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *string) {
  @try {
    [((JavaIoOutputStream *) nil_chk(self->uncompData_)) writeWithByteArray:string];
  }
  @catch (JavaIoIOException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 174
void ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_withByte_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *oldString, jbyte newString) {
  jint length = ((IOSByteArray *) nil_chk(oldString))->size_;
  IOSByteArray *string = [IOSByteArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(oldString, 0, string, 0, length);
  *IOSByteArray_GetRef(string, length) = newString;
  
#line 181
  (void) IOSObjectArray_Set(nil_chk(self->stringTable_), self->tableIndex_++, string);
  
#line 183
  if (self->tableIndex_ == 511) {
    self->bitsToGet_ = 10;
  }
  else
#line 185
  if (self->tableIndex_ == 1023) {
    self->bitsToGet_ = 11;
  }
  else
#line 187
  if (self->tableIndex_ == 2047) {
    self->bitsToGet_ = 12;
  }
}


#line 196
void ComAowagieTextPdfLZWDecoder_addStringToTableWithByteArray_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *string) {
  
#line 199
  (void) IOSObjectArray_Set(nil_chk(self->stringTable_), self->tableIndex_++, string);
  
#line 201
  if (self->tableIndex_ == 511) {
    self->bitsToGet_ = 10;
  }
  else
#line 203
  if (self->tableIndex_ == 1023) {
    self->bitsToGet_ = 11;
  }
  else
#line 205
  if (self->tableIndex_ == 2047) {
    self->bitsToGet_ = 12;
  }
}


#line 216
IOSByteArray *ComAowagieTextPdfLZWDecoder_composeStringWithByteArray_withByte_(ComAowagieTextPdfLZWDecoder *self, IOSByteArray *oldString, jbyte newString) {
  jint length = ((IOSByteArray *) nil_chk(oldString))->size_;
  IOSByteArray *string = [IOSByteArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(oldString, 0, string, 0, length);
  *IOSByteArray_GetRef(string, length) = newString;
  
#line 222
  return string;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfLZWDecoder)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfPatternPainter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfPatternPainter")
#ifdef RESTRICT_PdfPatternPainter
#define INCLUDE_ALL_PdfPatternPainter 0
#else
#define INCLUDE_ALL_PdfPatternPainter 1
#endif
#undef RESTRICT_PdfPatternPainter

#if !defined (ComAowagieTextPdfPdfPatternPainter_) && (INCLUDE_ALL_PdfPatternPainter || defined(INCLUDE_ComAowagieTextPdfPdfPatternPainter))
#define ComAowagieTextPdfPdfPatternPainter_

#define RESTRICT_PdfTemplate 1
#define INCLUDE_ComAowagieTextPdfPdfTemplate 1
#include "PdfTemplate.h"

@class ComAowagieTextImage;
@class ComAowagieTextPdfPdfContentByte;
@class ComAowagieTextPdfPdfPattern;
@class ComAowagieTextPdfPdfSpotColor;
@class ComAowagieTextPdfPdfWriter;
@class HarmonyJavaAwtColor;

/*!
 @brief Implements the pattern.
 */
@interface ComAowagieTextPdfPdfPatternPainter : ComAowagieTextPdfPdfTemplate

#pragma mark Public

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#addImage(com.aowagie.text.Image, float, float, float, float, float, float)
 */
- (void)addImageWithComAowagieTextImage:(ComAowagieTextImage *)image
                              withFloat:(jfloat)a
                              withFloat:(jfloat)b
                              withFloat:(jfloat)c
                              withFloat:(jfloat)d
                              withFloat:(jfloat)e
                              withFloat:(jfloat)f;

/*!
 @brief Returns the default color of the pattern.
 @return a Color
 */
- (HarmonyJavaAwtColor *)getDefaultColor;

/*!
 @brief Gets a duplicate of this <CODE>PdfPatternPainter</CODE>.All
  the members are copied by reference but the buffer stays different.
 @return a copy of this <CODE>PdfPatternPainter</CODE>
 */
- (ComAowagieTextPdfPdfContentByte *)getDuplicate;

/*!
 @brief Returns the horizontal interval when repeating the pattern.
 @return a value
 */
- (jfloat)getXStep;

/*!
 @brief Returns the vertical interval when repeating the pattern.
 @return a value
 */
- (jfloat)getYStep;

/*!
 @brief Tells you if this pattern is colored/uncolored (stencil = uncolored, you need to set a default color).
 @return true if the pattern is an uncolored tiling pattern (stencil).
 */
- (jboolean)isStencil;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#resetCMYKColorFill()
 */
- (void)resetCMYKColorFill;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#resetCMYKColorStroke()
 */
- (void)resetCMYKColorStroke;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#resetGrayFill()
 */
- (void)resetGrayFill;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#resetGrayStroke()
 */
- (void)resetGrayStroke;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#resetRGBColorFill()
 */
- (void)resetRGBColorFill;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#resetRGBColorStroke()
 */
- (void)resetRGBColorStroke;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setCMYKColorFill(int, int, int, int)
 */
- (void)setCMYKColorFillWithInt:(jint)cyan
                        withInt:(jint)magenta
                        withInt:(jint)yellow
                        withInt:(jint)black;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setCMYKColorFillF(float, float, float, float)
 */
- (void)setCMYKColorFillFWithFloat:(jfloat)cyan
                         withFloat:(jfloat)magenta
                         withFloat:(jfloat)yellow
                         withFloat:(jfloat)black;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setCMYKColorStroke(int, int, int, int)
 */
- (void)setCMYKColorStrokeWithInt:(jint)cyan
                          withInt:(jint)magenta
                          withInt:(jint)yellow
                          withInt:(jint)black;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setCMYKColorStrokeF(float, float, float, float)
 */
- (void)setCMYKColorStrokeFWithFloat:(jfloat)cyan
                           withFloat:(jfloat)magenta
                           withFloat:(jfloat)yellow
                           withFloat:(jfloat)black;

- (void)setColorFillWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setColorFill(com.aowagie.text.pdf.PdfSpotColor, float)
 */
- (void)setColorFillWithComAowagieTextPdfPdfSpotColor:(ComAowagieTextPdfPdfSpotColor *)sp
                                            withFloat:(jfloat)tint;

- (void)setColorStrokeWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setColorStroke(com.aowagie.text.pdf.PdfSpotColor, float)
 */
- (void)setColorStrokeWithComAowagieTextPdfPdfSpotColor:(ComAowagieTextPdfPdfSpotColor *)sp
                                              withFloat:(jfloat)tint;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setGrayFill(float)
 */
- (void)setGrayFillWithFloat:(jfloat)gray;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setGrayStroke(float)
 */
- (void)setGrayStrokeWithFloat:(jfloat)gray;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setPatternFill(com.aowagie.text.pdf.PdfPatternPainter)
 */
- (void)setPatternFillWithComAowagieTextPdfPdfPatternPainter:(ComAowagieTextPdfPdfPatternPainter *)p;

- (void)setPatternFillWithComAowagieTextPdfPdfPatternPainter:(ComAowagieTextPdfPdfPatternPainter *)p
                                     withHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color
                                                   withFloat:(jfloat)tint;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setPatternStroke(com.aowagie.text.pdf.PdfPatternPainter)
 */
- (void)setPatternStrokeWithComAowagieTextPdfPdfPatternPainter:(ComAowagieTextPdfPdfPatternPainter *)p;

- (void)setPatternStrokeWithComAowagieTextPdfPdfPatternPainter:(ComAowagieTextPdfPdfPatternPainter *)p
                                       withHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color
                                                     withFloat:(jfloat)tint;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setRGBColorFill(int, int, int)
 */
- (void)setRGBColorFillWithInt:(jint)red
                       withInt:(jint)green
                       withInt:(jint)blue;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setRGBColorFillF(float, float, float)
 */
- (void)setRGBColorFillFWithFloat:(jfloat)red
                        withFloat:(jfloat)green
                        withFloat:(jfloat)blue;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setRGBColorStroke(int, int, int)
 */
- (void)setRGBColorStrokeWithInt:(jint)red
                         withInt:(jint)green
                         withInt:(jint)blue;

/*!
 - seealso: com.aowagie.text.pdf.PdfContentByte#setRGBColorStrokeF(float, float, float)
 */
- (void)setRGBColorStrokeFWithFloat:(jfloat)red
                          withFloat:(jfloat)green
                          withFloat:(jfloat)blue;

/*!
 @brief Sets the horizontal interval of this pattern.
 @param xstep the xstep in horizontal painting
 */
- (void)setXStepWithFloat:(jfloat)xstep;

/*!
 @brief Sets the vertical interval of this pattern.
 @param ystep in vertical painting
 */
- (void)setYStepWithFloat:(jfloat)ystep;

#pragma mark Package-Private

/*!
 @brief Creates new PdfPattern
 @param wr the  <CODE> PdfWriter </CODE>
 */
- (instancetype)initWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)wr;

- (instancetype)initWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)wr
                           withHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)defaultColor;

/*!
 @brief Gets the stream representing this pattern
 @param compressionLevel the compression level of the stream
 @return the stream representing this pattern
 @since 2.1.3
 */
- (ComAowagieTextPdfPdfPattern *)getPatternWithInt:(jint)compressionLevel;

/*!
 @brief Sets the transformation matrix for the pattern.
 @param a a
 @param b b
 @param c c
 @param d d
 @param e e
 @param f f
 */
- (void)setPatternMatrixWithFloat:(jfloat)a
                        withFloat:(jfloat)b
                        withFloat:(jfloat)c
                        withFloat:(jfloat)d
                        withFloat:(jfloat)e
                        withFloat:(jfloat)f;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfPatternPainter)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfPatternPainter_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfPatternPainter *self, ComAowagieTextPdfPdfWriter *wr);

FOUNDATION_EXPORT ComAowagieTextPdfPdfPatternPainter *new_ComAowagieTextPdfPdfPatternPainter_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *wr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfPatternPainter *create_ComAowagieTextPdfPdfPatternPainter_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *wr);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfPatternPainter_initWithComAowagieTextPdfPdfWriter_withHarmonyJavaAwtColor_(ComAowagieTextPdfPdfPatternPainter *self, ComAowagieTextPdfPdfWriter *wr, HarmonyJavaAwtColor *defaultColor);

FOUNDATION_EXPORT ComAowagieTextPdfPdfPatternPainter *new_ComAowagieTextPdfPdfPatternPainter_initWithComAowagieTextPdfPdfWriter_withHarmonyJavaAwtColor_(ComAowagieTextPdfPdfWriter *wr, HarmonyJavaAwtColor *defaultColor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfPatternPainter *create_ComAowagieTextPdfPdfPatternPainter_initWithComAowagieTextPdfPdfWriter_withHarmonyJavaAwtColor_(ComAowagieTextPdfPdfWriter *wr, HarmonyJavaAwtColor *defaultColor);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfPatternPainter)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfPatternPainter")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/AOCAdESSigner.java
//

#include "AOCAdESSigner.h"
#include "AOCancelledOperationException.h"
#include "AOCoSigner.h"
#include "AOCounterSigner.h"
#include "AOException.h"
#include "AOInvalidFormatException.h"
#include "AOSignConstants.h"
#include "AOSignInfo.h"
#include "AOTreeModel.h"
#include "CAdESExtraParams.h"
#include "CAdESParameters.h"
#include "CAdESValidator.h"
#include "CounterSignTarget.h"
#include "GenCAdESEPESSignedData.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ObtainContentSignedData.h"
#include "ReadNodesTree.h"
#include "SCChecker.h"
#include "java/io/IOException.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/security/PrivateKey.h"
#include "java/util/Locale.h"
#include "java/util/Properties.h"
#include "java/util/logging/Logger.h"

#if !__has_feature(objc_arc)
#error "AOCAdESSigner must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaSignersCadesAOCAdESSigner ()

+ (void)checkAlgorithmWithNSString:(NSString *)algorithm
            withJavaUtilProperties:(JavaUtilProperties *)extraParams;

+ (JavaUtilProperties *)getExtraParamsWithJavaUtilProperties:(JavaUtilProperties *)extraParams;

/*!
 @brief Informa a traves de mensajes de consola si se han establecido par&aacute;metros de
  configuraci&oacute;n que se ignoraran por ser incompatibles.
 @param algorithm Algoritmo de firma.
 @param extraParams Configuracion establecida.
 */
+ (void)noticeIncompatibleConfigWithNSString:(NSString *)algorithm
                      withJavaUtilProperties:(JavaUtilProperties *)extraParams;

@end

inline JavaUtilLoggingLogger *EsGobAfirmaSignersCadesAOCAdESSigner_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersCadesAOCAdESSigner, LOGGER, JavaUtilLoggingLogger *)

__attribute__((unused)) static void EsGobAfirmaSignersCadesAOCAdESSigner_checkAlgorithmWithNSString_withJavaUtilProperties_(NSString *algorithm, JavaUtilProperties *extraParams);

__attribute__((unused)) static JavaUtilProperties *EsGobAfirmaSignersCadesAOCAdESSigner_getExtraParamsWithJavaUtilProperties_(JavaUtilProperties *extraParams);

__attribute__((unused)) static void EsGobAfirmaSignersCadesAOCAdESSigner_noticeIncompatibleConfigWithNSString_withJavaUtilProperties_(NSString *algorithm, JavaUtilProperties *extraParams);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/AOCAdESSigner.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaSignersCadesAOCAdESSigner)


#line 60
@implementation EsGobAfirmaSignersCadesAOCAdESSigner

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 60
- (instancetype)init {
  EsGobAfirmaSignersCadesAOCAdESSigner_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 72
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)algorithm
         withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
             withJavaUtilProperties:(JavaUtilProperties *)xParams {
  
#line 80
  if (certChain == nil || certChain->size_ < 1) {
    
#line 82
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"La cadena de certificados debe contener al menos un elemento");
  }
  
#line 85
  JavaUtilProperties *extraParams = EsGobAfirmaSignersCadesAOCAdESSigner_getExtraParamsWithJavaUtilProperties_(xParams);
  
#line 87
  EsGobAfirmaSignersCadesAOCAdESSigner_checkAlgorithmWithNSString_withJavaUtilProperties_(algorithm, extraParams);
  
#line 89
  [new_EsGobAfirmaSignersPkcs7SCChecker_init() checkSpongyCastle];
  
#line 91
  EsGobAfirmaSignersCadesAOCAdESSigner_noticeIncompatibleConfigWithNSString_withJavaUtilProperties_(algorithm, extraParams);
  
#line 95
  EsGobAfirmaSignersCadesCAdESParameters *cadesConfig = EsGobAfirmaSignersCadesCAdESParameters_load__WithByteArray_withNSString_withJavaUtilProperties_(data, algorithm, extraParams);
  
#line 97
  IOSByteArray *cadesSignedData;
  @try {
    cadesSignedData = EsGobAfirmaSignersCadesGenCAdESEPESSignedData_generateSignedDataWithNSString_withJavaSecurityPrivateKey_withJavaSecurityCertCertificateArray_withEsGobAfirmaSignersCadesCAdESParameters_(
#line 100
    algorithm,
#line 101
    key,
#line 102
    certChain,
#line 103
    cadesConfig);
  }
  @catch (EsGobAfirmaCoreAOCancelledOperationException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error al generar la firma CAdES: ", e), e);
  }
  
#line 112
  return cadesSignedData;
}


#line 144
- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)data
                        withByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)xParams {
  
#line 153
  JavaUtilProperties *extraParams = EsGobAfirmaSignersCadesAOCAdESSigner_getExtraParamsWithJavaUtilProperties_(xParams);
  
#line 155
  EsGobAfirmaSignersCadesAOCAdESSigner_checkAlgorithmWithNSString_withJavaUtilProperties_(algorithm, extraParams);
  
#line 157
  [new_EsGobAfirmaSignersPkcs7SCChecker_init() checkSpongyCastle];
  
#line 159
  @try {
    return [((id<EsGobAfirmaCoreSignersAOCoSigner>) nil_chk(((id<EsGobAfirmaCoreSignersAOCoSigner>) cast_check([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(IOSClass_forName_(@"es.gob.afirma.signers.multi.cades.AOCAdESCoSigner"))) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], EsGobAfirmaCoreSignersAOCoSigner_class_())))) cosignWithByteArray:
#line 161
    data withByteArray:
#line 162
    sign withNSString:
#line 163
    algorithm withJavaSecurityPrivateKey:
#line 164
    key withJavaSecurityCertCertificateArray:
#line 165
    certChain withJavaUtilProperties:
#line 166
    extraParams];
  }
  @catch (
#line 169
  JavaLangInstantiationException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES: ", e), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por acceso ilegal: ", e), e);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha encontrado la clase de cofirmas CAdES: ", e), e);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES: ", e), e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por error en la invocacion al constructor: ", e), e);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por falta de un constructor por defecto sin parametros: ", e), e);
  }
  @catch (JavaLangSecurityException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por falta de permisos: ", e), e);
  }
}


#line 219
- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)xParams {
  
#line 226
  JavaUtilProperties *extraParams = EsGobAfirmaSignersCadesAOCAdESSigner_getExtraParamsWithJavaUtilProperties_(xParams);
  
#line 228
  EsGobAfirmaSignersCadesAOCAdESSigner_checkAlgorithmWithNSString_withJavaUtilProperties_(algorithm, extraParams);
  
#line 230
  [new_EsGobAfirmaSignersPkcs7SCChecker_init() checkSpongyCastle];
  
#line 232
  @try {
    return [((id<EsGobAfirmaCoreSignersAOCoSigner>) nil_chk(((id<EsGobAfirmaCoreSignersAOCoSigner>) cast_check([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(IOSClass_forName_(@"es.gob.afirma.signers.multi.cades.AOCAdESCoSigner"))) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], EsGobAfirmaCoreSignersAOCoSigner_class_())))) cosignWithByteArray:
#line 234
    sign withNSString:algorithm withJavaSecurityPrivateKey:key withJavaSecurityCertCertificateArray:certChain withJavaUtilProperties:extraParams];
  }
  @catch (
#line 237
  JavaIoIOException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error en tratamiento de datos para la cofirma: ", e), e);
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES: ", e), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por acceso ilegal: ", e), e);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha encontrado la clase de cofirmas CAdES: ", e), e);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES: ", e), e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por error en la invocacion al constructor: ", e), e);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por falta de un constructor por defecto sin parametros: ", e), e);
  }
  @catch (JavaLangSecurityException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar la clase de cofirmas CAdES por falta de permisos: ", e), e);
  }
}


#line 282
- (IOSByteArray *)countersignWithByteArray:(IOSByteArray *)sign
                              withNSString:(NSString *)algorithm
withEsGobAfirmaCoreSignersCounterSignTarget:(EsGobAfirmaCoreSignersCounterSignTarget *)targetType
                         withNSObjectArray:(IOSObjectArray *)targets
                withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
      withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
                    withJavaUtilProperties:(JavaUtilProperties *)xParams {
  
#line 291
  JavaUtilProperties *extraParams = EsGobAfirmaSignersCadesAOCAdESSigner_getExtraParamsWithJavaUtilProperties_(xParams);
  
#line 293
  EsGobAfirmaSignersCadesAOCAdESSigner_checkAlgorithmWithNSString_withJavaUtilProperties_(algorithm, extraParams);
  
#line 295
  [new_EsGobAfirmaSignersPkcs7SCChecker_init() checkSpongyCastle];
  
#line 297
  @try {
    return [((id<EsGobAfirmaCoreSignersAOCounterSigner>) nil_chk(((id<EsGobAfirmaCoreSignersAOCounterSigner>) cast_check([((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(IOSClass_forName_(@"es.gob.afirma.signers.multi.cades.AOCAdESCounterSigner"))) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], EsGobAfirmaCoreSignersAOCounterSigner_class_())))) countersignWithByteArray:
#line 299
    sign withNSString:algorithm withEsGobAfirmaCoreSignersCounterSignTarget:targetType withNSObjectArray:targets withJavaSecurityPrivateKey:key withJavaSecurityCertCertificateArray:certChain withJavaUtilProperties:extraParams];
  }
  @catch (
#line 302
  JavaIoIOException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error en el tratamiemto de datos durante la contrafirma: ", e), e);
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error al instanciar el contrafirmador: ", e), e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No ha permisos para invocar al contrafirmador: ", e), e);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha encontrado el contrafirmador: ", e), e);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar el contrafirmador: ", e), e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar el contrafirmador: ", e), e);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar el contrafirmador por falta de un constructor por defecto sin parametros: ", e), e);
  }
  @catch (JavaLangSecurityException *e) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"No se ha podido instanciar el contrafirmador por motivos de seguridad: ", e), e);
  }
}


#line 329
- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                  withJavaUtilProperties:(JavaUtilProperties *)params
                                                             withBoolean:(jboolean)asSimpleSignInfo {
  [new_EsGobAfirmaSignersPkcs7SCChecker_init() checkSpongyCastle];
  if (!EsGobAfirmaSignersCadesCAdESValidator_isCAdESValidWithByteArray_withBoolean_(sign, false)) {
    @throw new_EsGobAfirmaCoreAOInvalidFormatException_initWithNSString_(@"Los datos introducidos no se corresponden con un objeto de firma CAdES");
  }
  @try {
    return [new_EsGobAfirmaSignersPkcs7ReadNodesTree_init() readNodesTreeWithByteArray:sign withBoolean:asSimpleSignInfo];
  }
  @catch (JavaLangException *ex) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER)) severeWithNSString:JreStrcat("$@", @"No se ha podido obtener el arbol de firmantes de la firma, se devolvera null: ", ex)];
  }
  return nil;
}


#line 364
- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                             withBoolean:(jboolean)asSimpleSignInfo {
  return [self getSignersStructureWithByteArray:sign withJavaUtilProperties:nil withBoolean:asSimpleSignInfo];
}


#line 373
- (jboolean)isSignWithByteArray:(IOSByteArray *)data
         withJavaUtilProperties:(JavaUtilProperties *)params {
  if (data == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER)) warningWithNSString:@"Se han introducido datos nulos para su comprobacion"];
    return false;
  }
  [new_EsGobAfirmaSignersPkcs7SCChecker_init() checkSpongyCastle];
  return EsGobAfirmaSignersCadesCAdESValidator_isCAdESSignedDataWithByteArray_withBoolean_(data, true);
}


#line 386
- (jboolean)isSignWithByteArray:(IOSByteArray *)data {
  
#line 388
  return [self isSignWithByteArray:data withJavaUtilProperties:nil];
}


#line 397
- (jboolean)isValidDataFileWithByteArray:(IOSByteArray *)data {
  
#line 399
  if (data == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER)) warningWithNSString:@"Se han introducido datos nulos para su comprobacion"];
    return false;
  }
  return true;
}


#line 414
- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)signData {
  
#line 416
  return [self getDataWithByteArray:signData withJavaUtilProperties:nil];
}


#line 419
- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)sign
                withJavaUtilProperties:(JavaUtilProperties *)params {
  if (sign == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Se han introducido datos nulos para su comprobacion");
  }
  [new_EsGobAfirmaSignersPkcs7SCChecker_init() checkSpongyCastle];
  if (!EsGobAfirmaSignersCadesCAdESValidator_isCAdESValidWithByteArray_withBoolean_(sign, false)) {
    @throw new_EsGobAfirmaCoreAOInvalidFormatException_initWithNSString_(@"Los datos introducidos no se corresponden con un objeto de firma");
  }
  return EsGobAfirmaSignersPkcs7ObtainContentSignedData_obtainDataWithByteArray_(sign);
}


#line 438
- (NSString *)getSignedNameWithNSString:(NSString *)originalName
                           withNSString:(NSString *)inText {
  return JreStrcat("$$$", originalName, (inText != nil ? inText : @""), @".csig");
}


#line 454
- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)signData {
  
#line 456
  return [self getSignInfoWithByteArray:signData withJavaUtilProperties:nil];
}


#line 459
- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)data
                                        withJavaUtilProperties:(JavaUtilProperties *)params {
  if (data == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"No se han introducido datos para analizar");
  }
  if (![self isSignWithByteArray:data]) {
    @throw new_EsGobAfirmaCoreAOInvalidFormatException_initWithNSString_(@"Los datos introducidos no se corresponden con un objeto de firma");
  }
  return new_EsGobAfirmaCoreSignersAOSignInfo_initWithNSString_(EsGobAfirmaCoreSignersAOSignConstants_SIGN_FORMAT_CADES);
}

+ (void)checkAlgorithmWithNSString:(NSString *)algorithm
            withJavaUtilProperties:(JavaUtilProperties *)extraParams {
  EsGobAfirmaSignersCadesAOCAdESSigner_checkAlgorithmWithNSString_withJavaUtilProperties_(algorithm, extraParams);
}


#line 489
+ (JavaUtilProperties *)getExtraParamsWithJavaUtilProperties:(JavaUtilProperties *)extraParams {
  return EsGobAfirmaSignersCadesAOCAdESSigner_getExtraParamsWithJavaUtilProperties_(extraParams);
}


#line 502
+ (void)noticeIncompatibleConfigWithNSString:(NSString *)algorithm
                      withJavaUtilProperties:(JavaUtilProperties *)extraParams {
  EsGobAfirmaSignersCadesAOCAdESSigner_noticeIncompatibleConfigWithNSString_withJavaUtilProperties_(algorithm, extraParams);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x1, 6, 7, 2, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreUtilTreeAOTreeModel;", 0x1, 8, 9, 10, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreUtilTreeAOTreeModel;", 0x1, 8, 11, 10, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 14, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 16, 14, 10, -1, -1, -1 },
    { NULL, "[B", 0x1, 16, 13, 10, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersAOSignInfo;", 0x1, 19, 14, 20, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersAOSignInfo;", 0x1, 19, 13, 20, -1, -1, -1 },
    { NULL, "V", 0xa, 21, 22, 2, -1, -1, -1 },
    { NULL, "LJavaUtilProperties;", 0xa, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 25, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(signWithByteArray:withNSString:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  methods[2].selector = @selector(cosignWithByteArray:withByteArray:withNSString:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  methods[3].selector = @selector(cosignWithByteArray:withNSString:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  methods[4].selector = @selector(countersignWithByteArray:withNSString:withEsGobAfirmaCoreSignersCounterSignTarget:withNSObjectArray:withJavaSecurityPrivateKey:withJavaSecurityCertCertificateArray:withJavaUtilProperties:);
  methods[5].selector = @selector(getSignersStructureWithByteArray:withJavaUtilProperties:withBoolean:);
  methods[6].selector = @selector(getSignersStructureWithByteArray:withBoolean:);
  methods[7].selector = @selector(isSignWithByteArray:withJavaUtilProperties:);
  methods[8].selector = @selector(isSignWithByteArray:);
  methods[9].selector = @selector(isValidDataFileWithByteArray:);
  methods[10].selector = @selector(getDataWithByteArray:);
  methods[11].selector = @selector(getDataWithByteArray:withJavaUtilProperties:);
  methods[12].selector = @selector(getSignedNameWithNSString:withNSString:);
  methods[13].selector = @selector(getSignInfoWithByteArray:);
  methods[14].selector = @selector(getSignInfoWithByteArray:withJavaUtilProperties:);
  methods[15].selector = @selector(checkAlgorithmWithNSString:withJavaUtilProperties:);
  methods[16].selector = @selector(getExtraParamsWithJavaUtilProperties:);
  methods[17].selector = @selector(noticeIncompatibleConfigWithNSString:withJavaUtilProperties:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
  };
  static const void *ptrTable[] = { "sign", "[BLNSString;LJavaSecurityPrivateKey;[LJavaSecurityCertCertificate;LJavaUtilProperties;", "LEsGobAfirmaCoreAOException;", "cosign", "[B[BLNSString;LJavaSecurityPrivateKey;[LJavaSecurityCertCertificate;LJavaUtilProperties;", "LEsGobAfirmaCoreAOException;LJavaIoIOException;", "countersign", "[BLNSString;LEsGobAfirmaCoreSignersCounterSignTarget;[LNSObject;LJavaSecurityPrivateKey;[LJavaSecurityCertCertificate;LJavaUtilProperties;", "getSignersStructure", "[BLJavaUtilProperties;Z", "LEsGobAfirmaCoreAOInvalidFormatException;LJavaIoIOException;", "[BZ", "isSign", "[BLJavaUtilProperties;", "[B", "isValidDataFile", "getData", "getSignedName", "LNSString;LNSString;", "getSignInfo", "LEsGobAfirmaCoreAOInvalidFormatException;", "checkAlgorithm", "LNSString;LJavaUtilProperties;", "getExtraParams", "LJavaUtilProperties;", "noticeIncompatibleConfig", &EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER };
  static const J2ObjcClassInfo _EsGobAfirmaSignersCadesAOCAdESSigner = { "AOCAdESSigner", "es.gob.afirma.signers.cades", ptrTable, methods, fields, 7, 0x11, 18, 1, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersCadesAOCAdESSigner;
}

+ (void)initialize {
  if (self == [EsGobAfirmaSignersCadesAOCAdESSigner class]) {
    EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 62
    @"es.gob.afirma");
    J2OBJC_SET_INITIALIZED(EsGobAfirmaSignersCadesAOCAdESSigner)
  }
}

@end


#line 60
void EsGobAfirmaSignersCadesAOCAdESSigner_init(EsGobAfirmaSignersCadesAOCAdESSigner *self) {
  NSObject_init(self);
}


#line 60
EsGobAfirmaSignersCadesAOCAdESSigner *new_EsGobAfirmaSignersCadesAOCAdESSigner_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersCadesAOCAdESSigner, init)
}


#line 60
EsGobAfirmaSignersCadesAOCAdESSigner *create_EsGobAfirmaSignersCadesAOCAdESSigner_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersCadesAOCAdESSigner, init)
}


#line 470
void EsGobAfirmaSignersCadesAOCAdESSigner_checkAlgorithmWithNSString_withJavaUtilProperties_(NSString *algorithm, JavaUtilProperties *extraParams) {
  EsGobAfirmaSignersCadesAOCAdESSigner_initialize();
  
#line 471
  if (algorithm == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"El algoritmo de firma no puede ser nulo");
  }
  if ([((NSString *) nil_chk([algorithm java_uppercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)])) java_hasPrefix:@"MD"]) {
    @throw new_EsGobAfirmaCoreAOException_initWithNSString_(@"CAdES no permite huellas digitales MD2 o MD5 (Decision 130/2011 CE)");
  }
  
#line 478
  NSString *profile = [((JavaUtilProperties *) nil_chk(extraParams)) getPropertyWithNSString:EsGobAfirmaSignersCadesCAdESExtraParams_PROFILE];
  
#line 481
  if ([((NSString *) nil_chk(EsGobAfirmaCoreSignersAOSignConstants_SIGN_PROFILE_BASELINE)) java_equalsIgnoreCase:profile]) {
    if (EsGobAfirmaCoreSignersAOSignConstants_isSHA1SignatureAlgorithmWithNSString_(algorithm)) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER)) warningWithNSString:JreStrcat("$$$", @"El algoritmo '", algorithm, @"' no esta recomendado para su uso en las firmas baseline por no cumplir los requisitos de seguridad actuales")];
    }
  }
}


#line 489
JavaUtilProperties *EsGobAfirmaSignersCadesAOCAdESSigner_getExtraParamsWithJavaUtilProperties_(JavaUtilProperties *extraParams) {
  EsGobAfirmaSignersCadesAOCAdESSigner_initialize();
  
#line 490
  JavaUtilProperties *newExtraParams = extraParams != nil ?
#line 491
  (JavaUtilProperties *) cast_chk([extraParams java_clone], [JavaUtilProperties class]) : new_JavaUtilProperties_init();
  
#line 493
  return newExtraParams;
}


#line 502
void EsGobAfirmaSignersCadesAOCAdESSigner_noticeIncompatibleConfigWithNSString_withJavaUtilProperties_(NSString *algorithm, JavaUtilProperties *extraParams) {
  EsGobAfirmaSignersCadesAOCAdESSigner_initialize();
  if (extraParams != nil && [extraParams containsKeyWithId:EsGobAfirmaSignersCadesCAdESExtraParams_PRECALCULATED_HASH_ALGORITHM] &&
#line 505
  [extraParams containsKeyWithId:EsGobAfirmaSignersCadesCAdESExtraParams_MODE]) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER)) warningWithNSString:JreStrcat("$$$$$", @"Se ignorara el parametro '", EsGobAfirmaSignersCadesCAdESExtraParams_MODE, @"' por haberse proporcionado tambien el parametro '",
#line 507
    EsGobAfirmaSignersCadesCAdESExtraParams_PRECALCULATED_HASH_ALGORITHM, @"'. La firma sera explicita.")];
    
#line 509
    (void) [extraParams removeWithId:EsGobAfirmaSignersCadesCAdESExtraParams_MODE];
  }
  
#line 512
  if (algorithm != nil && extraParams != nil && EsGobAfirmaCoreSignersAOSignConstants_isSHA2SignatureAlgorithmWithNSString_(algorithm) &&
#line 513
  [extraParams containsKeyWithId:EsGobAfirmaSignersCadesCAdESExtraParams_SIGNING_CERTIFICATE_V2]) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesAOCAdESSigner_LOGGER)) warningWithNSString:JreStrcat("$$$", @"Se ignorara la propiedad '", EsGobAfirmaSignersCadesCAdESExtraParams_SIGNING_CERTIFICATE_V2, @"' porque las firmas SHA2 siempre usan SigningCertificateV2")];
    
#line 516
    (void) [extraParams removeWithId:EsGobAfirmaSignersCadesCAdESExtraParams_SIGNING_CERTIFICATE_V2];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersCadesAOCAdESSigner)

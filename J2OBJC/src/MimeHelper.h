//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/MimeHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_MimeHelper")
#ifdef RESTRICT_MimeHelper
#define INCLUDE_ALL_MimeHelper 0
#else
#define INCLUDE_ALL_MimeHelper 1
#endif
#undef RESTRICT_MimeHelper

#if !defined (EsGobAfirmaCoreMiscMimeHelper_) && (INCLUDE_ALL_MimeHelper || defined(INCLUDE_EsGobAfirmaCoreMiscMimeHelper))
#define EsGobAfirmaCoreMiscMimeHelper_

@class IOSByteArray;

/*!
 @brief M&eacute;todos de utilidad para la gesti&oacute;n de MimeType y OID
  identificadores de tipo de contenido.
 */
@interface EsGobAfirmaCoreMiscMimeHelper : NSObject

#pragma mark Public

/*!
 @brief Realiza el an&aacute;lisis de los datos.
 @param data Datos que se desean analizar.
 @throw NullPointerExceptionCuando se introducen datos nulos.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)data;

/*!
 @brief Recupera la descripci&oacute;n de los datos analizados.
 @return Descripci&oacute;n del tipo de dato.
 @throw IOExceptionCuando no se pueden analizar los datos.
 */
- (NSString *)getDescription;

/*!
 @brief Recupera la extensi&oacute;n com&uacute;n para un fichero con los datos analizados.
 @return Extensi&oacute;n para un fichero de datos o <code>null</code> si no se conoce el
          tipo. La extensi&oacute;n se devuelve sin el punto separador.
 @throw IOExceptionCuando no se pueden analizar los datos.
 */
- (NSString *)getExtension;

/*!
 @brief Recupera el MimeType de los datos analizados.
 @return MimeType de los datos o <code>null</code> si no se
  pudo detectar.
 @throw IOExceptionSi no se pueden analizar los datos.
 */
- (NSString *)getMimeType;

/*!
 @brief Indica si unos datos son un fichero ZIP, independientemente de que ese ZIP se
  corresponda con otro formato basado en el mismo (como los ficheros DOCX, ODT,...).
 @return <code>true</code> si los datos son un ZIP, <code>false</code> en caso de que no
  sean un ZIP o que no se puedan analizar.
 */
- (jboolean)isZipData;

/*!
 @brief Obtiene el OID correspondiente a un MimeType concreto.Si no conoce el
  OID asociado, devuelve el OID por defecto para datos binarios
  (DEFAULT_CONTENT_OID_DATA).
 @param mimetype MimeType del que deseamos obtener el OID.
 @return OID asociado al MimeType.
 @throw IOExceptionSi no se puede cargar la tabla de correspondencias entre MimeType y OID.
 */
+ (NSString *)transformMimeTypeToOidWithNSString:(NSString *)mimetype;

/*!
 @brief Obtiene el MimeType correspondiente a un OID concreto.Si no conoce el MimeType
  asociado, devuelve el gen&eacute;rico de datos binarios (DEFAULT_MIMETYPE).
 @param oid OID del que deseamos obtener el MimeType.
 @return MimeType asociado al OID.
 @throw IOExceptionSi no se puede cargar la tabla de correspondencias entre MimeType y OID.
 */
+ (NSString *)transformOidToMimeTypeWithNSString:(NSString *)oid;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscMimeHelper)

/*!
 @brief Valor que devuelve JMimeMagic por defecto cuando no sabe identificar la extensi&oacute;n
  o el MimeType de unos datos.
 */
inline NSString *EsGobAfirmaCoreMiscMimeHelper_get_UNKNOWN_JMIMEMAGIC_VALUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscMimeHelper_UNKNOWN_JMIMEMAGIC_VALUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscMimeHelper, UNKNOWN_JMIMEMAGIC_VALUE, NSString *)

/*!
 @brief MimeType por defecto.
 */
inline NSString *EsGobAfirmaCoreMiscMimeHelper_get_DEFAULT_MIMETYPE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscMimeHelper_DEFAULT_MIMETYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscMimeHelper, DEFAULT_MIMETYPE, NSString *)

/*!
 @brief Descriptor por defecto del tipo de contenido.
 */
inline NSString *EsGobAfirmaCoreMiscMimeHelper_get_DEFAULT_CONTENT_DESCRIPTION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscMimeHelper_DEFAULT_CONTENT_DESCRIPTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscMimeHelper, DEFAULT_CONTENT_DESCRIPTION, NSString *)

/*!
 @brief OID del tipo de datos gen&eacute;rico.
 */
inline NSString *EsGobAfirmaCoreMiscMimeHelper_get_DEFAULT_CONTENT_OID_DATA(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscMimeHelper_DEFAULT_CONTENT_OID_DATA;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscMimeHelper, DEFAULT_CONTENT_OID_DATA, NSString *)

FOUNDATION_EXPORT void EsGobAfirmaCoreMiscMimeHelper_initWithByteArray_(EsGobAfirmaCoreMiscMimeHelper *self, IOSByteArray *data);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscMimeHelper *new_EsGobAfirmaCoreMiscMimeHelper_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreMiscMimeHelper *create_EsGobAfirmaCoreMiscMimeHelper_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscMimeHelper_transformMimeTypeToOidWithNSString_(NSString *mimetype);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscMimeHelper_transformOidToMimeTypeWithNSString_(NSString *oid);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscMimeHelper)

#endif

#if !defined (EsGobAfirmaCoreMiscMimeHelper_MimeInfo_) && (INCLUDE_ALL_MimeHelper || defined(INCLUDE_EsGobAfirmaCoreMiscMimeHelper_MimeInfo))
#define EsGobAfirmaCoreMiscMimeHelper_MimeInfo_

/*!
 @brief Almacena la informaci&oacute;n identificada del tipo de datos.
 */
@interface EsGobAfirmaCoreMiscMimeHelper_MimeInfo : NSObject

#pragma mark Package-Private

- (instancetype)init;

- (NSString *)getDescription;

- (NSString *)getExtension;

- (NSString *)getMimeType;

- (jboolean)isDescriptionVerified;

- (jboolean)isExtensionVerified;

- (jboolean)isMimeTypeVerified;

- (void)setDescriptionWithNSString:(NSString *)desc;

- (void)setDescriptionVerifiedWithBoolean:(jboolean)descriptionVerified;

- (void)setExtensionWithNSString:(NSString *)ext;

- (void)setExtensionVerifiedWithBoolean:(jboolean)extensionVerified;

- (void)setMimeTypeWithNSString:(NSString *)mimeType;

- (void)setMimeTypeVerifiedWithBoolean:(jboolean)mTypeVerified;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreMiscMimeHelper_MimeInfo)

FOUNDATION_EXPORT void EsGobAfirmaCoreMiscMimeHelper_MimeInfo_init(EsGobAfirmaCoreMiscMimeHelper_MimeInfo *self);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscMimeHelper_MimeInfo *new_EsGobAfirmaCoreMiscMimeHelper_MimeInfo_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreMiscMimeHelper_MimeInfo *create_EsGobAfirmaCoreMiscMimeHelper_MimeInfo_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscMimeHelper_MimeInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_MimeHelper")

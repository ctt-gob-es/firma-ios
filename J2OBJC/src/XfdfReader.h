//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfdfReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_XfdfReader")
#ifdef RESTRICT_XfdfReader
#define INCLUDE_ALL_XfdfReader 0
#else
#define INCLUDE_ALL_XfdfReader 1
#endif
#undef RESTRICT_XfdfReader

#if !defined (ComAowagieTextPdfXfdfReader_) && (INCLUDE_ALL_XfdfReader || defined(INCLUDE_ComAowagieTextPdfXfdfReader))
#define ComAowagieTextPdfXfdfReader_

#define RESTRICT_SimpleXMLDocHandler 1
#define INCLUDE_ComAowagieTextXmlSimpleparserSimpleXMLDocHandler 1
#include "SimpleXMLDocHandler.h"

@class JavaUtilHashMap;
@protocol JavaUtilList;

/*!
 @brief Reads a XFDF.
 @author Leonard Rosenthol (leonardr@@pdfsages.com)
 */
@interface ComAowagieTextPdfXfdfReader : NSObject < ComAowagieTextXmlSimpleparserSimpleXMLDocHandler >

#pragma mark Public

/*!
 @brief Called after the document is parsed.
 */
- (void)endDocument;

/*!
 @brief Called when an end tag is found.
 @param tag the tag name
 */
- (void)endElementWithNSString:(NSString *)tag;

/*!
 @brief Gets all the fields.The map is keyed by the fully qualified
  field name and the value is a merged <CODE>PdfDictionary</CODE>
  with the field content.
 @return all the fields
 */
- (JavaUtilHashMap *)getFields;

/*!
 @brief Gets the PDF file specification contained in the FDF.
 @return the PDF file specification contained in the FDF
 */
- (NSString *)getFileSpec;

/*!
 @brief Called when the document starts to be parsed.
 */
- (void)startDocument;

/*!
 @brief Called when a start tag is found.
 @param tag the tag name
 @param h the tag's attributes
 */
- (void)startElementWithNSString:(NSString *)tag
             withJavaUtilHashMap:(JavaUtilHashMap *)h;

/*!
 @brief Called when a text element is found.
 @param str the text element, probably a fragment.
 */
- (void)textWithNSString:(NSString *)str;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

/*!
 @brief Gets the field value or <CODE>null</CODE> if the field does not
  exist or has no value defined.
 @param name the fully qualified field name
 @return the field value or <CODE>null</CODE>
 */
- (NSString *)getFieldValueWithNSString:(NSString *)name;

/*!
 @brief Gets the field values for a list or <CODE>null</CODE> if the field does not
  exist or has no value defined.
 @param name the fully qualified field name
 @return the field values or <CODE>null</CODE>
 @since 2.1.4
 */
- (id<JavaUtilList>)getListValuesWithNSString:(NSString *)name;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfXfdfReader)

FOUNDATION_EXPORT void ComAowagieTextPdfXfdfReader_initPackagePrivate(ComAowagieTextPdfXfdfReader *self);

FOUNDATION_EXPORT ComAowagieTextPdfXfdfReader *new_ComAowagieTextPdfXfdfReader_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfXfdfReader *create_ComAowagieTextPdfXfdfReader_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfXfdfReader)

#endif

#pragma pop_macro("INCLUDE_ALL_XfdfReader")

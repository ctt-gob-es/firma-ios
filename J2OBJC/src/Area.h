//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Area.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Area")
#ifdef RESTRICT_Area
#define INCLUDE_ALL_Area 0
#else
#define INCLUDE_ALL_Area 1
#endif
#undef RESTRICT_Area

#if !defined (HarmonyJavaAwtGeomArea_) && (INCLUDE_ALL_Area || defined(INCLUDE_HarmonyJavaAwtGeomArea))
#define HarmonyJavaAwtGeomArea_

#define RESTRICT_Shape 1
#define INCLUDE_HarmonyJavaAwtShape 1
#include "Shape.h"

@class HarmonyJavaAwtAWTRectangle;
@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomPoint2D;
@class HarmonyJavaAwtGeomRectangle2D;
@protocol HarmonyJavaAwtGeomPathIterator;

@interface HarmonyJavaAwtGeomArea : NSObject < HarmonyJavaAwtShape, NSCopying >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithHarmonyJavaAwtShape:(id<HarmonyJavaAwtShape>)s;

- (void)addWithHarmonyJavaAwtGeomArea:(HarmonyJavaAwtGeomArea *)area;

- (id)java_clone;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)width
                    withDouble:(jdouble)height;

- (jboolean)containsWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p;

- (jboolean)containsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (HarmonyJavaAwtGeomArea *)createTransformedAreaWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (jboolean)equalsWithHarmonyJavaAwtGeomArea:(HarmonyJavaAwtGeomArea *)obj;

- (void)exclusiveOrWithHarmonyJavaAwtGeomArea:(HarmonyJavaAwtGeomArea *)area;

- (HarmonyJavaAwtAWTRectangle *)getBounds;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t
                                                                                withDouble:(jdouble)flatness;

- (void)intersectWithHarmonyJavaAwtGeomArea:(HarmonyJavaAwtGeomArea *)area;

- (jboolean)intersectsWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)width
                      withDouble:(jdouble)height;

- (jboolean)intersectsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (jboolean)isEmpty;

- (jboolean)isPolygonal;

- (jboolean)isRectangular;

- (jboolean)isSingular;

- (void)reset;

- (void)subtractWithHarmonyJavaAwtGeomArea:(HarmonyJavaAwtGeomArea *)area;

- (void)transformWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomArea)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomArea_init(HarmonyJavaAwtGeomArea *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomArea *new_HarmonyJavaAwtGeomArea_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomArea *create_HarmonyJavaAwtGeomArea_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomArea_initWithHarmonyJavaAwtShape_(HarmonyJavaAwtGeomArea *self, id<HarmonyJavaAwtShape> s);

FOUNDATION_EXPORT HarmonyJavaAwtGeomArea *new_HarmonyJavaAwtGeomArea_initWithHarmonyJavaAwtShape_(id<HarmonyJavaAwtShape> s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomArea *create_HarmonyJavaAwtGeomArea_initWithHarmonyJavaAwtShape_(id<HarmonyJavaAwtShape> s);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomArea)

#endif

#pragma pop_macro("INCLUDE_ALL_Area")

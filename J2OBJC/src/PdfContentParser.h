//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfContentParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfContentParser")
#ifdef RESTRICT_PdfContentParser
#define INCLUDE_ALL_PdfContentParser 0
#else
#define INCLUDE_ALL_PdfContentParser 1
#endif
#undef RESTRICT_PdfContentParser

#if !defined (ComAowagieTextPdfPdfContentParser_) && (INCLUDE_ALL_PdfContentParser || defined(INCLUDE_ComAowagieTextPdfPdfContentParser))
#define ComAowagieTextPdfPdfContentParser_

@class ComAowagieTextPdfPRTokeniser;
@class ComAowagieTextPdfPdfObject;
@class JavaUtilArrayList;

/*!
 @brief Parses the page or template content.
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfPdfContentParser : NSObject

#pragma mark Public

/*!
 @brief Creates a new instance of PdfContentParser
 @param tokeniser the tokeniser with the content
 */
- (instancetype)initWithComAowagieTextPdfPRTokeniser:(ComAowagieTextPdfPRTokeniser *)tokeniser;

/*!
 @brief Gets the tokeniser.
 @return the tokeniser.
 */
- (ComAowagieTextPdfPRTokeniser *)getTokeniser;

/*!
 @brief Parses a single command from the content.Each command is output as an array of arguments
  having the command itself as the last element.
 The returned array will be empty if the
  end of content was reached.
 @param ls an  <CODE> ArrayList </CODE>  to use. It will be cleared before using. If it's
    <CODE> null </CODE>  will create a new  <CODE> ArrayList </CODE>
 @return the same <CODE>ArrayList</CODE> given as argument or a new one
 @throw IOExceptionon error
 */
- (JavaUtilArrayList *)parseWithJavaUtilArrayList:(JavaUtilArrayList *)ls;

/*!
 @brief Sets the tokeniser.
 @param tokeniser the tokeniser
 */
- (void)setTokeniserWithComAowagieTextPdfPRTokeniser:(ComAowagieTextPdfPRTokeniser *)tokeniser;

#pragma mark Package-Private

/*!
 @brief Reads a pdf object.
 @return the pdf object
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfObject *)readPRObject;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfContentParser)

/*!
 @brief Commands have this type.
 */
inline jint ComAowagieTextPdfPdfContentParser_get_COMMAND_TYPE(void);
#define ComAowagieTextPdfPdfContentParser_COMMAND_TYPE 200
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfContentParser, COMMAND_TYPE, jint)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfContentParser_initWithComAowagieTextPdfPRTokeniser_(ComAowagieTextPdfPdfContentParser *self, ComAowagieTextPdfPRTokeniser *tokeniser);

FOUNDATION_EXPORT ComAowagieTextPdfPdfContentParser *new_ComAowagieTextPdfPdfContentParser_initWithComAowagieTextPdfPRTokeniser_(ComAowagieTextPdfPRTokeniser *tokeniser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfContentParser *create_ComAowagieTextPdfPdfContentParser_initWithComAowagieTextPdfPRTokeniser_(ComAowagieTextPdfPRTokeniser *tokeniser);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfContentParser)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfContentParser")

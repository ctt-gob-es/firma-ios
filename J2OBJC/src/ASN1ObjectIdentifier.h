//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ASN1ObjectIdentifier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ASN1ObjectIdentifier")
#ifdef RESTRICT_ASN1ObjectIdentifier
#define INCLUDE_ALL_ASN1ObjectIdentifier 0
#else
#define INCLUDE_ALL_ASN1ObjectIdentifier 1
#endif
#undef RESTRICT_ASN1ObjectIdentifier

#if !defined (OrgSpongycastleAsn1ASN1ObjectIdentifier_) && (INCLUDE_ALL_ASN1ObjectIdentifier || defined(INCLUDE_OrgSpongycastleAsn1ASN1ObjectIdentifier))
#define OrgSpongycastleAsn1ASN1ObjectIdentifier_

#define RESTRICT_ASN1Primitive 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Primitive 1
#include "ASN1Primitive.h"

@class IOSByteArray;
@class OrgSpongycastleAsn1ASN1OutputStream;
@class OrgSpongycastleAsn1ASN1TaggedObject;

/*!
 @brief Class representing the ASN.1 OBJECT IDENTIFIER type.
 */
@interface OrgSpongycastleAsn1ASN1ObjectIdentifier : OrgSpongycastleAsn1ASN1Primitive

#pragma mark Public

/*!
 @brief Create an OID based on the passed in String.
 @param identifier a string representation of an OID.
 */
- (instancetype)initWithNSString:(NSString *)identifier;

/*!
 @brief Return an OID that creates a branch under the current one.
 @param branchID node numbers for the new branch.
 @return the OID for the new created branch.
 */
- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)branchWithNSString:(NSString *)branchID;

/*!
 @brief Return the OID as a string.
 @return the string representation of the OID carried by this object.
 */
- (NSString *)getId;

/*!
 @brief Return an OBJECT IDENTIFIER from a tagged object.
 @param obj the tagged object holding the object we want
 @param explicit_ true if the object is meant to be explicitly                  tagged false otherwise.
 @return an ASN1ObjectIdentifier instance, or null.
 @throw IllegalArgumentExceptionif the tagged object cannot
  be converted.
 */
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                    withBoolean:(jboolean)explicit_;

/*!
 @brief Return an OID from the passed in object
 @param obj an ASN1ObjectIdentifier or an object that can be converted into one.
 @return an ASN1ObjectIdentifier instance, or null.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getInstanceWithId:(id)obj;

- (NSUInteger)hash;

/*!
 @brief Intern will return a reference to a pooled version of this object, unless it
  is not present in which case intern will add it.
 <p>
  The pool is also used by the ASN.1 parsers to limit the number of duplicated OID
  objects in circulation. 
 </p>
 @return a reference to the identifier in the pool.
 */
- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)intern;

/*!
 @brief Return true if this oid is an extension of the passed in branch - stem.
 @param stem the arc or branch that is a possible parent.
 @return true if the branch is on the passed in stem, false otherwise.
 */
- (jboolean)onWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)stem;

- (NSString *)description;

#pragma mark Package-Private

/*!
 @brief Create an OID that creates a branch under the current one.
 @param branchID node numbers for the new branch.
 @return the OID for the new created branch.
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                                                   withNSString:(NSString *)branchID;

- (instancetype)initWithByteArray:(IOSByteArray *)bytes;

- (jboolean)asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)o;

- (void)encodeWithOrgSpongycastleAsn1ASN1OutputStream:(OrgSpongycastleAsn1ASN1OutputStream *)outArg;

- (jint)encodedLength;

+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)fromOctetStringWithByteArray:(IOSByteArray *)enc;

- (jboolean)isConstructed;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleAsn1ASN1ObjectIdentifier)

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, IOSByteArray *bytes);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(IOSByteArray *bytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT void OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, NSString *identifier);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier);

FOUNDATION_EXPORT void OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1ASN1ObjectIdentifier_fromOctetStringWithByteArray_(IOSByteArray *enc);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1ASN1ObjectIdentifier)

#endif

#pragma pop_macro("INCLUDE_ALL_ASN1ObjectIdentifier")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jcajce/util/NamedJcaJceHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_NamedJcaJceHelper")
#ifdef RESTRICT_NamedJcaJceHelper
#define INCLUDE_ALL_NamedJcaJceHelper 0
#else
#define INCLUDE_ALL_NamedJcaJceHelper 1
#endif
#undef RESTRICT_NamedJcaJceHelper

#if !defined (OrgSpongycastleJcajceUtilNamedJcaJceHelper_) && (INCLUDE_ALL_NamedJcaJceHelper || defined(INCLUDE_OrgSpongycastleJcajceUtilNamedJcaJceHelper))
#define OrgSpongycastleJcajceUtilNamedJcaJceHelper_

#define RESTRICT_JcaJceHelper 1
#define INCLUDE_OrgSpongycastleJcajceUtilJcaJceHelper 1
#include "JcaJceHelper.h"

@class JavaSecurityAlgorithmParameterGenerator;
@class JavaSecurityAlgorithmParameters;
@class JavaSecurityCertCertificateFactory;
@class JavaSecurityKeyFactory;
@class JavaSecurityKeyPairGenerator;
@class JavaSecurityMessageDigest;
@class JavaSecuritySecureRandom;
@class JavaSecuritySignature;
@class JavaxCryptoCipher;
@class JavaxCryptoKeyAgreement;
@class JavaxCryptoKeyGenerator;
@class JavaxCryptoMac;
@class JavaxCryptoSecretKeyFactory;

/*!
 @brief <code>JcaJceHelper</code> that obtains all algorithms using a specific named provider.
 */
@interface OrgSpongycastleJcajceUtilNamedJcaJceHelper : NSObject < OrgSpongycastleJcajceUtilJcaJceHelper > {
 @public
  NSString *providerName_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)providerName;

- (JavaSecurityAlgorithmParameterGenerator *)createAlgorithmParameterGeneratorWithNSString:(NSString *)algorithm;

- (JavaSecurityAlgorithmParameters *)createAlgorithmParametersWithNSString:(NSString *)algorithm;

- (JavaSecurityCertCertificateFactory *)createCertificateFactoryWithNSString:(NSString *)algorithm;

- (JavaxCryptoCipher *)createCipherWithNSString:(NSString *)algorithm;

- (JavaSecurityMessageDigest *)createDigestWithNSString:(NSString *)algorithm;

- (JavaxCryptoKeyAgreement *)createKeyAgreementWithNSString:(NSString *)algorithm;

- (JavaSecurityKeyFactory *)createKeyFactoryWithNSString:(NSString *)algorithm;

- (JavaxCryptoKeyGenerator *)createKeyGeneratorWithNSString:(NSString *)algorithm;

- (JavaSecurityKeyPairGenerator *)createKeyPairGeneratorWithNSString:(NSString *)algorithm;

- (JavaxCryptoMac *)createMacWithNSString:(NSString *)algorithm;

- (JavaxCryptoSecretKeyFactory *)createSecretKeyFactoryWithNSString:(NSString *)algorithm;

- (JavaSecuritySecureRandom *)createSecureRandomWithNSString:(NSString *)algorithm;

- (JavaSecuritySignature *)createSignatureWithNSString:(NSString *)algorithm;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajceUtilNamedJcaJceHelper)

J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceUtilNamedJcaJceHelper, providerName_, NSString *)

FOUNDATION_EXPORT void OrgSpongycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(OrgSpongycastleJcajceUtilNamedJcaJceHelper *self, NSString *providerName);

FOUNDATION_EXPORT OrgSpongycastleJcajceUtilNamedJcaJceHelper *new_OrgSpongycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(NSString *providerName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajceUtilNamedJcaJceHelper *create_OrgSpongycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(NSString *providerName);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajceUtilNamedJcaJceHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_NamedJcaJceHelper")

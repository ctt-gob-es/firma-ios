//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/util/ECUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ECUtil")
#ifdef RESTRICT_ECUtil
#define INCLUDE_ALL_ECUtil 0
#else
#define INCLUDE_ALL_ECUtil 1
#endif
#undef RESTRICT_ECUtil

#if !defined (OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_) && (INCLUDE_ALL_ECUtil || defined(INCLUDE_OrgSpongycastleJcajceProviderAsymmetricUtilECUtil))
#define OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_

@class IOSIntArray;
@class JavaMathBigInteger;
@class OrgSpongycastleAsn1ASN1ObjectIdentifier;
@class OrgSpongycastleAsn1X9X962Parameters;
@class OrgSpongycastleAsn1X9X9ECParameters;
@class OrgSpongycastleCryptoParamsAsymmetricKeyParameter;
@class OrgSpongycastleCryptoParamsECDomainParameters;
@class OrgSpongycastleJceSpecECParameterSpec;
@class OrgSpongycastleMathEcECPoint;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;
@protocol OrgSpongycastleJcajceProviderConfigProviderConfiguration;

/*!
 @brief utility class for converting jce/jca ECDSA, ECDH, and ECDHC
  objects into their org.spongycastle.crypto counterparts.
 */
@interface OrgSpongycastleJcajceProviderAsymmetricUtilECUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (NSString *)generateKeyFingerprintWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)publicPoint
                           withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)generatePrivateKeyParameterWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key;

+ (OrgSpongycastleCryptoParamsAsymmetricKeyParameter *)generatePublicKeyParameterWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key;

+ (NSString *)getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid;

+ (OrgSpongycastleCryptoParamsECDomainParameters *)getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                         withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)params;

+ (OrgSpongycastleCryptoParamsECDomainParameters *)getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                           withOrgSpongycastleAsn1X9X962Parameters:(OrgSpongycastleAsn1X9X962Parameters *)params;

+ (OrgSpongycastleAsn1X9X9ECParameters *)getNamedCurveByNameWithNSString:(NSString *)curveName;

+ (OrgSpongycastleAsn1X9X9ECParameters *)getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid;

+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getNamedCurveOidWithOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)ecParameterSpec;

+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getNamedCurveOidWithNSString:(NSString *)curveName;

+ (jint)getOrderBitLengthWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)order
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)privateValue;

+ (NSString *)privateKeyToStringWithNSString:(NSString *)algorithm
                      withJavaMathBigInteger:(JavaMathBigInteger *)d
   withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec;

+ (NSString *)publicKeyToStringWithNSString:(NSString *)algorithm
           withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)q
  withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec;

#pragma mark Package-Private

/*!
 @brief Returns a sorted array of middle terms of the reduction polynomial.
 @param k The unsorted array of middle terms of the reduction polynomial  of length 1 or 3.
 @return the sorted array of middle terms of the reduction polynomial.
  This array always has length 3.
 */
+ (IOSIntArray *)convertMidTermsWithIntArray:(IOSIntArray *)k;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil)

FOUNDATION_EXPORT void OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_init(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil *self);

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricUtilECUtil *new_OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricUtilECUtil *create_OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_init(void);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_convertMidTermsWithIntArray_(IOSIntArray *k);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsECDomainParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleJceSpecECParameterSpec_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, OrgSpongycastleJceSpecECParameterSpec *params);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsECDomainParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleAsn1X9X962Parameters_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, OrgSpongycastleAsn1X9X962Parameters *params);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePublicKeyParameterWithJavaSecurityPublicKey_(id<JavaSecurityPublicKey> key);

FOUNDATION_EXPORT OrgSpongycastleCryptoParamsAsymmetricKeyParameter *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generatePrivateKeyParameterWithJavaSecurityPrivateKey_(id<JavaSecurityPrivateKey> key);

FOUNDATION_EXPORT jint OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getOrderBitLengthWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withJavaMathBigInteger_withJavaMathBigInteger_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, JavaMathBigInteger *order, JavaMathBigInteger *privateValue);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveOidWithNSString_(NSString *curveName);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveOidWithOrgSpongycastleJceSpecECParameterSpec_(OrgSpongycastleJceSpecECParameterSpec *ecParameterSpec);

FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParameters *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByNameWithNSString_(NSString *curveName);

FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_privateKeyToStringWithNSString_withJavaMathBigInteger_withOrgSpongycastleJceSpecECParameterSpec_(NSString *algorithm, JavaMathBigInteger *d, OrgSpongycastleJceSpecECParameterSpec *spec);

FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_publicKeyToStringWithNSString_withOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(NSString *algorithm, OrgSpongycastleMathEcECPoint *q, OrgSpongycastleJceSpecECParameterSpec *spec);

FOUNDATION_EXPORT NSString *OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_generateKeyFingerprintWithOrgSpongycastleMathEcECPoint_withOrgSpongycastleJceSpecECParameterSpec_(OrgSpongycastleMathEcECPoint *publicPoint, OrgSpongycastleJceSpecECParameterSpec *spec);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_ECUtil")

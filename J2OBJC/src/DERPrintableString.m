//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/DERPrintableString.java
//

#include "ASN1OctetString.h"
#include "ASN1OutputStream.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "Arrays.h"
#include "BERTags.h"
#include "DERPrintableString.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "StreamUtil.h"
#include "Strings.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "DERPrintableString must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1DERPrintableString () {
 @public
  IOSByteArray *string_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1DERPrintableString, string_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/DERPrintableString.java"


#line 34
@implementation OrgSpongycastleAsn1DERPrintableString


#line 47
+ (OrgSpongycastleAsn1DERPrintableString *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1DERPrintableString_getInstanceWithId_(obj);
}


#line 80
+ (OrgSpongycastleAsn1DERPrintableString *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                  withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1DERPrintableString_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 99
- (instancetype)initWithByteArray:(IOSByteArray *)string {
  OrgSpongycastleAsn1DERPrintableString_initWithByteArray_(self, string);
  return self;
}


#line 108
- (instancetype)initWithNSString:(NSString *)string {
  OrgSpongycastleAsn1DERPrintableString_initWithNSString_(self, string);
  return self;
}


#line 122
- (instancetype)initWithNSString:(NSString *)string
                     withBoolean:(jboolean)validate {
  OrgSpongycastleAsn1DERPrintableString_initWithNSString_withBoolean_(self, string, validate);
  return self;
}


#line 134
- (NSString *)getString {
  
#line 136
  return OrgSpongycastleUtilStrings_fromByteArrayWithByteArray_(string_);
}


#line 139
- (IOSByteArray *)getOctets {
  
#line 141
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(string_);
}


#line 144
- (jboolean)isConstructed {
  
#line 146
  return false;
}


#line 149
- (jint)encodedLength {
  
#line 151
  return 1 + OrgSpongycastleAsn1StreamUtil_calculateBodyLengthWithInt_(((IOSByteArray *) nil_chk(string_))->size_) + string_->size_;
}


#line 154
- (void)encodeWithOrgSpongycastleAsn1ASN1OutputStream:(OrgSpongycastleAsn1ASN1OutputStream *)outArg {
  
#line 158
  [((OrgSpongycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodedWithInt:OrgSpongycastleAsn1BERTags_PRINTABLE_STRING withByteArray:string_];
}


#line 161
- (NSUInteger)hash {
  
#line 163
  return OrgSpongycastleUtilArrays_hashCodeWithByteArray_(string_);
}


#line 166
- (jboolean)asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)o {
  
#line 169
  if (!([o isKindOfClass:[OrgSpongycastleAsn1DERPrintableString class]])) {
    
#line 171
    return false;
  }
  
#line 174
  OrgSpongycastleAsn1DERPrintableString *s = (OrgSpongycastleAsn1DERPrintableString *) cast_chk(o, [OrgSpongycastleAsn1DERPrintableString class]);
  
#line 176
  return OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(string_, ((OrgSpongycastleAsn1DERPrintableString *) nil_chk(s))->string_);
}


#line 179
- (NSString *)description {
  
#line 181
  return [self getString];
}


#line 190
+ (jboolean)isPrintableStringWithNSString:(NSString *)str {
  return OrgSpongycastleAsn1DERPrintableString_isPrintableStringWithNSString_(str);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1DERPrintableString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERPrintableString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 7, 8, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 13, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithNSString:);
  methods[4].selector = @selector(initWithNSString:withBoolean:);
  methods[5].selector = @selector(getString);
  methods[6].selector = @selector(getOctets);
  methods[7].selector = @selector(isConstructed);
  methods[8].selector = @selector(encodedLength);
  methods[9].selector = @selector(encodeWithOrgSpongycastleAsn1ASN1OutputStream:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:);
  methods[12].selector = @selector(description);
  methods[13].selector = @selector(isPrintableStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "string_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "[B", "LNSString;", "LNSString;Z", "encode", "LOrgSpongycastleAsn1ASN1OutputStream;", "LJavaIoIOException;", "hashCode", "asn1Equals", "LOrgSpongycastleAsn1ASN1Primitive;", "toString", "isPrintableString" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1DERPrintableString = { "DERPrintableString", "org.spongycastle.asn1", ptrTable, methods, fields, 7, 0x1, 14, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1DERPrintableString;
}

@end


#line 47
OrgSpongycastleAsn1DERPrintableString *OrgSpongycastleAsn1DERPrintableString_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1DERPrintableString_initialize();
  
#line 50
  if (obj == nil || [obj isKindOfClass:[OrgSpongycastleAsn1DERPrintableString class]]) {
    
#line 52
    return (OrgSpongycastleAsn1DERPrintableString *) cast_chk(obj, [OrgSpongycastleAsn1DERPrintableString class]);
  }
  
#line 55
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 57
    @try {
      
#line 59
      return (OrgSpongycastleAsn1DERPrintableString *) cast_chk(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) cast_chk(obj, [IOSByteArray class])), [OrgSpongycastleAsn1DERPrintableString class]);
    }
    @catch (JavaLangException *e) {
      
#line 63
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"encoding error in getInstance: ", [e description]));
    }
  }
  
#line 67
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 80
OrgSpongycastleAsn1DERPrintableString *OrgSpongycastleAsn1DERPrintableString_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1DERPrintableString_initialize();
  
#line 84
  OrgSpongycastleAsn1ASN1Primitive *o = [((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject];
  
#line 86
  if (explicit_ || [o isKindOfClass:[OrgSpongycastleAsn1DERPrintableString class]]) {
    
#line 88
    return OrgSpongycastleAsn1DERPrintableString_getInstanceWithId_(o);
  }
  else {
    
#line 92
    return new_OrgSpongycastleAsn1DERPrintableString_initWithByteArray_([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_(o))) getOctets]);
  }
}

void OrgSpongycastleAsn1DERPrintableString_initWithByteArray_(OrgSpongycastleAsn1DERPrintableString *self, IOSByteArray *string) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  
#line 102
  self->string_ = string;
}


#line 99
OrgSpongycastleAsn1DERPrintableString *new_OrgSpongycastleAsn1DERPrintableString_initWithByteArray_(IOSByteArray *string) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1DERPrintableString, initWithByteArray_, string)
}


#line 99
OrgSpongycastleAsn1DERPrintableString *create_OrgSpongycastleAsn1DERPrintableString_initWithByteArray_(IOSByteArray *string) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1DERPrintableString, initWithByteArray_, string)
}


#line 108
void OrgSpongycastleAsn1DERPrintableString_initWithNSString_(OrgSpongycastleAsn1DERPrintableString *self, NSString *string) {
  OrgSpongycastleAsn1DERPrintableString_initWithNSString_withBoolean_(self,
#line 111
  string, false);
}


#line 108
OrgSpongycastleAsn1DERPrintableString *new_OrgSpongycastleAsn1DERPrintableString_initWithNSString_(NSString *string) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1DERPrintableString, initWithNSString_, string)
}


#line 108
OrgSpongycastleAsn1DERPrintableString *create_OrgSpongycastleAsn1DERPrintableString_initWithNSString_(NSString *string) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1DERPrintableString, initWithNSString_, string)
}


#line 122
void OrgSpongycastleAsn1DERPrintableString_initWithNSString_withBoolean_(OrgSpongycastleAsn1DERPrintableString *self, NSString *string, jboolean validate) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  
#line 126
  if (validate && !OrgSpongycastleAsn1DERPrintableString_isPrintableStringWithNSString_(string)) {
    
#line 128
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"string contains illegal characters");
  }
  
#line 131
  self->string_ = OrgSpongycastleUtilStrings_toByteArrayWithNSString_(string);
}


#line 122
OrgSpongycastleAsn1DERPrintableString *new_OrgSpongycastleAsn1DERPrintableString_initWithNSString_withBoolean_(NSString *string, jboolean validate) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1DERPrintableString, initWithNSString_withBoolean_, string, validate)
}


#line 122
OrgSpongycastleAsn1DERPrintableString *create_OrgSpongycastleAsn1DERPrintableString_initWithNSString_withBoolean_(NSString *string, jboolean validate) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1DERPrintableString, initWithNSString_withBoolean_, string, validate)
}


#line 190
jboolean OrgSpongycastleAsn1DERPrintableString_isPrintableStringWithNSString_(NSString *str) {
  OrgSpongycastleAsn1DERPrintableString_initialize();
  
#line 193
  for (jint i = [((NSString *) nil_chk(str)) java_length] - 1; i >= 0; i--) {
    
#line 195
    jchar ch = [str charAtWithInt:i];
    
#line 197
    if (ch > (jint) 0x007f) {
      
#line 199
      return false;
    }
    
#line 202
    if ('a' <= ch && ch <= 'z') {
      
#line 204
      continue;
    }
    
#line 207
    if ('A' <= ch && ch <= 'Z') {
      
#line 209
      continue;
    }
    
#line 212
    if ('0' <= ch && ch <= '9') {
      
#line 214
      continue;
    }
    
#line 217
    switch (ch) {
      
#line 219
      case ' ':
      case '\'':
      case '(':
      case ')':
      case '+':
      case '-':
      case '.':
      case ':':
      case '=':
      case '?':
      case '/':
      case ',':
      continue;
    }
    
#line 234
    return false;
  }
  
#line 237
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1DERPrintableString)

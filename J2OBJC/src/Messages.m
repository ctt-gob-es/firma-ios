//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/Messages.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "Messages.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/util/Locale.h"
#include "java/util/MissingResourceException.h"
#include "java/util/ResourceBundle.h"

#if !__has_feature(objc_arc)
#error "Messages must be compiled with ARC (-fobjc-arc)"
#endif

inline JavaUtilResourceBundle *ComMessages_get_bundle(void);
inline JavaUtilResourceBundle *ComMessages_set_bundle(JavaUtilResourceBundle *value);
static JavaUtilResourceBundle *ComMessages_bundle;
J2OBJC_STATIC_FIELD_OBJ(ComMessages, bundle, JavaUtilResourceBundle *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/Messages.java"

J2OBJC_INITIALIZED_DEFN(ComMessages)


#line 46
@implementation ComMessages

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 46
- (instancetype)init {
  ComMessages_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 58
+ (NSString *)getStringWithNSString:(NSString *)msg {
  return ComMessages_getStringWithNSString_(msg);
}


#line 77
+ (NSString *)getStringWithNSString:(NSString *)msg
                             withId:(id)arg {
  return ComMessages_getStringWithNSString_withId_(msg, arg);
}


#line 90
+ (NSString *)getStringWithNSString:(NSString *)msg
                            withInt:(jint)arg {
  return ComMessages_getStringWithNSString_withInt_(msg, arg);
}


#line 103
+ (NSString *)getStringWithNSString:(NSString *)msg
                           withChar:(jchar)arg {
  return ComMessages_getStringWithNSString_withChar_(msg, arg);
}


#line 118
+ (NSString *)getStringWithNSString:(NSString *)msg
                             withId:(id)arg1
                             withId:(id)arg2 {
  return ComMessages_getStringWithNSString_withId_withId_(msg, arg1, arg2);
}


#line 131
+ (NSString *)getStringWithNSString:(NSString *)msg
                  withNSObjectArray:(IOSObjectArray *)args {
  return ComMessages_getStringWithNSString_withNSObjectArray_(msg, args);
}


#line 160
+ (NSString *)formatWithNSString:(NSString *)format
               withNSObjectArray:(IOSObjectArray *)args {
  return ComMessages_formatWithNSString_withNSObjectArray_(format, args);
}


#line 213
+ (JavaUtilResourceBundle *)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale
                                           withNSString:(NSString *)resource {
  return ComMessages_setLocaleWithJavaUtilLocale_withNSString_(locale, resource);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 7, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilResourceBundle;", 0x9, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getStringWithNSString:);
  methods[2].selector = @selector(getStringWithNSString:withId:);
  methods[3].selector = @selector(getStringWithNSString:withInt:);
  methods[4].selector = @selector(getStringWithNSString:withChar:);
  methods[5].selector = @selector(getStringWithNSString:withId:withId:);
  methods[6].selector = @selector(getStringWithNSString:withNSObjectArray:);
  methods[7].selector = @selector(formatWithNSString:withNSObjectArray:);
  methods[8].selector = @selector(setLocaleWithJavaUtilLocale:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bundle", "LJavaUtilResourceBundle;", .constantValue.asLong = 0, 0xa, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "getString", "LNSString;", "LNSString;LNSObject;", "LNSString;I", "LNSString;C", "LNSString;LNSObject;LNSObject;", "LNSString;[LNSObject;", "format", "setLocale", "LJavaUtilLocale;LNSString;", &ComMessages_bundle };
  static const J2ObjcClassInfo _ComMessages = { "Messages", "com", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, -1, -1, -1, -1 };
  return &_ComMessages;
}

+ (void)initialize {
  if (self == [ComMessages class]) {
    {
      
#line 219
      @try {
        ComMessages_bundle = ComMessages_setLocaleWithJavaUtilLocale_withNSString_(JavaUtilLocale_getDefault(), @"org.apache.harmony.awt.internal.nls.messages");
      }
      @catch (
#line 221
      JavaLangThrowable *e) {
        [e printStackTrace];
      }
    }
    J2OBJC_SET_INITIALIZED(ComMessages)
  }
}

@end


#line 46
void ComMessages_init(ComMessages *self) {
  NSObject_init(self);
}


#line 46
ComMessages *new_ComMessages_init() {
  J2OBJC_NEW_IMPL(ComMessages, init)
}


#line 46
ComMessages *create_ComMessages_init() {
  J2OBJC_CREATE_IMPL(ComMessages, init)
}


#line 58
NSString *ComMessages_getStringWithNSString_(NSString *msg) {
  ComMessages_initialize();
  
#line 59
  if (ComMessages_bundle == nil)
#line 60
  return msg;
  @try {
    return [ComMessages_bundle getStringWithNSString:msg];
  }
  @catch (
#line 63
  JavaUtilMissingResourceException *e) {
    return JreStrcat("$$", @"Missing message: ", msg);
  }
}


#line 77
NSString *ComMessages_getStringWithNSString_withId_(NSString *msg, id arg) {
  ComMessages_initialize();
  
#line 78
  return ComMessages_getStringWithNSString_withNSObjectArray_(msg, [IOSObjectArray newArrayWithObjects:(id[]){ arg } count:1 type:NSObject_class_()]);
}


#line 90
NSString *ComMessages_getStringWithNSString_withInt_(NSString *msg, jint arg) {
  ComMessages_initialize();
  
#line 91
  return ComMessages_getStringWithNSString_withNSObjectArray_(msg, [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_toStringWithInt_(arg) } count:1 type:NSObject_class_()]);
}


#line 103
NSString *ComMessages_getStringWithNSString_withChar_(NSString *msg, jchar arg) {
  ComMessages_initialize();
  
#line 104
  return ComMessages_getStringWithNSString_withNSObjectArray_(msg, [IOSObjectArray newArrayWithObjects:(id[]){ NSString_java_valueOfChar_(arg) } count:1 type:NSObject_class_()]);
}


#line 118
NSString *ComMessages_getStringWithNSString_withId_withId_(NSString *msg, id arg1, id arg2) {
  ComMessages_initialize();
  
#line 119
  return ComMessages_getStringWithNSString_withNSObjectArray_(msg, [IOSObjectArray newArrayWithObjects:(id[]){ arg1, arg2 } count:2 type:NSObject_class_()]);
}


#line 131
NSString *ComMessages_getStringWithNSString_withNSObjectArray_(NSString *msg, IOSObjectArray *args) {
  ComMessages_initialize();
  
#line 132
  NSString *format = msg;
  
#line 134
  if (ComMessages_bundle != nil) {
    @try {
      format = [ComMessages_bundle getStringWithNSString:msg];
    }
    @catch (
#line 137
    JavaUtilMissingResourceException *e) {
    }
  }
  
#line 141
  return ComMessages_formatWithNSString_withNSObjectArray_(format, args);
}


#line 160
NSString *ComMessages_formatWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args) {
  ComMessages_initialize();
  
#line 161
  JavaLangStringBuilder *answer = new_JavaLangStringBuilder_initWithInt_([((NSString *) nil_chk(format)) java_length] + (((IOSObjectArray *) nil_chk(args))->size_ * 20));
  IOSObjectArray *argStrings = [IOSObjectArray newArrayWithLength:args->size_ type:NSString_class_()];
  for (jint i = 0; i < args->size_; ++i) {
    if (IOSObjectArray_Get(args, i) == nil)
#line 165
    (void) IOSObjectArray_Set(argStrings, i, @"<null>");
    else
#line 167
    (void) IOSObjectArray_Set(argStrings, i, [nil_chk(IOSObjectArray_Get(args, i)) description]);
  }
  jint lastI = 0;
  for (jint i = [format java_indexOf:'{' fromIndex:0]; i >= 0; i = [format java_indexOf:'{' fromIndex:lastI]) {
    if (i != 0 && [format charAtWithInt:i - 1] == '\\') {
      
#line 173
      if (i != 1)
#line 174
      (void) [answer appendWithNSString:[format java_substring:lastI endIndex:i - 1]];
      (void) [answer appendWithChar:'{'];
      lastI = i + 1;
    }
    else {
      if (i > [format java_length] - 3) {
        
#line 181
        (void) [answer appendWithNSString:[format java_substring:lastI endIndex:[format java_length]]];
        lastI = [format java_length];
      }
      else {
        
#line 184
        jint argnum = (jbyte) JavaLangCharacter_digitWithChar_withInt_([format charAtWithInt:i + 1], 10);
        if (argnum < 0 || [format charAtWithInt:i + 2] != '}') {
          
#line 187
          (void) [answer appendWithNSString:[format java_substring:lastI endIndex:i + 1]];
          lastI = i + 1;
        }
        else {
          (void) [answer appendWithNSString:[format java_substring:lastI endIndex:i]];
          if (argnum >= argStrings->size_)
#line 193
          (void) [answer appendWithNSString:@"<missing argument>"];
          else
#line 195
          (void) [answer appendWithNSString:IOSObjectArray_Get(argStrings, argnum)];
          lastI = i + 3;
        }
      }
    }
  }
  if (lastI < [format java_length])
#line 202
  (void) [answer appendWithNSString:[format java_substring:lastI endIndex:[format java_length]]];
  return [answer description];
}


#line 213
JavaUtilResourceBundle *ComMessages_setLocaleWithJavaUtilLocale_withNSString_(JavaUtilLocale *locale, NSString *resource) {
  ComMessages_initialize();
  
#line 214
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComMessages)

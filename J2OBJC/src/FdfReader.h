//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/FdfReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FdfReader")
#ifdef RESTRICT_FdfReader
#define INCLUDE_ALL_FdfReader 0
#else
#define INCLUDE_ALL_FdfReader 1
#endif
#undef RESTRICT_FdfReader

#if !defined (ComAowagieTextPdfFdfReader_) && (INCLUDE_ALL_FdfReader || defined(INCLUDE_ComAowagieTextPdfFdfReader))
#define ComAowagieTextPdfFdfReader_

#define RESTRICT_PdfReader 1
#define INCLUDE_ComAowagieTextPdfPdfReader 1
#include "PdfReader.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaSecurityCertCertificate;
@class JavaUtilHashMap;
@protocol JavaSecurityKey;

/*!
 @brief Reads an FDF form and makes the fields available
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfFdfReader : ComAowagieTextPdfPdfReader

#pragma mark Public

/*!
 @brief Gets all the fields.The map is keyed by the fully qualified
  field name and the value is a merged <CODE>PdfDictionary</CODE>
  with the field content.
 @return all the fields
 */
- (JavaUtilHashMap *)getFields;

/*!
 @brief Gets the PDF file specification contained in the FDF.
 @return the PDF file specification contained in the FDF
 */
- (NSString *)getFileSpec;

#pragma mark Protected

- (void)readPdf;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

/*!
 @brief Gets the field value or <CODE>null</CODE> if the field does not
  exist or has no value defined.
 @param name the fully qualified field name
 @return the field value or <CODE>null</CODE>
 */
- (NSString *)getFieldValueWithNSString:(NSString *)name;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithByteArray:(IOSByteArray *)arg0
                    withByteArray:(IOSByteArray *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
 withJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)arg1
             withJavaSecurityKey:(id<JavaSecurityKey>)arg2
                    withNSString:(NSString *)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfFdfReader)

FOUNDATION_EXPORT void ComAowagieTextPdfFdfReader_initPackagePrivate(ComAowagieTextPdfFdfReader *self);

FOUNDATION_EXPORT ComAowagieTextPdfFdfReader *new_ComAowagieTextPdfFdfReader_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfFdfReader *create_ComAowagieTextPdfFdfReader_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfFdfReader)

#endif

#pragma pop_macro("INCLUDE_ALL_FdfReader")

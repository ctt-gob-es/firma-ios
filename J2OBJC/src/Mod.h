//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/math/raw/Mod.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Mod")
#ifdef RESTRICT_Mod
#define INCLUDE_ALL_Mod 0
#else
#define INCLUDE_ALL_Mod 1
#endif
#undef RESTRICT_Mod

#if !defined (OrgSpongycastleMathRawMod_) && (INCLUDE_ALL_Mod || defined(INCLUDE_OrgSpongycastleMathRawMod))
#define OrgSpongycastleMathRawMod_

@class IOSIntArray;

@interface OrgSpongycastleMathRawMod : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)addWithIntArray:(IOSIntArray *)p
           withIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z;

+ (jint)inverse32WithInt:(jint)d;

+ (void)invertWithIntArray:(IOSIntArray *)p
              withIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (IOSIntArray *)randomWithIntArray:(IOSIntArray *)p;

+ (void)subtractWithIntArray:(IOSIntArray *)p
                withIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleMathRawMod)

FOUNDATION_EXPORT void OrgSpongycastleMathRawMod_init(OrgSpongycastleMathRawMod *self);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawMod_inverse32WithInt_(jint d);

FOUNDATION_EXPORT void OrgSpongycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(IOSIntArray *p, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleMathRawMod_randomWithIntArray_(IOSIntArray *p);

FOUNDATION_EXPORT void OrgSpongycastleMathRawMod_addWithIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *p, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathRawMod_subtractWithIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *p, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathRawMod)

#endif

#pragma pop_macro("INCLUDE_ALL_Mod")

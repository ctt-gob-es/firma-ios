//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/gm/GMNamedCurves.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GMNamedCurves")
#ifdef RESTRICT_GMNamedCurves
#define INCLUDE_ALL_GMNamedCurves 0
#else
#define INCLUDE_ALL_GMNamedCurves 1
#endif
#undef RESTRICT_GMNamedCurves

#if !defined (OrgSpongycastleAsn1GmGMNamedCurves_) && (INCLUDE_ALL_GMNamedCurves || defined(INCLUDE_OrgSpongycastleAsn1GmGMNamedCurves))
#define OrgSpongycastleAsn1GmGMNamedCurves_

@class JavaUtilHashtable;
@class OrgSpongycastleAsn1ASN1ObjectIdentifier;
@class OrgSpongycastleAsn1X9X9ECParameters;
@class OrgSpongycastleAsn1X9X9ECParametersHolder;
@protocol JavaUtilEnumeration;

/*!
 @brief Chinese standard GM named curves.
 */
@interface OrgSpongycastleAsn1GmGMNamedCurves : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgSpongycastleAsn1X9X9ECParameters *)getByNameWithNSString:(NSString *)name;

/*!
 @brief return the X9ECParameters object for the named curve represented by
  the passed in object identifier.Null if the curve isn't present.
 @param oid an object identifier representing a named curve, if present.
 */
+ (OrgSpongycastleAsn1X9X9ECParameters *)getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid;

/*!
 @brief return the named curve name represented by the given object identifier.
 */
+ (NSString *)getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid;

/*!
 @brief returns an enumeration containing the name strings for curves
  contained in this structure.
 */
+ (id<JavaUtilEnumeration>)getNames;

/*!
 @brief return the object identifier signified by the passed in name.Null
  if there is no object identifier associated with name.
 @return the object identifier associated with name, if present.
 */
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name;

#pragma mark Package-Private

+ (void)defineCurveWithNSString:(NSString *)name
withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
withOrgSpongycastleAsn1X9X9ECParametersHolder:(OrgSpongycastleAsn1X9X9ECParametersHolder *)holder;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleAsn1GmGMNamedCurves)

inline OrgSpongycastleAsn1X9X9ECParametersHolder *OrgSpongycastleAsn1GmGMNamedCurves_get_sm2p256v1(void);
inline OrgSpongycastleAsn1X9X9ECParametersHolder *OrgSpongycastleAsn1GmGMNamedCurves_set_sm2p256v1(OrgSpongycastleAsn1X9X9ECParametersHolder *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParametersHolder *OrgSpongycastleAsn1GmGMNamedCurves_sm2p256v1;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleAsn1GmGMNamedCurves, sm2p256v1, OrgSpongycastleAsn1X9X9ECParametersHolder *)

inline OrgSpongycastleAsn1X9X9ECParametersHolder *OrgSpongycastleAsn1GmGMNamedCurves_get_wapip192v1(void);
inline OrgSpongycastleAsn1X9X9ECParametersHolder *OrgSpongycastleAsn1GmGMNamedCurves_set_wapip192v1(OrgSpongycastleAsn1X9X9ECParametersHolder *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParametersHolder *OrgSpongycastleAsn1GmGMNamedCurves_wapip192v1;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleAsn1GmGMNamedCurves, wapip192v1, OrgSpongycastleAsn1X9X9ECParametersHolder *)

inline JavaUtilHashtable *OrgSpongycastleAsn1GmGMNamedCurves_get_objIds(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *OrgSpongycastleAsn1GmGMNamedCurves_objIds;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1GmGMNamedCurves, objIds, JavaUtilHashtable *)

inline JavaUtilHashtable *OrgSpongycastleAsn1GmGMNamedCurves_get_curves(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *OrgSpongycastleAsn1GmGMNamedCurves_curves;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1GmGMNamedCurves, curves, JavaUtilHashtable *)

inline JavaUtilHashtable *OrgSpongycastleAsn1GmGMNamedCurves_get_names(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilHashtable *OrgSpongycastleAsn1GmGMNamedCurves_names;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1GmGMNamedCurves, names, JavaUtilHashtable *)

FOUNDATION_EXPORT void OrgSpongycastleAsn1GmGMNamedCurves_init(OrgSpongycastleAsn1GmGMNamedCurves *self);

FOUNDATION_EXPORT OrgSpongycastleAsn1GmGMNamedCurves *new_OrgSpongycastleAsn1GmGMNamedCurves_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1GmGMNamedCurves *create_OrgSpongycastleAsn1GmGMNamedCurves_init(void);

FOUNDATION_EXPORT void OrgSpongycastleAsn1GmGMNamedCurves_defineCurveWithNSString_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1X9X9ECParametersHolder_(NSString *name, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, OrgSpongycastleAsn1X9X9ECParametersHolder *holder);

FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParameters *OrgSpongycastleAsn1GmGMNamedCurves_getByNameWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgSpongycastleAsn1X9X9ECParameters *OrgSpongycastleAsn1GmGMNamedCurves_getByOIDWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1GmGMNamedCurves_getOIDWithNSString_(NSString *name);

FOUNDATION_EXPORT NSString *OrgSpongycastleAsn1GmGMNamedCurves_getNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT id<JavaUtilEnumeration> OrgSpongycastleAsn1GmGMNamedCurves_getNames(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1GmGMNamedCurves)

#endif

#pragma pop_macro("INCLUDE_ALL_GMNamedCurves")

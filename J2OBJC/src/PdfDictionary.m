//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfDictionary.java
//

#include "J2ObjC_source.h"
#include "PdfArray.h"
#include "PdfBoolean.h"
#include "PdfDictionary.h"
#include "PdfIndirectReference.h"
#include "PdfName.h"
#include "PdfNumber.h"
#include "PdfObject.h"
#include "PdfReader.h"
#include "PdfString.h"
#include "PdfWriter.h"
#include "java/io/OutputStream.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Set.h"

#if !__has_feature(objc_arc)
#error "PdfDictionary must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfDictionary () {
 @public
  /*!
   @brief This is the type of this dictionary
   */
  ComAowagieTextPdfPdfName *dictionaryType_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfDictionary, dictionaryType_, ComAowagieTextPdfPdfName *)

/*!
 @brief This is a possible type of dictionary
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfDictionary_get_FONT(void);
static ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfDictionary_FONT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfDictionary, FONT, ComAowagieTextPdfPdfName *)

/*!
 @brief This is a possible type of dictionary
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfDictionary_get_PAGES(void);
static ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfDictionary_PAGES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfDictionary, PAGES, ComAowagieTextPdfPdfName *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfDictionary.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfPdfDictionary)

ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfDictionary_OUTLINES;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfDictionary_PAGE;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfDictionary_CATALOG;


#line 79
@implementation ComAowagieTextPdfPdfDictionary

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 111
- (instancetype)init {
  ComAowagieTextPdfPdfDictionary_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 121
- (instancetype)initWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)type {
  ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(self, type);
  return self;
}


#line 137
- (void)toPdfWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withJavaIoOutputStream:(JavaIoOutputStream *)os {
  [((JavaIoOutputStream *) nil_chk(os)) writeWithInt:'<'];
  [os writeWithInt:'<'];
  
#line 142
  ComAowagieTextPdfPdfName *key;
  ComAowagieTextPdfPdfObject *value;
  jint type = 0;
  for (id __strong element in nil_chk([((JavaUtilHashMap *) nil_chk(self->hashMap_)) keySet])) {
    key = (ComAowagieTextPdfPdfName *) cast_chk(element, [ComAowagieTextPdfPdfName class]);
    value = [((JavaUtilHashMap *) nil_chk(self->hashMap_)) getWithId:key];
    [((ComAowagieTextPdfPdfName *) nil_chk(key)) toPdfWithComAowagieTextPdfPdfWriter:writer withJavaIoOutputStream:os];
    type = [((ComAowagieTextPdfPdfObject *) nil_chk(value)) type];
    if (type != ComAowagieTextPdfPdfObject_ARRAY && type != ComAowagieTextPdfPdfObject_DICTIONARY && type != ComAowagieTextPdfPdfObject_NAME && type != ComAowagieTextPdfPdfObject_STRING) {
      [os writeWithInt:' '];
    }
    [value toPdfWithComAowagieTextPdfPdfWriter:writer withJavaIoOutputStream:os];
  }
  [os writeWithInt:'>'];
  [os writeWithInt:'>'];
}


#line 169
- (NSString *)description {
  
#line 171
  if ([self getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE)] == nil) {
    return @"Dictionary";
  }
  return JreStrcat("$@", @"Dictionary of type: ", [self getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE)]);
}


#line 191
- (void)putWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
         withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object {
  
#line 192
  if (object == nil || [object isNull]) {
    (void) [((JavaUtilHashMap *) nil_chk(self->hashMap_)) removeWithId:key];
  }
  else {
    
#line 195
    (void) [((JavaUtilHashMap *) nil_chk(self->hashMap_)) putWithId:key withId:object];
  }
}


#line 211
- (void)putAllWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic {
  [((JavaUtilHashMap *) nil_chk(self->hashMap_)) putAllWithJavaUtilMap:((ComAowagieTextPdfPdfDictionary *) nil_chk(dic))->hashMap_];
}


#line 221
- (void)removeWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  (void) [((JavaUtilHashMap *) nil_chk(self->hashMap_)) removeWithId:key];
}


#line 233
- (ComAowagieTextPdfPdfObject *)getWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  return [((JavaUtilHashMap *) nil_chk(self->hashMap_)) getWithId:key];
}


#line 248
- (ComAowagieTextPdfPdfObject *)getDirectObjectWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  return ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_([self getWithComAowagieTextPdfPdfName:key]);
}


#line 257
- (id<JavaUtilSet>)getKeys {
  return [((JavaUtilHashMap *) nil_chk(self->hashMap_)) keySet];
}


#line 268
- (jint)size {
  return [((JavaUtilHashMap *) nil_chk(self->hashMap_)) size];
}


#line 278
- (jboolean)containsWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  return [((JavaUtilHashMap *) nil_chk(self->hashMap_)) containsKeyWithId:key];
}


#line 289
- (jboolean)isFont {
  return [((ComAowagieTextPdfPdfName *) nil_chk(ComAowagieTextPdfPdfDictionary_FONT)) isEqual:self->dictionaryType_];
}


#line 298
- (jboolean)isPage {
  return [((ComAowagieTextPdfPdfName *) nil_chk(ComAowagieTextPdfPdfDictionary_PAGE)) isEqual:self->dictionaryType_];
}


#line 307
- (jboolean)isPages {
  return [((ComAowagieTextPdfPdfName *) nil_chk(ComAowagieTextPdfPdfDictionary_PAGES)) isEqual:self->dictionaryType_];
}


#line 316
- (jboolean)isCatalog {
  return [((ComAowagieTextPdfPdfName *) nil_chk(ComAowagieTextPdfPdfDictionary_CATALOG)) isEqual:self->dictionaryType_];
}


#line 325
- (jboolean)isOutlineTree {
  return [((ComAowagieTextPdfPdfName *) nil_chk(ComAowagieTextPdfPdfDictionary_OUTLINES)) isEqual:self->dictionaryType_];
}


#line 331
- (void)mergeWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)other {
  [((JavaUtilHashMap *) nil_chk(self->hashMap_)) putAllWithJavaUtilMap:((ComAowagieTextPdfPdfDictionary *) nil_chk(other))->hashMap_];
}

- (void)mergeDifferentWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)other {
  for (ComAowagieTextPdfPdfName * __strong key in nil_chk([((JavaUtilHashMap *) nil_chk(((ComAowagieTextPdfPdfDictionary *) nil_chk(other))->hashMap_)) keySet])) {
    if (![((JavaUtilHashMap *) nil_chk(self->hashMap_)) containsKeyWithId:key]) {
      (void) [((JavaUtilHashMap *) nil_chk(self->hashMap_)) putWithId:key withId:[other->hashMap_ getWithId:key]];
    }
  }
}


#line 359
- (ComAowagieTextPdfPdfDictionary *)getAsDictWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  ComAowagieTextPdfPdfDictionary *dict = nil;
  ComAowagieTextPdfPdfObject *orig = [self getDirectObjectWithComAowagieTextPdfPdfName:key];
  if (orig != nil && [orig isDictionary]) {
    dict = (ComAowagieTextPdfPdfDictionary *) cast_chk(orig, [ComAowagieTextPdfPdfDictionary class]);
  }
  return dict;
}


#line 381
- (ComAowagieTextPdfPdfArray *)getAsArrayWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  ComAowagieTextPdfPdfArray *array = nil;
  ComAowagieTextPdfPdfObject *orig = [self getDirectObjectWithComAowagieTextPdfPdfName:key];
  if (orig != nil && [orig isArray]) {
    array = (ComAowagieTextPdfPdfArray *) cast_chk(orig, [ComAowagieTextPdfPdfArray class]);
  }
  return array;
}


#line 405
- (ComAowagieTextPdfPdfString *)getAsStringWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  ComAowagieTextPdfPdfString *string = nil;
  ComAowagieTextPdfPdfObject *orig = [self getDirectObjectWithComAowagieTextPdfPdfName:key];
  if (orig != nil && [orig isString]) {
    string = (ComAowagieTextPdfPdfString *) cast_chk(orig, [ComAowagieTextPdfPdfString class]);
  }
  return string;
}


#line 427
- (ComAowagieTextPdfPdfNumber *)getAsNumberWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  ComAowagieTextPdfPdfNumber *number = nil;
  ComAowagieTextPdfPdfObject *orig = [self getDirectObjectWithComAowagieTextPdfPdfName:key];
  if (orig != nil && [orig isNumber]) {
    number = (ComAowagieTextPdfPdfNumber *) cast_chk(orig, [ComAowagieTextPdfPdfNumber class]);
  }
  return number;
}


#line 449
- (ComAowagieTextPdfPdfName *)getAsNameWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  ComAowagieTextPdfPdfName *name = nil;
  ComAowagieTextPdfPdfObject *orig = [self getDirectObjectWithComAowagieTextPdfPdfName:key];
  if (orig != nil && [orig isName]) {
    name = (ComAowagieTextPdfPdfName *) cast_chk(orig, [ComAowagieTextPdfPdfName class]);
  }
  return name;
}


#line 471
- (ComAowagieTextPdfPdfBoolean *)getAsBooleanWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  ComAowagieTextPdfPdfBoolean *bool_ = nil;
  ComAowagieTextPdfPdfObject *orig = [self getDirectObjectWithComAowagieTextPdfPdfName:key];
  if (orig != nil && [orig isBoolean]) {
    bool_ = (ComAowagieTextPdfPdfBoolean *) cast_chk(orig, [ComAowagieTextPdfPdfBoolean class]);
  }
  return bool_;
}


#line 491
- (ComAowagieTextPdfPdfIndirectReference *)getAsIndirectObjectWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  ComAowagieTextPdfPdfIndirectReference *ref = nil;
  ComAowagieTextPdfPdfObject *orig = [self getWithComAowagieTextPdfPdfName:key];
  if (orig != nil && [orig isIndirect]) {
    ref = (ComAowagieTextPdfPdfIndirectReference *) cast_chk(orig, [ComAowagieTextPdfPdfIndirectReference class]);
  }
  return ref;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfObject;", 0x1, 10, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfObject;", 0x1, 11, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 13, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 14, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 8, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x1, 16, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfArray;", 0x1, 17, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfString;", 0x1, 18, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfNumber;", 0x1, 19, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfName;", 0x1, 20, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfBoolean;", 0x0, 21, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x0, 22, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComAowagieTextPdfPdfName:);
  methods[2].selector = @selector(toPdfWithComAowagieTextPdfPdfWriter:withJavaIoOutputStream:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(putWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfObject:);
  methods[5].selector = @selector(putAllWithComAowagieTextPdfPdfDictionary:);
  methods[6].selector = @selector(removeWithComAowagieTextPdfPdfName:);
  methods[7].selector = @selector(getWithComAowagieTextPdfPdfName:);
  methods[8].selector = @selector(getDirectObjectWithComAowagieTextPdfPdfName:);
  methods[9].selector = @selector(getKeys);
  methods[10].selector = @selector(size);
  methods[11].selector = @selector(containsWithComAowagieTextPdfPdfName:);
  methods[12].selector = @selector(isFont);
  methods[13].selector = @selector(isPage);
  methods[14].selector = @selector(isPages);
  methods[15].selector = @selector(isCatalog);
  methods[16].selector = @selector(isOutlineTree);
  methods[17].selector = @selector(mergeWithComAowagieTextPdfPdfDictionary:);
  methods[18].selector = @selector(mergeDifferentWithComAowagieTextPdfPdfDictionary:);
  methods[19].selector = @selector(getAsDictWithComAowagieTextPdfPdfName:);
  methods[20].selector = @selector(getAsArrayWithComAowagieTextPdfPdfName:);
  methods[21].selector = @selector(getAsStringWithComAowagieTextPdfPdfName:);
  methods[22].selector = @selector(getAsNumberWithComAowagieTextPdfPdfName:);
  methods[23].selector = @selector(getAsNameWithComAowagieTextPdfPdfName:);
  methods[24].selector = @selector(getAsBooleanWithComAowagieTextPdfPdfName:);
  methods[25].selector = @selector(getAsIndirectObjectWithComAowagieTextPdfPdfName:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FONT", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "OUTLINES", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 24, -1, -1 },
    { "PAGE", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 25, -1, -1 },
    { "PAGES", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "CATALOG", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 27, -1, -1 },
    { "dictionaryType_", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashMap_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x4, -1, -1, 28, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfName;", "toPdf", "LComAowagieTextPdfPdfWriter;LJavaIoOutputStream;", "LJavaIoIOException;", "toString", "put", "LComAowagieTextPdfPdfName;LComAowagieTextPdfPdfObject;", "putAll", "LComAowagieTextPdfPdfDictionary;", "remove", "get", "getDirectObject", "()Ljava/util/Set<Lcom/aowagie/text/pdf/PdfName;>;", "contains", "merge", "mergeDifferent", "getAsDict", "getAsArray", "getAsString", "getAsNumber", "getAsName", "getAsBoolean", "getAsIndirectObject", &ComAowagieTextPdfPdfDictionary_FONT, &ComAowagieTextPdfPdfDictionary_OUTLINES, &ComAowagieTextPdfPdfDictionary_PAGE, &ComAowagieTextPdfPdfDictionary_PAGES, &ComAowagieTextPdfPdfDictionary_CATALOG, "Ljava/util/HashMap<Lcom/aowagie/text/pdf/PdfName;Lcom/aowagie/text/pdf/PdfObject;>;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfDictionary = { "PdfDictionary", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1, 26, 7, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfDictionary;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfPdfDictionary class]) {
    ComAowagieTextPdfPdfDictionary_FONT = JreLoadStatic(ComAowagieTextPdfPdfName, FONT);
    ComAowagieTextPdfPdfDictionary_OUTLINES = JreLoadStatic(ComAowagieTextPdfPdfName, OUTLINES);
    ComAowagieTextPdfPdfDictionary_PAGE = JreLoadStatic(ComAowagieTextPdfPdfName, PAGE);
    ComAowagieTextPdfPdfDictionary_PAGES = JreLoadStatic(ComAowagieTextPdfPdfName, PAGES);
    ComAowagieTextPdfPdfDictionary_CATALOG = JreLoadStatic(ComAowagieTextPdfPdfName, CATALOG);
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfPdfDictionary)
  }
}

@end


#line 111
void ComAowagieTextPdfPdfDictionary_init(ComAowagieTextPdfPdfDictionary *self) {
  ComAowagieTextPdfPdfObject_initWithInt_(self, ComAowagieTextPdfPdfObject_DICTIONARY);
  self->dictionaryType_ =
#line 101
  nil;
  
#line 113
  self->hashMap_ = new_JavaUtilLinkedHashMap_init();
}


#line 111
ComAowagieTextPdfPdfDictionary *new_ComAowagieTextPdfPdfDictionary_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfDictionary, init)
}


#line 111
ComAowagieTextPdfPdfDictionary *create_ComAowagieTextPdfPdfDictionary_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfDictionary, init)
}


#line 121
void ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(ComAowagieTextPdfPdfDictionary *self, ComAowagieTextPdfPdfName *type) {
  ComAowagieTextPdfPdfDictionary_init(self);
  self->dictionaryType_ = type;
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:self->dictionaryType_];
}


#line 121
ComAowagieTextPdfPdfDictionary *new_ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(ComAowagieTextPdfPdfName *type) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfDictionary, initWithComAowagieTextPdfPdfName_, type)
}


#line 121
ComAowagieTextPdfPdfDictionary *create_ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(ComAowagieTextPdfPdfName *type) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfDictionary, initWithComAowagieTextPdfPdfName_, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfDictionary)

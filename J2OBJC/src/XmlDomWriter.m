//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/xml/XmlDomWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "XmlDomWriter.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/PrintWriter.h"
#include "java/io/Writer.h"
#include "java/lang/Integer.h"
#include "org/w3c/dom/Attr.h"
#include "org/w3c/dom/Document.h"
#include "org/w3c/dom/DocumentType.h"
#include "org/w3c/dom/Element.h"
#include "org/w3c/dom/NamedNodeMap.h"
#include "org/w3c/dom/Node.h"

#if !__has_feature(objc_arc)
#error "XmlDomWriter must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextXmlXmlDomWriter () {
 @public
  /*!
   @brief Print writer.
   */
  JavaIoPrintWriter *fOut_;
  /*!
   @brief Canonical output.
   */
  jboolean fCanonical_;
  /*!
   @brief Processing XML 1.1 document.
   */
  jboolean fXML11_;
}

/*!
 @brief Returns a sorted list of attributes.
 @param attrs Attributes.
 @return Attributes.
 */
- (IOSObjectArray *)sortAttributesWithOrgW3cDomNamedNodeMap:(id<OrgW3cDomNamedNodeMap>)attrs;

/*!
 @brief Normalizes and prints the given string.
 @param s String.
 @param isAttValue It's attribute value.
 */
- (void)normalizeAndPrintWithNSString:(NSString *)s
                          withBoolean:(jboolean)isAttValue;

/*!
 @brief Normalizes and print the given character.
 @param c Character.
 @param isAttValue It's attribute value.
 */
- (void)normalizeAndPrintWithChar:(jchar)c
                      withBoolean:(jboolean)isAttValue;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextXmlXmlDomWriter, fOut_, JavaIoPrintWriter *)

__attribute__((unused)) static IOSObjectArray *ComAowagieTextXmlXmlDomWriter_sortAttributesWithOrgW3cDomNamedNodeMap_(ComAowagieTextXmlXmlDomWriter *self, id<OrgW3cDomNamedNodeMap> attrs);

__attribute__((unused)) static void ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithNSString_withBoolean_(ComAowagieTextXmlXmlDomWriter *self, NSString *s, jboolean isAttValue);

__attribute__((unused)) static void ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithChar_withBoolean_(ComAowagieTextXmlXmlDomWriter *self, jchar c, jboolean isAttValue);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/xml/XmlDomWriter.java"


#line 34
@implementation ComAowagieTextXmlXmlDomWriter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 50
- (instancetype)init {
  ComAowagieTextXmlXmlDomWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 63
- (void)setCanonicalWithBoolean:(jboolean)canonical {
  self->fCanonical_ = canonical;
}


#line 73
- (void)setOutputWithJavaIoOutputStream:(JavaIoOutputStream *)stream
                           withNSString:(NSString *)encoding {
  
#line 76
  if (encoding == nil) {
    encoding = @"UTF8";
  }
  
#line 80
  JavaIoWriter *writer = new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(stream, encoding);
  self->fOut_ = new_JavaIoPrintWriter_initWithJavaIoWriter_(writer);
}


#line 89
- (void)setOutputWithJavaIoWriter:(JavaIoWriter *)writer {
  
#line 91
  self->fOut_ = [writer isKindOfClass:[JavaIoPrintWriter class]] ?
#line 92
  (JavaIoPrintWriter *) cast_chk(writer, [JavaIoPrintWriter class]) : new_JavaIoPrintWriter_initWithJavaIoWriter_(writer);
}


#line 100
- (void)writeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node {
  
#line 103
  if (node == nil) {
    return;
  }
  
#line 107
  jshort type = [node getNodeType];
  switch (type) {
    case OrgW3cDomNode_DOCUMENT_NODE:
    {
      
#line 110
      id<OrgW3cDomDocument> document = (id<OrgW3cDomDocument>) cast_check(node, OrgW3cDomDocument_class_());
      self->fXML11_ = false;
      if (!self->fCanonical_) {
        if (self->fXML11_) {
          [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printlnWithNSString:@"<?xml version=\"1.1\" encoding=\"UTF-8\"?>"];
        }
        else {
          
#line 116
          [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printlnWithNSString:@"<?xml version=\"1.0\" encoding=\"UTF-8\"?>"];
        }
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
        [self writeWithOrgW3cDomNode:[document getDoctype]];
      }
      [self writeWithOrgW3cDomNode:[document getDocumentElement]];
      break;
    }
    
#line 125
    case OrgW3cDomNode_DOCUMENT_TYPE_NODE:
    {
      
#line 126
      id<OrgW3cDomDocumentType> doctype = (id<OrgW3cDomDocumentType>) cast_check(node, OrgW3cDomDocumentType_class_());
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"<!DOCTYPE "];
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[doctype getName]];
      NSString *publicId = [doctype getPublicId];
      NSString *systemId = [doctype getSystemId];
      if (publicId != nil) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@" PUBLIC '"];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:publicId];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"' '"];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:systemId];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:'\''];
      }
      else
#line 137
      if (systemId != nil) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@" SYSTEM '"];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:systemId];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:'\''];
      }
      NSString *internalSubset = [doctype getInternalSubset];
      if (internalSubset != nil) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printlnWithNSString:@" ["];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:internalSubset];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:']'];
      }
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printlnWithChar:'>'];
      break;
    }
    
#line 152
    case OrgW3cDomNode_ELEMENT_NODE:
    {
      
#line 153
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:'<'];
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[node getNodeName]];
      IOSObjectArray *attrs = ComAowagieTextXmlXmlDomWriter_sortAttributesWithOrgW3cDomNamedNodeMap_(self, [node getAttributes]);
      {
        IOSObjectArray *a__ =
#line 156
        attrs;
        id<OrgW3cDomAttr> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        id<OrgW3cDomAttr> const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          id<OrgW3cDomAttr> attr = *b__++;
          
#line 157
          [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:' '];
          [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[((id<OrgW3cDomAttr>) nil_chk(attr)) getNodeName]];
          [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"=\""];
          ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithNSString_withBoolean_(self, [attr getNodeValue], true);
          [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:'"'];
        }
      }
      
#line 163
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:'>'];
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
      
#line 166
      id<OrgW3cDomNode> child = [node getFirstChild];
      while (child != nil) {
        [self writeWithOrgW3cDomNode:child];
        child = [child getNextSibling];
      }
      break;
    }
    
#line 174
    case OrgW3cDomNode_ENTITY_REFERENCE_NODE:
    {
      
#line 175
      if (self->fCanonical_) {
        id<OrgW3cDomNode> child = [node getFirstChild];
        while (child != nil) {
          [self writeWithOrgW3cDomNode:child];
          child = [child getNextSibling];
        }
      }
      else {
        
#line 182
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:'&'];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[node getNodeName]];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:';'];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
      }
      break;
    }
    
#line 190
    case OrgW3cDomNode_CDATA_SECTION_NODE:
    {
      
#line 191
      if (self->fCanonical_) {
        ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithNSString_withBoolean_(self, [node getNodeValue], false);
      }
      else {
        
#line 194
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"<![CDATA["];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[node getNodeValue]];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"]]>"];
      }
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
      break;
    }
    
#line 202
    case OrgW3cDomNode_TEXT_NODE:
    {
      
#line 203
      ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithNSString_withBoolean_(self, [node getNodeValue], false);
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
      break;
    }
    
#line 208
    case OrgW3cDomNode_PROCESSING_INSTRUCTION_NODE:
    {
      
#line 209
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"<?"];
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[node getNodeName]];
      NSString *data = [node getNodeValue];
      if (data != nil && [data java_length] > 0) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:' '];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:data];
      }
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"?>"];
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
      break;
    }
    
#line 221
    case OrgW3cDomNode_COMMENT_NODE:
    {
      
#line 222
      if (!self->fCanonical_) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"<!--"];
        NSString *comment = [node getNodeValue];
        if (comment != nil && [comment java_length] > 0) {
          [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:comment];
        }
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"-->"];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
      }
    }
  }
  
#line 234
  if (type == OrgW3cDomNode_ELEMENT_NODE) {
    [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"</"];
    [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[node getNodeName]];
    [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:'>'];
    [((JavaIoPrintWriter *) nil_chk(self->fOut_)) flush];
  }
}


#line 248
- (IOSObjectArray *)sortAttributesWithOrgW3cDomNamedNodeMap:(id<OrgW3cDomNamedNodeMap>)attrs {
  return ComAowagieTextXmlXmlDomWriter_sortAttributesWithOrgW3cDomNamedNodeMap_(self, attrs);
}


#line 285
- (void)normalizeAndPrintWithNSString:(NSString *)s
                          withBoolean:(jboolean)isAttValue {
  ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithNSString_withBoolean_(self, s, isAttValue);
}


#line 300
- (void)normalizeAndPrintWithChar:(jchar)c
                      withBoolean:(jboolean)isAttValue {
  ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithChar_withBoolean_(self, c, isAttValue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "[LOrgW3cDomAttr;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setCanonicalWithBoolean:);
  methods[2].selector = @selector(setOutputWithJavaIoOutputStream:withNSString:);
  methods[3].selector = @selector(setOutputWithJavaIoWriter:);
  methods[4].selector = @selector(writeWithOrgW3cDomNode:);
  methods[5].selector = @selector(sortAttributesWithOrgW3cDomNamedNodeMap:);
  methods[6].selector = @selector(normalizeAndPrintWithNSString:withBoolean:);
  methods[7].selector = @selector(normalizeAndPrintWithChar:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fOut_", "LJavaIoPrintWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fCanonical_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fXML11_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setCanonical", "Z", "setOutput", "LJavaIoOutputStream;LNSString;", "LJavaIoUnsupportedEncodingException;", "LJavaIoWriter;", "write", "LOrgW3cDomNode;", "sortAttributes", "LOrgW3cDomNamedNodeMap;", "normalizeAndPrint", "LNSString;Z", "CZ" };
  static const J2ObjcClassInfo _ComAowagieTextXmlXmlDomWriter = { "XmlDomWriter", "com.aowagie.text.xml", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextXmlXmlDomWriter;
}

@end


#line 50
void ComAowagieTextXmlXmlDomWriter_init(ComAowagieTextXmlXmlDomWriter *self) {
  NSObject_init(self);
}


#line 50
ComAowagieTextXmlXmlDomWriter *new_ComAowagieTextXmlXmlDomWriter_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextXmlXmlDomWriter, init)
}


#line 50
ComAowagieTextXmlXmlDomWriter *create_ComAowagieTextXmlXmlDomWriter_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextXmlXmlDomWriter, init)
}


#line 248
IOSObjectArray *ComAowagieTextXmlXmlDomWriter_sortAttributesWithOrgW3cDomNamedNodeMap_(ComAowagieTextXmlXmlDomWriter *self, id<OrgW3cDomNamedNodeMap> attrs) {
  
#line 250
  jint len = attrs != nil ? [attrs getLength] : 0;
  IOSObjectArray *array = [IOSObjectArray newArrayWithLength:len type:OrgW3cDomAttr_class_()];
  for (jint i = 0; i < len; i++) {
    (void) IOSObjectArray_Set(array, i, (id<OrgW3cDomAttr>) cast_check([((id<OrgW3cDomNamedNodeMap>) nil_chk(attrs)) itemWithInt:i], OrgW3cDomAttr_class_()));
  }
  for (jint i = 0; i < len - 1; i++) {
    NSString *name = [((id<OrgW3cDomAttr>) nil_chk(IOSObjectArray_Get(array, i))) getNodeName];
    jint index = i;
    for (jint j = i + 1; j < len; j++) {
      NSString *curName = [((id<OrgW3cDomAttr>) nil_chk(IOSObjectArray_Get(array, j))) getNodeName];
      if ([((NSString *) nil_chk(curName)) compareToWithId:name] < 0) {
        name = curName;
        index = j;
      }
    }
    if (index != i) {
      id<OrgW3cDomAttr> temp = IOSObjectArray_Get(array, i);
      (void) IOSObjectArray_Set(array, i, IOSObjectArray_Get(array, index));
      (void) IOSObjectArray_Set(array, index, temp);
    }
  }
  
#line 272
  return array;
}


#line 285
void ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithNSString_withBoolean_(ComAowagieTextXmlXmlDomWriter *self, NSString *s, jboolean isAttValue) {
  
#line 287
  jint len = s != nil ? [s java_length] : 0;
  for (jint i = 0; i < len; i++) {
    jchar c = [((NSString *) nil_chk(s)) charAtWithInt:i];
    ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithChar_withBoolean_(self, c, isAttValue);
  }
}


#line 300
void ComAowagieTextXmlXmlDomWriter_normalizeAndPrintWithChar_withBoolean_(ComAowagieTextXmlXmlDomWriter *self, jchar c, jboolean isAttValue) {
  
#line 302
  switch (c) {
    case '<':
    {
      
#line 304
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"&lt;"];
      break;
    }
    case '>':
    {
      
#line 308
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"&gt;"];
      break;
    }
    case '&':
    {
      
#line 312
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"&amp;"];
      break;
    }
    case '"':
    {
      
#line 318
      if (isAttValue) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"&quot;"];
      }
      else {
        
#line 321
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"\""];
      }
      break;
    }
    case 0x000d:
    {
      
#line 330
      [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"&#xD;"];
      break;
    }
    case 0x000a:
    {
      
#line 334
      if (self->fCanonical_) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"&#xA;"];
        break;
      }
    }
    
#line 340
    default:
    {
      
#line 349
      if ((self->fXML11_ && ((c >= (jint) 0x01 && c <= (jint) 0x1F && c != (jint) 0x09 && c != (jint) 0x0A) || (
#line 350
      c >= (jint) 0x7F && c <= (jint) 0x9F) || c == (jint) 0x2028)) || (
#line 351
      isAttValue && (c == (jint) 0x09 || c == (jint) 0x0A))) {
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@"&#x"];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:[((NSString *) nil_chk(JavaLangInteger_toHexStringWithInt_(c))) uppercaseString]];
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithNSString:@";"];
      }
      else {
        
#line 356
        [((JavaIoPrintWriter *) nil_chk(self->fOut_)) printWithChar:c];
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextXmlXmlDomWriter)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/SignerInformationStore.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SignerId.h"
#include "SignerInformation.h"
#include "SignerInformationStore.h"
#include "X500Name.h"
#include "java/lang/Iterable.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"

#if !__has_feature(objc_arc)
#error "SignerInformationStore must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCmsSignerInformationStore () {
 @public
  id<JavaUtilList> all_;
  id<JavaUtilMap> table_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformationStore, all_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerInformationStore, table_, id<JavaUtilMap>)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/SignerInformationStore.java"


#line 12
@implementation OrgSpongycastleCmsSignerInformationStore


#line 23
- (instancetype)initWithOrgSpongycastleCmsSignerInformation:(OrgSpongycastleCmsSignerInformation *)signerInfo {
  OrgSpongycastleCmsSignerInformationStore_initWithOrgSpongycastleCmsSignerInformation_(self, signerInfo);
  return self;
}


#line 39
- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)signerInfos {
  OrgSpongycastleCmsSignerInformationStore_initWithJavaUtilCollection_(self, signerInfos);
  return self;
}


#line 69
- (OrgSpongycastleCmsSignerInformation *)getWithOrgSpongycastleCmsSignerId:(OrgSpongycastleCmsSignerId *)selector {
  
#line 72
  id<JavaUtilCollection> list = [self getSignersWithOrgSpongycastleCmsSignerId:selector];
  
#line 74
  return [((id<JavaUtilCollection>) nil_chk(list)) size] == 0 ? nil : (OrgSpongycastleCmsSignerInformation *) cast_chk([((id<JavaUtilIterator>) nil_chk([list iterator])) next], [OrgSpongycastleCmsSignerInformation class]);
}


#line 82
- (jint)size {
  
#line 84
  return [((id<JavaUtilList>) nil_chk(all_)) size];
}


#line 92
- (id<JavaUtilCollection>)getSigners {
  
#line 94
  return new_JavaUtilArrayList_initWithJavaUtilCollection_(all_);
}


#line 103
- (id<JavaUtilCollection>)getSignersWithOrgSpongycastleCmsSignerId:(OrgSpongycastleCmsSignerId *)selector {
  
#line 106
  if ([((OrgSpongycastleCmsSignerId *) nil_chk(selector)) getIssuer] != nil && [selector getSubjectKeyIdentifier] != nil) {
    
#line 108
    id<JavaUtilList> results = new_JavaUtilArrayList_init();
    
#line 110
    id<JavaUtilCollection> match1 = [self getSignersWithOrgSpongycastleCmsSignerId:new_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_([selector getIssuer], [selector getSerialNumber])];
    
#line 112
    if (match1 != nil) {
      
#line 114
      [results addAllWithJavaUtilCollection:match1];
    }
    
#line 117
    id<JavaUtilCollection> match2 = [self getSignersWithOrgSpongycastleCmsSignerId:new_OrgSpongycastleCmsSignerId_initWithByteArray_([selector getSubjectKeyIdentifier])];
    
#line 119
    if (match2 != nil) {
      
#line 121
      [results addAllWithJavaUtilCollection:match2];
    }
    
#line 124
    return results;
  }
  else {
    
#line 128
    id<JavaUtilList> list = (JavaUtilArrayList *) cast_chk([((id<JavaUtilMap>) nil_chk(table_)) getWithId:selector], [JavaUtilArrayList class]);
    
#line 130
    return list == nil ? new_JavaUtilArrayList_init() : new_JavaUtilArrayList_initWithJavaUtilCollection_(list);
  }
}


#line 137
- (id<JavaUtilIterator>)iterator {
  
#line 139
  return [((id<JavaUtilCollection>) nil_chk([self getSigners])) iterator];
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "LOrgSpongycastleCmsSignerInformation;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, 6, 4, -1, 7, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCmsSignerInformation:);
  methods[1].selector = @selector(initWithJavaUtilCollection:);
  methods[2].selector = @selector(getWithOrgSpongycastleCmsSignerId:);
  methods[3].selector = @selector(size);
  methods[4].selector = @selector(getSigners);
  methods[5].selector = @selector(getSignersWithOrgSpongycastleCmsSignerId:);
  methods[6].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "all_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "table_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCmsSignerInformation;", "LJavaUtilCollection;", "(Ljava/util/Collection<Lorg/spongycastle/cms/SignerInformation;>;)V", "get", "LOrgSpongycastleCmsSignerId;", "()Ljava/util/Collection<Lorg/spongycastle/cms/SignerInformation;>;", "getSigners", "(Lorg/spongycastle/cms/SignerId;)Ljava/util/Collection<Lorg/spongycastle/cms/SignerInformation;>;", "()Ljava/util/Iterator<Lorg/spongycastle/cms/SignerInformation;>;", "Ljava/lang/Object;Lorg/spongycastle/util/Iterable<Lorg/spongycastle/cms/SignerInformation;>;" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsSignerInformationStore = { "SignerInformationStore", "org.spongycastle.cms", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, 9, -1 };
  return &_OrgSpongycastleCmsSignerInformationStore;
}

@end


#line 23
void OrgSpongycastleCmsSignerInformationStore_initWithOrgSpongycastleCmsSignerInformation_(OrgSpongycastleCmsSignerInformationStore *self, OrgSpongycastleCmsSignerInformation *signerInfo) {
  NSObject_init(self);
  self->all_ = new_JavaUtilArrayList_init();
  self->table_ = new_JavaUtilHashMap_init();
  
#line 26
  self->all_ = new_JavaUtilArrayList_initWithInt_(1);
  [self->all_ addWithId:signerInfo];
  
#line 29
  OrgSpongycastleCmsSignerId *sid = [((OrgSpongycastleCmsSignerInformation *) nil_chk(signerInfo)) getSID];
  
#line 31
  (void) [((id<JavaUtilMap>) nil_chk(self->table_)) putWithId:sid withId:self->all_];
}


#line 23
OrgSpongycastleCmsSignerInformationStore *new_OrgSpongycastleCmsSignerInformationStore_initWithOrgSpongycastleCmsSignerInformation_(OrgSpongycastleCmsSignerInformation *signerInfo) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerInformationStore, initWithOrgSpongycastleCmsSignerInformation_, signerInfo)
}


#line 23
OrgSpongycastleCmsSignerInformationStore *create_OrgSpongycastleCmsSignerInformationStore_initWithOrgSpongycastleCmsSignerInformation_(OrgSpongycastleCmsSignerInformation *signerInfo) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerInformationStore, initWithOrgSpongycastleCmsSignerInformation_, signerInfo)
}


#line 39
void OrgSpongycastleCmsSignerInformationStore_initWithJavaUtilCollection_(OrgSpongycastleCmsSignerInformationStore *self, id<JavaUtilCollection> signerInfos) {
  NSObject_init(self);
  self->all_ = new_JavaUtilArrayList_init();
  self->table_ = new_JavaUtilHashMap_init();
  
#line 42
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(signerInfos)) iterator];
  
#line 44
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    
#line 46
    OrgSpongycastleCmsSignerInformation *signer = (OrgSpongycastleCmsSignerInformation *) cast_chk([it next], [OrgSpongycastleCmsSignerInformation class]);
    OrgSpongycastleCmsSignerId *sid = [((OrgSpongycastleCmsSignerInformation *) nil_chk(signer)) getSID];
    
#line 49
    id<JavaUtilList> list = (JavaUtilArrayList *) cast_chk([((id<JavaUtilMap>) nil_chk(self->table_)) getWithId:sid], [JavaUtilArrayList class]);
    if (list == nil) {
      
#line 52
      list = new_JavaUtilArrayList_initWithInt_(1);
      (void) [((id<JavaUtilMap>) nil_chk(self->table_)) putWithId:sid withId:list];
    }
    
#line 56
    [list addWithId:signer];
  }
  
#line 59
  self->all_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(signerInfos);
}


#line 39
OrgSpongycastleCmsSignerInformationStore *new_OrgSpongycastleCmsSignerInformationStore_initWithJavaUtilCollection_(id<JavaUtilCollection> signerInfos) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerInformationStore, initWithJavaUtilCollection_, signerInfos)
}


#line 39
OrgSpongycastleCmsSignerInformationStore *create_OrgSpongycastleCmsSignerInformationStore_initWithJavaUtilCollection_(id<JavaUtilCollection> signerInfos) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerInformationStore, initWithJavaUtilCollection_, signerInfos)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsSignerInformationStore)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/harmony/java/awt/geom/Rectangle2D.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Rectangle2D")
#ifdef RESTRICT_Rectangle2D
#define INCLUDE_ALL_Rectangle2D 0
#else
#define INCLUDE_ALL_Rectangle2D 1
#endif
#undef RESTRICT_Rectangle2D
#ifdef INCLUDE_HarmonyJavaAwtGeomRectangle2D_Double
#define INCLUDE_HarmonyJavaAwtGeomRectangle2D 1
#endif
#ifdef INCLUDE_HarmonyJavaAwtGeomRectangle2D_Float
#define INCLUDE_HarmonyJavaAwtGeomRectangle2D 1
#endif

#if !defined (HarmonyJavaAwtGeomRectangle2D_) && (INCLUDE_ALL_Rectangle2D || defined(INCLUDE_HarmonyJavaAwtGeomRectangle2D))
#define HarmonyJavaAwtGeomRectangle2D_

#define RESTRICT_RectangularShape 1
#define INCLUDE_HarmonyJavaAwtGeomRectangularShape 1
#include "RectangularShape.h"

@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomLine2D;
@class HarmonyJavaAwtGeomPoint2D;
@protocol HarmonyJavaAwtGeomPathIterator;

@interface HarmonyJavaAwtGeomRectangle2D : HarmonyJavaAwtGeomRectangularShape

#pragma mark Public

- (void)addWithDouble:(jdouble)x
           withDouble:(jdouble)y;

- (void)addWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p;

- (void)addWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)width
                    withDouble:(jdouble)height;

- (HarmonyJavaAwtGeomRectangle2D *)createIntersectionWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (HarmonyJavaAwtGeomRectangle2D *)createUnionWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (jboolean)isEqual:(id)obj;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t
                                                                                withDouble:(jdouble)flatness;

- (NSUInteger)hash;

+ (void)intersectWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)src1
                 withHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)src2
                 withHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)dst;

- (jboolean)intersectsWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)width
                      withDouble:(jdouble)height;

- (jboolean)intersectsLineWithDouble:(jdouble)x1
                          withDouble:(jdouble)y1
                          withDouble:(jdouble)x2
                          withDouble:(jdouble)y2;

- (jboolean)intersectsLineWithHarmonyJavaAwtGeomLine2D:(HarmonyJavaAwtGeomLine2D *)l;

- (jint)outcodeWithDouble:(jdouble)x
               withDouble:(jdouble)y;

- (jint)outcodeWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p;

- (void)setFrameWithDouble:(jdouble)x
                withDouble:(jdouble)y
                withDouble:(jdouble)width
                withDouble:(jdouble)height;

- (void)setRectWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)width
               withDouble:(jdouble)height;

- (void)setRectWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

+ (void)union__WithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)src1
               withHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)src2
               withHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)dst;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomRectangle2D)

inline jint HarmonyJavaAwtGeomRectangle2D_get_OUT_LEFT(void);
#define HarmonyJavaAwtGeomRectangle2D_OUT_LEFT 1
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomRectangle2D, OUT_LEFT, jint)

inline jint HarmonyJavaAwtGeomRectangle2D_get_OUT_TOP(void);
#define HarmonyJavaAwtGeomRectangle2D_OUT_TOP 2
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomRectangle2D, OUT_TOP, jint)

inline jint HarmonyJavaAwtGeomRectangle2D_get_OUT_RIGHT(void);
#define HarmonyJavaAwtGeomRectangle2D_OUT_RIGHT 4
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomRectangle2D, OUT_RIGHT, jint)

inline jint HarmonyJavaAwtGeomRectangle2D_get_OUT_BOTTOM(void);
#define HarmonyJavaAwtGeomRectangle2D_OUT_BOTTOM 8
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomRectangle2D, OUT_BOTTOM, jint)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_init(HarmonyJavaAwtGeomRectangle2D *self);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_intersectWithHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomRectangle2D_(HarmonyJavaAwtGeomRectangle2D *src1, HarmonyJavaAwtGeomRectangle2D *src2, HarmonyJavaAwtGeomRectangle2D *dst);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_union__WithHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomRectangle2D_(HarmonyJavaAwtGeomRectangle2D *src1, HarmonyJavaAwtGeomRectangle2D *src2, HarmonyJavaAwtGeomRectangle2D *dst);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomRectangle2D)

#endif

#if !defined (HarmonyJavaAwtGeomRectangle2D_Float_) && (INCLUDE_ALL_Rectangle2D || defined(INCLUDE_HarmonyJavaAwtGeomRectangle2D_Float))
#define HarmonyJavaAwtGeomRectangle2D_Float_

@class HarmonyJavaAwtGeomRectangle2D;

@interface HarmonyJavaAwtGeomRectangle2D_Float : HarmonyJavaAwtGeomRectangle2D {
 @public
  jfloat x_;
  jfloat y_;
  jfloat width_;
  jfloat height_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithFloat:(jfloat)x
                    withFloat:(jfloat)y
                    withFloat:(jfloat)width
                    withFloat:(jfloat)height;

- (HarmonyJavaAwtGeomRectangle2D *)createIntersectionWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (HarmonyJavaAwtGeomRectangle2D *)createUnionWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (jdouble)getHeight;

- (jdouble)getWidth;

- (jdouble)getX;

- (jdouble)getY;

- (jboolean)isEmpty;

- (jint)outcodeWithDouble:(jdouble)px
               withDouble:(jdouble)py;

- (void)setRectWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)width
               withDouble:(jdouble)height;

- (void)setRectWithFloat:(jfloat)x
               withFloat:(jfloat)y
               withFloat:(jfloat)width
               withFloat:(jfloat)height;

- (void)setRectWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomRectangle2D_Float)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_Float_init(HarmonyJavaAwtGeomRectangle2D_Float *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Float *new_HarmonyJavaAwtGeomRectangle2D_Float_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Float *create_HarmonyJavaAwtGeomRectangle2D_Float_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_Float_initWithFloat_withFloat_withFloat_withFloat_(HarmonyJavaAwtGeomRectangle2D_Float *self, jfloat x, jfloat y, jfloat width, jfloat height);

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Float *new_HarmonyJavaAwtGeomRectangle2D_Float_initWithFloat_withFloat_withFloat_withFloat_(jfloat x, jfloat y, jfloat width, jfloat height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Float *create_HarmonyJavaAwtGeomRectangle2D_Float_initWithFloat_withFloat_withFloat_withFloat_(jfloat x, jfloat y, jfloat width, jfloat height);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomRectangle2D_Float)

#endif

#if !defined (HarmonyJavaAwtGeomRectangle2D_Double_) && (INCLUDE_ALL_Rectangle2D || defined(INCLUDE_HarmonyJavaAwtGeomRectangle2D_Double))
#define HarmonyJavaAwtGeomRectangle2D_Double_

@class HarmonyJavaAwtGeomRectangle2D;

@interface HarmonyJavaAwtGeomRectangle2D_Double : HarmonyJavaAwtGeomRectangle2D {
 @public
  jdouble x_;
  jdouble y_;
  jdouble width_;
  jdouble height_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)width
                    withDouble:(jdouble)height;

- (HarmonyJavaAwtGeomRectangle2D *)createIntersectionWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (HarmonyJavaAwtGeomRectangle2D *)createUnionWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (jdouble)getHeight;

- (jdouble)getWidth;

- (jdouble)getX;

- (jdouble)getY;

- (jboolean)isEmpty;

- (jint)outcodeWithDouble:(jdouble)px
               withDouble:(jdouble)py;

- (void)setRectWithDouble:(jdouble)x
               withDouble:(jdouble)y
               withDouble:(jdouble)width
               withDouble:(jdouble)height;

- (void)setRectWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomRectangle2D_Double)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_Double_init(HarmonyJavaAwtGeomRectangle2D_Double *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Double *new_HarmonyJavaAwtGeomRectangle2D_Double_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Double *create_HarmonyJavaAwtGeomRectangle2D_Double_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_Double_initWithDouble_withDouble_withDouble_withDouble_(HarmonyJavaAwtGeomRectangle2D_Double *self, jdouble x, jdouble y, jdouble width, jdouble height);

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Double *new_HarmonyJavaAwtGeomRectangle2D_Double_initWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble width, jdouble height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Double *create_HarmonyJavaAwtGeomRectangle2D_Double_initWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble width, jdouble height);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomRectangle2D_Double)

#endif

#if !defined (HarmonyJavaAwtGeomRectangle2D_Iterator_) && (INCLUDE_ALL_Rectangle2D || defined(INCLUDE_HarmonyJavaAwtGeomRectangle2D_Iterator))
#define HarmonyJavaAwtGeomRectangle2D_Iterator_

#define RESTRICT_PathIterator 1
#define INCLUDE_HarmonyJavaAwtGeomPathIterator 1
#include "PathIterator.h"

@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomRectangle2D;
@class IOSDoubleArray;
@class IOSFloatArray;

@interface HarmonyJavaAwtGeomRectangle2D_Iterator : NSObject < HarmonyJavaAwtGeomPathIterator > {
 @public
  /*!
   @brief The x coordinate of left-upper rectangle corner
   */
  jdouble x_;
  /*!
   @brief The y coordinate of left-upper rectangle corner
   */
  jdouble y_;
  /*!
   @brief The width of rectangle
   */
  jdouble width_;
  /*!
   @brief The height of rectangle
   */
  jdouble height_;
  /*!
   @brief The path iterator transformation
   */
  HarmonyJavaAwtGeomAffineTransform *t_;
  /*!
   @brief The current segmenet index
   */
  jint index_;
}

#pragma mark Public

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

#pragma mark Package-Private

/*!
 @brief Constructs a new Rectangle2D.Iterator for given rectangle and
  transformation
 @param r - the source Rectangle2D object
 @param at - the AffineTransform object to apply rectangle path
 */
- (instancetype)initWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)outer$
                    withHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r
                withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomRectangle2D_Iterator)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomRectangle2D_Iterator, t_, HarmonyJavaAwtGeomAffineTransform *)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomRectangle2D_Iterator_initWithHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomRectangle2D_Iterator *self, HarmonyJavaAwtGeomRectangle2D *outer$, HarmonyJavaAwtGeomRectangle2D *r, HarmonyJavaAwtGeomAffineTransform *at);

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Iterator *new_HarmonyJavaAwtGeomRectangle2D_Iterator_initWithHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomRectangle2D *outer$, HarmonyJavaAwtGeomRectangle2D *r, HarmonyJavaAwtGeomAffineTransform *at) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomRectangle2D_Iterator *create_HarmonyJavaAwtGeomRectangle2D_Iterator_initWithHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomRectangle2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomRectangle2D *outer$, HarmonyJavaAwtGeomRectangle2D *r, HarmonyJavaAwtGeomAffineTransform *at);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomRectangle2D_Iterator)

#endif

#pragma pop_macro("INCLUDE_ALL_Rectangle2D")

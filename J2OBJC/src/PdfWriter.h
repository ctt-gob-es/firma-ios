//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfWriter")
#ifdef RESTRICT_PdfWriter
#define INCLUDE_ALL_PdfWriter 0
#else
#define INCLUDE_ALL_PdfWriter 1
#endif
#undef RESTRICT_PdfWriter

#if !defined (ComAowagieTextPdfPdfWriter_) && (INCLUDE_ALL_PdfWriter || defined(INCLUDE_ComAowagieTextPdfPdfWriter))
#define ComAowagieTextPdfPdfWriter_

#define RESTRICT_DocWriter 1
#define INCLUDE_ComAowagieTextDocWriter 1
#include "DocWriter.h"

#define RESTRICT_PdfViewerPreferences 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfViewerPreferences 1
#include "PdfViewerPreferences.h"

#define RESTRICT_PdfEncryptionSettings 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfEncryptionSettings 1
#include "PdfEncryptionSettings.h"

#define RESTRICT_PdfVersion 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfVersion 1
#include "PdfVersion.h"

#define RESTRICT_PdfDocumentActions 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfDocumentActions 1
#include "PdfDocumentActions.h"

#define RESTRICT_PdfPageActions 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfPageActions 1
#include "PdfPageActions.h"

#define RESTRICT_PdfXConformance 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfXConformance 1
#include "PdfXConformance.h"

#define RESTRICT_PdfRunDirection 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfRunDirection 1
#include "PdfRunDirection.h"

#define RESTRICT_PdfAnnotations 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfAnnotations 1
#include "PdfAnnotations.h"

@class ComAowagieTextDocument;
@class ComAowagieTextImage;
@class ComAowagieTextPdfBaseFont;
@class ComAowagieTextPdfCollectionPdfCollection;
@class ComAowagieTextPdfColorDetails;
@class ComAowagieTextPdfFontDetails;
@class ComAowagieTextPdfInternalPdfVersionImp;
@class ComAowagieTextPdfPdfAcroForm;
@class ComAowagieTextPdfPdfAction;
@class ComAowagieTextPdfPdfAnnotation;
@class ComAowagieTextPdfPdfArray;
@class ComAowagieTextPdfPdfContentByte;
@class ComAowagieTextPdfPdfContents;
@class ComAowagieTextPdfPdfDeveloperExtension;
@class ComAowagieTextPdfPdfDictionary;
@class ComAowagieTextPdfPdfDocument;
@class ComAowagieTextPdfPdfEncryption;
@class ComAowagieTextPdfPdfFileSpecification;
@class ComAowagieTextPdfPdfImportedPage;
@class ComAowagieTextPdfPdfIndirectObject;
@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfName;
@class ComAowagieTextPdfPdfOCProperties;
@class ComAowagieTextPdfPdfObject;
@class ComAowagieTextPdfPdfOutline;
@class ComAowagieTextPdfPdfPage;
@class ComAowagieTextPdfPdfPageLabels;
@class ComAowagieTextPdfPdfPages;
@class ComAowagieTextPdfPdfPatternPainter;
@class ComAowagieTextPdfPdfReader;
@class ComAowagieTextPdfPdfReaderInstance;
@class ComAowagieTextPdfPdfShading;
@class ComAowagieTextPdfPdfShadingPattern;
@class ComAowagieTextPdfPdfSpotColor;
@class ComAowagieTextPdfPdfStructureTreeRoot;
@class ComAowagieTextPdfPdfTemplate;
@class ComAowagieTextPdfPdfTransition;
@class ComAowagieTextPdfPdfWriter_PdfBody;
@class ComAowagieTextPdfRandomAccessFileOrArray;
@class ComAowagieTextRectangle;
@class HarmonyJavaAwtColor;
@class HarmonyJavaAwtColorICC_Profile;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaIoOutputStream;
@class JavaUtilHashSet;
@class JavaUtilTreeMap;
@protocol ComAowagieTextPdfPdfOCG;
@protocol ComAowagieTextPdfPdfPageEvent;
@protocol JavaUtilList;

/*!
 @brief A <CODE>DocWriter</CODE> class for PDF.
 <P>
  When this <CODE>PdfWriter</CODE> is added
  to a certain <CODE>PdfDocument</CODE>, the PDF representation of every Element
  added to this Document will be written to the outputstream.</P>
 */
@interface ComAowagieTextPdfPdfWriter : ComAowagieTextDocWriter < ComAowagieTextPdfInterfacesPdfViewerPreferences, ComAowagieTextPdfInterfacesPdfEncryptionSettings, ComAowagieTextPdfInterfacesPdfVersion, ComAowagieTextPdfInterfacesPdfDocumentActions, ComAowagieTextPdfInterfacesPdfPageActions, ComAowagieTextPdfInterfacesPdfXConformance, ComAowagieTextPdfInterfacesPdfRunDirection, ComAowagieTextPdfInterfacesPdfAnnotations > {
 @public
  /*!
   @brief the pdfdocument object.
   */
  ComAowagieTextPdfPdfDocument *pdf_;
  /*!
   @brief body of the PDF document
   */
  ComAowagieTextPdfPdfWriter_PdfBody *body_;
  /*!
   @brief The root of the page tree.
   */
  ComAowagieTextPdfPdfPages *root_;
  /*!
   @brief A number referring to the previous Cross-Reference Table.
   */
  jint prevxref_;
  id<JavaUtilList> newBookmarks_;
  /*!
   @brief Stores the version information for the header and the catalog.
   */
  ComAowagieTextPdfInternalPdfVersionImp *pdf_version_;
  /*!
   @brief XMP Metadata for the document.
   */
  IOSByteArray *xmpMetadata_;
  /*!
   @brief Contains the business logic for cryptography.
   */
  ComAowagieTextPdfPdfEncryption *crypto_;
  /*!
   @brief Holds value of property fullCompression.
   */
  jboolean fullCompression_;
  /*!
   @brief The compression level of the content streams.
   @since 2.1.3
   */
  jint compressionLevel_;
  ComAowagieTextPdfPdfReaderInstance *currentPdfReaderInstance_;
  /*!
   @brief A hashSet containing all the PdfLayer objects.
   */
  JavaUtilHashSet *documentOCG_;
  /*!
   @brief The OCProperties in a catalog dictionary.
   */
  ComAowagieTextPdfPdfOCProperties *OCProperties_;
  /*!
   @brief The RBGroups array in an OCG dictionary
   */
  ComAowagieTextPdfPdfArray *OCGRadioGroup_;
  /*!
   @brief The locked array in an OCG dictionary
   @since 2.1.2
   */
  ComAowagieTextPdfPdfArray *OCGLocked_;
}

#pragma mark Public

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfAnnotations#addAnnotation(com.aowagie.text.pdf.PdfAnnotation)
 */
- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfVersion#addDeveloperExtension(com.aowagie.text.pdf.PdfDeveloperExtension)
 @since 2.1.6
 */
- (void)addDeveloperExtensionWithComAowagieTextPdfPdfDeveloperExtension:(ComAowagieTextPdfPdfDeveloperExtension *)de;

/*!
 @brief Use this method to add a file attachment at the document level.
 @param description_ the file description
 @param fileStore an array with the file. If it's  <CODE> null </CODE>
   the file will be read from the disk
 @param file the path to the file. It will only be used if  
  <CODE> fileStore </CODE>  is not  <CODE> null </CODE>
 @param fileDisplay the actual file name stored in the pdf
 @throw IOExceptionon error
 */
- (void)addFileAttachmentWithNSString:(NSString *)description_
                        withByteArray:(IOSByteArray *)fileStore
                         withNSString:(NSString *)file
                         withNSString:(NSString *)fileDisplay;

/*!
 @brief Use this method to add a PDF object to the PDF body.
 Use this method only if you know what you're doing!
 @param object object
 @param inObjStm in Object Stream
 @return a PdfIndirectObject
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                    withBoolean:(jboolean)inObjStm;

/*!
 @brief Use this method to add a PDF object to the PDF body.
 Use this method only if you know what you're doing!
 @param object Object
 @param ref Reference
 @return a PdfIndirectObject
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                      withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfViewerPreferences#addViewerPreference(com.aowagie.text.pdf.PdfName, com.aowagie.text.pdf.PdfObject)
 */
- (void)addViewerPreferenceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                         withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)value;

/*!
 @brief Signals that the <CODE>Document</CODE> was closed and that no other 
 <CODE>Elements</CODE> will be added.
 <P>
  The pages-tree is built and written to the outputstream.
  A Catalog is constructed, as well as an Info-object,
  the reference table is composed and everything is written
  to the outputstream embedded in a Trailer.
 - seealso: com.aowagie.text.DocWriter#close()
 */
- (void)close;

- (void)createXmpMetadata;

/*!
 @brief Use this method to writes the reader to the document
  and free the memory used by it.
 The main use is when concatenating multiple documents
  to keep the memory usage restricted to the current
  appending document.
 @param reader the  <CODE> PdfReader </CODE>  to free
 @throw IOExceptionon error
 */
- (void)freeReaderWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfAnnotations#getAcroForm()
 */
- (ComAowagieTextPdfPdfAcroForm *)getAcroForm;

/*!
 @brief Returns the compression level used for streams written by this writer.
 @return the compression level (0 = best speed, 9 = best compression, -1 is default)
 @since 2.1.3
 */
- (jint)getCompressionLevel;

/*!
 @brief Use this method to gets the current document size.
 This size only includes the data already written
  to the output stream, it does not include templates or fonts.
  It is useful if used with <CODE>freeReader()</CODE>
  when concatenating many documents and an idea of
  the current size is needed.
 @return the approximate size without fonts or templates
 */
- (jint)getCurrentDocumentSize;

- (jint)getCurrentPageNumber;

/*!
 @brief Use this method to get the default colorspaces.
 @return the default colorspaces
 */
- (ComAowagieTextPdfPdfDictionary *)getDefaultColorspace;

/*!
 @brief Use this method to get the direct content for this document.
 There is only one direct content, multiple calls to this method
  will allways retrieve the same object.
 @return the direct content
 */
- (ComAowagieTextPdfPdfContentByte *)getDirectContent;

/*!
 @brief Use this method to get the direct content under for this document.
 There is only one direct content, multiple calls to this method
  will always retrieve the same object.
 @return the direct content
 */
- (ComAowagieTextPdfPdfContentByte *)getDirectContentUnder;

/*!
 @brief Sets extra keys to the catalog.
 @return the catalog to change
 */
- (ComAowagieTextPdfPdfDictionary *)getExtraCatalog;

/*!
 @brief Use this method to get the group dictionary.
 @return Value of property group.
 */
- (ComAowagieTextPdfPdfDictionary *)getGroup;

/*!
 @brief Use this method to get a page from other PDF document.
 The page can be used as any other PdfTemplate.
  Note that calling this method more than once with the same parameters
  will retrieve the same object.
 @param reader the PDF document where the page is
 @param pageNumber the page number. The first page is 1
 @return the template representing the imported page
 */
- (ComAowagieTextPdfPdfImportedPage *)getImportedPageWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                                                            withInt:(jint)pageNumber;

/*!
 @brief Use this method to get the info dictionary if you want to
  change it directly (add keys and values to the info dictionary).
 @return the info dictionary
 */
- (ComAowagieTextPdfPdfDictionary *)getInfo;

/*!
 @brief Use this method to get an instance of the <CODE>PdfWriter</CODE>.
 @param document The  <CODE> Document </CODE>  that has to be written
 @param os The  <CODE> OutputStream </CODE>  the writer has to write to.
 @return a new <CODE>PdfWriter</CODE>
 @throw DocumentExceptionon error
 */
+ (ComAowagieTextPdfPdfWriter *)getInstanceWithComAowagieTextDocument:(ComAowagieTextDocument *)document
                                               withJavaIoOutputStream:(JavaIoOutputStream *)os;

/*!
 @brief Use this method to get the <B>Optional Content Properties Dictionary</B>.
 Each call fills the dictionary with the current layer state.
  It's advisable to only call this method right before close
  and do any modifications at that time.
 @return the Optional Content Properties Dictionary
 */
- (ComAowagieTextPdfPdfOCProperties *)getOCProperties;

/*!
 @brief Gets the <CODE>PdfPageEvent</CODE> for this document or <CODE>null</CODE>
  if none is set.
 @return the <CODE>PdfPageEvent</CODE> for this document or <CODE>null</CODE>
  if none is set
 */
- (id<ComAowagieTextPdfPdfPageEvent>)getPageEvent;

/*!
 @brief Gets the pagenumber of this document.
 This number can be different from the real pagenumber,
  if you have (re)set the page number previously.
 @return a page number
 */
- (jint)getPageNumber;

/*!
 @brief Use this method to get a reference to a page existing or not.
 If the page does not exist yet the reference will be created
  in advance. If on closing the document, a page number greater
  than the total number of pages was requested, an exception
  is thrown.
 @param page the page number. The first page is 1
 @return the reference to the page
 */
- (ComAowagieTextPdfPdfIndirectReference *)getPageReferenceWithInt:(jint)page;

/*!
 @brief Use this method to get the size of the media box.
 @return a Rectangle
 */
- (ComAowagieTextRectangle *)getPageSize;

/*!
 @brief Use this to get an <CODE>PdfIndirectReference</CODE> for an object that
  will be created in the future.
 Use this method only if you know what you're doing!
 @return the <CODE>PdfIndirectReference</CODE>
 */
- (ComAowagieTextPdfPdfIndirectReference *)getPdfIndirectReference;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfXConformance#getPDFXConformance()
 */
- (jint)getPDFXConformance;

/*!
 @brief Use this method to get the root outline
  and construct bookmarks.
 @return the root outline
 */
- (ComAowagieTextPdfPdfOutline *)getRootOutline;

/*!
 @brief Use this method to set the run direction.
 @return the run direction
 */
- (jint)getRunDirection;

/*!
 @brief Use this method to gets the space/character extra spacing ratio
  for fully justified text.
 @return the space/character extra spacing ratio
 */
- (jfloat)getSpaceCharRatio;

/*!
 @brief Gets the structure tree root.If the document is not marked for tagging it will return <CODE>null</CODE>.
 @return the structure tree root
 */
- (ComAowagieTextPdfPdfStructureTreeRoot *)getStructureTreeRoot;

/*!
 @brief Returns the value to be used for the Tabs entry in the page tree.
 @return Tabs
 @since 2.1.5
 */
- (ComAowagieTextPdfPdfName *)getTabs;

/*!
 @brief Use this method to get the user unit.
 A user unit is a value that defines the default user space unit.
  The minimum UserUnit is 1 (1 unit = 1/72 inch).
  The maximum UserUnit is 75,000.
  Note that this userunit only works starting with PDF1.6!
 @return Returns the userunit.
 */
- (jfloat)getUserunit;

/*!
 @brief Use this method to find out if 1.5 compression is on.
 @return the 1.5 compression status
 */
- (jboolean)isFullCompression;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfXConformance#isPdfX()
 */
- (jboolean)isPdfX;

/*!
 @brief Gets the transparency blending colorspace.
 @return <code>true</code> if the transparency blending colorspace is RGB, <code>false</code>
  if it is the default blending colorspace
 @since 2.1.0
 */
- (jboolean)isRgbTransparencyBlending;

/*!
 @brief Use this method to get the strictImageSequence status.
 @return value of property strictImageSequence
 */
- (jboolean)isStrictImageSequence;

/*!
 @brief Check if the document is marked for tagging.
 @return <CODE>true</CODE> if the document is marked for tagging
 */
- (jboolean)isTagged;

/*!
 @brief Gets the flag indicating the presence of structure elements that contain user properties attributes.
 @return the user properties flag
 */
- (jboolean)isUserProperties;

/*!
 @brief Signals that the <CODE>Document</CODE> has been opened and that 
 <CODE>Elements</CODE> can be added.
 <P>
  When this method is called, the PDF-document header is
  written to the outputstream.
 - seealso: com.aowagie.text.DocWriter#open()
 */
- (void)open;

- (void)setAdditionalActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                         withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfVersion#setAtLeastPdfVersion(char)
 */
- (void)setAtLeastPdfVersionWithChar:(jchar)version_;

/*!
 @brief Use this method to add the Collection dictionary.
 @param collection a dictionary of type PdfCollection
 */
- (void)setCollectionWithComAowagieTextPdfCollectionPdfCollection:(ComAowagieTextPdfCollectionPdfCollection *)collection;

/*!
 @brief Sets the compression level to be used for streams written by this writer.
 @param compressionLevel a value between 0 (best speed) and 9 (best compression)
 @since 2.1.3
 */
- (void)setCompressionLevelWithInt:(jint)compressionLevel;

/*!
 @brief Use this method to set the crop box.
 The crop box should not be rotated even if the page is rotated.
  This change only takes effect in the next page.
 @param crop the crop box
 */
- (void)setCropBoxSizeWithComAowagieTextRectangle:(ComAowagieTextRectangle *)crop;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfPageActions#setDuration(int)
 */
- (void)setDurationWithInt:(jint)seconds;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfEncryptionSettings#setEncryption(byte[], byte[], int, int)
 */
- (void)setEncryptionWithByteArray:(IOSByteArray *)userPassword
                     withByteArray:(IOSByteArray *)ownerPassword
                           withInt:(jint)permissions
                           withInt:(jint)encryptionType;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfEncryptionSettings#setEncryption(java.security.cert.Certificate[], int[], int)
 */
- (void)setEncryptionWithJavaSecurityCertCertificateArray:(IOSObjectArray *)certs
                                             withIntArray:(IOSIntArray *)permissions
                                                  withInt:(jint)encryptionType;

/*!
 @brief Use this method to set the group dictionary.
 @param group New value of property group.
 */
- (void)setGroupWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)group;

/*!
 @brief Sets the initial leading for the PDF document.
 This has to be done before the document is opened.
 @param leading the initial leading
 @since 2.1.6
 @throw DocumentExceptionif you try setting the leading after the document was opened.
 */
- (void)setInitialLeadingWithFloat:(jfloat)leading;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfDocumentActions#setOpenAction(com.aowagie.text.pdf.PdfAction)
 */
- (void)setOpenActionWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfDocumentActions#setOpenAction(java.lang.String)
 */
- (void)setOpenActionWithNSString:(NSString *)name;

/*!
 @brief Sets the bookmarks.The list structure is defined in 
 <code>SimpleBookmark</code>.
 @param outlines the bookmarks or  <CODE> null </CODE>  to remove any
 */
- (void)setOutlinesWithJavaUtilList:(id<JavaUtilList>)outlines;

/*!
 @brief Sets the values of the output intent dictionary.Null values are allowed to
  suppress any key.
 @param outputConditionIdentifier a value
 @param outputCondition a value, "PDFA/A" to force GTS_PDFA1, otherwise cued by pdfxConformance.
 @param registryName a value
 @param info a value
 @param colorProfile a value
 @since 2.1.5
 @throw IOExceptionon error
 */
- (void)setOutputIntentsWithNSString:(NSString *)outputConditionIdentifier
                        withNSString:(NSString *)outputCondition
                        withNSString:(NSString *)registryName
                        withNSString:(NSString *)info
  withHarmonyJavaAwtColorICC_Profile:(HarmonyJavaAwtColorICC_Profile *)colorProfile;

- (void)setPageActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                   withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action;

/*!
 @brief Use this method to make sure a page is added,
  even if it's empty.If you use setPageEmpty(false),
  invoking newPage() after a blank page will add a newPage.
 @param pageEmpty the state
 */
- (void)setPageEmptyWithBoolean:(jboolean)pageEmpty;

/*!
 @brief Sets the <CODE>PdfPageEvent</CODE> for this document.
 @param event the  <CODE> PdfPageEvent </CODE>  for this document
 */
- (void)setPageEventWithComAowagieTextPdfPdfPageEvent:(id<ComAowagieTextPdfPdfPageEvent>)event;

/*!
 @brief Use this method to add page labels
 @param pageLabels the page labels
 */
- (void)setPageLabelsWithComAowagieTextPdfPdfPageLabels:(ComAowagieTextPdfPdfPageLabels *)pageLabels;

/*!
 @brief Use this method to set the XMP Metadata for each page.
 @param xmpMetadata The xmpMetadata to set.
 */
- (void)setPageXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfVersion#setPdfVersion(char)
 */
- (void)setPdfVersionWithChar:(jchar)version_;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfVersion#setPdfVersion(com.aowagie.text.pdf.PdfName)
 */
- (void)setPdfVersionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)version_;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfXConformance#setPDFXConformance(int)
 */
- (void)setPDFXConformanceWithInt:(jint)pdfx;

/*!
 @brief Sets the transparency blending colorspace to RGB.The default blending colorspace is
  CMYK and will result in faded colors in the screen and in printing.
 Calling this method
  will return the RGB colors to what is expected. The RGB blending will be applied to all subsequent pages
  until other value is set.
  Note that this is a generic solution that may not work in all cases.
 @param rgbTransparencyBlending <code> true </code>  to set the transparency blending colorspace to RGB,  <code> false </code>
   to use the default blending colorspace
 @since 2.1.0
 */
- (void)setRgbTransparencyBlendingWithBoolean:(jboolean)rgbTransparencyBlending;

/*!
 @brief Use this method to set the run direction.
 This is only used as a placeholder as it does not affect anything.
 @param runDirection the run direction
 */
- (void)setRunDirectionWithInt:(jint)runDirection;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfAnnotations#setSigFlags(int)
 */
- (void)setSigFlagsWithInt:(jint)f;

/*!
 @brief Use this method to set the ratio between the extra word spacing and
  the extra character spacing when the text is fully justified.
 Extra word spacing will grow <CODE>spaceCharRatio</CODE> times more
  than extra character spacing. If the ratio is <CODE>PdfWriter.NO_SPACE_CHAR_RATIO</CODE>
  then the extra character spacing will be zero.
 @param spaceCharRatio the ratio between the extra word spacing and the extra character spacing
 */
- (void)setSpaceCharRatioWithFloat:(jfloat)spaceCharRatio;

/*!
 @brief Use this method to set the image sequence, so that it follows
  the text in strict order (or not).
 @param strictImageSequence new value of property strictImageSequence
 */
- (void)setStrictImageSequenceWithBoolean:(jboolean)strictImageSequence;

/*!
 @brief Sets the value for the Tabs entry in the page tree.
 @param tabs Can be PdfName.R, PdfName.C or PdfName.S.  Since the Adobe Extensions Level 3, it can also be PdfName.A
   or PdfName.W
 @since 2.1.5
 */
- (void)setTabsWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)tabs;

/*!
 @brief Use this method to set the thumbnail image for the current page.
 @param image the image
 @throw PdfExceptionon error
 @throw DocumentExceptionor error
 */
- (void)setThumbnailWithComAowagieTextImage:(ComAowagieTextImage *)image;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfPageActions#setTransition(com.aowagie.text.pdf.PdfTransition)
 */
- (void)setTransitionWithComAowagieTextPdfPdfTransition:(ComAowagieTextPdfPdfTransition *)transition;

/*!
 @brief Sets the flag indicating the presence of structure elements that contain user properties attributes.
 @param userProperties the user properties flag
 */
- (void)setUserPropertiesWithBoolean:(jboolean)userProperties;

/*!
 @brief Use this method to set the user unit.
 A UserUnit is a value that defines the default user space unit.
  The minimum UserUnit is 1 (1 unit = 1/72 inch).
  The maximum UserUnit is 75,000.
  Note that this userunit only works starting with PDF1.6!
 @param userunit The userunit to set.
 @throw DocumentExceptionon error
 */
- (void)setUserunitWithFloat:(jfloat)userunit;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfViewerPreferences#setViewerPreferences(int)
 */
- (void)setViewerPreferencesWithInt:(jint)preferences;

/*!
 @brief Use this method to set the XMP Metadata.
 @param xmpMetadata The xmpMetadata to set.
 */
- (void)setXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata;

#pragma mark Protected

/*!
 @brief Constructs a <CODE>PdfWriter</CODE>.
 */
- (instancetype)init;

/*!
 @brief Constructs a <CODE>PdfWriter</CODE>.
 <P>
  Remark: a PdfWriter can only be constructed by calling the method 
 <CODE>getInstance(Document document, OutputStream os)</CODE>.
 @param document The  <CODE> PdfDocument </CODE>  that has to be written
 @param os The  <CODE> OutputStream </CODE>  the writer has to write to.
 */
- (instancetype)initWithComAowagieTextPdfPdfDocument:(ComAowagieTextPdfPdfDocument *)document
                              withJavaIoOutputStream:(JavaIoOutputStream *)os;

- (void)addSharedObjectsToBody;

/*!
 @param erase Erase
 @since 2.1.2
 */
- (void)fillOCPropertiesWithBoolean:(jboolean)erase;

- (ComAowagieTextPdfPdfDictionary *)getCatalogWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)rootObj;

- (jint)getNewObjectNumberWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                                 withInt:(jint)number
                                                 withInt:(jint)generation;

/*!
 @brief Gets an indirect reference to a JBIG2 Globals stream.
 Adds the stream if it hasn't already been added to the writer.
 @param content a byte array that may already been added to the writer inside a stream object.
 @return Reference
 @since 2.1.5
 */
- (ComAowagieTextPdfPdfIndirectReference *)getReferenceJBIG2GlobalsWithByteArray:(IOSByteArray *)content;

- (void)writeOutlinesWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)catalog
                                            withBoolean:(jboolean)namedAsNames;

#pragma mark Package-Private

/*!
 @brief Adds some <CODE>PdfContents</CODE> to this Writer.
 <P>
  The document has to be open before you can begin to add content
  to the body of the document.
 @return a <CODE>PdfIndirectReference</CODE>
 @param page the  <CODE> PdfPage </CODE>  to add
 @param contents the  <CODE> PdfContents </CODE>  of the page
 @throw PdfExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectReference *)addWithComAowagieTextPdfPdfPage:(ComAowagieTextPdfPdfPage *)page
                                          withComAowagieTextPdfPdfContents:(ComAowagieTextPdfPdfContents *)contents;

- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot
                                                withInt:(jint)page;

/*!
 @brief Use this method to adds an image to the document
  but not to the page resources.It is used with
  templates and <CODE>Document.add(Image)</CODE>.
 Use this method only if you know what you're doing!
 @param image the  <CODE> Image </CODE>  to add
 @return the name of the image added
 @throw PdfExceptionon error
 @throw DocumentExceptionon error
 */
- (ComAowagieTextPdfPdfName *)addDirectImageSimpleWithComAowagieTextImage:(ComAowagieTextImage *)image;

/*!
 @brief Adds a template to the document but not to the page resources.
 @param template_ the template to add
 @param forcedName the template name, rather than a generated one. Can be null
 @return the <CODE>PdfName</CODE> for this template
 */
- (ComAowagieTextPdfPdfName *)addDirectTemplateSimpleWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)template_
                                                         withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)forcedName;

/*!
 @brief Use this method to add a file attachment at the document level.
 @param description_ the file description
 @param fs the file specification
 @throw IOExceptionon error
 */
- (void)addFileAttachmentWithNSString:(NSString *)description_
withComAowagieTextPdfPdfFileSpecification:(ComAowagieTextPdfPdfFileSpecification *)fs;

/*!
 @brief Use this method to add a JavaScript action at the document level.
 When the document opens, all this JavaScript runs.
 @param code the JavaScript code
 @param unicode select JavaScript unicode. Note that the internal  Acrobat JavaScript engine does not support unicode,
   so this may or may not work for you
 */
- (void)addJavaScriptWithNSString:(NSString *)code
                      withBoolean:(jboolean)unicode;

/*!
 @brief Adds the local destinations to the body of the document.
 @param dest the  <CODE> HashMap </CODE>  containing the destinations
 @throw IOExceptionon error
 */
- (void)addLocalDestinationsWithJavaUtilTreeMap:(JavaUtilTreeMap *)dest;

/*!
 @brief Adds a <CODE>BaseFont</CODE> to the document but not to the page resources.
 It is used for templates.
 @param bf the  <CODE> BaseFont </CODE>  to add
 @return an <CODE>Object[]</CODE> where position 0 is a <CODE>PdfName</CODE>
  and position 1 is an <CODE>PdfIndirectReference</CODE>
 */
- (ComAowagieTextPdfFontDetails *)addSimpleWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)bf;

/*!
 @brief Adds a <CODE>SpotColor</CODE> to the document but not to the page resources.
 @param spc the  <CODE> SpotColor </CODE>  to add
 @return an <CODE>Object[]</CODE> where position 0 is a <CODE>PdfName</CODE>
  and position 1 is an <CODE>PdfIndirectReference</CODE>
 */
- (ComAowagieTextPdfColorDetails *)addSimpleWithComAowagieTextPdfPdfSpotColor:(ComAowagieTextPdfPdfSpotColor *)spc;

- (IOSObjectArray *)addSimpleExtGStateWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)gstate;

- (ComAowagieTextPdfPdfName *)addSimplePatternWithComAowagieTextPdfPdfPatternPainter:(ComAowagieTextPdfPdfPatternPainter *)painter;

- (ComAowagieTextPdfColorDetails *)addSimplePatternColorspaceWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color;

- (IOSObjectArray *)addSimplePropertyWithId:(id)prop
  withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)refi;

- (void)addSimpleShadingWithComAowagieTextPdfPdfShading:(ComAowagieTextPdfPdfShading *)shading;

- (void)addSimpleShadingPatternWithComAowagieTextPdfPdfShadingPattern:(ComAowagieTextPdfPdfShadingPattern *)shading;

/*!
 @brief Use this method to add a PDF object to the PDF body.
 Use this method only if you know what you're doing!
 @param object Object
 @return a PdfIndirectObject
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object;

/*!
 @brief Use this method to add a PDF object to the PDF body.
 Use this method only if you know what you're doing!
 @param object Object
 @param refNumber Reference
 @return a PdfIndirectObject
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                        withInt:(jint)refNumber;

/*!
 @brief Use this method to add a PDF object to the PDF body.
 Use this method only if you know what you're doing!
 @param object Object
 @param refNumber Reference
 @param inObjStm inObjStm
 @return a PdfIndirectObject
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                        withInt:(jint)refNumber
                                                                    withBoolean:(jboolean)inObjStm;

/*!
 @brief Use this method to add a PDF object to the PDF body.
 Use this method only if you know what you're doing!
 @param object Object
 @param ref Reference
 @param inObjStm inObjStm
 @return a PdfIndirectObject
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                      withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref
                                                                    withBoolean:(jboolean)inObjStm;

- (void)eliminateFontSubsetWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)fonts;

- (ComAowagieTextPdfPdfName *)getColorspaceName;

- (ComAowagieTextPdfPdfIndirectReference *)getCurrentPage;

- (ComAowagieTextPdfPdfEncryption *)getEncryption;

/*!
 @brief return the <CODE>PdfIndirectReference</CODE> to the image with a given name.
 @param name the name of the image
 @return a <CODE>PdfIndirectReference</CODE>
 */
- (ComAowagieTextPdfPdfIndirectReference *)getImageReferenceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)name;

- (jint)getIndirectReferenceNumber;

/*!
 @brief Gets the <CODE>PdfDocument</CODE> associated with this writer.
 @return the <CODE>PdfDocument</CODE>
 */
- (ComAowagieTextPdfPdfDocument *)getPdfDocument;

/*!
 @brief Returns the version information.
 @return Version
 */
- (ComAowagieTextPdfInternalPdfVersionImp *)getPdfVersion;

- (ComAowagieTextPdfRandomAccessFileOrArray *)getReaderFileWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader;

- (jboolean)propertyExistsWithId:(id)prop;

- (void)registerLayerWithComAowagieTextPdfPdfOCG:(id<ComAowagieTextPdfPdfOCG>)layer;

/*!
 @brief Use this method to releases the memory used by a template.
 This method writes the template to the output.
  The template can still be added to any content
  but changes to the template itself won't have any effect.
 @param tp the template to release
 @throw IOExceptionon error
 */
- (void)releaseTemplateWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)tp;

/*!
 @brief Resets all the direct contents to empty.
 This happens when a new page is started.
 */
- (void)resetContent;

/*!
 @brief Use this method to set the document's compression to the
  PDF 1.5 mode with object streams and xref streams.
 It can be set at any time but once set it can't be unset. 
 <p>
  If set before opening the document it will also set the pdf version to 1.5.
 */
- (void)setFullCompression;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComAowagieTextDocument:(ComAowagieTextDocument *)arg0
                        withJavaIoOutputStream:(JavaIoOutputStream *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfPdfWriter)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, pdf_, ComAowagieTextPdfPdfDocument *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, body_, ComAowagieTextPdfPdfWriter_PdfBody *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, root_, ComAowagieTextPdfPdfPages *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, newBookmarks_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, pdf_version_, ComAowagieTextPdfInternalPdfVersionImp *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, xmpMetadata_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, crypto_, ComAowagieTextPdfPdfEncryption *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, currentPdfReaderInstance_, ComAowagieTextPdfPdfReaderInstance *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentOCG_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, OCProperties_, ComAowagieTextPdfPdfOCProperties *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, OCGRadioGroup_, ComAowagieTextPdfPdfArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, OCGLocked_, ComAowagieTextPdfPdfArray *)

/*!
 @brief The highest generation number possible.
 @since iText 2.1.6
 */
inline jint ComAowagieTextPdfPdfWriter_get_GENERATION_MAX(void);
#define ComAowagieTextPdfPdfWriter_GENERATION_MAX 65535
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, GENERATION_MAX, jint)

/*!
 @brief possible PDF version (header)
 */
inline jchar ComAowagieTextPdfPdfWriter_get_VERSION_1_2(void);
#define ComAowagieTextPdfPdfWriter_VERSION_1_2 '2'
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, VERSION_1_2, jchar)

/*!
 @brief possible PDF version (header)
 */
inline jchar ComAowagieTextPdfPdfWriter_get_VERSION_1_3(void);
#define ComAowagieTextPdfPdfWriter_VERSION_1_3 '3'
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, VERSION_1_3, jchar)

/*!
 @brief possible PDF version (header)
 */
inline jchar ComAowagieTextPdfPdfWriter_get_VERSION_1_4(void);
#define ComAowagieTextPdfPdfWriter_VERSION_1_4 '4'
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, VERSION_1_4, jchar)

/*!
 @brief possible PDF version (header)
 */
inline jchar ComAowagieTextPdfPdfWriter_get_VERSION_1_5(void);
#define ComAowagieTextPdfPdfWriter_VERSION_1_5 '5'
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, VERSION_1_5, jchar)

/*!
 @brief possible PDF version (header)
 */
inline jchar ComAowagieTextPdfPdfWriter_get_VERSION_1_6(void);
#define ComAowagieTextPdfPdfWriter_VERSION_1_6 '6'
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, VERSION_1_6, jchar)

/*!
 @brief possible PDF version (header)
 */
inline jchar ComAowagieTextPdfPdfWriter_get_VERSION_1_7(void);
#define ComAowagieTextPdfPdfWriter_VERSION_1_7 '7'
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, VERSION_1_7, jchar)

/*!
 @brief possible PDF version (catalog)
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PDF_VERSION_1_2(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PDF_VERSION_1_2, ComAowagieTextPdfPdfName *)

/*!
 @brief possible PDF version (catalog)
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PDF_VERSION_1_3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PDF_VERSION_1_3, ComAowagieTextPdfPdfName *)

/*!
 @brief possible PDF version (catalog)
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PDF_VERSION_1_4(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PDF_VERSION_1_4, ComAowagieTextPdfPdfName *)

/*!
 @brief possible PDF version (catalog)
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PDF_VERSION_1_5(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PDF_VERSION_1_5, ComAowagieTextPdfPdfName *)

/*!
 @brief possible PDF version (catalog)
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PDF_VERSION_1_6(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_6;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PDF_VERSION_1_6, ComAowagieTextPdfPdfName *)

/*!
 @brief possible PDF version (catalog)
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PDF_VERSION_1_7(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_7;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PDF_VERSION_1_7, ComAowagieTextPdfPdfName *)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageLayoutSinglePage(void);
#define ComAowagieTextPdfPdfWriter_PageLayoutSinglePage 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageLayoutSinglePage, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageLayoutOneColumn(void);
#define ComAowagieTextPdfPdfWriter_PageLayoutOneColumn 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageLayoutOneColumn, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageLayoutTwoColumnLeft(void);
#define ComAowagieTextPdfPdfWriter_PageLayoutTwoColumnLeft 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageLayoutTwoColumnLeft, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageLayoutTwoColumnRight(void);
#define ComAowagieTextPdfPdfWriter_PageLayoutTwoColumnRight 8
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageLayoutTwoColumnRight, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageLayoutTwoPageLeft(void);
#define ComAowagieTextPdfPdfWriter_PageLayoutTwoPageLeft 16
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageLayoutTwoPageLeft, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageLayoutTwoPageRight(void);
#define ComAowagieTextPdfPdfWriter_PageLayoutTwoPageRight 32
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageLayoutTwoPageRight, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageModeUseNone(void);
#define ComAowagieTextPdfPdfWriter_PageModeUseNone 64
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageModeUseNone, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageModeUseOutlines(void);
#define ComAowagieTextPdfPdfWriter_PageModeUseOutlines 128
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageModeUseOutlines, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageModeUseThumbs(void);
#define ComAowagieTextPdfPdfWriter_PageModeUseThumbs 256
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageModeUseThumbs, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageModeFullScreen(void);
#define ComAowagieTextPdfPdfWriter_PageModeFullScreen 512
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageModeFullScreen, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageModeUseOC(void);
#define ComAowagieTextPdfPdfWriter_PageModeUseOC 1024
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageModeUseOC, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PageModeUseAttachments(void);
#define ComAowagieTextPdfPdfWriter_PageModeUseAttachments 2048
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PageModeUseAttachments, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_HideToolbar(void);
#define ComAowagieTextPdfPdfWriter_HideToolbar 4096
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, HideToolbar, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_HideMenubar(void);
#define ComAowagieTextPdfPdfWriter_HideMenubar 8192
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, HideMenubar, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_HideWindowUI(void);
#define ComAowagieTextPdfPdfWriter_HideWindowUI 16384
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, HideWindowUI, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_FitWindow(void);
#define ComAowagieTextPdfPdfWriter_FitWindow 32768
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, FitWindow, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_CenterWindow(void);
#define ComAowagieTextPdfPdfWriter_CenterWindow 65536
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, CenterWindow, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_DisplayDocTitle(void);
#define ComAowagieTextPdfPdfWriter_DisplayDocTitle 131072
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, DisplayDocTitle, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_NonFullScreenPageModeUseNone(void);
#define ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseNone 262144
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, NonFullScreenPageModeUseNone, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_NonFullScreenPageModeUseOutlines(void);
#define ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseOutlines 524288
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, NonFullScreenPageModeUseOutlines, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_NonFullScreenPageModeUseThumbs(void);
#define ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseThumbs 1048576
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, NonFullScreenPageModeUseThumbs, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_NonFullScreenPageModeUseOC(void);
#define ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseOC 2097152
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, NonFullScreenPageModeUseOC, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_DirectionL2R(void);
#define ComAowagieTextPdfPdfWriter_DirectionL2R 4194304
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, DirectionL2R, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_DirectionR2L(void);
#define ComAowagieTextPdfPdfWriter_DirectionR2L 8388608
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, DirectionR2L, jint)

/*!
 @brief A viewer preference
 */
inline jint ComAowagieTextPdfPdfWriter_get_PrintScalingNone(void);
#define ComAowagieTextPdfPdfWriter_PrintScalingNone 16777216
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PrintScalingNone, jint)

/*!
 @brief action value
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_DOCUMENT_CLOSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_DOCUMENT_CLOSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, DOCUMENT_CLOSE, ComAowagieTextPdfPdfName *)

/*!
 @brief action value
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_WILL_SAVE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_WILL_SAVE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, WILL_SAVE, ComAowagieTextPdfPdfName *)

/*!
 @brief action value
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_DID_SAVE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_DID_SAVE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, DID_SAVE, ComAowagieTextPdfPdfName *)

/*!
 @brief action value
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_WILL_PRINT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_WILL_PRINT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, WILL_PRINT, ComAowagieTextPdfPdfName *)

/*!
 @brief action value
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_DID_PRINT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_DID_PRINT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, DID_PRINT, ComAowagieTextPdfPdfName *)

/*!
 @brief A PDF/X level.
 */
inline jint ComAowagieTextPdfPdfWriter_get_PDFXNONE(void);
#define ComAowagieTextPdfPdfWriter_PDFXNONE 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PDFXNONE, jint)

/*!
 @brief A PDF/X level.
 */
inline jint ComAowagieTextPdfPdfWriter_get_PDFX1A2001(void);
#define ComAowagieTextPdfPdfWriter_PDFX1A2001 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PDFX1A2001, jint)

/*!
 @brief A PDF/X level.
 */
inline jint ComAowagieTextPdfPdfWriter_get_PDFX32002(void);
#define ComAowagieTextPdfPdfWriter_PDFX32002 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PDFX32002, jint)

/*!
 @brief PDFA-1A level.
 */
inline jint ComAowagieTextPdfPdfWriter_get_PDFA1A(void);
#define ComAowagieTextPdfPdfWriter_PDFA1A 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PDFA1A, jint)

/*!
 @brief PDFA-1B level.
 */
inline jint ComAowagieTextPdfPdfWriter_get_PDFA1B(void);
#define ComAowagieTextPdfPdfWriter_PDFA1B 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PDFA1B, jint)

/*!
 @brief PDFA-2A level.
 */
inline jint ComAowagieTextPdfPdfWriter_get_PDFA2A(void);
#define ComAowagieTextPdfPdfWriter_PDFA2A 5
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PDFA2A, jint)

/*!
 @brief PDFA-2B level.
 */
inline jint ComAowagieTextPdfPdfWriter_get_PDFA2B(void);
#define ComAowagieTextPdfPdfWriter_PDFA2B 6
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, PDFA2B, jint)

/*!
 @brief Type of encryption
 */
inline jint ComAowagieTextPdfPdfWriter_get_STANDARD_ENCRYPTION_40(void);
#define ComAowagieTextPdfPdfWriter_STANDARD_ENCRYPTION_40 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, STANDARD_ENCRYPTION_40, jint)

/*!
 @brief Type of encryption
 */
inline jint ComAowagieTextPdfPdfWriter_get_STANDARD_ENCRYPTION_128(void);
#define ComAowagieTextPdfPdfWriter_STANDARD_ENCRYPTION_128 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, STANDARD_ENCRYPTION_128, jint)

/*!
 @brief Type of encryption
 */
inline jint ComAowagieTextPdfPdfWriter_get_ENCRYPTION_AES_128(void);
#define ComAowagieTextPdfPdfWriter_ENCRYPTION_AES_128 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ENCRYPTION_AES_128, jint)

/*!
 @brief Type of encryption
 */
inline jint ComAowagieTextPdfPdfWriter_get_ENCRYPTION_AES_256_V3(void);
#define ComAowagieTextPdfPdfWriter_ENCRYPTION_AES_256_V3 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ENCRYPTION_AES_256_V3, jint)

/*!
 @brief Mask to separate the encryption type from the encryption mode.
 */
inline jint ComAowagieTextPdfPdfWriter_get_ENCRYPTION_MASK(void);
#define ComAowagieTextPdfPdfWriter_ENCRYPTION_MASK 7
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ENCRYPTION_MASK, jint)

/*!
 @brief Add this to the mode to keep the metadata in clear text
 */
inline jint ComAowagieTextPdfPdfWriter_get_DO_NOT_ENCRYPT_METADATA(void);
#define ComAowagieTextPdfPdfWriter_DO_NOT_ENCRYPT_METADATA 8
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, DO_NOT_ENCRYPT_METADATA, jint)

/*!
 @brief Add this to the mode to keep encrypt only the embedded files.
 @since 2.1.3
 */
inline jint ComAowagieTextPdfPdfWriter_get_EMBEDDED_FILES_ONLY(void);
#define ComAowagieTextPdfPdfWriter_EMBEDDED_FILES_ONLY 24
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, EMBEDDED_FILES_ONLY, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_PRINTING(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_PRINTING 2052
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_PRINTING, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_MODIFY_CONTENTS(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_MODIFY_CONTENTS 8
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_MODIFY_CONTENTS, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_COPY(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_COPY 16
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_COPY, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_MODIFY_ANNOTATIONS(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_MODIFY_ANNOTATIONS 32
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_MODIFY_ANNOTATIONS, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_FILL_IN(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_FILL_IN 256
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_FILL_IN, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_SCREENREADERS(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_SCREENREADERS 512
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_SCREENREADERS, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_ASSEMBLY(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_ASSEMBLY 1024
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_ASSEMBLY, jint)

/*!
 @brief The operation permitted when the document is opened with the user password
 @since 2.0.7
 */
inline jint ComAowagieTextPdfPdfWriter_get_ALLOW_DEGRADED_PRINTING(void);
#define ComAowagieTextPdfPdfWriter_ALLOW_DEGRADED_PRINTING 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, ALLOW_DEGRADED_PRINTING, jint)

/*!
 @brief Use the default run direction.
 */
inline jint ComAowagieTextPdfPdfWriter_get_RUN_DIRECTION_DEFAULT(void);
#define ComAowagieTextPdfPdfWriter_RUN_DIRECTION_DEFAULT 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, RUN_DIRECTION_DEFAULT, jint)

/*!
 @brief Do not use bidirectional reordering.
 */
inline jint ComAowagieTextPdfPdfWriter_get_RUN_DIRECTION_NO_BIDI(void);
#define ComAowagieTextPdfPdfWriter_RUN_DIRECTION_NO_BIDI 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, RUN_DIRECTION_NO_BIDI, jint)

/*!
 @brief Use bidirectional reordering with left-to-right
  preferential run direction.
 */
inline jint ComAowagieTextPdfPdfWriter_get_RUN_DIRECTION_LTR(void);
#define ComAowagieTextPdfPdfWriter_RUN_DIRECTION_LTR 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, RUN_DIRECTION_LTR, jint)

/*!
 @brief Use bidirectional reordering with right-to-left
  preferential run direction.
 */
inline jint ComAowagieTextPdfPdfWriter_get_RUN_DIRECTION_RTL(void);
#define ComAowagieTextPdfPdfWriter_RUN_DIRECTION_RTL 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, RUN_DIRECTION_RTL, jint)

FOUNDATION_EXPORT ComAowagieTextPdfPdfWriter *ComAowagieTextPdfPdfWriter_getInstanceWithComAowagieTextDocument_withJavaIoOutputStream_(ComAowagieTextDocument *document, JavaIoOutputStream *os);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfWriter_init(ComAowagieTextPdfPdfWriter *self);

FOUNDATION_EXPORT ComAowagieTextPdfPdfWriter *new_ComAowagieTextPdfPdfWriter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfWriter *create_ComAowagieTextPdfPdfWriter_init(void);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfDocument *document, JavaIoOutputStream *os);

FOUNDATION_EXPORT ComAowagieTextPdfPdfWriter *new_ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(ComAowagieTextPdfPdfDocument *document, JavaIoOutputStream *os) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfWriter *create_ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(ComAowagieTextPdfPdfDocument *document, JavaIoOutputStream *os);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfWriter)

#endif

#if !defined (ComAowagieTextPdfPdfWriter_PdfBody_) && (INCLUDE_ALL_PdfWriter || defined(INCLUDE_ComAowagieTextPdfPdfWriter_PdfBody))
#define ComAowagieTextPdfPdfWriter_PdfBody_

@class ComAowagieTextPdfPdfIndirectObject;
@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfObject;
@class JavaIoOutputStream;

/*!
 @brief This class generates the structure of a PDF document.
 <P>
  This class covers the third section of Chapter 5 in the 'Portable Document Format
  Reference Manual version 1.3' (page 55-60). It contains the body of a PDF document
  (section 5.14) and it can also generate a Cross-reference Table (section 5.15).
 - seealso: PdfWriter
 - seealso: PdfObject
 - seealso: PdfIndirectObject
 */
@interface ComAowagieTextPdfPdfWriter_PdfBody : NSObject

#pragma mark Package-Private

/*!
 @brief Adds a <CODE>PdfObject</CODE> to the body.
 <P>
  This methods creates a <CODE>PdfIndirectObject</CODE> with a
  certain number, containing the given <CODE>PdfObject</CODE>.
  It also adds a <CODE>PdfCrossReference</CODE> for this object
  to an <CODE>ArrayList</CODE> that will be used to build the
  Cross-reference Table.
 @param object a  <CODE> PdfObject </CODE>
 @return a <CODE>PdfIndirectObject</CODE>
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object;

/*!
 @brief Adds a <CODE>PdfObject</CODE> to the body given an already existing
  PdfIndirectReference.
 <P>
  This methods creates a <CODE>PdfIndirectObject</CODE> with the number given by 
 <CODE>ref</CODE>, containing the given <CODE>PdfObject</CODE>.
  It also adds a <CODE>PdfCrossReference</CODE> for this object
  to an <CODE>ArrayList</CODE> that will be used to build the
  Cross-reference Table.
 @param object a  <CODE> PdfObject </CODE>
 @param ref a  <CODE> PdfIndirectReference </CODE>
 @return a <CODE>PdfIndirectObject</CODE>
 @throw IOExceptionon error
 */
- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref;

- (jint)getIndirectReferenceNumber;

/*!
 @brief Gets a PdfIndirectReference for an object that will be created in the future.
 @return a PdfIndirectReference
 */
- (ComAowagieTextPdfPdfIndirectReference *)getPdfIndirectReference;

/*!
 @brief Returns the offset of the Cross-Reference table.
 @return an offset
 */
- (jint)offset;

- (void)setRefnumWithInt:(jint)refnum;

/*!
 @brief Returns the total number of objects contained in the CrossReferenceTable of this <CODE>Body</CODE>.
 @return a number of objects
 */
- (jint)size;

/*!
 @brief Returns the CrossReferenceTable of the <CODE>Body</CODE>.
 @param os OutputStream
 @param root Root
 @param info Info
 @param encryption Encryption
 @param fileID FileID
 @param prevxref Prev xref
 @throw IOExceptionon error
 */
- (void)writeCrossReferenceTableWithJavaIoOutputStream:(JavaIoOutputStream *)os
             withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)root
             withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)info
             withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)encryption
                        withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)fileID
                                               withInt:(jint)prevxref;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfWriter_PdfBody)

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfWriter_PdfBody)

#endif

#if !defined (ComAowagieTextPdfPdfWriter_PdfTrailer_) && (INCLUDE_ALL_PdfWriter || defined(INCLUDE_ComAowagieTextPdfPdfWriter_PdfTrailer))
#define ComAowagieTextPdfPdfWriter_PdfTrailer_

#define RESTRICT_PdfDictionary 1
#define INCLUDE_ComAowagieTextPdfPdfDictionary 1
#include "PdfDictionary.h"

@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfName;
@class ComAowagieTextPdfPdfObject;
@class ComAowagieTextPdfPdfWriter;
@class JavaIoOutputStream;

/*!
 @brief <CODE>PdfTrailer</CODE> is the PDF Trailer object.
 <P>
  This object is described in the 'Portable Document Format Reference Manual version 1.3'
  section 5.16 (page 59-60).
 */
@interface ComAowagieTextPdfPdfWriter_PdfTrailer : ComAowagieTextPdfPdfDictionary

#pragma mark Public

/*!
 @brief Returns the PDF representation of this <CODE>PdfObject</CODE>.
 @param writer Writer
 @param os Outpustream
 @throw IOExceptionon error
 */
- (void)toPdfWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withJavaIoOutputStream:(JavaIoOutputStream *)os;

#pragma mark Package-Private

/*!
 @brief Constructs a PDF-Trailer.
 @param size the number of entries in the  <CODE> PdfCrossReferenceTable </CODE>
 @param offset offset of the  <CODE> PdfCrossReferenceTable </CODE>
 @param root an indirect reference to the root of the PDF document
 @param info an indirect reference to the info object of the PDF document
 @param encryption Encryption
 @param fileID File Id
 @param prevxref Prev xref
 */
- (instancetype)initWithInt:(jint)size
                    withInt:(jint)offset
withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)root
withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)info
withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)encryption
withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)fileID
                    withInt:(jint)prevxref;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfWriter_PdfTrailer)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_(ComAowagieTextPdfPdfWriter_PdfTrailer *self, jint size, jint offset, ComAowagieTextPdfPdfIndirectReference *root, ComAowagieTextPdfPdfIndirectReference *info, ComAowagieTextPdfPdfIndirectReference *encryption, ComAowagieTextPdfPdfObject *fileID, jint prevxref);

FOUNDATION_EXPORT ComAowagieTextPdfPdfWriter_PdfTrailer *new_ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_(jint size, jint offset, ComAowagieTextPdfPdfIndirectReference *root, ComAowagieTextPdfPdfIndirectReference *info, ComAowagieTextPdfPdfIndirectReference *encryption, ComAowagieTextPdfPdfObject *fileID, jint prevxref) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfWriter_PdfTrailer *create_ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_(jint size, jint offset, ComAowagieTextPdfPdfIndirectReference *root, ComAowagieTextPdfPdfIndirectReference *info, ComAowagieTextPdfPdfIndirectReference *encryption, ComAowagieTextPdfPdfObject *fileID, jint prevxref);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfWriter_PdfTrailer)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfWriter")

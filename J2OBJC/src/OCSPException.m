//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/ocsp/OCSPException.java
//

#include "J2ObjC_source.h"
#include "OCSPException.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"

#if !__has_feature(objc_arc)
#error "OCSPException must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCertOcspOCSPException () {
 @public
  JavaLangThrowable *cause_OCSPException_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCertOcspOCSPException, cause_OCSPException_, JavaLangThrowable *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/ocsp/OCSPException.java"


#line 3
@implementation OrgSpongycastleCertOcspOCSPException


#line 8
- (instancetype)initWithNSString:(NSString *)name {
  OrgSpongycastleCertOcspOCSPException_initWithNSString_(self, name);
  return self;
}


#line 14
- (instancetype)initWithNSString:(NSString *)name
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgSpongycastleCertOcspOCSPException_initWithNSString_withJavaLangThrowable_(self, name, cause);
  return self;
}


#line 23
- (JavaLangThrowable *)getCause {
  
#line 25
  return cause_OCSPException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[2].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_OCSPException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;", "cause" };
  static const J2ObjcClassInfo _OrgSpongycastleCertOcspOCSPException = { "OCSPException", "org.spongycastle.cert.ocsp", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertOcspOCSPException;
}

@end


#line 8
void OrgSpongycastleCertOcspOCSPException_initWithNSString_(OrgSpongycastleCertOcspOCSPException *self, NSString *name) {
  JavaLangException_initWithNSString_(self,
#line 11
  name);
}


#line 8
OrgSpongycastleCertOcspOCSPException *new_OrgSpongycastleCertOcspOCSPException_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspOCSPException, initWithNSString_, name)
}


#line 8
OrgSpongycastleCertOcspOCSPException *create_OrgSpongycastleCertOcspOCSPException_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspOCSPException, initWithNSString_, name)
}


#line 14
void OrgSpongycastleCertOcspOCSPException_initWithNSString_withJavaLangThrowable_(OrgSpongycastleCertOcspOCSPException *self, NSString *name, JavaLangThrowable *cause) {
  JavaLangException_initWithNSString_(self,
#line 18
  name);
  
#line 20
  self->cause_OCSPException_ = cause;
}


#line 14
OrgSpongycastleCertOcspOCSPException *new_OrgSpongycastleCertOcspOCSPException_initWithNSString_withJavaLangThrowable_(NSString *name, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspOCSPException, initWithNSString_withJavaLangThrowable_, name, cause)
}


#line 14
OrgSpongycastleCertOcspOCSPException *create_OrgSpongycastleCertOcspOCSPException_initWithNSString_withJavaLangThrowable_(NSString *name, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspOCSPException, initWithNSString_withJavaLangThrowable_, name, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertOcspOCSPException)

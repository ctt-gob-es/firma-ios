//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Chunk.java
//

#include "BaseFont.h"
#include "Chunk.h"
#include "Color.h"
#include "DrawInterface.h"
#include "Element.h"
#include "Font.h"
#include "HyphenationEvent.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "J2ObjC_source.h"
#include "PdfAction.h"
#include "Utilities.h"
#include "java/lang/Boolean.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"

#if !__has_feature(objc_arc)
#error "Chunk must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextChunk () {
 @public
  /*!
   @brief This is the content of this chunk of text.
   */
  JavaLangStringBuffer *content_;
  /*!
   @brief This is the <CODE>Font</CODE> of this chunk of text.
   */
  ComAowagieTextFont *font_;
  /*!
   @brief Contains some of the attributes for this Chunk.
   */
  JavaUtilHashMap *attributes_;
}

/*!
 @brief Constructs a chunk of text with a char and a certain <CODE>Font</CODE>.
 @param c the content
 @param font the font
 */
- (instancetype)initWithChar:(jchar)c
      withComAowagieTextFont:(ComAowagieTextFont *)font;

/*!
 @brief Creates a tab Chunk.
 Note that separator chunks can't be used in combination with tab chunks!
 @param separator the drawInterface to use to draw the tab.
 @param tabPosition an X coordinate that will be used as start position for the next Chunk.
 @param newline if true, a newline will be added if the tabPosition has already been reached.
 @since 2.1.2
 */
- (instancetype)initWithComAowagieTextPdfDrawDrawInterface:(id<ComAowagieTextPdfDrawDrawInterface>)separator
                                                 withFloat:(jfloat)tabPosition
                                               withBoolean:(jboolean)newline;

/*!
 @brief Sets an arbitrary attribute.
 @param name the key for the attribute
 @param obj the value of the attribute
 @return this <CODE>Chunk</CODE>
 */
- (ComAowagieTextChunk *)setAttributeWithNSString:(NSString *)name
                                           withId:(id)obj;

/*!
 @brief Sets an horizontal line that can be an underline or a strikethrough.
 Actually, the line can be anywhere vertically and has always the <CODE>
  Chunk</CODE> width. Multiple call to this method will produce multiple
  lines.
 @param color the color of the line or 
  <CODE> null </CODE>  to follow the             text color
 @param thickness the absolute thickness of the line
 @param thicknessMul the thickness multiplication factor with the font size
 @param yPosition the absolute y position relative to the baseline
 @param yPositionMul the position multiplication factor with the font size
 @param cap the end line cap. Allowed values are
              PdfContentByte.LINE_CAP_BUTT, PdfContentByte.LINE_CAP_ROUND
              and PdfContentByte.LINE_CAP_PROJECTING_SQUARE
 @return this <CODE>Chunk</CODE>
 */
- (ComAowagieTextChunk *)setUnderlineWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color
                                                   withFloat:(jfloat)thickness
                                                   withFloat:(jfloat)thicknessMul
                                                   withFloat:(jfloat)yPosition
                                                   withFloat:(jfloat)yPositionMul
                                                     withInt:(jint)cap;

/*!
 @brief Sets the color and the size of the background <CODE>Chunk</CODE>.
 @param color the color of the background
 @param extraLeft increase the size of the rectangle in the left
 @param extraBottom increase the size of the rectangle in the bottom
 @param extraRight increase the size of the rectangle in the right
 @param extraTop increase the size of the rectangle in the top
 @return this <CODE>Chunk</CODE>
 */
- (ComAowagieTextChunk *)setBackgroundWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color
                                                    withFloat:(jfloat)extraLeft
                                                    withFloat:(jfloat)extraBottom
                                                    withFloat:(jfloat)extraRight
                                                    withFloat:(jfloat)extraTop;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextChunk, content_, JavaLangStringBuffer *)
J2OBJC_FIELD_SETTER(ComAowagieTextChunk, font_, ComAowagieTextFont *)
J2OBJC_FIELD_SETTER(ComAowagieTextChunk, attributes_, JavaUtilHashMap *)

/*!
 @brief This is a Chunk containing a newpage.
 */
inline ComAowagieTextChunk *ComAowagieTextChunk_get_NEXTPAGE(void);
static ComAowagieTextChunk *ComAowagieTextChunk_NEXTPAGE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextChunk, NEXTPAGE, ComAowagieTextChunk *)

__attribute__((unused)) static void ComAowagieTextChunk_initWithChar_withComAowagieTextFont_(ComAowagieTextChunk *self, jchar c, ComAowagieTextFont *font);

__attribute__((unused)) static ComAowagieTextChunk *new_ComAowagieTextChunk_initWithChar_withComAowagieTextFont_(jchar c, ComAowagieTextFont *font) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextChunk *create_ComAowagieTextChunk_initWithChar_withComAowagieTextFont_(jchar c, ComAowagieTextFont *font);

__attribute__((unused)) static void ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_(ComAowagieTextChunk *self, id<ComAowagieTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline);

__attribute__((unused)) static ComAowagieTextChunk *new_ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_(id<ComAowagieTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextChunk *create_ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_(id<ComAowagieTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline);

__attribute__((unused)) static ComAowagieTextChunk *ComAowagieTextChunk_setAttributeWithNSString_withId_(ComAowagieTextChunk *self, NSString *name, id obj);

__attribute__((unused)) static ComAowagieTextChunk *ComAowagieTextChunk_setUnderlineWithHarmonyJavaAwtColor_withFloat_withFloat_withFloat_withFloat_withInt_(ComAowagieTextChunk *self, HarmonyJavaAwtColor *color, jfloat thickness, jfloat thicknessMul, jfloat yPosition, jfloat yPositionMul, jint cap);

__attribute__((unused)) static ComAowagieTextChunk *ComAowagieTextChunk_setBackgroundWithHarmonyJavaAwtColor_withFloat_withFloat_withFloat_withFloat_(ComAowagieTextChunk *self, HarmonyJavaAwtColor *color, jfloat extraLeft, jfloat extraBottom, jfloat extraRight, jfloat extraTop);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Chunk.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextChunk)

NSString *ComAowagieTextChunk_OBJECT_REPLACEMENT_CHARACTER = @"\ufffc";
ComAowagieTextChunk *ComAowagieTextChunk_NEWLINE;
NSString *ComAowagieTextChunk_SEPARATOR = @"SEPARATOR";
NSString *ComAowagieTextChunk_TAB = @"TAB";
NSString *ComAowagieTextChunk_HSCALE = @"HSCALE";
NSString *ComAowagieTextChunk_UNDERLINE = @"UNDERLINE";
NSString *ComAowagieTextChunk_SUBSUPSCRIPT = @"SUBSUPSCRIPT";
NSString *ComAowagieTextChunk_SKEW = @"SKEW";
NSString *ComAowagieTextChunk_BACKGROUND = @"BACKGROUND";
NSString *ComAowagieTextChunk_TEXTRENDERMODE = @"TEXTRENDERMODE";
NSString *ComAowagieTextChunk_SPLITCHARACTER = @"SPLITCHARACTER";
NSString *ComAowagieTextChunk_HYPHENATION = @"HYPHENATION";
NSString *ComAowagieTextChunk_REMOTEGOTO = @"REMOTEGOTO";
NSString *ComAowagieTextChunk_LOCALGOTO = @"LOCALGOTO";
NSString *ComAowagieTextChunk_LOCALDESTINATION = @"LOCALDESTINATION";
NSString *ComAowagieTextChunk_GENERICTAG = @"GENERICTAG";
NSString *ComAowagieTextChunk_IMAGE = @"IMAGE";
NSString *ComAowagieTextChunk_ACTION = @"ACTION";
NSString *ComAowagieTextChunk_NEWPAGE = @"NEWPAGE";
NSString *ComAowagieTextChunk_PDFANNOTATION = @"PDFANNOTATION";
NSString *ComAowagieTextChunk_COLOR = @"COLOR";
NSString *ComAowagieTextChunk_ENCODING = @"ENCODING";


#line 84
@implementation ComAowagieTextChunk

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 116
- (instancetype)init {
  ComAowagieTextChunk_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 130
- (instancetype)initWithNSString:(NSString *)content
          withComAowagieTextFont:(ComAowagieTextFont *)font {
  ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(self, content, font);
  return self;
}


#line 142
- (instancetype)initWithNSString:(NSString *)content {
  ComAowagieTextChunk_initWithNSString_(self, content);
  return self;
}


#line 154
- (instancetype)initWithChar:(jchar)c
      withComAowagieTextFont:(ComAowagieTextFont *)font {
  ComAowagieTextChunk_initWithChar_withComAowagieTextFont_(self, c, font);
  return self;
}


#line 170
- (instancetype)initWithComAowagieTextImage:(ComAowagieTextImage *)image
                                  withFloat:(jfloat)offsetX
                                  withFloat:(jfloat)offsetY {
  ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_(self, image, offsetX, offsetY);
  return self;
}


#line 191
- (instancetype)initWithComAowagieTextPdfDrawDrawInterface:(id<ComAowagieTextPdfDrawDrawInterface>)separator
                                               withBoolean:(jboolean)vertical {
  ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withBoolean_(self, separator, vertical);
  return self;
}


#line 210
- (instancetype)initWithComAowagieTextPdfDrawDrawInterface:(id<ComAowagieTextPdfDrawDrawInterface>)separator
                                                 withFloat:(jfloat)tabPosition
                                               withBoolean:(jboolean)newline {
  ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_(self, separator, tabPosition, newline);
  return self;
}


#line 230
- (instancetype)initWithComAowagieTextImage:(ComAowagieTextImage *)image
                                  withFloat:(jfloat)offsetX
                                  withFloat:(jfloat)offsetY
                                withBoolean:(jboolean)changeLeading {
  ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_withBoolean_(self, image, offsetX, offsetY, changeLeading);
  return self;
}


#line 246
- (jint)type {
  
#line 248
  return ComAowagieTextElement_CHUNK;
}


#line 256
- (JavaUtilArrayList *)getChunks {
  
#line 258
  JavaUtilArrayList *tmp = new_JavaUtilArrayList_init();
  [tmp addWithId:self];
  return tmp;
}


#line 272
- (JavaLangStringBuffer *)appendWithNSString:(NSString *)string {
  return [((JavaLangStringBuffer *) nil_chk(self->content_)) appendWithNSString:string];
}


#line 282
- (void)setFontWithComAowagieTextFont:(ComAowagieTextFont *)font {
  self->font_ = font;
}


#line 293
- (ComAowagieTextFont *)getFont {
  return self->font_;
}


#line 302
- (NSString *)getContent {
  return [((JavaLangStringBuffer *) nil_chk(self->content_)) description];
}


#line 311
- (NSString *)description {
  
#line 313
  return [self getContent];
}


#line 322
- (jboolean)isEmpty {
  return [((NSString *) nil_chk([((NSString *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->content_)) description])) java_trim])) java_length] == 0 &&
#line 324
  [((NSString *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->content_)) description])) java_indexOfString:@"\n"] == -1 &&
#line 325
  self->attributes_ == nil;
}


#line 333
- (jfloat)getWidthPoint {
  if ([self getImage] != nil) {
    return [((ComAowagieTextImage *) nil_chk([self getImage])) getScaledWidth];
  }
  return [((ComAowagieTextPdfBaseFont *) nil_chk([((ComAowagieTextFont *) nil_chk(self->font_)) getCalculatedBaseFontWithBoolean:true])) getWidthPointWithNSString:[self getContent] withFloat:
#line 338
  [((ComAowagieTextFont *) nil_chk(self->font_)) getCalculatedSize]] *
#line 339
  [self getHorizontalScaling];
}


#line 350
- (jboolean)hasAttributes {
  return self->attributes_ != nil;
}


#line 362
- (JavaUtilHashMap *)getAttributes {
  return self->attributes_;
}


#line 370
- (void)setAttributesWithJavaUtilHashMap:(JavaUtilHashMap *)attributes {
  self->attributes_ = attributes;
}


#line 384
- (ComAowagieTextChunk *)setAttributeWithNSString:(NSString *)name
                                           withId:(id)obj {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, name, obj);
}


#line 402
- (jfloat)getHorizontalScaling {
  if (self->attributes_ == nil) {
    return 1.0f;
  }
  JavaLangFloat *f = (JavaLangFloat *) cast_chk([self->attributes_ getWithId:ComAowagieTextChunk_HSCALE], [JavaLangFloat class]);
  if (f == nil) {
    return 1.0f;
  }
  return [f floatValue];
}


#line 439
- (ComAowagieTextChunk *)setUnderlineWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color
                                                   withFloat:(jfloat)thickness
                                                   withFloat:(jfloat)thicknessMul
                                                   withFloat:(jfloat)yPosition
                                                   withFloat:(jfloat)yPositionMul
                                                     withInt:(jint)cap {
  return ComAowagieTextChunk_setUnderlineWithHarmonyJavaAwtColor_withFloat_withFloat_withFloat_withFloat_withInt_(self, color, thickness, thicknessMul, yPosition, yPositionMul, cap);
}


#line 466
- (ComAowagieTextChunk *)setTextRiseWithFloat:(jfloat)rise {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_SUBSUPSCRIPT, new_JavaLangFloat_initWithFloat_(rise));
}


#line 475
- (jfloat)getTextRise {
  if (self->attributes_ != nil && [self->attributes_ containsKeyWithId:ComAowagieTextChunk_SUBSUPSCRIPT]) {
    JavaLangFloat *f = (JavaLangFloat *) cast_chk([self->attributes_ getWithId:ComAowagieTextChunk_SUBSUPSCRIPT], [JavaLangFloat class]);
    return [((JavaLangFloat *) nil_chk(f)) floatValue];
  }
  return 0.0f;
}


#line 496
- (ComAowagieTextChunk *)setBackgroundWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color {
  return ComAowagieTextChunk_setBackgroundWithHarmonyJavaAwtColor_withFloat_withFloat_withFloat_withFloat_(self, color, 0, 0, 0, 0);
}


#line 515
- (ComAowagieTextChunk *)setBackgroundWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color
                                                    withFloat:(jfloat)extraLeft
                                                    withFloat:(jfloat)extraBottom
                                                    withFloat:(jfloat)extraRight
                                                    withFloat:(jfloat)extraTop {
  return ComAowagieTextChunk_setBackgroundWithHarmonyJavaAwtColor_withFloat_withFloat_withFloat_withFloat_(self, color, extraLeft, extraBottom, extraRight, extraTop);
}


#line 537
- (ComAowagieTextChunk *)setHyphenationWithComAowagieTextPdfHyphenationEvent:(id<ComAowagieTextPdfHyphenationEvent>)hyphenation {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_HYPHENATION, hyphenation);
}


#line 554
- (ComAowagieTextChunk *)setRemoteGotoWithNSString:(NSString *)filename
                                      withNSString:(NSString *)name {
  
#line 555
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_REMOTEGOTO, [IOSObjectArray newArrayWithObjects:(id[]){ filename, name } count:2 type:NSObject_class_()]);
}


#line 568
- (ComAowagieTextChunk *)setRemoteGotoWithNSString:(NSString *)filename
                                           withInt:(jint)page {
  
#line 569
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_REMOTEGOTO, [IOSObjectArray newArrayWithObjects:(id[]){ filename, create_JavaLangInteger_initWithInt_(
#line 570
  page) } count:2 type:NSObject_class_()]);
}


#line 586
- (ComAowagieTextChunk *)setLocalGotoWithNSString:(NSString *)name {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_LOCALGOTO, name);
}


#line 600
- (ComAowagieTextChunk *)setLocalDestinationWithNSString:(NSString *)name {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_LOCALDESTINATION, name);
}


#line 617
- (ComAowagieTextChunk *)setGenericTagWithNSString:(NSString *)text {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_GENERICTAG, text);
}


#line 630
- (ComAowagieTextImage *)getImage {
  if (self->attributes_ == nil) {
    return nil;
  }
  IOSObjectArray *obj = (IOSObjectArray *) cast_check([self->attributes_ getWithId:ComAowagieTextChunk_IMAGE], IOSClass_arrayType(NSObject_class_(), 1));
  if (obj == nil) {
    return nil;
  }
  else {
    
#line 638
    return (ComAowagieTextImage *) cast_chk(IOSObjectArray_Get(obj, 0), [ComAowagieTextImage class]);
  }
}


#line 653
- (ComAowagieTextChunk *)setAnchorWithNSString:(NSString *)url {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_ACTION, new_ComAowagieTextPdfPdfAction_initWithNSString_(url));
}


#line 666
- (ComAowagieTextChunk *)setNewPage {
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_NEWPAGE, nil);
}


#line 678
- (jboolean)isContent {
  
#line 680
  return true;
}


#line 688
- (jboolean)isNestable {
  
#line 690
  return true;
}


#line 698
- (id<ComAowagieTextPdfHyphenationEvent>)getHyphenation {
  if (self->attributes_ == nil) {
    return nil;
  }
  return (id<ComAowagieTextPdfHyphenationEvent>) cast_check([self->attributes_ getWithId:ComAowagieTextChunk_HYPHENATION], ComAowagieTextPdfHyphenationEvent_class_());
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuffer;", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextFont;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x2, 15, 16, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x2, 19, 21, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x0, 22, 23, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, 24, 26, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, 27, 1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, 28, 1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, 29, 1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x0, 30, 1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextChunk;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfHyphenationEvent;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:withComAowagieTextFont:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithChar:withComAowagieTextFont:);
  methods[4].selector = @selector(initWithComAowagieTextImage:withFloat:withFloat:);
  methods[5].selector = @selector(initWithComAowagieTextPdfDrawDrawInterface:withBoolean:);
  methods[6].selector = @selector(initWithComAowagieTextPdfDrawDrawInterface:withFloat:withBoolean:);
  methods[7].selector = @selector(initWithComAowagieTextImage:withFloat:withFloat:withBoolean:);
  methods[8].selector = @selector(type);
  methods[9].selector = @selector(getChunks);
  methods[10].selector = @selector(appendWithNSString:);
  methods[11].selector = @selector(setFontWithComAowagieTextFont:);
  methods[12].selector = @selector(getFont);
  methods[13].selector = @selector(getContent);
  methods[14].selector = @selector(description);
  methods[15].selector = @selector(isEmpty);
  methods[16].selector = @selector(getWidthPoint);
  methods[17].selector = @selector(hasAttributes);
  methods[18].selector = @selector(getAttributes);
  methods[19].selector = @selector(setAttributesWithJavaUtilHashMap:);
  methods[20].selector = @selector(setAttributeWithNSString:withId:);
  methods[21].selector = @selector(getHorizontalScaling);
  methods[22].selector = @selector(setUnderlineWithHarmonyJavaAwtColor:withFloat:withFloat:withFloat:withFloat:withInt:);
  methods[23].selector = @selector(setTextRiseWithFloat:);
  methods[24].selector = @selector(getTextRise);
  methods[25].selector = @selector(setBackgroundWithHarmonyJavaAwtColor:);
  methods[26].selector = @selector(setBackgroundWithHarmonyJavaAwtColor:withFloat:withFloat:withFloat:withFloat:);
  methods[27].selector = @selector(setHyphenationWithComAowagieTextPdfHyphenationEvent:);
  methods[28].selector = @selector(setRemoteGotoWithNSString:withNSString:);
  methods[29].selector = @selector(setRemoteGotoWithNSString:withInt:);
  methods[30].selector = @selector(setLocalGotoWithNSString:);
  methods[31].selector = @selector(setLocalDestinationWithNSString:);
  methods[32].selector = @selector(setGenericTagWithNSString:);
  methods[33].selector = @selector(getImage);
  methods[34].selector = @selector(setAnchorWithNSString:);
  methods[35].selector = @selector(setNewPage);
  methods[36].selector = @selector(isContent);
  methods[37].selector = @selector(isNestable);
  methods[38].selector = @selector(getHyphenation);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OBJECT_REPLACEMENT_CHARACTER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "NEWLINE", "LComAowagieTextChunk;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "NEXTPAGE", "LComAowagieTextChunk;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "content_", "LJavaLangStringBuffer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "font_", "LComAowagieTextFont;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributes_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "SEPARATOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "TAB", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "HSCALE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "UNDERLINE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 37, -1, -1 },
    { "SUBSUPSCRIPT", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "SKEW", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "BACKGROUND", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "TEXTRENDERMODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "SPLITCHARACTER", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "HYPHENATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 43, -1, -1 },
    { "REMOTEGOTO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "LOCALGOTO", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 45, -1, -1 },
    { "LOCALDESTINATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 46, -1, -1 },
    { "GENERICTAG", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 47, -1, -1 },
    { "IMAGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 48, -1, -1 },
    { "ACTION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 49, -1, -1 },
    { "NEWPAGE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 50, -1, -1 },
    { "PDFANNOTATION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "COLOR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 52, -1, -1 },
    { "ENCODING", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 53, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LComAowagieTextFont;", "LNSString;", "CLComAowagieTextFont;", "LComAowagieTextImage;FF", "LComAowagieTextPdfDrawDrawInterface;Z", "LComAowagieTextPdfDrawDrawInterface;FZ", "LComAowagieTextImage;FFZ", "append", "setFont", "LComAowagieTextFont;", "toString", "setAttributes", "LJavaUtilHashMap;", "setAttribute", "LNSString;LNSObject;", "setUnderline", "LHarmonyJavaAwtColor;FFFFI", "setTextRise", "F", "setBackground", "LHarmonyJavaAwtColor;", "LHarmonyJavaAwtColor;FFFF", "setHyphenation", "LComAowagieTextPdfHyphenationEvent;", "setRemoteGoto", "LNSString;LNSString;", "LNSString;I", "setLocalGoto", "setLocalDestination", "setGenericTag", "setAnchor", &ComAowagieTextChunk_OBJECT_REPLACEMENT_CHARACTER, &ComAowagieTextChunk_NEWLINE, &ComAowagieTextChunk_NEXTPAGE, &ComAowagieTextChunk_SEPARATOR, &ComAowagieTextChunk_TAB, &ComAowagieTextChunk_HSCALE, &ComAowagieTextChunk_UNDERLINE, &ComAowagieTextChunk_SUBSUPSCRIPT, &ComAowagieTextChunk_SKEW, &ComAowagieTextChunk_BACKGROUND, &ComAowagieTextChunk_TEXTRENDERMODE, &ComAowagieTextChunk_SPLITCHARACTER, &ComAowagieTextChunk_HYPHENATION, &ComAowagieTextChunk_REMOTEGOTO, &ComAowagieTextChunk_LOCALGOTO, &ComAowagieTextChunk_LOCALDESTINATION, &ComAowagieTextChunk_GENERICTAG, &ComAowagieTextChunk_IMAGE, &ComAowagieTextChunk_ACTION, &ComAowagieTextChunk_NEWPAGE, &ComAowagieTextChunk_PDFANNOTATION, &ComAowagieTextChunk_COLOR, &ComAowagieTextChunk_ENCODING };
  static const J2ObjcClassInfo _ComAowagieTextChunk = { "Chunk", "com.aowagie.text", ptrTable, methods, fields, 7, 0x1, 39, 26, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextChunk;
}

+ (void)initialize {
  if (self == [ComAowagieTextChunk class]) {
    ComAowagieTextChunk_NEWLINE = new_ComAowagieTextChunk_initWithNSString_(
#line 92
    @"\n");
    ComAowagieTextChunk_NEXTPAGE = new_ComAowagieTextChunk_initWithNSString_(
#line 95
    @"");
    {
      
#line 97
      (void) [ComAowagieTextChunk_NEXTPAGE setNewPage];
    }
    J2OBJC_SET_INITIALIZED(ComAowagieTextChunk)
  }
}

@end


#line 116
void ComAowagieTextChunk_init(ComAowagieTextChunk *self) {
  NSObject_init(self);
  self->content_ =
#line 103
  nil;
  self->font_ =
#line 106
  nil;
  self->attributes_ =
#line 109
  nil;
  
#line 117
  self->content_ = new_JavaLangStringBuffer_init();
  self->font_ = new_ComAowagieTextFont_init();
}


#line 116
ComAowagieTextChunk *new_ComAowagieTextChunk_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, init)
}


#line 116
ComAowagieTextChunk *create_ComAowagieTextChunk_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, init)
}


#line 130
void ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(ComAowagieTextChunk *self, NSString *content, ComAowagieTextFont *font) {
  NSObject_init(self);
  self->content_ =
#line 103
  nil;
  self->font_ =
#line 106
  nil;
  self->attributes_ =
#line 109
  nil;
  
#line 131
  self->content_ = new_JavaLangStringBuffer_initWithNSString_(content);
  self->font_ = font;
}


#line 130
ComAowagieTextChunk *new_ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(NSString *content, ComAowagieTextFont *font) {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, initWithNSString_withComAowagieTextFont_, content, font)
}


#line 130
ComAowagieTextChunk *create_ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(NSString *content, ComAowagieTextFont *font) {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, initWithNSString_withComAowagieTextFont_, content, font)
}


#line 142
void ComAowagieTextChunk_initWithNSString_(ComAowagieTextChunk *self, NSString *content) {
  ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(self, content, new_ComAowagieTextFont_init());
}


#line 142
ComAowagieTextChunk *new_ComAowagieTextChunk_initWithNSString_(NSString *content) {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, initWithNSString_, content)
}


#line 142
ComAowagieTextChunk *create_ComAowagieTextChunk_initWithNSString_(NSString *content) {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, initWithNSString_, content)
}


#line 154
void ComAowagieTextChunk_initWithChar_withComAowagieTextFont_(ComAowagieTextChunk *self, jchar c, ComAowagieTextFont *font) {
  NSObject_init(self);
  self->content_ =
#line 103
  nil;
  self->font_ =
#line 106
  nil;
  self->attributes_ =
#line 109
  nil;
  
#line 155
  self->content_ = new_JavaLangStringBuffer_init();
  (void) [self->content_ appendWithChar:c];
  self->font_ = font;
}


#line 154
ComAowagieTextChunk *new_ComAowagieTextChunk_initWithChar_withComAowagieTextFont_(jchar c, ComAowagieTextFont *font) {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, initWithChar_withComAowagieTextFont_, c, font)
}


#line 154
ComAowagieTextChunk *create_ComAowagieTextChunk_initWithChar_withComAowagieTextFont_(jchar c, ComAowagieTextFont *font) {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, initWithChar_withComAowagieTextFont_, c, font)
}


#line 170
void ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_(ComAowagieTextChunk *self, ComAowagieTextImage *image, jfloat offsetX, jfloat offsetY) {
  ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(self, ComAowagieTextChunk_OBJECT_REPLACEMENT_CHARACTER, new_ComAowagieTextFont_init());
  ComAowagieTextImage *copyImage = ComAowagieTextImage_getInstanceWithComAowagieTextImage_(image);
  [((ComAowagieTextImage *) nil_chk(copyImage)) setAbsolutePositionWithFloat:JavaLangFloat_NaN withFloat:JavaLangFloat_NaN];
  (void) ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_IMAGE, [IOSObjectArray newArrayWithObjects:(id[]){ copyImage, create_JavaLangFloat_initWithFloat_(offsetX), create_JavaLangFloat_initWithFloat_(
#line 175
  offsetY), JreLoadStatic(JavaLangBoolean, FALSE) } count:4 type:NSObject_class_()]);
}


#line 170
ComAowagieTextChunk *new_ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_(ComAowagieTextImage *image, jfloat offsetX, jfloat offsetY) {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, initWithComAowagieTextImage_withFloat_withFloat_, image, offsetX, offsetY)
}


#line 170
ComAowagieTextChunk *create_ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_(ComAowagieTextImage *image, jfloat offsetX, jfloat offsetY) {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, initWithComAowagieTextImage_withFloat_withFloat_, image, offsetX, offsetY)
}


#line 191
void ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withBoolean_(ComAowagieTextChunk *self, id<ComAowagieTextPdfDrawDrawInterface> separator, jboolean vertical) {
  ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(self, ComAowagieTextChunk_OBJECT_REPLACEMENT_CHARACTER, new_ComAowagieTextFont_init());
  (void) ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_SEPARATOR, [IOSObjectArray newArrayWithObjects:(id[]){ separator, JavaLangBoolean_valueOfWithBoolean_(vertical) } count:2 type:NSObject_class_()]);
}


#line 191
ComAowagieTextChunk *new_ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withBoolean_(id<ComAowagieTextPdfDrawDrawInterface> separator, jboolean vertical) {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, initWithComAowagieTextPdfDrawDrawInterface_withBoolean_, separator, vertical)
}


#line 191
ComAowagieTextChunk *create_ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withBoolean_(id<ComAowagieTextPdfDrawDrawInterface> separator, jboolean vertical) {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, initWithComAowagieTextPdfDrawDrawInterface_withBoolean_, separator, vertical)
}


#line 210
void ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_(ComAowagieTextChunk *self, id<ComAowagieTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline) {
  ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(self, ComAowagieTextChunk_OBJECT_REPLACEMENT_CHARACTER, new_ComAowagieTextFont_init());
  if (tabPosition < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$F", @"A tab position may not be lower than 0; yours is ", tabPosition));
  }
  (void) ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_TAB, [IOSObjectArray newArrayWithObjects:(id[]){ separator, create_JavaLangFloat_initWithFloat_(tabPosition), JavaLangBoolean_valueOfWithBoolean_(newline), create_JavaLangFloat_initWithFloat_(0) } count:4 type:NSObject_class_()]);
}


#line 210
ComAowagieTextChunk *new_ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_(id<ComAowagieTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline) {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_, separator, tabPosition, newline)
}


#line 210
ComAowagieTextChunk *create_ComAowagieTextChunk_initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_(id<ComAowagieTextPdfDrawDrawInterface> separator, jfloat tabPosition, jboolean newline) {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, initWithComAowagieTextPdfDrawDrawInterface_withFloat_withBoolean_, separator, tabPosition, newline)
}


#line 230
void ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_withBoolean_(ComAowagieTextChunk *self, ComAowagieTextImage *image, jfloat offsetX, jfloat offsetY, jboolean changeLeading) {
  ComAowagieTextChunk_initWithNSString_withComAowagieTextFont_(self, ComAowagieTextChunk_OBJECT_REPLACEMENT_CHARACTER, new_ComAowagieTextFont_init());
  
#line 233
  (void) ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_IMAGE, [IOSObjectArray newArrayWithObjects:(id[]){ image, create_JavaLangFloat_initWithFloat_(offsetX), create_JavaLangFloat_initWithFloat_(
#line 234
  offsetY), JavaLangBoolean_valueOfWithBoolean_(changeLeading) } count:4 type:NSObject_class_()]);
}


#line 230
ComAowagieTextChunk *new_ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_withBoolean_(ComAowagieTextImage *image, jfloat offsetX, jfloat offsetY, jboolean changeLeading) {
  J2OBJC_NEW_IMPL(ComAowagieTextChunk, initWithComAowagieTextImage_withFloat_withFloat_withBoolean_, image, offsetX, offsetY, changeLeading)
}


#line 230
ComAowagieTextChunk *create_ComAowagieTextChunk_initWithComAowagieTextImage_withFloat_withFloat_withBoolean_(ComAowagieTextImage *image, jfloat offsetX, jfloat offsetY, jboolean changeLeading) {
  J2OBJC_CREATE_IMPL(ComAowagieTextChunk, initWithComAowagieTextImage_withFloat_withFloat_withBoolean_, image, offsetX, offsetY, changeLeading)
}


#line 384
ComAowagieTextChunk *ComAowagieTextChunk_setAttributeWithNSString_withId_(ComAowagieTextChunk *self, NSString *name, id obj) {
  if (self->attributes_ == nil) {
    self->attributes_ = new_JavaUtilLinkedHashMap_init();
  }
  (void) [self->attributes_ putWithId:name withId:obj];
  return self;
}


#line 439
ComAowagieTextChunk *ComAowagieTextChunk_setUnderlineWithHarmonyJavaAwtColor_withFloat_withFloat_withFloat_withFloat_withInt_(ComAowagieTextChunk *self, HarmonyJavaAwtColor *color, jfloat thickness, jfloat thicknessMul, jfloat yPosition, jfloat yPositionMul, jint cap) {
  
#line 441
  if (self->attributes_ == nil) {
    self->attributes_ = new_JavaUtilLinkedHashMap_init();
  }
  IOSObjectArray *obj = [IOSObjectArray newArrayWithObjects:(id[]){
#line 445
    color, [IOSFloatArray newArrayWithFloats:(jfloat[]){
#line 446
      thickness, thicknessMul, yPosition, yPositionMul, cap } count:5] } count:2 type:NSObject_class_()];
      IOSObjectArray *unders = ComAowagieTextUtilities_addToArrayWithNSObjectArray2_withNSObjectArray_((IOSObjectArray *) cast_check([self->attributes_ getWithId:ComAowagieTextChunk_UNDERLINE], IOSClass_arrayType(NSObject_class_(), 2)),
#line 448
      obj);
      return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_UNDERLINE, unders);
    }


#line 515
ComAowagieTextChunk *ComAowagieTextChunk_setBackgroundWithHarmonyJavaAwtColor_withFloat_withFloat_withFloat_withFloat_(ComAowagieTextChunk *self, HarmonyJavaAwtColor *color, jfloat extraLeft, jfloat extraBottom, jfloat extraRight, jfloat extraTop) {
  
#line 517
  return ComAowagieTextChunk_setAttributeWithNSString_withId_(self, ComAowagieTextChunk_BACKGROUND, [IOSObjectArray newArrayWithObjects:(id[]){ color, [IOSFloatArray newArrayWithFloats:(jfloat[]){
#line 518
    extraLeft, extraBottom, extraRight, extraTop } count:4] } count:2 type:NSObject_class_()]);
  }

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextChunk)

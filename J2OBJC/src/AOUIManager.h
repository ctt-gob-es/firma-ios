//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/ui/AOUIManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AOUIManager")
#ifdef RESTRICT_AOUIManager
#define INCLUDE_ALL_AOUIManager 0
#else
#define INCLUDE_ALL_AOUIManager 1
#endif
#undef RESTRICT_AOUIManager

#if !defined (EsGobAfirmaCoreUiAOUIManager_) && (INCLUDE_ALL_AOUIManager || defined(INCLUDE_EsGobAfirmaCoreUiAOUIManager))
#define EsGobAfirmaCoreUiAOUIManager_

@class EsGobAfirmaCoreUiGenericFileFilter;
@class IOSByteArray;
@class IOSCharArray;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaLangThrowable;
@protocol EsGobAfirmaCoreUiKeyStoreDialogManager;
@protocol JavaUtilList;

/*!
 @brief Gestor de componentes de interfaz gr&aacute;fico
 @version 0.4
 */
@protocol EsGobAfirmaCoreUiAOUIManager < JavaObject >

/*!
 @brief Pregunta al usuario por una contrase&ntilde;a.
 @param text Texto que se muestra en el di &aacute; logo para pedir la contrase &ntilde; a
 @param c Componente padre (para la modalidad)
 @return Contrase&ntilde;a introducida por el usuario
 @throw es.gob.afirma.core.AOCancelledOperationExceptionCuando el usuario cancela el
          proceso de solicitud de contrase&ntilde;a
 */
- (IOSCharArray *)getPasswordWithNSString:(NSString *)text
                                   withId:(id)c;

/*!
 @brief Muestra un di&aacute;logo para pedir una contrase&ntilde;a al usuario.
 @param text Texto con el que se solicitar &aacute;  la entrada de texto al         usuario ( <i> prompt </i> )
 @param icon Objeto de tipo <code>javax.swing.Icon</code>  con el icono del di &aacute; logo  				o <code>null</code>  para no mostrar icono.
 @param charSet Juego de caracteres aceptados para la contrase &ntilde; a
 @param beep <code> true </code>  si se desea un sonido de advertencia al
               introducir un caracter no v &aacute; lido,  <code> false </code>  en caso contrario
 @param c Componente padre (para la modalidad)
 @return Array de caracteres del texto introducido como contrase&ntilde;a
 @throw es.gob.afirma.core.AOCancelledOperationException
 Cuando el usuario cancela o cierra el di&aacute;logo
 */
- (IOSCharArray *)getPasswordWithNSString:(NSString *)text
                                   withId:(id)icon
                             withNSString:(NSString *)charSet
                              withBoolean:(jboolean)beep
                                   withId:(id)c;

/*!
 @brief Muestra un di&aacute;logo para pedir dos veces una contrase&ntilde;a al usuario (ambas deben coincidir).
 Es el procedimiento normal cuando se pide el establecimiento de una nueva contrase&ntilde;a, para evitar errores.
 @param text Texto con el que se solicitar &aacute;  la entrada de texto al              usuario ( <i> prompt </i> ).
 @param text2 Texto con el que se solicitar &aacute;  al usuario que repita la contrase &ntilde; a.
 @param imageIcon Objeto de tipo <code>javax.swing.Icon</code>  con el icono del di &aacute; logo o  			   <code>null</code>  para no mostrar icono.
 @param charSet Juego de caracteres aceptados para la contrase &ntilde; a.
 @param beep <code> true </code>  si se desea un sonido de advertencia al
               introducir un caracter no v &aacute; lido,  <code> false </code>  en              caso contrario.
 @param c Componente padre (para la modalidad).
 @return Array de caracteres del texto introducido como contrase&ntilde;a.
 @throw es.gob.afirma.core.AOCancelledOperationExceptionCuando el usuario cancela o cierra el di&aacute;logo.
 */
- (IOSCharArray *)getDoublePasswordWithNSString:(NSString *)text
                                   withNSString:(NSString *)text2
                                         withId:(id)imageIcon
                                   withNSString:(NSString *)charSet
                                    withBoolean:(jboolean)beep
                                         withId:(id)c;

/*!
 @brief JOptionPane.showInputDialog().
 @param parentComponent Componente padre (se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing
 @param message Mensaje
 @param title Titulo del cuadro de di &aacute; logo
 @param messageType Tipo de mensaje
 @param icon Icono a mostrar en el di &aacute; logo
 @param selectionValues Valores posibles para seleccionar
 @param initialSelectionValue Valor seleccionado por defecto
 @return Valor seleccionado
 */
- (id)showInputDialogWithId:(id)parentComponent
                     withId:(id)message
               withNSString:(NSString *)title
                    withInt:(jint)messageType
                     withId:(id)icon
          withNSObjectArray:(IOSObjectArray *)selectionValues
                     withId:(id)initialSelectionValue;

/*!
 @brief Di&aacute;logo de selecci&oacute;n de certificados.
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param dialogManager Manejador del di &aacute; logo gr &aacute; fico.
 @return Alias del certificado seleccionado.
 */
- (NSString *)showCertificateSelectionDialogWithId:(id)parentComponent
        withEsGobAfirmaCoreUiKeyStoreDialogManager:(id<EsGobAfirmaCoreUiKeyStoreDialogManager>)dialogManager;

/*!
 @brief JOptionPane.showConfirmDialog().
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param message Mensaje
 @param title Titulo del cuadro de di &aacute; logo
 @param optionType Tipo de opciones a confirmar
 @param messageType Tipo de mensaje
 @return Opci&oacute;n seleccionada
 */
- (jint)showConfirmDialogWithId:(id)parentComponent
                         withId:(id)message
                   withNSString:(NSString *)title
                        withInt:(jint)optionType
                        withInt:(jint)messageType;

/*!
 @brief JOptionPane.showMessageDialog().
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param message Mensaje
 @param title Titulo del cuadro de di &aacute; logo
 @param messageType Tipo de mensaje
 */
- (void)showMessageDialogWithId:(id)parentComponent
                         withId:(id)message
                   withNSString:(NSString *)title
                        withInt:(jint)messageType;

/*!
 @brief JOptionPane.showMessageDialog().
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param message Mensaje
 @param title Titulo del cuadro de di &aacute; logo
 @param messageType Tipo de mensaje
 @param icon Icono para el di &aacute; logo
 */
- (void)showMessageDialogWithId:(id)parentComponent
                         withId:(id)message
                   withNSString:(NSString *)title
                        withInt:(jint)messageType
                         withId:(id)icon;

/*!
 @brief Muestra un di&aacute;logo de error de forma modal.
 @param message Mensaje de error.
 @param title Titulo de la ventana de error.
 @param messageType Tipo de mensaje.
 @param t Informaci &oacute; n sobre el error
 */
- (void)showErrorMessageWithId:(id)message
                  withNSString:(NSString *)title
                       withInt:(jint)messageType
         withJavaLangThrowable:(JavaLangThrowable *)t;

/*!
 @brief Muestra un di&aacute;logo de error de forma modal.
 @param parentComponent Componente padre para la modalidad.
 @param message Mensaje de error.
 @param title Titulo de la ventana de error.
 @param messageType Tipo de mensaje.
 @param t Informaci &oacute; n sobre el error
 */
- (void)showErrorMessageWithId:(id)parentComponent
                        withId:(id)message
                  withNSString:(NSString *)title
                       withInt:(jint)messageType
         withJavaLangThrowable:(JavaLangThrowable *)t;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.PLAIN_MESSAGE en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.PLAIN_MESSAGE
 */
- (jint)getPlainMessageCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.YES_NO_OPTION en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.YES_NO_OPTION
 */
- (jint)getYesNoOptionCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.WARNING_MESSAGE en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.WARNING_MESSAGE
 */
- (jint)getWarningMessageCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.ERROR_MESSAGE en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.ERROR_MESSAGE
 */
- (jint)getErrorMessageCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.YES_OPTION en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.YES_OPTION
 */
- (jint)getYesOptionCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.NO_OPTION en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.NO_OPTION
 */
- (jint)getNoOptionCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.OK_CANCEL_OPTION en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.OK_CANCEL_OPTION
 */
- (jint)getOkCancelOptionCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.OK_OPTION en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.OK_OPTION
 */
- (jint)getOkOptionCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.INFORMATION_MESSAGE en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.INFORMATION_MESSAGE
 */
- (jint)getInformationMessageCode;

/*!
 @brief Obtiene el c&oacute;digo equivalente a JOptionPane.QUESTION_MESSAGE en la implementaci&oacute;n del entorno operativo actual.
 @return C&oacute;digo equivalente a JOptionPane.QUESTION_MESSAGE
 */
- (jint)getQuestionMessageCode;

/*!
 @brief Pide al usuario que seleccione un fichero.
 @param dialogTitle T
  &iacute; tulo de la ventana de di &aacute; logo.
 @param currentDir Directorio inicial del di &aacute; logo
 @param filename Nombre del fichero a localizar
 @param extensions Extensiones predeterminadas para el fichero
 @param description_ Descripci &oacute; n del tipo de fichero correspondiente con las extensiones
 @param selectDirectory<code>true</code>  para permitir la selecci &oacute; n de directorios, <code>true</code>  					  para selecci &oacute; n de ficheros. En caso de directorios el par &aacute; metro  					  <code>multiselect</code>  se ignorar &aacute; .
 @param multiSelect<code>true</code>  para permitir selecci &oacute; n m &uacute; ltiple, <code>false</code>                     para selecci &oacute; n de un  &uacute; nico fichero
 @param icon Icono del di &aacute; logo de selecci &oacute; n.              Si se especifica  <code> null </code>  y se indica un  <code> Frame </code>  como padre se              hereda el icono de este.
 @param parentComponent Componente padre (para la modalidad)
 @return Nombre de fichero (con ruta) seleccionado por el usuario
 */
- (IOSObjectArray *)getLoadFilesWithNSString:(NSString *)dialogTitle
                                withNSString:(NSString *)currentDir
                                withNSString:(NSString *)filename
                           withNSStringArray:(IOSObjectArray *)extensions
                                withNSString:(NSString *)description_
                                 withBoolean:(jboolean)selectDirectory
                                 withBoolean:(jboolean)multiSelect
                                      withId:(id)icon
                                      withId:(id)parentComponent;

/*!
 @brief Muestra un di&aacute;logo de guardado para almacenar los datos indicados.
 Los datos ser&aacute;n almacenados en el directorio y con el nombre que
  indique el usuario. Si el fichero ya existe se le preguntar&aacute; al
  usuario si desea sobreescribirlo. En caso de cancelar la operaci&oacute;n
  se devolvera <code>null</code>, si la operaci&oacute;n finaliza correctamente se
  devolver&aacute; la ruta completa del fichero.
 @param data Datos que se desean almacenar.
 @param dialogTitle T &iacute; tulo del di &aacute; logo de guardado.
 @param currentDir Directorio inicial del di &aacute; logo.
 @param selectedFile Nombre de fichero por defecto.
 @param filters Filtros del tipo de fichero a guardar.
 @param parent Componente padre sobre el que se mostrar &aacute;  el         di &aacute; logo de guardado.
 @return Fichero guardado.
 @throw IOExceptionSi no se puede guardar el fichero
 */
- (JavaIoFile *)saveDataToFileWithByteArray:(IOSByteArray *)data
                               withNSString:(NSString *)dialogTitle
                               withNSString:(NSString *)currentDir
                               withNSString:(NSString *)selectedFile
                           withJavaUtilList:(id<JavaUtilList>)filters
                                     withId:(id)parent;

/*!
 @brief Muestra un di&aacute;logo de guardado para almacenar los datos indicados.
 Los datos ser&aacute;n almacenados en el directorio y con el nombre que
  indique el usuario. Si el fichero ya existe se le preguntar&aacute; al
  usuario si desea sobreescribirlo. En caso de cancelar la operaci&oacute;n
  se devolvera <code>null</code>, si la operaci&oacute;n finaliza correctamente se
  devolver&aacute; la ruta completa del fichero.
 @param data Datos que se desean almacenar.
 @param dialogTitle T &iacute; tulo del di &aacute; logo de guardado.
 @param currentDir Directorio inicial del di &aacute; logo.
 @param selectedFile Nombre de fichero por defecto.
 @param filters Filtros del tipo de fichero a guardar.
 @param defaultFilter Filtro con un valor por defecto, si se indica como nulo, se ignora.
 @param parent Componente padre sobre el que se mostrar &aacute;  el         di &aacute; logo de guardado.
 @return Fichero guardado.
 @throw IOExceptionSi no se puede guardar el fichero
 */
- (JavaIoFile *)saveDataToFileWithByteArray:(IOSByteArray *)data
                               withNSString:(NSString *)dialogTitle
                               withNSString:(NSString *)currentDir
                               withNSString:(NSString *)selectedFile
                           withJavaUtilList:(id<JavaUtilList>)filters
     withEsGobAfirmaCoreUiGenericFileFilter:(EsGobAfirmaCoreUiGenericFileFilter *)defaultFilter
                                     withId:(id)parent;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreUiAOUIManager)

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreUiAOUIManager)

#endif

#pragma pop_macro("INCLUDE_ALL_AOUIManager")

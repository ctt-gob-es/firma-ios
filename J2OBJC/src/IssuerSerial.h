//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/x509/IssuerSerial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IssuerSerial")
#ifdef RESTRICT_IssuerSerial
#define INCLUDE_ALL_IssuerSerial 0
#else
#define INCLUDE_ALL_IssuerSerial 1
#endif
#undef RESTRICT_IssuerSerial

#if !defined (OrgSpongycastleAsn1X509IssuerSerial_) && (INCLUDE_ALL_IssuerSerial || defined(INCLUDE_OrgSpongycastleAsn1X509IssuerSerial))
#define OrgSpongycastleAsn1X509IssuerSerial_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class JavaMathBigInteger;
@class OrgSpongycastleAsn1ASN1Integer;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1DERBitString;
@class OrgSpongycastleAsn1X500X500Name;
@class OrgSpongycastleAsn1X509GeneralNames;

@interface OrgSpongycastleAsn1X509IssuerSerial : OrgSpongycastleAsn1ASN1Object {
 @public
  OrgSpongycastleAsn1X509GeneralNames *issuer_;
  OrgSpongycastleAsn1ASN1Integer *serial_;
  OrgSpongycastleAsn1DERBitString *issuerUID_;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)issuer
                         withOrgSpongycastleAsn1ASN1Integer:(OrgSpongycastleAsn1ASN1Integer *)serial;

- (instancetype)initWithOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)issuer
                                     withJavaMathBigInteger:(JavaMathBigInteger *)serial;

- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serial;

+ (OrgSpongycastleAsn1X509IssuerSerial *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                withBoolean:(jboolean)explicit_;

+ (OrgSpongycastleAsn1X509IssuerSerial *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1X509GeneralNames *)getIssuer;

- (OrgSpongycastleAsn1DERBitString *)getIssuerUID;

- (OrgSpongycastleAsn1ASN1Integer *)getSerial;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

   IssuerSerial  ::=  SEQUENCE {
        issuer         GeneralNames,
        serial         CertificateSerialNumber,
        issuerUID      UniqueIdentifier OPTIONAL
   } 
  
@endcode
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1X509IssuerSerial)

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509IssuerSerial, issuer_, OrgSpongycastleAsn1X509GeneralNames *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509IssuerSerial, serial_, OrgSpongycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509IssuerSerial, issuerUID_, OrgSpongycastleAsn1DERBitString *)

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *OrgSpongycastleAsn1X509IssuerSerial_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serial);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serial) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serial);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1X509GeneralNames *issuer, JavaMathBigInteger *serial);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_(OrgSpongycastleAsn1X509GeneralNames *issuer, JavaMathBigInteger *serial) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withJavaMathBigInteger_(OrgSpongycastleAsn1X509GeneralNames *issuer, JavaMathBigInteger *serial);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509IssuerSerial *self, OrgSpongycastleAsn1X509GeneralNames *issuer, OrgSpongycastleAsn1ASN1Integer *serial);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509GeneralNames *issuer, OrgSpongycastleAsn1ASN1Integer *serial) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509IssuerSerial *create_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509GeneralNames *issuer, OrgSpongycastleAsn1ASN1Integer *serial);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1X509IssuerSerial)

#endif

#pragma pop_macro("INCLUDE_ALL_IssuerSerial")

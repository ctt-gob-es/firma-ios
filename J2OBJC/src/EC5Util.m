//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/util/EC5Util.java
//

#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "Arrays.h"
#include "BouncyCastleProvider.h"
#include "CustomNamedCurves.h"
#include "EC5Util.h"
#include "ECAlgorithms.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECFieldElement.h"
#include "ECNamedCurveParameterSpec.h"
#include "ECNamedCurveSpec.h"
#include "ECNamedCurveTable.h"
#include "ECParameterSpec.h"
#include "ECPoint.h"
#include "ECUtil.h"
#include "FiniteField.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Polynomial.h"
#include "PolynomialExtensionField.h"
#include "ProviderConfiguration.h"
#include "X962Parameters.h"
#include "X9ECParameters.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/ECField.h"
#include "java/security/spec/ECFieldF2m.h"
#include "java/security/spec/ECFieldFp.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/EllipticCurve.h"
#include "java/util/Enumeration.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

#if !__has_feature(objc_arc)
#error "EC5Util must be compiled with ARC (-fobjc-arc)"
#endif

inline id<JavaUtilMap> OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_get_customCurves(void);
inline id<JavaUtilMap> OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_set_customCurves(id<JavaUtilMap> value);
static id<JavaUtilMap> OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_customCurves;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util, customCurves, id<JavaUtilMap>)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/util/EC5Util.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util)


#line 32
@implementation OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 32
- (instancetype)init {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 58
+ (OrgSpongycastleMathEcECCurve *)getCurveWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                               withOrgSpongycastleAsn1X9X962Parameters:(OrgSpongycastleAsn1X9X962Parameters *)params {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleAsn1X9X962Parameters_(configuration, params);
}


#line 103
+ (OrgSpongycastleCryptoParamsECDomainParameters *)getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                               withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)params {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(configuration, params);
}


#line 123
+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgSpongycastleAsn1X9X962Parameters:(OrgSpongycastleAsn1X9X962Parameters *)params
                                                         withOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgSpongycastleAsn1X9X962Parameters_withOrgSpongycastleMathEcECCurve_(params, curve);
}


#line 187
+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgSpongycastleAsn1X9X9ECParameters:(OrgSpongycastleAsn1X9X9ECParameters *)domainParameters {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgSpongycastleAsn1X9X9ECParameters_(domainParameters);
}


#line 199
+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, seed);
}


#line 211
+ (OrgSpongycastleMathEcECCurve *)convertCurveWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ec {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(ec);
}


#line 238
+ (id<JavaSecuritySpecECField>)convertFieldWithOrgSpongycastleMathFieldFiniteField:(id<OrgSpongycastleMathFieldFiniteField>)field {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithOrgSpongycastleMathFieldFiniteField_(field);
}


#line 253
+ (JavaSecuritySpecECParameterSpec *)convertSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                                        withOrgSpongycastleJceSpecECParameterSpec:(OrgSpongycastleJceSpecECParameterSpec *)spec {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withOrgSpongycastleJceSpecECParameterSpec_(ellipticCurve, spec);
}


#line 280
+ (OrgSpongycastleJceSpecECParameterSpec *)convertSpecWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                                              withBoolean:(jboolean)withCompression {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec, withCompression);
}


#line 294
+ (OrgSpongycastleMathEcECPoint *)convertPointWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                      withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point
                                                                      withBoolean:(jboolean)withCompression {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(ecSpec, point, withCompression);
}


#line 302
+ (OrgSpongycastleMathEcECPoint *)convertPointWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                                                   withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point
                                                                   withBoolean:(jboolean)withCompression {
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgSpongycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(curve, point, withCompression);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECCurve;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCryptoParamsECDomainParameters;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecEllipticCurve;", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECCurve;", 0x9, 7, 9, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECField;", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleJceSpecECParameterSpec;", 0x9, 12, 14, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x9, 15, 16, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x9, 15, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCurveWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:withOrgSpongycastleAsn1X9X962Parameters:);
  methods[2].selector = @selector(getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration:withJavaSecuritySpecECParameterSpec:);
  methods[3].selector = @selector(convertToSpecWithOrgSpongycastleAsn1X9X962Parameters:withOrgSpongycastleMathEcECCurve:);
  methods[4].selector = @selector(convertToSpecWithOrgSpongycastleAsn1X9X9ECParameters:);
  methods[5].selector = @selector(convertCurveWithOrgSpongycastleMathEcECCurve:withByteArray:);
  methods[6].selector = @selector(convertCurveWithJavaSecuritySpecEllipticCurve:);
  methods[7].selector = @selector(convertFieldWithOrgSpongycastleMathFieldFiniteField:);
  methods[8].selector = @selector(convertSpecWithJavaSecuritySpecEllipticCurve:withOrgSpongycastleJceSpecECParameterSpec:);
  methods[9].selector = @selector(convertSpecWithJavaSecuritySpecECParameterSpec:withBoolean:);
  methods[10].selector = @selector(convertPointWithJavaSecuritySpecECParameterSpec:withJavaSecuritySpecECPoint:withBoolean:);
  methods[11].selector = @selector(convertPointWithOrgSpongycastleMathEcECCurve:withJavaSecuritySpecECPoint:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "customCurves", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 18, -1, -1 },
  };
  static const void *ptrTable[] = { "getCurve", "LOrgSpongycastleJcajceProviderConfigProviderConfiguration;LOrgSpongycastleAsn1X9X962Parameters;", "getDomainParameters", "LOrgSpongycastleJcajceProviderConfigProviderConfiguration;LJavaSecuritySpecECParameterSpec;", "convertToSpec", "LOrgSpongycastleAsn1X9X962Parameters;LOrgSpongycastleMathEcECCurve;", "LOrgSpongycastleAsn1X9X9ECParameters;", "convertCurve", "LOrgSpongycastleMathEcECCurve;[B", "LJavaSecuritySpecEllipticCurve;", "convertField", "LOrgSpongycastleMathFieldFiniteField;", "convertSpec", "LJavaSecuritySpecEllipticCurve;LOrgSpongycastleJceSpecECParameterSpec;", "LJavaSecuritySpecECParameterSpec;Z", "convertPoint", "LJavaSecuritySpecECParameterSpec;LJavaSecuritySpecECPoint;Z", "LOrgSpongycastleMathEcECCurve;LJavaSecuritySpecECPoint;Z", &OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_customCurves };
  static const J2ObjcClassInfo _OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util = { "EC5Util", "org.spongycastle.jcajce.provider.asymmetric.util", ptrTable, methods, fields, 7, 0x1, 12, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util;
}

+ (void)initialize {
  if (self == [OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util class]) {
    OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_customCurves = new_JavaUtilHashMap_init();
    {
      
#line 38
      id<JavaUtilEnumeration> e = OrgSpongycastleCryptoEcCustomNamedCurves_getNames();
      while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
        
#line 41
        NSString *name = (NSString *) cast_chk([e nextElement], [NSString class]);
        
#line 43
        OrgSpongycastleAsn1X9X9ECParameters *curveParams = OrgSpongycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(name);
        if (curveParams != nil) {
          
#line 46
          (void) [((id<JavaUtilMap>) nil_chk(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) putWithId:[curveParams getCurve] withId:[((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(OrgSpongycastleCryptoEcCustomNamedCurves_getByNameWithNSString_(name))) getCurve]];
        }
      }
      
#line 50
      OrgSpongycastleAsn1X9X9ECParameters *c25519 = OrgSpongycastleCryptoEcCustomNamedCurves_getByNameWithNSString_(@"Curve25519");
      
#line 52
      (void) [((id<JavaUtilMap>) nil_chk(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) putWithId:new_OrgSpongycastleMathEcECCurve_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(
#line 53
      [((id<OrgSpongycastleMathFieldFiniteField>) nil_chk([((OrgSpongycastleMathEcECCurve *) nil_chk([((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(c25519)) getCurve])) getField])) getCharacteristic],
#line 54
      [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECCurve *) nil_chk([c25519 getCurve])) getA])) toBigInteger],
#line 55
      [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECCurve *) nil_chk([c25519 getCurve])) getB])) toBigInteger]) withId:[c25519 getCurve]];
    }
    J2OBJC_SET_INITIALIZED(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util)
  }
}

@end


#line 32
void OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_init(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util *self) {
  NSObject_init(self);
}


#line 32
OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util *new_OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util, init)
}


#line 32
OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util *create_OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util, init)
}


#line 58
OrgSpongycastleMathEcECCurve *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleAsn1X9X962Parameters_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, OrgSpongycastleAsn1X9X962Parameters *params) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 62
  OrgSpongycastleMathEcECCurve *curve;
  id<JavaUtilSet> acceptableCurves = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getAcceptableNamedCurves];
  
#line 65
  if ([((OrgSpongycastleAsn1X9X962Parameters *) nil_chk(params)) isNamedCurve]) {
    
#line 67
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([params getParameters]);
    
#line 69
    if ([((id<JavaUtilSet>) nil_chk(acceptableCurves)) isEmpty] || [acceptableCurves containsWithId:oid]) {
      
#line 71
      OrgSpongycastleAsn1X9X9ECParameters *ecP = OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
      
#line 73
      if (ecP == nil) {
        
#line 75
        ecP = (OrgSpongycastleAsn1X9X9ECParameters *) cast_chk([((id<JavaUtilMap>) nil_chk([configuration getAdditionalECParameters])) getWithId:oid], [OrgSpongycastleAsn1X9X9ECParameters class]);
      }
      
#line 78
      curve = [((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve];
    }
    else {
      
#line 82
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"named curve not acceptable");
    }
  }
  else if ([params isImplicitlyCA]) {
    
#line 87
    curve = [((OrgSpongycastleJceSpecECParameterSpec *) nil_chk([configuration getEcImplicitlyCa])) getCurve];
  }
  else if ([((id<JavaUtilSet>) nil_chk(acceptableCurves)) isEmpty]) {
    
#line 91
    OrgSpongycastleAsn1X9X9ECParameters *ecP = OrgSpongycastleAsn1X9X9ECParameters_getInstanceWithId_([params getParameters]);
    
#line 93
    curve = [((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve];
  }
  else {
    
#line 97
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"encoded parameters not acceptable");
  }
  
#line 100
  return curve;
}


#line 103
OrgSpongycastleCryptoParamsECDomainParameters *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(id<OrgSpongycastleJcajceProviderConfigProviderConfiguration> configuration, JavaSecuritySpecECParameterSpec *params) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 107
  OrgSpongycastleCryptoParamsECDomainParameters *domainParameters;
  
#line 109
  if (params == nil) {
    
#line 111
    OrgSpongycastleJceSpecECParameterSpec *iSpec = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getEcImplicitlyCa];
    
#line 113
    domainParameters = new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(iSpec)) getCurve], [iSpec getG], [iSpec getN], [iSpec getH], [iSpec getSeed]);
  }
  else {
    
#line 117
    domainParameters = OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgSpongycastleJcajceProviderConfigProviderConfiguration_withOrgSpongycastleJceSpecECParameterSpec_(configuration, OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(params, false));
  }
  
#line 120
  return domainParameters;
}


#line 123
JavaSecuritySpecECParameterSpec *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgSpongycastleAsn1X9X962Parameters_withOrgSpongycastleMathEcECCurve_(OrgSpongycastleAsn1X9X962Parameters *params, OrgSpongycastleMathEcECCurve *curve) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 126
  JavaSecuritySpecECParameterSpec *ecSpec;
  JavaSecuritySpecEllipticCurve *ellipticCurve;
  
#line 129
  if ([((OrgSpongycastleAsn1X9X962Parameters *) nil_chk(params)) isNamedCurve]) {
    
#line 131
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([params getParameters], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    OrgSpongycastleAsn1X9X9ECParameters *ecP = OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(oid);
    if (ecP == nil) {
      
#line 135
      id<JavaUtilMap> additionalECParameters = [((id<OrgSpongycastleJcajceProviderConfigProviderConfiguration>) nil_chk(JreLoadStatic(OrgSpongycastleJceProviderBouncyCastleProvider, CONFIGURATION))) getAdditionalECParameters];
      if (![((id<JavaUtilMap>) nil_chk(additionalECParameters)) isEmpty]) {
        
#line 138
        ecP = (OrgSpongycastleAsn1X9X9ECParameters *) cast_chk([additionalECParameters getWithId:oid], [OrgSpongycastleAsn1X9X9ECParameters class]);
      }
    }
    
#line 142
    ellipticCurve = OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, [((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getSeed]);
    
#line 144
    ecSpec = new_OrgSpongycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_getCurveNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(
#line 145
    oid),
#line 146
    ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_(
#line 148
    [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([ecP getG])) getAffineXCoord])) toBigInteger],
#line 149
    [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([ecP getG])) getAffineYCoord])) toBigInteger]),
#line 150
    [ecP getN],
#line 151
    [ecP getH]);
  }
  else if ([params isImplicitlyCA]) {
    
#line 155
    ecSpec = nil;
  }
  else {
    
#line 159
    OrgSpongycastleAsn1X9X9ECParameters *ecP = OrgSpongycastleAsn1X9X9ECParameters_getInstanceWithId_([params getParameters]);
    
#line 161
    ellipticCurve = OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(curve, [((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getSeed]);
    
#line 163
    if ([ecP getH] != nil) {
      
#line 165
      ecSpec = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(
#line 166
      ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_(
#line 168
      [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([ecP getG])) getAffineXCoord])) toBigInteger],
#line 169
      [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([ecP getG])) getAffineYCoord])) toBigInteger]),
#line 170
      [ecP getN],
#line 171
      [((JavaMathBigInteger *) nil_chk([ecP getH])) intValue]);
    }
    else {
      
#line 175
      ecSpec = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(
#line 176
      ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_(
#line 178
      [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([ecP getG])) getAffineXCoord])) toBigInteger],
#line 179
      [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([ecP getG])) getAffineYCoord])) toBigInteger]),
#line 180
      [ecP getN], 1);
    }
  }
  
#line 184
  return ecSpec;
}


#line 187
JavaSecuritySpecECParameterSpec *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgSpongycastleAsn1X9X9ECParameters_(OrgSpongycastleAsn1X9X9ECParameters *domainParameters) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 190
  return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(
#line 191
  [((OrgSpongycastleAsn1X9X9ECParameters *) nil_chk(domainParameters)) getCurve], nil), new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_(
#line 193
  [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([domainParameters getG])) getAffineXCoord])) toBigInteger],
#line 194
  [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([domainParameters getG])) getAffineYCoord])) toBigInteger]),
#line 195
  [domainParameters getN],
#line 196
  [((JavaMathBigInteger *) nil_chk([domainParameters getH])) intValue]);
}


#line 199
JavaSecuritySpecEllipticCurve *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgSpongycastleMathEcECCurve_withByteArray_(OrgSpongycastleMathEcECCurve *curve, IOSByteArray *seed) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 203
  id<JavaSecuritySpecECField> field = OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithOrgSpongycastleMathFieldFiniteField_([((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) getField]);
  JavaMathBigInteger *a = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger];
  
#line 204
  JavaMathBigInteger *b = [((OrgSpongycastleMathEcECFieldElement *) nil_chk([curve getB])) toBigInteger];
  
#line 208
  return new_JavaSecuritySpecEllipticCurve_initWithJavaSecuritySpecECField_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(field, a, b, nil);
}


#line 211
OrgSpongycastleMathEcECCurve *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(JavaSecuritySpecEllipticCurve *ec) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 214
  id<JavaSecuritySpecECField> field = [((JavaSecuritySpecEllipticCurve *) nil_chk(ec)) getField];
  JavaMathBigInteger *a = [ec getA];
  JavaMathBigInteger *b = [ec getB];
  
#line 218
  if ([field isKindOfClass:[JavaSecuritySpecECFieldFp class]]) {
    
#line 220
    OrgSpongycastleMathEcECCurve_Fp *curve = new_OrgSpongycastleMathEcECCurve_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((JavaSecuritySpecECFieldFp *) nil_chk(((JavaSecuritySpecECFieldFp *) field))) getP], a, b);
    
#line 222
    if ([((id<JavaUtilMap>) nil_chk(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) containsKeyWithId:curve]) {
      
#line 224
      return (OrgSpongycastleMathEcECCurve *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_customCurves)) getWithId:curve], [OrgSpongycastleMathEcECCurve class]);
    }
    
#line 227
    return curve;
  }
  else {
    
#line 231
    JavaSecuritySpecECFieldF2m *fieldF2m = (JavaSecuritySpecECFieldF2m *) cast_chk(field, [JavaSecuritySpecECFieldF2m class]);
    jint m = [((JavaSecuritySpecECFieldF2m *) nil_chk(fieldF2m)) getM];
    IOSIntArray *ks = OrgSpongycastleJcajceProviderAsymmetricUtilECUtil_convertMidTermsWithIntArray_([fieldF2m getMidTermsOfReductionPolynomial]);
    return new_OrgSpongycastleMathEcECCurve_F2m_initWithInt_withInt_withInt_withInt_withJavaMathBigInteger_withJavaMathBigInteger_(m, IOSIntArray_Get(nil_chk(ks), 0), IOSIntArray_Get(ks, 1), IOSIntArray_Get(ks, 2), a, b);
  }
}


#line 238
id<JavaSecuritySpecECField> OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithOrgSpongycastleMathFieldFiniteField_(id<OrgSpongycastleMathFieldFiniteField> field) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  if (OrgSpongycastleMathEcECAlgorithms_isFpFieldWithOrgSpongycastleMathFieldFiniteField_(field)) {
    
#line 242
    return new_JavaSecuritySpecECFieldFp_initWithJavaMathBigInteger_([((id<OrgSpongycastleMathFieldFiniteField>) nil_chk(field)) getCharacteristic]);
  }
  else {
    
#line 246
    id<OrgSpongycastleMathFieldPolynomial> poly = [((id<OrgSpongycastleMathFieldPolynomialExtensionField>) nil_chk(((id<OrgSpongycastleMathFieldPolynomialExtensionField>) cast_check(field, OrgSpongycastleMathFieldPolynomialExtensionField_class_())))) getMinimalPolynomial];
    IOSIntArray *exponents = [((id<OrgSpongycastleMathFieldPolynomial>) nil_chk(poly)) getExponentsPresent];
    IOSIntArray *ks = OrgSpongycastleUtilArrays_reverseWithIntArray_(OrgSpongycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(exponents, 1, ((IOSIntArray *) nil_chk(exponents))->size_ - 1));
    return new_JavaSecuritySpecECFieldF2m_initWithInt_withIntArray_([poly getDegree], ks);
  }
}


#line 253
JavaSecuritySpecECParameterSpec *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withOrgSpongycastleJceSpecECParameterSpec_(JavaSecuritySpecEllipticCurve *ellipticCurve, OrgSpongycastleJceSpecECParameterSpec *spec) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 257
  if ([spec isKindOfClass:[OrgSpongycastleJceSpecECNamedCurveParameterSpec class]]) {
    
#line 259
    return new_OrgSpongycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(
#line 260
    [((OrgSpongycastleJceSpecECNamedCurveParameterSpec *) nil_chk(((OrgSpongycastleJceSpecECNamedCurveParameterSpec *) spec))) getName],
#line 261
    ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_(
#line 263
    [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(spec)) getG])) getAffineXCoord])) toBigInteger],
#line 264
    [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([spec getG])) getAffineYCoord])) toBigInteger]),
#line 265
    [spec getN],
#line 266
    [spec getH]);
  }
  else {
    
#line 270
    return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(
#line 271
    ellipticCurve, new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_(
#line 273
    [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([((OrgSpongycastleJceSpecECParameterSpec *) nil_chk(spec)) getG])) getAffineXCoord])) toBigInteger],
#line 274
    [((OrgSpongycastleMathEcECFieldElement *) nil_chk([((OrgSpongycastleMathEcECPoint *) nil_chk([spec getG])) getAffineYCoord])) toBigInteger]),
#line 275
    [spec getN],
#line 276
    [((JavaMathBigInteger *) nil_chk([spec getH])) intValue]);
  }
}


#line 280
OrgSpongycastleJceSpecECParameterSpec *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_withBoolean_(JavaSecuritySpecECParameterSpec *ecSpec, jboolean withCompression) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 284
  OrgSpongycastleMathEcECCurve *curve = OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec)) getCurve]);
  
#line 286
  return new_OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(
#line 287
  curve, OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgSpongycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(
#line 288
  curve, [ecSpec getGenerator], withCompression),
#line 289
  [ecSpec getOrder], JavaMathBigInteger_valueOfWithLong_(
#line 290
  [ecSpec getCofactor]),
#line 291
  [((JavaSecuritySpecEllipticCurve *) nil_chk([ecSpec getCurve])) getSeed]);
}


#line 294
OrgSpongycastleMathEcECPoint *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_withBoolean_(JavaSecuritySpecECParameterSpec *ecSpec, JavaSecuritySpecECPoint *point, jboolean withCompression) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 299
  return OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgSpongycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec)) getCurve]), point, withCompression);
}


#line 302
OrgSpongycastleMathEcECPoint *OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgSpongycastleMathEcECCurve_withJavaSecuritySpecECPoint_withBoolean_(OrgSpongycastleMathEcECCurve *curve, JavaSecuritySpecECPoint *point, jboolean withCompression) {
  OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 307
  return [((OrgSpongycastleMathEcECCurve *) nil_chk(curve)) createPointWithJavaMathBigInteger:[((JavaSecuritySpecECPoint *) nil_chk(point)) getAffineX] withJavaMathBigInteger:[point getAffineY]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajceProviderAsymmetricUtilEC5Util)

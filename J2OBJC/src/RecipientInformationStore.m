//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/RecipientInformationStore.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "KeyTransRecipientId.h"
#include "RecipientId.h"
#include "RecipientInformation.h"
#include "RecipientInformationStore.h"
#include "X500Name.h"
#include "java/lang/Iterable.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"

#if !__has_feature(objc_arc)
#error "RecipientInformationStore must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCmsRecipientInformationStore () {
 @public
  id<JavaUtilList> all_;
  id<JavaUtilMap> table_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCmsRecipientInformationStore, all_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsRecipientInformationStore, table_, id<JavaUtilMap>)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/RecipientInformationStore.java"


#line 14
@implementation OrgSpongycastleCmsRecipientInformationStore


#line 25
- (instancetype)initWithOrgSpongycastleCmsRecipientInformation:(OrgSpongycastleCmsRecipientInformation *)recipientInformation {
  OrgSpongycastleCmsRecipientInformationStore_initWithOrgSpongycastleCmsRecipientInformation_(self, recipientInformation);
  return self;
}


#line 36
- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)recipientInfos {
  OrgSpongycastleCmsRecipientInformationStore_initWithJavaUtilCollection_(self, recipientInfos);
  return self;
}


#line 66
- (OrgSpongycastleCmsRecipientInformation *)getWithOrgSpongycastleCmsRecipientId:(OrgSpongycastleCmsRecipientId *)selector {
  
#line 69
  id<JavaUtilCollection> list = [self getRecipientsWithOrgSpongycastleCmsRecipientId:selector];
  
#line 71
  return [((id<JavaUtilCollection>) nil_chk(list)) size] == 0 ? nil : (OrgSpongycastleCmsRecipientInformation *) cast_chk([((id<JavaUtilIterator>) nil_chk([list iterator])) next], [OrgSpongycastleCmsRecipientInformation class]);
}


#line 79
- (jint)size {
  
#line 81
  return [((id<JavaUtilList>) nil_chk(all_)) size];
}


#line 89
- (id<JavaUtilCollection>)getRecipients {
  
#line 91
  return new_JavaUtilArrayList_initWithJavaUtilCollection_(all_);
}


#line 100
- (id<JavaUtilCollection>)getRecipientsWithOrgSpongycastleCmsRecipientId:(OrgSpongycastleCmsRecipientId *)selector {
  
#line 103
  if ([selector isKindOfClass:[OrgSpongycastleCmsKeyTransRecipientId class]]) {
    
#line 105
    OrgSpongycastleCmsKeyTransRecipientId *keyTrans = (OrgSpongycastleCmsKeyTransRecipientId *) selector;
    
#line 107
    OrgSpongycastleAsn1X500X500Name *issuer = [((OrgSpongycastleCmsKeyTransRecipientId *) nil_chk(keyTrans)) getIssuer];
    IOSByteArray *subjectKeyId = [keyTrans getSubjectKeyIdentifier];
    
#line 110
    if (issuer != nil && subjectKeyId != nil) {
      
#line 112
      id<JavaUtilList> results = new_JavaUtilArrayList_init();
      
#line 114
      id<JavaUtilCollection> match1 = [self getRecipientsWithOrgSpongycastleCmsRecipientId:new_OrgSpongycastleCmsKeyTransRecipientId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(issuer, [keyTrans getSerialNumber])];
      if (match1 != nil) {
        
#line 117
        [results addAllWithJavaUtilCollection:match1];
      }
      
#line 120
      id<JavaUtilCollection> match2 = [self getRecipientsWithOrgSpongycastleCmsRecipientId:new_OrgSpongycastleCmsKeyTransRecipientId_initWithByteArray_(subjectKeyId)];
      if (match2 != nil) {
        
#line 123
        [results addAllWithJavaUtilCollection:match2];
      }
      
#line 126
      return results;
    }
  }
  
#line 130
  id<JavaUtilList> list = (JavaUtilArrayList *) cast_chk([((id<JavaUtilMap>) nil_chk(table_)) getWithId:selector], [JavaUtilArrayList class]);
  
#line 132
  return list == nil ? new_JavaUtilArrayList_init() : new_JavaUtilArrayList_initWithJavaUtilCollection_(list);
}


#line 139
- (id<JavaUtilIterator>)iterator {
  
#line 141
  return [((id<JavaUtilCollection>) nil_chk([self getRecipients])) iterator];
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "LOrgSpongycastleCmsRecipientInformation;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, 6, 4, -1, 7, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCmsRecipientInformation:);
  methods[1].selector = @selector(initWithJavaUtilCollection:);
  methods[2].selector = @selector(getWithOrgSpongycastleCmsRecipientId:);
  methods[3].selector = @selector(size);
  methods[4].selector = @selector(getRecipients);
  methods[5].selector = @selector(getRecipientsWithOrgSpongycastleCmsRecipientId:);
  methods[6].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "all_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "table_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCmsRecipientInformation;", "LJavaUtilCollection;", "(Ljava/util/Collection<Lorg/spongycastle/cms/RecipientInformation;>;)V", "get", "LOrgSpongycastleCmsRecipientId;", "()Ljava/util/Collection<Lorg/spongycastle/cms/RecipientInformation;>;", "getRecipients", "(Lorg/spongycastle/cms/RecipientId;)Ljava/util/Collection<Lorg/spongycastle/cms/Recipient;>;", "()Ljava/util/Iterator<Lorg/spongycastle/cms/RecipientInformation;>;", "Ljava/lang/Object;Lorg/spongycastle/util/Iterable<Lorg/spongycastle/cms/RecipientInformation;>;" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsRecipientInformationStore = { "RecipientInformationStore", "org.spongycastle.cms", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, 9, -1 };
  return &_OrgSpongycastleCmsRecipientInformationStore;
}

@end


#line 25
void OrgSpongycastleCmsRecipientInformationStore_initWithOrgSpongycastleCmsRecipientInformation_(OrgSpongycastleCmsRecipientInformationStore *self, OrgSpongycastleCmsRecipientInformation *recipientInformation) {
  NSObject_init(self);
  self->table_ = new_JavaUtilHashMap_init();
  self->all_ = new_JavaUtilArrayList_initWithInt_(1);
  [self->all_ addWithId:recipientInformation];
  
#line 31
  OrgSpongycastleCmsRecipientId *sid = [((OrgSpongycastleCmsRecipientInformation *) nil_chk(recipientInformation)) getRID];
  
#line 33
  (void) [self->table_ putWithId:sid withId:self->all_];
}


#line 25
OrgSpongycastleCmsRecipientInformationStore *new_OrgSpongycastleCmsRecipientInformationStore_initWithOrgSpongycastleCmsRecipientInformation_(OrgSpongycastleCmsRecipientInformation *recipientInformation) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsRecipientInformationStore, initWithOrgSpongycastleCmsRecipientInformation_, recipientInformation)
}


#line 25
OrgSpongycastleCmsRecipientInformationStore *create_OrgSpongycastleCmsRecipientInformationStore_initWithOrgSpongycastleCmsRecipientInformation_(OrgSpongycastleCmsRecipientInformation *recipientInformation) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsRecipientInformationStore, initWithOrgSpongycastleCmsRecipientInformation_, recipientInformation)
}


#line 36
void OrgSpongycastleCmsRecipientInformationStore_initWithJavaUtilCollection_(OrgSpongycastleCmsRecipientInformationStore *self, id<JavaUtilCollection> recipientInfos) {
  NSObject_init(self);
  self->table_ = new_JavaUtilHashMap_init();
  id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(recipientInfos)) iterator];
  
#line 41
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    
#line 43
    OrgSpongycastleCmsRecipientInformation *recipientInformation = (OrgSpongycastleCmsRecipientInformation *) cast_chk([it next], [OrgSpongycastleCmsRecipientInformation class]);
    OrgSpongycastleCmsRecipientId *rid = [((OrgSpongycastleCmsRecipientInformation *) nil_chk(recipientInformation)) getRID];
    
#line 46
    id<JavaUtilList> list = (JavaUtilArrayList *) cast_chk([self->table_ getWithId:rid], [JavaUtilArrayList class]);
    if (list == nil) {
      
#line 49
      list = new_JavaUtilArrayList_initWithInt_(1);
      (void) [self->table_ putWithId:rid withId:list];
    }
    
#line 53
    [list addWithId:recipientInformation];
  }
  
#line 56
  self->all_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(recipientInfos);
}


#line 36
OrgSpongycastleCmsRecipientInformationStore *new_OrgSpongycastleCmsRecipientInformationStore_initWithJavaUtilCollection_(id<JavaUtilCollection> recipientInfos) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsRecipientInformationStore, initWithJavaUtilCollection_, recipientInfos)
}


#line 36
OrgSpongycastleCmsRecipientInformationStore *create_OrgSpongycastleCmsRecipientInformationStore_initWithJavaUtilCollection_(id<JavaUtilCollection> recipientInfos) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsRecipientInformationStore, initWithJavaUtilCollection_, recipientInfos)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsRecipientInformationStore)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/params/ECDomainParameters.java
//

#include "Arrays.h"
#include "ECConstants.h"
#include "ECCurve.h"
#include "ECDomainParameters.h"
#include "ECPoint.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"

#if !__has_feature(objc_arc)
#error "ECDomainParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCryptoParamsECDomainParameters () {
 @public
  OrgSpongycastleMathEcECCurve *curve_;
  IOSByteArray *seed_;
  OrgSpongycastleMathEcECPoint *G_;
  JavaMathBigInteger *n_;
  JavaMathBigInteger *h_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsECDomainParameters, curve_, OrgSpongycastleMathEcECCurve *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsECDomainParameters, seed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsECDomainParameters, G_, OrgSpongycastleMathEcECPoint *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsECDomainParameters, n_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoParamsECDomainParameters, h_, JavaMathBigInteger *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/params/ECDomainParameters.java"


#line 10
@implementation OrgSpongycastleCryptoParamsECDomainParameters


#line 19
- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n {
  OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(self, curve, G, n);
  return self;
}


#line 27
- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h {
  OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, curve, G, n, h);
  return self;
}


#line 36
- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h
                                       withByteArray:(IOSByteArray *)seed {
  OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, G, n, h, seed);
  return self;
}


#line 50
- (OrgSpongycastleMathEcECCurve *)getCurve {
  
#line 52
  return curve_;
}


#line 55
- (OrgSpongycastleMathEcECPoint *)getG {
  
#line 57
  return G_;
}


#line 60
- (JavaMathBigInteger *)getN {
  
#line 62
  return n_;
}


#line 65
- (JavaMathBigInteger *)getH {
  
#line 67
  return h_;
}


#line 70
- (IOSByteArray *)getSeed {
  
#line 72
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(seed_);
}


#line 75
- (jboolean)isEqual:(id)obj {
  
#line 78
  if (JreObjectEqualsEquals(self, obj)) {
    
#line 80
    return true;
  }
  
#line 83
  if (([obj isKindOfClass:[OrgSpongycastleCryptoParamsECDomainParameters class]])) {
    
#line 85
    OrgSpongycastleCryptoParamsECDomainParameters *other = (OrgSpongycastleCryptoParamsECDomainParameters *) cast_chk(obj, [OrgSpongycastleCryptoParamsECDomainParameters class]);
    
#line 87
    return [((OrgSpongycastleMathEcECCurve *) nil_chk(self->curve_)) equalsWithOrgSpongycastleMathEcECCurve:((OrgSpongycastleCryptoParamsECDomainParameters *) nil_chk(other))->curve_] && [((OrgSpongycastleMathEcECPoint *) nil_chk(self->G_)) equalsWithOrgSpongycastleMathEcECPoint:other->G_] && [((JavaMathBigInteger *) nil_chk(self->n_)) isEqual:other->n_] && [((JavaMathBigInteger *) nil_chk(self->h_)) isEqual:other->h_];
  }
  
#line 90
  return false;
}


#line 93
- (NSUInteger)hash {
  
#line 95
  jint hc = ((jint) [((OrgSpongycastleMathEcECCurve *) nil_chk(curve_)) hash]);
  hc *= 37;
  hc ^= ((jint) [((OrgSpongycastleMathEcECPoint *) nil_chk(G_)) hash]);
  hc *= 37;
  hc ^= ((jint) [((JavaMathBigInteger *) nil_chk(n_)) hash]);
  hc *= 37;
  hc ^= ((jint) [((JavaMathBigInteger *) nil_chk(h_)) hash]);
  return hc;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECCurve;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[1].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithOrgSpongycastleMathEcECCurve:withOrgSpongycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[3].selector = @selector(getCurve);
  methods[4].selector = @selector(getG);
  methods[5].selector = @selector(getN);
  methods[6].selector = @selector(getH);
  methods[7].selector = @selector(getSeed);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "curve_", "LOrgSpongycastleMathEcECCurve;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "seed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "G_", "LOrgSpongycastleMathEcECPoint;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "h_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LOrgSpongycastleMathEcECCurve;LOrgSpongycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoParamsECDomainParameters = { "ECDomainParameters", "org.spongycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 10, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoParamsECDomainParameters;
}

@end


#line 19
void OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsECDomainParameters *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n) {
  OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self,
#line 24
  curve, G, n, JreLoadStatic(OrgSpongycastleMathEcECConstants, ONE), nil);
}


#line 19
OrgSpongycastleCryptoParamsECDomainParameters *new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsECDomainParameters, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_, curve, G, n)
}


#line 19
OrgSpongycastleCryptoParamsECDomainParameters *create_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsECDomainParameters, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_, curve, G, n)
}


#line 27
void OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleCryptoParamsECDomainParameters *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self,
#line 33
  curve, G, n, h, nil);
}


#line 27
OrgSpongycastleCryptoParamsECDomainParameters *new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsECDomainParameters, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, G, n, h)
}


#line 27
OrgSpongycastleCryptoParamsECDomainParameters *create_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsECDomainParameters, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, G, n, h)
}


#line 36
void OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgSpongycastleCryptoParamsECDomainParameters *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  NSObject_init(self);
  
#line 43
  self->curve_ = curve;
  self->G_ = [((OrgSpongycastleMathEcECPoint *) nil_chk(G)) normalize];
  self->n_ = n;
  self->h_ = h;
  self->seed_ = seed;
}


#line 36
OrgSpongycastleCryptoParamsECDomainParameters *new_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoParamsECDomainParameters, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, G, n, h, seed)
}


#line 36
OrgSpongycastleCryptoParamsECDomainParameters *create_OrgSpongycastleCryptoParamsECDomainParameters_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoParamsECDomainParameters, initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, G, n, h, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoParamsECDomainParameters)

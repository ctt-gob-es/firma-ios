//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/LogManager.java
//

#include "AOUtil.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "LogManager.h"
#include "LoggerUtil.h"
#include "Platform.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Throwable.h"
#include "java/util/logging/FileHandler.h"
#include "java/util/logging/Handler.h"
#include "java/util/logging/Logger.h"

#if !__has_feature(objc_arc)
#error "LogManager must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreLogManager ()

- (instancetype)init;

/*!
 @brief Crea un manejador para el guardado de log en fichero.
 @param logFileString Fichero de registro (con ruta) a usar, seg &uacute; n la norma de codificaci &oacute; n                       de  <i> Java Logging API </i>  para los c &oacute; digos de directorios.
 @return Manejador de log en fichero.
 @throw IOExceptionCuando ocurren errores al crear o utilizar el fichero.
 */
+ (JavaUtilLoggingFileHandler *)createFileHandlerWithNSString:(NSString *)logFileString;

@end

inline JavaUtilLoggingLogger *EsGobAfirmaCoreLogManager_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaCoreLogManager_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreLogManager, LOGGER, JavaUtilLoggingLogger *)

inline NSString *EsGobAfirmaCoreLogManager_get_LOG_FILE_NAME(void);
static NSString *EsGobAfirmaCoreLogManager_LOG_FILE_NAME = @"%a.afirma.log.xml";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreLogManager, LOG_FILE_NAME, NSString *)

inline NSString *EsGobAfirmaCoreLogManager_get_LOG_FILE_PATH(void);
static NSString *EsGobAfirmaCoreLogManager_LOG_FILE_PATH = @"%h/.afirma";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreLogManager, LOG_FILE_PATH, NSString *)

inline jint EsGobAfirmaCoreLogManager_get_LOG_MAX_SIZE(void);
#define EsGobAfirmaCoreLogManager_LOG_MAX_SIZE 2097152
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreLogManager, LOG_MAX_SIZE, jint)

inline jboolean EsGobAfirmaCoreLogManager_get_installed(void);
inline jboolean EsGobAfirmaCoreLogManager_set_installed(jboolean value);
inline jboolean *EsGobAfirmaCoreLogManager_getRef_installed(void);
static jboolean EsGobAfirmaCoreLogManager_installed = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(EsGobAfirmaCoreLogManager, installed, jboolean)

inline NSString *EsGobAfirmaCoreLogManager_get_logFile(void);
inline NSString *EsGobAfirmaCoreLogManager_set_logFile(NSString *value);
static NSString *EsGobAfirmaCoreLogManager_logFile;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreLogManager, logFile, NSString *)

inline EsGobAfirmaCoreLogManager_App *EsGobAfirmaCoreLogManager_get_application(void);
inline EsGobAfirmaCoreLogManager_App *EsGobAfirmaCoreLogManager_set_application(EsGobAfirmaCoreLogManager_App *value);
static EsGobAfirmaCoreLogManager_App *EsGobAfirmaCoreLogManager_application;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreLogManager, application, EsGobAfirmaCoreLogManager_App *)

__attribute__((unused)) static void EsGobAfirmaCoreLogManager_init(EsGobAfirmaCoreLogManager *self);

__attribute__((unused)) static EsGobAfirmaCoreLogManager *new_EsGobAfirmaCoreLogManager_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreLogManager *create_EsGobAfirmaCoreLogManager_init(void);

__attribute__((unused)) static JavaUtilLoggingFileHandler *EsGobAfirmaCoreLogManager_createFileHandlerWithNSString_(NSString *logFileString);

__attribute__((unused)) static void EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(EsGobAfirmaCoreLogManager_App *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobAfirmaCoreLogManager_App *new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/LogManager.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreLogManager)

NSString *EsGobAfirmaCoreLogManager_SUBDIR = @".afirma";


#line 26
@implementation EsGobAfirmaCoreLogManager

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 30
- (instancetype)init {
  EsGobAfirmaCoreLogManager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 73
+ (void)installWithEsGobAfirmaCoreLogManager_App:(EsGobAfirmaCoreLogManager_App *)app {
  EsGobAfirmaCoreLogManager_installWithEsGobAfirmaCoreLogManager_App_(app);
}


#line 86
+ (void)installWithEsGobAfirmaCoreLogManager_App:(EsGobAfirmaCoreLogManager_App *)app
                                    withNSString:(NSString *)logFilePath {
  EsGobAfirmaCoreLogManager_installWithEsGobAfirmaCoreLogManager_App_withNSString_(app, logFilePath);
}


#line 124
+ (JavaUtilLoggingFileHandler *)createFileHandlerWithNSString:(NSString *)logFileString {
  return EsGobAfirmaCoreLogManager_createFileHandlerWithNSString_(logFileString);
}


#line 136
+ (NSString *)getLogFile {
  return EsGobAfirmaCoreLogManager_getLogFile();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "LJavaUtilLoggingFileHandler;", 0xa, 4, 5, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(installWithEsGobAfirmaCoreLogManager_App:);
  methods[2].selector = @selector(installWithEsGobAfirmaCoreLogManager_App:withNSString:);
  methods[3].selector = @selector(createFileHandlerWithNSString:);
  methods[4].selector = @selector(getLogFile);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "SUBDIR", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "LOG_FILE_NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "LOG_FILE_PATH", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "LOG_MAX_SIZE", "I", .constantValue.asInt = EsGobAfirmaCoreLogManager_LOG_MAX_SIZE, 0x1a, -1, -1, -1, -1 },
    { "installed", "Z", .constantValue.asLong = 0, 0xa, -1, 10, -1, -1 },
    { "logFile", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 11, -1, -1 },
    { "application", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0xa, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "install", "LEsGobAfirmaCoreLogManager_App;", "LJavaIoIOException;", "LEsGobAfirmaCoreLogManager_App;LNSString;", "createFileHandler", "LNSString;", &EsGobAfirmaCoreLogManager_LOGGER, &EsGobAfirmaCoreLogManager_SUBDIR, &EsGobAfirmaCoreLogManager_LOG_FILE_NAME, &EsGobAfirmaCoreLogManager_LOG_FILE_PATH, &EsGobAfirmaCoreLogManager_installed, &EsGobAfirmaCoreLogManager_logFile, &EsGobAfirmaCoreLogManager_application };
  static const J2ObjcClassInfo _EsGobAfirmaCoreLogManager = { "LogManager", "es.gob.afirma.core", ptrTable, methods, fields, 7, 0x11, 5, 8, -1, 1, -1, -1, -1 };
  return &_EsGobAfirmaCoreLogManager;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreLogManager class]) {
    EsGobAfirmaCoreLogManager_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 28
    @"es.gob");
    EsGobAfirmaCoreLogManager_application = JreLoadEnum(EsGobAfirmaCoreLogManager_App, OTHER);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreLogManager)
  }
}

@end


#line 30
void EsGobAfirmaCoreLogManager_init(EsGobAfirmaCoreLogManager *self) {
  NSObject_init(self);
}


#line 30
EsGobAfirmaCoreLogManager *new_EsGobAfirmaCoreLogManager_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreLogManager, init)
}


#line 30
EsGobAfirmaCoreLogManager *create_EsGobAfirmaCoreLogManager_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreLogManager, init)
}


#line 73
void EsGobAfirmaCoreLogManager_installWithEsGobAfirmaCoreLogManager_App_(EsGobAfirmaCoreLogManager_App *app) {
  EsGobAfirmaCoreLogManager_initialize();
  
#line 74
  EsGobAfirmaCoreLogManager_installWithEsGobAfirmaCoreLogManager_App_withNSString_(app, nil);
}


#line 86
void EsGobAfirmaCoreLogManager_installWithEsGobAfirmaCoreLogManager_App_withNSString_(EsGobAfirmaCoreLogManager_App *app, NSString *logFilePath) {
  EsGobAfirmaCoreLogManager_initialize();
  
#line 89
  if (app == nil) {
    EsGobAfirmaCoreLogManager_application = JreLoadEnum(EsGobAfirmaCoreLogManager_App, OTHER);
  }
  else {
    EsGobAfirmaCoreLogManager_application = app;
  }
  
#line 97
  if (logFilePath == nil) {
    EsGobAfirmaCoreLogManager_logFile = JreStrcat("$C$", [((NSString *) nil_chk(EsGobAfirmaCoreLogManager_LOG_FILE_PATH)) java_replace:@"%h" withSequence:EsGobAfirmaCoreMiscPlatform_getUserHome()], '/',
#line 100
    [((NSString *) nil_chk(EsGobAfirmaCoreLogManager_LOG_FILE_NAME)) java_replace:@"%a" withSequence:[((EsGobAfirmaCoreLogManager_App *) nil_chk(EsGobAfirmaCoreLogManager_application)) description]]);
  }
  else {
    EsGobAfirmaCoreLogManager_logFile = [(JreStrcat("$$@$", [logFilePath java_replace:@"\\" withSequence:@"/"],
#line 104
    ([logFilePath java_hasSuffix:@"/"] ? @"" : @"/"),
#line 105
    EsGobAfirmaCoreLogManager_application, @".afirma.log.xml")) java_replace:
#line 106
    @"%h" withSequence:EsGobAfirmaCoreMiscPlatform_getUserHome()];
  }
  JavaIoFile *path = [new_JavaIoFile_initWithNSString_(EsGobAfirmaCoreLogManager_logFile) getParentFile];
  if (![((JavaIoFile *) nil_chk(path)) exists]) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreLogManager_LOGGER)) infoWithNSString:JreStrcat("$$$", @"La ruta para el fichero de registro ('", EsGobAfirmaCoreMiscLoggerUtil_getCleanUserHomePathWithNSString_([path getAbsolutePath]), @"') no existe, se creara")];
    if (![path mkdirs]) {
      [EsGobAfirmaCoreLogManager_LOGGER severeWithNSString:JreStrcat("$$$", @"No se ha podido crear la ruta para el fichero de registro ('", EsGobAfirmaCoreMiscLoggerUtil_getCleanUserHomePathWithNSString_([path getAbsolutePath]), @"')")];
    }
  }
  [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreLogManager_LOGGER)) addHandlerWithJavaUtilLoggingHandler:EsGobAfirmaCoreLogManager_createFileHandlerWithNSString_(EsGobAfirmaCoreLogManager_logFile)];
  EsGobAfirmaCoreLogManager_installed = true;
}


#line 124
JavaUtilLoggingFileHandler *EsGobAfirmaCoreLogManager_createFileHandlerWithNSString_(NSString *logFileString) {
  EsGobAfirmaCoreLogManager_initialize();
  
#line 125
  return new_JavaUtilLoggingFileHandler_initWithNSString_withInt_withInt_withBoolean_(
#line 126
  logFileString,
#line 127
  EsGobAfirmaCoreLogManager_LOG_MAX_SIZE,
#line 128
  1,
#line 129
  false);
}


#line 136
NSString *EsGobAfirmaCoreLogManager_getLogFile() {
  EsGobAfirmaCoreLogManager_initialize();
  
#line 137
  if (!EsGobAfirmaCoreLogManager_installed || EsGobAfirmaCoreLogManager_logFile == nil) {
    @throw new_JavaIoIOException_initWithNSString_(@"No esta instalado el manejador de fichero");
  }
  
#line 141
  IOSObjectArray *handlers = [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreLogManager_LOGGER)) getHandlers];
  {
    IOSObjectArray *a__ =
#line 142
    handlers;
    JavaUtilLoggingHandler * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaUtilLoggingHandler * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaUtilLoggingHandler *h = *b__++;
      
#line 143
      if ([h isKindOfClass:[JavaUtilLoggingFileHandler class]]) {
        [((JavaUtilLoggingHandler *) nil_chk(h)) close];
        [EsGobAfirmaCoreLogManager_LOGGER infoWithNSString:@"Cerrado el manejador de fichero para permitir que sea procesado"];
        [EsGobAfirmaCoreLogManager_LOGGER removeHandlerWithJavaUtilLoggingHandler:h];
      }
    }
  }
  NSString *log;
  {
    JavaIoInputStream *is = new_JavaIoFileInputStream_initWithJavaIoFile_(new_JavaIoFile_initWithNSString_(
#line 154
    [((NSString *) nil_chk(EsGobAfirmaCoreLogManager_logFile)) java_replace:@"%h" withSequence:EsGobAfirmaCoreMiscPlatform_getUserHome()]));
    JavaLangThrowable *__primaryException1 = nil;
    
#line 151
    @try {
      
#line 158
      log = [NSString java_stringWithBytes:EsGobAfirmaCoreMiscAOUtil_getDataFromInputStreamWithJavaIoInputStream_(is)];
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (is != nil) {
        if (__primaryException1 != nil) {
          @try {
            [is close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [is close];
        }
      }
    }
  }
  
#line 161
  [EsGobAfirmaCoreLogManager_LOGGER addHandlerWithJavaUtilLoggingHandler:EsGobAfirmaCoreLogManager_createFileHandlerWithNSString_(EsGobAfirmaCoreLogManager_logFile)];
  
#line 163
  return log;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreLogManager)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/LogManager.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreLogManager_App)

EsGobAfirmaCoreLogManager_App *EsGobAfirmaCoreLogManager_App_values_[9];


#line 35
@implementation EsGobAfirmaCoreLogManager_App

+ (IOSObjectArray *)values {
  return EsGobAfirmaCoreLogManager_App_values();
}

+ (EsGobAfirmaCoreLogManager_App *)valueOfWithNSString:(NSString *)name {
  return EsGobAfirmaCoreLogManager_App_valueOfWithNSString_(name);
}

- (EsGobAfirmaCoreLogManager_App_Enum)toNSEnum {
  return (EsGobAfirmaCoreLogManager_App_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEsGobAfirmaCoreLogManager_App;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreLogManager_App;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MINIAPPLET", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "APPLET", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "AUTOFIRMA", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "AUTOFIRMA_CONFIGURATOR", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "STANDALONE", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "ANDROID", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "HANDWRITTEN", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "DNINB", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "OTHER", "LEsGobAfirmaCoreLogManager_App;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EsGobAfirmaCoreLogManager_App, MINIAPPLET), &JreEnum(EsGobAfirmaCoreLogManager_App, APPLET), &JreEnum(EsGobAfirmaCoreLogManager_App, AUTOFIRMA), &JreEnum(EsGobAfirmaCoreLogManager_App, AUTOFIRMA_CONFIGURATOR), &JreEnum(EsGobAfirmaCoreLogManager_App, STANDALONE), &JreEnum(EsGobAfirmaCoreLogManager_App, ANDROID), &JreEnum(EsGobAfirmaCoreLogManager_App, HANDWRITTEN), &JreEnum(EsGobAfirmaCoreLogManager_App, DNINB), &JreEnum(EsGobAfirmaCoreLogManager_App, OTHER), "LEsGobAfirmaCoreLogManager;", "Ljava/lang/Enum<Les/gob/afirma/core/LogManager$App;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreLogManager_App = { "App", "es.gob.afirma.core", ptrTable, methods, fields, 7, 0x4019, 2, 9, 11, -1, -1, 12, -1 };
  return &_EsGobAfirmaCoreLogManager_App;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreLogManager_App class]) {
    JreEnum(EsGobAfirmaCoreLogManager_App, MINIAPPLET) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 0), 0);
    JreEnum(EsGobAfirmaCoreLogManager_App, APPLET) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 1), 1);
    JreEnum(EsGobAfirmaCoreLogManager_App, AUTOFIRMA) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 2), 2);
    JreEnum(EsGobAfirmaCoreLogManager_App, AUTOFIRMA_CONFIGURATOR) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 3), 3);
    JreEnum(EsGobAfirmaCoreLogManager_App, STANDALONE) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 4), 4);
    JreEnum(EsGobAfirmaCoreLogManager_App, ANDROID) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 5), 5);
    JreEnum(EsGobAfirmaCoreLogManager_App, HANDWRITTEN) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 6), 6);
    JreEnum(EsGobAfirmaCoreLogManager_App, DNINB) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 7), 7);
    JreEnum(EsGobAfirmaCoreLogManager_App, OTHER) = new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreLogManager_App_class_(), 8), 8);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreLogManager_App)
  }
}

@end


#line 35
void EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(EsGobAfirmaCoreLogManager_App *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}


#line 35
EsGobAfirmaCoreLogManager_App *new_EsGobAfirmaCoreLogManager_App_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreLogManager_App, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EsGobAfirmaCoreLogManager_App_values() {
  EsGobAfirmaCoreLogManager_App_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobAfirmaCoreLogManager_App_values_ count:9 type:EsGobAfirmaCoreLogManager_App_class_()];
}

EsGobAfirmaCoreLogManager_App *EsGobAfirmaCoreLogManager_App_valueOfWithNSString_(NSString *name) {
  EsGobAfirmaCoreLogManager_App_initialize();
  for (int i = 0; i < 9; i++) {
    EsGobAfirmaCoreLogManager_App *e = EsGobAfirmaCoreLogManager_App_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobAfirmaCoreLogManager_App *EsGobAfirmaCoreLogManager_App_fromOrdinal(NSUInteger ordinal) {
  EsGobAfirmaCoreLogManager_App_initialize();
  if (ordinal >= 9) {
    return nil;
  }
  return EsGobAfirmaCoreLogManager_App_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreLogManager_App)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/PngImage.java
//

#include "ByteBuffer.h"
#include "ExceptionConverter.h"
#include "ICC_Profile.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "ImgRaw.h"
#include "J2ObjC_source.h"
#include "PdfArray.h"
#include "PdfDictionary.h"
#include "PdfLiteral.h"
#include "PdfName.h"
#include "PdfNumber.h"
#include "PdfObject.h"
#include "PdfReader.h"
#include "PdfString.h"
#include "PngImage.h"
#include "Utilities.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/DataInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/net/URL.h"
#include "java/util/zip/Inflater.h"
#include "java/util/zip/InflaterInputStream.h"

@class ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream;

#if !__has_feature(objc_arc)
#error "PngImage must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCodecPngImage () {
 @public
  JavaIoInputStream *is_;
  JavaIoDataInputStream *dataStream_;
  jint width_;
  jint height_;
  jint bitDepth_;
  jint colorType_;
  jint compressionMethod_;
  jint filterMethod_;
  jint interlaceMethod_;
  ComAowagieTextPdfPdfDictionary *additional_;
  IOSByteArray *image_;
  IOSByteArray *smask_;
  IOSByteArray *trans_;
  ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *idat_;
  jint dpiX_;
  jint dpiY_;
  jfloat XYRatio_;
  jboolean genBWMask_;
  jboolean palShades_;
  jint transRedGray_;
  jint transGreen_;
  jint transBlue_;
  jint inputBands_;
  jint bytesPerPixel_;
  IOSByteArray *colorTable_;
  jfloat gamma_;
  jboolean hasCHRM_;
  jfloat xW_;
  jfloat yW_;
  jfloat xR_;
  jfloat yR_;
  jfloat xG_;
  jfloat yG_;
  jfloat xB_;
  jfloat yB_;
  ComAowagieTextPdfPdfName *intent_;
  HarmonyJavaAwtColorICC_Profile *icc_profile_;
}

/*!
 @brief Creates a new instance of PngImage
 @param is Input stream.
 */
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is;

/*!
 @brief Reads a PNG from a stream.
 @param is the stream
 @throw IOExceptionon error
 @return the image
 */
+ (ComAowagieTextImage *)getImageWithJavaIoInputStream:(JavaIoInputStream *)is;

- (jboolean)checkMarkerWithNSString:(NSString *)s;

- (void)readPng;

- (ComAowagieTextPdfPdfObject *)getColorspace;

- (ComAowagieTextImage *)getImage;

- (void)decodeIdat;

- (void)decodePassWithInt:(jint)xOffset
                  withInt:(jint)yOffset
                  withInt:(jint)xStep
                  withInt:(jint)yStep
                  withInt:(jint)passWidth
                  withInt:(jint)passHeight;

- (void)processPixelsWithByteArray:(IOSByteArray *)curr
                           withInt:(jint)xOffset
                           withInt:(jint)step
                           withInt:(jint)y
                           withInt:(jint)width;

+ (void)setPixelWithByteArray:(IOSByteArray *)image
                 withIntArray:(IOSIntArray *)data
                      withInt:(jint)offset
                      withInt:(jint)size
                      withInt:(jint)x
                      withInt:(jint)y
                      withInt:(jint)bitDepth
                      withInt:(jint)bytesPerRow;

- (IOSIntArray *)getPixelWithByteArray:(IOSByteArray *)curr;

+ (void)decodeSubFilterWithByteArray:(IOSByteArray *)curr
                             withInt:(jint)count
                             withInt:(jint)bpp;

+ (void)decodeUpFilterWithByteArray:(IOSByteArray *)curr
                      withByteArray:(IOSByteArray *)prev
                            withInt:(jint)count;

+ (void)decodeAverageFilterWithByteArray:(IOSByteArray *)curr
                           withByteArray:(IOSByteArray *)prev
                                 withInt:(jint)count
                                 withInt:(jint)bpp;

+ (jint)paethPredictorWithInt:(jint)a
                      withInt:(jint)b
                      withInt:(jint)c;

+ (void)decodePaethFilterWithByteArray:(IOSByteArray *)curr
                         withByteArray:(IOSByteArray *)prev
                               withInt:(jint)count
                               withInt:(jint)bpp;

/*!
 @brief Gets an <CODE>int</CODE> from an <CODE>InputStream</CODE>.
 @param is an  <CODE> InputStream </CODE>
 @return the value of an <CODE>int</CODE>
 @throw IOExceptionon error
 */
+ (jint)getIntWithJavaIoInputStream:(JavaIoInputStream *)is;

/*!
 @brief Gets a <CODE>word</CODE> from an <CODE>InputStream</CODE>.
 @param is an  <CODE> InputStream </CODE>
 @return the value of an <CODE>int</CODE>
 @throw IOExceptionon error
 */
+ (jint)getWordWithJavaIoInputStream:(JavaIoInputStream *)is;

/*!
 @brief Gets a <CODE>String</CODE> from an <CODE>InputStream</CODE>.
 @param is an  <CODE> InputStream </CODE>
 @return the value of an <CODE>int</CODE>
 @throw IOExceptionon error
 */
+ (NSString *)getStringWithJavaIoInputStream:(JavaIoInputStream *)is;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, is_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, dataStream_, JavaIoDataInputStream *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, additional_, ComAowagieTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, image_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, smask_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, trans_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, idat_, ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, colorTable_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, intent_, ComAowagieTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecPngImage, icc_profile_, HarmonyJavaAwtColorICC_Profile *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_IHDR(void);
static NSString *ComAowagieTextPdfCodecPngImage_IHDR = @"IHDR";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, IHDR, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_PLTE(void);
static NSString *ComAowagieTextPdfCodecPngImage_PLTE = @"PLTE";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, PLTE, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_IDAT(void);
static NSString *ComAowagieTextPdfCodecPngImage_IDAT = @"IDAT";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, IDAT, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_IEND(void);
static NSString *ComAowagieTextPdfCodecPngImage_IEND = @"IEND";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, IEND, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_tRNS(void);
static NSString *ComAowagieTextPdfCodecPngImage_tRNS = @"tRNS";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, tRNS, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_pHYs(void);
static NSString *ComAowagieTextPdfCodecPngImage_pHYs = @"pHYs";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, pHYs, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_gAMA(void);
static NSString *ComAowagieTextPdfCodecPngImage_gAMA = @"gAMA";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, gAMA, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_cHRM(void);
static NSString *ComAowagieTextPdfCodecPngImage_cHRM = @"cHRM";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, cHRM, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_sRGB(void);
static NSString *ComAowagieTextPdfCodecPngImage_sRGB = @"sRGB";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, sRGB, NSString *)

/*!
 @brief A PNG marker.
 */
inline NSString *ComAowagieTextPdfCodecPngImage_get_iCCP(void);
static NSString *ComAowagieTextPdfCodecPngImage_iCCP = @"iCCP";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, iCCP, NSString *)

inline jint ComAowagieTextPdfCodecPngImage_get_TRANSFERSIZE(void);
#define ComAowagieTextPdfCodecPngImage_TRANSFERSIZE 4096
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecPngImage, TRANSFERSIZE, jint)

inline jint ComAowagieTextPdfCodecPngImage_get_PNG_FILTER_NONE(void);
#define ComAowagieTextPdfCodecPngImage_PNG_FILTER_NONE 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecPngImage, PNG_FILTER_NONE, jint)

inline jint ComAowagieTextPdfCodecPngImage_get_PNG_FILTER_SUB(void);
#define ComAowagieTextPdfCodecPngImage_PNG_FILTER_SUB 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecPngImage, PNG_FILTER_SUB, jint)

inline jint ComAowagieTextPdfCodecPngImage_get_PNG_FILTER_UP(void);
#define ComAowagieTextPdfCodecPngImage_PNG_FILTER_UP 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecPngImage, PNG_FILTER_UP, jint)

inline jint ComAowagieTextPdfCodecPngImage_get_PNG_FILTER_AVERAGE(void);
#define ComAowagieTextPdfCodecPngImage_PNG_FILTER_AVERAGE 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecPngImage, PNG_FILTER_AVERAGE, jint)

inline jint ComAowagieTextPdfCodecPngImage_get_PNG_FILTER_PAETH(void);
#define ComAowagieTextPdfCodecPngImage_PNG_FILTER_PAETH 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecPngImage, PNG_FILTER_PAETH, jint)

inline IOSObjectArray *ComAowagieTextPdfCodecPngImage_get_intents(void);
static IOSObjectArray *ComAowagieTextPdfCodecPngImage_intents;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecPngImage, intents, IOSObjectArray *)

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(ComAowagieTextPdfCodecPngImage *self, JavaIoInputStream *is);

__attribute__((unused)) static ComAowagieTextPdfCodecPngImage *new_ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(JavaIoInputStream *is) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfCodecPngImage *create_ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(JavaIoInputStream *is);

__attribute__((unused)) static ComAowagieTextImage *ComAowagieTextPdfCodecPngImage_getImageWithJavaIoInputStream_(JavaIoInputStream *is);

__attribute__((unused)) static jboolean ComAowagieTextPdfCodecPngImage_checkMarkerWithNSString_(ComAowagieTextPdfCodecPngImage *self, NSString *s);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_readPng(ComAowagieTextPdfCodecPngImage *self);

__attribute__((unused)) static ComAowagieTextPdfPdfObject *ComAowagieTextPdfCodecPngImage_getColorspace(ComAowagieTextPdfCodecPngImage *self);

__attribute__((unused)) static ComAowagieTextImage *ComAowagieTextPdfCodecPngImage_getImage(ComAowagieTextPdfCodecPngImage *self);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_decodeIdat(ComAowagieTextPdfCodecPngImage *self);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(ComAowagieTextPdfCodecPngImage *self, jint xOffset, jint yOffset, jint xStep, jint yStep, jint passWidth, jint passHeight);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_processPixelsWithByteArray_withInt_withInt_withInt_withInt_(ComAowagieTextPdfCodecPngImage *self, IOSByteArray *curr, jint xOffset, jint step, jint y, jint width);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(IOSByteArray *image, IOSIntArray *data, jint offset, jint size, jint x, jint y, jint bitDepth, jint bytesPerRow);

__attribute__((unused)) static IOSIntArray *ComAowagieTextPdfCodecPngImage_getPixelWithByteArray_(ComAowagieTextPdfCodecPngImage *self, IOSByteArray *curr);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_decodeSubFilterWithByteArray_withInt_withInt_(IOSByteArray *curr, jint count, jint bpp);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_decodeUpFilterWithByteArray_withByteArray_withInt_(IOSByteArray *curr, IOSByteArray *prev, jint count);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_decodeAverageFilterWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *curr, IOSByteArray *prev, jint count, jint bpp);

__attribute__((unused)) static jint ComAowagieTextPdfCodecPngImage_paethPredictorWithInt_withInt_withInt_(jint a, jint b, jint c);

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_decodePaethFilterWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *curr, IOSByteArray *prev, jint count, jint bpp);

__attribute__((unused)) static jint ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(JavaIoInputStream *is);

__attribute__((unused)) static jint ComAowagieTextPdfCodecPngImage_getWordWithJavaIoInputStream_(JavaIoInputStream *is);

__attribute__((unused)) static NSString *ComAowagieTextPdfCodecPngImage_getStringWithJavaIoInputStream_(JavaIoInputStream *is);

@interface ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream : JavaIoByteArrayOutputStream

- (instancetype)init;

- (IOSByteArray *)getBuf;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream)

__attribute__((unused)) static void ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init(ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *self);

__attribute__((unused)) static ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *new_ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *create_ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/PngImage.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfCodecPngImage)

IOSIntArray *ComAowagieTextPdfCodecPngImage_PNGID;


#line 123
@implementation ComAowagieTextPdfCodecPngImage


#line 201
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)is {
  ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(self, is);
  return self;
}


#line 210
+ (ComAowagieTextImage *)getImageWithJavaNetURL:(JavaNetURL *)url {
  return ComAowagieTextPdfCodecPngImage_getImageWithJavaNetURL_(url);
}


#line 230
+ (ComAowagieTextImage *)getImageWithJavaIoInputStream:(JavaIoInputStream *)is {
  return ComAowagieTextPdfCodecPngImage_getImageWithJavaIoInputStream_(is);
}


#line 242
+ (ComAowagieTextImage *)getImageWithByteArray:(IOSByteArray *)data {
  return ComAowagieTextPdfCodecPngImage_getImageWithByteArray_(data);
}


#line 249
- (jboolean)checkMarkerWithNSString:(NSString *)s {
  return ComAowagieTextPdfCodecPngImage_checkMarkerWithNSString_(self, s);
}


#line 262
- (void)readPng {
  ComAowagieTextPdfCodecPngImage_readPng(self);
}


#line 444
- (ComAowagieTextPdfPdfObject *)getColorspace {
  return ComAowagieTextPdfCodecPngImage_getColorspace(self);
}


#line 520
- (ComAowagieTextImage *)getImage {
  return ComAowagieTextPdfCodecPngImage_getImage(self);
}


#line 625
- (void)decodeIdat {
  ComAowagieTextPdfCodecPngImage_decodeIdat(self);
}


#line 682
- (void)decodePassWithInt:(jint)xOffset
                  withInt:(jint)yOffset
                  withInt:(jint)xStep
                  withInt:(jint)yStep
                  withInt:(jint)passWidth
                  withInt:(jint)passHeight {
  ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, xOffset, yOffset, xStep, yStep, passWidth, passHeight);
}


#line 736
- (void)processPixelsWithByteArray:(IOSByteArray *)curr
                           withInt:(jint)xOffset
                           withInt:(jint)step
                           withInt:(jint)y
                           withInt:(jint)width {
  ComAowagieTextPdfCodecPngImage_processPixelsWithByteArray_withInt_withInt_withInt_withInt_(self, curr, xOffset, step, y, width);
}


#line 836
+ (void)setPixelWithByteArray:(IOSByteArray *)image
                 withIntArray:(IOSIntArray *)data
                      withInt:(jint)offset
                      withInt:(jint)size
                      withInt:(jint)x
                      withInt:(jint)y
                      withInt:(jint)bitDepth
                      withInt:(jint)bytesPerRow {
  ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(image, data, offset, size, x, y, bitDepth, bytesPerRow);
}


#line 856
- (IOSIntArray *)getPixelWithByteArray:(IOSByteArray *)curr {
  return ComAowagieTextPdfCodecPngImage_getPixelWithByteArray_(self, curr);
}


#line 887
+ (void)decodeSubFilterWithByteArray:(IOSByteArray *)curr
                             withInt:(jint)count
                             withInt:(jint)bpp {
  ComAowagieTextPdfCodecPngImage_decodeSubFilterWithByteArray_withInt_withInt_(curr, count, bpp);
}


#line 898
+ (void)decodeUpFilterWithByteArray:(IOSByteArray *)curr
                      withByteArray:(IOSByteArray *)prev
                            withInt:(jint)count {
  ComAowagieTextPdfCodecPngImage_decodeUpFilterWithByteArray_withByteArray_withInt_(curr, prev, count);
}


#line 908
+ (void)decodeAverageFilterWithByteArray:(IOSByteArray *)curr
                           withByteArray:(IOSByteArray *)prev
                                 withInt:(jint)count
                                 withInt:(jint)bpp {
  ComAowagieTextPdfCodecPngImage_decodeAverageFilterWithByteArray_withByteArray_withInt_withInt_(curr, prev, count, bpp);
}


#line 928
+ (jint)paethPredictorWithInt:(jint)a
                      withInt:(jint)b
                      withInt:(jint)c {
  return ComAowagieTextPdfCodecPngImage_paethPredictorWithInt_withInt_withInt_(a, b, c);
}


#line 943
+ (void)decodePaethFilterWithByteArray:(IOSByteArray *)curr
                         withByteArray:(IOSByteArray *)prev
                               withInt:(jint)count
                               withInt:(jint)bpp {
  ComAowagieTextPdfCodecPngImage_decodePaethFilterWithByteArray_withByteArray_withInt_withInt_(curr, prev, count, bpp);
}


#line 979
+ (jint)getIntWithJavaIoInputStream:(JavaIoInputStream *)is {
  return ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(is);
}


#line 991
+ (jint)getWordWithJavaIoInputStream:(JavaIoInputStream *)is {
  return ComAowagieTextPdfCodecPngImage_getWordWithJavaIoInputStream_(is);
}


#line 1003
+ (NSString *)getStringWithJavaIoInputStream:(JavaIoInputStream *)is {
  return ComAowagieTextPdfCodecPngImage_getStringWithJavaIoInputStream_(is);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 2, 3, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0xa, 1, 0, 3, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 4, 3, -1, -1, -1 },
    { NULL, "Z", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfObject;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 11, 12, -1, -1, -1, -1 },
    { NULL, "[I", 0x2, 13, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 18, 19, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 22, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x1a, 23, 0, 3, -1, -1, -1 },
    { NULL, "I", 0x1a, 24, 0, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1a, 25, 0, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(getImageWithJavaNetURL:);
  methods[2].selector = @selector(getImageWithJavaIoInputStream:);
  methods[3].selector = @selector(getImageWithByteArray:);
  methods[4].selector = @selector(checkMarkerWithNSString:);
  methods[5].selector = @selector(readPng);
  methods[6].selector = @selector(getColorspace);
  methods[7].selector = @selector(getImage);
  methods[8].selector = @selector(decodeIdat);
  methods[9].selector = @selector(decodePassWithInt:withInt:withInt:withInt:withInt:withInt:);
  methods[10].selector = @selector(processPixelsWithByteArray:withInt:withInt:withInt:withInt:);
  methods[11].selector = @selector(setPixelWithByteArray:withIntArray:withInt:withInt:withInt:withInt:withInt:withInt:);
  methods[12].selector = @selector(getPixelWithByteArray:);
  methods[13].selector = @selector(decodeSubFilterWithByteArray:withInt:withInt:);
  methods[14].selector = @selector(decodeUpFilterWithByteArray:withByteArray:withInt:);
  methods[15].selector = @selector(decodeAverageFilterWithByteArray:withByteArray:withInt:withInt:);
  methods[16].selector = @selector(paethPredictorWithInt:withInt:withInt:);
  methods[17].selector = @selector(decodePaethFilterWithByteArray:withByteArray:withInt:withInt:);
  methods[18].selector = @selector(getIntWithJavaIoInputStream:);
  methods[19].selector = @selector(getWordWithJavaIoInputStream:);
  methods[20].selector = @selector(getStringWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PNGID", "[I", .constantValue.asLong = 0, 0x19, -1, 26, -1, -1 },
    { "IHDR", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "PLTE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "IDAT", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "IEND", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "tRNS", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "pHYs", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "gAMA", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "cHRM", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "sRGB", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "iCCP", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "TRANSFERSIZE", "I", .constantValue.asInt = ComAowagieTextPdfCodecPngImage_TRANSFERSIZE, 0x1a, -1, -1, -1, -1 },
    { "PNG_FILTER_NONE", "I", .constantValue.asInt = ComAowagieTextPdfCodecPngImage_PNG_FILTER_NONE, 0x1a, -1, -1, -1, -1 },
    { "PNG_FILTER_SUB", "I", .constantValue.asInt = ComAowagieTextPdfCodecPngImage_PNG_FILTER_SUB, 0x1a, -1, -1, -1, -1 },
    { "PNG_FILTER_UP", "I", .constantValue.asInt = ComAowagieTextPdfCodecPngImage_PNG_FILTER_UP, 0x1a, -1, -1, -1, -1 },
    { "PNG_FILTER_AVERAGE", "I", .constantValue.asInt = ComAowagieTextPdfCodecPngImage_PNG_FILTER_AVERAGE, 0x1a, -1, -1, -1, -1 },
    { "PNG_FILTER_PAETH", "I", .constantValue.asInt = ComAowagieTextPdfCodecPngImage_PNG_FILTER_PAETH, 0x1a, -1, -1, -1, -1 },
    { "intents", "[LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "is_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "dataStream_", "LJavaIoDataInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "width_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bitDepth_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "colorType_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "compressionMethod_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "filterMethod_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "interlaceMethod_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "additional_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "image_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "smask_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "trans_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "idat_", "LComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "dpiX_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dpiY_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "XYRatio_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "genBWMask_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "palShades_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "transRedGray_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "transGreen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "transBlue_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "inputBands_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bytesPerPixel_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "colorTable_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "gamma_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hasCHRM_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xW_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "yW_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xR_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "yR_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xG_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "yG_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xB_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "yB_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "intent_", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "icc_profile_", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;", "getImage", "LJavaNetURL;", "LJavaIoIOException;", "[B", "checkMarker", "LNSString;", "decodePass", "IIIIII", "processPixels", "[BIIII", "setPixel", "[B[IIIIIII", "getPixel", "decodeSubFilter", "[BII", "decodeUpFilter", "[B[BI", "decodeAverageFilter", "[B[BII", "paethPredictor", "III", "decodePaethFilter", "getInt", "getWord", "getString", &ComAowagieTextPdfCodecPngImage_PNGID, &ComAowagieTextPdfCodecPngImage_IHDR, &ComAowagieTextPdfCodecPngImage_PLTE, &ComAowagieTextPdfCodecPngImage_IDAT, &ComAowagieTextPdfCodecPngImage_IEND, &ComAowagieTextPdfCodecPngImage_tRNS, &ComAowagieTextPdfCodecPngImage_pHYs, &ComAowagieTextPdfCodecPngImage_gAMA, &ComAowagieTextPdfCodecPngImage_cHRM, &ComAowagieTextPdfCodecPngImage_sRGB, &ComAowagieTextPdfCodecPngImage_iCCP, &ComAowagieTextPdfCodecPngImage_intents, "LComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecPngImage = { "PngImage", "com.aowagie.text.pdf.codec", ptrTable, methods, fields, 7, 0x1, 21, 55, -1, 38, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecPngImage;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfCodecPngImage class]) {
    ComAowagieTextPdfCodecPngImage_PNGID = [IOSIntArray newArrayWithInts:(jint[]){
#line 125
      137, 80, 78, 71, 13, 10, 26, 10 } count:8];
      ComAowagieTextPdfCodecPngImage_intents = [IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(ComAowagieTextPdfPdfName, PERCEPTUAL), JreLoadStatic(ComAowagieTextPdfPdfName, RELATIVECOLORIMETRIC), JreLoadStatic(ComAowagieTextPdfPdfName, SATURATION), JreLoadStatic(ComAowagieTextPdfPdfName, ABSOLUTECOLORIMETRIC) } count:4 type:ComAowagieTextPdfPdfName_class_()];
      J2OBJC_SET_INITIALIZED(ComAowagieTextPdfCodecPngImage)
    }
  }

@end


#line 201
void ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(ComAowagieTextPdfCodecPngImage *self, JavaIoInputStream *is) {
  NSObject_init(self);
  self->additional_ = new_ComAowagieTextPdfPdfDictionary_init();
  self->idat_ = new_ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init();
  self->transRedGray_ =
#line 185
  -1;
  self->transGreen_ = -1;
  self->transBlue_ = -1;
  self->gamma_ =
#line 191
  1.0f;
  self->hasCHRM_ = false;
  
#line 202
  self->is_ = is;
}


#line 201
ComAowagieTextPdfCodecPngImage *new_ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecPngImage, initWithJavaIoInputStream_, is)
}


#line 201
ComAowagieTextPdfCodecPngImage *create_ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(JavaIoInputStream *is) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecPngImage, initWithJavaIoInputStream_, is)
}


#line 210
ComAowagieTextImage *ComAowagieTextPdfCodecPngImage_getImageWithJavaNetURL_(JavaNetURL *url) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 211
  JavaIoInputStream *is = nil;
  @try {
    is = [((JavaNetURL *) nil_chk(url)) openStream];
    ComAowagieTextImage *img = ComAowagieTextPdfCodecPngImage_getImageWithJavaIoInputStream_(is);
    [((ComAowagieTextImage *) nil_chk(img)) setUrlWithJavaNetURL:url];
    return img;
  }
  @finally {
    if (is != nil) {
      [is close];
    }
  }
}


#line 230
ComAowagieTextImage *ComAowagieTextPdfCodecPngImage_getImageWithJavaIoInputStream_(JavaIoInputStream *is) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 231
  ComAowagieTextPdfCodecPngImage *png = new_ComAowagieTextPdfCodecPngImage_initWithJavaIoInputStream_(is);
  return ComAowagieTextPdfCodecPngImage_getImage(png);
}


#line 242
ComAowagieTextImage *ComAowagieTextPdfCodecPngImage_getImageWithByteArray_(IOSByteArray *data) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 243
  JavaIoByteArrayInputStream *is = new_JavaIoByteArrayInputStream_initWithByteArray_(data);
  ComAowagieTextImage *img = ComAowagieTextPdfCodecPngImage_getImageWithJavaIoInputStream_(is);
  [((ComAowagieTextImage *) nil_chk(img)) setOriginalDataWithByteArray:data];
  return img;
}


#line 249
jboolean ComAowagieTextPdfCodecPngImage_checkMarkerWithNSString_(ComAowagieTextPdfCodecPngImage *self, NSString *s) {
  if ([((NSString *) nil_chk(s)) java_length] != 4) {
    return false;
  }
  for (jint k = 0; k < 4; ++k) {
    jchar c = [s charAtWithInt:k];
    if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z')) {
      return false;
    }
  }
  return true;
}

void ComAowagieTextPdfCodecPngImage_readPng(ComAowagieTextPdfCodecPngImage *self) {
  {
    IOSIntArray *a__ = ComAowagieTextPdfCodecPngImage_PNGID;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint element = *b__++;
      
#line 264
      if (element != [((JavaIoInputStream *) nil_chk(self->is_)) read]) {
        @throw new_JavaIoIOException_initWithNSString_(@"File is not a valid PNG.");
      }
    }
  }
  
#line 268
  IOSByteArray *buffer = [IOSByteArray newArrayWithLength:ComAowagieTextPdfCodecPngImage_TRANSFERSIZE];
  while (true) {
    jint len = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_);
    NSString *marker = ComAowagieTextPdfCodecPngImage_getStringWithJavaIoInputStream_(self->is_);
    if (len < 0 || !ComAowagieTextPdfCodecPngImage_checkMarkerWithNSString_(self, marker)) {
      @throw new_JavaIoIOException_initWithNSString_(@"Corrupted PNG file.");
    }
    if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_IDAT)) isEqual:marker]) {
      jint size;
      while (len != 0) {
        size = [((JavaIoInputStream *) nil_chk(self->is_)) readWithByteArray:buffer withInt:0 withInt:JavaLangMath_minWithInt_withInt_(len, ComAowagieTextPdfCodecPngImage_TRANSFERSIZE)];
        if (size < 0) {
          return;
        }
        [((ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *) nil_chk(self->idat_)) writeWithByteArray:buffer withInt:0 withInt:size];
        len -= size;
      }
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_tRNS)) isEqual:marker]) {
      switch (self->colorType_) {
        case 0:
        if (len >= 2) {
          len -= 2;
          jint gray = ComAowagieTextPdfCodecPngImage_getWordWithJavaIoInputStream_(self->is_);
          if (self->bitDepth_ == 16) {
            self->transRedGray_ = gray;
          }
          else {
            
#line 295
            [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->additional_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MASK) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfLiteral_initWithNSString_(JreStrcat("CICIC", '[', gray, ' ', gray, ']'))];
          }
        }
        break;
        case 2:
        if (len >= 6) {
          len -= 6;
          jint red = ComAowagieTextPdfCodecPngImage_getWordWithJavaIoInputStream_(self->is_);
          jint green = ComAowagieTextPdfCodecPngImage_getWordWithJavaIoInputStream_(self->is_);
          jint blue = ComAowagieTextPdfCodecPngImage_getWordWithJavaIoInputStream_(self->is_);
          if (self->bitDepth_ == 16) {
            self->transRedGray_ = red;
            self->transGreen_ = green;
            self->transBlue_ = blue;
          }
          else {
            
#line 310
            [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->additional_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MASK) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfLiteral_initWithNSString_(JreStrcat("CICICICICICIC", '[', red, ' ', red, ' ', green, ' ', green, ' ', blue, ' ', blue, ']'))];
          }
        }
        break;
        case 3:
        if (len > 0) {
          self->trans_ = [IOSByteArray newArrayWithLength:len];
          for (jint k = 0; k < len; ++k) {
            *IOSByteArray_GetRef(nil_chk(self->trans_), k) = (jbyte) [((JavaIoInputStream *) nil_chk(self->is_)) read];
          }
          len = 0;
        }
        break;
      }
      ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->is_, len);
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_IHDR)) isEqual:marker]) {
      self->width_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_);
      self->height_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_);
      
#line 330
      self->bitDepth_ = [((JavaIoInputStream *) nil_chk(self->is_)) read];
      self->colorType_ = [self->is_ read];
      self->compressionMethod_ = [self->is_ read];
      self->filterMethod_ = [self->is_ read];
      self->interlaceMethod_ = [self->is_ read];
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_PLTE)) isEqual:marker]) {
      if (self->colorType_ == 3) {
        ComAowagieTextPdfPdfArray *colorspace = new_ComAowagieTextPdfPdfArray_init();
        [colorspace addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, INDEXED)];
        [colorspace addWithComAowagieTextPdfPdfObject:ComAowagieTextPdfCodecPngImage_getColorspace(self)];
        [colorspace addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(JreIntDiv(len, 3) - 1)];
        ComAowagieTextPdfByteBuffer *colortable = new_ComAowagieTextPdfByteBuffer_init();
        while (len-- > 0) {
          (void) [colortable append_iWithInt:[((JavaIoInputStream *) nil_chk(self->is_)) read]];
        }
        [colorspace addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithByteArray_(self->colorTable_ = [colortable toByteArray])];
        [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->additional_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COLORSPACE) withComAowagieTextPdfPdfObject:colorspace];
      }
      else {
        ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->is_, len);
      }
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_pHYs)) isEqual:marker]) {
      jint dx = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_);
      jint dy = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_);
      jint unit = [((JavaIoInputStream *) nil_chk(self->is_)) read];
      if (unit == 1) {
        self->dpiX_ = JreFpToInt((dx * 0.0254f + 0.5f));
        self->dpiY_ = JreFpToInt((dy * 0.0254f + 0.5f));
      }
      else {
        if (dy != 0) {
          self->XYRatio_ = (jfloat) dx / (jfloat) dy;
        }
      }
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_cHRM)) isEqual:marker]) {
      self->xW_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->yW_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->xR_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->yR_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->xG_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->yG_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->xB_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->yB_ = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_) / 100000.0f;
      self->hasCHRM_ = !(JavaLangMath_absWithFloat_(self->xW_) < 0.0001f || JavaLangMath_absWithFloat_(self->yW_) < 0.0001f || JavaLangMath_absWithFloat_(self->xR_) < 0.0001f || JavaLangMath_absWithFloat_(self->yR_) < 0.0001f || JavaLangMath_absWithFloat_(self->xG_) < 0.0001f || JavaLangMath_absWithFloat_(self->yG_) < 0.0001f || JavaLangMath_absWithFloat_(self->xB_) < 0.0001f || JavaLangMath_absWithFloat_(self->yB_) < 0.0001f);
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_sRGB)) isEqual:marker]) {
      jint ri = [((JavaIoInputStream *) nil_chk(self->is_)) read];
      self->intent_ = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecPngImage_intents), ri);
      self->gamma_ = 2.2f;
      self->xW_ = 0.3127f;
      self->yW_ = 0.329f;
      self->xR_ = 0.64f;
      self->yR_ = 0.33f;
      self->xG_ = 0.3f;
      self->yG_ = 0.6f;
      self->xB_ = 0.15f;
      self->yB_ = 0.06f;
      self->hasCHRM_ = true;
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_gAMA)) isEqual:marker]) {
      jint gm = ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(self->is_);
      if (gm != 0) {
        self->gamma_ = 100000.0f / gm;
        if (!self->hasCHRM_) {
          self->xW_ = 0.3127f;
          self->yW_ = 0.329f;
          self->xR_ = 0.64f;
          self->yR_ = 0.33f;
          self->xG_ = 0.3f;
          self->yG_ = 0.6f;
          self->xB_ = 0.15f;
          self->yB_ = 0.06f;
          self->hasCHRM_ = true;
        }
      }
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_iCCP)) isEqual:marker]) {
      do {
        --len;
      }
      while (
#line 412
      [((JavaIoInputStream *) nil_chk(self->is_)) read] != 0);
      [self->is_ read];
      --len;
      IOSByteArray *icccom = [IOSByteArray newArrayWithLength:len];
      jint p = 0;
      while (len > 0) {
        jint r = [self->is_ readWithByteArray:icccom withInt:p withInt:len];
        if (r < 0) {
          @throw new_JavaIoIOException_initWithNSString_(@"Premature end of file.");
        }
        p += r;
        len -= r;
      }
      IOSByteArray *iccp = ComAowagieTextPdfPdfReader_FlateDecodeWithByteArray_withBoolean_(icccom, true);
      icccom = nil;
      @try {
        self->icc_profile_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(iccp);
      }
      @catch (JavaLangRuntimeException *e) {
        self->icc_profile_ = nil;
      }
    }
    else if ([((NSString *) nil_chk(ComAowagieTextPdfCodecPngImage_IEND)) isEqual:marker]) {
      break;
    }
    else {
      ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->is_, len);
    }
    ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(self->is_, 4);
  }
}


#line 444
ComAowagieTextPdfPdfObject *ComAowagieTextPdfCodecPngImage_getColorspace(ComAowagieTextPdfCodecPngImage *self) {
  if (self->icc_profile_ != nil) {
    if ((self->colorType_ & 2) == 0) {
      return JreLoadStatic(ComAowagieTextPdfPdfName, DEVICEGRAY);
    }
    else {
      
#line 449
      return JreLoadStatic(ComAowagieTextPdfPdfName, DEVICERGB);
    }
  }
  if (self->gamma_ == 1.0f && !self->hasCHRM_) {
    if ((self->colorType_ & 2) == 0) {
      return JreLoadStatic(ComAowagieTextPdfPdfName, DEVICEGRAY);
    }
    else {
      
#line 456
      return JreLoadStatic(ComAowagieTextPdfPdfName, DEVICERGB);
    }
  }
  else {
    ComAowagieTextPdfPdfArray *array = new_ComAowagieTextPdfPdfArray_init();
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
    if ((self->colorType_ & 2) == 0) {
      if (self->gamma_ == 1.0f) {
        return JreLoadStatic(ComAowagieTextPdfPdfName, DEVICEGRAY);
      }
      [array addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, CALGRAY)];
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, GAMMA) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(self->gamma_)];
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, WHITEPOINT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfLiteral_initWithNSString_(@"[1 1 1]")];
      [array addWithComAowagieTextPdfPdfObject:dic];
    }
    else {
      ComAowagieTextPdfPdfObject *wp = new_ComAowagieTextPdfPdfLiteral_initWithNSString_(@"[1 1 1]");
      [array addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, CALRGB)];
      if (self->gamma_ != 1.0f) {
        ComAowagieTextPdfPdfArray *gm = new_ComAowagieTextPdfPdfArray_init();
        ComAowagieTextPdfPdfNumber *n = new_ComAowagieTextPdfPdfNumber_initWithFloat_(self->gamma_);
        [gm addWithComAowagieTextPdfPdfObject:n];
        [gm addWithComAowagieTextPdfPdfObject:n];
        [gm addWithComAowagieTextPdfPdfObject:n];
        [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, GAMMA) withComAowagieTextPdfPdfObject:gm];
      }
      if (self->hasCHRM_) {
        jfloat z = self->yW_ * ((self->xG_ - self->xB_) * self->yR_ - (self->xR_ - self->xB_) * self->yG_ + (self->xR_ - self->xG_) * self->yB_);
        jfloat YA = self->yR_ * ((self->xG_ - self->xB_) * self->yW_ - (self->xW_ - self->xB_) * self->yG_ + (self->xW_ - self->xG_) * self->yB_) / z;
        jfloat XA = YA * self->xR_ / self->yR_;
        jfloat ZA = YA * ((1 - self->xR_) / self->yR_ - 1);
        jfloat YB = -self->yG_ * ((self->xR_ - self->xB_) * self->yW_ - (self->xW_ - self->xB_) * self->yR_ + (self->xW_ - self->xR_) * self->yB_) / z;
        jfloat XB = YB * self->xG_ / self->yG_;
        jfloat ZB = YB * ((1 - self->xG_) / self->yG_ - 1);
        jfloat YC = self->yB_ * ((self->xR_ - self->xG_) * self->yW_ - (self->xW_ - self->xG_) * self->yW_ + (self->xW_ - self->xR_) * self->yG_) / z;
        jfloat XC = YC * self->xB_ / self->yB_;
        jfloat ZC = YC * ((1 - self->xB_) / self->yB_ - 1);
        jfloat XW = XA + XB + XC;
        jfloat YW = 1;
        jfloat ZW = ZA + ZB + ZC;
        ComAowagieTextPdfPdfArray *wpa = new_ComAowagieTextPdfPdfArray_init();
        [wpa addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(XW)];
        [wpa addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(YW)];
        [wpa addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(ZW)];
        wp = wpa;
        ComAowagieTextPdfPdfArray *matrix = new_ComAowagieTextPdfPdfArray_init();
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(XA)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(YA)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(ZA)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(XB)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(YB)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(ZB)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(XC)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(YC)];
        [matrix addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithFloat_(ZC)];
        [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MATRIX) withComAowagieTextPdfPdfObject:matrix];
      }
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, WHITEPOINT) withComAowagieTextPdfPdfObject:wp];
      [array addWithComAowagieTextPdfPdfObject:dic];
    }
    return array;
  }
}


#line 520
ComAowagieTextImage *ComAowagieTextPdfCodecPngImage_getImage(ComAowagieTextPdfCodecPngImage *self) {
  ComAowagieTextPdfCodecPngImage_readPng(self);
  @try {
    jint pal0 = 0;
    jint palIdx = 0;
    self->palShades_ = false;
    if (self->trans_ != nil) {
      for (jint k = 0; k < self->trans_->size_; ++k) {
        jint n = IOSByteArray_Get(self->trans_, k) & (jint) 0xff;
        if (n == 0) {
          ++pal0;
          palIdx = k;
        }
        if (n != 0 && n != 255) {
          self->palShades_ = true;
          break;
        }
      }
    }
    if ((self->colorType_ & 4) != 0) {
      self->palShades_ = true;
    }
    self->genBWMask_ = (!self->palShades_ && (pal0 > 1 || self->transRedGray_ >= 0));
    if (!self->palShades_ && !self->genBWMask_ && pal0 == 1) {
      [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->additional_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MASK) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfLiteral_initWithNSString_(JreStrcat("CICIC", '[', palIdx, ' ', palIdx, ']'))];
    }
    jboolean needDecode = self->interlaceMethod_ == 1 || self->bitDepth_ == 16 || (self->colorType_ & 4) != 0 || self->palShades_ || self->genBWMask_;
    switch (self->colorType_) {
      case 0:
      self->inputBands_ = 1;
      break;
      case 2:
      self->inputBands_ = 3;
      break;
      case 3:
      self->inputBands_ = 1;
      break;
      case 4:
      self->inputBands_ = 2;
      break;
      case 6:
      self->inputBands_ = 4;
      break;
    }
    if (needDecode) {
      ComAowagieTextPdfCodecPngImage_decodeIdat(self);
    }
    jint components = self->inputBands_;
    if ((self->colorType_ & 4) != 0) {
      --components;
    }
    jint bpc = self->bitDepth_;
    if (bpc == 16) {
      bpc = 8;
    }
    ComAowagieTextImage *img;
    if (self->image_ != nil) {
      if (self->colorType_ == 3) {
        img = new_ComAowagieTextImgRaw_initWithInt_withInt_withInt_withInt_withByteArray_(self->width_, self->height_, components, bpc, self->image_);
      }
      else {
        
#line 580
        img = ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_(self->width_, self->height_, components, bpc, self->image_);
      }
    }
    else {
      img = new_ComAowagieTextImgRaw_initWithInt_withInt_withInt_withInt_withByteArray_(self->width_, self->height_, components, bpc, [((ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *) nil_chk(self->idat_)) toByteArray]);
      [img setDeflatedWithBoolean:true];
      ComAowagieTextPdfPdfDictionary *decodeparms = new_ComAowagieTextPdfPdfDictionary_init();
      [decodeparms putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, BITSPERCOMPONENT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(self->bitDepth_)];
      [decodeparms putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PREDICTOR) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(15)];
      [decodeparms putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COLUMNS) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(self->width_)];
      [decodeparms putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COLORS) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(self->colorType_ == 3 || (self->colorType_ & 2) == 0 ? 1 : 3)];
      [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->additional_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DECODEPARMS) withComAowagieTextPdfPdfObject:decodeparms];
    }
    if ([((ComAowagieTextPdfPdfDictionary *) nil_chk(self->additional_)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COLORSPACE)] == nil) {
      [self->additional_ putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COLORSPACE) withComAowagieTextPdfPdfObject:ComAowagieTextPdfCodecPngImage_getColorspace(self)];
    }
    if (self->intent_ != nil) {
      [self->additional_ putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, INTENT) withComAowagieTextPdfPdfObject:self->intent_];
    }
    if ([self->additional_ size] > 0) {
      [((ComAowagieTextImage *) nil_chk(img)) setAdditionalWithComAowagieTextPdfPdfDictionary:self->additional_];
    }
    if (self->icc_profile_ != nil) {
      [((ComAowagieTextImage *) nil_chk(img)) tagICCWithHarmonyJavaAwtColorICC_Profile:self->icc_profile_];
    }
    if (self->palShades_) {
      ComAowagieTextImage *im2 = ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_(self->width_, self->height_, 1, 8, self->smask_);
      [((ComAowagieTextImage *) nil_chk(im2)) makeMask];
      [((ComAowagieTextImage *) nil_chk(img)) setImageMaskWithComAowagieTextImage:im2];
    }
    if (self->genBWMask_) {
      ComAowagieTextImage *im2 = ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_(self->width_, self->height_, 1, 1, self->smask_);
      [((ComAowagieTextImage *) nil_chk(im2)) makeMask];
      [((ComAowagieTextImage *) nil_chk(img)) setImageMaskWithComAowagieTextImage:im2];
    }
    [((ComAowagieTextImage *) nil_chk(img)) setDpiWithInt:self->dpiX_ withInt:self->dpiY_];
    [img setXYRatioWithFloat:self->XYRatio_];
    [img setOriginalTypeWithInt:ComAowagieTextImage_ORIGINAL_PNG];
    return img;
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 625
void ComAowagieTextPdfCodecPngImage_decodeIdat(ComAowagieTextPdfCodecPngImage *self) {
  jint nbitDepth = self->bitDepth_;
  if (nbitDepth == 16) {
    nbitDepth = 8;
  }
  jint size = -1;
  self->bytesPerPixel_ = self->bitDepth_ == 16 ? 2 : 1;
  switch (self->colorType_) {
    case 0:
    size = JreIntDiv((nbitDepth * self->width_ + 7), 8) * self->height_;
    break;
    case 2:
    size = self->width_ * 3 * self->height_;
    self->bytesPerPixel_ *= 3;
    break;
    case 3:
    if (self->interlaceMethod_ == 1) {
      size = JreIntDiv((nbitDepth * self->width_ + 7), 8) * self->height_;
    }
    self->bytesPerPixel_ = 1;
    break;
    case 4:
    size = self->width_ * self->height_;
    self->bytesPerPixel_ *= 2;
    break;
    case 6:
    size = self->width_ * 3 * self->height_;
    self->bytesPerPixel_ *= 4;
    break;
  }
  if (size >= 0) {
    self->image_ = [IOSByteArray newArrayWithLength:size];
  }
  if (self->palShades_) {
    self->smask_ = [IOSByteArray newArrayWithLength:self->width_ * self->height_];
  }
  else
#line 660
  if (self->genBWMask_) {
    self->smask_ = [IOSByteArray newArrayWithLength:JreIntDiv((self->width_ + 7), 8) * self->height_];
  }
  JavaIoByteArrayInputStream *bai = new_JavaIoByteArrayInputStream_initWithByteArray_withInt_withInt_([((ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *) nil_chk(self->idat_)) getBuf], 0, [self->idat_ size]);
  JavaIoInputStream *infStream = new_JavaUtilZipInflaterInputStream_initWithJavaIoInputStream_withJavaUtilZipInflater_(bai, new_JavaUtilZipInflater_init());
  self->dataStream_ = new_JavaIoDataInputStream_initWithJavaIoInputStream_(infStream);
  
#line 667
  if (self->interlaceMethod_ != 1) {
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 0, 0, 1, 1, self->width_, self->height_);
  }
  else {
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 0, 0, 8, 8, JreIntDiv((self->width_ + 7), 8), JreIntDiv((self->height_ + 7), 8));
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 4, 0, 8, 8, JreIntDiv((self->width_ + 3), 8), JreIntDiv((self->height_ + 7), 8));
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 0, 4, 4, 8, JreIntDiv((self->width_ + 3), 4), JreIntDiv((self->height_ + 3), 8));
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 2, 0, 4, 4, JreIntDiv((self->width_ + 1), 4), JreIntDiv((self->height_ + 3), 4));
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 0, 2, 2, 4, JreIntDiv((self->width_ + 1), 2), JreIntDiv((self->height_ + 1), 4));
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 1, 0, 2, 2, JreIntDiv(self->width_, 2), JreIntDiv((self->height_ + 1), 2));
    ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(self, 0, 1, 1, 2, self->width_, JreIntDiv(self->height_, 2));
  }
}


#line 682
void ComAowagieTextPdfCodecPngImage_decodePassWithInt_withInt_withInt_withInt_withInt_withInt_(ComAowagieTextPdfCodecPngImage *self, jint xOffset, jint yOffset, jint xStep, jint yStep, jint passWidth, jint passHeight) {
  
#line 685
  if (passWidth == 0 || passHeight == 0) {
    return;
  }
  
#line 689
  jint bytesPerRow = JreIntDiv((self->inputBands_ * passWidth * self->bitDepth_ + 7), 8);
  IOSByteArray *curr = [IOSByteArray newArrayWithLength:bytesPerRow];
  IOSByteArray *prior = [IOSByteArray newArrayWithLength:bytesPerRow];
  
#line 694
  jint srcY;
  
#line 694
  jint dstY;
  for (srcY = 0, dstY = yOffset;
#line 696
  srcY < passHeight;
#line 697
  srcY++, dstY += yStep) {
    
#line 699
    jint filter = 0;
    @try {
      filter = [((JavaIoDataInputStream *) nil_chk(self->dataStream_)) read];
      [((JavaIoDataInputStream *) nil_chk(self->dataStream_)) readFullyWithByteArray:curr withInt:0 withInt:bytesPerRow];
    }
    @catch (
#line 703
    JavaLangException *e) {
    }
    
#line 707
    switch (filter) {
      case ComAowagieTextPdfCodecPngImage_PNG_FILTER_NONE:
      break;
      case ComAowagieTextPdfCodecPngImage_PNG_FILTER_SUB:
      ComAowagieTextPdfCodecPngImage_decodeSubFilterWithByteArray_withInt_withInt_(curr, bytesPerRow, self->bytesPerPixel_);
      break;
      case ComAowagieTextPdfCodecPngImage_PNG_FILTER_UP:
      ComAowagieTextPdfCodecPngImage_decodeUpFilterWithByteArray_withByteArray_withInt_(curr, prior, bytesPerRow);
      break;
      case ComAowagieTextPdfCodecPngImage_PNG_FILTER_AVERAGE:
      ComAowagieTextPdfCodecPngImage_decodeAverageFilterWithByteArray_withByteArray_withInt_withInt_(curr, prior, bytesPerRow, self->bytesPerPixel_);
      break;
      case ComAowagieTextPdfCodecPngImage_PNG_FILTER_PAETH:
      ComAowagieTextPdfCodecPngImage_decodePaethFilterWithByteArray_withByteArray_withInt_withInt_(curr, prior, bytesPerRow, self->bytesPerPixel_);
      break;
      default:
      
#line 724
      @throw new_JavaLangRuntimeException_initWithNSString_(@"PNG filter unknown.");
    }
    
#line 727
    ComAowagieTextPdfCodecPngImage_processPixelsWithByteArray_withInt_withInt_withInt_withInt_(self, curr, xOffset, xStep, dstY, passWidth);
    
#line 730
    IOSByteArray *tmp = prior;
    prior = curr;
    curr = tmp;
  }
}


#line 736
void ComAowagieTextPdfCodecPngImage_processPixelsWithByteArray_withInt_withInt_withInt_withInt_(ComAowagieTextPdfCodecPngImage *self, IOSByteArray *curr, jint xOffset, jint step, jint y, jint width) {
  jint srcX;
  
#line 737
  jint dstX;
  
#line 739
  IOSIntArray *out = ComAowagieTextPdfCodecPngImage_getPixelWithByteArray_(self, curr);
  jint sizes = 0;
  switch (self->colorType_) {
    case 0:
    case 3:
    case 4:
    sizes = 1;
    break;
    case 2:
    case 6:
    sizes = 3;
    break;
  }
  if (self->image_ != nil) {
    dstX = xOffset;
    jint yStride = JreIntDiv((sizes * self->width_ * (self->bitDepth_ == 16 ? 8 : self->bitDepth_) + 7), 8);
    for (srcX = 0; srcX < width; srcX++) {
      ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(self->image_, out, self->inputBands_ * srcX, sizes, dstX, y, self->bitDepth_, yStride);
      dstX += step;
    }
  }
  if (self->palShades_) {
    if ((self->colorType_ & 4) != 0) {
      if (self->bitDepth_ == 16) {
        for (jint k = 0; k < width; ++k) {
          JreURShiftAssignInt(IOSIntArray_GetRef(nil_chk(out), k * self->inputBands_ + sizes), 8);
        }
      }
      jint yStride = self->width_;
      dstX = xOffset;
      for (srcX = 0; srcX < width; srcX++) {
        ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(self->smask_, out, self->inputBands_ * srcX + sizes, 1, dstX, y, 8, yStride);
        dstX += step;
      }
    }
    else {
      jint yStride = self->width_;
      IOSIntArray *v = [IOSIntArray newArrayWithLength:1];
      dstX = xOffset;
      for (srcX = 0; srcX < width; srcX++) {
        jint idx = IOSIntArray_Get(nil_chk(out), srcX);
        if (idx < ((IOSByteArray *) nil_chk(self->trans_))->size_) {
          *IOSIntArray_GetRef(v, 0) = IOSByteArray_Get(self->trans_, idx);
        }
        else {
          *IOSIntArray_GetRef(v, 0) = 255;
        }
        ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(self->smask_, v, 0, 1, dstX, y, 8, yStride);
        dstX += step;
      }
    }
  }
  else if (self->genBWMask_) {
    switch (self->colorType_) {
      case 3:
      {
        
#line 794
        jint yStride = JreIntDiv((self->width_ + 7), 8);
        IOSIntArray *v = [IOSIntArray newArrayWithLength:1];
        dstX = xOffset;
        for (srcX = 0; srcX < width; srcX++) {
          jint idx = IOSIntArray_Get(nil_chk(out), srcX);
          *IOSIntArray_GetRef(v, 0) = idx < ((IOSByteArray *) nil_chk(self->trans_))->size_ && IOSByteArray_Get(self->trans_, idx) == 0 ? 1 : 0;
          ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(self->smask_, v, 0, 1, dstX, y, 1, yStride);
          dstX += step;
        }
        break;
      }
      case 0:
      {
        
#line 806
        jint yStride = JreIntDiv((self->width_ + 7), 8);
        IOSIntArray *v = [IOSIntArray newArrayWithLength:1];
        dstX = xOffset;
        for (srcX = 0; srcX < width; srcX++) {
          jint g = IOSIntArray_Get(nil_chk(out), srcX);
          *IOSIntArray_GetRef(v, 0) = g == self->transRedGray_ ? 1 : 0;
          ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(self->smask_, v, 0, 1, dstX, y, 1, yStride);
          dstX += step;
        }
        break;
      }
      case 2:
      {
        
#line 818
        jint yStride = JreIntDiv((self->width_ + 7), 8);
        IOSIntArray *v = [IOSIntArray newArrayWithLength:1];
        dstX = xOffset;
        for (srcX = 0; srcX < width; srcX++) {
          jint markRed = self->inputBands_ * srcX;
          *IOSIntArray_GetRef(v, 0) = IOSIntArray_Get(nil_chk(out), markRed) == self->transRedGray_ && IOSIntArray_Get(out, markRed + 1) == self->transGreen_ &&
#line 824
          IOSIntArray_Get(out, markRed + 2) == self->transBlue_ ? 1 : 0;
          ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(self->smask_, v, 0, 1, dstX, y, 1, yStride);
          dstX += step;
        }
        break;
      }
    }
  }
}


#line 836
void ComAowagieTextPdfCodecPngImage_setPixelWithByteArray_withIntArray_withInt_withInt_withInt_withInt_withInt_withInt_(IOSByteArray *image, IOSIntArray *data, jint offset, jint size, jint x, jint y, jint bitDepth, jint bytesPerRow) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 837
  if (bitDepth == 8) {
    jint pos = bytesPerRow * y + size * x;
    for (jint k = 0; k < size; ++k) {
      *IOSByteArray_GetRef(nil_chk(image), pos + k) = (jbyte) IOSIntArray_Get(nil_chk(data), k + offset);
    }
  }
  else if (bitDepth == 16) {
    jint pos = bytesPerRow * y + size * x;
    for (jint k = 0; k < size; ++k) {
      *IOSByteArray_GetRef(nil_chk(image), pos + k) = (jbyte) (JreURShift32(IOSIntArray_Get(nil_chk(data), k + offset), 8));
    }
  }
  else {
    jint pos = bytesPerRow * y + JreIntDiv(x, (JreIntDiv(8, bitDepth)));
    jint v = JreLShift32(IOSIntArray_Get(nil_chk(data), offset), 8 - bitDepth * (JreIntMod(x, (JreIntDiv(8, bitDepth)))) - bitDepth);
    *IOSByteArray_GetRef(nil_chk(image), pos) |= v;
  }
}


#line 856
IOSIntArray *ComAowagieTextPdfCodecPngImage_getPixelWithByteArray_(ComAowagieTextPdfCodecPngImage *self, IOSByteArray *curr) {
  switch (self->bitDepth_) {
    case 8:
    {
      
#line 859
      IOSIntArray *out = [IOSIntArray newArrayWithLength:((IOSByteArray *) nil_chk(curr))->size_];
      for (jint k = 0; k < out->size_; ++k) {
        *IOSIntArray_GetRef(out, k) = IOSByteArray_Get(curr, k) & (jint) 0xff;
      }
      return out;
    }
    case 16:
    {
      
#line 866
      IOSIntArray *out = [IOSIntArray newArrayWithLength:JreIntDiv(((IOSByteArray *) nil_chk(curr))->size_, 2)];
      for (jint k = 0; k < out->size_; ++k) {
        *IOSIntArray_GetRef(out, k) = (JreLShift32((IOSByteArray_Get(curr, k * 2) & (jint) 0xff), 8)) + (IOSByteArray_Get(curr, k * 2 + 1) & (jint) 0xff);
      }
      return out;
    }
    default:
    {
      
#line 873
      IOSIntArray *out = [IOSIntArray newArrayWithLength:JreIntDiv(((IOSByteArray *) nil_chk(curr))->size_ * 8, self->bitDepth_)];
      jint idx = 0;
      jint passes = JreIntDiv(8, self->bitDepth_);
      jint mask = (JreLShift32(1, self->bitDepth_)) - 1;
      {
        IOSByteArray *a__ =
#line 877
        curr;
        jbyte const *b__ = a__->buffer_;
        jbyte const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          jbyte element = *b__++;
          
#line 878
          for (jint j = passes - 1; j >= 0; --j) {
            *IOSIntArray_GetRef(out, idx++) = (JreURShift32(element, self->bitDepth_ * j)) & mask;
          }
        }
      }
      
#line 882
      return out;
    }
  }
}


#line 887
void ComAowagieTextPdfCodecPngImage_decodeSubFilterWithByteArray_withInt_withInt_(IOSByteArray *curr, jint count, jint bpp) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 888
  for (jint i = bpp; i < count; i++) {
    jint val;
    
#line 891
    val = IOSByteArray_Get(nil_chk(curr), i) & (jint) 0xff;
    val += IOSByteArray_Get(curr, i - bpp) & (jint) 0xff;
    
#line 894
    *IOSByteArray_GetRef(curr, i) = (jbyte) val;
  }
}


#line 898
void ComAowagieTextPdfCodecPngImage_decodeUpFilterWithByteArray_withByteArray_withInt_(IOSByteArray *curr, IOSByteArray *prev, jint count) {
  ComAowagieTextPdfCodecPngImage_initialize();
  for (jint i = 0; i < count; i++) {
    jint raw = IOSByteArray_Get(nil_chk(curr), i) & (jint) 0xff;
    jint prior = IOSByteArray_Get(nil_chk(prev), i) & (jint) 0xff;
    
#line 904
    *IOSByteArray_GetRef(curr, i) = (jbyte) (raw + prior);
  }
}


#line 908
void ComAowagieTextPdfCodecPngImage_decodeAverageFilterWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *curr, IOSByteArray *prev, jint count, jint bpp) {
  ComAowagieTextPdfCodecPngImage_initialize();
  jint raw;
  
#line 910
  jint priorPixel;
  
#line 910
  jint priorRow;
  
#line 912
  for (jint i = 0; i < bpp; i++) {
    raw = IOSByteArray_Get(nil_chk(curr), i) & (jint) 0xff;
    priorRow = IOSByteArray_Get(nil_chk(prev), i) & (jint) 0xff;
    
#line 916
    *IOSByteArray_GetRef(curr, i) = (jbyte) (raw + JreIntDiv(priorRow, 2));
  }
  
#line 919
  for (jint i = bpp; i < count; i++) {
    raw = IOSByteArray_Get(nil_chk(curr), i) & (jint) 0xff;
    priorPixel = IOSByteArray_Get(curr, i - bpp) & (jint) 0xff;
    priorRow = IOSByteArray_Get(nil_chk(prev), i) & (jint) 0xff;
    
#line 924
    *IOSByteArray_GetRef(curr, i) = (jbyte) (raw + JreIntDiv((priorPixel + priorRow), 2));
  }
}


#line 928
jint ComAowagieTextPdfCodecPngImage_paethPredictorWithInt_withInt_withInt_(jint a, jint b, jint c) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 929
  jint p = a + b - c;
  jint pa = JavaLangMath_absWithInt_(p - a);
  jint pb = JavaLangMath_absWithInt_(p - b);
  jint pc = JavaLangMath_absWithInt_(p - c);
  
#line 934
  if (pa <= pb && pa <= pc) {
    return a;
  }
  else
#line 936
  if (pb <= pc) {
    return b;
  }
  else {
    
#line 939
    return c;
  }
}


#line 943
void ComAowagieTextPdfCodecPngImage_decodePaethFilterWithByteArray_withByteArray_withInt_withInt_(IOSByteArray *curr, IOSByteArray *prev, jint count, jint bpp) {
  ComAowagieTextPdfCodecPngImage_initialize();
  jint raw;
  
#line 945
  jint priorPixel;
  
#line 945
  jint priorRow;
  
#line 945
  jint priorRowPixel;
  
#line 947
  for (jint i = 0; i < bpp; i++) {
    raw = IOSByteArray_Get(nil_chk(curr), i) & (jint) 0xff;
    priorRow = IOSByteArray_Get(nil_chk(prev), i) & (jint) 0xff;
    
#line 951
    *IOSByteArray_GetRef(curr, i) = (jbyte) (raw + priorRow);
  }
  
#line 954
  for (jint i = bpp; i < count; i++) {
    raw = IOSByteArray_Get(nil_chk(curr), i) & (jint) 0xff;
    priorPixel = IOSByteArray_Get(curr, i - bpp) & (jint) 0xff;
    priorRow = IOSByteArray_Get(nil_chk(prev), i) & (jint) 0xff;
    priorRowPixel = IOSByteArray_Get(prev, i - bpp) & (jint) 0xff;
    
#line 960
    *IOSByteArray_GetRef(curr, i) = (jbyte) (raw + ComAowagieTextPdfCodecPngImage_paethPredictorWithInt_withInt_withInt_(priorPixel,
#line 961
    priorRow,
#line 962
    priorRowPixel));
  }
}


#line 979
jint ComAowagieTextPdfCodecPngImage_getIntWithJavaIoInputStream_(JavaIoInputStream *is) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 980
  return (JreLShift32([((JavaIoInputStream *) nil_chk(is)) read], 24)) + (JreLShift32([is read], 16)) + (JreLShift32([is read], 8)) + [is read];
}


#line 991
jint ComAowagieTextPdfCodecPngImage_getWordWithJavaIoInputStream_(JavaIoInputStream *is) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 992
  return (JreLShift32([((JavaIoInputStream *) nil_chk(is)) read], 8)) + [is read];
}


#line 1003
NSString *ComAowagieTextPdfCodecPngImage_getStringWithJavaIoInputStream_(JavaIoInputStream *is) {
  ComAowagieTextPdfCodecPngImage_initialize();
  
#line 1004
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  for (jint i = 0; i < 4; i++) {
    (void) [buf appendWithChar:(jchar) [((JavaIoInputStream *) nil_chk(is)) read]];
  }
  return [buf description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecPngImage)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/PngImage.java"


#line 966
@implementation ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 966
- (instancetype)init {
  ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 967
- (IOSByteArray *)getBuf {
  return self->buf_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getBuf);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComAowagieTextPdfCodecPngImage;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream = { "NewByteArrayOutputStream", "com.aowagie.text.pdf.codec", ptrTable, methods, NULL, 7, 0xa, 2, 0, 0, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream;
}

@end


#line 966
void ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init(ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *self) {
  JavaIoByteArrayOutputStream_init(self);
}


#line 966
ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *new_ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream, init)
}


#line 966
ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream *create_ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecPngImage_NewByteArrayOutputStream)

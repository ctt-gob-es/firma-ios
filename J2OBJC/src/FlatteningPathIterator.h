//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/FlatteningPathIterator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_FlatteningPathIterator")
#ifdef RESTRICT_FlatteningPathIterator
#define INCLUDE_ALL_FlatteningPathIterator 0
#else
#define INCLUDE_ALL_FlatteningPathIterator 1
#endif
#undef RESTRICT_FlatteningPathIterator

#if !defined (HarmonyJavaAwtGeomFlatteningPathIterator_) && (INCLUDE_ALL_FlatteningPathIterator || defined(INCLUDE_HarmonyJavaAwtGeomFlatteningPathIterator))
#define HarmonyJavaAwtGeomFlatteningPathIterator_

#define RESTRICT_PathIterator 1
#define INCLUDE_HarmonyJavaAwtGeomPathIterator 1
#include "PathIterator.h"

@class IOSDoubleArray;
@class IOSFloatArray;

@interface HarmonyJavaAwtGeomFlatteningPathIterator : NSObject < HarmonyJavaAwtGeomPathIterator > {
 @public
  /*!
   @brief The type of current segment to be flat
   */
  jint bufType_;
  /*!
   @brief The curve subdivision limit
   */
  jint bufLimit_;
  /*!
   @brief The current points buffer size
   */
  jint bufSize_;
  /*!
   @brief The inner cursor position in points buffer
   */
  jint bufIndex_;
  /*!
   @brief The current subdivision count
   */
  jint bufSubdiv_;
  /*!
   @brief The points buffer
   */
  IOSDoubleArray *buf_;
  /*!
   @brief The indicator of empty points buffer
   */
  jboolean bufEmpty_;
  /*!
   @brief The source PathIterator
   */
  id<HarmonyJavaAwtGeomPathIterator> p_;
  /*!
   @brief The flatness of new path
   */
  jdouble flatness_;
  /*!
   @brief The square of flatness
   */
  jdouble flatness2_;
  /*!
   @brief The x coordinate of previous path segment
   */
  jdouble px_;
  /*!
   @brief The y coordinate of previous path segment
   */
  jdouble py_;
  /*!
   @brief The tamporary buffer for getting points from PathIterator
   */
  IOSDoubleArray *coords_;
}

#pragma mark Public

- (instancetype)initWithHarmonyJavaAwtGeomPathIterator:(id<HarmonyJavaAwtGeomPathIterator>)path
                                            withDouble:(jdouble)flatness;

- (instancetype)initWithHarmonyJavaAwtGeomPathIterator:(id<HarmonyJavaAwtGeomPathIterator>)path
                                            withDouble:(jdouble)flatness
                                               withInt:(jint)limit;

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jdouble)getFlatness;

- (jint)getRecursionLimit;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

#pragma mark Package-Private

/*!
 @brief Calculates flat path points for current segment of the source shape.
 Line segment is flat by itself. Flatness of quad and cubic curves
  evaluated by getFlatnessSq() method. Curves subdivided until current
  flatness is bigger than user defined and subdivision limit isn't
  exhausted. Single source segment translated to series of buffer points.
  The less flatness the bigger serries. Every currentSegment() call extract
  one point from the buffer. When series completed evaluate() takes next
  source shape segment.
 */
- (void)evaluate;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomFlatteningPathIterator)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomFlatteningPathIterator, buf_, IOSDoubleArray *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomFlatteningPathIterator, p_, id<HarmonyJavaAwtGeomPathIterator>)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomFlatteningPathIterator, coords_, IOSDoubleArray *)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomFlatteningPathIterator_initWithHarmonyJavaAwtGeomPathIterator_withDouble_(HarmonyJavaAwtGeomFlatteningPathIterator *self, id<HarmonyJavaAwtGeomPathIterator> path, jdouble flatness);

FOUNDATION_EXPORT HarmonyJavaAwtGeomFlatteningPathIterator *new_HarmonyJavaAwtGeomFlatteningPathIterator_initWithHarmonyJavaAwtGeomPathIterator_withDouble_(id<HarmonyJavaAwtGeomPathIterator> path, jdouble flatness) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomFlatteningPathIterator *create_HarmonyJavaAwtGeomFlatteningPathIterator_initWithHarmonyJavaAwtGeomPathIterator_withDouble_(id<HarmonyJavaAwtGeomPathIterator> path, jdouble flatness);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomFlatteningPathIterator_initWithHarmonyJavaAwtGeomPathIterator_withDouble_withInt_(HarmonyJavaAwtGeomFlatteningPathIterator *self, id<HarmonyJavaAwtGeomPathIterator> path, jdouble flatness, jint limit);

FOUNDATION_EXPORT HarmonyJavaAwtGeomFlatteningPathIterator *new_HarmonyJavaAwtGeomFlatteningPathIterator_initWithHarmonyJavaAwtGeomPathIterator_withDouble_withInt_(id<HarmonyJavaAwtGeomPathIterator> path, jdouble flatness, jint limit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomFlatteningPathIterator *create_HarmonyJavaAwtGeomFlatteningPathIterator_initWithHarmonyJavaAwtGeomPathIterator_withDouble_withInt_(id<HarmonyJavaAwtGeomPathIterator> path, jdouble flatness, jint limit);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomFlatteningPathIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_FlatteningPathIterator")

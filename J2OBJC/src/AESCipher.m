//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/crypto/AESCipher.java
//

#include "AESCipher.h"
#include "AESFastEngine.h"
#include "BlockCipher.h"
#include "CBCBlockCipher.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "KeyParameter.h"
#include "PaddedBufferedBlockCipher.h"
#include "ParametersWithIV.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"

#if !__has_feature(objc_arc)
#error "AESCipher must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCryptoAESCipher () {
 @public
  OrgSpongycastleCryptoPaddingsPaddedBufferedBlockCipher *bp_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCryptoAESCipher, bp_, OrgSpongycastleCryptoPaddingsPaddedBufferedBlockCipher *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/crypto/AESCipher.java"


#line 62
@implementation ComAowagieTextPdfCryptoAESCipher


#line 70
- (instancetype)initWithBoolean:(jboolean)forEncryption
                  withByteArray:(IOSByteArray *)key
                  withByteArray:(IOSByteArray *)iv {
  ComAowagieTextPdfCryptoAESCipher_initWithBoolean_withByteArray_withByteArray_(self, forEncryption, key, iv);
  return self;
}


#line 79
- (IOSByteArray *)updateWithByteArray:(IOSByteArray *)inp
                              withInt:(jint)inpOff
                              withInt:(jint)inpLen {
  
#line 80
  jint neededLen = [((OrgSpongycastleCryptoPaddingsPaddedBufferedBlockCipher *) nil_chk(self->bp_)) getUpdateOutputSizeWithInt:inpLen];
  IOSByteArray *outp = nil;
  if (neededLen > 0) {
    outp = [IOSByteArray newArrayWithLength:neededLen];
  }
  else {
    
#line 85
    neededLen = 0;
  }
  [self->bp_ processBytesWithByteArray:inp withInt:inpOff withInt:inpLen withByteArray:outp withInt:0];
  return outp;
}


#line 91
- (IOSByteArray *)doFinal {
  jint neededLen = [((OrgSpongycastleCryptoPaddingsPaddedBufferedBlockCipher *) nil_chk(self->bp_)) getOutputSizeWithInt:0];
  IOSByteArray *outp = [IOSByteArray newArrayWithLength:neededLen];
  jint n = 0;
  @try {
    n = [self->bp_ doFinalWithByteArray:outp withInt:0];
  }
  @catch (
#line 97
  JavaLangException *ex) {
    return outp;
  }
  if (n != outp->size_) {
    IOSByteArray *outp2 = [IOSByteArray newArrayWithLength:n];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(outp, 0, outp2, 0, n);
    return outp2;
  }
  else {
    
#line 105
    return outp;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withByteArray:withByteArray:);
  methods[1].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(doFinal);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bp_", "LOrgSpongycastleCryptoPaddingsPaddedBufferedBlockCipher;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z[B[B", "update", "[BII" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCryptoAESCipher = { "AESCipher", "com.aowagie.text.pdf.crypto", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCryptoAESCipher;
}

@end


#line 70
void ComAowagieTextPdfCryptoAESCipher_initWithBoolean_withByteArray_withByteArray_(ComAowagieTextPdfCryptoAESCipher *self, jboolean forEncryption, IOSByteArray *key, IOSByteArray *iv) {
  NSObject_init(self);
  
#line 71
  id<OrgSpongycastleCryptoBlockCipher> aes = new_OrgSpongycastleCryptoEnginesAESFastEngine_init();
  id<OrgSpongycastleCryptoBlockCipher> cbc = new_OrgSpongycastleCryptoModesCBCBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(aes);
  self->bp_ = new_OrgSpongycastleCryptoPaddingsPaddedBufferedBlockCipher_initWithOrgSpongycastleCryptoBlockCipher_(cbc);
  OrgSpongycastleCryptoParamsKeyParameter *kp = new_OrgSpongycastleCryptoParamsKeyParameter_initWithByteArray_(key);
  OrgSpongycastleCryptoParamsParametersWithIV *piv = new_OrgSpongycastleCryptoParamsParametersWithIV_initWithOrgSpongycastleCryptoCipherParameters_withByteArray_(kp, iv);
  [self->bp_ init__WithBoolean:forEncryption withOrgSpongycastleCryptoCipherParameters:piv];
}


#line 70
ComAowagieTextPdfCryptoAESCipher *new_ComAowagieTextPdfCryptoAESCipher_initWithBoolean_withByteArray_withByteArray_(jboolean forEncryption, IOSByteArray *key, IOSByteArray *iv) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCryptoAESCipher, initWithBoolean_withByteArray_withByteArray_, forEncryption, key, iv)
}


#line 70
ComAowagieTextPdfCryptoAESCipher *create_ComAowagieTextPdfCryptoAESCipher_initWithBoolean_withByteArray_withByteArray_(jboolean forEncryption, IOSByteArray *key, IOSByteArray *iv) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCryptoAESCipher, initWithBoolean_withByteArray_withByteArray_, forEncryption, key, iv)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCryptoAESCipher)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/jcajce/ProviderJcaJceExtHelper.java
//

#include "AlgorithmIdentifier.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "JceAsymmetricKeyUnwrapper.h"
#include "JceKTSKeyUnwrapper.h"
#include "JceSymmetricKeyUnwrapper.h"
#include "ProviderJcaJceExtHelper.h"
#include "ProviderJcaJceHelper.h"
#include "SymmetricKeyUnwrapper.h"
#include "java/security/PrivateKey.h"
#include "java/security/Provider.h"
#include "javax/crypto/SecretKey.h"

#if !__has_feature(objc_arc)
#error "ProviderJcaJceExtHelper must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cms/jcajce/ProviderJcaJceExtHelper.java"


#line 15
@implementation OrgSpongycastleCmsJcajceProviderJcaJceExtHelper


#line 19
- (instancetype)initPackagePrivateWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  OrgSpongycastleCmsJcajceProviderJcaJceExtHelper_initPackagePrivateWithJavaSecurityProvider_(self, provider);
  return self;
}

- (OrgSpongycastleOperatorJcajceJceAsymmetricKeyUnwrapper *)createAsymmetricUnwrapperWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                                                                                                         withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)keyEncryptionKey {
  return [new_OrgSpongycastleOperatorJcajceJceAsymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_(keyEncryptionAlgorithm, keyEncryptionKey) setProviderWithJavaSecurityProvider:provider_];
}

- (OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper *)createAsymmetricUnwrapperWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                                                                                                  withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)keyEncryptionKey
                                                                                                               withByteArray:(IOSByteArray *)partyUInfo
                                                                                                               withByteArray:(IOSByteArray *)partyVInfo {
  
#line 31
  return [new_OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_withByteArray_withByteArray_(keyEncryptionAlgorithm, keyEncryptionKey, partyUInfo, partyVInfo) setProviderWithJavaSecurityProvider:provider_];
}


#line 34
- (OrgSpongycastleOperatorSymmetricKeyUnwrapper *)createSymmetricUnwrapperWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                                                                                                withJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)keyEncryptionKey {
  return [new_OrgSpongycastleOperatorJcajceJceSymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaxCryptoSecretKey_(keyEncryptionAlgorithm, keyEncryptionKey) setProviderWithJavaSecurityProvider:provider_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorJcajceJceAsymmetricKeyUnwrapper;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorSymmetricKeyUnwrapper;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithJavaSecurityProvider:);
  methods[1].selector = @selector(createAsymmetricUnwrapperWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withJavaSecurityPrivateKey:);
  methods[2].selector = @selector(createAsymmetricUnwrapperWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withJavaSecurityPrivateKey:withByteArray:withByteArray:);
  methods[3].selector = @selector(createSymmetricUnwrapperWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withJavaxCryptoSecretKey:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaSecurityProvider;", "createAsymmetricUnwrapper", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LJavaSecurityPrivateKey;", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LJavaSecurityPrivateKey;[B[B", "createSymmetricUnwrapper", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LJavaxCryptoSecretKey;" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsJcajceProviderJcaJceExtHelper = { "ProviderJcaJceExtHelper", "org.spongycastle.cms.jcajce", ptrTable, methods, NULL, 7, 0x0, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCmsJcajceProviderJcaJceExtHelper;
}

@end


#line 19
void OrgSpongycastleCmsJcajceProviderJcaJceExtHelper_initPackagePrivateWithJavaSecurityProvider_(OrgSpongycastleCmsJcajceProviderJcaJceExtHelper *self, JavaSecurityProvider *provider) {
  OrgSpongycastleJcajceUtilProviderJcaJceHelper_initWithJavaSecurityProvider_(self,
#line 21
  provider);
}


#line 19
OrgSpongycastleCmsJcajceProviderJcaJceExtHelper *new_OrgSpongycastleCmsJcajceProviderJcaJceExtHelper_initPackagePrivateWithJavaSecurityProvider_(JavaSecurityProvider *provider) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsJcajceProviderJcaJceExtHelper, initPackagePrivateWithJavaSecurityProvider_, provider)
}


#line 19
OrgSpongycastleCmsJcajceProviderJcaJceExtHelper *create_OrgSpongycastleCmsJcajceProviderJcaJceExtHelper_initPackagePrivateWithJavaSecurityProvider_(JavaSecurityProvider *provider) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsJcajceProviderJcaJceExtHelper, initPackagePrivateWithJavaSecurityProvider_, provider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsJcajceProviderJcaJceExtHelper)

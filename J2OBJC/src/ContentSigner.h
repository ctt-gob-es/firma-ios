//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/operator/ContentSigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ContentSigner")
#ifdef RESTRICT_ContentSigner
#define INCLUDE_ALL_ContentSigner 0
#else
#define INCLUDE_ALL_ContentSigner 1
#endif
#undef RESTRICT_ContentSigner

#if !defined (OrgSpongycastleOperatorContentSigner_) && (INCLUDE_ALL_ContentSigner || defined(INCLUDE_OrgSpongycastleOperatorContentSigner))
#define OrgSpongycastleOperatorContentSigner_

@class IOSByteArray;
@class JavaIoOutputStream;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

@protocol OrgSpongycastleOperatorContentSigner < JavaObject >

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getAlgorithmIdentifier;

/*!
 @brief Returns a stream that will accept data for the purpose of calculating
  a signature.Use org.spongycastle.util.io.TeeOutputStream if you want to accumulate
  the data on the fly as well.
 @return an OutputStream
 */
- (JavaIoOutputStream *)getOutputStream;

/*!
 @brief Returns a signature based on the current data written to the stream, since the
  start or the last call to getSignature().
 @return bytes representing the signature.
 */
- (IOSByteArray *)getSignature;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleOperatorContentSigner)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleOperatorContentSigner)

#endif

#pragma pop_macro("INCLUDE_ALL_ContentSigner")

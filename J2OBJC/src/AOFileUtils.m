//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/AOFileUtils.java
//

#include "AOFileUtils.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "LoggerUtil.h"
#include "SecureXmlBuilder.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/File.h"
#include "java/io/FileOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/nio/file/FileSystem.h"
#include "java/nio/file/FileSystems.h"
#include "java/nio/file/Files.h"
#include "java/nio/file/LinkOption.h"
#include "java/nio/file/Path.h"
#include "java/nio/file/attribute/AclEntry.h"
#include "java/nio/file/attribute/AclEntryFlag.h"
#include "java/nio/file/attribute/AclEntryPermission.h"
#include "java/nio/file/attribute/AclEntryType.h"
#include "java/nio/file/attribute/AclFileAttributeView.h"
#include "java/nio/file/attribute/FileAttributeView.h"
#include "java/nio/file/attribute/PosixFilePermission.h"
#include "java/nio/file/attribute/UserPrincipal.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "javax/xml/parsers/SAXParser.h"
#include "org/xml/sax/ErrorHandler.h"
#include "org/xml/sax/InputSource.h"
#include "org/xml/sax/SAXParseException.h"
#include "org/xml/sax/XMLReader.h"

#if !__has_feature(objc_arc)
#error "AOFileUtils must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreMiscAOFileUtils ()

- (instancetype)init;

/*!
 @brief Indica si el sistema de ficheros admite el uso de atributos POSIX.
 @return <code>true</code> si admite atributos POSIX, <code>false</code> en caso contrario.
 */
+ (jboolean)isPosixSupported;

/*!
 @brief Obtiene la ACL con los permisos del fichero indicado.
 @param file Fichero del que obtener los permisos.
 @return ACL asociada al fichero.
 */
+ (id<JavaNioFileAttributeAclFileAttributeView>)getAclAttributesWithJavaIoFile:(JavaIoFile *)file;

@end

inline NSString *EsGobAfirmaCoreMiscAOFileUtils_get_SHORTENER_ELLIPSE(void);
static NSString *EsGobAfirmaCoreMiscAOFileUtils_SHORTENER_ELLIPSE = @"...";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscAOFileUtils, SHORTENER_ELLIPSE, NSString *)

/*!
 @brief Indica si el sistema admite atributos POSIX.
 */
inline jboolean EsGobAfirmaCoreMiscAOFileUtils_get_posixSupported(void);
inline jboolean EsGobAfirmaCoreMiscAOFileUtils_set_posixSupported(jboolean value);
inline jboolean *EsGobAfirmaCoreMiscAOFileUtils_getRef_posixSupported(void);
static jboolean EsGobAfirmaCoreMiscAOFileUtils_posixSupported = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(EsGobAfirmaCoreMiscAOFileUtils, posixSupported, jboolean)

/*!
 @brief Valor bandera para indicar si la variable posixSupported se ha inicializado.
 */
inline jboolean EsGobAfirmaCoreMiscAOFileUtils_get_posixSupportDefined(void);
inline jboolean EsGobAfirmaCoreMiscAOFileUtils_set_posixSupportDefined(jboolean value);
inline jboolean *EsGobAfirmaCoreMiscAOFileUtils_getRef_posixSupportDefined(void);
static jboolean EsGobAfirmaCoreMiscAOFileUtils_posixSupportDefined = false;
J2OBJC_STATIC_FIELD_PRIMITIVE(EsGobAfirmaCoreMiscAOFileUtils, posixSupportDefined, jboolean)

__attribute__((unused)) static void EsGobAfirmaCoreMiscAOFileUtils_init(EsGobAfirmaCoreMiscAOFileUtils *self);

__attribute__((unused)) static EsGobAfirmaCoreMiscAOFileUtils *new_EsGobAfirmaCoreMiscAOFileUtils_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreMiscAOFileUtils *create_EsGobAfirmaCoreMiscAOFileUtils_init(void);

__attribute__((unused)) static jboolean EsGobAfirmaCoreMiscAOFileUtils_isPosixSupported(void);

__attribute__((unused)) static id<JavaNioFileAttributeAclFileAttributeView> EsGobAfirmaCoreMiscAOFileUtils_getAclAttributesWithJavaIoFile_(JavaIoFile *file);

@interface EsGobAfirmaCoreMiscAOFileUtils_1 : NSObject < OrgXmlSaxErrorHandler >

- (instancetype)init;

- (void)warningWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

- (void)fatalErrorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

- (void)errorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

- (void)logWithJavaLangException:(JavaLangException *)e;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreMiscAOFileUtils_1)

__attribute__((unused)) static void EsGobAfirmaCoreMiscAOFileUtils_1_init(EsGobAfirmaCoreMiscAOFileUtils_1 *self);

__attribute__((unused)) static EsGobAfirmaCoreMiscAOFileUtils_1 *new_EsGobAfirmaCoreMiscAOFileUtils_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreMiscAOFileUtils_1 *create_EsGobAfirmaCoreMiscAOFileUtils_1_init(void);

__attribute__((unused)) static void EsGobAfirmaCoreMiscAOFileUtils_1_logWithJavaLangException_(EsGobAfirmaCoreMiscAOFileUtils_1 *self, JavaLangException *e);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/AOFileUtils.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreMiscAOFileUtils)

JavaUtilLoggingLogger *EsGobAfirmaCoreMiscAOFileUtils_LOGGER;


#line 41
@implementation EsGobAfirmaCoreMiscAOFileUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 53
- (instancetype)init {
  EsGobAfirmaCoreMiscAOFileUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 61
+ (JavaIoFile *)createTempFileWithByteArray:(IOSByteArray *)data {
  return EsGobAfirmaCoreMiscAOFileUtils_createTempFileWithByteArray_(data);
}


#line 81
+ (NSString *)pathLengthShortenerWithNSString:(NSString *)path
                                      withInt:(jint)limit {
  return EsGobAfirmaCoreMiscAOFileUtils_pathLengthShortenerWithNSString_withInt_(path, limit);
}


#line 132
+ (jboolean)isXMLWithByteArray:(IOSByteArray *)data {
  return EsGobAfirmaCoreMiscAOFileUtils_isXMLWithByteArray_(data);
}


#line 170
+ (void)setAllPermissionsWithJavaIoFile:(JavaIoFile *)file {
  EsGobAfirmaCoreMiscAOFileUtils_setAllPermissionsWithJavaIoFile_(file);
}


#line 254
+ (jboolean)isPosixSupported {
  return EsGobAfirmaCoreMiscAOFileUtils_isPosixSupported();
}


#line 268
+ (id<JavaNioFileAttributeAclFileAttributeView>)getAclAttributesWithJavaIoFile:(JavaIoFile *)file {
  return EsGobAfirmaCoreMiscAOFileUtils_getAclAttributesWithJavaIoFile_(file);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoFile;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNioFileAttributeAclFileAttributeView;", 0xa, 8, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createTempFileWithByteArray:);
  methods[2].selector = @selector(pathLengthShortenerWithNSString:withInt:);
  methods[3].selector = @selector(isXMLWithByteArray:);
  methods[4].selector = @selector(setAllPermissionsWithJavaIoFile:);
  methods[5].selector = @selector(isPosixSupported);
  methods[6].selector = @selector(getAclAttributesWithJavaIoFile:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHORTENER_ELLIPSE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x18, -1, 10, -1, -1 },
    { "posixSupported", "Z", .constantValue.asLong = 0, 0xa, -1, 11, -1, -1 },
    { "posixSupportDefined", "Z", .constantValue.asLong = 0, 0xa, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "createTempFile", "[B", "LJavaIoIOException;", "pathLengthShortener", "LNSString;I", "isXML", "setAllPermissions", "LJavaIoFile;", "getAclAttributes", &EsGobAfirmaCoreMiscAOFileUtils_SHORTENER_ELLIPSE, &EsGobAfirmaCoreMiscAOFileUtils_LOGGER, &EsGobAfirmaCoreMiscAOFileUtils_posixSupported, &EsGobAfirmaCoreMiscAOFileUtils_posixSupportDefined };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscAOFileUtils = { "AOFileUtils", "es.gob.afirma.core.misc", ptrTable, methods, fields, 7, 0x11, 7, 4, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreMiscAOFileUtils;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreMiscAOFileUtils class]) {
    EsGobAfirmaCoreMiscAOFileUtils_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 45
    @"es.gob.afirma");
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreMiscAOFileUtils)
  }
}

@end


#line 53
void EsGobAfirmaCoreMiscAOFileUtils_init(EsGobAfirmaCoreMiscAOFileUtils *self) {
  NSObject_init(self);
}


#line 53
EsGobAfirmaCoreMiscAOFileUtils *new_EsGobAfirmaCoreMiscAOFileUtils_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscAOFileUtils, init)
}


#line 53
EsGobAfirmaCoreMiscAOFileUtils *create_EsGobAfirmaCoreMiscAOFileUtils_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscAOFileUtils, init)
}


#line 61
JavaIoFile *EsGobAfirmaCoreMiscAOFileUtils_createTempFileWithByteArray_(IOSByteArray *data) {
  EsGobAfirmaCoreMiscAOFileUtils_initialize();
  
#line 64
  JavaIoFile *tempFile = JavaIoFile_createTempFileWithNSString_withNSString_(@"afirma", nil);
  {
    JavaIoOutputStream *fos = new_JavaIoFileOutputStream_initWithJavaIoFile_(tempFile);
    JavaLangThrowable *__primaryException1 = nil;
    
#line 65
    @try {
      
#line 68
      [fos writeWithByteArray:data];
      [fos flush];
      [fos close];
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (fos != nil) {
        if (__primaryException1 != nil) {
          @try {
            [fos close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [fos close];
        }
      }
    }
  }
  
#line 72
  return tempFile;
}


#line 81
NSString *EsGobAfirmaCoreMiscAOFileUtils_pathLengthShortenerWithNSString_withInt_(NSString *path, jint limit) {
  EsGobAfirmaCoreMiscAOFileUtils_initialize();
  if (path == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"El numbre de la ruta no puede ser nulo");
  }
  
#line 88
  if ([path java_length] <= limit) {
    return path;
  }
  
#line 92
  IOSCharArray *shortPathArray = [IOSCharArray newArrayWithLength:limit];
  IOSCharArray *pathArray = [path java_toCharArray];
  IOSCharArray *ellipseArray = [((NSString *) nil_chk(EsGobAfirmaCoreMiscAOFileUtils_SHORTENER_ELLIPSE)) java_toCharArray];
  
#line 96
  jint pathindex = ((IOSCharArray *) nil_chk(pathArray))->size_ - 1;
  jint shortpathindex = limit - 1;
  
#line 99
  jint i = 0;
  for (; i < limit; i++) {
    if (IOSCharArray_Get(pathArray, pathindex - i) != '/' && IOSCharArray_Get(pathArray, pathindex - i) != '\\') {
      *IOSCharArray_GetRef(shortPathArray, shortpathindex - i) = IOSCharArray_Get(pathArray, pathindex - i);
    }
    else {
      break;
    }
  }
  
#line 109
  jint free = limit - i;
  
#line 111
  if (free < [EsGobAfirmaCoreMiscAOFileUtils_SHORTENER_ELLIPSE java_length]) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(ellipseArray, 0, shortPathArray, 0, ((IOSCharArray *) nil_chk(ellipseArray))->size_);
  }
  else {
    jint j = 0;
    for (; j + ((IOSCharArray *) nil_chk(ellipseArray))->size_ < free; j++) {
      *IOSCharArray_GetRef(shortPathArray, j) = IOSCharArray_Get(pathArray, j);
    }
    for (jint k = 0; j + k < free; k++) {
      *IOSCharArray_GetRef(shortPathArray, j + k) = IOSCharArray_Get(ellipseArray, k);
    }
  }
  return [NSString java_stringWithCharacters:shortPathArray];
}


#line 132
jboolean EsGobAfirmaCoreMiscAOFileUtils_isXMLWithByteArray_(IOSByteArray *data) {
  EsGobAfirmaCoreMiscAOFileUtils_initialize();
  @try {
    JavaxXmlParsersSAXParser *parser = EsGobAfirmaCoreMiscSecureXmlBuilder_getSecureSAXParser();
    id<OrgXmlSaxXMLReader> reader = [((JavaxXmlParsersSAXParser *) nil_chk(parser)) getXMLReader];
    [((id<OrgXmlSaxXMLReader>) nil_chk(reader)) setErrorHandlerWithOrgXmlSaxErrorHandler:new_EsGobAfirmaCoreMiscAOFileUtils_1_init()];
    
#line 156
    [reader parseWithOrgXmlSaxInputSource:new_OrgXmlSaxInputSource_initWithJavaIoInputStream_(new_JavaIoByteArrayInputStream_initWithByteArray_(data))];
  }
  @catch (JavaLangException *e) {
    return false;
  }
  return true;
}


#line 170
void EsGobAfirmaCoreMiscAOFileUtils_setAllPermissionsWithJavaIoFile_(JavaIoFile *file) {
  EsGobAfirmaCoreMiscAOFileUtils_initialize();
  
#line 173
  @try {
    [((JavaIoFile *) nil_chk(file)) setReadableWithBoolean:true withBoolean:false];
    [file setWritableWithBoolean:true withBoolean:false];
    [file setExecutableWithBoolean:true withBoolean:false];
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscAOFileUtils_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$", @"No se han podido establecer los permisos del archivo ", EsGobAfirmaCoreMiscLoggerUtil_getCleanUserHomePathWithNSString_(
#line 181
    [file getAbsolutePath])) withJavaLangThrowable:e];
  }
  
#line 186
  id<JavaNioFileAttributeAclFileAttributeView> acl = EsGobAfirmaCoreMiscAOFileUtils_getAclAttributesWithJavaIoFile_(file);
  if (acl != nil) {
    
#line 189
    @try {
      id<JavaUtilList> aclList = [acl getAcl];
      id<JavaUtilList> newAclList = new_JavaUtilArrayList_init();
      
#line 193
      for (JavaNioFileAttributeAclEntry * __strong entry_ in nil_chk(aclList)) {
        id<JavaNioFileAttributeUserPrincipal> principal = [((JavaNioFileAttributeAclEntry *) nil_chk(entry_)) principal];
        JavaNioFileAttributeAclEntry *newEntry = [((JavaNioFileAttributeAclEntry_Builder *) nil_chk(([((JavaNioFileAttributeAclEntry_Builder *) nil_chk(([((JavaNioFileAttributeAclEntry_Builder *) nil_chk([((JavaNioFileAttributeAclEntry_Builder *) nil_chk([((JavaNioFileAttributeAclEntry_Builder *) nil_chk(JavaNioFileAttributeAclEntry_newBuilder())) setTypeWithJavaNioFileAttributeAclEntryType:JreLoadEnum(JavaNioFileAttributeAclEntryType, ALLOW)])) setPrincipalWithJavaNioFileAttributeUserPrincipal:
#line 197
        principal])) setFlagsWithJavaNioFileAttributeAclEntryFlagArray:[IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(JavaNioFileAttributeAclEntryFlag, DIRECTORY_INHERIT), JreLoadEnum(JavaNioFileAttributeAclEntryFlag, FILE_INHERIT) } count:2 type:JavaNioFileAttributeAclEntryFlag_class_()]]))) setPermissionsWithJavaNioFileAttributeAclEntryPermissionArray:[IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(JavaNioFileAttributeAclEntryPermission, WRITE_NAMED_ATTRS), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, WRITE_ATTRIBUTES), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, DELETE), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, WRITE_DATA), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, READ_ACL), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, APPEND_DATA), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, READ_ATTRIBUTES), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, READ_DATA), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, EXECUTE), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, SYNCHRONIZE), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, READ_NAMED_ATTRS), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, DELETE), JreLoadEnum(JavaNioFileAttributeAclEntryPermission, DELETE_CHILD) } count:13 type:JavaNioFileAttributeAclEntryPermission_class_()]]))) build];
        
#line 216
        [newAclList addWithId:newEntry];
      }
      [acl setAclWithJavaUtilList:newAclList];
    }
    @catch (JavaLangException *e) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscAOFileUtils_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$", @"No se ha podido establecer la ACL del archivo ", EsGobAfirmaCoreMiscLoggerUtil_getCleanUserHomePathWithNSString_(
#line 223
      [file getAbsolutePath])) withJavaLangThrowable:e];
    }
  }
  
#line 228
  if (EsGobAfirmaCoreMiscAOFileUtils_isPosixSupported()) {
    id<JavaUtilSet> perms = new_JavaUtilHashSet_init();
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, OWNER_READ)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, GROUP_READ)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, OTHERS_READ)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, OWNER_WRITE)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, GROUP_WRITE)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, OTHERS_WRITE)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, OWNER_EXECUTE)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, GROUP_EXECUTE)];
    [perms addWithId:JreLoadEnum(JavaNioFileAttributePosixFilePermission, OTHERS_EXECUTE)];
    @try {
      (void) JavaNioFileFiles_setPosixFilePermissionsWithJavaNioFilePath_withJavaUtilSet_([file toPath], perms);
    }
    @catch (JavaLangException *e) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscAOFileUtils_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$$", @"No se han podido dar permisos posix sobre el archivo ", EsGobAfirmaCoreMiscLoggerUtil_getCleanUserHomePathWithNSString_(
#line 245
      [file getAbsolutePath])) withJavaLangThrowable:e];
    }
  }
}


#line 254
jboolean EsGobAfirmaCoreMiscAOFileUtils_isPosixSupported() {
  EsGobAfirmaCoreMiscAOFileUtils_initialize();
  
#line 255
  if (!EsGobAfirmaCoreMiscAOFileUtils_posixSupportDefined) {
    EsGobAfirmaCoreMiscAOFileUtils_posixSupported = [((id<JavaUtilSet>) nil_chk([((JavaNioFileFileSystem *) nil_chk(JavaNioFileFileSystems_getDefault())) supportedFileAttributeViews])) containsWithId:@"posix"];
    EsGobAfirmaCoreMiscAOFileUtils_posixSupportDefined = true;
  }
  return EsGobAfirmaCoreMiscAOFileUtils_posixSupported;
}


#line 268
id<JavaNioFileAttributeAclFileAttributeView> EsGobAfirmaCoreMiscAOFileUtils_getAclAttributesWithJavaIoFile_(JavaIoFile *file) {
  EsGobAfirmaCoreMiscAOFileUtils_initialize();
  
#line 269
  return ((id<JavaNioFileAttributeAclFileAttributeView>) JavaNioFileFiles_getFileAttributeViewWithJavaNioFilePath_withIOSClass_withJavaNioFileLinkOptionArray_([((JavaIoFile *) nil_chk(file)) toPath], JavaNioFileAttributeAclFileAttributeView_class_(), [IOSObjectArray newArrayWithLength:0 type:JavaNioFileLinkOption_class_()]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscAOFileUtils)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/AOFileUtils.java"


#line 140
@implementation EsGobAfirmaCoreMiscAOFileUtils_1

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 138
- (instancetype)init {
  EsGobAfirmaCoreMiscAOFileUtils_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 139
- (void)warningWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e {
  
#line 141
  EsGobAfirmaCoreMiscAOFileUtils_1_logWithJavaLangException_(self, e);
}


#line 143
- (void)fatalErrorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e {
  
#line 145
  EsGobAfirmaCoreMiscAOFileUtils_1_logWithJavaLangException_(self, e);
}


#line 147
- (void)errorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e {
  
#line 149
  EsGobAfirmaCoreMiscAOFileUtils_1_logWithJavaLangException_(self, e);
}


#line 151
- (void)logWithJavaLangException:(JavaLangException *)e {
  EsGobAfirmaCoreMiscAOFileUtils_1_logWithJavaLangException_(self, e);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(warningWithOrgXmlSaxSAXParseException:);
  methods[2].selector = @selector(fatalErrorWithOrgXmlSaxSAXParseException:);
  methods[3].selector = @selector(errorWithOrgXmlSaxSAXParseException:);
  methods[4].selector = @selector(logWithJavaLangException:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "warning", "LOrgXmlSaxSAXParseException;", "fatalError", "error", "log", "LJavaLangException;", "LEsGobAfirmaCoreMiscAOFileUtils;", "isXMLWithByteArray:" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscAOFileUtils_1 = { "", "es.gob.afirma.core.misc", ptrTable, methods, NULL, 7, 0x8000, 5, 0, 6, -1, 7, -1, -1 };
  return &_EsGobAfirmaCoreMiscAOFileUtils_1;
}

@end


#line 138
void EsGobAfirmaCoreMiscAOFileUtils_1_init(EsGobAfirmaCoreMiscAOFileUtils_1 *self) {
  NSObject_init(self);
}


#line 138
EsGobAfirmaCoreMiscAOFileUtils_1 *new_EsGobAfirmaCoreMiscAOFileUtils_1_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscAOFileUtils_1, init)
}


#line 138
EsGobAfirmaCoreMiscAOFileUtils_1 *create_EsGobAfirmaCoreMiscAOFileUtils_1_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscAOFileUtils_1, init)
}


#line 151
void EsGobAfirmaCoreMiscAOFileUtils_1_logWithJavaLangException_(EsGobAfirmaCoreMiscAOFileUtils_1 *self, JavaLangException *e) {
  [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(EsGobAfirmaCoreMiscAOFileUtils, LOGGER))) fineWithNSString:JreStrcat("$@", @"El documento no es un XML: ", e)];
}

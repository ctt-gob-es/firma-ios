//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/GeometryUtil.java
//

#include "Crossing.h"
#include "GeometryUtil.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"

#if !__has_feature(objc_arc)
#error "GeometryUtil must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComGeometryUtil ()

+ (void)cubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                   withDoubleArray:(IOSDoubleArray *)yCoefs1
                   withDoubleArray:(IOSDoubleArray *)xCoefs2
                   withDoubleArray:(IOSDoubleArray *)yCoefs2
                   withDoubleArray:(IOSDoubleArray *)params;

+ (void)quadAndCubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                          withDoubleArray:(IOSDoubleArray *)yCoefs1
                          withDoubleArray:(IOSDoubleArray *)xCoefs2
                          withDoubleArray:(IOSDoubleArray *)yCoefs2
                          withDoubleArray:(IOSDoubleArray *)params;

+ (void)quadNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                  withDoubleArray:(IOSDoubleArray *)yCoefs1
                  withDoubleArray:(IOSDoubleArray *)xCoefs2
                  withDoubleArray:(IOSDoubleArray *)yCoefs2
                  withDoubleArray:(IOSDoubleArray *)params;

@end

__attribute__((unused)) static void ComGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params);

__attribute__((unused)) static void ComGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params);

__attribute__((unused)) static void ComGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/GeometryUtil.java"

J2OBJC_INITIALIZED_DEFN(ComGeometryUtil)

jdouble ComGeometryUtil_EPSILON;


#line 19
@implementation ComGeometryUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 19
- (instancetype)init {
  ComGeometryUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 22
+ (jint)intersectLinesWithParamsWithDouble:(jdouble)x1
                                withDouble:(jdouble)y1
                                withDouble:(jdouble)x2
                                withDouble:(jdouble)y2
                                withDouble:(jdouble)x3
                                withDouble:(jdouble)y3
                                withDouble:(jdouble)x4
                                withDouble:(jdouble)y4
                           withDoubleArray:(IOSDoubleArray *)params {
  return ComGeometryUtil_intersectLinesWithParamsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, x4, y4, params);
}


#line 65
+ (jint)intersectLinesWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2
                      withDouble:(jdouble)x3
                      withDouble:(jdouble)y3
                      withDouble:(jdouble)x4
                      withDouble:(jdouble)y4
                 withDoubleArray:(IOSDoubleArray *)point {
  return ComGeometryUtil_intersectLinesWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, x4, y4, point);
}


#line 111
+ (jint)intersectLineAndQuadWithDouble:(jdouble)x1
                            withDouble:(jdouble)y1
                            withDouble:(jdouble)x2
                            withDouble:(jdouble)y2
                            withDouble:(jdouble)qx1
                            withDouble:(jdouble)qy1
                            withDouble:(jdouble)qx2
                            withDouble:(jdouble)qy2
                            withDouble:(jdouble)qx3
                            withDouble:(jdouble)qy3
                       withDoubleArray:(IOSDoubleArray *)params {
  return ComGeometryUtil_intersectLineAndQuadWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, qx1, qy1, qx2, qy2, qx3, qy3, params);
}


#line 168
+ (jint)intersectLineAndCubicWithDouble:(jdouble)x1
                             withDouble:(jdouble)y1
                             withDouble:(jdouble)x2
                             withDouble:(jdouble)y2
                             withDouble:(jdouble)cx1
                             withDouble:(jdouble)cy1
                             withDouble:(jdouble)cx2
                             withDouble:(jdouble)cy2
                             withDouble:(jdouble)cx3
                             withDouble:(jdouble)cy3
                             withDouble:(jdouble)cx4
                             withDouble:(jdouble)cy4
                        withDoubleArray:(IOSDoubleArray *)params {
  return ComGeometryUtil_intersectLineAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, cx1, cy1, cx2, cy2, cx3, cy3, cx4, cy4, params);
}


#line 224
+ (jint)intersectQuadsWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2
                      withDouble:(jdouble)x3
                      withDouble:(jdouble)y3
                      withDouble:(jdouble)qx1
                      withDouble:(jdouble)qy1
                      withDouble:(jdouble)qx2
                      withDouble:(jdouble)qy2
                      withDouble:(jdouble)qx3
                      withDouble:(jdouble)qy3
                 withDoubleArray:(IOSDoubleArray *)params {
  return ComGeometryUtil_intersectQuadsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, qx1, qy1, qx2, qy2, qx3, qy3, params);
}


#line 293
+ (jint)intersectQuadAndCubicWithDouble:(jdouble)qx1
                             withDouble:(jdouble)qy1
                             withDouble:(jdouble)qx2
                             withDouble:(jdouble)qy2
                             withDouble:(jdouble)qx3
                             withDouble:(jdouble)qy3
                             withDouble:(jdouble)cx1
                             withDouble:(jdouble)cy1
                             withDouble:(jdouble)cx2
                             withDouble:(jdouble)cy2
                             withDouble:(jdouble)cx3
                             withDouble:(jdouble)cy3
                             withDouble:(jdouble)cx4
                             withDouble:(jdouble)cy4
                        withDoubleArray:(IOSDoubleArray *)params {
  return ComGeometryUtil_intersectQuadAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(qx1, qy1, qx2, qy2, qx3, qy3, cx1, cy1, cx2, cy2, cx3, cy3, cx4, cy4, params);
}


#line 371
+ (jint)intersectCubicsWithDouble:(jdouble)x1
                       withDouble:(jdouble)y1
                       withDouble:(jdouble)x2
                       withDouble:(jdouble)y2
                       withDouble:(jdouble)x3
                       withDouble:(jdouble)y3
                       withDouble:(jdouble)x4
                       withDouble:(jdouble)y4
                       withDouble:(jdouble)cx1
                       withDouble:(jdouble)cy1
                       withDouble:(jdouble)cx2
                       withDouble:(jdouble)cy2
                       withDouble:(jdouble)cx3
                       withDouble:(jdouble)cy3
                       withDouble:(jdouble)cx4
                       withDouble:(jdouble)cy4
                  withDoubleArray:(IOSDoubleArray *)params {
  return ComGeometryUtil_intersectCubicsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, x4, y4, cx1, cy1, cx2, cy2, cx3, cy3, cx4, cy4, params);
}


#line 428
+ (jdouble)lineWithDouble:(jdouble)t
               withDouble:(jdouble)x1
               withDouble:(jdouble)x2 {
  return ComGeometryUtil_lineWithDouble_withDouble_withDouble_(t, x1, x2);
}


#line 432
+ (jdouble)quadWithDouble:(jdouble)t
               withDouble:(jdouble)x1
               withDouble:(jdouble)x2
               withDouble:(jdouble)x3 {
  return ComGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(t, x1, x2, x3);
}


#line 436
+ (jdouble)cubicWithDouble:(jdouble)t
                withDouble:(jdouble)x1
                withDouble:(jdouble)x2
                withDouble:(jdouble)x3
                withDouble:(jdouble)x4 {
  return ComGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(t, x1, x2, x3, x4);
}


#line 443
+ (void)subQuadWithDoubleArray:(IOSDoubleArray *)coef
                    withDouble:(jdouble)t0
                   withBoolean:(jboolean)left {
  ComGeometryUtil_subQuadWithDoubleArray_withDouble_withBoolean_(coef, t0, left);
}


#line 453
+ (void)subCubicWithDoubleArray:(IOSDoubleArray *)coef
                     withDouble:(jdouble)t0
                    withBoolean:(jboolean)left {
  ComGeometryUtil_subCubicWithDoubleArray_withDouble_withBoolean_(coef, t0, left);
}


#line 463
+ (void)cubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                   withDoubleArray:(IOSDoubleArray *)yCoefs1
                   withDoubleArray:(IOSDoubleArray *)xCoefs2
                   withDoubleArray:(IOSDoubleArray *)yCoefs2
                   withDoubleArray:(IOSDoubleArray *)params {
  ComGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
}


#line 497
+ (void)quadAndCubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                          withDoubleArray:(IOSDoubleArray *)yCoefs1
                          withDoubleArray:(IOSDoubleArray *)xCoefs2
                          withDoubleArray:(IOSDoubleArray *)yCoefs2
                          withDoubleArray:(IOSDoubleArray *)params {
  ComGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
}


#line 528
+ (void)quadNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                  withDoubleArray:(IOSDoubleArray *)yCoefs1
                  withDoubleArray:(IOSDoubleArray *)xCoefs2
                  withDoubleArray:(IOSDoubleArray *)yCoefs2
                  withDoubleArray:(IOSDoubleArray *)params {
  ComGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 19, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 23, 22, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 24, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(intersectLinesWithParamsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[2].selector = @selector(intersectLinesWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[3].selector = @selector(intersectLineAndQuadWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[4].selector = @selector(intersectLineAndCubicWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[5].selector = @selector(intersectQuadsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[6].selector = @selector(intersectQuadAndCubicWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[7].selector = @selector(intersectCubicsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[8].selector = @selector(lineWithDouble:withDouble:withDouble:);
  methods[9].selector = @selector(quadWithDouble:withDouble:withDouble:withDouble:);
  methods[10].selector = @selector(cubicWithDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[11].selector = @selector(subQuadWithDoubleArray:withDouble:withBoolean:);
  methods[12].selector = @selector(subCubicWithDoubleArray:withDouble:withBoolean:);
  methods[13].selector = @selector(cubicNewtonWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:);
  methods[14].selector = @selector(quadAndCubicNewtonWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:);
  methods[15].selector = @selector(quadNewtonWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EPSILON", "D", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
  };
  static const void *ptrTable[] = { "intersectLinesWithParams", "DDDDDDDD[D", "intersectLines", "intersectLineAndQuad", "DDDDDDDDDD[D", "intersectLineAndCubic", "DDDDDDDDDDDD[D", "intersectQuads", "intersectQuadAndCubic", "DDDDDDDDDDDDDD[D", "intersectCubics", "DDDDDDDDDDDDDDDD[D", "line", "DDD", "quad", "DDDD", "cubic", "DDDDD", "subQuad", "[DDZ", "subCubic", "cubicNewton", "[D[D[D[D[D", "quadAndCubicNewton", "quadNewton", &ComGeometryUtil_EPSILON };
  static const J2ObjcClassInfo _ComGeometryUtil = { "GeometryUtil", "com", ptrTable, methods, fields, 7, 0x1, 16, 1, -1, -1, -1, -1, -1 };
  return &_ComGeometryUtil;
}

+ (void)initialize {
  if (self == [ComGeometryUtil class]) {
    ComGeometryUtil_EPSILON = JavaLangMath_powWithDouble_withDouble_(
#line 20
    10, -14);
    J2OBJC_SET_INITIALIZED(ComGeometryUtil)
  }
}

@end


#line 19
void ComGeometryUtil_init(ComGeometryUtil *self) {
  NSObject_init(self);
}


#line 19
ComGeometryUtil *new_ComGeometryUtil_init() {
  J2OBJC_NEW_IMPL(ComGeometryUtil, init)
}


#line 19
ComGeometryUtil *create_ComGeometryUtil_init() {
  J2OBJC_CREATE_IMPL(ComGeometryUtil, init)
}


#line 22
jint ComGeometryUtil_intersectLinesWithParamsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble x4, jdouble y4, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  jdouble dx = x4 - x3;
  jdouble dy = y4 - y3;
  jdouble d = dx * (y2 - y1) - dy * (x2 - x1);
  
#line 28
  if (JavaLangMath_absWithDouble_(d) < ComGeometryUtil_EPSILON) {
    return 0;
  }
  
#line 32
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = (-dx * (y1 - y3) + dy * (x1 - x3)) / d;
  
#line 34
  if (dx != 0) {
    *IOSDoubleArray_GetRef(params, 1) = (ComGeometryUtil_lineWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(params, 0), x1, x2) - x3) / dx;
  }
  else
#line 36
  if (dy != 0) {
    *IOSDoubleArray_GetRef(params, 1) = (ComGeometryUtil_lineWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(params, 0), y1, y2) - y3) / dy;
  }
  else {
    
#line 39
    *IOSDoubleArray_GetRef(params, 1) = 0.0;
  }
  
#line 42
  if (IOSDoubleArray_Get(params, 0) >= 0 && IOSDoubleArray_Get(params, 0) <= 1 && IOSDoubleArray_Get(params, 1) >= 0 && IOSDoubleArray_Get(params, 1) <= 1) {
    return 1;
  }
  
#line 46
  return 0;
}


#line 65
jint ComGeometryUtil_intersectLinesWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble x4, jdouble y4, IOSDoubleArray *point) {
  ComGeometryUtil_initialize();
  jdouble A1 = -(y2 - y1);
  jdouble B1 = (x2 - x1);
  jdouble C1 = x1 * y2 - x2 * y1;
  jdouble A2 = -(y4 - y3);
  jdouble B2 = (x4 - x3);
  jdouble C2 = x3 * y4 - x4 * y3;
  jdouble coefParallel = A1 * B2 - A2 * B1;
  
#line 75
  if (x3 == x4 && y3 == y4 && (A1 * x3 + B1 * y3 + C1 == 0) && (x3 >= JavaLangMath_minWithDouble_withDouble_(x1, x2)) &&
#line 76
  (x3 <= JavaLangMath_maxWithDouble_withDouble_(x1, x2)) && (y3 >= JavaLangMath_minWithDouble_withDouble_(y1, y2)) && (y3 <= JavaLangMath_maxWithDouble_withDouble_(y1, y2))) {
    return 1;
  }
  if (JavaLangMath_absWithDouble_(coefParallel) < ComGeometryUtil_EPSILON) {
    return 0;
  }
  *IOSDoubleArray_GetRef(nil_chk(point), 0) = (B1 * C2 - B2 * C1) / coefParallel;
  *IOSDoubleArray_GetRef(point, 1) = (A2 * C1 - A1 * C2) / coefParallel;
  if (IOSDoubleArray_Get(point, 0) >= JavaLangMath_minWithDouble_withDouble_(x1, x2) && IOSDoubleArray_Get(point, 0) >= JavaLangMath_minWithDouble_withDouble_(x3, x4) && IOSDoubleArray_Get(point, 0) <= JavaLangMath_maxWithDouble_withDouble_(x1, x2) &&
#line 85
  IOSDoubleArray_Get(point, 0) <= JavaLangMath_maxWithDouble_withDouble_(x3, x4) && IOSDoubleArray_Get(point, 1) >= JavaLangMath_minWithDouble_withDouble_(y1, y2) && IOSDoubleArray_Get(point, 1) >= JavaLangMath_minWithDouble_withDouble_(y3, y4) &&
#line 86
  IOSDoubleArray_Get(point, 1) <= JavaLangMath_maxWithDouble_withDouble_(y1, y2) && IOSDoubleArray_Get(point, 1) <= JavaLangMath_maxWithDouble_withDouble_(y3, y4)) {
    return 1;
  }
  return 0;
}


#line 111
jint ComGeometryUtil_intersectLineAndQuadWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble qx1, jdouble qy1, jdouble qx2, jdouble qy2, jdouble qx3, jdouble qy3, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  IOSDoubleArray *eqn = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *t = [IOSDoubleArray newArrayWithLength:2];
  IOSDoubleArray *s = [IOSDoubleArray newArrayWithLength:2];
  jdouble dy = y2 - y1;
  jdouble dx = x2 - x1;
  jint quantity = 0;
  jint count = 0;
  
#line 121
  *IOSDoubleArray_GetRef(eqn, 0) = dy * (qx1 - x1) - dx * (qy1 - y1);
  *IOSDoubleArray_GetRef(eqn, 1) = 2 * dy * (qx2 - qx1) - 2 * dx * (qy2 - qy1);
  *IOSDoubleArray_GetRef(eqn, 2) = dy * (qx1 - 2 * qx2 + qx3) - dx * (qy1 - 2 * qy2 + qy3);
  
#line 125
  if ((count = ComCrossing_solveQuadWithDoubleArray_withDoubleArray_(eqn, t)) == 0) {
    return 0;
  }
  
#line 129
  for (jint i = 0; i < count; i++) {
    if (dx != 0) {
      *IOSDoubleArray_GetRef(s, i) = (ComGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), qx1, qx2, qx3) - x1) / dx;
    }
    else
#line 132
    if (dy != 0) {
      *IOSDoubleArray_GetRef(s, i) = (ComGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), qy1, qy2, qy3) - y1) / dy;
    }
    else {
      
#line 135
      *IOSDoubleArray_GetRef(s, i) = 0.0;
    }
    if (IOSDoubleArray_Get(t, i) >= 0 && IOSDoubleArray_Get(t, i) <= 1 && IOSDoubleArray_Get(s, i) >= 0 && IOSDoubleArray_Get(s, i) <= 1) {
      *IOSDoubleArray_GetRef(nil_chk(params), 2 * quantity) = IOSDoubleArray_Get(t, i);
      *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(s, i);
      ++quantity;
    }
  }
  
#line 144
  return quantity;
}


#line 168
jint ComGeometryUtil_intersectLineAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cx3, jdouble cy3, jdouble cx4, jdouble cy4, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  IOSDoubleArray *eqn = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *t = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *s = [IOSDoubleArray newArrayWithLength:3];
  jdouble dy = y2 - y1;
  jdouble dx = x2 - x1;
  jint quantity = 0;
  jint count = 0;
  
#line 178
  *IOSDoubleArray_GetRef(eqn, 0) = (cy1 - y1) * dx + (x1 - cx1) * dy;
  *IOSDoubleArray_GetRef(eqn, 1) = -3 * (cy1 - cy2) * dx + 3 * (cx1 - cx2) * dy;
  *IOSDoubleArray_GetRef(eqn, 2) = (3 * cy1 - 6 * cy2 + 3 * cy3) * dx - (3 * cx1 - 6 * cx2 + 3 * cx3) * dy;
  *IOSDoubleArray_GetRef(eqn, 3) = (-3 * cy1 + 3 * cy2 - 3 * cy3 + cy4) * dx + (3 * cx1 - 3 * cx2 + 3 * cx3 - cx4) * dy;
  
#line 183
  if ((count = ComCrossing_solveCubicWithDoubleArray_withDoubleArray_(eqn, t)) == 0) {
    return 0;
  }
  
#line 187
  for (jint i = 0; i < count; i++) {
    if (dx != 0) {
      *IOSDoubleArray_GetRef(s, i) = (ComGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), cx1, cx2, cx3, cx4) - x1) / dx;
    }
    else
#line 190
    if (dy != 0) {
      *IOSDoubleArray_GetRef(s, i) = (ComGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), cy1, cy2, cy3, cy4) - y1) / dy;
    }
    else {
      
#line 193
      *IOSDoubleArray_GetRef(s, i) = 0.0;
    }
    if (IOSDoubleArray_Get(t, i) >= 0 && IOSDoubleArray_Get(t, i) <= 1 && IOSDoubleArray_Get(s, i) >= 0 && IOSDoubleArray_Get(s, i) <= 1) {
      *IOSDoubleArray_GetRef(nil_chk(params), 2 * quantity) = IOSDoubleArray_Get(t, i);
      *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(s, i);
      ++quantity;
    }
  }
  
#line 202
  return quantity;
}


#line 224
jint ComGeometryUtil_intersectQuadsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble qx1, jdouble qy1, jdouble qx2, jdouble qy2, jdouble qx3, jdouble qy3, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  
#line 227
  IOSDoubleArray *initParams = [IOSDoubleArray newArrayWithLength:2];
  IOSDoubleArray *xCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *yCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs2 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *yCoefs2 = [IOSDoubleArray newArrayWithLength:3];
  jint quantity = 0;
  
#line 234
  *IOSDoubleArray_GetRef(xCoefs1, 0) = x1 - 2 * x2 + x3;
  *IOSDoubleArray_GetRef(xCoefs1, 1) = -2 * x1 + 2 * x2;
  *IOSDoubleArray_GetRef(xCoefs1, 2) = x1;
  
#line 238
  *IOSDoubleArray_GetRef(yCoefs1, 0) = y1 - 2 * y2 + y3;
  *IOSDoubleArray_GetRef(yCoefs1, 1) = -2 * y1 + 2 * y2;
  *IOSDoubleArray_GetRef(yCoefs1, 2) = y1;
  
#line 242
  *IOSDoubleArray_GetRef(xCoefs2, 0) = qx1 - 2 * qx2 + qx3;
  *IOSDoubleArray_GetRef(xCoefs2, 1) = -2 * qx1 + 2 * qx2;
  *IOSDoubleArray_GetRef(xCoefs2, 2) = qx1;
  
#line 246
  *IOSDoubleArray_GetRef(yCoefs2, 0) = qy1 - 2 * qy2 + qy3;
  *IOSDoubleArray_GetRef(yCoefs2, 1) = -2 * qy1 + 2 * qy2;
  *IOSDoubleArray_GetRef(yCoefs2, 2) = qy1;
  
#line 251
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = *IOSDoubleArray_GetRef(params, 1) = 0.25;
  ComGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, initParams);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 259
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.75;
  ComGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 267
  return quantity;
}


#line 293
jint ComGeometryUtil_intersectQuadAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble qx1, jdouble qy1, jdouble qx2, jdouble qy2, jdouble qx3, jdouble qy3, jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cx3, jdouble cy3, jdouble cx4, jdouble cy4, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  
#line 296
  jint quantity = 0;
  IOSDoubleArray *initParams = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *yCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *yCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  *IOSDoubleArray_GetRef(xCoefs1, 0) = qx1 - 2 * qx2 + qx3;
  *IOSDoubleArray_GetRef(xCoefs1, 1) = 2 * qx2 - 2 * qx1;
  *IOSDoubleArray_GetRef(xCoefs1, 2) = qx1;
  
#line 306
  *IOSDoubleArray_GetRef(yCoefs1, 0) = qy1 - 2 * qy2 + qy3;
  *IOSDoubleArray_GetRef(yCoefs1, 1) = 2 * qy2 - 2 * qy1;
  *IOSDoubleArray_GetRef(yCoefs1, 2) = qy1;
  
#line 310
  *IOSDoubleArray_GetRef(xCoefs2, 0) = -cx1 + 3 * cx2 - 3 * cx3 + cx4;
  *IOSDoubleArray_GetRef(xCoefs2, 1) = 3 * cx1 - 6 * cx2 + 3 * cx3;
  *IOSDoubleArray_GetRef(xCoefs2, 2) = -3 * cx1 + 3 * cx2;
  *IOSDoubleArray_GetRef(xCoefs2, 3) = cx1;
  
#line 315
  *IOSDoubleArray_GetRef(yCoefs2, 0) = -cy1 + 3 * cy2 - 3 * cy3 + cy4;
  *IOSDoubleArray_GetRef(yCoefs2, 1) = 3 * cy1 - 6 * cy2 + 3 * cy3;
  *IOSDoubleArray_GetRef(yCoefs2, 2) = -3 * cy1 + 3 * cy2;
  *IOSDoubleArray_GetRef(yCoefs2, 3) = cy1;
  
#line 321
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = *IOSDoubleArray_GetRef(params, 1) = 0.25;
  ComGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, initParams);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 329
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.5;
  ComGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 337
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.75;
  ComGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  return quantity;
}


#line 371
jint ComGeometryUtil_intersectCubicsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble x4, jdouble y4, jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cx3, jdouble cy3, jdouble cx4, jdouble cy4, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  
#line 375
  jint quantity = 0;
  IOSDoubleArray *initParams = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs1 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *yCoefs1 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *xCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *yCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  *IOSDoubleArray_GetRef(xCoefs1, 0) = -x1 + 3 * x2 - 3 * x3 + x4;
  *IOSDoubleArray_GetRef(xCoefs1, 1) = 3 * x1 - 6 * x2 + 3 * x3;
  *IOSDoubleArray_GetRef(xCoefs1, 2) = -3 * x1 + 3 * x2;
  *IOSDoubleArray_GetRef(xCoefs1, 3) = x1;
  
#line 386
  *IOSDoubleArray_GetRef(yCoefs1, 0) = -y1 + 3 * y2 - 3 * y3 + y4;
  *IOSDoubleArray_GetRef(yCoefs1, 1) = 3 * y1 - 6 * y2 + 3 * y3;
  *IOSDoubleArray_GetRef(yCoefs1, 2) = -3 * y1 + 3 * y2;
  *IOSDoubleArray_GetRef(yCoefs1, 3) = y1;
  
#line 391
  *IOSDoubleArray_GetRef(xCoefs2, 0) = -cx1 + 3 * cx2 - 3 * cx3 + cx4;
  *IOSDoubleArray_GetRef(xCoefs2, 1) = 3 * cx1 - 6 * cx2 + 3 * cx3;
  *IOSDoubleArray_GetRef(xCoefs2, 2) = -3 * cx1 + 3 * cx2;
  *IOSDoubleArray_GetRef(xCoefs2, 3) = cx1;
  
#line 396
  *IOSDoubleArray_GetRef(yCoefs2, 0) = -cy1 + 3 * cy2 - 3 * cy3 + cy4;
  *IOSDoubleArray_GetRef(yCoefs2, 1) = 3 * cy1 - 6 * cy2 + 3 * cy3;
  *IOSDoubleArray_GetRef(yCoefs2, 2) = -3 * cy1 + 3 * cy2;
  *IOSDoubleArray_GetRef(yCoefs2, 3) = cy1;
  
#line 402
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = *IOSDoubleArray_GetRef(params, 1) = 0.25;
  ComGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, initParams);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 410
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.5;
  ComGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 418
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.75;
  ComGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  return quantity;
}


#line 428
jdouble ComGeometryUtil_lineWithDouble_withDouble_withDouble_(jdouble t, jdouble x1, jdouble x2) {
  ComGeometryUtil_initialize();
  
#line 429
  return x1 * (1.0 - t) + x2 * t;
}


#line 432
jdouble ComGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(jdouble t, jdouble x1, jdouble x2, jdouble x3) {
  ComGeometryUtil_initialize();
  
#line 433
  return x1 * (1.0 - t) * (1.0 - t) + 2.0 * x2 * t * (1.0 - t) + x3 * t * t;
}


#line 436
jdouble ComGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble t, jdouble x1, jdouble x2, jdouble x3, jdouble x4) {
  ComGeometryUtil_initialize();
  
#line 437
  return x1 * (1.0 - t) * (1.0 - t) * (1.0 - t) + 3.0 * x2 * (1.0 - t) * (1.0 - t) * t + 3.0 * x3 * (1.0 - t) * t *
#line 438
  t + x4 * t * t * t;
}


#line 443
void ComGeometryUtil_subQuadWithDoubleArray_withDouble_withBoolean_(IOSDoubleArray *coef, jdouble t0, jboolean left) {
  ComGeometryUtil_initialize();
  
#line 444
  if (left) {
    *IOSDoubleArray_GetRef(nil_chk(coef), 2) = (1 - t0) * IOSDoubleArray_Get(coef, 0) + t0 * IOSDoubleArray_Get(coef, 2);
    *IOSDoubleArray_GetRef(coef, 3) = (1 - t0) * IOSDoubleArray_Get(coef, 1) + t0 * IOSDoubleArray_Get(coef, 3);
  }
  else {
    
#line 448
    *IOSDoubleArray_GetRef(nil_chk(coef), 2) = (1 - t0) * IOSDoubleArray_Get(coef, 2) + t0 * IOSDoubleArray_Get(coef, 4);
    *IOSDoubleArray_GetRef(coef, 3) = (1 - t0) * IOSDoubleArray_Get(coef, 3) + t0 * IOSDoubleArray_Get(coef, 5);
  }
}


#line 453
void ComGeometryUtil_subCubicWithDoubleArray_withDouble_withBoolean_(IOSDoubleArray *coef, jdouble t0, jboolean left) {
  ComGeometryUtil_initialize();
  
#line 454
  if (left) {
    *IOSDoubleArray_GetRef(nil_chk(coef), 2) = (1 - t0) * IOSDoubleArray_Get(coef, 0) + t0 * IOSDoubleArray_Get(coef, 2);
    *IOSDoubleArray_GetRef(coef, 3) = (1 - t0) * IOSDoubleArray_Get(coef, 1) + t0 * IOSDoubleArray_Get(coef, 3);
  }
  else {
    
#line 458
    *IOSDoubleArray_GetRef(nil_chk(coef), 4) = (1 - t0) * IOSDoubleArray_Get(coef, 4) + t0 * IOSDoubleArray_Get(coef, 6);
    *IOSDoubleArray_GetRef(coef, 5) = (1 - t0) * IOSDoubleArray_Get(coef, 5) + t0 * IOSDoubleArray_Get(coef, 7);
  }
}


#line 463
void ComGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  jdouble t = 0.0;
  
#line 465
  jdouble s = 0.0;
  jdouble t1 = IOSDoubleArray_Get(nil_chk(params), 0);
  jdouble s1 = IOSDoubleArray_Get(params, 1);
  jdouble d;
  
#line 468
  jdouble dt;
  
#line 468
  jdouble ds;
  
#line 470
  while (JavaLangMath_sqrtWithDouble_((t - t1) * (t - t1) + (s - s1) * (s - s1)) > ComGeometryUtil_EPSILON) {
    d = -(3 * t * t * IOSDoubleArray_Get(nil_chk(xCoefs1), 0) + 2 * t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2)) *
#line 472
    (3 * s * s * IOSDoubleArray_Get(nil_chk(yCoefs2), 0) + 2 * s * IOSDoubleArray_Get(yCoefs2, 1) + IOSDoubleArray_Get(yCoefs2, 2)) +
#line 473
    (3 * t * t * IOSDoubleArray_Get(nil_chk(yCoefs1), 0) + 2 * t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2)) *
#line 474
    (3 * s * s * IOSDoubleArray_Get(nil_chk(xCoefs2), 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 476
    dt = (t * t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * t * IOSDoubleArray_Get(xCoefs1, 1) + t * IOSDoubleArray_Get(xCoefs1, 2) + IOSDoubleArray_Get(xCoefs1, 3) - s * s * s * IOSDoubleArray_Get(xCoefs2, 0) -
#line 477
    s * s * IOSDoubleArray_Get(xCoefs2, 1) - s * IOSDoubleArray_Get(xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3)) *
#line 478
    (-3 * s * s * IOSDoubleArray_Get(yCoefs2, 0) - 2 * s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2)) +
#line 479
    (t * t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * t * IOSDoubleArray_Get(yCoefs1, 1) + t * IOSDoubleArray_Get(yCoefs1, 2) + IOSDoubleArray_Get(yCoefs1, 3) - s * s * s * IOSDoubleArray_Get(
#line 480
    yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) - s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) *
#line 481
    (3 * s * s * IOSDoubleArray_Get(xCoefs2, 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 483
    ds = (3 * t * t * IOSDoubleArray_Get(xCoefs1, 0) + 2 * t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2)) *
#line 484
    (t * t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * t * IOSDoubleArray_Get(yCoefs1, 1) + t * IOSDoubleArray_Get(yCoefs1, 2) + IOSDoubleArray_Get(yCoefs1, 3) - s * s * s * IOSDoubleArray_Get(
#line 485
    yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) - s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) -
#line 486
    (3 * t * t * IOSDoubleArray_Get(yCoefs1, 0) + 2 * t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2)) *
#line 487
    (t * t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * t * IOSDoubleArray_Get(xCoefs1, 1) + t * IOSDoubleArray_Get(xCoefs1, 2) + IOSDoubleArray_Get(xCoefs1, 3) - s * s * s * IOSDoubleArray_Get(
#line 488
    xCoefs2, 0) - s * s * IOSDoubleArray_Get(xCoefs2, 1) - s * IOSDoubleArray_Get(xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3));
    
#line 490
    t1 = t - dt / d;
    s1 = s - ds / d;
  }
  *IOSDoubleArray_GetRef(params, 0) = t1;
  *IOSDoubleArray_GetRef(params, 1) = s1;
}


#line 497
void ComGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  jdouble t = 0.0;
  
#line 499
  jdouble s = 0.0;
  jdouble t1 = IOSDoubleArray_Get(nil_chk(params), 0);
  jdouble s1 = IOSDoubleArray_Get(params, 1);
  jdouble d;
  
#line 502
  jdouble dt;
  
#line 502
  jdouble ds;
  
#line 504
  while (JavaLangMath_sqrtWithDouble_((t - t1) * (t - t1) + (s - s1) * (s - s1)) > ComGeometryUtil_EPSILON) {
    d = -(2 * t * IOSDoubleArray_Get(nil_chk(xCoefs1), 0) + IOSDoubleArray_Get(xCoefs1, 1)) * (3 * s * s * IOSDoubleArray_Get(nil_chk(yCoefs2), 0) + 2 * s * IOSDoubleArray_Get(yCoefs2, 1) + IOSDoubleArray_Get(yCoefs2, 2)) +
#line 506
    (2 * t * IOSDoubleArray_Get(nil_chk(yCoefs1), 0) + IOSDoubleArray_Get(yCoefs1, 1)) * (3 * s * s * IOSDoubleArray_Get(nil_chk(xCoefs2), 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 508
    dt = (t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2) + -s * s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * s * IOSDoubleArray_Get(xCoefs2, 1) - s * IOSDoubleArray_Get(
#line 509
    xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3)) *
#line 510
    (-3 * s * s * IOSDoubleArray_Get(yCoefs2, 0) - 2 * s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2)) +
#line 511
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) -
#line 512
    s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) * (3 * s * s * IOSDoubleArray_Get(xCoefs2, 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 514
    ds = (2 * t * IOSDoubleArray_Get(xCoefs1, 0) + IOSDoubleArray_Get(xCoefs1, 1)) *
#line 515
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) -
#line 516
    s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) -
#line 517
    (2 * t * IOSDoubleArray_Get(yCoefs1, 0) + IOSDoubleArray_Get(yCoefs1, 1)) *
#line 518
    (t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2) - s * s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * s * IOSDoubleArray_Get(xCoefs2, 1) -
#line 519
    s * IOSDoubleArray_Get(xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3));
    
#line 521
    t1 = t - dt / d;
    s1 = s - ds / d;
  }
  *IOSDoubleArray_GetRef(params, 0) = t1;
  *IOSDoubleArray_GetRef(params, 1) = s1;
}


#line 528
void ComGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params) {
  ComGeometryUtil_initialize();
  jdouble t = 0.0;
  
#line 530
  jdouble s = 0.0;
  jdouble t1 = IOSDoubleArray_Get(nil_chk(params), 0);
  jdouble s1 = IOSDoubleArray_Get(params, 1);
  jdouble d;
  
#line 533
  jdouble dt;
  
#line 533
  jdouble ds;
  
#line 535
  while (JavaLangMath_sqrtWithDouble_((t - t1) * (t - t1) + (s - s1) * (s - s1)) > ComGeometryUtil_EPSILON) {
    t = t1;
    s = s1;
    d = -(2 * t * IOSDoubleArray_Get(nil_chk(xCoefs1), 0) + IOSDoubleArray_Get(xCoefs1, 1)) * (2 * s * IOSDoubleArray_Get(nil_chk(yCoefs2), 0) + IOSDoubleArray_Get(yCoefs2, 1)) +
#line 539
    (2 * s * IOSDoubleArray_Get(nil_chk(xCoefs2), 0) + IOSDoubleArray_Get(xCoefs2, 1)) * (2 * t * IOSDoubleArray_Get(nil_chk(yCoefs1), 0) + IOSDoubleArray_Get(yCoefs1, 1));
    
#line 541
    dt = -(t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 1) - s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * IOSDoubleArray_Get(xCoefs2, 1) - IOSDoubleArray_Get(xCoefs2, 2)) *
#line 542
    (2 * s * IOSDoubleArray_Get(yCoefs2, 0) + IOSDoubleArray_Get(yCoefs2, 1)) +
#line 543
    (2 * s * IOSDoubleArray_Get(xCoefs2, 0) + IOSDoubleArray_Get(xCoefs2, 1)) *
#line 544
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2));
    
#line 546
    ds = (2 * t * IOSDoubleArray_Get(xCoefs1, 0) + IOSDoubleArray_Get(xCoefs1, 1)) *
#line 547
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2)) -
#line 548
    (2 * t * IOSDoubleArray_Get(yCoefs1, 0) + IOSDoubleArray_Get(yCoefs1, 1)) *
#line 549
    (t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2) - s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * IOSDoubleArray_Get(xCoefs2, 1) - IOSDoubleArray_Get(xCoefs2, 2));
    
#line 551
    t1 = t - dt / d;
    s1 = s - ds / d;
  }
  *IOSDoubleArray_GetRef(params, 0) = t1;
  *IOSDoubleArray_GetRef(params, 1) = s1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGeometryUtil)

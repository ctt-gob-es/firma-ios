//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/misc/Platform.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Platform")
#ifdef RESTRICT_Platform
#define INCLUDE_ALL_Platform 0
#else
#define INCLUDE_ALL_Platform 1
#endif
#undef RESTRICT_Platform

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (EsGobAfirmaCoreMiscPlatform_) && (INCLUDE_ALL_Platform || defined(INCLUDE_EsGobAfirmaCoreMiscPlatform))
#define EsGobAfirmaCoreMiscPlatform_

@class EsGobAfirmaCoreMiscPlatform_BROWSER;
@class EsGobAfirmaCoreMiscPlatform_MACHINE;
@class EsGobAfirmaCoreMiscPlatform_OS;

/*!
 @brief Clase para la identificaci&oacute;n de la plataforma Cliente y
  extracci&oacute;n de datos relativos a la misma.
 */
@interface EsGobAfirmaCoreMiscPlatform : NSObject

#pragma mark Public

/*!
 @brief Recupera el navegador web actual.
 @param userAgent <i> UserAgent </i>  del navegador Web
 @return Navegador web correspondiente al UserAgent indicado.
 */
+ (EsGobAfirmaCoreMiscPlatform_BROWSER *)getBrowserWithNSString:(NSString *)userAgent;

/*!
 @brief Recupera la arquitectura de la JVM en ejecuci&oacute;n seg&uacute;n las
  propiedades de Java.
 @return Arquitectura de la JVM.
 */
+ (NSString *)getJavaArch;

/*!
 @brief Recupera la ruta del directorio de instalaci&oacute;n de Java.
 @return Ruta del directorio de instalaci&oacute;n de Java.
 */
+ (NSString *)getJavaHome;

/*!
 @brief Recupera la propiedad Path de Java.
 @return Propiedad en el Path de Java.
 */
+ (NSString *)getJavaLibraryPath;

/*!
 @brief Obtiene la arquitectura de procesador de la m&aacute;quina actual.
 @return Arquitectura de procesador de la m&aacute;quina actual.
 */
+ (EsGobAfirmaCoreMiscPlatform_MACHINE *)getMachineType;

/*!
 @brief Recupera el sistema operativo de ejecuci&oacute;n.
 @return Sistema operativo actual.
 */
+ (EsGobAfirmaCoreMiscPlatform_OS *)getOS;

/*!
 @brief Devuelve el directorio principal de bibliotecas del sistema.
 @return Directorio principal de bibliotecas
 */
+ (NSString *)getSystemLibDir;

/*!
 @brief Obtiene el directorio principal del sistema operativo del sistema.
 @return Directorio principal del sistema operativo
 */
+ (NSString *)getSystemRoot;

/*!
 @brief Recupera la ruta del directorio personal del usuario del sistema
  operativo (no incluye nunca una barra final).
 @return Ruta del directorio del usuario.
 */
+ (NSString *)getUserHome;

/*!
 @brief Indica si el sistema operativo es Linux, macOS o Solaris.
 @param system Sistem operativo.
 @return <code>true</code> si el sistema operativo es de la familia de Unix, <code>false</code>.
 */
+ (jboolean)isUnixSystemWithEsGobAfirmaCoreMiscPlatform_OS:(EsGobAfirmaCoreMiscPlatform_OS *)system;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscPlatform)

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_getMachineType(void);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_getBrowserWithNSString_(NSString *userAgent);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_getOS(void);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscPlatform_getJavaArch(void);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscPlatform_getJavaHome(void);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscPlatform_getJavaLibraryPath(void);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscPlatform_getUserHome(void);

FOUNDATION_EXPORT jboolean EsGobAfirmaCoreMiscPlatform_isUnixSystemWithEsGobAfirmaCoreMiscPlatform_OS_(EsGobAfirmaCoreMiscPlatform_OS *system);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscPlatform_getSystemRoot(void);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscPlatform_getSystemLibDir(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscPlatform)

#endif

#if !defined (EsGobAfirmaCoreMiscPlatform_MACHINE_) && (INCLUDE_ALL_Platform || defined(INCLUDE_EsGobAfirmaCoreMiscPlatform_MACHINE))
#define EsGobAfirmaCoreMiscPlatform_MACHINE_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EsGobAfirmaCoreMiscPlatform_MACHINE_Enum) {
  EsGobAfirmaCoreMiscPlatform_MACHINE_Enum_X86 = 0,
  EsGobAfirmaCoreMiscPlatform_MACHINE_Enum_ARM32 = 1,
  EsGobAfirmaCoreMiscPlatform_MACHINE_Enum_MIPS32 = 2,
  EsGobAfirmaCoreMiscPlatform_MACHINE_Enum_AMD64 = 3,
  EsGobAfirmaCoreMiscPlatform_MACHINE_Enum_ARM64 = 4,
  EsGobAfirmaCoreMiscPlatform_MACHINE_Enum_MIPS64 = 5,
  EsGobAfirmaCoreMiscPlatform_MACHINE_Enum_OTHER = 6,
};

/*!
 @brief Arquitectura del procesador.
 */
@interface EsGobAfirmaCoreMiscPlatform_MACHINE : JavaLangEnum

#pragma mark Public

+ (EsGobAfirmaCoreMiscPlatform_MACHINE *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (EsGobAfirmaCoreMiscPlatform_MACHINE_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscPlatform_MACHINE)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_values_[];

/*!
 @brief x86 32 bits.
 */
inline EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_get_X86(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_MACHINE, X86)

/*!
 @brief ARM 32 bits.
 */
inline EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_get_ARM32(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_MACHINE, ARM32)

/*!
 @brief MIPS 32 bits.
 */
inline EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_get_MIPS32(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS32)

/*!
 @brief AMD64 / x86_64 (64 bits).
 */
inline EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_get_AMD64(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_MACHINE, AMD64)

/*!
 @brief ARM 64 bits.
 */
inline EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_get_ARM64(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_MACHINE, ARM64)

/*!
 @brief MIPS 64 bits.
 */
inline EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_get_MIPS64(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS64)

/*!
 @brief Otro
 */
inline EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_get_OTHER(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_MACHINE, OTHER)

FOUNDATION_EXPORT IOSObjectArray *EsGobAfirmaCoreMiscPlatform_MACHINE_values(void);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscPlatform_MACHINE)

#endif

#if !defined (EsGobAfirmaCoreMiscPlatform_OS_) && (INCLUDE_ALL_Platform || defined(INCLUDE_EsGobAfirmaCoreMiscPlatform_OS))
#define EsGobAfirmaCoreMiscPlatform_OS_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EsGobAfirmaCoreMiscPlatform_OS_Enum) {
  EsGobAfirmaCoreMiscPlatform_OS_Enum_WINDOWS = 0,
  EsGobAfirmaCoreMiscPlatform_OS_Enum_LINUX = 1,
  EsGobAfirmaCoreMiscPlatform_OS_Enum_SOLARIS = 2,
  EsGobAfirmaCoreMiscPlatform_OS_Enum_MACOSX = 3,
  EsGobAfirmaCoreMiscPlatform_OS_Enum_ANDROID = 4,
  EsGobAfirmaCoreMiscPlatform_OS_Enum_OTHER = 5,
};

/*!
 @brief Sistema operativo.
 */
@interface EsGobAfirmaCoreMiscPlatform_OS : JavaLangEnum

#pragma mark Public

+ (EsGobAfirmaCoreMiscPlatform_OS *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (EsGobAfirmaCoreMiscPlatform_OS_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscPlatform_OS)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_values_[];

/*!
 @brief Microsoft Windows.
 */
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_get_WINDOWS(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_OS, WINDOWS)

/*!
 @brief Linux.
 */
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_get_LINUX(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_OS, LINUX)

/*!
 @brief Sun Solaris / Open Solaris.
 */
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_get_SOLARIS(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_OS, SOLARIS)

/*!
 @brief Apple Mac OS X.
 */
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_get_MACOSX(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_OS, MACOSX)

/*!
 @brief Google Android.
 */
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_get_ANDROID(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_OS, ANDROID)

/*!
 @brief Sistema operativo no identificado.
 */
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_get_OTHER(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_OS, OTHER)

FOUNDATION_EXPORT IOSObjectArray *EsGobAfirmaCoreMiscPlatform_OS_values(void);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscPlatform_OS)

#endif

#if !defined (EsGobAfirmaCoreMiscPlatform_BROWSER_) && (INCLUDE_ALL_Platform || defined(INCLUDE_EsGobAfirmaCoreMiscPlatform_BROWSER))
#define EsGobAfirmaCoreMiscPlatform_BROWSER_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, EsGobAfirmaCoreMiscPlatform_BROWSER_Enum) {
  EsGobAfirmaCoreMiscPlatform_BROWSER_Enum_INTERNET_EXPLORER = 0,
  EsGobAfirmaCoreMiscPlatform_BROWSER_Enum_FIREFOX = 1,
  EsGobAfirmaCoreMiscPlatform_BROWSER_Enum_CHROME = 2,
  EsGobAfirmaCoreMiscPlatform_BROWSER_Enum_SAFARI = 3,
  EsGobAfirmaCoreMiscPlatform_BROWSER_Enum_OPERA = 4,
  EsGobAfirmaCoreMiscPlatform_BROWSER_Enum_OTHER = 5,
};

/*!
 @brief Navegador Web.
 */
@interface EsGobAfirmaCoreMiscPlatform_BROWSER : JavaLangEnum

#pragma mark Public

+ (EsGobAfirmaCoreMiscPlatform_BROWSER *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (EsGobAfirmaCoreMiscPlatform_BROWSER_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscPlatform_BROWSER)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_values_[];

/*!
 @brief Microsoft internet Explorer.
 */
inline EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_get_INTERNET_EXPLORER(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_BROWSER, INTERNET_EXPLORER)

/*!
 @brief Mozilla Firefox.
 */
inline EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_get_FIREFOX(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_BROWSER, FIREFOX)

/*!
 @brief Google Chrome.
 */
inline EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_get_CHROME(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_BROWSER, CHROME)

/*!
 @brief Apple Safari.
 */
inline EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_get_SAFARI(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_BROWSER, SAFARI)

/*!
 @brief Opera.
 */
inline EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_get_OPERA(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_BROWSER, OPERA)

/*!
 @brief Navegador Web no identificado.
 */
inline EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_get_OTHER(void);
J2OBJC_ENUM_CONSTANT(EsGobAfirmaCoreMiscPlatform_BROWSER, OTHER)

FOUNDATION_EXPORT IOSObjectArray *EsGobAfirmaCoreMiscPlatform_BROWSER_values(void);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscPlatform_BROWSER)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_Platform")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/ui/AOUIFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AOUIFactory")
#ifdef RESTRICT_AOUIFactory
#define INCLUDE_ALL_AOUIFactory 0
#else
#define INCLUDE_ALL_AOUIFactory 1
#endif
#undef RESTRICT_AOUIFactory

#if !defined (EsGobAfirmaCoreUiAOUIFactory_) && (INCLUDE_ALL_AOUIFactory || defined(INCLUDE_EsGobAfirmaCoreUiAOUIFactory))
#define EsGobAfirmaCoreUiAOUIFactory_

@class EsGobAfirmaCoreUiGenericFileFilter;
@class IOSByteArray;
@class IOSCharArray;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaLangThrowable;
@protocol EsGobAfirmaCoreUiAOUIManager;
@protocol EsGobAfirmaCoreUiKeyStoreDialogManager;
@protocol JavaUtilList;

/*!
 @brief Factor&iacute;a de elementos de interfaz gr&aacute;fica.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobAfirmaCoreUiAOUIFactory : NSObject

#pragma mark Public

/*!
 @brief Pregunta al usuario dos veces una misma contrase&ntilde;a (deben coincidir).
 Es el procedimiento normal cuando se pide el establecimiento de una nueva contrase&ntilde;a, para evitar errores.
 @param text Texto con el que se solicitar &aacute;  la entrada de texto al              usuario ( <i> prompt </i> ).
 @param text2 Texto con el que se solicitar &aacute;  al usuario que repita la contrase &ntilde; a.
 @param imageIcon Objeto de tipo <code>javax.swing.Icon</code>  con el icono del di &aacute; logo o  			   <code>null</code>  para no mostrar icono.
 @param charSet Juego de caracteres aceptados para la contrase &ntilde; a.
 @param beep <code> true </code>  si se desea un sonido de advertencia al
               introducir un caracter no v &aacute; lido,  <code> false </code>  en              caso contrario.
 @param c Componente padre (para la modalidad).
 @return Array de caracteres del texto introducido como contrase&ntilde;a.
 @throw es.gob.afirma.core.AOCancelledOperationExceptionCuando el usuario cancela o cierra el di&aacute;logo.
 */
+ (IOSCharArray *)getDoublePasswordWithNSString:(NSString *)text
                                   withNSString:(NSString *)text2
                                         withId:(id)imageIcon
                                   withNSString:(NSString *)charSet
                                    withBoolean:(jboolean)beep
                                         withId:(id)c;

/*!
 @brief Pide al usuario que seleccione un fichero.
 @param dialogTitle T &iacute; tulo de la ventana de di &aacute; logo
 @param currentDir Directorio inicial del di &aacute; logo
 @param filename Nombre del fichero a localizar
 @param extensions Extensiones predeterminadas para el fichero
 @param description_ Descripci &oacute; n del tipo de fichero correspondiente con las extensiones
 @param selectDirectory<code>true</code>  para permitir la selecci &oacute; n de directorios, <code>true</code>  					  para selecci &oacute; n de ficheros. En caso de directorios el par &aacute; metro  					  <code>multiselect</code>  se ignorar &aacute; .
 @param multiSelect<code>true</code>  para permitir selecci &oacute; n m &uacute; ltiple, <code>false</code>                     para selecci &oacute; n de un  &uacute; nico fichero
 @param icon Icono del di &aacute; logo de selecci &oacute; n.              Si se especifica  <code> null </code>  y se indica un  <code> Frame </code>  como padre se              hereda el icono de este.
 @param parentComponent Componente padre (para la modalidad)
 @return Nombre de fichero (con ruta) seleccionado por el usuario
 */
+ (IOSObjectArray *)getLoadFilesWithNSString:(NSString *)dialogTitle
                                withNSString:(NSString *)currentDir
                                withNSString:(NSString *)filename
                           withNSStringArray:(IOSObjectArray *)extensions
                                withNSString:(NSString *)description_
                                 withBoolean:(jboolean)selectDirectory
                                 withBoolean:(jboolean)multiSelect
                                      withId:(id)icon
                                      withId:(id)parentComponent;

/*!
 @brief Pregunta al usuario por una contrase&ntilde;a.
 @param text Texto que se muestra en el di &aacute; logo para pedir la              contrase &ntilde; a
 @param c Componente padre (para la modalidad)
 @return Contrase&ntilde;a introducida por el usuario
 @throw es.gob.afirma.core.AOCancelledOperationExceptionCuando el usuario cancela el proceso
                                                           de solicitud de contrase&ntilde;a
 */
+ (IOSCharArray *)getPasswordWithNSString:(NSString *)text
                                   withId:(id)c;

/*!
 @brief Pregunta al usuario por una contrase&ntilde;a.S&oacute;lo admite los caracteres
  incluidos en el par&aacute;metro <code>charset</code> y, en caso de insertar un
  car&aacute;cter no permitido, se emitir&aacute;a una advertencia no bloqueante
  (sonido, vibraci&oacute;n...) si el par&aacute;metro <code>beep</code> est&aacute;
  activado.
 @param text Texto que se muestra en el di &aacute; logo para pedir la              contrase &ntilde; a
 @param icon Objeto de tipo <code>javax.swing.Icon</code>  con el icono del di &aacute; logo  		  o <code>null</code>  para no mostrar icono.
 @param charset Cadena con los caracteres permitidos para la contrase &ntilde; a.
 @param beep Indica si se debe dar una se &ntilde; al al usuario al intentar insertar              un caracter no v &aacute; lido para la contrase &ntilde; a.
 @param c Componente padre (para la modalidad)
 @return Contrase&ntilde;a introducida por el usuario
 @throw es.gob.afirma.core.AOCancelledOperationExceptionCuando el usuario cancela el
                                                           proceso de solicitud de contrase&ntilde;a
 */
+ (IOSCharArray *)getPasswordWithNSString:(NSString *)text
                                   withId:(id)icon
                             withNSString:(NSString *)charset
                              withBoolean:(jboolean)beep
                                   withId:(id)c;

/*!
 @brief Pregunta al usuario por la localizaci&oacute;n en la que se desean guardar
  los datos y, si se proporcionan, los guarda en la misma.
 Si ocurre un error durante el guardado, se vuelve a preguntar al usuario por una
  localizaci&oacute;n,
  Si el usuario cancela el di&aacute;logo, se lanza <code>AOCancelledOperationException</code>.
 @param data Datos que se desean almacenar.
 @param dialogTitle T &iacute; tulo del di &aacute; logo de guardado.
 @param currentDir Directorio inicial del di &aacute; logo.
 @param selectedFile Nombre por defecto del fichero.
 @param filters Filtros del tipo de fichero a guardar.
 @param defaultFilter Filtro con un valor por defecto, si se indica como nulo, se ignora.
 @param parent Componente padre (para la modalidad).
 @return Fichero en el que se almacenan los datos.
 @throw IOExceptionSi no se puede guardar el fichero
 */
+ (JavaIoFile *)getSaveDataToFileWithByteArray:(IOSByteArray *)data
                                  withNSString:(NSString *)dialogTitle
                                  withNSString:(NSString *)currentDir
                                  withNSString:(NSString *)selectedFile
                              withJavaUtilList:(id<JavaUtilList>)filters
        withEsGobAfirmaCoreUiGenericFileFilter:(EsGobAfirmaCoreUiGenericFileFilter *)defaultFilter
                                        withId:(id)parent;

/*!
 @brief Pregunta al usuario por la localizaci&oacute;n en la que se desean guardar
  los datos y, si se proporcionan, los guarda en la misma.
 Si ocurre un error durante el guardado, se vuelve a preguntar al usuario por una
  localizaci&oacute;n,
  Si el usuario cancela el di&aacute;logo, se lanza <code>AOCancelledOperationException</code>.
 @param data Datos que se desean almacenar.
 @param dialogTitle T &iacute; tulo del di &aacute; logo de guardado.
 @param currentDir Directorio inicial del di &aacute; logo.
 @param selectedFile Nombre por defecto del fichero.
 @param filters Filtros del tipo de fichero a guardar.
 @param parent Componente padre (para la modalidad).
 @return Fichero en el que se almacenan los datos.
 @throw IOExceptionSi no se puede guardar el fichero
 */
+ (JavaIoFile *)getSaveDataToFileWithByteArray:(IOSByteArray *)data
                                  withNSString:(NSString *)dialogTitle
                                  withNSString:(NSString *)currentDir
                                  withNSString:(NSString *)selectedFile
                              withJavaUtilList:(id<JavaUtilList>)filters
                                        withId:(id)parent;

/*!
 @brief Establece el manejador de interfaces que gestionar&aacute; los di&aacute;logos
  gr&aacute;ficos que utilizar&aacute; @@firma para mostrar o solicitar informaci&oacute;n.
 @param manager Manejador de interfaces.
 */
+ (void)setUIManagerWithEsGobAfirmaCoreUiAOUIManager:(id<EsGobAfirmaCoreUiAOUIManager>)manager;

/*!
 @brief Di&aacute;logo de selecci&oacute;n de certificados.
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param dialogManager Gestor del di &aacute; logo
 @return Alias del certificado seleccionado o <code>null</code> si no se seleccion&oacute; ninguno.
 */
+ (NSString *)showCertificateSelectionDialogWithId:(id)parentComponent
        withEsGobAfirmaCoreUiKeyStoreDialogManager:(id<EsGobAfirmaCoreUiKeyStoreDialogManager>)dialogManager;

/*!
 @brief Muestra un di&aacute;logo de error de forma modal.
 @param parentComponent Componente padre (se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing
 @param message Mensaje
 @param title Titulo del cuadro de di &aacute; logo
 @param optionType Tipo de opciones a confirmar
 @param messageType Tipo de mensaje
 @return Opci&oacute;n seleccionada
 */
+ (jint)showConfirmDialogWithId:(id)parentComponent
                         withId:(id)message
                   withNSString:(NSString *)title
                        withInt:(jint)optionType
                        withInt:(jint)messageType;

/*!
 @brief Muestra un di&aacute;logo de error de forma modal.
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param message Mensaje de error.
 @param title Titulo de la ventana de error.
 @param messageType Tipo de mensaje.
 @param t Tipo de mensaje.
 */
+ (void)showErrorMessageWithId:(id)parentComponent
                        withId:(id)message
                  withNSString:(NSString *)title
                       withInt:(jint)messageType
         withJavaLangThrowable:(JavaLangThrowable *)t;

/*!
 @brief Muestra un di&aacute;logo de error de forma modal.
 @param message Mensaje de error.
 @param title Titulo de la ventana de error.
 @param messageType Tipo de mensaje.
 @param t Tipo de mensaje.
 */
+ (void)showErrorMessageWithId:(id)message
                  withNSString:(NSString *)title
                       withInt:(jint)messageType
         withJavaLangThrowable:(JavaLangThrowable *)t;

/*!
 @brief Di&aacute;logo de solicitud de un valor entre una lista de opciones (equivalente a <code>JOptionPane.showInputDialog()</code>).
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param message Mensaje
 @param title T &iacute; tulo del cuadro de di &aacute; logo
 @param messageType Tipo de mensaje
 @param icon Icono a mostrar en el di &aacute; logo
 @param selectionValues Valores posibles para seleccionar
 @param initialSelectionValue Valor seleccionado por defecto
 @return Valor seleccionado
 */
+ (id)showInputDialogWithId:(id)parentComponent
                     withId:(id)message
               withNSString:(NSString *)title
                    withInt:(jint)messageType
                     withId:(id)icon
          withNSObjectArray:(IOSObjectArray *)selectionValues
                     withId:(id)initialSelectionValue;

/*!
 @brief JOptionPane.showMessageDialog().
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param message Mensaje
 @param title Titulo del cuadro de di &aacute; logo
 @param messageType Tipo de mensaje
 */
+ (void)showMessageDialogWithId:(id)parentComponent
                         withId:(id)message
                   withNSString:(NSString *)title
                        withInt:(jint)messageType;

/*!
 @brief Muestra un di&aacute;logo de error de forma modal.
 @param parentComponent Componente padre. Se descarta si no es del tipo  <code> java.awt.Component </code>  en la implementaci &oacute; n Swing.
 @param message Mensaje.
 @param title T &iacute; tulo del cuadro de di &aacute; logo.
 @param messageType Tipo de mensaje.
 @param icon Icono de la ventana de di &aacute; logo.
 */
+ (void)showMessageDialogWithId:(id)parentComponent
                         withId:(id)message
                   withNSString:(NSString *)title
                        withInt:(jint)messageType
                         withId:(id)icon;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreUiAOUIFactory)

/*!
 @brief JOptionPane.PLAIN_MESSAGE.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_PLAIN_MESSAGE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_PLAIN_MESSAGE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, PLAIN_MESSAGE, jint)

/*!
 @brief JOptionPane.YES_NO_OPTION.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_YES_NO_OPTION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_YES_NO_OPTION;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, YES_NO_OPTION, jint)

/*!
 @brief JOptionPane.WARNING_MESSAGE.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_WARNING_MESSAGE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_WARNING_MESSAGE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, WARNING_MESSAGE, jint)

/*!
 @brief JOptionPane.YES_OPTION.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_YES_OPTION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_YES_OPTION;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, YES_OPTION, jint)

/*!
 @brief JOptionPane.NO_OPTION.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_NO_OPTION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_NO_OPTION;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, NO_OPTION, jint)

/*!
 @brief JOptionPane.OK_CANCEL_OPTION.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_OK_CANCEL_OPTION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_OK_CANCEL_OPTION;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, OK_CANCEL_OPTION, jint)

/*!
 @brief JOptionPane.OK_OPTION.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_OK_OPTION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_OK_OPTION;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, OK_OPTION, jint)

/*!
 @brief JOptionPane.INFORMATION_MESSAGE.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_INFORMATION_MESSAGE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_INFORMATION_MESSAGE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, INFORMATION_MESSAGE, jint)

/*!
 @brief JOptionPane.QUESTION_MESSAGE.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_QUESTION_MESSAGE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_QUESTION_MESSAGE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, QUESTION_MESSAGE, jint)

/*!
 @brief JOptionPane.ERROR_MESSAGE.
 */
inline jint EsGobAfirmaCoreUiAOUIFactory_get_ERROR_MESSAGE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_ERROR_MESSAGE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(EsGobAfirmaCoreUiAOUIFactory, ERROR_MESSAGE, jint)

FOUNDATION_EXPORT void EsGobAfirmaCoreUiAOUIFactory_setUIManagerWithEsGobAfirmaCoreUiAOUIManager_(id<EsGobAfirmaCoreUiAOUIManager> manager);

FOUNDATION_EXPORT IOSCharArray *EsGobAfirmaCoreUiAOUIFactory_getPasswordWithNSString_withId_(NSString *text, id c);

FOUNDATION_EXPORT IOSCharArray *EsGobAfirmaCoreUiAOUIFactory_getPasswordWithNSString_withId_withNSString_withBoolean_withId_(NSString *text, id icon, NSString *charset, jboolean beep, id c);

FOUNDATION_EXPORT IOSCharArray *EsGobAfirmaCoreUiAOUIFactory_getDoublePasswordWithNSString_withNSString_withId_withNSString_withBoolean_withId_(NSString *text, NSString *text2, id imageIcon, NSString *charSet, jboolean beep, id c);

FOUNDATION_EXPORT jint EsGobAfirmaCoreUiAOUIFactory_showConfirmDialogWithId_withId_withNSString_withInt_withInt_(id parentComponent, id message, NSString *title, jint optionType, jint messageType);

FOUNDATION_EXPORT void EsGobAfirmaCoreUiAOUIFactory_showMessageDialogWithId_withId_withNSString_withInt_(id parentComponent, id message, NSString *title, jint messageType);

FOUNDATION_EXPORT void EsGobAfirmaCoreUiAOUIFactory_showMessageDialogWithId_withId_withNSString_withInt_withId_(id parentComponent, id message, NSString *title, jint messageType, id icon);

FOUNDATION_EXPORT void EsGobAfirmaCoreUiAOUIFactory_showErrorMessageWithId_withNSString_withInt_withJavaLangThrowable_(id message, NSString *title, jint messageType, JavaLangThrowable *t);

FOUNDATION_EXPORT void EsGobAfirmaCoreUiAOUIFactory_showErrorMessageWithId_withId_withNSString_withInt_withJavaLangThrowable_(id parentComponent, id message, NSString *title, jint messageType, JavaLangThrowable *t);

FOUNDATION_EXPORT id EsGobAfirmaCoreUiAOUIFactory_showInputDialogWithId_withId_withNSString_withInt_withId_withNSObjectArray_withId_(id parentComponent, id message, NSString *title, jint messageType, id icon, IOSObjectArray *selectionValues, id initialSelectionValue);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreUiAOUIFactory_showCertificateSelectionDialogWithId_withEsGobAfirmaCoreUiKeyStoreDialogManager_(id parentComponent, id<EsGobAfirmaCoreUiKeyStoreDialogManager> dialogManager);

FOUNDATION_EXPORT IOSObjectArray *EsGobAfirmaCoreUiAOUIFactory_getLoadFilesWithNSString_withNSString_withNSString_withNSStringArray_withNSString_withBoolean_withBoolean_withId_withId_(NSString *dialogTitle, NSString *currentDir, NSString *filename, IOSObjectArray *extensions, NSString *description_, jboolean selectDirectory, jboolean multiSelect, id icon, id parentComponent);

FOUNDATION_EXPORT JavaIoFile *EsGobAfirmaCoreUiAOUIFactory_getSaveDataToFileWithByteArray_withNSString_withNSString_withNSString_withJavaUtilList_withId_(IOSByteArray *data, NSString *dialogTitle, NSString *currentDir, NSString *selectedFile, id<JavaUtilList> filters, id parent);

FOUNDATION_EXPORT JavaIoFile *EsGobAfirmaCoreUiAOUIFactory_getSaveDataToFileWithByteArray_withNSString_withNSString_withNSString_withJavaUtilList_withEsGobAfirmaCoreUiGenericFileFilter_withId_(IOSByteArray *data, NSString *dialogTitle, NSString *currentDir, NSString *selectedFile, id<JavaUtilList> filters, EsGobAfirmaCoreUiGenericFileFilter *defaultFilter, id parent);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreUiAOUIFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_AOUIFactory")

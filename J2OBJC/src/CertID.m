//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ocsp/CertID.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Integer.h"
#include "ASN1Object.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "AlgorithmIdentifier.h"
#include "CertID.h"
#include "DERSequence.h"
#include "J2ObjC_source.h"

#if !__has_feature(objc_arc)
#error "CertID must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1OcspCertID ()

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1OcspCertID *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1OcspCertID *new_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1OcspCertID *create_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ocsp/CertID.java"


#line 13
@implementation OrgSpongycastleAsn1OcspCertID


#line 21
- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)hashAlgorithm
                            withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)issuerNameHash
                            withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)issuerKeyHash
                                withOrgSpongycastleAsn1ASN1Integer:(OrgSpongycastleAsn1ASN1Integer *)serialNumber {
  OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_(self, hashAlgorithm, issuerNameHash, issuerKeyHash, serialNumber);
  return self;
}


#line 33
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 42
+ (OrgSpongycastleAsn1OcspCertID *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                          withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1OcspCertID_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 49
+ (OrgSpongycastleAsn1OcspCertID *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1OcspCertID_getInstanceWithId_(obj);
}


#line 64
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getHashAlgorithm {
  
#line 66
  return hashAlgorithm_;
}


#line 69
- (OrgSpongycastleAsn1ASN1OctetString *)getIssuerNameHash {
  
#line 71
  return issuerNameHash_;
}


#line 74
- (OrgSpongycastleAsn1ASN1OctetString *)getIssuerKeyHash {
  
#line 76
  return issuerKeyHash_;
}


#line 79
- (OrgSpongycastleAsn1ASN1Integer *)getSerialNumber {
  
#line 81
  return serialNumber_;
}


#line 94
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 96
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 98
  [v addWithOrgSpongycastleAsn1ASN1Encodable:hashAlgorithm_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:issuerNameHash_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:issuerKeyHash_];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:serialNumber_];
  
#line 103
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1OcspCertID;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1OcspCertID;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1OctetString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1OctetString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withOrgSpongycastleAsn1ASN1OctetString:withOrgSpongycastleAsn1ASN1OctetString:withOrgSpongycastleAsn1ASN1Integer:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[3].selector = @selector(getInstanceWithId:);
  methods[4].selector = @selector(getHashAlgorithm);
  methods[5].selector = @selector(getIssuerNameHash);
  methods[6].selector = @selector(getIssuerKeyHash);
  methods[7].selector = @selector(getSerialNumber);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hashAlgorithm_", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "issuerNameHash_", "LOrgSpongycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "issuerKeyHash_", "LOrgSpongycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "serialNumber_", "LOrgSpongycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LOrgSpongycastleAsn1ASN1OctetString;LOrgSpongycastleAsn1ASN1OctetString;LOrgSpongycastleAsn1ASN1Integer;", "LOrgSpongycastleAsn1ASN1Sequence;", "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1OcspCertID = { "CertID", "org.spongycastle.asn1.ocsp", ptrTable, methods, fields, 7, 0x1, 9, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1OcspCertID;
}

@end


#line 21
void OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1OcspCertID *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *issuerNameHash, OrgSpongycastleAsn1ASN1OctetString *issuerKeyHash, OrgSpongycastleAsn1ASN1Integer *serialNumber) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 27
  self->hashAlgorithm_ = hashAlgorithm;
  self->issuerNameHash_ = issuerNameHash;
  self->issuerKeyHash_ = issuerKeyHash;
  self->serialNumber_ = serialNumber;
}


#line 21
OrgSpongycastleAsn1OcspCertID *new_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *issuerNameHash, OrgSpongycastleAsn1ASN1OctetString *issuerKeyHash, OrgSpongycastleAsn1ASN1Integer *serialNumber) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1OcspCertID, initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_, hashAlgorithm, issuerNameHash, issuerKeyHash, serialNumber)
}


#line 21
OrgSpongycastleAsn1OcspCertID *create_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509AlgorithmIdentifier *hashAlgorithm, OrgSpongycastleAsn1ASN1OctetString *issuerNameHash, OrgSpongycastleAsn1ASN1OctetString *issuerKeyHash, OrgSpongycastleAsn1ASN1Integer *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1OcspCertID, initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Integer_, hashAlgorithm, issuerNameHash, issuerKeyHash, serialNumber)
}


#line 33
void OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1OcspCertID *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 36
  self->hashAlgorithm_ = OrgSpongycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0]);
  self->issuerNameHash_ = (OrgSpongycastleAsn1ASN1OctetString *) cast_chk([seq getObjectAtWithInt:1], [OrgSpongycastleAsn1ASN1OctetString class]);
  self->issuerKeyHash_ = (OrgSpongycastleAsn1ASN1OctetString *) cast_chk([seq getObjectAtWithInt:2], [OrgSpongycastleAsn1ASN1OctetString class]);
  self->serialNumber_ = (OrgSpongycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:3], [OrgSpongycastleAsn1ASN1Integer class]);
}


#line 33
OrgSpongycastleAsn1OcspCertID *new_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1OcspCertID, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 33
OrgSpongycastleAsn1OcspCertID *create_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1OcspCertID, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 42
OrgSpongycastleAsn1OcspCertID *OrgSpongycastleAsn1OcspCertID_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1OcspCertID_initialize();
  
#line 46
  return OrgSpongycastleAsn1OcspCertID_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1OcspCertID *OrgSpongycastleAsn1OcspCertID_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1OcspCertID_initialize();
  
#line 52
  if ([obj isKindOfClass:[OrgSpongycastleAsn1OcspCertID class]]) {
    
#line 54
    return (OrgSpongycastleAsn1OcspCertID *) obj;
  }
  else if (obj != nil) {
    
#line 58
    return new_OrgSpongycastleAsn1OcspCertID_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 61
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1OcspCertID)

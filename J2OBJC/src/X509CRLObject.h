//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/X509CRLObject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_X509CRLObject")
#ifdef RESTRICT_X509CRLObject
#define INCLUDE_ALL_X509CRLObject 0
#else
#define INCLUDE_ALL_X509CRLObject 1
#endif
#undef RESTRICT_X509CRLObject

#if !defined (OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject_) && (INCLUDE_ALL_X509CRLObject || defined(INCLUDE_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject))
#define OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject_

#define RESTRICT_JavaSecurityCertX509CRL 1
#define INCLUDE_JavaSecurityCertX509CRL 1
#include "java/security/cert/X509CRL.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecurityCertCertificate;
@class JavaSecurityCertX509CRLEntry;
@class JavaSecurityProvider;
@class JavaUtilDate;
@class JavaxSecurityAuthX500X500Principal;
@class OrgSpongycastleAsn1X509CertificateList;
@protocol JavaSecurityPrincipal;
@protocol JavaSecurityPublicKey;
@protocol JavaUtilSet;
@protocol OrgSpongycastleJcajceUtilJcaJceHelper;

/*!
 @brief The following extensions are listed in RFC 2459 as relevant to CRLs
  Authority Key Identifier
  Issuer Alternative Name
  CRL Number
  Delta CRL Indicator (critical)
  Issuing Distribution Point (critical)
 */
@interface OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject : JavaSecurityCertX509CRL

#pragma mark Public

- (jboolean)isEqual:(id)other;

- (id<JavaUtilSet>)getCriticalExtensionOIDs;

- (IOSByteArray *)getEncoded;

- (IOSByteArray *)getExtensionValueWithNSString:(NSString *)oid;

- (id<JavaSecurityPrincipal>)getIssuerDN;

- (JavaxSecurityAuthX500X500Principal *)getIssuerX500Principal;

- (JavaUtilDate *)getNextUpdate;

- (id<JavaUtilSet>)getNonCriticalExtensionOIDs;

- (JavaSecurityCertX509CRLEntry *)getRevokedCertificateWithJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (id<JavaUtilSet>)getRevokedCertificates;

- (NSString *)getSigAlgName;

- (NSString *)getSigAlgOID;

- (IOSByteArray *)getSigAlgParams;

- (IOSByteArray *)getSignature;

- (IOSByteArray *)getTBSCertList;

- (JavaUtilDate *)getThisUpdate;

- (jint)getVersion;

- (NSUInteger)hash;

/*!
 @brief Will return true if any extensions are present and marked
  as critical as we currently dont handle any extensions!
 */
- (jboolean)hasUnsupportedCriticalExtension;

/*!
 @brief Checks whether the given certificate is on this CRL.
 @param cert the certificate to check for.
 @return true if the given certificate is on this CRL,
  false otherwise.
 */
- (jboolean)isRevokedWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

/*!
 @brief Returns a string representation of this CRL.
 @return a string representation of this CRL.
 */
- (NSString *)description;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
               withJavaSecurityProvider:(JavaSecurityProvider *)sigProvider;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
                           withNSString:(NSString *)sigProvider;

#pragma mark Protected

- (instancetype)initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper:(id<OrgSpongycastleJcajceUtilJcaJceHelper>)bcHelper
                                 withOrgSpongycastleAsn1X509CertificateList:(OrgSpongycastleAsn1X509CertificateList *)c;

#pragma mark Package-Private

+ (jboolean)isIndirectCRLWithJavaSecurityCertX509CRL:(JavaSecurityCertX509CRL *)crl;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject)

FOUNDATION_EXPORT jboolean OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject_isIndirectCRLWithJavaSecurityCertX509CRL_(JavaSecurityCertX509CRL *crl);

FOUNDATION_EXPORT void OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_withOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject *self, id<OrgSpongycastleJcajceUtilJcaJceHelper> bcHelper, OrgSpongycastleAsn1X509CertificateList *c);

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject *new_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_withOrgSpongycastleAsn1X509CertificateList_(id<OrgSpongycastleJcajceUtilJcaJceHelper> bcHelper, OrgSpongycastleAsn1X509CertificateList *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject *create_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_withOrgSpongycastleAsn1X509CertificateList_(id<OrgSpongycastleJcajceUtilJcaJceHelper> bcHelper, OrgSpongycastleAsn1X509CertificateList *c);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject)

#endif

#pragma pop_macro("INCLUDE_ALL_X509CRLObject")

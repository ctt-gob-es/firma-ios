//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/cms/KeyAgreeRecipientInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_KeyAgreeRecipientInfo")
#ifdef RESTRICT_KeyAgreeRecipientInfo
#define INCLUDE_ALL_KeyAgreeRecipientInfo 0
#else
#define INCLUDE_ALL_KeyAgreeRecipientInfo 1
#endif
#undef RESTRICT_KeyAgreeRecipientInfo

#if !defined (OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_) && (INCLUDE_ALL_KeyAgreeRecipientInfo || defined(INCLUDE_OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo))
#define OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Integer;
@class OrgSpongycastleAsn1ASN1OctetString;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1CmsOriginatorIdentifierOrKey;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

/*!
 @brief <a href="http://tools.ietf.org/html/rfc5652#section-6.2.2">RFC 5652</a>:
  Content encryption key delivery mechanisms.
 <p>
  @code

  KeyAgreeRecipientInfo ::= SEQUENCE {
      version CMSVersion,  -- always set to 3
      originator [0] EXPLICIT OriginatorIdentifierOrKey,
      ukm [1] EXPLICIT UserKeyingMaterial OPTIONAL,
      keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
      recipientEncryptedKeys RecipientEncryptedKeys 
  }
  UserKeyingMaterial ::= OCTET STRING 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

/*!
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

- (instancetype)initWithOrgSpongycastleAsn1CmsOriginatorIdentifierOrKey:(OrgSpongycastleAsn1CmsOriginatorIdentifierOrKey *)originator
                                 withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)ukm
                         withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                                    withOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)recipientEncryptedKeys;

/*!
 @brief Return a KeyAgreeRecipientInfo object from a tagged object.
 @param obj the tagged object holding the object we want.
 @param explicit_ true if the object is meant to be explicitly               tagged false otherwise.
 @throw IllegalArgumentExceptionif the object held by the
           tagged object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                        withBoolean:(jboolean)explicit_;

/*!
 @brief Return a KeyAgreeRecipientInfo object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>KeyAgreeRecipientInfo</code> object 
 <li> <code>ASN1Sequence</code> input formats with KeyAgreeRecipientInfo structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getKeyEncryptionAlgorithm;

- (OrgSpongycastleAsn1CmsOriginatorIdentifierOrKey *)getOriginator;

- (OrgSpongycastleAsn1ASN1Sequence *)getRecipientEncryptedKeys;

- (OrgSpongycastleAsn1ASN1OctetString *)getUserKeyingMaterial;

- (OrgSpongycastleAsn1ASN1Integer *)getVersion;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo)

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_initWithOrgSpongycastleAsn1CmsOriginatorIdentifierOrKey_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *self, OrgSpongycastleAsn1CmsOriginatorIdentifierOrKey *originator, OrgSpongycastleAsn1ASN1OctetString *ukm, OrgSpongycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, OrgSpongycastleAsn1ASN1Sequence *recipientEncryptedKeys);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *new_OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_initWithOrgSpongycastleAsn1CmsOriginatorIdentifierOrKey_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsOriginatorIdentifierOrKey *originator, OrgSpongycastleAsn1ASN1OctetString *ukm, OrgSpongycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, OrgSpongycastleAsn1ASN1Sequence *recipientEncryptedKeys) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *create_OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_initWithOrgSpongycastleAsn1CmsOriginatorIdentifierOrKey_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsOriginatorIdentifierOrKey *originator, OrgSpongycastleAsn1ASN1OctetString *ukm, OrgSpongycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, OrgSpongycastleAsn1ASN1Sequence *recipientEncryptedKeys);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *new_OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *create_OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo *OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsKeyAgreeRecipientInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_KeyAgreeRecipientInfo")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/CryptoException.java
//

#include "CryptoException.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"

#if !__has_feature(objc_arc)
#error "CryptoException must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCryptoCryptoException () {
 @public
  JavaLangThrowable *cause_CryptoException_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoCryptoException, cause_CryptoException_, JavaLangThrowable *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/CryptoException.java"


#line 6
@implementation OrgSpongycastleCryptoCryptoException

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 14
- (instancetype)init {
  OrgSpongycastleCryptoCryptoException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 23
- (instancetype)initWithNSString:(NSString *)message {
  OrgSpongycastleCryptoCryptoException_initWithNSString_(self, message);
  return self;
}


#line 35
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgSpongycastleCryptoCryptoException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}


#line 44
- (JavaLangThrowable *)getCause {
  
#line 46
  return cause_CryptoException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[3].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_CryptoException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;", "cause" };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoCryptoException = { "CryptoException", "org.spongycastle.crypto", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoCryptoException;
}

@end


#line 14
void OrgSpongycastleCryptoCryptoException_init(OrgSpongycastleCryptoCryptoException *self) {
  JavaLangException_init(self);
}


#line 14
OrgSpongycastleCryptoCryptoException *new_OrgSpongycastleCryptoCryptoException_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoCryptoException, init)
}


#line 14
OrgSpongycastleCryptoCryptoException *create_OrgSpongycastleCryptoCryptoException_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoCryptoException, init)
}


#line 23
void OrgSpongycastleCryptoCryptoException_initWithNSString_(OrgSpongycastleCryptoCryptoException *self, NSString *message) {
  JavaLangException_initWithNSString_(self,
#line 26
  message);
}


#line 23
OrgSpongycastleCryptoCryptoException *new_OrgSpongycastleCryptoCryptoException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoCryptoException, initWithNSString_, message)
}


#line 23
OrgSpongycastleCryptoCryptoException *create_OrgSpongycastleCryptoCryptoException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoCryptoException, initWithNSString_, message)
}


#line 35
void OrgSpongycastleCryptoCryptoException_initWithNSString_withJavaLangThrowable_(OrgSpongycastleCryptoCryptoException *self, NSString *message, JavaLangThrowable *cause) {
  JavaLangException_initWithNSString_(self,
#line 39
  message);
  
#line 41
  self->cause_CryptoException_ = cause;
}


#line 35
OrgSpongycastleCryptoCryptoException *new_OrgSpongycastleCryptoCryptoException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoCryptoException, initWithNSString_withJavaLangThrowable_, message, cause)
}


#line 35
OrgSpongycastleCryptoCryptoException *create_OrgSpongycastleCryptoCryptoException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoCryptoException, initWithNSString_withJavaLangThrowable_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoCryptoException)

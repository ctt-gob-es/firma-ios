//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/TSAClient.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TSAClient")
#ifdef RESTRICT_TSAClient
#define INCLUDE_ALL_TSAClient 0
#else
#define INCLUDE_ALL_TSAClient 1
#endif
#undef RESTRICT_TSAClient

#if !defined (ComAowagieTextPdfTSAClient_) && (INCLUDE_ALL_TSAClient || defined(INCLUDE_ComAowagieTextPdfTSAClient))
#define ComAowagieTextPdfTSAClient_

@class ComAowagieTextPdfPdfPKCS7;
@class IOSByteArray;

/*!
 @brief Time Stamp Authority client (caller) interface.
 <p>
  Interface used by the PdfPKCS7 digital signature builder to call
  Time Stamp Authority providing RFC 3161 compliant time stamp token.
 @author Martin Brunecky, 07/17/2007
 @since 2.1.6
 */
@protocol ComAowagieTextPdfTSAClient < JavaObject >

/*!
 @brief Get the time stamp token size estimate.
 Implementation must return value large enough to accomodate the entire token
  returned by getTimeStampToken() _prior_ to actual getTimeStampToken() call.
 @return an estimate of the token size
 */
- (jint)getTokenSizeEstimate;

/*!
 @brief Get RFC 3161 timeStampToken.
 Method may return null indicating that timestamp should be skipped.
 @param caller PdfPKCS7 - calling PdfPKCS7 instance (in case caller needs it)
 @param imprint byte[] - data imprint to be time-stamped
 @return byte[] - encoded, TSA signed data of the timeStampToken
 @throw Exception- TSA request failed
 */
- (IOSByteArray *)getTimeStampTokenWithComAowagieTextPdfPdfPKCS7:(ComAowagieTextPdfPdfPKCS7 *)caller
                                                   withByteArray:(IOSByteArray *)imprint;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfTSAClient)

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfTSAClient)

#endif

#pragma pop_macro("INCLUDE_ALL_TSAClient")

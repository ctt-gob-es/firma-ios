//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/Rectangle.java
//

#include "Color.h"
#include "DocumentException.h"
#include "Element.h"
#include "ElementListener.h"
#include "GrayColor.h"
#include "J2ObjC_source.h"
#include "Rectangle.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"

#if !__has_feature(objc_arc)
#error "Rectangle must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextRectangle () {
 @public
  /*!
   @brief This is the color of the background of this rectangle.
   */
  HarmonyJavaAwtColor *backgroundColor_;
  /*!
   @brief Whether variable width/color borders are used.
   */
  jboolean useVariableBorders_;
  /*!
   @brief The width of the left border of this rectangle.
   */
  jfloat borderWidthLeft_;
  /*!
   @brief The width of the right border of this rectangle.
   */
  jfloat borderWidthRight_;
  /*!
   @brief The width of the top border of this rectangle.
   */
  jfloat borderWidthTop_;
  /*!
   @brief The width of the bottom border of this rectangle.
   */
  jfloat borderWidthBottom_;
  /*!
   @brief The color of the border of this rectangle.
   */
  HarmonyJavaAwtColor *borderColor_;
  /*!
   @brief The color of the left border of this rectangle.
   */
  HarmonyJavaAwtColor *borderColorLeft_;
  /*!
   @brief The color of the right border of this rectangle.
   */
  HarmonyJavaAwtColor *borderColorRight_;
  /*!
   @brief The color of the top border of this rectangle.
   */
  HarmonyJavaAwtColor *borderColorTop_;
  /*!
   @brief The color of the bottom border of this rectangle.
   */
  HarmonyJavaAwtColor *borderColorBottom_;
}

/*!
 @brief Helper function returning the border width of a specific side.
 @param variableWidthValue a variable width (could be undefined)
 @param side the border you want to check
 @return the variableWidthValue if not undefined, otherwise the borderWidth
 */
- (jfloat)getVariableBorderWidthWithFloat:(jfloat)variableWidthValue
                                  withInt:(jint)side;

/*!
 @brief Helper function updating the border flag for a side
  based on the specified width.
 A width of 0 will disable the border on that side.
  Any other width enables it.
 @param width width of border
 @param side border side constant
 */
- (void)updateBorderBasedOnWidthWithFloat:(jfloat)width
                                  withInt:(jint)side;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextRectangle, backgroundColor_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextRectangle, borderColor_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextRectangle, borderColorLeft_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextRectangle, borderColorRight_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextRectangle, borderColorTop_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextRectangle, borderColorBottom_, HarmonyJavaAwtColor *)

__attribute__((unused)) static jfloat ComAowagieTextRectangle_getVariableBorderWidthWithFloat_withInt_(ComAowagieTextRectangle *self, jfloat variableWidthValue, jint side);

__attribute__((unused)) static void ComAowagieTextRectangle_updateBorderBasedOnWidthWithFloat_withInt_(ComAowagieTextRectangle *self, jfloat width, jint side);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/Rectangle.java"


#line 72
@implementation ComAowagieTextRectangle


#line 163
- (instancetype)initWithFloat:(jfloat)llx
                    withFloat:(jfloat)lly
                    withFloat:(jfloat)urx
                    withFloat:(jfloat)ury {
  ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(self, llx, lly, urx, ury);
  return self;
}


#line 177
- (instancetype)initWithFloat:(jfloat)urx
                    withFloat:(jfloat)ury {
  ComAowagieTextRectangle_initWithFloat_withFloat_(self, urx, ury);
  return self;
}


#line 186
- (instancetype)initWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect {
  ComAowagieTextRectangle_initWithComAowagieTextRectangle_(self, rect);
  return self;
}


#line 200
- (jboolean)processWithComAowagieTextElementListener:(id<ComAowagieTextElementListener>)listener {
  @try {
    return [((id<ComAowagieTextElementListener>) nil_chk(listener)) addWithComAowagieTextElement:self];
  }
  @catch (ComAowagieTextDocumentException *de) {
    return false;
  }
}


#line 214
- (jint)type {
  
#line 216
  return ComAowagieTextElement_RECTANGLE;
}


#line 224
- (JavaUtilArrayList *)getChunks {
  
#line 226
  return new_JavaUtilArrayList_init();
}


#line 233
- (jboolean)isContent {
  
#line 235
  return true;
}


#line 242
- (jboolean)isNestable {
  
#line 244
  return false;
}


#line 254
- (void)setLeftWithFloat:(jfloat)llx {
  self->llx_ = llx;
}


#line 263
- (jfloat)getLeft {
  return self->llx_;
}


#line 273
- (jfloat)getLeftWithFloat:(jfloat)margin {
  return self->llx_ + margin;
}


#line 282
- (void)setRightWithFloat:(jfloat)urx {
  self->urx_ = urx;
}


#line 291
- (jfloat)getRight {
  return self->urx_;
}


#line 301
- (jfloat)getRightWithFloat:(jfloat)margin {
  return self->urx_ - margin;
}


#line 310
- (jfloat)getWidth {
  return self->urx_ - self->llx_;
}


#line 319
- (void)setTopWithFloat:(jfloat)ury {
  self->ury_ = ury;
}


#line 328
- (jfloat)getTop {
  return self->ury_;
}


#line 338
- (jfloat)getTopWithFloat:(jfloat)margin {
  return self->ury_ - margin;
}


#line 347
- (void)setBottomWithFloat:(jfloat)lly {
  self->lly_ = lly;
}


#line 356
- (jfloat)getBottom {
  return self->lly_;
}


#line 366
- (jfloat)getBottomWithFloat:(jfloat)margin {
  return self->lly_ + margin;
}


#line 375
- (jfloat)getHeight {
  return self->ury_ - self->lly_;
}


#line 383
- (void)normalize {
  if (self->llx_ > self->urx_) {
    jfloat a = self->llx_;
    self->llx_ = self->urx_;
    self->urx_ = a;
  }
  if (self->lly_ > self->ury_) {
    jfloat a = self->lly_;
    self->lly_ = self->ury_;
    self->ury_ = a;
  }
}


#line 403
- (jint)getRotation {
  return self->rotation_;
}


#line 413
- (ComAowagieTextRectangle *)rotate {
  ComAowagieTextRectangle *rect = new_ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(self->lly_, self->llx_, self->ury_, self->urx_);
  rect->rotation_ = self->rotation_ + 90;
  rect->rotation_ %= 360;
  return rect;
}


#line 427
- (HarmonyJavaAwtColor *)getBackgroundColor {
  return self->backgroundColor_;
}


#line 437
- (void)setBackgroundColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)backgroundColor {
  self->backgroundColor_ = backgroundColor;
}


#line 447
- (jfloat)getGrayFill {
  if ([self->backgroundColor_ isKindOfClass:[ComAowagieTextPdfGrayColor class]]) {
    return [((ComAowagieTextPdfGrayColor *) nil_chk(((ComAowagieTextPdfGrayColor *) self->backgroundColor_))) getGray];
  }
  return 0;
}


#line 459
- (void)setGrayFillWithFloat:(jfloat)value {
  self->backgroundColor_ = new_ComAowagieTextPdfGrayColor_initWithFloat_(value);
}


#line 470
- (jint)getBorder {
  return self->border_;
}


#line 479
- (jboolean)hasBorders {
  switch (self->border_) {
    case ComAowagieTextRectangle_UNDEFINED:
    case ComAowagieTextRectangle_NO_BORDER:
    return false;
    default:
    return self->borderWidth_ > 0 || self->borderWidthLeft_ > 0 ||
#line 486
    self->borderWidthRight_ > 0 || self->borderWidthTop_ > 0 || self->borderWidthBottom_ > 0;
  }
}


#line 496
- (jboolean)hasBorderWithInt:(jint)type {
  if (self->border_ == ComAowagieTextRectangle_UNDEFINED) {
    return false;
  }
  return (self->border_ & type) == type;
}


#line 512
- (void)setBorderWithInt:(jint)border {
  self->border_ = border;
}


#line 523
- (jboolean)isUseVariableBorders {
  return self->useVariableBorders_;
}


#line 532
- (void)setUseVariableBordersWithBoolean:(jboolean)useVariableBorders {
  self->useVariableBorders_ = useVariableBorders;
}


#line 542
- (void)enableBorderSideWithInt:(jint)side {
  if (self->border_ == ComAowagieTextRectangle_UNDEFINED) {
    self->border_ = 0;
  }
  self->border_ |= side;
}


#line 555
- (void)disableBorderSideWithInt:(jint)side {
  if (self->border_ == ComAowagieTextRectangle_UNDEFINED) {
    self->border_ = 0;
  }
  self->border_ &= ~side;
}


#line 569
- (jfloat)getBorderWidth {
  return self->borderWidth_;
}


#line 578
- (void)setBorderWidthWithFloat:(jfloat)borderWidth {
  self->borderWidth_ = borderWidth;
}


#line 589
- (jfloat)getVariableBorderWidthWithFloat:(jfloat)variableWidthValue
                                  withInt:(jint)side {
  return ComAowagieTextRectangle_getVariableBorderWidthWithFloat_withInt_(self, variableWidthValue, side);
}


#line 605
- (void)updateBorderBasedOnWidthWithFloat:(jfloat)width
                                  withInt:(jint)side {
  ComAowagieTextRectangle_updateBorderBasedOnWidthWithFloat_withInt_(self, width, side);
}


#line 619
- (jfloat)getBorderWidthLeft {
  return ComAowagieTextRectangle_getVariableBorderWidthWithFloat_withInt_(self, self->borderWidthLeft_, ComAowagieTextRectangle_LEFT);
}


#line 628
- (void)setBorderWidthLeftWithFloat:(jfloat)borderWidthLeft {
  self->borderWidthLeft_ = borderWidthLeft;
  ComAowagieTextRectangle_updateBorderBasedOnWidthWithFloat_withInt_(self, borderWidthLeft, ComAowagieTextRectangle_LEFT);
}


#line 638
- (jfloat)getBorderWidthRight {
  return ComAowagieTextRectangle_getVariableBorderWidthWithFloat_withInt_(self, self->borderWidthRight_, ComAowagieTextRectangle_RIGHT);
}


#line 647
- (void)setBorderWidthRightWithFloat:(jfloat)borderWidthRight {
  self->borderWidthRight_ = borderWidthRight;
  ComAowagieTextRectangle_updateBorderBasedOnWidthWithFloat_withInt_(self, borderWidthRight, ComAowagieTextRectangle_RIGHT);
}


#line 657
- (jfloat)getBorderWidthTop {
  return ComAowagieTextRectangle_getVariableBorderWidthWithFloat_withInt_(self, self->borderWidthTop_, ComAowagieTextRectangle_TOP);
}


#line 666
- (void)setBorderWidthTopWithFloat:(jfloat)borderWidthTop {
  self->borderWidthTop_ = borderWidthTop;
  ComAowagieTextRectangle_updateBorderBasedOnWidthWithFloat_withInt_(self, borderWidthTop, ComAowagieTextRectangle_TOP);
}


#line 676
- (jfloat)getBorderWidthBottom {
  return ComAowagieTextRectangle_getVariableBorderWidthWithFloat_withInt_(self, self->borderWidthBottom_, ComAowagieTextRectangle_BOTTOM);
}


#line 685
- (void)setBorderWidthBottomWithFloat:(jfloat)borderWidthBottom {
  self->borderWidthBottom_ = borderWidthBottom;
  ComAowagieTextRectangle_updateBorderBasedOnWidthWithFloat_withInt_(self, borderWidthBottom, ComAowagieTextRectangle_BOTTOM);
}


#line 697
- (HarmonyJavaAwtColor *)getBorderColor {
  return self->borderColor_;
}


#line 706
- (void)setBorderColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColor {
  self->borderColor_ = borderColor;
}


#line 715
- (HarmonyJavaAwtColor *)getBorderColorLeft {
  if (self->borderColorLeft_ == nil) {
    return self->borderColor_;
  }
  return self->borderColorLeft_;
}


#line 727
- (void)setBorderColorLeftWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorLeft {
  self->borderColorLeft_ = borderColorLeft;
}


#line 736
- (HarmonyJavaAwtColor *)getBorderColorRight {
  if (self->borderColorRight_ == nil) {
    return self->borderColor_;
  }
  return self->borderColorRight_;
}


#line 748
- (void)setBorderColorRightWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorRight {
  self->borderColorRight_ = borderColorRight;
}


#line 757
- (HarmonyJavaAwtColor *)getBorderColorTop {
  if (self->borderColorTop_ == nil) {
    return self->borderColor_;
  }
  return self->borderColorTop_;
}


#line 769
- (void)setBorderColorTopWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorTop {
  self->borderColorTop_ = borderColorTop;
}


#line 778
- (HarmonyJavaAwtColor *)getBorderColorBottom {
  if (self->borderColorBottom_ == nil) {
    return self->borderColor_;
  }
  return self->borderColorBottom_;
}


#line 790
- (void)setBorderColorBottomWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorBottom {
  self->borderColorBottom_ = borderColorBottom;
}


#line 803
- (ComAowagieTextRectangle *)rectangleWithFloat:(jfloat)top
                                      withFloat:(jfloat)bottom {
  
#line 804
  ComAowagieTextRectangle *tmp = new_ComAowagieTextRectangle_initWithComAowagieTextRectangle_(self);
  if ([self getTop] > top) {
    [tmp setTopWithFloat:top];
    [tmp disableBorderSideWithInt:ComAowagieTextRectangle_TOP];
  }
  if ([self getBottom] < bottom) {
    [tmp setBottomWithFloat:bottom];
    [tmp disableBorderSideWithInt:ComAowagieTextRectangle_BOTTOM];
  }
  return tmp;
}


#line 822
- (void)cloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect {
  self->rotation_ = ((ComAowagieTextRectangle *) nil_chk(rect))->rotation_;
  self->backgroundColor_ = rect->backgroundColor_;
  self->border_ = rect->border_;
  self->useVariableBorders_ = rect->useVariableBorders_;
  self->borderWidth_ = rect->borderWidth_;
  self->borderWidthLeft_ = rect->borderWidthLeft_;
  self->borderWidthRight_ = rect->borderWidthRight_;
  self->borderWidthTop_ = rect->borderWidthTop_;
  self->borderWidthBottom_ = rect->borderWidthBottom_;
  self->borderColor_ = rect->borderColor_;
  self->borderColorLeft_ = rect->borderColorLeft_;
  self->borderColorRight_ = rect->borderColorRight_;
  self->borderColorTop_ = rect->borderColorTop_;
  self->borderColorBottom_ = rect->borderColorBottom_;
}


#line 845
- (void)softCloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect {
  if (((ComAowagieTextRectangle *) nil_chk(rect))->rotation_ != 0) {
    self->rotation_ = rect->rotation_;
  }
  if (rect->backgroundColor_ != nil) {
    self->backgroundColor_ = rect->backgroundColor_;
  }
  if (rect->border_ != ComAowagieTextRectangle_UNDEFINED) {
    self->border_ = rect->border_;
  }
  if (self->useVariableBorders_) {
    self->useVariableBorders_ = rect->useVariableBorders_;
  }
  if (rect->borderWidth_ != ComAowagieTextRectangle_UNDEFINED) {
    self->borderWidth_ = rect->borderWidth_;
  }
  if (rect->borderWidthLeft_ != ComAowagieTextRectangle_UNDEFINED) {
    self->borderWidthLeft_ = rect->borderWidthLeft_;
  }
  if (rect->borderWidthRight_ != ComAowagieTextRectangle_UNDEFINED) {
    self->borderWidthRight_ = rect->borderWidthRight_;
  }
  if (rect->borderWidthTop_ != ComAowagieTextRectangle_UNDEFINED) {
    self->borderWidthTop_ = rect->borderWidthTop_;
  }
  if (rect->borderWidthBottom_ != ComAowagieTextRectangle_UNDEFINED) {
    self->borderWidthBottom_ = rect->borderWidthBottom_;
  }
  if (rect->borderColor_ != nil) {
    self->borderColor_ = rect->borderColor_;
  }
  if (rect->borderColorLeft_ != nil) {
    self->borderColorLeft_ = rect->borderColorLeft_;
  }
  if (rect->borderColorRight_ != nil) {
    self->borderColorRight_ = rect->borderColorRight_;
  }
  if (rect->borderColorTop_ != nil) {
    self->borderColorTop_ = rect->borderColorTop_;
  }
  if (rect->borderColorBottom_ != nil) {
    self->borderColorBottom_ = rect->borderColorBottom_;
  }
}


#line 894
- (NSString *)description {
  
#line 896
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithNSString_(@"Rectangle: ");
  (void) [buf appendWithFloat:[self getWidth]];
  (void) [buf appendWithChar:'x'];
  (void) [buf appendWithFloat:[self getHeight]];
  (void) [buf appendWithNSString:@" (rot: "];
  (void) [buf appendWithInt:self->rotation_];
  (void) [buf appendWithNSString:@" degrees)"];
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 9, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 11, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 13, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextRectangle;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 18, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x2, 25, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 27, 26, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 6, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 6, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 15, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 33, 15, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 34, 15, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 15, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColor;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 36, 15, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextRectangle;", 0x1, 37, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 38, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 40, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithFloat:withFloat:withFloat:withFloat:);
  methods[1].selector = @selector(initWithFloat:withFloat:);
  methods[2].selector = @selector(initWithComAowagieTextRectangle:);
  methods[3].selector = @selector(processWithComAowagieTextElementListener:);
  methods[4].selector = @selector(type);
  methods[5].selector = @selector(getChunks);
  methods[6].selector = @selector(isContent);
  methods[7].selector = @selector(isNestable);
  methods[8].selector = @selector(setLeftWithFloat:);
  methods[9].selector = @selector(getLeft);
  methods[10].selector = @selector(getLeftWithFloat:);
  methods[11].selector = @selector(setRightWithFloat:);
  methods[12].selector = @selector(getRight);
  methods[13].selector = @selector(getRightWithFloat:);
  methods[14].selector = @selector(getWidth);
  methods[15].selector = @selector(setTopWithFloat:);
  methods[16].selector = @selector(getTop);
  methods[17].selector = @selector(getTopWithFloat:);
  methods[18].selector = @selector(setBottomWithFloat:);
  methods[19].selector = @selector(getBottom);
  methods[20].selector = @selector(getBottomWithFloat:);
  methods[21].selector = @selector(getHeight);
  methods[22].selector = @selector(normalize);
  methods[23].selector = @selector(getRotation);
  methods[24].selector = @selector(rotate);
  methods[25].selector = @selector(getBackgroundColor);
  methods[26].selector = @selector(setBackgroundColorWithHarmonyJavaAwtColor:);
  methods[27].selector = @selector(getGrayFill);
  methods[28].selector = @selector(setGrayFillWithFloat:);
  methods[29].selector = @selector(getBorder);
  methods[30].selector = @selector(hasBorders);
  methods[31].selector = @selector(hasBorderWithInt:);
  methods[32].selector = @selector(setBorderWithInt:);
  methods[33].selector = @selector(isUseVariableBorders);
  methods[34].selector = @selector(setUseVariableBordersWithBoolean:);
  methods[35].selector = @selector(enableBorderSideWithInt:);
  methods[36].selector = @selector(disableBorderSideWithInt:);
  methods[37].selector = @selector(getBorderWidth);
  methods[38].selector = @selector(setBorderWidthWithFloat:);
  methods[39].selector = @selector(getVariableBorderWidthWithFloat:withInt:);
  methods[40].selector = @selector(updateBorderBasedOnWidthWithFloat:withInt:);
  methods[41].selector = @selector(getBorderWidthLeft);
  methods[42].selector = @selector(setBorderWidthLeftWithFloat:);
  methods[43].selector = @selector(getBorderWidthRight);
  methods[44].selector = @selector(setBorderWidthRightWithFloat:);
  methods[45].selector = @selector(getBorderWidthTop);
  methods[46].selector = @selector(setBorderWidthTopWithFloat:);
  methods[47].selector = @selector(getBorderWidthBottom);
  methods[48].selector = @selector(setBorderWidthBottomWithFloat:);
  methods[49].selector = @selector(getBorderColor);
  methods[50].selector = @selector(setBorderColorWithHarmonyJavaAwtColor:);
  methods[51].selector = @selector(getBorderColorLeft);
  methods[52].selector = @selector(setBorderColorLeftWithHarmonyJavaAwtColor:);
  methods[53].selector = @selector(getBorderColorRight);
  methods[54].selector = @selector(setBorderColorRightWithHarmonyJavaAwtColor:);
  methods[55].selector = @selector(getBorderColorTop);
  methods[56].selector = @selector(setBorderColorTopWithHarmonyJavaAwtColor:);
  methods[57].selector = @selector(getBorderColorBottom);
  methods[58].selector = @selector(setBorderColorBottomWithHarmonyJavaAwtColor:);
  methods[59].selector = @selector(rectangleWithFloat:withFloat:);
  methods[60].selector = @selector(cloneNonPositionParametersWithComAowagieTextRectangle:);
  methods[61].selector = @selector(softCloneNonPositionParametersWithComAowagieTextRectangle:);
  methods[62].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNDEFINED", "I", .constantValue.asInt = ComAowagieTextRectangle_UNDEFINED, 0x19, -1, -1, -1, -1 },
    { "TOP", "I", .constantValue.asInt = ComAowagieTextRectangle_TOP, 0x19, -1, -1, -1, -1 },
    { "BOTTOM", "I", .constantValue.asInt = ComAowagieTextRectangle_BOTTOM, 0x19, -1, -1, -1, -1 },
    { "LEFT", "I", .constantValue.asInt = ComAowagieTextRectangle_LEFT, 0x19, -1, -1, -1, -1 },
    { "RIGHT", "I", .constantValue.asInt = ComAowagieTextRectangle_RIGHT, 0x19, -1, -1, -1, -1 },
    { "NO_BORDER", "I", .constantValue.asInt = ComAowagieTextRectangle_NO_BORDER, 0x18, -1, -1, -1, -1 },
    { "BOX", "I", .constantValue.asInt = ComAowagieTextRectangle_BOX, 0x19, -1, -1, -1, -1 },
    { "llx_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "lly_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "urx_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "ury_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "rotation_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "backgroundColor_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "border_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "useVariableBorders_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderWidth_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "borderWidthLeft_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderWidthRight_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderWidthTop_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderWidthBottom_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderColor_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderColorLeft_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderColorRight_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderColorTop_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "borderColorBottom_", "LHarmonyJavaAwtColor;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "FFFF", "FF", "LComAowagieTextRectangle;", "process", "LComAowagieTextElementListener;", "setLeft", "F", "getLeft", "setRight", "getRight", "setTop", "getTop", "setBottom", "getBottom", "setBackgroundColor", "LHarmonyJavaAwtColor;", "setGrayFill", "hasBorder", "I", "setBorder", "setUseVariableBorders", "Z", "enableBorderSide", "disableBorderSide", "setBorderWidth", "getVariableBorderWidth", "FI", "updateBorderBasedOnWidth", "setBorderWidthLeft", "setBorderWidthRight", "setBorderWidthTop", "setBorderWidthBottom", "setBorderColor", "setBorderColorLeft", "setBorderColorRight", "setBorderColorTop", "setBorderColorBottom", "rectangle", "cloneNonPositionParameters", "softCloneNonPositionParameters", "toString" };
  static const J2ObjcClassInfo _ComAowagieTextRectangle = { "Rectangle", "com.aowagie.text", ptrTable, methods, fields, 7, 0x1, 63, 25, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextRectangle;
}

@end


#line 163
void ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(ComAowagieTextRectangle *self, jfloat llx, jfloat lly, jfloat urx, jfloat ury) {
  NSObject_init(self);
  self->rotation_ =
#line 112
  0;
  self->backgroundColor_ =
#line 115
  nil;
  self->border_ = ComAowagieTextRectangle_UNDEFINED;
  self->useVariableBorders_ =
#line 121
  false;
  self->borderWidth_ = ComAowagieTextRectangle_UNDEFINED;
  self->borderWidthLeft_ = ComAowagieTextRectangle_UNDEFINED;
  self->borderWidthRight_ = ComAowagieTextRectangle_UNDEFINED;
  self->borderWidthTop_ = ComAowagieTextRectangle_UNDEFINED;
  self->borderWidthBottom_ = ComAowagieTextRectangle_UNDEFINED;
  self->borderColor_ =
#line 139
  nil;
  self->borderColorLeft_ =
#line 142
  nil;
  self->borderColorRight_ =
#line 145
  nil;
  self->borderColorTop_ =
#line 148
  nil;
  self->borderColorBottom_ =
#line 151
  nil;
  
#line 164
  self->llx_ = llx;
  self->lly_ = lly;
  self->urx_ = urx;
  self->ury_ = ury;
}


#line 163
ComAowagieTextRectangle *new_ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(jfloat llx, jfloat lly, jfloat urx, jfloat ury) {
  J2OBJC_NEW_IMPL(ComAowagieTextRectangle, initWithFloat_withFloat_withFloat_withFloat_, llx, lly, urx, ury)
}


#line 163
ComAowagieTextRectangle *create_ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(jfloat llx, jfloat lly, jfloat urx, jfloat ury) {
  J2OBJC_CREATE_IMPL(ComAowagieTextRectangle, initWithFloat_withFloat_withFloat_withFloat_, llx, lly, urx, ury)
}


#line 177
void ComAowagieTextRectangle_initWithFloat_withFloat_(ComAowagieTextRectangle *self, jfloat urx, jfloat ury) {
  ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(self, 0, 0, urx, ury);
}


#line 177
ComAowagieTextRectangle *new_ComAowagieTextRectangle_initWithFloat_withFloat_(jfloat urx, jfloat ury) {
  J2OBJC_NEW_IMPL(ComAowagieTextRectangle, initWithFloat_withFloat_, urx, ury)
}


#line 177
ComAowagieTextRectangle *create_ComAowagieTextRectangle_initWithFloat_withFloat_(jfloat urx, jfloat ury) {
  J2OBJC_CREATE_IMPL(ComAowagieTextRectangle, initWithFloat_withFloat_, urx, ury)
}


#line 186
void ComAowagieTextRectangle_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *self, ComAowagieTextRectangle *rect) {
  ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(self, ((ComAowagieTextRectangle *) nil_chk(rect))->llx_, rect->lly_, rect->urx_, rect->ury_);
  [self cloneNonPositionParametersWithComAowagieTextRectangle:rect];
}


#line 186
ComAowagieTextRectangle *new_ComAowagieTextRectangle_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *rect) {
  J2OBJC_NEW_IMPL(ComAowagieTextRectangle, initWithComAowagieTextRectangle_, rect)
}


#line 186
ComAowagieTextRectangle *create_ComAowagieTextRectangle_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *rect) {
  J2OBJC_CREATE_IMPL(ComAowagieTextRectangle, initWithComAowagieTextRectangle_, rect)
}


#line 589
jfloat ComAowagieTextRectangle_getVariableBorderWidthWithFloat_withInt_(ComAowagieTextRectangle *self, jfloat variableWidthValue, jint side) {
  if ((self->border_ & side) != 0) {
    return variableWidthValue != ComAowagieTextRectangle_UNDEFINED ? variableWidthValue : self->borderWidth_;
  }
  return 0;
}


#line 605
void ComAowagieTextRectangle_updateBorderBasedOnWidthWithFloat_withInt_(ComAowagieTextRectangle *self, jfloat width, jint side) {
  self->useVariableBorders_ = true;
  if (width > 0) {
    [self enableBorderSideWithInt:side];
  }
  else {
    
#line 610
    [self disableBorderSideWithInt:side];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextRectangle)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/X509AttributeCertificateHolder.java
//

#include "ASN1Encodable.h"
#include "ASN1GeneralizedTime.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "AttCertIssuer.h"
#include "AttCertValidityPeriod.h"
#include "AttributeCertificate.h"
#include "AttributeCertificateHolder.h"
#include "AttributeCertificateInfo.h"
#include "AttributeCertificateIssuer.h"
#include "BCAttribute.h"
#include "CertException.h"
#include "CertIOException.h"
#include "CertUtils.h"
#include "ContentVerifier.h"
#include "ContentVerifierProvider.h"
#include "DERBitString.h"
#include "DEROutputStream.h"
#include "Extension.h"
#include "Extensions.h"
#include "Holder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "X509AttributeCertificateHolder.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "java/util/Set.h"

#if !__has_feature(objc_arc)
#error "X509AttributeCertificateHolder must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCertX509AttributeCertificateHolder () {
 @public
  OrgSpongycastleAsn1X509AttributeCertificate *attrCert_;
  OrgSpongycastleAsn1X509Extensions *extensions_;
}

+ (OrgSpongycastleAsn1X509AttributeCertificate *)parseBytesWithByteArray:(IOSByteArray *)certEncoding;

- (void)init__WithOrgSpongycastleAsn1X509AttributeCertificate:(OrgSpongycastleAsn1X509AttributeCertificate *)attrCert OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCertX509AttributeCertificateHolder, attrCert_, OrgSpongycastleAsn1X509AttributeCertificate *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCertX509AttributeCertificateHolder, extensions_, OrgSpongycastleAsn1X509Extensions *)

inline jlong OrgSpongycastleCertX509AttributeCertificateHolder_get_serialVersionUID(void);
#define OrgSpongycastleCertX509AttributeCertificateHolder_serialVersionUID 20170722001LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCertX509AttributeCertificateHolder, serialVersionUID, jlong)

inline IOSObjectArray *OrgSpongycastleCertX509AttributeCertificateHolder_get_EMPTY_ARRAY(void);
inline IOSObjectArray *OrgSpongycastleCertX509AttributeCertificateHolder_set_EMPTY_ARRAY(IOSObjectArray *value);
static IOSObjectArray *OrgSpongycastleCertX509AttributeCertificateHolder_EMPTY_ARRAY;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCertX509AttributeCertificateHolder, EMPTY_ARRAY, IOSObjectArray *)

__attribute__((unused)) static OrgSpongycastleAsn1X509AttributeCertificate *OrgSpongycastleCertX509AttributeCertificateHolder_parseBytesWithByteArray_(IOSByteArray *certEncoding);

__attribute__((unused)) static void OrgSpongycastleCertX509AttributeCertificateHolder_init__WithOrgSpongycastleAsn1X509AttributeCertificate_(OrgSpongycastleCertX509AttributeCertificateHolder *self, OrgSpongycastleAsn1X509AttributeCertificate *attrCert);

__attribute__((unused)) static void OrgSpongycastleCertX509AttributeCertificateHolder_readObjectWithJavaIoObjectInputStream_(OrgSpongycastleCertX509AttributeCertificateHolder *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgSpongycastleCertX509AttributeCertificateHolder_writeObjectWithJavaIoObjectOutputStream_(OrgSpongycastleCertX509AttributeCertificateHolder *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/X509AttributeCertificateHolder.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCertX509AttributeCertificateHolder)


#line 31
@implementation OrgSpongycastleCertX509AttributeCertificateHolder


#line 41
+ (OrgSpongycastleAsn1X509AttributeCertificate *)parseBytesWithByteArray:(IOSByteArray *)certEncoding {
  return OrgSpongycastleCertX509AttributeCertificateHolder_parseBytesWithByteArray_(certEncoding);
}


#line 64
- (instancetype)initWithByteArray:(IOSByteArray *)certEncoding {
  OrgSpongycastleCertX509AttributeCertificateHolder_initWithByteArray_(self, certEncoding);
  return self;
}


#line 75
- (instancetype)initWithOrgSpongycastleAsn1X509AttributeCertificate:(OrgSpongycastleAsn1X509AttributeCertificate *)attrCert {
  OrgSpongycastleCertX509AttributeCertificateHolder_initWithOrgSpongycastleAsn1X509AttributeCertificate_(self, attrCert);
  return self;
}

- (void)init__WithOrgSpongycastleAsn1X509AttributeCertificate:(OrgSpongycastleAsn1X509AttributeCertificate *)attrCert {
  OrgSpongycastleCertX509AttributeCertificateHolder_init__WithOrgSpongycastleAsn1X509AttributeCertificate_(self, attrCert);
}


#line 92
- (IOSByteArray *)getEncoded {
  
#line 95
  return [((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getEncoded];
}

- (jint)getVersion {
  
#line 100
  return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getVersion])) getValue])) intValue] + 1;
}


#line 108
- (JavaMathBigInteger *)getSerialNumber {
  
#line 110
  return [((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getSerialNumber])) getValue];
}


#line 118
- (OrgSpongycastleCertAttributeCertificateHolder *)getHolder {
  
#line 120
  return new_OrgSpongycastleCertAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_((OrgSpongycastleAsn1ASN1Sequence *) cast_chk([((OrgSpongycastleAsn1X509Holder *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getHolder])) toASN1Primitive], [OrgSpongycastleAsn1ASN1Sequence class]));
}


#line 128
- (OrgSpongycastleCertAttributeCertificateIssuer *)getIssuer {
  
#line 130
  return new_OrgSpongycastleCertAttributeCertificateIssuer_initWithOrgSpongycastleAsn1X509AttCertIssuer_([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getIssuer]);
}


#line 138
- (JavaUtilDate *)getNotBefore {
  
#line 140
  return OrgSpongycastleCertCertUtils_recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_([((OrgSpongycastleAsn1X509AttCertValidityPeriod *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getAttrCertValidityPeriod])) getNotBeforeTime]);
}


#line 148
- (JavaUtilDate *)getNotAfter {
  
#line 150
  return OrgSpongycastleCertCertUtils_recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_([((OrgSpongycastleAsn1X509AttCertValidityPeriod *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getAttrCertValidityPeriod])) getNotAfterTime]);
}


#line 158
- (IOSObjectArray *)getAttributes {
  
#line 160
  OrgSpongycastleAsn1ASN1Sequence *seq = [((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getAttributes];
  IOSObjectArray *attrs = [IOSObjectArray newArrayWithLength:[((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] type:OrgSpongycastleAsn1X509BCAttribute_class_()];
  
#line 163
  for (jint i = 0; i != [seq size]; i++) {
    
#line 165
    (void) IOSObjectArray_Set(attrs, i, OrgSpongycastleAsn1X509BCAttribute_getInstanceWithId_([seq getObjectAtWithInt:i]));
  }
  
#line 168
  return attrs;
}


#line 177
- (IOSObjectArray *)getAttributesWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)type {
  
#line 179
  OrgSpongycastleAsn1ASN1Sequence *seq = [((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getAttributes];
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  
#line 182
  for (jint i = 0; i != [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size]; i++) {
    
#line 184
    OrgSpongycastleAsn1X509BCAttribute *attr = OrgSpongycastleAsn1X509BCAttribute_getInstanceWithId_([seq getObjectAtWithInt:i]);
    if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509BCAttribute *) nil_chk(attr)) getAttrType])) isEqual:type]) {
      
#line 187
      [list addWithId:attr];
    }
  }
  
#line 191
  if ([list size] == 0) {
    
#line 193
    return OrgSpongycastleCertX509AttributeCertificateHolder_EMPTY_ARRAY;
  }
  
#line 196
  return (IOSObjectArray *) cast_check([list toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[list size] type:OrgSpongycastleAsn1X509BCAttribute_class_()]], IOSClass_arrayType(OrgSpongycastleAsn1X509BCAttribute_class_(), 1));
}


#line 204
- (jboolean)hasExtensions {
  
#line 206
  return extensions_ != nil;
}


#line 216
- (OrgSpongycastleAsn1X509Extension *)getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 218
  if (extensions_ != nil) {
    
#line 220
    return [extensions_ getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid];
  }
  
#line 223
  return nil;
}


#line 231
- (OrgSpongycastleAsn1X509Extensions *)getExtensions {
  
#line 233
  return extensions_;
}


#line 242
- (id<JavaUtilList>)getExtensionOIDs {
  
#line 244
  return OrgSpongycastleCertCertUtils_getExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions_);
}


#line 253
- (id<JavaUtilSet>)getCriticalExtensionOIDs {
  
#line 255
  return OrgSpongycastleCertCertUtils_getCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions_);
}


#line 264
- (id<JavaUtilSet>)getNonCriticalExtensionOIDs {
  
#line 266
  return OrgSpongycastleCertCertUtils_getNonCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions_);
}


#line 269
- (IOSBooleanArray *)getIssuerUniqueID {
  
#line 271
  return OrgSpongycastleCertCertUtils_bitStringToBooleanWithOrgSpongycastleAsn1DERBitString_([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getIssuerUniqueID]);
}


#line 279
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm {
  
#line 281
  return [((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getSignatureAlgorithm];
}


#line 289
- (IOSByteArray *)getSignature {
  
#line 291
  return [((OrgSpongycastleAsn1DERBitString *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getSignatureValue])) getOctets];
}


#line 299
- (OrgSpongycastleAsn1X509AttributeCertificate *)toASN1Structure {
  
#line 301
  return attrCert_;
}


#line 310
- (jboolean)isValidOnWithJavaUtilDate:(JavaUtilDate *)date {
  
#line 312
  OrgSpongycastleAsn1X509AttCertValidityPeriod *certValidityPeriod = [((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo])) getAttrCertValidityPeriod];
  
#line 314
  return ![((JavaUtilDate *) nil_chk(date)) beforeWithJavaUtilDate:OrgSpongycastleCertCertUtils_recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_([((OrgSpongycastleAsn1X509AttCertValidityPeriod *) nil_chk(certValidityPeriod)) getNotBeforeTime])] && ![date afterWithJavaUtilDate:OrgSpongycastleCertCertUtils_recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_([certValidityPeriod getNotAfterTime])];
}


#line 324
- (jboolean)isSignatureValidWithOrgSpongycastleOperatorContentVerifierProvider:(id<OrgSpongycastleOperatorContentVerifierProvider>)verifierProvider {
  
#line 327
  OrgSpongycastleAsn1X509AttributeCertificateInfo *acinfo = [((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getAcinfo];
  
#line 329
  if (!OrgSpongycastleCertCertUtils_isAlgIdEqualWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_([((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk(acinfo)) getSignature], [((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert_)) getSignatureAlgorithm])) {
    
#line 331
    @throw new_OrgSpongycastleCertCertException_initWithNSString_(@"signature invalid - algorithm identifier mismatch");
  }
  
#line 334
  id<OrgSpongycastleOperatorContentVerifier> verifier;
  
#line 336
  @try {
    
#line 338
    verifier = [((id<OrgSpongycastleOperatorContentVerifierProvider>) nil_chk(verifierProvider)) getWithOrgSpongycastleAsn1X509AlgorithmIdentifier:([acinfo getSignature])];
    
#line 340
    JavaIoOutputStream *sOut = [((id<OrgSpongycastleOperatorContentVerifier>) nil_chk(verifier)) getOutputStream];
    OrgSpongycastleAsn1DEROutputStream *dOut = new_OrgSpongycastleAsn1DEROutputStream_initWithJavaIoOutputStream_(sOut);
    
#line 343
    [dOut writeObjectWithOrgSpongycastleAsn1ASN1Encodable:acinfo];
    
#line 345
    [((JavaIoOutputStream *) nil_chk(sOut)) close];
  }
  @catch (JavaLangException *e) {
    
#line 349
    @throw new_OrgSpongycastleCertCertException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"unable to process signature: ", [e getMessage]), e);
  }
  
#line 352
  return [((id<OrgSpongycastleOperatorContentVerifier>) nil_chk(verifier)) verifyWithByteArray:[self getSignature]];
}


#line 355
- (jboolean)isEqual:(id)o {
  
#line 358
  if (JreObjectEqualsEquals(o, self)) {
    
#line 360
    return true;
  }
  
#line 363
  if (!([o isKindOfClass:[OrgSpongycastleCertX509AttributeCertificateHolder class]])) {
    
#line 365
    return false;
  }
  
#line 368
  OrgSpongycastleCertX509AttributeCertificateHolder *other = (OrgSpongycastleCertX509AttributeCertificateHolder *) cast_chk(o, [OrgSpongycastleCertX509AttributeCertificateHolder class]);
  
#line 370
  return [((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(self->attrCert_)) isEqual:((OrgSpongycastleCertX509AttributeCertificateHolder *) nil_chk(other))->attrCert_];
}


#line 373
- (NSUInteger)hash {
  
#line 375
  return ((jint) [((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(self->attrCert_)) hash]);
}


#line 378
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgSpongycastleCertX509AttributeCertificateHolder_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 387
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgSpongycastleCertX509AttributeCertificateHolder_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1X509AttributeCertificate;", 0xa, 0, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCertAttributeCertificateHolder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCertAttributeCertificateIssuer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1X509BCAttribute;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1X509BCAttribute;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Extension;", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Extensions;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AttributeCertificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, 12, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 17, 18, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 20, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(parseBytesWithByteArray:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1X509AttributeCertificate:);
  methods[3].selector = @selector(init__WithOrgSpongycastleAsn1X509AttributeCertificate:);
  methods[4].selector = @selector(getEncoded);
  methods[5].selector = @selector(getVersion);
  methods[6].selector = @selector(getSerialNumber);
  methods[7].selector = @selector(getHolder);
  methods[8].selector = @selector(getIssuer);
  methods[9].selector = @selector(getNotBefore);
  methods[10].selector = @selector(getNotAfter);
  methods[11].selector = @selector(getAttributes);
  methods[12].selector = @selector(getAttributesWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[13].selector = @selector(hasExtensions);
  methods[14].selector = @selector(getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[15].selector = @selector(getExtensions);
  methods[16].selector = @selector(getExtensionOIDs);
  methods[17].selector = @selector(getCriticalExtensionOIDs);
  methods[18].selector = @selector(getNonCriticalExtensionOIDs);
  methods[19].selector = @selector(getIssuerUniqueID);
  methods[20].selector = @selector(getSignatureAlgorithm);
  methods[21].selector = @selector(getSignature);
  methods[22].selector = @selector(toASN1Structure);
  methods[23].selector = @selector(isValidOnWithJavaUtilDate:);
  methods[24].selector = @selector(isSignatureValidWithOrgSpongycastleOperatorContentVerifierProvider:);
  methods[25].selector = @selector(isEqual:);
  methods[26].selector = @selector(hash);
  methods[27].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[28].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgSpongycastleCertX509AttributeCertificateHolder_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "EMPTY_ARRAY", "[LOrgSpongycastleAsn1X509BCAttribute;", .constantValue.asLong = 0, 0xa, -1, 21, -1, -1 },
    { "attrCert_", "LOrgSpongycastleAsn1X509AttributeCertificate;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "extensions_", "LOrgSpongycastleAsn1X509Extensions;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "parseBytes", "[B", "LJavaIoIOException;", "LOrgSpongycastleAsn1X509AttributeCertificate;", "init", "getAttributes", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", "getExtension", "isValidOn", "LJavaUtilDate;", "isSignatureValid", "LOrgSpongycastleOperatorContentVerifierProvider;", "LOrgSpongycastleCertCertException;", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;", &OrgSpongycastleCertX509AttributeCertificateHolder_EMPTY_ARRAY };
  static const J2ObjcClassInfo _OrgSpongycastleCertX509AttributeCertificateHolder = { "X509AttributeCertificateHolder", "org.spongycastle.cert", ptrTable, methods, fields, 7, 0x1, 29, 4, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertX509AttributeCertificateHolder;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCertX509AttributeCertificateHolder class]) {
    OrgSpongycastleCertX509AttributeCertificateHolder_EMPTY_ARRAY = [IOSObjectArray newArrayWithLength:
#line 36
    0 type:OrgSpongycastleAsn1X509BCAttribute_class_()];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCertX509AttributeCertificateHolder)
  }
}

@end


#line 41
OrgSpongycastleAsn1X509AttributeCertificate *OrgSpongycastleCertX509AttributeCertificateHolder_parseBytesWithByteArray_(IOSByteArray *certEncoding) {
  OrgSpongycastleCertX509AttributeCertificateHolder_initialize();
  
#line 44
  @try {
    
#line 46
    return OrgSpongycastleAsn1X509AttributeCertificate_getInstanceWithId_(OrgSpongycastleCertCertUtils_parseNonEmptyASN1WithByteArray_(certEncoding));
  }
  @catch (JavaLangClassCastException *e) {
    
#line 50
    @throw new_OrgSpongycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"malformed data: ", [e getMessage]), e);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    
#line 54
    @throw new_OrgSpongycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"malformed data: ", [e getMessage]), e);
  }
}


#line 64
void OrgSpongycastleCertX509AttributeCertificateHolder_initWithByteArray_(OrgSpongycastleCertX509AttributeCertificateHolder *self, IOSByteArray *certEncoding) {
  OrgSpongycastleCertX509AttributeCertificateHolder_initWithOrgSpongycastleAsn1X509AttributeCertificate_(self, OrgSpongycastleCertX509AttributeCertificateHolder_parseBytesWithByteArray_(
#line 67
  certEncoding));
}


#line 64
OrgSpongycastleCertX509AttributeCertificateHolder *new_OrgSpongycastleCertX509AttributeCertificateHolder_initWithByteArray_(IOSByteArray *certEncoding) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertX509AttributeCertificateHolder, initWithByteArray_, certEncoding)
}


#line 64
OrgSpongycastleCertX509AttributeCertificateHolder *create_OrgSpongycastleCertX509AttributeCertificateHolder_initWithByteArray_(IOSByteArray *certEncoding) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertX509AttributeCertificateHolder, initWithByteArray_, certEncoding)
}


#line 75
void OrgSpongycastleCertX509AttributeCertificateHolder_initWithOrgSpongycastleAsn1X509AttributeCertificate_(OrgSpongycastleCertX509AttributeCertificateHolder *self, OrgSpongycastleAsn1X509AttributeCertificate *attrCert) {
  NSObject_init(self);
  OrgSpongycastleCertX509AttributeCertificateHolder_init__WithOrgSpongycastleAsn1X509AttributeCertificate_(self, attrCert);
}


#line 75
OrgSpongycastleCertX509AttributeCertificateHolder *new_OrgSpongycastleCertX509AttributeCertificateHolder_initWithOrgSpongycastleAsn1X509AttributeCertificate_(OrgSpongycastleAsn1X509AttributeCertificate *attrCert) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertX509AttributeCertificateHolder, initWithOrgSpongycastleAsn1X509AttributeCertificate_, attrCert)
}


#line 75
OrgSpongycastleCertX509AttributeCertificateHolder *create_OrgSpongycastleCertX509AttributeCertificateHolder_initWithOrgSpongycastleAsn1X509AttributeCertificate_(OrgSpongycastleAsn1X509AttributeCertificate *attrCert) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertX509AttributeCertificateHolder, initWithOrgSpongycastleAsn1X509AttributeCertificate_, attrCert)
}


#line 80
void OrgSpongycastleCertX509AttributeCertificateHolder_init__WithOrgSpongycastleAsn1X509AttributeCertificate_(OrgSpongycastleCertX509AttributeCertificateHolder *self, OrgSpongycastleAsn1X509AttributeCertificate *attrCert) {
  
#line 82
  self->attrCert_ = attrCert;
  self->extensions_ = [((OrgSpongycastleAsn1X509AttributeCertificateInfo *) nil_chk([((OrgSpongycastleAsn1X509AttributeCertificate *) nil_chk(attrCert)) getAcinfo])) getExtensions];
}


#line 378
void OrgSpongycastleCertX509AttributeCertificateHolder_readObjectWithJavaIoObjectInputStream_(OrgSpongycastleCertX509AttributeCertificateHolder *self, JavaIoObjectInputStream *inArg) {
  
#line 382
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 384
  OrgSpongycastleCertX509AttributeCertificateHolder_init__WithOrgSpongycastleAsn1X509AttributeCertificate_(self, OrgSpongycastleAsn1X509AttributeCertificate_getInstanceWithId_([inArg readObject]));
}

void OrgSpongycastleCertX509AttributeCertificateHolder_writeObjectWithJavaIoObjectOutputStream_(OrgSpongycastleCertX509AttributeCertificateHolder *self, JavaIoObjectOutputStream *outArg) {
  
#line 391
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 393
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertX509AttributeCertificateHolder)

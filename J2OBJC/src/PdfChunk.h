//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfChunk.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfChunk")
#ifdef RESTRICT_PdfChunk
#define INCLUDE_ALL_PdfChunk 0
#else
#define INCLUDE_ALL_PdfChunk 1
#endif
#undef RESTRICT_PdfChunk

#if !defined (ComAowagieTextPdfPdfChunk_) && (INCLUDE_ALL_PdfChunk || defined(INCLUDE_ComAowagieTextPdfPdfChunk))
#define ComAowagieTextPdfPdfChunk_

@class ComAowagieTextChunk;
@class ComAowagieTextImage;
@class ComAowagieTextPdfPdfAction;
@class ComAowagieTextPdfPdfFont;
@class HarmonyJavaAwtColor;
@class IOSCharArray;
@class IOSObjectArray;

/*!
 @brief A <CODE>PdfChunk</CODE> is the PDF translation of a <CODE>Chunk</CODE>.
 <P>
  A <CODE>PdfChunk</CODE> is a <CODE>PdfString</CODE> in a certain 
 <CODE>PdfFont</CODE> and <CODE>Color</CODE>.
 - seealso: PdfString
 - seealso: com.aowagie.text.Chunk
 - seealso: com.aowagie.text.Font
 */
@interface ComAowagieTextPdfPdfChunk : NSObject {
 @public
  /*!
   @brief The font for this <CODE>PdfChunk</CODE>.
   */
  ComAowagieTextPdfPdfFont *font_;
  /*!
   @brief Indicates if the height and offset of the Image has to be taken into account
   */
  jboolean changeLeading_;
}

#pragma mark Public

/*!
 @brief Gets the text displacement relative to the baseline.
 @return a displacement in points
 */
- (jfloat)getTextRise;

/*!
 @brief Checks if the <CODE>PdfChunk</CODE> split was caused by a newline.
 @return <CODE>true</CODE> if the <CODE>PdfChunk</CODE> split was caused by a newline.
 */
- (jboolean)isNewlineSplit;

/*!
 - seealso: java.lang.Object#toString()
 */
- (NSString *)description;

#pragma mark Package-Private

/*!
 @brief Constructs a <CODE>PdfChunk</CODE>-object.
 @param chunk the original  <CODE> Chunk </CODE> -object
 @param action the  <CODE> PdfAction </CODE>  if the  <CODE> Chunk </CODE>  comes from an  <CODE> Anchor
  </CODE>
 */
- (instancetype)initWithComAowagieTextChunk:(ComAowagieTextChunk *)chunk
             withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action;

/*!
 @brief Constructs a <CODE>PdfChunk</CODE>-object.
 @param string the content of the  <CODE> PdfChunk </CODE> -object
 @param other Chunk with the same style you want for the new Chunk
 */
- (instancetype)initWithNSString:(NSString *)string
   withComAowagieTextPdfPdfChunk:(ComAowagieTextPdfPdfChunk *)other;

/*!
 @brief Correction for the tab position based on the left starting position.
 @param newValue the new value for the left X.
 @since 2.1.2
 */
- (void)adjustLeftWithFloat:(jfloat)newValue;

/*!
 @brief Returns the color of this <CODE>Chunk</CODE>.
 @return a <CODE>Color</CODE>
 */
- (HarmonyJavaAwtColor *)color;

/*!
 @brief Returns the font of this <CODE>Chunk</CODE>.
 @return a <CODE>PdfFont</CODE>
 */
- (ComAowagieTextPdfPdfFont *)font;

/*!
 @brief Gets an attribute.The search is made in <CODE>attributes</CODE>
  and <CODE>noStroke</CODE>.
 @param name the attribute key
 @return the attribute value or null if not found
 */
- (id)getAttributeWithNSString:(NSString *)name;

- (jfloat)getCharWidthWithInt:(jint)c;

/*!
 @brief Gets the image in the <CODE>PdfChunk</CODE>.
 @return the image or <CODE>null</CODE>
 */
- (ComAowagieTextImage *)getImage;

/*!
 @brief Gets the image offset in the x direction
 @return the image offset in the x direction
 */
- (jfloat)getImageOffsetX;

/*!
 @brief Gets the image offset in the y direction
 @return Gets the image offset in the y direction
 */
- (jfloat)getImageOffsetY;

/*!
 @brief Gets the Unicode equivalent to a CID.
 The (inexistent) CID FF00 is translated as '\n'.
  It has only meaning with CJK fonts with Identity encoding.
 @param c the CID code
 @return the Unicode equivalent
 */
- (jint)getUnicodeEquivalentWithInt:(jint)c;

/*!
 @brief Gets the width of the <CODE>PdfChunk</CODE> taking into account the
  extra character and word spacing.
 @param charSpacing the extra character spacing
 @param wordSpacing the extra word spacing
 @return the calculated width
 */
- (jfloat)getWidthCorrectedWithFloat:(jfloat)charSpacing
                           withFloat:(jfloat)wordSpacing;

/*!
 @brief Checks if the attribute exists.
 @param name the attribute key
 @return <CODE>true</CODE> if the attribute exists
 */
- (jboolean)isAttributeWithNSString:(NSString *)name;

- (jboolean)isExtSplitCharacterWithInt:(jint)start
                               withInt:(jint)current
                               withInt:(jint)end
                         withCharArray:(IOSCharArray *)cc
    withComAowagieTextPdfPdfChunkArray:(IOSObjectArray *)ck;

/*!
 @brief Checks if this <CODE>PdfChunk</CODE> is a horizontal Separator Chunk.
 @return true if this chunk is a horizontal separator.
 @since 2.1.2
 */
- (jboolean)isHorizontalSeparator;

/*!
 @brief Checks if there is an image in the <CODE>PdfChunk</CODE>.
 @return <CODE>true</CODE> if an image is present
 */
- (jboolean)isImage;

/*!
 @brief Checks if this <CODE>PdfChunk</CODE> is a Separator Chunk.
 @return true if this chunk is a separator.
 @since 2.1.2
 */
- (jboolean)isSeparator;

/*!
 @brief Tells you if this string is in Chinese, Japanese, Korean or Identity-H.
 @return true if the Chunk has a special encoding
 */
- (jboolean)isSpecialEncoding;

/*!
 @brief Checks if this <CODE>PdfChunk</CODE> needs some special metrics handling.
 @return <CODE>true</CODE> if this <CODE>PdfChunk</CODE> needs some special metrics handling.
 */
- (jboolean)isStroked;

/*!
 @brief Checks if this <CODE>PdfChunk</CODE> is a tab Chunk.
 @return true if this chunk is a separator.
 @since 2.1.2
 */
- (jboolean)isTab;

- (jint)length;

- (jint)lengthUtf32;

+ (jboolean)noPrintWithInt:(jint)c;

/*!
 @brief sets the value.
 @param value content of the Chunk
 */
- (void)setValueWithNSString:(NSString *)value;

/*!
 @brief Splits this <CODE>PdfChunk</CODE> if it's too long for the given width.
 <P>
  Returns <VAR>null</VAR> if the <CODE>PdfChunk</CODE> wasn't truncated.
 @param width a given width
 @return the <CODE>PdfChunk</CODE> that doesn't fit into the width.
 */
- (ComAowagieTextPdfPdfChunk *)splitWithFloat:(jfloat)width;

/*!
 @brief Trims the last space.
 @return the width of the space trimmed, otherwise 0
 */
- (jfloat)trimLastSpace;

/*!
 @brief Truncates this <CODE>PdfChunk</CODE> if it's too long for the given width.
 <P>
  Returns <VAR>null</VAR> if the <CODE>PdfChunk</CODE> wasn't truncated.
 @param width a given width
 @return the <CODE>PdfChunk</CODE> that doesn't fit into the width.
 */
- (ComAowagieTextPdfPdfChunk *)truncateWithFloat:(jfloat)width;

/*!
 @brief Returns the width of this <CODE>PdfChunk</CODE>.
 @return a width
 */
- (jfloat)width;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfPdfChunk)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfChunk, font_, ComAowagieTextPdfPdfFont *)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfChunk_initWithNSString_withComAowagieTextPdfPdfChunk_(ComAowagieTextPdfPdfChunk *self, NSString *string, ComAowagieTextPdfPdfChunk *other);

FOUNDATION_EXPORT ComAowagieTextPdfPdfChunk *new_ComAowagieTextPdfPdfChunk_initWithNSString_withComAowagieTextPdfPdfChunk_(NSString *string, ComAowagieTextPdfPdfChunk *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfChunk *create_ComAowagieTextPdfPdfChunk_initWithNSString_withComAowagieTextPdfPdfChunk_(NSString *string, ComAowagieTextPdfPdfChunk *other);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfChunk_initWithComAowagieTextChunk_withComAowagieTextPdfPdfAction_(ComAowagieTextPdfPdfChunk *self, ComAowagieTextChunk *chunk, ComAowagieTextPdfPdfAction *action);

FOUNDATION_EXPORT ComAowagieTextPdfPdfChunk *new_ComAowagieTextPdfPdfChunk_initWithComAowagieTextChunk_withComAowagieTextPdfPdfAction_(ComAowagieTextChunk *chunk, ComAowagieTextPdfPdfAction *action) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfChunk *create_ComAowagieTextPdfPdfChunk_initWithComAowagieTextChunk_withComAowagieTextPdfPdfAction_(ComAowagieTextChunk *chunk, ComAowagieTextPdfPdfAction *action);

FOUNDATION_EXPORT jboolean ComAowagieTextPdfPdfChunk_noPrintWithInt_(jint c);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfChunk)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfChunk")

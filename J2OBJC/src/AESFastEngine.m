//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/engines/AESFastEngine.java
//

#include "AESFastEngine.h"
#include "CipherParameters.h"
#include "DataLengthException.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "KeyParameter.h"
#include "OutputLengthException.h"
#include "Pack.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"

#if !__has_feature(objc_arc)
#error "AESFastEngine must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCryptoEnginesAESFastEngine () {
 @public
  jint ROUNDS_;
  IOSObjectArray *WorkingKey_;
  jint C0_;
  jint C1_;
  jint C2_;
  jint C3_;
  jboolean forEncryption_;
}

+ (jint)shiftWithInt:(jint)r
             withInt:(jint)shift;

+ (jint)FFmulXWithInt:(jint)x;

+ (jint)FFmulX2WithInt:(jint)x;

+ (jint)inv_mcolWithInt:(jint)x;

+ (jint)subWordWithInt:(jint)x;

/*!
 @brief Calculate the necessary round keys
  The number of calculations depends on key size and block size
  AES specified a fixed block size of 128 bits and key sizes 128/192/256 bits
  This code is written assuming those are the only possible values
 */
- (IOSObjectArray *)generateWorkingKeyWithByteArray:(IOSByteArray *)key
                                        withBoolean:(jboolean)forEncryption;

- (void)unpackBlockWithByteArray:(IOSByteArray *)bytes
                         withInt:(jint)off;

- (void)packBlockWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)off;

- (void)encryptBlockWithIntArray2:(IOSObjectArray *)KW;

- (void)decryptBlockWithIntArray2:(IOSObjectArray *)KW;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCryptoEnginesAESFastEngine, WorkingKey_, IOSObjectArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesAESFastEngine_get_S(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesAESFastEngine_S;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESFastEngine, S, IOSByteArray *)

inline IOSByteArray *OrgSpongycastleCryptoEnginesAESFastEngine_get_Si(void);
static IOSByteArray *OrgSpongycastleCryptoEnginesAESFastEngine_Si;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESFastEngine, Si, IOSByteArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesAESFastEngine_get_rcon(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesAESFastEngine_rcon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESFastEngine, rcon, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesAESFastEngine_get_T(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesAESFastEngine_T;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESFastEngine, T, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleCryptoEnginesAESFastEngine_get_Tinv(void);
static IOSIntArray *OrgSpongycastleCryptoEnginesAESFastEngine_Tinv;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCryptoEnginesAESFastEngine, Tinv, IOSIntArray *)

inline jint OrgSpongycastleCryptoEnginesAESFastEngine_get_m1(void);
#define OrgSpongycastleCryptoEnginesAESFastEngine_m1 -2139062144
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESFastEngine, m1, jint)

inline jint OrgSpongycastleCryptoEnginesAESFastEngine_get_m2(void);
#define OrgSpongycastleCryptoEnginesAESFastEngine_m2 2139062143
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESFastEngine, m2, jint)

inline jint OrgSpongycastleCryptoEnginesAESFastEngine_get_m3(void);
#define OrgSpongycastleCryptoEnginesAESFastEngine_m3 27
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESFastEngine, m3, jint)

inline jint OrgSpongycastleCryptoEnginesAESFastEngine_get_m4(void);
#define OrgSpongycastleCryptoEnginesAESFastEngine_m4 -1061109568
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESFastEngine, m4, jint)

inline jint OrgSpongycastleCryptoEnginesAESFastEngine_get_m5(void);
#define OrgSpongycastleCryptoEnginesAESFastEngine_m5 1061109567
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESFastEngine, m5, jint)

inline jint OrgSpongycastleCryptoEnginesAESFastEngine_get_BLOCK_SIZE(void);
#define OrgSpongycastleCryptoEnginesAESFastEngine_BLOCK_SIZE 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleCryptoEnginesAESFastEngine, BLOCK_SIZE, jint)

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(jint r, jint shift);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESFastEngine_FFmulXWithInt_(jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESFastEngine_FFmulX2WithInt_(jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESFastEngine_inv_mcolWithInt_(jint x);

__attribute__((unused)) static jint OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(jint x);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleCryptoEnginesAESFastEngine_generateWorkingKeyWithByteArray_withBoolean_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSByteArray *key, jboolean forEncryption);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESFastEngine_unpackBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSByteArray *bytes, jint off);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESFastEngine_packBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSByteArray *bytes, jint off);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESFastEngine_encryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSObjectArray *KW);

__attribute__((unused)) static void OrgSpongycastleCryptoEnginesAESFastEngine_decryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSObjectArray *KW);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/crypto/engines/AESFastEngine.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCryptoEnginesAESFastEngine)


#line 35
@implementation OrgSpongycastleCryptoEnginesAESFastEngine


#line 552
+ (jint)shiftWithInt:(jint)r
             withInt:(jint)shift {
  return OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(r, shift);
}


#line 565
+ (jint)FFmulXWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESFastEngine_FFmulXWithInt_(x);
}


#line 570
+ (jint)FFmulX2WithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESFastEngine_FFmulX2WithInt_(x);
}


#line 588
+ (jint)inv_mcolWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESFastEngine_inv_mcolWithInt_(x);
}


#line 599
+ (jint)subWordWithInt:(jint)x {
  return OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(x);
}


#line 612
- (IOSObjectArray *)generateWorkingKeyWithByteArray:(IOSByteArray *)key
                                        withBoolean:(jboolean)forEncryption {
  return OrgSpongycastleCryptoEnginesAESFastEngine_generateWorkingKeyWithByteArray_withBoolean_(self, key, forEncryption);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 753
- (instancetype)init {
  OrgSpongycastleCryptoEnginesAESFastEngine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 765
- (void)init__WithBoolean:(jboolean)forEncryption
withOrgSpongycastleCryptoCipherParameters:(id<OrgSpongycastleCryptoCipherParameters>)params {
  
#line 769
  if ([params isKindOfClass:[OrgSpongycastleCryptoParamsKeyParameter class]]) {
    
#line 771
    WorkingKey_ = OrgSpongycastleCryptoEnginesAESFastEngine_generateWorkingKeyWithByteArray_withBoolean_(self, [((OrgSpongycastleCryptoParamsKeyParameter *) nil_chk(((OrgSpongycastleCryptoParamsKeyParameter *) params))) getKey], forEncryption);
    self->forEncryption_ = forEncryption;
    return;
  }
  
#line 776
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to AES init - ", [[((id<OrgSpongycastleCryptoCipherParameters>) nil_chk(params)) java_getClass] getName]));
}


#line 779
- (NSString *)getAlgorithmName {
  
#line 781
  return @"AES";
}


#line 784
- (jint)getBlockSize {
  
#line 786
  return OrgSpongycastleCryptoEnginesAESFastEngine_BLOCK_SIZE;
}


#line 789
- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  
#line 795
  if (WorkingKey_ == nil) {
    
#line 797
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"AES engine not initialised");
  }
  
#line 800
  if ((inOff + (JreIntDiv(32, 2))) > ((IOSByteArray *) nil_chk(inArg))->size_) {
    
#line 802
    @throw new_OrgSpongycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  
#line 805
  if ((outOff + (JreIntDiv(32, 2))) > ((IOSByteArray *) nil_chk(outArg))->size_) {
    
#line 807
    @throw new_OrgSpongycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  
#line 810
  OrgSpongycastleCryptoEnginesAESFastEngine_unpackBlockWithByteArray_withInt_(self, inArg, inOff);
  
#line 812
  if (forEncryption_) {
    
#line 814
    OrgSpongycastleCryptoEnginesAESFastEngine_encryptBlockWithIntArray2_(self, WorkingKey_);
  }
  else {
    
#line 818
    OrgSpongycastleCryptoEnginesAESFastEngine_decryptBlockWithIntArray2_(self, WorkingKey_);
  }
  
#line 821
  OrgSpongycastleCryptoEnginesAESFastEngine_packBlockWithByteArray_withInt_(self, outArg, outOff);
  
#line 823
  return OrgSpongycastleCryptoEnginesAESFastEngine_BLOCK_SIZE;
}


#line 826
- (void)reset {
}


#line 830
- (void)unpackBlockWithByteArray:(IOSByteArray *)bytes
                         withInt:(jint)off {
  OrgSpongycastleCryptoEnginesAESFastEngine_unpackBlockWithByteArray_withInt_(self, bytes, off);
}


#line 838
- (void)packBlockWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)off {
  OrgSpongycastleCryptoEnginesAESFastEngine_packBlockWithByteArray_withInt_(self, bytes, off);
}


#line 846
- (void)encryptBlockWithIntArray2:(IOSObjectArray *)KW {
  OrgSpongycastleCryptoEnginesAESFastEngine_encryptBlockWithIntArray2_(self, KW);
}


#line 932
- (void)decryptBlockWithIntArray2:(IOSObjectArray *)KW {
  OrgSpongycastleCryptoEnginesAESFastEngine_decryptBlockWithIntArray2_(self, KW);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 5, 3, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 6, 3, -1, -1, -1, -1 },
    { NULL, "[[I", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(shiftWithInt:withInt:);
  methods[1].selector = @selector(FFmulXWithInt:);
  methods[2].selector = @selector(FFmulX2WithInt:);
  methods[3].selector = @selector(inv_mcolWithInt:);
  methods[4].selector = @selector(subWordWithInt:);
  methods[5].selector = @selector(generateWorkingKeyWithByteArray:withBoolean:);
  methods[6].selector = @selector(init);
  methods[7].selector = @selector(init__WithBoolean:withOrgSpongycastleCryptoCipherParameters:);
  methods[8].selector = @selector(getAlgorithmName);
  methods[9].selector = @selector(getBlockSize);
  methods[10].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[11].selector = @selector(reset);
  methods[12].selector = @selector(unpackBlockWithByteArray:withInt:);
  methods[13].selector = @selector(packBlockWithByteArray:withInt:);
  methods[14].selector = @selector(encryptBlockWithIntArray2:);
  methods[15].selector = @selector(decryptBlockWithIntArray2:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "S", "[B", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "Si", "[B", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "rcon", "[I", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "T", "[I", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "Tinv", "[I", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "m1", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESFastEngine_m1, 0x1a, -1, -1, -1, -1 },
    { "m2", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESFastEngine_m2, 0x1a, -1, -1, -1, -1 },
    { "m3", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESFastEngine_m3, 0x1a, -1, -1, -1, -1 },
    { "m4", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESFastEngine_m4, 0x1a, -1, -1, -1, -1 },
    { "m5", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESFastEngine_m5, 0x1a, -1, -1, -1, -1 },
    { "ROUNDS_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "WorkingKey_", "[[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C0_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "C3_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "forEncryption_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgSpongycastleCryptoEnginesAESFastEngine_BLOCK_SIZE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "shift", "II", "FFmulX", "I", "FFmulX2", "inv_mcol", "subWord", "generateWorkingKey", "[BZ", "init", "ZLOrgSpongycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "unpackBlock", "[BI", "packBlock", "encryptBlock", "[[I", "decryptBlock", &OrgSpongycastleCryptoEnginesAESFastEngine_S, &OrgSpongycastleCryptoEnginesAESFastEngine_Si, &OrgSpongycastleCryptoEnginesAESFastEngine_rcon, &OrgSpongycastleCryptoEnginesAESFastEngine_T, &OrgSpongycastleCryptoEnginesAESFastEngine_Tinv };
  static const J2ObjcClassInfo _OrgSpongycastleCryptoEnginesAESFastEngine = { "AESFastEngine", "org.spongycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 16, 18, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCryptoEnginesAESFastEngine;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCryptoEnginesAESFastEngine class]) {
    OrgSpongycastleCryptoEnginesAESFastEngine_S = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 40
      (jbyte) 99, (jbyte) 124, (jbyte) 119, (jbyte) 123, (jbyte) 242, (jbyte) 107, (jbyte) 111, (jbyte) 197,
#line 41
      (jbyte) 48, (jbyte) 1, (jbyte) 103, (jbyte) 43, (jbyte) 254, (jbyte) 215, (jbyte) 171, (jbyte) 118,
#line 42
      (jbyte) 202, (jbyte) 130, (jbyte) 201, (jbyte) 125, (jbyte) 250, (jbyte) 89, (jbyte) 71, (jbyte) 240,
#line 43
      (jbyte) 173, (jbyte) 212, (jbyte) 162, (jbyte) 175, (jbyte) 156, (jbyte) 164, (jbyte) 114, (jbyte) 192,
#line 44
      (jbyte) 183, (jbyte) 253, (jbyte) 147, (jbyte) 38, (jbyte) 54, (jbyte) 63, (jbyte) 247, (jbyte) 204,
#line 45
      (jbyte) 52, (jbyte) 165, (jbyte) 229, (jbyte) 241, (jbyte) 113, (jbyte) 216, (jbyte) 49, (jbyte) 21,
#line 46
      (jbyte) 4, (jbyte) 199, (jbyte) 35, (jbyte) 195, (jbyte) 24, (jbyte) 150, (jbyte) 5, (jbyte) 154,
#line 47
      (jbyte) 7, (jbyte) 18, (jbyte) 128, (jbyte) 226, (jbyte) 235, (jbyte) 39, (jbyte) 178, (jbyte) 117,
#line 48
      (jbyte) 9, (jbyte) 131, (jbyte) 44, (jbyte) 26, (jbyte) 27, (jbyte) 110, (jbyte) 90, (jbyte) 160,
#line 49
      (jbyte) 82, (jbyte) 59, (jbyte) 214, (jbyte) 179, (jbyte) 41, (jbyte) 227, (jbyte) 47, (jbyte) 132,
#line 50
      (jbyte) 83, (jbyte) 209, (jbyte) 0, (jbyte) 237, (jbyte) 32, (jbyte) 252, (jbyte) 177, (jbyte) 91,
#line 51
      (jbyte) 106, (jbyte) 203, (jbyte) 190, (jbyte) 57, (jbyte) 74, (jbyte) 76, (jbyte) 88, (jbyte) 207,
#line 52
      (jbyte) 208, (jbyte) 239, (jbyte) 170, (jbyte) 251, (jbyte) 67, (jbyte) 77, (jbyte) 51, (jbyte) 133,
#line 53
      (jbyte) 69, (jbyte) 249, (jbyte) 2, (jbyte) 127, (jbyte) 80, (jbyte) 60, (jbyte) 159, (jbyte) 168,
#line 54
      (jbyte) 81, (jbyte) 163, (jbyte) 64, (jbyte) 143, (jbyte) 146, (jbyte) 157, (jbyte) 56, (jbyte) 245,
#line 55
      (jbyte) 188, (jbyte) 182, (jbyte) 218, (jbyte) 33, (jbyte) 16, (jbyte) 255, (jbyte) 243, (jbyte) 210,
#line 56
      (jbyte) 205, (jbyte) 12, (jbyte) 19, (jbyte) 236, (jbyte) 95, (jbyte) 151, (jbyte) 68, (jbyte) 23,
#line 57
      (jbyte) 196, (jbyte) 167, (jbyte) 126, (jbyte) 61, (jbyte) 100, (jbyte) 93, (jbyte) 25, (jbyte) 115,
#line 58
      (jbyte) 96, (jbyte) 129, (jbyte) 79, (jbyte) 220, (jbyte) 34, (jbyte) 42, (jbyte) 144, (jbyte) 136,
#line 59
      (jbyte) 70, (jbyte) 238, (jbyte) 184, (jbyte) 20, (jbyte) 222, (jbyte) 94, (jbyte) 11, (jbyte) 219,
#line 60
      (jbyte) 224, (jbyte) 50, (jbyte) 58, (jbyte) 10, (jbyte) 73, (jbyte) 6, (jbyte) 36, (jbyte) 92,
#line 61
      (jbyte) 194, (jbyte) 211, (jbyte) 172, (jbyte) 98, (jbyte) 145, (jbyte) 149, (jbyte) 228, (jbyte) 121,
#line 62
      (jbyte) 231, (jbyte) 200, (jbyte) 55, (jbyte) 109, (jbyte) 141, (jbyte) 213, (jbyte) 78, (jbyte) 169,
#line 63
      (jbyte) 108, (jbyte) 86, (jbyte) 244, (jbyte) 234, (jbyte) 101, (jbyte) 122, (jbyte) 174, (jbyte) 8,
#line 64
      (jbyte) 186, (jbyte) 120, (jbyte) 37, (jbyte) 46, (jbyte) 28, (jbyte) 166, (jbyte) 180, (jbyte) 198,
#line 65
      (jbyte) 232, (jbyte) 221, (jbyte) 116, (jbyte) 31, (jbyte) 75, (jbyte) 189, (jbyte) 139, (jbyte) 138,
#line 66
      (jbyte) 112, (jbyte) 62, (jbyte) 181, (jbyte) 102, (jbyte) 72, (jbyte) 3, (jbyte) 246, (jbyte) 14,
#line 67
      (jbyte) 97, (jbyte) 53, (jbyte) 87, (jbyte) 185, (jbyte) 134, (jbyte) 193, (jbyte) 29, (jbyte) 158,
#line 68
      (jbyte) 225, (jbyte) 248, (jbyte) 152, (jbyte) 17, (jbyte) 105, (jbyte) 217, (jbyte) 142, (jbyte) 148,
#line 69
      (jbyte) 155, (jbyte) 30, (jbyte) 135, (jbyte) 233, (jbyte) 206, (jbyte) 85, (jbyte) 40, (jbyte) 223,
#line 70
      (jbyte) 140, (jbyte) 161, (jbyte) 137, (jbyte) 13, (jbyte) 191, (jbyte) 230, (jbyte) 66, (jbyte) 104,
#line 71
      (jbyte) 65, (jbyte) 153, (jbyte) 45, (jbyte) 15, (jbyte) 176, (jbyte) 84, (jbyte) 187, (jbyte) 22 } count:256];
      OrgSpongycastleCryptoEnginesAESFastEngine_Si = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 76
        (jbyte) 82, (jbyte) 9, (jbyte) 106, (jbyte) 213, (jbyte) 48, (jbyte) 54, (jbyte) 165, (jbyte) 56,
#line 77
        (jbyte) 191, (jbyte) 64, (jbyte) 163, (jbyte) 158, (jbyte) 129, (jbyte) 243, (jbyte) 215, (jbyte) 251,
#line 78
        (jbyte) 124, (jbyte) 227, (jbyte) 57, (jbyte) 130, (jbyte) 155, (jbyte) 47, (jbyte) 255, (jbyte) 135,
#line 79
        (jbyte) 52, (jbyte) 142, (jbyte) 67, (jbyte) 68, (jbyte) 196, (jbyte) 222, (jbyte) 233, (jbyte) 203,
#line 80
        (jbyte) 84, (jbyte) 123, (jbyte) 148, (jbyte) 50, (jbyte) 166, (jbyte) 194, (jbyte) 35, (jbyte) 61,
#line 81
        (jbyte) 238, (jbyte) 76, (jbyte) 149, (jbyte) 11, (jbyte) 66, (jbyte) 250, (jbyte) 195, (jbyte) 78,
#line 82
        (jbyte) 8, (jbyte) 46, (jbyte) 161, (jbyte) 102, (jbyte) 40, (jbyte) 217, (jbyte) 36, (jbyte) 178,
#line 83
        (jbyte) 118, (jbyte) 91, (jbyte) 162, (jbyte) 73, (jbyte) 109, (jbyte) 139, (jbyte) 209, (jbyte) 37,
#line 84
        (jbyte) 114, (jbyte) 248, (jbyte) 246, (jbyte) 100, (jbyte) 134, (jbyte) 104, (jbyte) 152, (jbyte) 22,
#line 85
        (jbyte) 212, (jbyte) 164, (jbyte) 92, (jbyte) 204, (jbyte) 93, (jbyte) 101, (jbyte) 182, (jbyte) 146,
#line 86
        (jbyte) 108, (jbyte) 112, (jbyte) 72, (jbyte) 80, (jbyte) 253, (jbyte) 237, (jbyte) 185, (jbyte) 218,
#line 87
        (jbyte) 94, (jbyte) 21, (jbyte) 70, (jbyte) 87, (jbyte) 167, (jbyte) 141, (jbyte) 157, (jbyte) 132,
#line 88
        (jbyte) 144, (jbyte) 216, (jbyte) 171, (jbyte) 0, (jbyte) 140, (jbyte) 188, (jbyte) 211, (jbyte) 10,
#line 89
        (jbyte) 247, (jbyte) 228, (jbyte) 88, (jbyte) 5, (jbyte) 184, (jbyte) 179, (jbyte) 69, (jbyte) 6,
#line 90
        (jbyte) 208, (jbyte) 44, (jbyte) 30, (jbyte) 143, (jbyte) 202, (jbyte) 63, (jbyte) 15, (jbyte) 2,
#line 91
        (jbyte) 193, (jbyte) 175, (jbyte) 189, (jbyte) 3, (jbyte) 1, (jbyte) 19, (jbyte) 138, (jbyte) 107,
#line 92
        (jbyte) 58, (jbyte) 145, (jbyte) 17, (jbyte) 65, (jbyte) 79, (jbyte) 103, (jbyte) 220, (jbyte) 234,
#line 93
        (jbyte) 151, (jbyte) 242, (jbyte) 207, (jbyte) 206, (jbyte) 240, (jbyte) 180, (jbyte) 230, (jbyte) 115,
#line 94
        (jbyte) 150, (jbyte) 172, (jbyte) 116, (jbyte) 34, (jbyte) 231, (jbyte) 173, (jbyte) 53, (jbyte) 133,
#line 95
        (jbyte) 226, (jbyte) 249, (jbyte) 55, (jbyte) 232, (jbyte) 28, (jbyte) 117, (jbyte) 223, (jbyte) 110,
#line 96
        (jbyte) 71, (jbyte) 241, (jbyte) 26, (jbyte) 113, (jbyte) 29, (jbyte) 41, (jbyte) 197, (jbyte) 137,
#line 97
        (jbyte) 111, (jbyte) 183, (jbyte) 98, (jbyte) 14, (jbyte) 170, (jbyte) 24, (jbyte) 190, (jbyte) 27,
#line 98
        (jbyte) 252, (jbyte) 86, (jbyte) 62, (jbyte) 75, (jbyte) 198, (jbyte) 210, (jbyte) 121, (jbyte) 32,
#line 99
        (jbyte) 154, (jbyte) 219, (jbyte) 192, (jbyte) 254, (jbyte) 120, (jbyte) 205, (jbyte) 90, (jbyte) 244,
#line 100
        (jbyte) 31, (jbyte) 221, (jbyte) 168, (jbyte) 51, (jbyte) 136, (jbyte) 7, (jbyte) 199, (jbyte) 49,
#line 101
        (jbyte) 177, (jbyte) 18, (jbyte) 16, (jbyte) 89, (jbyte) 39, (jbyte) 128, (jbyte) 236, (jbyte) 95,
#line 102
        (jbyte) 96, (jbyte) 81, (jbyte) 127, (jbyte) 169, (jbyte) 25, (jbyte) 181, (jbyte) 74, (jbyte) 13,
#line 103
        (jbyte) 45, (jbyte) 229, (jbyte) 122, (jbyte) 159, (jbyte) 147, (jbyte) 201, (jbyte) 156, (jbyte) 239,
#line 104
        (jbyte) 160, (jbyte) 224, (jbyte) 59, (jbyte) 77, (jbyte) 174, (jbyte) 42, (jbyte) 245, (jbyte) 176,
#line 105
        (jbyte) 200, (jbyte) 235, (jbyte) 187, (jbyte) 60, (jbyte) 131, (jbyte) 83, (jbyte) 153, (jbyte) 97,
#line 106
        (jbyte) 23, (jbyte) 43, (jbyte) 4, (jbyte) 126, (jbyte) 186, (jbyte) 119, (jbyte) 214, (jbyte) 38,
#line 107
        (jbyte) 225, (jbyte) 105, (jbyte) 20, (jbyte) 99, (jbyte) 85, (jbyte) 33, (jbyte) 12, (jbyte) 125 } count:256];
        OrgSpongycastleCryptoEnginesAESFastEngine_rcon = [IOSIntArray newArrayWithInts:(jint[]){
#line 112
          (jint) 0x01, (jint) 0x02, (jint) 0x04, (jint) 0x08, (jint) 0x10, (jint) 0x20, (jint) 0x40, (jint) 0x80, (jint) 0x1b, (jint) 0x36, (jint) 0x6c, (jint) 0xd8, (jint) 0xab, (jint) 0x4d, (jint) 0x9a,
#line 113
          (jint) 0x2f, (jint) 0x5e, (jint) 0xbc, (jint) 0x63, (jint) 0xc6, (jint) 0x97, (jint) 0x35, (jint) 0x6a, (jint) 0xd4, (jint) 0xb3, (jint) 0x7d, (jint) 0xfa, (jint) 0xef, (jint) 0xc5, (jint) 0x91 } count:30];
          OrgSpongycastleCryptoEnginesAESFastEngine_T = [IOSIntArray newArrayWithInts:(jint[]){
#line 119
            (jint) 0xa56363c6, (jint) 0x847c7cf8, (jint) 0x997777ee, (jint) 0x8d7b7bf6, (jint) 0x0df2f2ff,
#line 120
            (jint) 0xbd6b6bd6, (jint) 0xb16f6fde, (jint) 0x54c5c591, (jint) 0x50303060, (jint) 0x03010102,
#line 121
            (jint) 0xa96767ce, (jint) 0x7d2b2b56, (jint) 0x19fefee7, (jint) 0x62d7d7b5, (jint) 0xe6abab4d,
#line 122
            (jint) 0x9a7676ec, (jint) 0x45caca8f, (jint) 0x9d82821f, (jint) 0x40c9c989, (jint) 0x877d7dfa,
#line 123
            (jint) 0x15fafaef, (jint) 0xeb5959b2, (jint) 0xc947478e, (jint) 0x0bf0f0fb, (jint) 0xecadad41,
#line 124
            (jint) 0x67d4d4b3, (jint) 0xfda2a25f, (jint) 0xeaafaf45, (jint) 0xbf9c9c23, (jint) 0xf7a4a453,
#line 125
            (jint) 0x967272e4, (jint) 0x5bc0c09b, (jint) 0xc2b7b775, (jint) 0x1cfdfde1, (jint) 0xae93933d,
#line 126
            (jint) 0x6a26264c, (jint) 0x5a36366c, (jint) 0x413f3f7e, (jint) 0x02f7f7f5, (jint) 0x4fcccc83,
#line 127
            (jint) 0x5c343468, (jint) 0xf4a5a551, (jint) 0x34e5e5d1, (jint) 0x08f1f1f9, (jint) 0x937171e2,
#line 128
            (jint) 0x73d8d8ab, (jint) 0x53313162, (jint) 0x3f15152a, (jint) 0x0c040408, (jint) 0x52c7c795,
#line 129
            (jint) 0x65232346, (jint) 0x5ec3c39d, (jint) 0x28181830, (jint) 0xa1969637, (jint) 0x0f05050a,
#line 130
            (jint) 0xb59a9a2f, (jint) 0x0907070e, (jint) 0x36121224, (jint) 0x9b80801b, (jint) 0x3de2e2df,
#line 131
            (jint) 0x26ebebcd, (jint) 0x6927274e, (jint) 0xcdb2b27f, (jint) 0x9f7575ea, (jint) 0x1b090912,
#line 132
            (jint) 0x9e83831d, (jint) 0x742c2c58, (jint) 0x2e1a1a34, (jint) 0x2d1b1b36, (jint) 0xb26e6edc,
#line 133
            (jint) 0xee5a5ab4, (jint) 0xfba0a05b, (jint) 0xf65252a4, (jint) 0x4d3b3b76, (jint) 0x61d6d6b7,
#line 134
            (jint) 0xceb3b37d, (jint) 0x7b292952, (jint) 0x3ee3e3dd, (jint) 0x712f2f5e, (jint) 0x97848413,
#line 135
            (jint) 0xf55353a6, (jint) 0x68d1d1b9, (jint) 0x00000000, (jint) 0x2cededc1, (jint) 0x60202040,
#line 136
            (jint) 0x1ffcfce3, (jint) 0xc8b1b179, (jint) 0xed5b5bb6, (jint) 0xbe6a6ad4, (jint) 0x46cbcb8d,
#line 137
            (jint) 0xd9bebe67, (jint) 0x4b393972, (jint) 0xde4a4a94, (jint) 0xd44c4c98, (jint) 0xe85858b0,
#line 138
            (jint) 0x4acfcf85, (jint) 0x6bd0d0bb, (jint) 0x2aefefc5, (jint) 0xe5aaaa4f, (jint) 0x16fbfbed,
#line 139
            (jint) 0xc5434386, (jint) 0xd74d4d9a, (jint) 0x55333366, (jint) 0x94858511, (jint) 0xcf45458a,
#line 140
            (jint) 0x10f9f9e9, (jint) 0x06020204, (jint) 0x817f7ffe, (jint) 0xf05050a0, (jint) 0x443c3c78,
#line 141
            (jint) 0xba9f9f25, (jint) 0xe3a8a84b, (jint) 0xf35151a2, (jint) 0xfea3a35d, (jint) 0xc0404080,
#line 142
            (jint) 0x8a8f8f05, (jint) 0xad92923f, (jint) 0xbc9d9d21, (jint) 0x48383870, (jint) 0x04f5f5f1,
#line 143
            (jint) 0xdfbcbc63, (jint) 0xc1b6b677, (jint) 0x75dadaaf, (jint) 0x63212142, (jint) 0x30101020,
#line 144
            (jint) 0x1affffe5, (jint) 0x0ef3f3fd, (jint) 0x6dd2d2bf, (jint) 0x4ccdcd81, (jint) 0x140c0c18,
#line 145
            (jint) 0x35131326, (jint) 0x2fececc3, (jint) 0xe15f5fbe, (jint) 0xa2979735, (jint) 0xcc444488,
#line 146
            (jint) 0x3917172e, (jint) 0x57c4c493, (jint) 0xf2a7a755, (jint) 0x827e7efc, (jint) 0x473d3d7a,
#line 147
            (jint) 0xac6464c8, (jint) 0xe75d5dba, (jint) 0x2b191932, (jint) 0x957373e6, (jint) 0xa06060c0,
#line 148
            (jint) 0x98818119, (jint) 0xd14f4f9e, (jint) 0x7fdcdca3, (jint) 0x66222244, (jint) 0x7e2a2a54,
#line 149
            (jint) 0xab90903b, (jint) 0x8388880b, (jint) 0xca46468c, (jint) 0x29eeeec7, (jint) 0xd3b8b86b,
#line 150
            (jint) 0x3c141428, (jint) 0x79dedea7, (jint) 0xe25e5ebc, (jint) 0x1d0b0b16, (jint) 0x76dbdbad,
#line 151
            (jint) 0x3be0e0db, (jint) 0x56323264, (jint) 0x4e3a3a74, (jint) 0x1e0a0a14, (jint) 0xdb494992,
#line 152
            (jint) 0x0a06060c, (jint) 0x6c242448, (jint) 0xe45c5cb8, (jint) 0x5dc2c29f, (jint) 0x6ed3d3bd,
#line 153
            (jint) 0xefacac43, (jint) 0xa66262c4, (jint) 0xa8919139, (jint) 0xa4959531, (jint) 0x37e4e4d3,
#line 154
            (jint) 0x8b7979f2, (jint) 0x32e7e7d5, (jint) 0x43c8c88b, (jint) 0x5937376e, (jint) 0xb76d6dda,
#line 155
            (jint) 0x8c8d8d01, (jint) 0x64d5d5b1, (jint) 0xd24e4e9c, (jint) 0xe0a9a949, (jint) 0xb46c6cd8,
#line 156
            (jint) 0xfa5656ac, (jint) 0x07f4f4f3, (jint) 0x25eaeacf, (jint) 0xaf6565ca, (jint) 0x8e7a7af4,
#line 157
            (jint) 0xe9aeae47, (jint) 0x18080810, (jint) 0xd5baba6f, (jint) 0x887878f0, (jint) 0x6f25254a,
#line 158
            (jint) 0x722e2e5c, (jint) 0x241c1c38, (jint) 0xf1a6a657, (jint) 0xc7b4b473, (jint) 0x51c6c697,
#line 159
            (jint) 0x23e8e8cb, (jint) 0x7cdddda1, (jint) 0x9c7474e8, (jint) 0x211f1f3e, (jint) 0xdd4b4b96,
#line 160
            (jint) 0xdcbdbd61, (jint) 0x868b8b0d, (jint) 0x858a8a0f, (jint) 0x907070e0, (jint) 0x423e3e7c,
#line 161
            (jint) 0xc4b5b571, (jint) 0xaa6666cc, (jint) 0xd8484890, (jint) 0x05030306, (jint) 0x01f6f6f7,
#line 162
            (jint) 0x120e0e1c, (jint) 0xa36161c2, (jint) 0x5f35356a, (jint) 0xf95757ae, (jint) 0xd0b9b969,
#line 163
            (jint) 0x91868617, (jint) 0x58c1c199, (jint) 0x271d1d3a, (jint) 0xb99e9e27, (jint) 0x38e1e1d9,
#line 164
            (jint) 0x13f8f8eb, (jint) 0xb398982b, (jint) 0x33111122, (jint) 0xbb6969d2, (jint) 0x70d9d9a9,
#line 165
            (jint) 0x898e8e07, (jint) 0xa7949433, (jint) 0xb69b9b2d, (jint) 0x221e1e3c, (jint) 0x92878715,
#line 166
            (jint) 0x20e9e9c9, (jint) 0x49cece87, (jint) 0xff5555aa, (jint) 0x78282850, (jint) 0x7adfdfa5,
#line 167
            (jint) 0x8f8c8c03, (jint) 0xf8a1a159, (jint) 0x80898909, (jint) 0x170d0d1a, (jint) 0xdabfbf65,
#line 168
            (jint) 0x31e6e6d7, (jint) 0xc6424284, (jint) 0xb86868d0, (jint) 0xc3414182, (jint) 0xb0999929,
#line 169
            (jint) 0x772d2d5a, (jint) 0x110f0f1e, (jint) 0xcbb0b07b, (jint) 0xfc5454a8, (jint) 0xd6bbbb6d,
#line 170
            (jint) 0x3a16162c,
#line 173
            (jint) 0x6363c6a5, (jint) 0x7c7cf884, (jint) 0x7777ee99, (jint) 0x7b7bf68d, (jint) 0xf2f2ff0d,
#line 174
            (jint) 0x6b6bd6bd, (jint) 0x6f6fdeb1, (jint) 0xc5c59154, (jint) 0x30306050, (jint) 0x01010203,
#line 175
            (jint) 0x6767cea9, (jint) 0x2b2b567d, (jint) 0xfefee719, (jint) 0xd7d7b562, (jint) 0xabab4de6,
#line 176
            (jint) 0x7676ec9a, (jint) 0xcaca8f45, (jint) 0x82821f9d, (jint) 0xc9c98940, (jint) 0x7d7dfa87,
#line 177
            (jint) 0xfafaef15, (jint) 0x5959b2eb, (jint) 0x47478ec9, (jint) 0xf0f0fb0b, (jint) 0xadad41ec,
#line 178
            (jint) 0xd4d4b367, (jint) 0xa2a25ffd, (jint) 0xafaf45ea, (jint) 0x9c9c23bf, (jint) 0xa4a453f7,
#line 179
            (jint) 0x7272e496, (jint) 0xc0c09b5b, (jint) 0xb7b775c2, (jint) 0xfdfde11c, (jint) 0x93933dae,
#line 180
            (jint) 0x26264c6a, (jint) 0x36366c5a, (jint) 0x3f3f7e41, (jint) 0xf7f7f502, (jint) 0xcccc834f,
#line 181
            (jint) 0x3434685c, (jint) 0xa5a551f4, (jint) 0xe5e5d134, (jint) 0xf1f1f908, (jint) 0x7171e293,
#line 182
            (jint) 0xd8d8ab73, (jint) 0x31316253, (jint) 0x15152a3f, (jint) 0x0404080c, (jint) 0xc7c79552,
#line 183
            (jint) 0x23234665, (jint) 0xc3c39d5e, (jint) 0x18183028, (jint) 0x969637a1, (jint) 0x05050a0f,
#line 184
            (jint) 0x9a9a2fb5, (jint) 0x07070e09, (jint) 0x12122436, (jint) 0x80801b9b, (jint) 0xe2e2df3d,
#line 185
            (jint) 0xebebcd26, (jint) 0x27274e69, (jint) 0xb2b27fcd, (jint) 0x7575ea9f, (jint) 0x0909121b,
#line 186
            (jint) 0x83831d9e, (jint) 0x2c2c5874, (jint) 0x1a1a342e, (jint) 0x1b1b362d, (jint) 0x6e6edcb2,
#line 187
            (jint) 0x5a5ab4ee, (jint) 0xa0a05bfb, (jint) 0x5252a4f6, (jint) 0x3b3b764d, (jint) 0xd6d6b761,
#line 188
            (jint) 0xb3b37dce, (jint) 0x2929527b, (jint) 0xe3e3dd3e, (jint) 0x2f2f5e71, (jint) 0x84841397,
#line 189
            (jint) 0x5353a6f5, (jint) 0xd1d1b968, (jint) 0x00000000, (jint) 0xededc12c, (jint) 0x20204060,
#line 190
            (jint) 0xfcfce31f, (jint) 0xb1b179c8, (jint) 0x5b5bb6ed, (jint) 0x6a6ad4be, (jint) 0xcbcb8d46,
#line 191
            (jint) 0xbebe67d9, (jint) 0x3939724b, (jint) 0x4a4a94de, (jint) 0x4c4c98d4, (jint) 0x5858b0e8,
#line 192
            (jint) 0xcfcf854a, (jint) 0xd0d0bb6b, (jint) 0xefefc52a, (jint) 0xaaaa4fe5, (jint) 0xfbfbed16,
#line 193
            (jint) 0x434386c5, (jint) 0x4d4d9ad7, (jint) 0x33336655, (jint) 0x85851194, (jint) 0x45458acf,
#line 194
            (jint) 0xf9f9e910, (jint) 0x02020406, (jint) 0x7f7ffe81, (jint) 0x5050a0f0, (jint) 0x3c3c7844,
#line 195
            (jint) 0x9f9f25ba, (jint) 0xa8a84be3, (jint) 0x5151a2f3, (jint) 0xa3a35dfe, (jint) 0x404080c0,
#line 196
            (jint) 0x8f8f058a, (jint) 0x92923fad, (jint) 0x9d9d21bc, (jint) 0x38387048, (jint) 0xf5f5f104,
#line 197
            (jint) 0xbcbc63df, (jint) 0xb6b677c1, (jint) 0xdadaaf75, (jint) 0x21214263, (jint) 0x10102030,
#line 198
            (jint) 0xffffe51a, (jint) 0xf3f3fd0e, (jint) 0xd2d2bf6d, (jint) 0xcdcd814c, (jint) 0x0c0c1814,
#line 199
            (jint) 0x13132635, (jint) 0xececc32f, (jint) 0x5f5fbee1, (jint) 0x979735a2, (jint) 0x444488cc,
#line 200
            (jint) 0x17172e39, (jint) 0xc4c49357, (jint) 0xa7a755f2, (jint) 0x7e7efc82, (jint) 0x3d3d7a47,
#line 201
            (jint) 0x6464c8ac, (jint) 0x5d5dbae7, (jint) 0x1919322b, (jint) 0x7373e695, (jint) 0x6060c0a0,
#line 202
            (jint) 0x81811998, (jint) 0x4f4f9ed1, (jint) 0xdcdca37f, (jint) 0x22224466, (jint) 0x2a2a547e,
#line 203
            (jint) 0x90903bab, (jint) 0x88880b83, (jint) 0x46468cca, (jint) 0xeeeec729, (jint) 0xb8b86bd3,
#line 204
            (jint) 0x1414283c, (jint) 0xdedea779, (jint) 0x5e5ebce2, (jint) 0x0b0b161d, (jint) 0xdbdbad76,
#line 205
            (jint) 0xe0e0db3b, (jint) 0x32326456, (jint) 0x3a3a744e, (jint) 0x0a0a141e, (jint) 0x494992db,
#line 206
            (jint) 0x06060c0a, (jint) 0x2424486c, (jint) 0x5c5cb8e4, (jint) 0xc2c29f5d, (jint) 0xd3d3bd6e,
#line 207
            (jint) 0xacac43ef, (jint) 0x6262c4a6, (jint) 0x919139a8, (jint) 0x959531a4, (jint) 0xe4e4d337,
#line 208
            (jint) 0x7979f28b, (jint) 0xe7e7d532, (jint) 0xc8c88b43, (jint) 0x37376e59, (jint) 0x6d6ddab7,
#line 209
            (jint) 0x8d8d018c, (jint) 0xd5d5b164, (jint) 0x4e4e9cd2, (jint) 0xa9a949e0, (jint) 0x6c6cd8b4,
#line 210
            (jint) 0x5656acfa, (jint) 0xf4f4f307, (jint) 0xeaeacf25, (jint) 0x6565caaf, (jint) 0x7a7af48e,
#line 211
            (jint) 0xaeae47e9, (jint) 0x08081018, (jint) 0xbaba6fd5, (jint) 0x7878f088, (jint) 0x25254a6f,
#line 212
            (jint) 0x2e2e5c72, (jint) 0x1c1c3824, (jint) 0xa6a657f1, (jint) 0xb4b473c7, (jint) 0xc6c69751,
#line 213
            (jint) 0xe8e8cb23, (jint) 0xdddda17c, (jint) 0x7474e89c, (jint) 0x1f1f3e21, (jint) 0x4b4b96dd,
#line 214
            (jint) 0xbdbd61dc, (jint) 0x8b8b0d86, (jint) 0x8a8a0f85, (jint) 0x7070e090, (jint) 0x3e3e7c42,
#line 215
            (jint) 0xb5b571c4, (jint) 0x6666ccaa, (jint) 0x484890d8, (jint) 0x03030605, (jint) 0xf6f6f701,
#line 216
            (jint) 0x0e0e1c12, (jint) 0x6161c2a3, (jint) 0x35356a5f, (jint) 0x5757aef9, (jint) 0xb9b969d0,
#line 217
            (jint) 0x86861791, (jint) 0xc1c19958, (jint) 0x1d1d3a27, (jint) 0x9e9e27b9, (jint) 0xe1e1d938,
#line 218
            (jint) 0xf8f8eb13, (jint) 0x98982bb3, (jint) 0x11112233, (jint) 0x6969d2bb, (jint) 0xd9d9a970,
#line 219
            (jint) 0x8e8e0789, (jint) 0x949433a7, (jint) 0x9b9b2db6, (jint) 0x1e1e3c22, (jint) 0x87871592,
#line 220
            (jint) 0xe9e9c920, (jint) 0xcece8749, (jint) 0x5555aaff, (jint) 0x28285078, (jint) 0xdfdfa57a,
#line 221
            (jint) 0x8c8c038f, (jint) 0xa1a159f8, (jint) 0x89890980, (jint) 0x0d0d1a17, (jint) 0xbfbf65da,
#line 222
            (jint) 0xe6e6d731, (jint) 0x424284c6, (jint) 0x6868d0b8, (jint) 0x414182c3, (jint) 0x999929b0,
#line 223
            (jint) 0x2d2d5a77, (jint) 0x0f0f1e11, (jint) 0xb0b07bcb, (jint) 0x5454a8fc, (jint) 0xbbbb6dd6,
#line 224
            (jint) 0x16162c3a,
#line 227
            (jint) 0x63c6a563, (jint) 0x7cf8847c, (jint) 0x77ee9977, (jint) 0x7bf68d7b, (jint) 0xf2ff0df2,
#line 228
            (jint) 0x6bd6bd6b, (jint) 0x6fdeb16f, (jint) 0xc59154c5, (jint) 0x30605030, (jint) 0x01020301,
#line 229
            (jint) 0x67cea967, (jint) 0x2b567d2b, (jint) 0xfee719fe, (jint) 0xd7b562d7, (jint) 0xab4de6ab,
#line 230
            (jint) 0x76ec9a76, (jint) 0xca8f45ca, (jint) 0x821f9d82, (jint) 0xc98940c9, (jint) 0x7dfa877d,
#line 231
            (jint) 0xfaef15fa, (jint) 0x59b2eb59, (jint) 0x478ec947, (jint) 0xf0fb0bf0, (jint) 0xad41ecad,
#line 232
            (jint) 0xd4b367d4, (jint) 0xa25ffda2, (jint) 0xaf45eaaf, (jint) 0x9c23bf9c, (jint) 0xa453f7a4,
#line 233
            (jint) 0x72e49672, (jint) 0xc09b5bc0, (jint) 0xb775c2b7, (jint) 0xfde11cfd, (jint) 0x933dae93,
#line 234
            (jint) 0x264c6a26, (jint) 0x366c5a36, (jint) 0x3f7e413f, (jint) 0xf7f502f7, (jint) 0xcc834fcc,
#line 235
            (jint) 0x34685c34, (jint) 0xa551f4a5, (jint) 0xe5d134e5, (jint) 0xf1f908f1, (jint) 0x71e29371,
#line 236
            (jint) 0xd8ab73d8, (jint) 0x31625331, (jint) 0x152a3f15, (jint) 0x04080c04, (jint) 0xc79552c7,
#line 237
            (jint) 0x23466523, (jint) 0xc39d5ec3, (jint) 0x18302818, (jint) 0x9637a196, (jint) 0x050a0f05,
#line 238
            (jint) 0x9a2fb59a, (jint) 0x070e0907, (jint) 0x12243612, (jint) 0x801b9b80, (jint) 0xe2df3de2,
#line 239
            (jint) 0xebcd26eb, (jint) 0x274e6927, (jint) 0xb27fcdb2, (jint) 0x75ea9f75, (jint) 0x09121b09,
#line 240
            (jint) 0x831d9e83, (jint) 0x2c58742c, (jint) 0x1a342e1a, (jint) 0x1b362d1b, (jint) 0x6edcb26e,
#line 241
            (jint) 0x5ab4ee5a, (jint) 0xa05bfba0, (jint) 0x52a4f652, (jint) 0x3b764d3b, (jint) 0xd6b761d6,
#line 242
            (jint) 0xb37dceb3, (jint) 0x29527b29, (jint) 0xe3dd3ee3, (jint) 0x2f5e712f, (jint) 0x84139784,
#line 243
            (jint) 0x53a6f553, (jint) 0xd1b968d1, (jint) 0x00000000, (jint) 0xedc12ced, (jint) 0x20406020,
#line 244
            (jint) 0xfce31ffc, (jint) 0xb179c8b1, (jint) 0x5bb6ed5b, (jint) 0x6ad4be6a, (jint) 0xcb8d46cb,
#line 245
            (jint) 0xbe67d9be, (jint) 0x39724b39, (jint) 0x4a94de4a, (jint) 0x4c98d44c, (jint) 0x58b0e858,
#line 246
            (jint) 0xcf854acf, (jint) 0xd0bb6bd0, (jint) 0xefc52aef, (jint) 0xaa4fe5aa, (jint) 0xfbed16fb,
#line 247
            (jint) 0x4386c543, (jint) 0x4d9ad74d, (jint) 0x33665533, (jint) 0x85119485, (jint) 0x458acf45,
#line 248
            (jint) 0xf9e910f9, (jint) 0x02040602, (jint) 0x7ffe817f, (jint) 0x50a0f050, (jint) 0x3c78443c,
#line 249
            (jint) 0x9f25ba9f, (jint) 0xa84be3a8, (jint) 0x51a2f351, (jint) 0xa35dfea3, (jint) 0x4080c040,
#line 250
            (jint) 0x8f058a8f, (jint) 0x923fad92, (jint) 0x9d21bc9d, (jint) 0x38704838, (jint) 0xf5f104f5,
#line 251
            (jint) 0xbc63dfbc, (jint) 0xb677c1b6, (jint) 0xdaaf75da, (jint) 0x21426321, (jint) 0x10203010,
#line 252
            (jint) 0xffe51aff, (jint) 0xf3fd0ef3, (jint) 0xd2bf6dd2, (jint) 0xcd814ccd, (jint) 0x0c18140c,
#line 253
            (jint) 0x13263513, (jint) 0xecc32fec, (jint) 0x5fbee15f, (jint) 0x9735a297, (jint) 0x4488cc44,
#line 254
            (jint) 0x172e3917, (jint) 0xc49357c4, (jint) 0xa755f2a7, (jint) 0x7efc827e, (jint) 0x3d7a473d,
#line 255
            (jint) 0x64c8ac64, (jint) 0x5dbae75d, (jint) 0x19322b19, (jint) 0x73e69573, (jint) 0x60c0a060,
#line 256
            (jint) 0x81199881, (jint) 0x4f9ed14f, (jint) 0xdca37fdc, (jint) 0x22446622, (jint) 0x2a547e2a,
#line 257
            (jint) 0x903bab90, (jint) 0x880b8388, (jint) 0x468cca46, (jint) 0xeec729ee, (jint) 0xb86bd3b8,
#line 258
            (jint) 0x14283c14, (jint) 0xdea779de, (jint) 0x5ebce25e, (jint) 0x0b161d0b, (jint) 0xdbad76db,
#line 259
            (jint) 0xe0db3be0, (jint) 0x32645632, (jint) 0x3a744e3a, (jint) 0x0a141e0a, (jint) 0x4992db49,
#line 260
            (jint) 0x060c0a06, (jint) 0x24486c24, (jint) 0x5cb8e45c, (jint) 0xc29f5dc2, (jint) 0xd3bd6ed3,
#line 261
            (jint) 0xac43efac, (jint) 0x62c4a662, (jint) 0x9139a891, (jint) 0x9531a495, (jint) 0xe4d337e4,
#line 262
            (jint) 0x79f28b79, (jint) 0xe7d532e7, (jint) 0xc88b43c8, (jint) 0x376e5937, (jint) 0x6ddab76d,
#line 263
            (jint) 0x8d018c8d, (jint) 0xd5b164d5, (jint) 0x4e9cd24e, (jint) 0xa949e0a9, (jint) 0x6cd8b46c,
#line 264
            (jint) 0x56acfa56, (jint) 0xf4f307f4, (jint) 0xeacf25ea, (jint) 0x65caaf65, (jint) 0x7af48e7a,
#line 265
            (jint) 0xae47e9ae, (jint) 0x08101808, (jint) 0xba6fd5ba, (jint) 0x78f08878, (jint) 0x254a6f25,
#line 266
            (jint) 0x2e5c722e, (jint) 0x1c38241c, (jint) 0xa657f1a6, (jint) 0xb473c7b4, (jint) 0xc69751c6,
#line 267
            (jint) 0xe8cb23e8, (jint) 0xdda17cdd, (jint) 0x74e89c74, (jint) 0x1f3e211f, (jint) 0x4b96dd4b,
#line 268
            (jint) 0xbd61dcbd, (jint) 0x8b0d868b, (jint) 0x8a0f858a, (jint) 0x70e09070, (jint) 0x3e7c423e,
#line 269
            (jint) 0xb571c4b5, (jint) 0x66ccaa66, (jint) 0x4890d848, (jint) 0x03060503, (jint) 0xf6f701f6,
#line 270
            (jint) 0x0e1c120e, (jint) 0x61c2a361, (jint) 0x356a5f35, (jint) 0x57aef957, (jint) 0xb969d0b9,
#line 271
            (jint) 0x86179186, (jint) 0xc19958c1, (jint) 0x1d3a271d, (jint) 0x9e27b99e, (jint) 0xe1d938e1,
#line 272
            (jint) 0xf8eb13f8, (jint) 0x982bb398, (jint) 0x11223311, (jint) 0x69d2bb69, (jint) 0xd9a970d9,
#line 273
            (jint) 0x8e07898e, (jint) 0x9433a794, (jint) 0x9b2db69b, (jint) 0x1e3c221e, (jint) 0x87159287,
#line 274
            (jint) 0xe9c920e9, (jint) 0xce8749ce, (jint) 0x55aaff55, (jint) 0x28507828, (jint) 0xdfa57adf,
#line 275
            (jint) 0x8c038f8c, (jint) 0xa159f8a1, (jint) 0x89098089, (jint) 0x0d1a170d, (jint) 0xbf65dabf,
#line 276
            (jint) 0xe6d731e6, (jint) 0x4284c642, (jint) 0x68d0b868, (jint) 0x4182c341, (jint) 0x9929b099,
#line 277
            (jint) 0x2d5a772d, (jint) 0x0f1e110f, (jint) 0xb07bcbb0, (jint) 0x54a8fc54, (jint) 0xbb6dd6bb,
#line 278
            (jint) 0x162c3a16,
#line 281
            (jint) 0xc6a56363, (jint) 0xf8847c7c, (jint) 0xee997777, (jint) 0xf68d7b7b, (jint) 0xff0df2f2,
#line 282
            (jint) 0xd6bd6b6b, (jint) 0xdeb16f6f, (jint) 0x9154c5c5, (jint) 0x60503030, (jint) 0x02030101,
#line 283
            (jint) 0xcea96767, (jint) 0x567d2b2b, (jint) 0xe719fefe, (jint) 0xb562d7d7, (jint) 0x4de6abab,
#line 284
            (jint) 0xec9a7676, (jint) 0x8f45caca, (jint) 0x1f9d8282, (jint) 0x8940c9c9, (jint) 0xfa877d7d,
#line 285
            (jint) 0xef15fafa, (jint) 0xb2eb5959, (jint) 0x8ec94747, (jint) 0xfb0bf0f0, (jint) 0x41ecadad,
#line 286
            (jint) 0xb367d4d4, (jint) 0x5ffda2a2, (jint) 0x45eaafaf, (jint) 0x23bf9c9c, (jint) 0x53f7a4a4,
#line 287
            (jint) 0xe4967272, (jint) 0x9b5bc0c0, (jint) 0x75c2b7b7, (jint) 0xe11cfdfd, (jint) 0x3dae9393,
#line 288
            (jint) 0x4c6a2626, (jint) 0x6c5a3636, (jint) 0x7e413f3f, (jint) 0xf502f7f7, (jint) 0x834fcccc,
#line 289
            (jint) 0x685c3434, (jint) 0x51f4a5a5, (jint) 0xd134e5e5, (jint) 0xf908f1f1, (jint) 0xe2937171,
#line 290
            (jint) 0xab73d8d8, (jint) 0x62533131, (jint) 0x2a3f1515, (jint) 0x080c0404, (jint) 0x9552c7c7,
#line 291
            (jint) 0x46652323, (jint) 0x9d5ec3c3, (jint) 0x30281818, (jint) 0x37a19696, (jint) 0x0a0f0505,
#line 292
            (jint) 0x2fb59a9a, (jint) 0x0e090707, (jint) 0x24361212, (jint) 0x1b9b8080, (jint) 0xdf3de2e2,
#line 293
            (jint) 0xcd26ebeb, (jint) 0x4e692727, (jint) 0x7fcdb2b2, (jint) 0xea9f7575, (jint) 0x121b0909,
#line 294
            (jint) 0x1d9e8383, (jint) 0x58742c2c, (jint) 0x342e1a1a, (jint) 0x362d1b1b, (jint) 0xdcb26e6e,
#line 295
            (jint) 0xb4ee5a5a, (jint) 0x5bfba0a0, (jint) 0xa4f65252, (jint) 0x764d3b3b, (jint) 0xb761d6d6,
#line 296
            (jint) 0x7dceb3b3, (jint) 0x527b2929, (jint) 0xdd3ee3e3, (jint) 0x5e712f2f, (jint) 0x13978484,
#line 297
            (jint) 0xa6f55353, (jint) 0xb968d1d1, (jint) 0x00000000, (jint) 0xc12ceded, (jint) 0x40602020,
#line 298
            (jint) 0xe31ffcfc, (jint) 0x79c8b1b1, (jint) 0xb6ed5b5b, (jint) 0xd4be6a6a, (jint) 0x8d46cbcb,
#line 299
            (jint) 0x67d9bebe, (jint) 0x724b3939, (jint) 0x94de4a4a, (jint) 0x98d44c4c, (jint) 0xb0e85858,
#line 300
            (jint) 0x854acfcf, (jint) 0xbb6bd0d0, (jint) 0xc52aefef, (jint) 0x4fe5aaaa, (jint) 0xed16fbfb,
#line 301
            (jint) 0x86c54343, (jint) 0x9ad74d4d, (jint) 0x66553333, (jint) 0x11948585, (jint) 0x8acf4545,
#line 302
            (jint) 0xe910f9f9, (jint) 0x04060202, (jint) 0xfe817f7f, (jint) 0xa0f05050, (jint) 0x78443c3c,
#line 303
            (jint) 0x25ba9f9f, (jint) 0x4be3a8a8, (jint) 0xa2f35151, (jint) 0x5dfea3a3, (jint) 0x80c04040,
#line 304
            (jint) 0x058a8f8f, (jint) 0x3fad9292, (jint) 0x21bc9d9d, (jint) 0x70483838, (jint) 0xf104f5f5,
#line 305
            (jint) 0x63dfbcbc, (jint) 0x77c1b6b6, (jint) 0xaf75dada, (jint) 0x42632121, (jint) 0x20301010,
#line 306
            (jint) 0xe51affff, (jint) 0xfd0ef3f3, (jint) 0xbf6dd2d2, (jint) 0x814ccdcd, (jint) 0x18140c0c,
#line 307
            (jint) 0x26351313, (jint) 0xc32fecec, (jint) 0xbee15f5f, (jint) 0x35a29797, (jint) 0x88cc4444,
#line 308
            (jint) 0x2e391717, (jint) 0x9357c4c4, (jint) 0x55f2a7a7, (jint) 0xfc827e7e, (jint) 0x7a473d3d,
#line 309
            (jint) 0xc8ac6464, (jint) 0xbae75d5d, (jint) 0x322b1919, (jint) 0xe6957373, (jint) 0xc0a06060,
#line 310
            (jint) 0x19988181, (jint) 0x9ed14f4f, (jint) 0xa37fdcdc, (jint) 0x44662222, (jint) 0x547e2a2a,
#line 311
            (jint) 0x3bab9090, (jint) 0x0b838888, (jint) 0x8cca4646, (jint) 0xc729eeee, (jint) 0x6bd3b8b8,
#line 312
            (jint) 0x283c1414, (jint) 0xa779dede, (jint) 0xbce25e5e, (jint) 0x161d0b0b, (jint) 0xad76dbdb,
#line 313
            (jint) 0xdb3be0e0, (jint) 0x64563232, (jint) 0x744e3a3a, (jint) 0x141e0a0a, (jint) 0x92db4949,
#line 314
            (jint) 0x0c0a0606, (jint) 0x486c2424, (jint) 0xb8e45c5c, (jint) 0x9f5dc2c2, (jint) 0xbd6ed3d3,
#line 315
            (jint) 0x43efacac, (jint) 0xc4a66262, (jint) 0x39a89191, (jint) 0x31a49595, (jint) 0xd337e4e4,
#line 316
            (jint) 0xf28b7979, (jint) 0xd532e7e7, (jint) 0x8b43c8c8, (jint) 0x6e593737, (jint) 0xdab76d6d,
#line 317
            (jint) 0x018c8d8d, (jint) 0xb164d5d5, (jint) 0x9cd24e4e, (jint) 0x49e0a9a9, (jint) 0xd8b46c6c,
#line 318
            (jint) 0xacfa5656, (jint) 0xf307f4f4, (jint) 0xcf25eaea, (jint) 0xcaaf6565, (jint) 0xf48e7a7a,
#line 319
            (jint) 0x47e9aeae, (jint) 0x10180808, (jint) 0x6fd5baba, (jint) 0xf0887878, (jint) 0x4a6f2525,
#line 320
            (jint) 0x5c722e2e, (jint) 0x38241c1c, (jint) 0x57f1a6a6, (jint) 0x73c7b4b4, (jint) 0x9751c6c6,
#line 321
            (jint) 0xcb23e8e8, (jint) 0xa17cdddd, (jint) 0xe89c7474, (jint) 0x3e211f1f, (jint) 0x96dd4b4b,
#line 322
            (jint) 0x61dcbdbd, (jint) 0x0d868b8b, (jint) 0x0f858a8a, (jint) 0xe0907070, (jint) 0x7c423e3e,
#line 323
            (jint) 0x71c4b5b5, (jint) 0xccaa6666, (jint) 0x90d84848, (jint) 0x06050303, (jint) 0xf701f6f6,
#line 324
            (jint) 0x1c120e0e, (jint) 0xc2a36161, (jint) 0x6a5f3535, (jint) 0xaef95757, (jint) 0x69d0b9b9,
#line 325
            (jint) 0x17918686, (jint) 0x9958c1c1, (jint) 0x3a271d1d, (jint) 0x27b99e9e, (jint) 0xd938e1e1,
#line 326
            (jint) 0xeb13f8f8, (jint) 0x2bb39898, (jint) 0x22331111, (jint) 0xd2bb6969, (jint) 0xa970d9d9,
#line 327
            (jint) 0x07898e8e, (jint) 0x33a79494, (jint) 0x2db69b9b, (jint) 0x3c221e1e, (jint) 0x15928787,
#line 328
            (jint) 0xc920e9e9, (jint) 0x8749cece, (jint) 0xaaff5555, (jint) 0x50782828, (jint) 0xa57adfdf,
#line 329
            (jint) 0x038f8c8c, (jint) 0x59f8a1a1, (jint) 0x09808989, (jint) 0x1a170d0d, (jint) 0x65dabfbf,
#line 330
            (jint) 0xd731e6e6, (jint) 0x84c64242, (jint) 0xd0b86868, (jint) 0x82c34141, (jint) 0x29b09999,
#line 331
            (jint) 0x5a772d2d, (jint) 0x1e110f0f, (jint) 0x7bcbb0b0, (jint) 0xa8fc5454, (jint) 0x6dd6bbbb,
#line 332
            (jint) 0x2c3a1616 } count:1024];
            OrgSpongycastleCryptoEnginesAESFastEngine_Tinv = [IOSIntArray newArrayWithInts:(jint[]){
#line 337
              (jint) 0x50a7f451, (jint) 0x5365417e, (jint) 0xc3a4171a, (jint) 0x965e273a, (jint) 0xcb6bab3b,
#line 338
              (jint) 0xf1459d1f, (jint) 0xab58faac, (jint) 0x9303e34b, (jint) 0x55fa3020, (jint) 0xf66d76ad,
#line 339
              (jint) 0x9176cc88, (jint) 0x254c02f5, (jint) 0xfcd7e54f, (jint) 0xd7cb2ac5, (jint) 0x80443526,
#line 340
              (jint) 0x8fa362b5, (jint) 0x495ab1de, (jint) 0x671bba25, (jint) 0x980eea45, (jint) 0xe1c0fe5d,
#line 341
              (jint) 0x02752fc3, (jint) 0x12f04c81, (jint) 0xa397468d, (jint) 0xc6f9d36b, (jint) 0xe75f8f03,
#line 342
              (jint) 0x959c9215, (jint) 0xeb7a6dbf, (jint) 0xda595295, (jint) 0x2d83bed4, (jint) 0xd3217458,
#line 343
              (jint) 0x2969e049, (jint) 0x44c8c98e, (jint) 0x6a89c275, (jint) 0x78798ef4, (jint) 0x6b3e5899,
#line 344
              (jint) 0xdd71b927, (jint) 0xb64fe1be, (jint) 0x17ad88f0, (jint) 0x66ac20c9, (jint) 0xb43ace7d,
#line 345
              (jint) 0x184adf63, (jint) 0x82311ae5, (jint) 0x60335197, (jint) 0x457f5362, (jint) 0xe07764b1,
#line 346
              (jint) 0x84ae6bbb, (jint) 0x1ca081fe, (jint) 0x942b08f9, (jint) 0x58684870, (jint) 0x19fd458f,
#line 347
              (jint) 0x876cde94, (jint) 0xb7f87b52, (jint) 0x23d373ab, (jint) 0xe2024b72, (jint) 0x578f1fe3,
#line 348
              (jint) 0x2aab5566, (jint) 0x0728ebb2, (jint) 0x03c2b52f, (jint) 0x9a7bc586, (jint) 0xa50837d3,
#line 349
              (jint) 0xf2872830, (jint) 0xb2a5bf23, (jint) 0xba6a0302, (jint) 0x5c8216ed, (jint) 0x2b1ccf8a,
#line 350
              (jint) 0x92b479a7, (jint) 0xf0f207f3, (jint) 0xa1e2694e, (jint) 0xcdf4da65, (jint) 0xd5be0506,
#line 351
              (jint) 0x1f6234d1, (jint) 0x8afea6c4, (jint) 0x9d532e34, (jint) 0xa055f3a2, (jint) 0x32e18a05,
#line 352
              (jint) 0x75ebf6a4, (jint) 0x39ec830b, (jint) 0xaaef6040, (jint) 0x069f715e, (jint) 0x51106ebd,
#line 353
              (jint) 0xf98a213e, (jint) 0x3d06dd96, (jint) 0xae053edd, (jint) 0x46bde64d, (jint) 0xb58d5491,
#line 354
              (jint) 0x055dc471, (jint) 0x6fd40604, (jint) 0xff155060, (jint) 0x24fb9819, (jint) 0x97e9bdd6,
#line 355
              (jint) 0xcc434089, (jint) 0x779ed967, (jint) 0xbd42e8b0, (jint) 0x888b8907, (jint) 0x385b19e7,
#line 356
              (jint) 0xdbeec879, (jint) 0x470a7ca1, (jint) 0xe90f427c, (jint) 0xc91e84f8, (jint) 0x00000000,
#line 357
              (jint) 0x83868009, (jint) 0x48ed2b32, (jint) 0xac70111e, (jint) 0x4e725a6c, (jint) 0xfbff0efd,
#line 358
              (jint) 0x5638850f, (jint) 0x1ed5ae3d, (jint) 0x27392d36, (jint) 0x64d90f0a, (jint) 0x21a65c68,
#line 359
              (jint) 0xd1545b9b, (jint) 0x3a2e3624, (jint) 0xb1670a0c, (jint) 0x0fe75793, (jint) 0xd296eeb4,
#line 360
              (jint) 0x9e919b1b, (jint) 0x4fc5c080, (jint) 0xa220dc61, (jint) 0x694b775a, (jint) 0x161a121c,
#line 361
              (jint) 0x0aba93e2, (jint) 0xe52aa0c0, (jint) 0x43e0223c, (jint) 0x1d171b12, (jint) 0x0b0d090e,
#line 362
              (jint) 0xadc78bf2, (jint) 0xb9a8b62d, (jint) 0xc8a91e14, (jint) 0x8519f157, (jint) 0x4c0775af,
#line 363
              (jint) 0xbbdd99ee, (jint) 0xfd607fa3, (jint) 0x9f2601f7, (jint) 0xbcf5725c, (jint) 0xc53b6644,
#line 364
              (jint) 0x347efb5b, (jint) 0x7629438b, (jint) 0xdcc623cb, (jint) 0x68fcedb6, (jint) 0x63f1e4b8,
#line 365
              (jint) 0xcadc31d7, (jint) 0x10856342, (jint) 0x40229713, (jint) 0x2011c684, (jint) 0x7d244a85,
#line 366
              (jint) 0xf83dbbd2, (jint) 0x1132f9ae, (jint) 0x6da129c7, (jint) 0x4b2f9e1d, (jint) 0xf330b2dc,
#line 367
              (jint) 0xec52860d, (jint) 0xd0e3c177, (jint) 0x6c16b32b, (jint) 0x99b970a9, (jint) 0xfa489411,
#line 368
              (jint) 0x2264e947, (jint) 0xc48cfca8, (jint) 0x1a3ff0a0, (jint) 0xd82c7d56, (jint) 0xef903322,
#line 369
              (jint) 0xc74e4987, (jint) 0xc1d138d9, (jint) 0xfea2ca8c, (jint) 0x360bd498, (jint) 0xcf81f5a6,
#line 370
              (jint) 0x28de7aa5, (jint) 0x268eb7da, (jint) 0xa4bfad3f, (jint) 0xe49d3a2c, (jint) 0x0d927850,
#line 371
              (jint) 0x9bcc5f6a, (jint) 0x62467e54, (jint) 0xc2138df6, (jint) 0xe8b8d890, (jint) 0x5ef7392e,
#line 372
              (jint) 0xf5afc382, (jint) 0xbe805d9f, (jint) 0x7c93d069, (jint) 0xa92dd56f, (jint) 0xb31225cf,
#line 373
              (jint) 0x3b99acc8, (jint) 0xa77d1810, (jint) 0x6e639ce8, (jint) 0x7bbb3bdb, (jint) 0x097826cd,
#line 374
              (jint) 0xf418596e, (jint) 0x01b79aec, (jint) 0xa89a4f83, (jint) 0x656e95e6, (jint) 0x7ee6ffaa,
#line 375
              (jint) 0x08cfbc21, (jint) 0xe6e815ef, (jint) 0xd99be7ba, (jint) 0xce366f4a, (jint) 0xd4099fea,
#line 376
              (jint) 0xd67cb029, (jint) 0xafb2a431, (jint) 0x31233f2a, (jint) 0x3094a5c6, (jint) 0xc066a235,
#line 377
              (jint) 0x37bc4e74, (jint) 0xa6ca82fc, (jint) 0xb0d090e0, (jint) 0x15d8a733, (jint) 0x4a9804f1,
#line 378
              (jint) 0xf7daec41, (jint) 0x0e50cd7f, (jint) 0x2ff69117, (jint) 0x8dd64d76, (jint) 0x4db0ef43,
#line 379
              (jint) 0x544daacc, (jint) 0xdf0496e4, (jint) 0xe3b5d19e, (jint) 0x1b886a4c, (jint) 0xb81f2cc1,
#line 380
              (jint) 0x7f516546, (jint) 0x04ea5e9d, (jint) 0x5d358c01, (jint) 0x737487fa, (jint) 0x2e410bfb,
#line 381
              (jint) 0x5a1d67b3, (jint) 0x52d2db92, (jint) 0x335610e9, (jint) 0x1347d66d, (jint) 0x8c61d79a,
#line 382
              (jint) 0x7a0ca137, (jint) 0x8e14f859, (jint) 0x893c13eb, (jint) 0xee27a9ce, (jint) 0x35c961b7,
#line 383
              (jint) 0xede51ce1, (jint) 0x3cb1477a, (jint) 0x59dfd29c, (jint) 0x3f73f255, (jint) 0x79ce1418,
#line 384
              (jint) 0xbf37c773, (jint) 0xeacdf753, (jint) 0x5baafd5f, (jint) 0x146f3ddf, (jint) 0x86db4478,
#line 385
              (jint) 0x81f3afca, (jint) 0x3ec468b9, (jint) 0x2c342438, (jint) 0x5f40a3c2, (jint) 0x72c31d16,
#line 386
              (jint) 0x0c25e2bc, (jint) 0x8b493c28, (jint) 0x41950dff, (jint) 0x7101a839, (jint) 0xdeb30c08,
#line 387
              (jint) 0x9ce4b4d8, (jint) 0x90c15664, (jint) 0x6184cb7b, (jint) 0x70b632d5, (jint) 0x745c6c48,
#line 388
              (jint) 0x4257b8d0,
#line 391
              (jint) 0xa7f45150, (jint) 0x65417e53, (jint) 0xa4171ac3, (jint) 0x5e273a96, (jint) 0x6bab3bcb,
#line 392
              (jint) 0x459d1ff1, (jint) 0x58faacab, (jint) 0x03e34b93, (jint) 0xfa302055, (jint) 0x6d76adf6,
#line 393
              (jint) 0x76cc8891, (jint) 0x4c02f525, (jint) 0xd7e54ffc, (jint) 0xcb2ac5d7, (jint) 0x44352680,
#line 394
              (jint) 0xa362b58f, (jint) 0x5ab1de49, (jint) 0x1bba2567, (jint) 0x0eea4598, (jint) 0xc0fe5de1,
#line 395
              (jint) 0x752fc302, (jint) 0xf04c8112, (jint) 0x97468da3, (jint) 0xf9d36bc6, (jint) 0x5f8f03e7,
#line 396
              (jint) 0x9c921595, (jint) 0x7a6dbfeb, (jint) 0x595295da, (jint) 0x83bed42d, (jint) 0x217458d3,
#line 397
              (jint) 0x69e04929, (jint) 0xc8c98e44, (jint) 0x89c2756a, (jint) 0x798ef478, (jint) 0x3e58996b,
#line 398
              (jint) 0x71b927dd, (jint) 0x4fe1beb6, (jint) 0xad88f017, (jint) 0xac20c966, (jint) 0x3ace7db4,
#line 399
              (jint) 0x4adf6318, (jint) 0x311ae582, (jint) 0x33519760, (jint) 0x7f536245, (jint) 0x7764b1e0,
#line 400
              (jint) 0xae6bbb84, (jint) 0xa081fe1c, (jint) 0x2b08f994, (jint) 0x68487058, (jint) 0xfd458f19,
#line 401
              (jint) 0x6cde9487, (jint) 0xf87b52b7, (jint) 0xd373ab23, (jint) 0x024b72e2, (jint) 0x8f1fe357,
#line 402
              (jint) 0xab55662a, (jint) 0x28ebb207, (jint) 0xc2b52f03, (jint) 0x7bc5869a, (jint) 0x0837d3a5,
#line 403
              (jint) 0x872830f2, (jint) 0xa5bf23b2, (jint) 0x6a0302ba, (jint) 0x8216ed5c, (jint) 0x1ccf8a2b,
#line 404
              (jint) 0xb479a792, (jint) 0xf207f3f0, (jint) 0xe2694ea1, (jint) 0xf4da65cd, (jint) 0xbe0506d5,
#line 405
              (jint) 0x6234d11f, (jint) 0xfea6c48a, (jint) 0x532e349d, (jint) 0x55f3a2a0, (jint) 0xe18a0532,
#line 406
              (jint) 0xebf6a475, (jint) 0xec830b39, (jint) 0xef6040aa, (jint) 0x9f715e06, (jint) 0x106ebd51,
#line 407
              (jint) 0x8a213ef9, (jint) 0x06dd963d, (jint) 0x053eddae, (jint) 0xbde64d46, (jint) 0x8d5491b5,
#line 408
              (jint) 0x5dc47105, (jint) 0xd406046f, (jint) 0x155060ff, (jint) 0xfb981924, (jint) 0xe9bdd697,
#line 409
              (jint) 0x434089cc, (jint) 0x9ed96777, (jint) 0x42e8b0bd, (jint) 0x8b890788, (jint) 0x5b19e738,
#line 410
              (jint) 0xeec879db, (jint) 0x0a7ca147, (jint) 0x0f427ce9, (jint) 0x1e84f8c9, (jint) 0x00000000,
#line 411
              (jint) 0x86800983, (jint) 0xed2b3248, (jint) 0x70111eac, (jint) 0x725a6c4e, (jint) 0xff0efdfb,
#line 412
              (jint) 0x38850f56, (jint) 0xd5ae3d1e, (jint) 0x392d3627, (jint) 0xd90f0a64, (jint) 0xa65c6821,
#line 413
              (jint) 0x545b9bd1, (jint) 0x2e36243a, (jint) 0x670a0cb1, (jint) 0xe757930f, (jint) 0x96eeb4d2,
#line 414
              (jint) 0x919b1b9e, (jint) 0xc5c0804f, (jint) 0x20dc61a2, (jint) 0x4b775a69, (jint) 0x1a121c16,
#line 415
              (jint) 0xba93e20a, (jint) 0x2aa0c0e5, (jint) 0xe0223c43, (jint) 0x171b121d, (jint) 0x0d090e0b,
#line 416
              (jint) 0xc78bf2ad, (jint) 0xa8b62db9, (jint) 0xa91e14c8, (jint) 0x19f15785, (jint) 0x0775af4c,
#line 417
              (jint) 0xdd99eebb, (jint) 0x607fa3fd, (jint) 0x2601f79f, (jint) 0xf5725cbc, (jint) 0x3b6644c5,
#line 418
              (jint) 0x7efb5b34, (jint) 0x29438b76, (jint) 0xc623cbdc, (jint) 0xfcedb668, (jint) 0xf1e4b863,
#line 419
              (jint) 0xdc31d7ca, (jint) 0x85634210, (jint) 0x22971340, (jint) 0x11c68420, (jint) 0x244a857d,
#line 420
              (jint) 0x3dbbd2f8, (jint) 0x32f9ae11, (jint) 0xa129c76d, (jint) 0x2f9e1d4b, (jint) 0x30b2dcf3,
#line 421
              (jint) 0x52860dec, (jint) 0xe3c177d0, (jint) 0x16b32b6c, (jint) 0xb970a999, (jint) 0x489411fa,
#line 422
              (jint) 0x64e94722, (jint) 0x8cfca8c4, (jint) 0x3ff0a01a, (jint) 0x2c7d56d8, (jint) 0x903322ef,
#line 423
              (jint) 0x4e4987c7, (jint) 0xd138d9c1, (jint) 0xa2ca8cfe, (jint) 0x0bd49836, (jint) 0x81f5a6cf,
#line 424
              (jint) 0xde7aa528, (jint) 0x8eb7da26, (jint) 0xbfad3fa4, (jint) 0x9d3a2ce4, (jint) 0x9278500d,
#line 425
              (jint) 0xcc5f6a9b, (jint) 0x467e5462, (jint) 0x138df6c2, (jint) 0xb8d890e8, (jint) 0xf7392e5e,
#line 426
              (jint) 0xafc382f5, (jint) 0x805d9fbe, (jint) 0x93d0697c, (jint) 0x2dd56fa9, (jint) 0x1225cfb3,
#line 427
              (jint) 0x99acc83b, (jint) 0x7d1810a7, (jint) 0x639ce86e, (jint) 0xbb3bdb7b, (jint) 0x7826cd09,
#line 428
              (jint) 0x18596ef4, (jint) 0xb79aec01, (jint) 0x9a4f83a8, (jint) 0x6e95e665, (jint) 0xe6ffaa7e,
#line 429
              (jint) 0xcfbc2108, (jint) 0xe815efe6, (jint) 0x9be7bad9, (jint) 0x366f4ace, (jint) 0x099fead4,
#line 430
              (jint) 0x7cb029d6, (jint) 0xb2a431af, (jint) 0x233f2a31, (jint) 0x94a5c630, (jint) 0x66a235c0,
#line 431
              (jint) 0xbc4e7437, (jint) 0xca82fca6, (jint) 0xd090e0b0, (jint) 0xd8a73315, (jint) 0x9804f14a,
#line 432
              (jint) 0xdaec41f7, (jint) 0x50cd7f0e, (jint) 0xf691172f, (jint) 0xd64d768d, (jint) 0xb0ef434d,
#line 433
              (jint) 0x4daacc54, (jint) 0x0496e4df, (jint) 0xb5d19ee3, (jint) 0x886a4c1b, (jint) 0x1f2cc1b8,
#line 434
              (jint) 0x5165467f, (jint) 0xea5e9d04, (jint) 0x358c015d, (jint) 0x7487fa73, (jint) 0x410bfb2e,
#line 435
              (jint) 0x1d67b35a, (jint) 0xd2db9252, (jint) 0x5610e933, (jint) 0x47d66d13, (jint) 0x61d79a8c,
#line 436
              (jint) 0x0ca1377a, (jint) 0x14f8598e, (jint) 0x3c13eb89, (jint) 0x27a9ceee, (jint) 0xc961b735,
#line 437
              (jint) 0xe51ce1ed, (jint) 0xb1477a3c, (jint) 0xdfd29c59, (jint) 0x73f2553f, (jint) 0xce141879,
#line 438
              (jint) 0x37c773bf, (jint) 0xcdf753ea, (jint) 0xaafd5f5b, (jint) 0x6f3ddf14, (jint) 0xdb447886,
#line 439
              (jint) 0xf3afca81, (jint) 0xc468b93e, (jint) 0x3424382c, (jint) 0x40a3c25f, (jint) 0xc31d1672,
#line 440
              (jint) 0x25e2bc0c, (jint) 0x493c288b, (jint) 0x950dff41, (jint) 0x01a83971, (jint) 0xb30c08de,
#line 441
              (jint) 0xe4b4d89c, (jint) 0xc1566490, (jint) 0x84cb7b61, (jint) 0xb632d570, (jint) 0x5c6c4874,
#line 442
              (jint) 0x57b8d042,
#line 445
              (jint) 0xf45150a7, (jint) 0x417e5365, (jint) 0x171ac3a4, (jint) 0x273a965e, (jint) 0xab3bcb6b,
#line 446
              (jint) 0x9d1ff145, (jint) 0xfaacab58, (jint) 0xe34b9303, (jint) 0x302055fa, (jint) 0x76adf66d,
#line 447
              (jint) 0xcc889176, (jint) 0x02f5254c, (jint) 0xe54ffcd7, (jint) 0x2ac5d7cb, (jint) 0x35268044,
#line 448
              (jint) 0x62b58fa3, (jint) 0xb1de495a, (jint) 0xba25671b, (jint) 0xea45980e, (jint) 0xfe5de1c0,
#line 449
              (jint) 0x2fc30275, (jint) 0x4c8112f0, (jint) 0x468da397, (jint) 0xd36bc6f9, (jint) 0x8f03e75f,
#line 450
              (jint) 0x9215959c, (jint) 0x6dbfeb7a, (jint) 0x5295da59, (jint) 0xbed42d83, (jint) 0x7458d321,
#line 451
              (jint) 0xe0492969, (jint) 0xc98e44c8, (jint) 0xc2756a89, (jint) 0x8ef47879, (jint) 0x58996b3e,
#line 452
              (jint) 0xb927dd71, (jint) 0xe1beb64f, (jint) 0x88f017ad, (jint) 0x20c966ac, (jint) 0xce7db43a,
#line 453
              (jint) 0xdf63184a, (jint) 0x1ae58231, (jint) 0x51976033, (jint) 0x5362457f, (jint) 0x64b1e077,
#line 454
              (jint) 0x6bbb84ae, (jint) 0x81fe1ca0, (jint) 0x08f9942b, (jint) 0x48705868, (jint) 0x458f19fd,
#line 455
              (jint) 0xde94876c, (jint) 0x7b52b7f8, (jint) 0x73ab23d3, (jint) 0x4b72e202, (jint) 0x1fe3578f,
#line 456
              (jint) 0x55662aab, (jint) 0xebb20728, (jint) 0xb52f03c2, (jint) 0xc5869a7b, (jint) 0x37d3a508,
#line 457
              (jint) 0x2830f287, (jint) 0xbf23b2a5, (jint) 0x0302ba6a, (jint) 0x16ed5c82, (jint) 0xcf8a2b1c,
#line 458
              (jint) 0x79a792b4, (jint) 0x07f3f0f2, (jint) 0x694ea1e2, (jint) 0xda65cdf4, (jint) 0x0506d5be,
#line 459
              (jint) 0x34d11f62, (jint) 0xa6c48afe, (jint) 0x2e349d53, (jint) 0xf3a2a055, (jint) 0x8a0532e1,
#line 460
              (jint) 0xf6a475eb, (jint) 0x830b39ec, (jint) 0x6040aaef, (jint) 0x715e069f, (jint) 0x6ebd5110,
#line 461
              (jint) 0x213ef98a, (jint) 0xdd963d06, (jint) 0x3eddae05, (jint) 0xe64d46bd, (jint) 0x5491b58d,
#line 462
              (jint) 0xc471055d, (jint) 0x06046fd4, (jint) 0x5060ff15, (jint) 0x981924fb, (jint) 0xbdd697e9,
#line 463
              (jint) 0x4089cc43, (jint) 0xd967779e, (jint) 0xe8b0bd42, (jint) 0x8907888b, (jint) 0x19e7385b,
#line 464
              (jint) 0xc879dbee, (jint) 0x7ca1470a, (jint) 0x427ce90f, (jint) 0x84f8c91e, (jint) 0x00000000,
#line 465
              (jint) 0x80098386, (jint) 0x2b3248ed, (jint) 0x111eac70, (jint) 0x5a6c4e72, (jint) 0x0efdfbff,
#line 466
              (jint) 0x850f5638, (jint) 0xae3d1ed5, (jint) 0x2d362739, (jint) 0x0f0a64d9, (jint) 0x5c6821a6,
#line 467
              (jint) 0x5b9bd154, (jint) 0x36243a2e, (jint) 0x0a0cb167, (jint) 0x57930fe7, (jint) 0xeeb4d296,
#line 468
              (jint) 0x9b1b9e91, (jint) 0xc0804fc5, (jint) 0xdc61a220, (jint) 0x775a694b, (jint) 0x121c161a,
#line 469
              (jint) 0x93e20aba, (jint) 0xa0c0e52a, (jint) 0x223c43e0, (jint) 0x1b121d17, (jint) 0x090e0b0d,
#line 470
              (jint) 0x8bf2adc7, (jint) 0xb62db9a8, (jint) 0x1e14c8a9, (jint) 0xf1578519, (jint) 0x75af4c07,
#line 471
              (jint) 0x99eebbdd, (jint) 0x7fa3fd60, (jint) 0x01f79f26, (jint) 0x725cbcf5, (jint) 0x6644c53b,
#line 472
              (jint) 0xfb5b347e, (jint) 0x438b7629, (jint) 0x23cbdcc6, (jint) 0xedb668fc, (jint) 0xe4b863f1,
#line 473
              (jint) 0x31d7cadc, (jint) 0x63421085, (jint) 0x97134022, (jint) 0xc6842011, (jint) 0x4a857d24,
#line 474
              (jint) 0xbbd2f83d, (jint) 0xf9ae1132, (jint) 0x29c76da1, (jint) 0x9e1d4b2f, (jint) 0xb2dcf330,
#line 475
              (jint) 0x860dec52, (jint) 0xc177d0e3, (jint) 0xb32b6c16, (jint) 0x70a999b9, (jint) 0x9411fa48,
#line 476
              (jint) 0xe9472264, (jint) 0xfca8c48c, (jint) 0xf0a01a3f, (jint) 0x7d56d82c, (jint) 0x3322ef90,
#line 477
              (jint) 0x4987c74e, (jint) 0x38d9c1d1, (jint) 0xca8cfea2, (jint) 0xd498360b, (jint) 0xf5a6cf81,
#line 478
              (jint) 0x7aa528de, (jint) 0xb7da268e, (jint) 0xad3fa4bf, (jint) 0x3a2ce49d, (jint) 0x78500d92,
#line 479
              (jint) 0x5f6a9bcc, (jint) 0x7e546246, (jint) 0x8df6c213, (jint) 0xd890e8b8, (jint) 0x392e5ef7,
#line 480
              (jint) 0xc382f5af, (jint) 0x5d9fbe80, (jint) 0xd0697c93, (jint) 0xd56fa92d, (jint) 0x25cfb312,
#line 481
              (jint) 0xacc83b99, (jint) 0x1810a77d, (jint) 0x9ce86e63, (jint) 0x3bdb7bbb, (jint) 0x26cd0978,
#line 482
              (jint) 0x596ef418, (jint) 0x9aec01b7, (jint) 0x4f83a89a, (jint) 0x95e6656e, (jint) 0xffaa7ee6,
#line 483
              (jint) 0xbc2108cf, (jint) 0x15efe6e8, (jint) 0xe7bad99b, (jint) 0x6f4ace36, (jint) 0x9fead409,
#line 484
              (jint) 0xb029d67c, (jint) 0xa431afb2, (jint) 0x3f2a3123, (jint) 0xa5c63094, (jint) 0xa235c066,
#line 485
              (jint) 0x4e7437bc, (jint) 0x82fca6ca, (jint) 0x90e0b0d0, (jint) 0xa73315d8, (jint) 0x04f14a98,
#line 486
              (jint) 0xec41f7da, (jint) 0xcd7f0e50, (jint) 0x91172ff6, (jint) 0x4d768dd6, (jint) 0xef434db0,
#line 487
              (jint) 0xaacc544d, (jint) 0x96e4df04, (jint) 0xd19ee3b5, (jint) 0x6a4c1b88, (jint) 0x2cc1b81f,
#line 488
              (jint) 0x65467f51, (jint) 0x5e9d04ea, (jint) 0x8c015d35, (jint) 0x87fa7374, (jint) 0x0bfb2e41,
#line 489
              (jint) 0x67b35a1d, (jint) 0xdb9252d2, (jint) 0x10e93356, (jint) 0xd66d1347, (jint) 0xd79a8c61,
#line 490
              (jint) 0xa1377a0c, (jint) 0xf8598e14, (jint) 0x13eb893c, (jint) 0xa9ceee27, (jint) 0x61b735c9,
#line 491
              (jint) 0x1ce1ede5, (jint) 0x477a3cb1, (jint) 0xd29c59df, (jint) 0xf2553f73, (jint) 0x141879ce,
#line 492
              (jint) 0xc773bf37, (jint) 0xf753eacd, (jint) 0xfd5f5baa, (jint) 0x3ddf146f, (jint) 0x447886db,
#line 493
              (jint) 0xafca81f3, (jint) 0x68b93ec4, (jint) 0x24382c34, (jint) 0xa3c25f40, (jint) 0x1d1672c3,
#line 494
              (jint) 0xe2bc0c25, (jint) 0x3c288b49, (jint) 0x0dff4195, (jint) 0xa8397101, (jint) 0x0c08deb3,
#line 495
              (jint) 0xb4d89ce4, (jint) 0x566490c1, (jint) 0xcb7b6184, (jint) 0x32d570b6, (jint) 0x6c48745c,
#line 496
              (jint) 0xb8d04257,
#line 499
              (jint) 0x5150a7f4, (jint) 0x7e536541, (jint) 0x1ac3a417, (jint) 0x3a965e27, (jint) 0x3bcb6bab,
#line 500
              (jint) 0x1ff1459d, (jint) 0xacab58fa, (jint) 0x4b9303e3, (jint) 0x2055fa30, (jint) 0xadf66d76,
#line 501
              (jint) 0x889176cc, (jint) 0xf5254c02, (jint) 0x4ffcd7e5, (jint) 0xc5d7cb2a, (jint) 0x26804435,
#line 502
              (jint) 0xb58fa362, (jint) 0xde495ab1, (jint) 0x25671bba, (jint) 0x45980eea, (jint) 0x5de1c0fe,
#line 503
              (jint) 0xc302752f, (jint) 0x8112f04c, (jint) 0x8da39746, (jint) 0x6bc6f9d3, (jint) 0x03e75f8f,
#line 504
              (jint) 0x15959c92, (jint) 0xbfeb7a6d, (jint) 0x95da5952, (jint) 0xd42d83be, (jint) 0x58d32174,
#line 505
              (jint) 0x492969e0, (jint) 0x8e44c8c9, (jint) 0x756a89c2, (jint) 0xf478798e, (jint) 0x996b3e58,
#line 506
              (jint) 0x27dd71b9, (jint) 0xbeb64fe1, (jint) 0xf017ad88, (jint) 0xc966ac20, (jint) 0x7db43ace,
#line 507
              (jint) 0x63184adf, (jint) 0xe582311a, (jint) 0x97603351, (jint) 0x62457f53, (jint) 0xb1e07764,
#line 508
              (jint) 0xbb84ae6b, (jint) 0xfe1ca081, (jint) 0xf9942b08, (jint) 0x70586848, (jint) 0x8f19fd45,
#line 509
              (jint) 0x94876cde, (jint) 0x52b7f87b, (jint) 0xab23d373, (jint) 0x72e2024b, (jint) 0xe3578f1f,
#line 510
              (jint) 0x662aab55, (jint) 0xb20728eb, (jint) 0x2f03c2b5, (jint) 0x869a7bc5, (jint) 0xd3a50837,
#line 511
              (jint) 0x30f28728, (jint) 0x23b2a5bf, (jint) 0x02ba6a03, (jint) 0xed5c8216, (jint) 0x8a2b1ccf,
#line 512
              (jint) 0xa792b479, (jint) 0xf3f0f207, (jint) 0x4ea1e269, (jint) 0x65cdf4da, (jint) 0x06d5be05,
#line 513
              (jint) 0xd11f6234, (jint) 0xc48afea6, (jint) 0x349d532e, (jint) 0xa2a055f3, (jint) 0x0532e18a,
#line 514
              (jint) 0xa475ebf6, (jint) 0x0b39ec83, (jint) 0x40aaef60, (jint) 0x5e069f71, (jint) 0xbd51106e,
#line 515
              (jint) 0x3ef98a21, (jint) 0x963d06dd, (jint) 0xddae053e, (jint) 0x4d46bde6, (jint) 0x91b58d54,
#line 516
              (jint) 0x71055dc4, (jint) 0x046fd406, (jint) 0x60ff1550, (jint) 0x1924fb98, (jint) 0xd697e9bd,
#line 517
              (jint) 0x89cc4340, (jint) 0x67779ed9, (jint) 0xb0bd42e8, (jint) 0x07888b89, (jint) 0xe7385b19,
#line 518
              (jint) 0x79dbeec8, (jint) 0xa1470a7c, (jint) 0x7ce90f42, (jint) 0xf8c91e84, (jint) 0x00000000,
#line 519
              (jint) 0x09838680, (jint) 0x3248ed2b, (jint) 0x1eac7011, (jint) 0x6c4e725a, (jint) 0xfdfbff0e,
#line 520
              (jint) 0x0f563885, (jint) 0x3d1ed5ae, (jint) 0x3627392d, (jint) 0x0a64d90f, (jint) 0x6821a65c,
#line 521
              (jint) 0x9bd1545b, (jint) 0x243a2e36, (jint) 0x0cb1670a, (jint) 0x930fe757, (jint) 0xb4d296ee,
#line 522
              (jint) 0x1b9e919b, (jint) 0x804fc5c0, (jint) 0x61a220dc, (jint) 0x5a694b77, (jint) 0x1c161a12,
#line 523
              (jint) 0xe20aba93, (jint) 0xc0e52aa0, (jint) 0x3c43e022, (jint) 0x121d171b, (jint) 0x0e0b0d09,
#line 524
              (jint) 0xf2adc78b, (jint) 0x2db9a8b6, (jint) 0x14c8a91e, (jint) 0x578519f1, (jint) 0xaf4c0775,
#line 525
              (jint) 0xeebbdd99, (jint) 0xa3fd607f, (jint) 0xf79f2601, (jint) 0x5cbcf572, (jint) 0x44c53b66,
#line 526
              (jint) 0x5b347efb, (jint) 0x8b762943, (jint) 0xcbdcc623, (jint) 0xb668fced, (jint) 0xb863f1e4,
#line 527
              (jint) 0xd7cadc31, (jint) 0x42108563, (jint) 0x13402297, (jint) 0x842011c6, (jint) 0x857d244a,
#line 528
              (jint) 0xd2f83dbb, (jint) 0xae1132f9, (jint) 0xc76da129, (jint) 0x1d4b2f9e, (jint) 0xdcf330b2,
#line 529
              (jint) 0x0dec5286, (jint) 0x77d0e3c1, (jint) 0x2b6c16b3, (jint) 0xa999b970, (jint) 0x11fa4894,
#line 530
              (jint) 0x472264e9, (jint) 0xa8c48cfc, (jint) 0xa01a3ff0, (jint) 0x56d82c7d, (jint) 0x22ef9033,
#line 531
              (jint) 0x87c74e49, (jint) 0xd9c1d138, (jint) 0x8cfea2ca, (jint) 0x98360bd4, (jint) 0xa6cf81f5,
#line 532
              (jint) 0xa528de7a, (jint) 0xda268eb7, (jint) 0x3fa4bfad, (jint) 0x2ce49d3a, (jint) 0x500d9278,
#line 533
              (jint) 0x6a9bcc5f, (jint) 0x5462467e, (jint) 0xf6c2138d, (jint) 0x90e8b8d8, (jint) 0x2e5ef739,
#line 534
              (jint) 0x82f5afc3, (jint) 0x9fbe805d, (jint) 0x697c93d0, (jint) 0x6fa92dd5, (jint) 0xcfb31225,
#line 535
              (jint) 0xc83b99ac, (jint) 0x10a77d18, (jint) 0xe86e639c, (jint) 0xdb7bbb3b, (jint) 0xcd097826,
#line 536
              (jint) 0x6ef41859, (jint) 0xec01b79a, (jint) 0x83a89a4f, (jint) 0xe6656e95, (jint) 0xaa7ee6ff,
#line 537
              (jint) 0x2108cfbc, (jint) 0xefe6e815, (jint) 0xbad99be7, (jint) 0x4ace366f, (jint) 0xead4099f,
#line 538
              (jint) 0x29d67cb0, (jint) 0x31afb2a4, (jint) 0x2a31233f, (jint) 0xc63094a5, (jint) 0x35c066a2,
#line 539
              (jint) 0x7437bc4e, (jint) 0xfca6ca82, (jint) 0xe0b0d090, (jint) 0x3315d8a7, (jint) 0xf14a9804,
#line 540
              (jint) 0x41f7daec, (jint) 0x7f0e50cd, (jint) 0x172ff691, (jint) 0x768dd64d, (jint) 0x434db0ef,
#line 541
              (jint) 0xcc544daa, (jint) 0xe4df0496, (jint) 0x9ee3b5d1, (jint) 0x4c1b886a, (jint) 0xc1b81f2c,
#line 542
              (jint) 0x467f5165, (jint) 0x9d04ea5e, (jint) 0x015d358c, (jint) 0xfa737487, (jint) 0xfb2e410b,
#line 543
              (jint) 0xb35a1d67, (jint) 0x9252d2db, (jint) 0xe9335610, (jint) 0x6d1347d6, (jint) 0x9a8c61d7,
#line 544
              (jint) 0x377a0ca1, (jint) 0x598e14f8, (jint) 0xeb893c13, (jint) 0xceee27a9, (jint) 0xb735c961,
#line 545
              (jint) 0xe1ede51c, (jint) 0x7a3cb147, (jint) 0x9c59dfd2, (jint) 0x553f73f2, (jint) 0x1879ce14,
#line 546
              (jint) 0x73bf37c7, (jint) 0x53eacdf7, (jint) 0x5f5baafd, (jint) 0xdf146f3d, (jint) 0x7886db44,
#line 547
              (jint) 0xca81f3af, (jint) 0xb93ec468, (jint) 0x382c3424, (jint) 0xc25f40a3, (jint) 0x1672c31d,
#line 548
              (jint) 0xbc0c25e2, (jint) 0x288b493c, (jint) 0xff41950d, (jint) 0x397101a8, (jint) 0x08deb30c,
#line 549
              (jint) 0xd89ce4b4, (jint) 0x6490c156, (jint) 0x7b6184cb, (jint) 0xd570b632, (jint) 0x48745c6c,
#line 550
              (jint) 0xd04257b8 } count:1024];
              J2OBJC_SET_INITIALIZED(OrgSpongycastleCryptoEnginesAESFastEngine)
            }
          }

@end


#line 552
jint OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(jint r, jint shift) {
  OrgSpongycastleCryptoEnginesAESFastEngine_initialize();
  return (JreURShift32(r, shift)) | (JreLShift32(r, -shift));
}


#line 565
jint OrgSpongycastleCryptoEnginesAESFastEngine_FFmulXWithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESFastEngine_initialize();
  return ((JreLShift32((x & OrgSpongycastleCryptoEnginesAESFastEngine_m2), 1)) ^ ((JreURShift32((x & OrgSpongycastleCryptoEnginesAESFastEngine_m1), 7)) * OrgSpongycastleCryptoEnginesAESFastEngine_m3));
}

jint OrgSpongycastleCryptoEnginesAESFastEngine_FFmulX2WithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESFastEngine_initialize();
  jint t0 = JreLShift32((x & OrgSpongycastleCryptoEnginesAESFastEngine_m5), 2);
  jint t1 = (x & OrgSpongycastleCryptoEnginesAESFastEngine_m4);
  t1 ^= (JreURShift32(t1, 1));
  return t0 ^ (JreURShift32(t1, 2)) ^ (JreURShift32(t1, 5));
}


#line 588
jint OrgSpongycastleCryptoEnginesAESFastEngine_inv_mcolWithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESFastEngine_initialize();
  jint t0;
  
#line 590
  jint t1;
  t0 = x;
  t1 = t0 ^ OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t0, 8);
  t0 ^= OrgSpongycastleCryptoEnginesAESFastEngine_FFmulXWithInt_(t1);
  t1 ^= OrgSpongycastleCryptoEnginesAESFastEngine_FFmulX2WithInt_(t0);
  t0 ^= t1 ^ OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t1, 16);
  return t0;
}


#line 599
jint OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(jint x) {
  OrgSpongycastleCryptoEnginesAESFastEngine_initialize();
  jint i0 = x;
  
#line 601
  jint i1 = JreURShift32(x, 8);
  
#line 601
  jint i2 = JreURShift32(x, 16);
  
#line 601
  jint i3 = JreURShift32(x, 24);
  i0 = IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_S), i0 & 255) & 255;
  
#line 602
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i1 & 255) & 255;
  
#line 602
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i2 & 255) & 255;
  
#line 602
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i3 & 255) & 255;
  return i0 | (JreLShift32(i1, 8)) | (JreLShift32(i2, 16)) | (JreLShift32(i3, 24));
}


#line 612
IOSObjectArray *OrgSpongycastleCryptoEnginesAESFastEngine_generateWorkingKeyWithByteArray_withBoolean_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSByteArray *key, jboolean forEncryption) {
  
#line 614
  jint keyLen = ((IOSByteArray *) nil_chk(key))->size_;
  if (keyLen < 16 || keyLen > 32 || (keyLen & 7) != 0) {
    
#line 617
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key length not 128/192/256 bits.");
  }
  
#line 620
  jint KC = JreURShift32(keyLen, 2);
  self->ROUNDS_ = KC + 6;
  IOSObjectArray *W = [IOSIntArray newArrayWithDimensions:2 lengths:(jint[]){ self->ROUNDS_ + 1, 4 }];
  
#line 624
  switch (KC) {
    
#line 626
    case 4:
    {
      jint t0 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 0);
      
#line 628
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 0) = t0;
      jint t1 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 4);
      
#line 629
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 1) = t1;
      jint t2 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 8);
      
#line 630
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 2) = t2;
      jint t3 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 12);
      
#line 631
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 3) = t3;
      
#line 633
      for (jint i = 1; i <= 10; ++i) {
        
#line 635
        jint u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t3, 8)) ^ IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_rcon), i - 1);
        t0 ^= u;
        
#line 636
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 0) = t0;
        t1 ^= t0;
        
#line 637
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 1) = t1;
        t2 ^= t1;
        
#line 638
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 2) = t2;
        t3 ^= t2;
        
#line 639
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 3) = t3;
      }
      
#line 642
      break;
    }
    case 6:
    {
      jint t0 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 0);
      
#line 646
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 0) = t0;
      jint t1 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 4);
      
#line 647
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 1) = t1;
      jint t2 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 8);
      
#line 648
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 2) = t2;
      jint t3 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 12);
      
#line 649
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 3) = t3;
      jint t4 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 16);
      
#line 650
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 0) = t4;
      jint t5 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 20);
      
#line 651
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 1) = t5;
      
#line 653
      jint rcon = 1;
      jint u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
      
#line 654
      JreLShiftAssignInt(&rcon, 1);
      t0 ^= u;
      
#line 655
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 2) = t0;
      t1 ^= t0;
      
#line 656
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 3) = t1;
      t2 ^= t1;
      
#line 657
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 0) = t2;
      t3 ^= t2;
      
#line 658
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 1) = t3;
      t4 ^= t3;
      
#line 659
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 2) = t4;
      t5 ^= t4;
      
#line 660
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 2)), 3) = t5;
      
#line 662
      for (jint i = 3; i < 12; i += 3) {
        
#line 664
        u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
        
#line 664
        JreLShiftAssignInt(&rcon, 1);
        t0 ^= u;
        
#line 665
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 0) = t0;
        t1 ^= t0;
        
#line 666
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 1) = t1;
        t2 ^= t1;
        
#line 667
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 2) = t2;
        t3 ^= t2;
        
#line 668
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 3) = t3;
        t4 ^= t3;
        
#line 669
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 0) = t4;
        t5 ^= t4;
        
#line 670
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 1) = t5;
        u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
        
#line 671
        JreLShiftAssignInt(&rcon, 1);
        t0 ^= u;
        
#line 672
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 2) = t0;
        t1 ^= t0;
        
#line 673
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 3) = t1;
        t2 ^= t1;
        
#line 674
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 0) = t2;
        t3 ^= t2;
        
#line 675
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 1) = t3;
        t4 ^= t3;
        
#line 676
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 2) = t4;
        t5 ^= t4;
        
#line 677
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 2)), 3) = t5;
      }
      
#line 680
      u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t5, 8)) ^ rcon;
      t0 ^= u;
      
#line 681
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 0) = t0;
      t1 ^= t0;
      
#line 682
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 1) = t1;
      t2 ^= t1;
      
#line 683
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 2) = t2;
      t3 ^= t2;
      
#line 684
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 12)), 3) = t3;
      
#line 686
      break;
    }
    case 8:
    {
      jint t0 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 0);
      
#line 690
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 0) = t0;
      jint t1 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 4);
      
#line 691
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 1) = t1;
      jint t2 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 8);
      
#line 692
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 2) = t2;
      jint t3 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 12);
      
#line 693
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 0)), 3) = t3;
      jint t4 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 16);
      
#line 694
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 0) = t4;
      jint t5 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 20);
      
#line 695
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 1) = t5;
      jint t6 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 24);
      
#line 696
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 2) = t6;
      jint t7 = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(key, 28);
      
#line 697
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 1)), 3) = t7;
      
#line 699
      jint u;
      
#line 699
      jint rcon = 1;
      
#line 701
      for (jint i = 2; i < 14; i += 2) {
        
#line 703
        u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t7, 8)) ^ rcon;
        
#line 703
        JreLShiftAssignInt(&rcon, 1);
        t0 ^= u;
        
#line 704
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 0) = t0;
        t1 ^= t0;
        
#line 705
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 1) = t1;
        t2 ^= t1;
        
#line 706
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 2) = t2;
        t3 ^= t2;
        
#line 707
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i)), 3) = t3;
        u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(t3);
        t4 ^= u;
        
#line 709
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 0) = t4;
        t5 ^= t4;
        
#line 710
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 1) = t5;
        t6 ^= t5;
        
#line 711
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 2) = t6;
        t7 ^= t6;
        
#line 712
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, i + 1)), 3) = t7;
      }
      
#line 715
      u = OrgSpongycastleCryptoEnginesAESFastEngine_subWordWithInt_(OrgSpongycastleCryptoEnginesAESFastEngine_shiftWithInt_withInt_(t7, 8)) ^ rcon;
      t0 ^= u;
      
#line 716
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 0) = t0;
      t1 ^= t0;
      
#line 717
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 1) = t1;
      t2 ^= t1;
      
#line 718
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 2) = t2;
      t3 ^= t2;
      
#line 719
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, 14)), 3) = t3;
      
#line 721
      break;
    }
    default:
    {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"Should never get here");
    }
  }
  
#line 729
  if (!forEncryption) {
    
#line 731
    for (jint j = 1; j < self->ROUNDS_; j++) {
      
#line 733
      for (jint i = 0; i < 4; i++) {
        
#line 735
        *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(W, j)), i) = OrgSpongycastleCryptoEnginesAESFastEngine_inv_mcolWithInt_(IOSIntArray_Get(nil_chk(IOSObjectArray_Get(W, j)), i));
      }
    }
  }
  
#line 740
  return W;
}


#line 753
void OrgSpongycastleCryptoEnginesAESFastEngine_init(OrgSpongycastleCryptoEnginesAESFastEngine *self) {
  NSObject_init(self);
  self->WorkingKey_ =
#line 744
  nil;
}


#line 753
OrgSpongycastleCryptoEnginesAESFastEngine *new_OrgSpongycastleCryptoEnginesAESFastEngine_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCryptoEnginesAESFastEngine, init)
}


#line 753
OrgSpongycastleCryptoEnginesAESFastEngine *create_OrgSpongycastleCryptoEnginesAESFastEngine_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCryptoEnginesAESFastEngine, init)
}


#line 830
void OrgSpongycastleCryptoEnginesAESFastEngine_unpackBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSByteArray *bytes, jint off) {
  
#line 832
  self->C0_ = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bytes, off);
  self->C1_ = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bytes, off + 4);
  self->C2_ = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bytes, off + 8);
  self->C3_ = OrgSpongycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bytes, off + 12);
}


#line 838
void OrgSpongycastleCryptoEnginesAESFastEngine_packBlockWithByteArray_withInt_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSByteArray *bytes, jint off) {
  
#line 840
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(self->C0_, bytes, off);
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(self->C1_, bytes, off + 4);
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(self->C2_, bytes, off + 8);
  OrgSpongycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(self->C3_, bytes, off + 12);
}


#line 846
void OrgSpongycastleCryptoEnginesAESFastEngine_encryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSObjectArray *KW) {
  
#line 848
  jint t0 = self->C0_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(KW), 0)), 0);
  jint t1 = self->C1_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 1);
  jint t2 = self->C2_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 2);
  
#line 859
  jint r = 1;
  
#line 859
  jint r0;
  
#line 859
  jint r1;
  
#line 859
  jint r2;
  
#line 859
  jint r3 = self->C3_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 3);
  jint i0;
  
#line 860
  jint i1;
  
#line 860
  jint i2;
  
#line 860
  jint i3;
  
#line 862
  while (r < self->ROUNDS_ - 1) {
    
#line 864
    i0 = t0;
    
#line 864
    i1 = JreURShift32(t1, 8);
    
#line 864
    i2 = JreURShift32(t2, 16);
    
#line 864
    i3 = JreURShift32(r3, 24);
    i0 &= 255;
    
#line 865
    i1 &= 255;
    
#line 865
    i2 &= 255;
    
#line 865
    i3 &= 255;
    r0 = IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_T), i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    
#line 868
    i0 = t1;
    
#line 868
    i1 = JreURShift32(t2, 8);
    
#line 868
    i2 = JreURShift32(r3, 16);
    
#line 868
    i3 = JreURShift32(t0, 24);
    i0 &= 255;
    
#line 869
    i1 &= 255;
    
#line 869
    i2 &= 255;
    
#line 869
    i3 &= 255;
    r1 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    
#line 872
    i0 = t2;
    
#line 872
    i1 = JreURShift32(r3, 8);
    
#line 872
    i2 = JreURShift32(t0, 16);
    
#line 872
    i3 = JreURShift32(t1, 24);
    i0 &= 255;
    
#line 873
    i1 &= 255;
    
#line 873
    i2 &= 255;
    
#line 873
    i3 &= 255;
    r2 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    
#line 876
    i0 = r3;
    
#line 876
    i1 = JreURShift32(t0, 8);
    
#line 876
    i2 = JreURShift32(t1, 16);
    
#line 876
    i3 = JreURShift32(t2, 24);
    i0 &= 255;
    
#line 877
    i1 &= 255;
    
#line 877
    i2 &= 255;
    
#line 877
    i3 &= 255;
    r3 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r++)), 3);
    
#line 880
    i0 = r0;
    
#line 880
    i1 = JreURShift32(r1, 8);
    
#line 880
    i2 = JreURShift32(r2, 16);
    
#line 880
    i3 = JreURShift32(r3, 24);
    i0 &= 255;
    
#line 881
    i1 &= 255;
    
#line 881
    i2 &= 255;
    
#line 881
    i3 &= 255;
    t0 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    
#line 884
    i0 = r1;
    
#line 884
    i1 = JreURShift32(r2, 8);
    
#line 884
    i2 = JreURShift32(r3, 16);
    
#line 884
    i3 = JreURShift32(r0, 24);
    i0 &= 255;
    
#line 885
    i1 &= 255;
    
#line 885
    i2 &= 255;
    
#line 885
    i3 &= 255;
    t1 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    
#line 888
    i0 = r2;
    
#line 888
    i1 = JreURShift32(r3, 8);
    
#line 888
    i2 = JreURShift32(r0, 16);
    
#line 888
    i3 = JreURShift32(r1, 24);
    i0 &= 255;
    
#line 889
    i1 &= 255;
    
#line 889
    i2 &= 255;
    
#line 889
    i3 &= 255;
    t2 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    
#line 892
    i0 = r3;
    
#line 892
    i1 = JreURShift32(r0, 8);
    
#line 892
    i2 = JreURShift32(r1, 16);
    
#line 892
    i3 = JreURShift32(r2, 24);
    i0 &= 255;
    
#line 893
    i1 &= 255;
    
#line 893
    i2 &= 255;
    
#line 893
    i3 &= 255;
    r3 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r++)), 3);
  }
  
#line 897
  i0 = t0;
  
#line 897
  i1 = JreURShift32(t1, 8);
  
#line 897
  i2 = JreURShift32(t2, 16);
  
#line 897
  i3 = JreURShift32(r3, 24);
  i0 &= 255;
  
#line 898
  i1 &= 255;
  
#line 898
  i2 &= 255;
  
#line 898
  i3 &= 255;
  r0 = IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_T), i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
  
#line 901
  i0 = t1;
  
#line 901
  i1 = JreURShift32(t2, 8);
  
#line 901
  i2 = JreURShift32(r3, 16);
  
#line 901
  i3 = JreURShift32(t0, 24);
  i0 &= 255;
  
#line 902
  i1 &= 255;
  
#line 902
  i2 &= 255;
  
#line 902
  i3 &= 255;
  r1 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
  
#line 905
  i0 = t2;
  
#line 905
  i1 = JreURShift32(r3, 8);
  
#line 905
  i2 = JreURShift32(t0, 16);
  
#line 905
  i3 = JreURShift32(t1, 24);
  i0 &= 255;
  
#line 906
  i1 &= 255;
  
#line 906
  i2 &= 255;
  
#line 906
  i3 &= 255;
  r2 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
  
#line 909
  i0 = r3;
  
#line 909
  i1 = JreURShift32(t0, 8);
  
#line 909
  i2 = JreURShift32(t1, 16);
  
#line 909
  i3 = JreURShift32(t2, 24);
  i0 &= 255;
  
#line 910
  i1 &= 255;
  
#line 910
  i2 &= 255;
  
#line 910
  i3 &= 255;
  r3 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_T, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r++)), 3);
  
#line 915
  i0 = r0;
  
#line 915
  i1 = JreURShift32(r1, 8);
  
#line 915
  i2 = JreURShift32(r2, 16);
  
#line 915
  i3 = JreURShift32(r3, 24);
  i0 = IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_S), i0 & 255) & 255;
  
#line 916
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i1 & 255) & 255;
  
#line 916
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i2 & 255) & 255;
  
#line 916
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i3 & 255) & 255;
  self->C0_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
  
#line 919
  i0 = r1;
  
#line 919
  i1 = JreURShift32(r2, 8);
  
#line 919
  i2 = JreURShift32(r3, 16);
  
#line 919
  i3 = JreURShift32(r0, 24);
  i0 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i0 & 255) & 255;
  
#line 920
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i1 & 255) & 255;
  
#line 920
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i2 & 255) & 255;
  
#line 920
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i3 & 255) & 255;
  self->C1_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
  
#line 923
  i0 = r2;
  
#line 923
  i1 = JreURShift32(r3, 8);
  
#line 923
  i2 = JreURShift32(r0, 16);
  
#line 923
  i3 = JreURShift32(r1, 24);
  i0 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i0 & 255) & 255;
  
#line 924
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i1 & 255) & 255;
  
#line 924
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i2 & 255) & 255;
  
#line 924
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i3 & 255) & 255;
  self->C2_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
  
#line 927
  i0 = r3;
  
#line 927
  i1 = JreURShift32(r0, 8);
  
#line 927
  i2 = JreURShift32(r1, 16);
  
#line 927
  i3 = JreURShift32(r2, 24);
  i0 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i0 & 255) & 255;
  
#line 928
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i1 & 255) & 255;
  
#line 928
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i2 & 255) & 255;
  
#line 928
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_S, i3 & 255) & 255;
  self->C3_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 3);
}


#line 932
void OrgSpongycastleCryptoEnginesAESFastEngine_decryptBlockWithIntArray2_(OrgSpongycastleCryptoEnginesAESFastEngine *self, IOSObjectArray *KW) {
  
#line 934
  jint t0 = self->C0_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(KW), self->ROUNDS_)), 0);
  jint t1 = self->C1_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, self->ROUNDS_)), 1);
  jint t2 = self->C2_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, self->ROUNDS_)), 2);
  
#line 938
  jint r = self->ROUNDS_ - 1;
  
#line 938
  jint r0;
  
#line 938
  jint r1;
  
#line 938
  jint r2;
  
#line 938
  jint r3 = self->C3_ ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, self->ROUNDS_)), 3);
  jint i0;
  
#line 939
  jint i1;
  
#line 939
  jint i2;
  
#line 939
  jint i3;
  
#line 941
  while (r > 1) {
    
#line 943
    i0 = t0;
    
#line 943
    i1 = JreURShift32(r3, 8);
    
#line 943
    i2 = JreURShift32(t2, 16);
    
#line 943
    i3 = JreURShift32(t1, 24);
    i0 &= 255;
    
#line 944
    i1 &= 255;
    
#line 944
    i2 &= 255;
    
#line 944
    i3 &= 255;
    r0 = IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv), i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    
#line 947
    i0 = t1;
    
#line 947
    i1 = JreURShift32(t0, 8);
    
#line 947
    i2 = JreURShift32(r3, 16);
    
#line 947
    i3 = JreURShift32(t2, 24);
    i0 &= 255;
    
#line 948
    i1 &= 255;
    
#line 948
    i2 &= 255;
    
#line 948
    i3 &= 255;
    r1 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    
#line 951
    i0 = t2;
    
#line 951
    i1 = JreURShift32(t1, 8);
    
#line 951
    i2 = JreURShift32(t0, 16);
    
#line 951
    i3 = JreURShift32(r3, 24);
    i0 &= 255;
    
#line 952
    i1 &= 255;
    
#line 952
    i2 &= 255;
    
#line 952
    i3 &= 255;
    r2 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    
#line 955
    i0 = r3;
    
#line 955
    i1 = JreURShift32(t2, 8);
    
#line 955
    i2 = JreURShift32(t1, 16);
    
#line 955
    i3 = JreURShift32(t0, 24);
    i0 &= 255;
    
#line 956
    i1 &= 255;
    
#line 956
    i2 &= 255;
    
#line 956
    i3 &= 255;
    r3 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r--)), 3);
    
#line 959
    i0 = r0;
    
#line 959
    i1 = JreURShift32(r3, 8);
    
#line 959
    i2 = JreURShift32(r2, 16);
    
#line 959
    i3 = JreURShift32(r1, 24);
    i0 &= 255;
    
#line 960
    i1 &= 255;
    
#line 960
    i2 &= 255;
    
#line 960
    i3 &= 255;
    t0 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 0);
    
#line 963
    i0 = r1;
    
#line 963
    i1 = JreURShift32(r0, 8);
    
#line 963
    i2 = JreURShift32(r3, 16);
    
#line 963
    i3 = JreURShift32(r2, 24);
    i0 &= 255;
    
#line 964
    i1 &= 255;
    
#line 964
    i2 &= 255;
    
#line 964
    i3 &= 255;
    t1 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 1);
    
#line 967
    i0 = r2;
    
#line 967
    i1 = JreURShift32(r1, 8);
    
#line 967
    i2 = JreURShift32(r0, 16);
    
#line 967
    i3 = JreURShift32(r3, 24);
    i0 &= 255;
    
#line 968
    i1 &= 255;
    
#line 968
    i2 &= 255;
    
#line 968
    i3 &= 255;
    t2 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r)), 2);
    
#line 971
    i0 = r3;
    
#line 971
    i1 = JreURShift32(r2, 8);
    
#line 971
    i2 = JreURShift32(r1, 16);
    
#line 971
    i3 = JreURShift32(r0, 24);
    i0 &= 255;
    
#line 972
    i1 &= 255;
    
#line 972
    i2 &= 255;
    
#line 972
    i3 &= 255;
    r3 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, r--)), 3);
  }
  
#line 976
  i0 = t0;
  
#line 976
  i1 = JreURShift32(r3, 8);
  
#line 976
  i2 = JreURShift32(t2, 16);
  
#line 976
  i3 = JreURShift32(t1, 24);
  i0 &= 255;
  
#line 977
  i1 &= 255;
  
#line 977
  i2 &= 255;
  
#line 977
  i3 &= 255;
  r0 = IOSIntArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv), i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 1)), 0);
  
#line 980
  i0 = t1;
  
#line 980
  i1 = JreURShift32(t0, 8);
  
#line 980
  i2 = JreURShift32(r3, 16);
  
#line 980
  i3 = JreURShift32(t2, 24);
  i0 &= 255;
  
#line 981
  i1 &= 255;
  
#line 981
  i2 &= 255;
  
#line 981
  i3 &= 255;
  r1 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 1)), 1);
  
#line 984
  i0 = t2;
  
#line 984
  i1 = JreURShift32(t1, 8);
  
#line 984
  i2 = JreURShift32(t0, 16);
  
#line 984
  i3 = JreURShift32(r3, 24);
  i0 &= 255;
  
#line 985
  i1 &= 255;
  
#line 985
  i2 &= 255;
  
#line 985
  i3 &= 255;
  r2 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 1)), 2);
  
#line 988
  i0 = r3;
  
#line 988
  i1 = JreURShift32(t2, 8);
  
#line 988
  i2 = JreURShift32(t1, 16);
  
#line 988
  i3 = JreURShift32(t0, 24);
  i0 &= 255;
  
#line 989
  i1 &= 255;
  
#line 989
  i2 &= 255;
  
#line 989
  i3 &= 255;
  r3 = IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, i0) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 256 + i1) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 512 + i2) ^ IOSIntArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Tinv, 768 + i3) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 1)), 3);
  
#line 994
  i0 = r0;
  
#line 994
  i1 = JreURShift32(r3, 8);
  
#line 994
  i2 = JreURShift32(r2, 16);
  
#line 994
  i3 = JreURShift32(r1, 24);
  i0 = IOSByteArray_Get(nil_chk(OrgSpongycastleCryptoEnginesAESFastEngine_Si), i0 & 255) & 255;
  
#line 995
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i1 & 255) & 255;
  
#line 995
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i2 & 255) & 255;
  
#line 995
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i3 & 255) & 255;
  self->C0_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 0);
  
#line 998
  i0 = r1;
  
#line 998
  i1 = JreURShift32(r0, 8);
  
#line 998
  i2 = JreURShift32(r3, 16);
  
#line 998
  i3 = JreURShift32(r2, 24);
  i0 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i0 & 255) & 255;
  
#line 999
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i1 & 255) & 255;
  
#line 999
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i2 & 255) & 255;
  
#line 999
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i3 & 255) & 255;
  self->C1_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 1);
  
#line 1002
  i0 = r2;
  
#line 1002
  i1 = JreURShift32(r1, 8);
  
#line 1002
  i2 = JreURShift32(r0, 16);
  
#line 1002
  i3 = JreURShift32(r3, 24);
  i0 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i0 & 255) & 255;
  
#line 1003
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i1 & 255) & 255;
  
#line 1003
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i2 & 255) & 255;
  
#line 1003
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i3 & 255) & 255;
  self->C2_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 2);
  
#line 1006
  i0 = r3;
  
#line 1006
  i1 = JreURShift32(r2, 8);
  
#line 1006
  i2 = JreURShift32(r1, 16);
  
#line 1006
  i3 = JreURShift32(r0, 24);
  i0 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i0 & 255) & 255;
  
#line 1007
  i1 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i1 & 255) & 255;
  
#line 1007
  i2 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i2 & 255) & 255;
  
#line 1007
  i3 = IOSByteArray_Get(OrgSpongycastleCryptoEnginesAESFastEngine_Si, i3 & 255) & 255;
  self->C3_ = i0 ^ JreLShift32(i1, 8) ^ JreLShift32(i2, 16) ^ JreLShift32(i3, 24) ^ IOSIntArray_Get(nil_chk(IOSObjectArray_Get(KW, 0)), 3);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCryptoEnginesAESFastEngine)

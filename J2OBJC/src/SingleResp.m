//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cert/ocsp/SingleResp.java
//

#include "ASN1Encodable.h"
#include "ASN1GeneralizedTime.h"
#include "ASN1ObjectIdentifier.h"
#include "CertID.h"
#include "CertStatus.h"
#include "CertificateID.h"
#include "CertificateStatus.h"
#include "Extension.h"
#include "Extensions.h"
#include "J2ObjC_source.h"
#include "OCSPUtils.h"
#include "RevokedInfo.h"
#include "RevokedStatus.h"
#include "SingleResp.h"
#include "SingleResponse.h"
#include "UnknownStatus.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "java/util/Set.h"

#if !__has_feature(objc_arc)
#error "SingleResp must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCertOcspSingleResp () {
 @public
  OrgSpongycastleAsn1OcspSingleResponse *resp_;
  OrgSpongycastleAsn1X509Extensions *extensions_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCertOcspSingleResp, resp_, OrgSpongycastleAsn1OcspSingleResponse *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCertOcspSingleResp, extensions_, OrgSpongycastleAsn1X509Extensions *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/cert/ocsp/SingleResp.java"


#line 14
@implementation OrgSpongycastleCertOcspSingleResp


#line 19
- (instancetype)initWithOrgSpongycastleAsn1OcspSingleResponse:(OrgSpongycastleAsn1OcspSingleResponse *)resp {
  OrgSpongycastleCertOcspSingleResp_initWithOrgSpongycastleAsn1OcspSingleResponse_(self, resp);
  return self;
}


#line 26
- (OrgSpongycastleCertOcspCertificateID *)getCertID {
  
#line 28
  return new_OrgSpongycastleCertOcspCertificateID_initWithOrgSpongycastleAsn1OcspCertID_([((OrgSpongycastleAsn1OcspSingleResponse *) nil_chk(resp_)) getCertID]);
}


#line 36
- (id<OrgSpongycastleCertOcspCertificateStatus>)getCertStatus {
  
#line 38
  OrgSpongycastleAsn1OcspCertStatus *s = [((OrgSpongycastleAsn1OcspSingleResponse *) nil_chk(resp_)) getCertStatus];
  
#line 40
  if ([((OrgSpongycastleAsn1OcspCertStatus *) nil_chk(s)) getTagNo] == 0) {
    
#line 42
    return nil;
  }
  else if ([s getTagNo] == 1) {
    
#line 46
    return new_OrgSpongycastleCertOcspRevokedStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(OrgSpongycastleAsn1OcspRevokedInfo_getInstanceWithId_([s getStatus]));
  }
  
#line 49
  return new_OrgSpongycastleCertOcspUnknownStatus_init();
}


#line 52
- (JavaUtilDate *)getThisUpdate {
  
#line 54
  return OrgSpongycastleCertOcspOCSPUtils_extractDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_([((OrgSpongycastleAsn1OcspSingleResponse *) nil_chk(resp_)) getThisUpdate]);
}


#line 63
- (JavaUtilDate *)getNextUpdate {
  
#line 65
  if ([((OrgSpongycastleAsn1OcspSingleResponse *) nil_chk(resp_)) getNextUpdate] == nil) {
    
#line 67
    return nil;
  }
  
#line 70
  return OrgSpongycastleCertOcspOCSPUtils_extractDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_([((OrgSpongycastleAsn1OcspSingleResponse *) nil_chk(resp_)) getNextUpdate]);
}


#line 73
- (jboolean)hasExtensions {
  
#line 75
  return extensions_ != nil;
}


#line 78
- (OrgSpongycastleAsn1X509Extension *)getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 80
  if (extensions_ != nil) {
    
#line 82
    return [extensions_ getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid];
  }
  
#line 85
  return nil;
}


#line 88
- (id<JavaUtilList>)getExtensionOIDs {
  
#line 90
  return OrgSpongycastleCertOcspOCSPUtils_getExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions_);
}


#line 93
- (id<JavaUtilSet>)getCriticalExtensionOIDs {
  
#line 95
  return OrgSpongycastleCertOcspOCSPUtils_getCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions_);
}


#line 98
- (id<JavaUtilSet>)getNonCriticalExtensionOIDs {
  
#line 100
  return OrgSpongycastleCertOcspOCSPUtils_getNonCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCertOcspCertificateID;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCertOcspCertificateStatus;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Extension;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1OcspSingleResponse:);
  methods[1].selector = @selector(getCertID);
  methods[2].selector = @selector(getCertStatus);
  methods[3].selector = @selector(getThisUpdate);
  methods[4].selector = @selector(getNextUpdate);
  methods[5].selector = @selector(hasExtensions);
  methods[6].selector = @selector(getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[7].selector = @selector(getExtensionOIDs);
  methods[8].selector = @selector(getCriticalExtensionOIDs);
  methods[9].selector = @selector(getNonCriticalExtensionOIDs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resp_", "LOrgSpongycastleAsn1OcspSingleResponse;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extensions_", "LOrgSpongycastleAsn1X509Extensions;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1OcspSingleResponse;", "getExtension", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;" };
  static const J2ObjcClassInfo _OrgSpongycastleCertOcspSingleResp = { "SingleResp", "org.spongycastle.cert.ocsp", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertOcspSingleResp;
}

@end


#line 19
void OrgSpongycastleCertOcspSingleResp_initWithOrgSpongycastleAsn1OcspSingleResponse_(OrgSpongycastleCertOcspSingleResp *self, OrgSpongycastleAsn1OcspSingleResponse *resp) {
  NSObject_init(self);
  
#line 22
  self->resp_ = resp;
  self->extensions_ = [((OrgSpongycastleAsn1OcspSingleResponse *) nil_chk(resp)) getSingleExtensions];
}


#line 19
OrgSpongycastleCertOcspSingleResp *new_OrgSpongycastleCertOcspSingleResp_initWithOrgSpongycastleAsn1OcspSingleResponse_(OrgSpongycastleAsn1OcspSingleResponse *resp) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspSingleResp, initWithOrgSpongycastleAsn1OcspSingleResponse_, resp)
}


#line 19
OrgSpongycastleCertOcspSingleResp *create_OrgSpongycastleCertOcspSingleResp_initWithOrgSpongycastleAsn1OcspSingleResponse_(OrgSpongycastleAsn1OcspSingleResponse *resp) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspSingleResp, initWithOrgSpongycastleAsn1OcspSingleResponse_, resp)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertOcspSingleResp)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/codec/JBIG2Image.java
//

#include "ExceptionConverter.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "ImgJBIG2.h"
#include "J2ObjC_source.h"
#include "JBIG2Image.h"
#include "JBIG2SegmentReader.h"
#include "RandomAccessFileOrArray.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "JBIG2Image must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/codec/JBIG2Image.java"


#line 63
@implementation ComAowagieTextPdfCodecJBIG2Image

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 63
- (instancetype)init {
  ComAowagieTextPdfCodecJBIG2Image_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 73
+ (ComAowagieTextImage *)getJbig2ImageWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)ra
                                                                           withInt:(jint)page {
  return ComAowagieTextPdfCodecJBIG2Image_getJbig2ImageWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ra, page);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getJbig2ImageWithComAowagieTextPdfRandomAccessFileOrArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getJbig2Image", "LComAowagieTextPdfRandomAccessFileOrArray;I" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecJBIG2Image = { "JBIG2Image", "com.aowagie.text.pdf.codec", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecJBIG2Image;
}

@end


#line 63
void ComAowagieTextPdfCodecJBIG2Image_init(ComAowagieTextPdfCodecJBIG2Image *self) {
  NSObject_init(self);
}


#line 63
ComAowagieTextPdfCodecJBIG2Image *new_ComAowagieTextPdfCodecJBIG2Image_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecJBIG2Image, init)
}


#line 63
ComAowagieTextPdfCodecJBIG2Image *create_ComAowagieTextPdfCodecJBIG2Image_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecJBIG2Image, init)
}


#line 73
ComAowagieTextImage *ComAowagieTextPdfCodecJBIG2Image_getJbig2ImageWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ComAowagieTextPdfRandomAccessFileOrArray *ra, jint page) {
  ComAowagieTextPdfCodecJBIG2Image_initialize();
  
#line 74
  if (page < 1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The page number must be >= 1.");
  }
  
#line 78
  @try {
    ComAowagieTextPdfCodecJBIG2SegmentReader *sr = new_ComAowagieTextPdfCodecJBIG2SegmentReader_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(ra);
    [sr read];
    ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *p = [sr getPageWithInt:page];
    ComAowagieTextImage *img = new_ComAowagieTextImgJBIG2_initWithInt_withInt_withByteArray_withByteArray_(((ComAowagieTextPdfCodecJBIG2SegmentReader_JBIG2Page *) nil_chk(p))->pageBitmapWidth_, p->pageBitmapHeight_, [p getDataWithBoolean:true], [sr getGlobalWithBoolean:true]);
    return img;
  }
  @catch (
#line 84
  JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecJBIG2Image)

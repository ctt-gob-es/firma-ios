//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/ciphers/CipherConstants.java
//

#include "CipherConstants.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "CipherConstants must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreCiphersCipherConstants ()

- (instancetype)init;

@end

__attribute__((unused)) static void EsGobAfirmaCoreCiphersCipherConstants_init(EsGobAfirmaCoreCiphersCipherConstants *self);

__attribute__((unused)) static EsGobAfirmaCoreCiphersCipherConstants *new_EsGobAfirmaCoreCiphersCipherConstants_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreCiphersCipherConstants *create_EsGobAfirmaCoreCiphersCipherConstants_init(void);

@interface EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm () {
 @public
  NSString *name_AOCipherAlgorithm_;
  NSString *description__;
  jboolean password_;
  jboolean key_;
  NSString *oid_;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, name_AOCipherAlgorithm_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, description__, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, oid_, NSString *)

/*!
 @brief Algoritmo de cifrado por defecto.
 */
inline EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_get_DEFAULT_CIPHER_ALGO(void);
static EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_DEFAULT_CIPHER_ALGO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, DEFAULT_CIPHER_ALGO, EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *)

__attribute__((unused)) static void EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *self, NSString *n, NSString *d, jboolean p, jboolean k, NSString *oi, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(NSString *n, NSString *d, jboolean p, jboolean k, NSString *oi, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding () {
 @public
  NSString *name_AOCipherPadding_;
  NSString *description__;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, name_AOCipherPadding_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, description__, NSString *)

__attribute__((unused)) static void EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initWithNSString_withNSString_withNSString_withInt_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *self, NSString *n, NSString *d, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initWithNSString_withNSString_withNSString_withInt_(NSString *n, NSString *d, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode () {
 @public
  NSString *name_AOCipherBlockMode_;
  NSString *description__;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, name_AOCipherBlockMode_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, description__, NSString *)

__attribute__((unused)) static void EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *self, NSString *n, NSString *d, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(NSString *n, NSString *d, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/ciphers/CipherConstants.java"


#line 14
@implementation EsGobAfirmaCoreCiphersCipherConstants

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 16
- (instancetype)init {
  EsGobAfirmaCoreCiphersCipherConstants_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;LEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreCiphersCipherConstants = { "CipherConstants", "es.gob.afirma.core.ciphers", ptrTable, methods, NULL, 7, 0x11, 1, 0, -1, 0, -1, -1, -1 };
  return &_EsGobAfirmaCoreCiphersCipherConstants;
}

@end


#line 16
void EsGobAfirmaCoreCiphersCipherConstants_init(EsGobAfirmaCoreCiphersCipherConstants *self) {
  NSObject_init(self);
}


#line 16
EsGobAfirmaCoreCiphersCipherConstants *new_EsGobAfirmaCoreCiphersCipherConstants_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreCiphersCipherConstants, init)
}


#line 16
EsGobAfirmaCoreCiphersCipherConstants *create_EsGobAfirmaCoreCiphersCipherConstants_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreCiphersCipherConstants, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreCiphersCipherConstants)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/ciphers/CipherConstants.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm)

EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_values_[12];


#line 21
@implementation EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm


#line 64
+ (EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *)getDefault {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_getDefault();
}


#line 85
- (jboolean)supportsPassword {
  return self->password_;
}


#line 92
- (jboolean)supportsKey {
  return self->key_;
}


#line 98
- (NSString *)getName {
  return self->name_AOCipherAlgorithm_;
}

- (NSString *)description {
  
#line 104
  return self->description__;
}


#line 109
- (NSString *)getOid {
  return self->oid_;
}


#line 118
+ (EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *)getValueOfWithNSString:(NSString *)algorithmName {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_getValueOfWithNSString_(algorithmName);
}

+ (IOSObjectArray *)values {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_values();
}

+ (EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *)valueOfWithNSString:(NSString *)name {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_valueOfWithNSString_(name);
}

- (EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_Enum)toNSEnum {
  return (EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "[LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", 0x9, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getDefault);
  methods[1].selector = @selector(supportsPassword);
  methods[2].selector = @selector(supportsKey);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getOid);
  methods[6].selector = @selector(getValueOfWithNSString:);
  methods[7].selector = @selector(values);
  methods[8].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "AES", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "BLOWFISH", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "DES", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "TRIPLEDES", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "PBEWITHMD5ANDDES", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "PBEWITHSHA1ANDDESEDE", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "PBEWITHSHA1ANDRC2_40", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "HMACMD5", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "HMACSHA1", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "HMACSHA256", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "HMACSHA384", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "HMACSHA512", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "DEFAULT_CIPHER_ALGO", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "name_AOCipherAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, 17, -1, -1, -1 },
    { "description__", "LNSString;", .constantValue.asLong = 0, 0x2, 18, -1, -1, -1 },
    { "password_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "key_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "oid_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "getValueOf", "LNSString;", "valueOf", &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, AES), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, BLOWFISH), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, DES), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, TRIPLEDES), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, PBEWITHMD5ANDDES), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, PBEWITHSHA1ANDDESEDE), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, PBEWITHSHA1ANDRC2_40), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACMD5), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA1), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA256), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA384), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA512), &EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_DEFAULT_CIPHER_ALGO, "name", "description", "LEsGobAfirmaCoreCiphersCipherConstants;", "Ljava/lang/Enum<Les/gob/afirma/core/ciphers/CipherConstants$AOCipherAlgorithm;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm = { "AOCipherAlgorithm", "es.gob.afirma.core.ciphers", ptrTable, methods, fields, 7, 0x4019, 9, 18, 19, -1, -1, 20, -1 };
  return &_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm class]) {
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, AES) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 24
    @"AES", @"Advanced Encryption Standard (AES)", false, true, @"2.16.840.1.101.3.4.1", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 0), 0);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, BLOWFISH) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 27
    @"Blowfish", @"Blowfish", false, true, @"1.3.6.1.4.1.3029.1.1.1", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 1), 1);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, DES) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 30
    @"DES", @"Data Encryption Standard (DES)", false, true, @"1.2.840.113549.3.6", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 2), 2);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, TRIPLEDES) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 33
    @"DESede", @"Triple DES (3DES)", false, true, @"1.2.840.113549.3.7", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 3), 3);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, PBEWITHMD5ANDDES) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 36
    @"PBEWithMD5AndDES", @"Contrase\u00f1a con MD5 y DES", true, false, @"1.2.840.113549.1.5.3", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 4), 4);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, PBEWITHSHA1ANDDESEDE) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 39
    @"PBEWithSHA1AndDESede", @"Contrase\u00f1a con SHA1 y 3DES", true, false, @"1.2.840.113549.1.5.10", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 5), 5);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, PBEWITHSHA1ANDRC2_40) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 42
    @"PBEWithSHA1AndRC2_40", @"Contrase\u00f1a con SHA1 y RC2", true, false, @"1.2.840.113549.1.5.11", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 6), 6);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACMD5) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 45
    @"HmacMD5", @"HmacMD5", false, true, @"1.3.6.1.5.5.8.1.1", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 7), 7);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA1) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 48
    @"HmacSHA1", @"HmacSHA1", false, true, @"1.2.840.113549.2.7", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 8), 8);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA256) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 51
    @"HmacSHA256", @"HmacSHA256", false, true, @"1.2.840.113549.2.9", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 9), 9);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA384) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 54
    @"HmacSHA384", @"HmacSHA384", false, true, @"1.2.840.113549.2.10", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 10), 10);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, HMACSHA512) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(
#line 57
    @"HmacSHA512", @"HmacSHA512", false, true, @"1.2.840.113549.2.11", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_(), 11), 11);
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_DEFAULT_CIPHER_ALGO =
#line 60
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, AES);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm)
  }
}

@end


#line 64
EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_getDefault() {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initialize();
  
#line 65
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_DEFAULT_CIPHER_ALGO;
}


#line 68
void EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *self, NSString *n, NSString *d, jboolean p, jboolean k, NSString *oi, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 69
  self->name_AOCipherAlgorithm_ = n;
  self->description__ = d;
  self->password_ = p;
  self->key_ = k;
  self->oid_ = oi;
}


#line 68
EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_(NSString *n, NSString *d, jboolean p, jboolean k, NSString *oi, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm, initWithNSString_withNSString_withBoolean_withBoolean_withNSString_withNSString_withInt_, n, d, p, k, oi, __name, __ordinal)
}


#line 118
EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_getValueOfWithNSString_(NSString *algorithmName) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initialize();
  {
    IOSObjectArray *a__ = EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_values();
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *algorithm = *b__++;
      
#line 120
      if ([((NSString *) nil_chk([((EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *) nil_chk(algorithm)) getName])) java_equalsIgnoreCase:algorithmName]) {
        return algorithm;
      }
    }
  }
  
#line 124
  return nil;
}

IOSObjectArray *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_values() {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_values_ count:12 type:EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_class_()];
}

EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_valueOfWithNSString_(NSString *name) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initialize();
  for (int i = 0; i < 12; i++) {
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *e = EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_fromOrdinal(NSUInteger ordinal) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_initialize();
  if (ordinal >= 12) {
    return nil;
  }
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/ciphers/CipherConstants.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding)

EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_values_[3];


#line 129
@implementation EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding


#line 148
- (NSString *)getName {
  return self->name_AOCipherPadding_;
}

- (NSString *)description {
  
#line 154
  return self->description__;
}


#line 162
+ (EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *)getValueOfWithNSString:(NSString *)paddingName {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_getValueOfWithNSString_(paddingName);
}

+ (IOSObjectArray *)values {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_values();
}

+ (EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *)valueOfWithNSString:(NSString *)name {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_valueOfWithNSString_(name);
}

- (EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_Enum)toNSEnum {
  return (EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "[LEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;", 0x9, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getName);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getValueOfWithNSString:);
  methods[3].selector = @selector(values);
  methods[4].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PKCS5PADDING", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "ISO10126PADDING", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "NOPADDING", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "name_AOCipherPadding_", "LNSString;", .constantValue.asLong = 0, 0x2, 7, -1, -1, -1 },
    { "description__", "LNSString;", .constantValue.asLong = 0, 0x2, 8, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "getValueOf", "LNSString;", "valueOf", &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, PKCS5PADDING), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, ISO10126PADDING), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, NOPADDING), "name", "description", "LEsGobAfirmaCoreCiphersCipherConstants;", "Ljava/lang/Enum<Les/gob/afirma/core/ciphers/CipherConstants$AOCipherPadding;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding = { "AOCipherPadding", "es.gob.afirma.core.ciphers", ptrTable, methods, fields, 7, 0x4019, 5, 5, 9, -1, -1, 10, -1 };
  return &_EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding class]) {
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, PKCS5PADDING) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initWithNSString_withNSString_withNSString_withInt_(
#line 131
    @"PKCS5PADDING", @"Relleno PKCS#5", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_class_(), 0), 0);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, ISO10126PADDING) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initWithNSString_withNSString_withNSString_withInt_(
#line 133
    @"ISO10126PADDING", @"Relleno ISO-10126", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_class_(), 1), 1);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, NOPADDING) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initWithNSString_withNSString_withNSString_withInt_(
#line 135
    @"NOPADDING", @"Sin Relleno", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_class_(), 2), 2);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding)
  }
}

@end


#line 141
void EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initWithNSString_withNSString_withNSString_withInt_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *self, NSString *n, NSString *d, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 142
  self->name_AOCipherPadding_ = n;
  self->description__ = d;
}


#line 141
EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initWithNSString_withNSString_withNSString_withInt_(NSString *n, NSString *d, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding, initWithNSString_withNSString_withNSString_withInt_, n, d, __name, __ordinal)
}


#line 162
EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_getValueOfWithNSString_(NSString *paddingName) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initialize();
  {
    IOSObjectArray *a__ = EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_values();
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *padding = *b__++;
      
#line 164
      if ([((NSString *) nil_chk([((EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *) nil_chk(padding)) getName])) isEqual:paddingName]) {
        return padding;
      }
    }
  }
  
#line 168
  return nil;
}

IOSObjectArray *EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_values() {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_values_ count:3 type:EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_class_()];
}

EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_valueOfWithNSString_(NSString *name) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initialize();
  for (int i = 0; i < 3; i++) {
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *e = EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_fromOrdinal(NSUInteger ordinal) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/ciphers/CipherConstants.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode)

EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_values_[6];


#line 173
@implementation EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode


#line 197
- (NSString *)getName {
  return self->name_AOCipherBlockMode_;
}

- (NSString *)description {
  
#line 203
  return self->description__;
}


#line 212
+ (EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *)getValueOfWithNSString:(NSString *)blockModeName {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_getValueOfWithNSString_(blockModeName);
}

+ (IOSObjectArray *)values {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_values();
}

+ (EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *)valueOfWithNSString:(NSString *)name {
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_valueOfWithNSString_(name);
}

- (EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_Enum)toNSEnum {
  return (EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "[LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", 0x9, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getName);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getValueOfWithNSString:);
  methods[3].selector = @selector(values);
  methods[4].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ECB", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "CBC", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "PCBC", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "CTR", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "CFB", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "OFB", "LEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "name_AOCipherBlockMode_", "LNSString;", .constantValue.asLong = 0, 0x2, 10, -1, -1, -1 },
    { "description__", "LNSString;", .constantValue.asLong = 0, 0x2, 11, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "getValueOf", "LNSString;", "valueOf", &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, ECB), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, CBC), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, PCBC), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, CTR), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, CFB), &JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, OFB), "name", "description", "LEsGobAfirmaCoreCiphersCipherConstants;", "Ljava/lang/Enum<Les/gob/afirma/core/ciphers/CipherConstants$AOCipherBlockMode;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode = { "AOCipherBlockMode", "es.gob.afirma.core.ciphers", ptrTable, methods, fields, 7, 0x4019, 5, 8, 12, -1, -1, 13, -1 };
  return &_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode class]) {
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, ECB) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(
#line 175
    @"ECB", @"Electronic CodeBook (ECB)", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_class_(), 0), 0);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, CBC) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(
#line 177
    @"CBC", @"Cipher-Block Chaining (CBC)", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_class_(), 1), 1);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, PCBC) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(
#line 179
    @"PCBC", @"Propagating Cipher-Block Chaining (PCBC)", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_class_(), 2), 2);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, CTR) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(
#line 181
    @"CTR", @"Counter (CTR)", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_class_(), 3), 3);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, CFB) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(
#line 183
    @"CFB", @"Cipher FeedBack (CFB)", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_class_(), 4), 4);
    JreEnum(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, OFB) = new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(
#line 185
    @"OFB", @"Output FeedBack (OFB)", JreEnumConstantName(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_class_(), 5), 5);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode)
  }
}

@end


#line 190
void EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *self, NSString *n, NSString *d, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 191
  self->name_AOCipherBlockMode_ = n;
  self->description__ = d;
}


#line 190
EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *new_EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initWithNSString_withNSString_withNSString_withInt_(NSString *n, NSString *d, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode, initWithNSString_withNSString_withNSString_withInt_, n, d, __name, __ordinal)
}


#line 212
EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_getValueOfWithNSString_(NSString *blockModeName) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initialize();
  {
    IOSObjectArray *a__ = EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_values();
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *blockMode = *b__++;
      
#line 214
      if ([((NSString *) nil_chk([((EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *) nil_chk(blockMode)) getName])) isEqual:blockModeName]) {
        return blockMode;
      }
    }
  }
  
#line 218
  return nil;
}

IOSObjectArray *EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_values() {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_values_ count:6 type:EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_class_()];
}

EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_valueOfWithNSString_(NSString *name) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initialize();
  for (int i = 0; i < 6; i++) {
    EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *e = EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_fromOrdinal(NSUInteger ordinal) {
  EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/ui/AOUIManager.java
//

#include "AOUIManager.h"
#include "J2ObjC_source.h"

#if !__has_feature(objc_arc)
#error "AOUIManager must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreUiAOUIManager : NSObject

@end

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/ui/AOUIManager.java"


#line 18
@implementation EsGobAfirmaCoreUiAOUIManager

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[C", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "[C", 0x401, 0, 2, -1, -1, -1, -1 },
    { NULL, "[C", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 11, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 14, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaIoFile;", 0x401, 17, 18, -1, -1, -1, -1 },
    { NULL, "LJavaIoFile;", 0x401, 19, 20, 21, 22, -1, -1 },
    { NULL, "LJavaIoFile;", 0x401, 19, 23, 21, 24, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getPasswordWithNSString:withId:);
  methods[1].selector = @selector(getPasswordWithNSString:withId:withNSString:withBoolean:withId:);
  methods[2].selector = @selector(getDoublePasswordWithNSString:withNSString:withId:withNSString:withBoolean:withId:);
  methods[3].selector = @selector(showInputDialogWithId:withId:withNSString:withInt:withId:withNSObjectArray:withId:);
  methods[4].selector = @selector(showCertificateSelectionDialogWithId:withEsGobAfirmaCoreUiKeyStoreDialogManager:);
  methods[5].selector = @selector(showConfirmDialogWithId:withId:withNSString:withInt:withInt:);
  methods[6].selector = @selector(showMessageDialogWithId:withId:withNSString:withInt:);
  methods[7].selector = @selector(showMessageDialogWithId:withId:withNSString:withInt:withId:);
  methods[8].selector = @selector(showErrorMessageWithId:withNSString:withInt:withJavaLangThrowable:);
  methods[9].selector = @selector(showErrorMessageWithId:withId:withNSString:withInt:withJavaLangThrowable:);
  methods[10].selector = @selector(getPlainMessageCode);
  methods[11].selector = @selector(getYesNoOptionCode);
  methods[12].selector = @selector(getWarningMessageCode);
  methods[13].selector = @selector(getErrorMessageCode);
  methods[14].selector = @selector(getYesOptionCode);
  methods[15].selector = @selector(getNoOptionCode);
  methods[16].selector = @selector(getOkCancelOptionCode);
  methods[17].selector = @selector(getOkOptionCode);
  methods[18].selector = @selector(getInformationMessageCode);
  methods[19].selector = @selector(getQuestionMessageCode);
  methods[20].selector = @selector(getLoadFilesWithNSString:withNSString:withNSString:withNSStringArray:withNSString:withBoolean:withBoolean:withId:withId:);
  methods[21].selector = @selector(saveDataToFileWithByteArray:withNSString:withNSString:withNSString:withJavaUtilList:withId:);
  methods[22].selector = @selector(saveDataToFileWithByteArray:withNSString:withNSString:withNSString:withJavaUtilList:withEsGobAfirmaCoreUiGenericFileFilter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPassword", "LNSString;LNSObject;", "LNSString;LNSObject;LNSString;ZLNSObject;", "getDoublePassword", "LNSString;LNSString;LNSObject;LNSString;ZLNSObject;", "showInputDialog", "LNSObject;LNSObject;LNSString;ILNSObject;[LNSObject;LNSObject;", "showCertificateSelectionDialog", "LNSObject;LEsGobAfirmaCoreUiKeyStoreDialogManager;", "showConfirmDialog", "LNSObject;LNSObject;LNSString;II", "showMessageDialog", "LNSObject;LNSObject;LNSString;I", "LNSObject;LNSObject;LNSString;ILNSObject;", "showErrorMessage", "LNSObject;LNSString;ILJavaLangThrowable;", "LNSObject;LNSObject;LNSString;ILJavaLangThrowable;", "getLoadFiles", "LNSString;LNSString;LNSString;[LNSString;LNSString;ZZLNSObject;LNSObject;", "saveDataToFile", "[BLNSString;LNSString;LNSString;LJavaUtilList;LNSObject;", "LJavaIoIOException;", "([BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List<Les/gob/afirma/core/ui/GenericFileFilter;>;Ljava/lang/Object;)Ljava/io/File;", "[BLNSString;LNSString;LNSString;LJavaUtilList;LEsGobAfirmaCoreUiGenericFileFilter;LNSObject;", "([BLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List<Les/gob/afirma/core/ui/GenericFileFilter;>;Les/gob/afirma/core/ui/GenericFileFilter;Ljava/lang/Object;)Ljava/io/File;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreUiAOUIManager = { "AOUIManager", "es.gob.afirma.core.ui", ptrTable, methods, NULL, 7, 0x609, 23, 0, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreUiAOUIManager;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreUiAOUIManager)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/signers/der/DerValue.java
//

#include "BitArray.h"
#include "DerIndefLenConverter.h"
#include "DerInputBuffer.h"
#include "DerInputStream.h"
#include "DerOutputStreamRenamed.h"
#include "DerValue.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ObjectIdentifier.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/DataInputStream.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/OutOfMemoryError.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"

#if !__has_feature(objc_arc)
#error "DerValue must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreSignersDerDerValue () {
 @public
  jint length_;
}

- (EsGobAfirmaCoreSignersDerDerInputStream *)init__WithByte:(jbyte)stringTag
                                               withNSString:(NSString *)value OBJC_METHOD_FAMILY_NONE;

- (EsGobAfirmaCoreSignersDerDerInputStream *)init__WithBoolean:(jboolean)fullyBuffered
                                         withJavaIoInputStream:(JavaIoInputStream *)inArg
                                                   withBoolean:(jboolean)allowBER OBJC_METHOD_FAMILY_NONE;

- (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                        withByteArray:(IOSByteArray *)b;

/*!
 @brief Helper for public method equals()
 @param d1 Value 1.
 @param d2 Value 2.
 @return <code>true</code> if the object is a DerValue with the same
  content.
 */
+ (jboolean)doEqualsWithEsGobAfirmaCoreSignersDerDerValue:(EsGobAfirmaCoreSignersDerDerValue *)d1
                    withEsGobAfirmaCoreSignersDerDerValue:(EsGobAfirmaCoreSignersDerDerValue *)d2;

@end

inline jint EsGobAfirmaCoreSignersDerDerValue_get_DEFAULT_BUFFER_SIZE(void);
#define EsGobAfirmaCoreSignersDerDerValue_DEFAULT_BUFFER_SIZE 8192
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreSignersDerDerValue, DEFAULT_BUFFER_SIZE, jint)

/*!
 @brief The maximum size of array to allocate.
 Some VMs reserve some header words in an array.
  Attempts to allocate larger arrays may result in
  OutOfMemoryError: Requested array size exceeds VM limit
 */
inline jint EsGobAfirmaCoreSignersDerDerValue_get_MAX_BUFFER_SIZE(void);
#define EsGobAfirmaCoreSignersDerDerValue_MAX_BUFFER_SIZE 2147483639
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreSignersDerDerValue, MAX_BUFFER_SIZE, jint)

__attribute__((unused)) static EsGobAfirmaCoreSignersDerDerInputStream *EsGobAfirmaCoreSignersDerDerValue_init__WithByte_withNSString_(EsGobAfirmaCoreSignersDerDerValue *self, jbyte stringTag, NSString *value);

__attribute__((unused)) static EsGobAfirmaCoreSignersDerDerInputStream *EsGobAfirmaCoreSignersDerDerValue_init__WithBoolean_withJavaIoInputStream_withBoolean_(EsGobAfirmaCoreSignersDerDerValue *self, jboolean fullyBuffered, JavaIoInputStream *inArg, jboolean allowBER);

__attribute__((unused)) static IOSByteArray *EsGobAfirmaCoreSignersDerDerValue_appendWithByteArray_withByteArray_(EsGobAfirmaCoreSignersDerDerValue *self, IOSByteArray *a, IOSByteArray *b);

__attribute__((unused)) static jboolean EsGobAfirmaCoreSignersDerDerValue_doEqualsWithEsGobAfirmaCoreSignersDerDerValue_withEsGobAfirmaCoreSignersDerDerValue_(EsGobAfirmaCoreSignersDerDerValue *d1, EsGobAfirmaCoreSignersDerDerValue *d2);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/signers/der/DerValue.java"


#line 61
@implementation EsGobAfirmaCoreSignersDerDerValue


#line 183
- (jboolean)isUniversal {
  
#line 183
  return (self->tag_ & (jint) 0x0c0) == (jint) 0x000;
}

- (jboolean)isApplication {
  
#line 189
  return (self->tag_ & (jint) 0x0c0) == (jint) 0x040;
}


#line 196
- (jboolean)isContextSpecific {
  
#line 196
  return (self->tag_ & (jint) 0x0c0) == (jint) 0x080;
}


#line 203
- (jboolean)isContextSpecificWithByte:(jbyte)cntxtTag {
  if (![self isContextSpecific]) {
    return false;
  }
  return (self->tag_ & (jint) 0x01f) == cntxtTag;
}

- (jboolean)isPrivate {
  
#line 210
  return (self->tag_ & (jint) 0x0c0) == (jint) 0x0c0;
}

- (jboolean)isConstructed {
  
#line 216
  return (self->tag_ & (jint) 0x020) == (jint) 0x020;
}


#line 223
- (jboolean)isConstructedWithByte:(jbyte)constructedTag {
  if (![self isConstructed]) {
    return false;
  }
  return (self->tag_ & (jint) 0x01f) == constructedTag;
}


#line 235
- (instancetype)initWithNSString:(NSString *)value {
  EsGobAfirmaCoreSignersDerDerValue_initWithNSString_(self, value);
  return self;
}


#line 253
- (instancetype)initWithByte:(jbyte)stringTag
                withNSString:(NSString *)value {
  EsGobAfirmaCoreSignersDerDerValue_initWithByte_withNSString_(self, stringTag, value);
  return self;
}

- (instancetype)initWithByte:(jbyte)tag
               withByteArray:(IOSByteArray *)data
                 withBoolean:(jboolean)allowBER {
  EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_withBoolean_(self, tag, data, allowBER);
  return self;
}


#line 273
- (instancetype)initWithByte:(jbyte)tag
               withByteArray:(IOSByteArray *)data {
  EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_(self, tag, data);
  return self;
}


#line 280
- (instancetype)initWithEsGobAfirmaCoreSignersDerDerInputBuffer:(EsGobAfirmaCoreSignersDerDerInputBuffer *)inArg {
  EsGobAfirmaCoreSignersDerDerValue_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self, inArg);
  return self;
}


#line 323
- (instancetype)initWithByteArray:(IOSByteArray *)buf
                      withBoolean:(jboolean)allowBER {
  EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withBoolean_(self, buf, allowBER);
  return self;
}


#line 335
- (instancetype)initWithByteArray:(IOSByteArray *)buf {
  EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_(self, buf);
  return self;
}


#line 341
- (instancetype)initWithByteArray:(IOSByteArray *)buf
                          withInt:(jint)offset
                          withInt:(jint)len
                      withBoolean:(jboolean)allowBER {
  EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_withBoolean_(self, buf, offset, len, allowBER);
  return self;
}


#line 356
- (instancetype)initWithByteArray:(IOSByteArray *)buf
                          withInt:(jint)offset
                          withInt:(jint)len {
  EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_(self, buf, offset, len);
  return self;
}


#line 362
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                              withBoolean:(jboolean)allowBER {
  EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_withBoolean_(self, inArg, allowBER);
  return self;
}


#line 376
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_(self, inArg);
  return self;
}


#line 380
- (EsGobAfirmaCoreSignersDerDerInputStream *)init__WithByte:(jbyte)stringTag
                                               withNSString:(NSString *)value {
  return EsGobAfirmaCoreSignersDerDerValue_init__WithByte_withNSString_(self, stringTag, value);
}


#line 418
- (EsGobAfirmaCoreSignersDerDerInputStream *)init__WithBoolean:(jboolean)fullyBuffered
                                         withJavaIoInputStream:(JavaIoInputStream *)inArg
                                                   withBoolean:(jboolean)allowBER {
  return EsGobAfirmaCoreSignersDerDerValue_init__WithBoolean_withJavaIoInputStream_withBoolean_(self, fullyBuffered, inArg, allowBER);
}


#line 457
- (void)encodeWithEsGobAfirmaCoreSignersDerDerOutputStreamRenamed:(EsGobAfirmaCoreSignersDerDerOutputStreamRenamed *)outArg {
  
#line 459
  [((EsGobAfirmaCoreSignersDerDerOutputStreamRenamed *) nil_chk(outArg)) writeWithInt:self->tag_];
  [outArg putLengthWithInt:self->length_];
  
#line 462
  if (self->length_ > 0) {
    IOSByteArray *value = [IOSByteArray newArrayWithLength:self->length_];
    
#line 465
    @synchronized(self->data_) {
      [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) reset];
      if ([((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) readWithByteArray:value] != self->length_) {
        @throw new_JavaIoIOException_initWithNSString_(@"short DER value read (encode)");
      }
      [outArg writeWithByteArray:value];
    }
  }
}


#line 475
- (EsGobAfirmaCoreSignersDerDerInputStream *)getData {
  return self->data_;
}

- (jbyte)getTag {
  return self->tag_;
}


#line 489
- (jboolean)getBoolean {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_Boolean) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBoolean, not a BOOLEAN ", self->tag_));
  }
  if (self->length_ != 1) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"DerValue.getBoolean, invalid length ",
#line 495
    self->length_));
  }
  if ([((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) read] != 0) {
    return true;
  }
  return false;
}


#line 509
- (EsGobAfirmaCoreSignersDerObjectIdentifier *)getOID {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_ObjectId) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getOID, not an OID ", self->tag_));
  }
  return new_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self->buffer_);
}

- (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                        withByteArray:(IOSByteArray *)b {
  return EsGobAfirmaCoreSignersDerDerValue_appendWithByteArray_withByteArray_(self, a, b);
}


#line 534
- (IOSByteArray *)getOctetString {
  
#line 536
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_OctetString && ![self isConstructedWithByte:EsGobAfirmaCoreSignersDerDerValue_tag_OctetString]) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getOctetString, not an Octet String: ",
#line 538
    self->tag_));
  }
  
#line 542
  if (self->length_ == 0) {
    return [IOSByteArray newArrayWithLength:0];
  }
  
#line 549
  JavaIoByteArrayInputStream *arrayInput = self->buffer_;
  if ([((JavaIoByteArrayInputStream *) nil_chk(arrayInput)) available] < self->length_) {
    @throw new_JavaIoIOException_initWithNSString_(@"short read on DerValue buffer");
  }
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:self->length_];
  [arrayInput readWithByteArray:bytes];
  
#line 556
  if ([self isConstructed]) {
    EsGobAfirmaCoreSignersDerDerInputStream *in = new_EsGobAfirmaCoreSignersDerDerInputStream_initWithByteArray_withInt_withInt_withBoolean_(bytes, 0, bytes->size_,
#line 558
    ((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_))->allowBER_);
    bytes = nil;
    while ([in available] != 0) {
      bytes = EsGobAfirmaCoreSignersDerDerValue_appendWithByteArray_withByteArray_(self, bytes, [in getOctetString]);
    }
  }
  return bytes;
}


#line 573
- (jint)getInteger {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_Integer) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getInteger, not an int ", self->tag_));
  }
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getIntegerWithInt:[((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(self->data_)) available]];
}


#line 586
- (JavaMathBigInteger *)getBigInteger {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_Integer) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBigInteger, not an int ", self->tag_));
  }
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getBigIntegerWithInt:[((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(self->data_)) available] withBoolean:false];
}


#line 601
- (JavaMathBigInteger *)getPositiveBigInteger {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_Integer) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBigInteger, not an int ", self->tag_));
  }
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getBigIntegerWithInt:[((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(self->data_)) available] withBoolean:true];
}


#line 614
- (jint)getEnumerated {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_Enumerated) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getEnumerated, incorrect tag: ",
#line 617
    self->tag_));
  }
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getIntegerWithInt:[((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(self->data_)) available]];
}


#line 628
- (IOSByteArray *)getBitString {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_BitString) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBitString, not a bit string ",
#line 631
    self->tag_));
  }
  
#line 634
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getBitString];
}


#line 643
- (EsGobAfirmaCoreSignersDerBitArray *)getUnalignedBitString {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_BitString) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBitString, not a bit string ",
#line 646
    self->tag_));
  }
  
#line 649
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getUnalignedBitString];
}


#line 659
- (NSString *)getAsString {
  if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_UTF8String) {
    return [self getUTF8String];
  }
  else
#line 662
  if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_PrintableString) {
    return [self getPrintableString];
  }
  else
#line 664
  if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_T61String) {
    return [self getT61String];
  }
  else
#line 666
  if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_IA5String) {
    return [self getIA5String];
  }
  else
#line 668
  if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_BMPString) {
    return [self getBMPString];
  }
  else
#line 670
  if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_GeneralString) {
    return [self getGeneralString];
  }
  else {
    
#line 673
    return nil;
  }
}


#line 685
- (IOSByteArray *)getBitStringWithBoolean:(jboolean)tagImplicit {
  if (!tagImplicit) {
    if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_BitString) {
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBitString, not a bit string ",
#line 689
      self->tag_));
    }
  }
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getBitString];
}


#line 703
- (EsGobAfirmaCoreSignersDerBitArray *)getUnalignedBitStringWithBoolean:(jboolean)tagImplicit {
  
#line 705
  if (!tagImplicit) {
    if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_BitString) {
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBitString, not a bit string ",
#line 708
      self->tag_));
    }
  }
  return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) getUnalignedBitString];
}


#line 720
- (IOSByteArray *)getDataBytes {
  IOSByteArray *retVal = [IOSByteArray newArrayWithLength:self->length_];
  @synchronized(self->data_) {
    [((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(self->data_)) reset];
    [self->data_ getBytesWithByteArray:retVal];
  }
  return retVal;
}


#line 735
- (NSString *)getPrintableString {
  
#line 737
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_PrintableString) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getPrintableString, not a string ",
#line 739
    self->tag_));
  }
  
#line 742
  return [NSString java_stringWithBytes:[self getDataBytes] charsetName:@"ASCII"];
}


#line 751
- (NSString *)getT61String {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_T61String) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getT61String, not T61 ",
#line 754
    self->tag_));
  }
  
#line 757
  return [NSString java_stringWithBytes:[self getDataBytes] charsetName:@"ISO-8859-1"];
}


#line 766
- (NSString *)getIA5String {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_IA5String) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getIA5String, not IA5 ",
#line 769
    self->tag_));
  }
  
#line 772
  return [NSString java_stringWithBytes:[self getDataBytes] charsetName:@"ASCII"];
}


#line 782
- (NSString *)getBMPString {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_BMPString) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getBMPString, not BMP ",
#line 785
    self->tag_));
  }
  
#line 790
  return [NSString java_stringWithBytes:[self getDataBytes] charsetName:@"UnicodeBigUnmarked"];
}


#line 800
- (NSString *)getUTF8String {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_UTF8String) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getUTF8String, not UTF-8 ",
#line 803
    self->tag_));
  }
  
#line 806
  return [NSString java_stringWithBytes:[self getDataBytes] charsetName:@"UTF8"];
}


#line 816
- (NSString *)getGeneralString {
  if (self->tag_ != EsGobAfirmaCoreSignersDerDerValue_tag_GeneralString) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"DerValue.getGeneralString, not GeneralString ",
#line 819
    self->tag_));
  }
  
#line 822
  return [NSString java_stringWithBytes:[self getDataBytes] charsetName:@"ASCII"];
}


#line 856
- (jboolean)isEqual:(id)other {
  
#line 858
  if ([other isKindOfClass:[EsGobAfirmaCoreSignersDerDerValue class]]) {
    return [self equalsWithEsGobAfirmaCoreSignersDerDerValue:(EsGobAfirmaCoreSignersDerDerValue *) other];
  }
  else {
    
#line 861
    return false;
  }
}


#line 874
- (jboolean)equalsWithEsGobAfirmaCoreSignersDerDerValue:(EsGobAfirmaCoreSignersDerDerValue *)other {
  if (JreObjectEqualsEquals(self, other)) {
    return true;
  }
  if (self->tag_ != ((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(other))->tag_) {
    return false;
  }
  if (JreObjectEqualsEquals(self->data_, other->data_)) {
    return true;
  }
  
#line 886
  return JavaLangSystem_identityHashCodeWithId_(self->data_) > JavaLangSystem_identityHashCodeWithId_(
#line 887
  other->data_) ? EsGobAfirmaCoreSignersDerDerValue_doEqualsWithEsGobAfirmaCoreSignersDerDerValue_withEsGobAfirmaCoreSignersDerDerValue_(
#line 888
  self, other) : EsGobAfirmaCoreSignersDerDerValue_doEqualsWithEsGobAfirmaCoreSignersDerDerValue_withEsGobAfirmaCoreSignersDerDerValue_(
#line 889
  other, self);
}


#line 899
+ (jboolean)doEqualsWithEsGobAfirmaCoreSignersDerDerValue:(EsGobAfirmaCoreSignersDerDerValue *)d1
                    withEsGobAfirmaCoreSignersDerDerValue:(EsGobAfirmaCoreSignersDerDerValue *)d2 {
  return EsGobAfirmaCoreSignersDerDerValue_doEqualsWithEsGobAfirmaCoreSignersDerDerValue_withEsGobAfirmaCoreSignersDerDerValue_(d1, d2);
}


#line 914
- (NSString *)description {
  
#line 916
  @try {
    
#line 918
    NSString *str = [self getAsString];
    if (str != nil) {
      return JreStrcat("C$C", '"', str, '"');
    }
    if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_Null) {
      return @"[DerValue, null]";
    }
    if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_ObjectId) {
      return JreStrcat("$@", @"OID.", [self getOID]);
    }
    else {
      
#line 928
      return JreStrcat("$B$IC", @"[DerValue, tag = ", self->tag_, @", length = ",
#line 929
      self->length_, ']');
    }
  }
  @catch (
#line 931
  JavaIoIOException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"misformatted DER value");
  }
}


#line 943
- (IOSByteArray *)toByteArray {
  EsGobAfirmaCoreSignersDerDerOutputStreamRenamed *out = new_EsGobAfirmaCoreSignersDerDerOutputStreamRenamed_init();
  
#line 946
  [self encodeWithEsGobAfirmaCoreSignersDerDerOutputStreamRenamed:out];
  [((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(self->data_)) reset];
  return [out toByteArray];
}


#line 959
- (EsGobAfirmaCoreSignersDerDerInputStream *)toDerInputStream {
  if (self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_Sequence || self->tag_ == EsGobAfirmaCoreSignersDerDerValue_tag_Set) {
    return new_EsGobAfirmaCoreSignersDerDerInputStream_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self->buffer_);
  }
  @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$B", @"toDerInputStream rejects tag type ", self->tag_));
}


#line 970
- (jint)length {
  return self->length_;
}


#line 994
+ (jboolean)isPrintableStringCharWithChar:(jchar)ch {
  return EsGobAfirmaCoreSignersDerDerValue_isPrintableStringCharWithChar_(ch);
}


#line 1029
+ (jbyte)createTagWithByte:(jbyte)tagClass
               withBoolean:(jboolean)form
                  withByte:(jbyte)val {
  return EsGobAfirmaCoreSignersDerDerValue_createTagWithByte_withBoolean_withByte_(tagClass, form, val);
}


#line 1043
- (void)resetTagWithByte:(jbyte)tag {
  self->tag_ = tag;
}


#line 1052
- (NSUInteger)hash {
  
#line 1054
  return ((jint) [((NSString *) nil_chk([self description])) hash]);
}


#line 1073
+ (IOSByteArray *)readExactlyNBytesWithJavaIoInputStream:(JavaIoInputStream *)is
                                                 withInt:(jint)length {
  return EsGobAfirmaCoreSignersDerDerValue_readExactlyNBytesWithJavaIoInputStream_withInt_(is, length);
}


#line 1130
+ (IOSByteArray *)readNBytesWithJavaIoInputStream:(JavaIoInputStream *)is
                                          withInt:(jint)len {
  return EsGobAfirmaCoreSignersDerDerValue_readNBytesWithJavaIoInputStream_withInt_(is, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 4, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, 4, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 8, 4, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 9, 4, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, 4, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 11, 4, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 12, 4, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 13, 4, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 14, 4, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerDerInputStream;", 0x2, 15, 5, 4, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerDerInputStream;", 0x2, 15, 16, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, 4, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerDerInputStream;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerObjectIdentifier;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerBitArray;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x1, 21, 22, 4, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerBitArray;", 0x1, 23, 22, 4, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "Z", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 24, 26, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 27, 28, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 29, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerDerInputStream;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 30, 31, -1, -1, -1, -1 },
    { NULL, "B", 0x9, 32, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 34, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 35, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 36, 37, 4, -1, -1, -1 },
    { NULL, "[B", 0x9, 38, 37, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isUniversal);
  methods[1].selector = @selector(isApplication);
  methods[2].selector = @selector(isContextSpecific);
  methods[3].selector = @selector(isContextSpecificWithByte:);
  methods[4].selector = @selector(isPrivate);
  methods[5].selector = @selector(isConstructed);
  methods[6].selector = @selector(isConstructedWithByte:);
  methods[7].selector = @selector(initWithNSString:);
  methods[8].selector = @selector(initWithByte:withNSString:);
  methods[9].selector = @selector(initWithByte:withByteArray:withBoolean:);
  methods[10].selector = @selector(initWithByte:withByteArray:);
  methods[11].selector = @selector(initWithEsGobAfirmaCoreSignersDerDerInputBuffer:);
  methods[12].selector = @selector(initWithByteArray:withBoolean:);
  methods[13].selector = @selector(initWithByteArray:);
  methods[14].selector = @selector(initWithByteArray:withInt:withInt:withBoolean:);
  methods[15].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[16].selector = @selector(initWithJavaIoInputStream:withBoolean:);
  methods[17].selector = @selector(initWithJavaIoInputStream:);
  methods[18].selector = @selector(init__WithByte:withNSString:);
  methods[19].selector = @selector(init__WithBoolean:withJavaIoInputStream:withBoolean:);
  methods[20].selector = @selector(encodeWithEsGobAfirmaCoreSignersDerDerOutputStreamRenamed:);
  methods[21].selector = @selector(getData);
  methods[22].selector = @selector(getTag);
  methods[23].selector = @selector(getBoolean);
  methods[24].selector = @selector(getOID);
  methods[25].selector = @selector(appendWithByteArray:withByteArray:);
  methods[26].selector = @selector(getOctetString);
  methods[27].selector = @selector(getInteger);
  methods[28].selector = @selector(getBigInteger);
  methods[29].selector = @selector(getPositiveBigInteger);
  methods[30].selector = @selector(getEnumerated);
  methods[31].selector = @selector(getBitString);
  methods[32].selector = @selector(getUnalignedBitString);
  methods[33].selector = @selector(getAsString);
  methods[34].selector = @selector(getBitStringWithBoolean:);
  methods[35].selector = @selector(getUnalignedBitStringWithBoolean:);
  methods[36].selector = @selector(getDataBytes);
  methods[37].selector = @selector(getPrintableString);
  methods[38].selector = @selector(getT61String);
  methods[39].selector = @selector(getIA5String);
  methods[40].selector = @selector(getBMPString);
  methods[41].selector = @selector(getUTF8String);
  methods[42].selector = @selector(getGeneralString);
  methods[43].selector = @selector(isEqual:);
  methods[44].selector = @selector(equalsWithEsGobAfirmaCoreSignersDerDerValue:);
  methods[45].selector = @selector(doEqualsWithEsGobAfirmaCoreSignersDerDerValue:withEsGobAfirmaCoreSignersDerDerValue:);
  methods[46].selector = @selector(description);
  methods[47].selector = @selector(toByteArray);
  methods[48].selector = @selector(toDerInputStream);
  methods[49].selector = @selector(length);
  methods[50].selector = @selector(isPrintableStringCharWithChar:);
  methods[51].selector = @selector(createTagWithByte:withBoolean:withByte:);
  methods[52].selector = @selector(resetTagWithByte:);
  methods[53].selector = @selector(hash);
  methods[54].selector = @selector(readExactlyNBytesWithJavaIoInputStream:withInt:);
  methods[55].selector = @selector(readNBytesWithJavaIoInputStream:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_UNIVERSAL", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_TAG_UNIVERSAL, 0x19, -1, -1, -1, -1 },
    { "TAG_APPLICATION", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_TAG_APPLICATION, 0x19, -1, -1, -1, -1 },
    { "TAG_CONTEXT", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_TAG_CONTEXT, 0x19, -1, -1, -1, -1 },
    { "TAG_PRIVATE", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_TAG_PRIVATE, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_BUFFER_SIZE", "I", .constantValue.asInt = EsGobAfirmaCoreSignersDerDerValue_DEFAULT_BUFFER_SIZE, 0x1a, -1, -1, -1, -1 },
    { "MAX_BUFFER_SIZE", "I", .constantValue.asInt = EsGobAfirmaCoreSignersDerDerValue_MAX_BUFFER_SIZE, 0x1a, -1, -1, -1, -1 },
    { "tag_", "B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "buffer_", "LEsGobAfirmaCoreSignersDerDerInputBuffer;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "data_", "LEsGobAfirmaCoreSignersDerDerInputStream;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tag_Boolean", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_Boolean, 0x19, -1, -1, -1, -1 },
    { "tag_Integer", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_Integer, 0x19, -1, -1, -1, -1 },
    { "tag_BitString", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_BitString, 0x19, -1, -1, -1, -1 },
    { "tag_OctetString", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_OctetString, 0x19, -1, -1, -1, -1 },
    { "tag_Null", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_Null, 0x19, -1, -1, -1, -1 },
    { "tag_ObjectId", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_ObjectId, 0x19, -1, -1, -1, -1 },
    { "tag_Enumerated", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_Enumerated, 0x19, -1, -1, -1, -1 },
    { "tag_UTF8String", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_UTF8String, 0x19, -1, -1, -1, -1 },
    { "tag_PrintableString", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_PrintableString, 0x19, -1, -1, -1, -1 },
    { "tag_T61String", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_T61String, 0x19, -1, -1, -1, -1 },
    { "tag_IA5String", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_IA5String, 0x19, -1, -1, -1, -1 },
    { "tag_UtcTime", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_UtcTime, 0x19, -1, -1, -1, -1 },
    { "tag_GeneralizedTime", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_GeneralizedTime, 0x19, -1, -1, -1, -1 },
    { "tag_GeneralString", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_GeneralString, 0x19, -1, -1, -1, -1 },
    { "tag_UniversalString", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_UniversalString, 0x19, -1, -1, -1, -1 },
    { "tag_BMPString", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_BMPString, 0x19, -1, -1, -1, -1 },
    { "tag_Sequence", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_Sequence, 0x19, -1, -1, -1, -1 },
    { "tag_SequenceOf", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_SequenceOf, 0x19, -1, -1, -1, -1 },
    { "tag_Set", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_Set, 0x19, -1, -1, -1, -1 },
    { "tag_SetOf", "B", .constantValue.asChar = EsGobAfirmaCoreSignersDerDerValue_tag_SetOf, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "isContextSpecific", "B", "isConstructed", "LNSString;", "LJavaIoIOException;", "BLNSString;", "B[BZ", "B[B", "LEsGobAfirmaCoreSignersDerDerInputBuffer;", "[BZ", "[B", "[BIIZ", "[BII", "LJavaIoInputStream;Z", "LJavaIoInputStream;", "init", "ZLJavaIoInputStream;Z", "encode", "LEsGobAfirmaCoreSignersDerDerOutputStreamRenamed;", "append", "[B[B", "getBitString", "Z", "getUnalignedBitString", "equals", "LNSObject;", "LEsGobAfirmaCoreSignersDerDerValue;", "doEquals", "LEsGobAfirmaCoreSignersDerDerValue;LEsGobAfirmaCoreSignersDerDerValue;", "toString", "isPrintableStringChar", "C", "createTag", "BZB", "resetTag", "hashCode", "readExactlyNBytes", "LJavaIoInputStream;I", "readNBytes" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersDerDerValue = { "DerValue", "es.gob.afirma.core.signers.der", ptrTable, methods, fields, 7, 0x1, 56, 30, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersDerDerValue;
}

@end


#line 235
void EsGobAfirmaCoreSignersDerDerValue_initWithNSString_(EsGobAfirmaCoreSignersDerDerValue *self, NSString *value) {
  NSObject_init(self);
  
#line 236
  jboolean isPrintableString = true;
  for (jint i = 0; i < [((NSString *) nil_chk(value)) java_length]; i++) {
    if (!EsGobAfirmaCoreSignersDerDerValue_isPrintableStringCharWithChar_([value charAtWithInt:i])) {
      isPrintableString = false;
      break;
    }
  }
  
#line 244
  self->data_ = EsGobAfirmaCoreSignersDerDerValue_init__WithByte_withNSString_(self, isPrintableString ? EsGobAfirmaCoreSignersDerDerValue_tag_PrintableString : EsGobAfirmaCoreSignersDerDerValue_tag_UTF8String, value);
}


#line 235
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithNSString_(NSString *value) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithNSString_, value)
}


#line 235
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithNSString_(NSString *value) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithNSString_, value)
}


#line 253
void EsGobAfirmaCoreSignersDerDerValue_initWithByte_withNSString_(EsGobAfirmaCoreSignersDerDerValue *self, jbyte stringTag, NSString *value) {
  NSObject_init(self);
  
#line 254
  self->data_ = EsGobAfirmaCoreSignersDerDerValue_init__WithByte_withNSString_(self, stringTag, value);
}


#line 253
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithByte_withNSString_(jbyte stringTag, NSString *value) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByte_withNSString_, stringTag, value)
}


#line 253
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithByte_withNSString_(jbyte stringTag, NSString *value) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByte_withNSString_, stringTag, value)
}


#line 259
void EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_withBoolean_(EsGobAfirmaCoreSignersDerDerValue *self, jbyte tag, IOSByteArray *data, jboolean allowBER) {
  NSObject_init(self);
  
#line 260
  self->tag_ = tag;
  self->buffer_ = new_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withBoolean_([((IOSByteArray *) nil_chk(data)) java_clone], allowBER);
  self->length_ = data->size_;
  self->data_ = new_EsGobAfirmaCoreSignersDerDerInputStream_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self->buffer_);
  [self->data_ markWithInt:JavaLangInteger_MAX_VALUE];
}


#line 259
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_withBoolean_(jbyte tag, IOSByteArray *data, jboolean allowBER) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByte_withByteArray_withBoolean_, tag, data, allowBER)
}


#line 259
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_withBoolean_(jbyte tag, IOSByteArray *data, jboolean allowBER) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByte_withByteArray_withBoolean_, tag, data, allowBER)
}


#line 273
void EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_(EsGobAfirmaCoreSignersDerDerValue *self, jbyte tag, IOSByteArray *data) {
  EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_withBoolean_(self, tag, data, true);
}


#line 273
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_(jbyte tag, IOSByteArray *data) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByte_withByteArray_, tag, data)
}


#line 273
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithByte_withByteArray_(jbyte tag, IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByte_withByteArray_, tag, data)
}


#line 280
void EsGobAfirmaCoreSignersDerDerValue_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(EsGobAfirmaCoreSignersDerDerValue *self, EsGobAfirmaCoreSignersDerDerInputBuffer *inArg) {
  NSObject_init(self);
  
#line 284
  self->tag_ = (jbyte) [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(inArg)) read];
  jbyte lenByte = (jbyte) [inArg read];
  self->length_ = EsGobAfirmaCoreSignersDerDerInputStream_getLengthWithInt_withJavaIoInputStream_(lenByte, inArg);
  if (self->length_ == -1) {
    EsGobAfirmaCoreSignersDerDerInputBuffer *inbuf = [inArg dup];
    jint readLen = [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(inbuf)) available];
    jint offset = 2;
    IOSByteArray *indefData = [IOSByteArray newArrayWithLength:readLen + offset];
    *IOSByteArray_GetRef(indefData, 0) = self->tag_;
    *IOSByteArray_GetRef(indefData, 1) = lenByte;
    JavaIoDataInputStream *dis = new_JavaIoDataInputStream_initWithJavaIoInputStream_(inbuf);
    [dis readFullyWithByteArray:indefData withInt:offset withInt:readLen];
    [dis close];
    EsGobAfirmaCoreSignersDerDerIndefLenConverter *derIn = new_EsGobAfirmaCoreSignersDerDerIndefLenConverter_initPackagePrivate();
    inbuf = new_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withBoolean_([derIn convertWithByteArray:indefData], inArg->allowBER_);
    if (self->tag_ != [inbuf read]) {
      @throw new_JavaIoIOException_initWithNSString_(
#line 301
      @"Indefinite length encoding not supported");
    }
    self->length_ = EsGobAfirmaCoreSignersDerDerInputStream_getLengthWithJavaIoInputStream_(inbuf);
    self->buffer_ = [inbuf dup];
    [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) truncateWithInt:self->length_];
    self->data_ = new_EsGobAfirmaCoreSignersDerDerInputStream_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self->buffer_);
    
#line 310
    [inArg skipWithLong:self->length_ + offset];
  }
  else {
    self->buffer_ = [inArg dup];
    [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(self->buffer_)) truncateWithInt:self->length_];
    self->data_ = new_EsGobAfirmaCoreSignersDerDerInputStream_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self->buffer_);
    
#line 317
    [inArg skipWithLong:self->length_];
  }
}


#line 280
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(EsGobAfirmaCoreSignersDerDerInputBuffer *inArg) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithEsGobAfirmaCoreSignersDerDerInputBuffer_, inArg)
}


#line 280
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(EsGobAfirmaCoreSignersDerDerInputBuffer *inArg) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithEsGobAfirmaCoreSignersDerDerInputBuffer_, inArg)
}


#line 323
void EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withBoolean_(EsGobAfirmaCoreSignersDerDerValue *self, IOSByteArray *buf, jboolean allowBER) {
  NSObject_init(self);
  
#line 324
  self->data_ = EsGobAfirmaCoreSignersDerDerValue_init__WithBoolean_withJavaIoInputStream_withBoolean_(self, true, new_JavaIoByteArrayInputStream_initWithByteArray_(buf), allowBER);
}


#line 323
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withBoolean_(IOSByteArray *buf, jboolean allowBER) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_withBoolean_, buf, allowBER)
}


#line 323
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withBoolean_(IOSByteArray *buf, jboolean allowBER) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_withBoolean_, buf, allowBER)
}


#line 335
void EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_(EsGobAfirmaCoreSignersDerDerValue *self, IOSByteArray *buf) {
  EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withBoolean_(self, buf, true);
}


#line 335
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_(IOSByteArray *buf) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_, buf)
}


#line 335
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_(IOSByteArray *buf) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_, buf)
}


#line 341
void EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_withBoolean_(EsGobAfirmaCoreSignersDerDerValue *self, IOSByteArray *buf, jint offset, jint len, jboolean allowBER) {
  NSObject_init(self);
  self->data_ = EsGobAfirmaCoreSignersDerDerValue_init__WithBoolean_withJavaIoInputStream_withBoolean_(self, true, new_JavaIoByteArrayInputStream_initWithByteArray_withInt_withInt_(buf, offset, len), allowBER);
}


#line 341
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_withBoolean_(IOSByteArray *buf, jint offset, jint len, jboolean allowBER) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_withInt_withInt_withBoolean_, buf, offset, len, allowBER)
}


#line 341
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_withBoolean_(IOSByteArray *buf, jint offset, jint len, jboolean allowBER) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_withInt_withInt_withBoolean_, buf, offset, len, allowBER)
}


#line 356
void EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_(EsGobAfirmaCoreSignersDerDerValue *self, IOSByteArray *buf, jint offset, jint len) {
  EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_withBoolean_(self, buf, offset, len, true);
}


#line 356
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_(IOSByteArray *buf, jint offset, jint len) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_withInt_withInt_, buf, offset, len)
}


#line 356
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithByteArray_withInt_withInt_(IOSByteArray *buf, jint offset, jint len) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithByteArray_withInt_withInt_, buf, offset, len)
}


#line 362
void EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_withBoolean_(EsGobAfirmaCoreSignersDerDerValue *self, JavaIoInputStream *inArg, jboolean allowBER) {
  NSObject_init(self);
  
#line 363
  self->data_ = EsGobAfirmaCoreSignersDerDerValue_init__WithBoolean_withJavaIoInputStream_withBoolean_(self, false, inArg, allowBER);
}


#line 362
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *inArg, jboolean allowBER) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithJavaIoInputStream_withBoolean_, inArg, allowBER)
}


#line 362
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_withBoolean_(JavaIoInputStream *inArg, jboolean allowBER) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithJavaIoInputStream_withBoolean_, inArg, allowBER)
}


#line 376
void EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_(EsGobAfirmaCoreSignersDerDerValue *self, JavaIoInputStream *inArg) {
  EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_withBoolean_(self, inArg, true);
}


#line 376
EsGobAfirmaCoreSignersDerDerValue *new_EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithJavaIoInputStream_, inArg)
}


#line 376
EsGobAfirmaCoreSignersDerDerValue *create_EsGobAfirmaCoreSignersDerDerValue_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerDerValue, initWithJavaIoInputStream_, inArg)
}

EsGobAfirmaCoreSignersDerDerInputStream *EsGobAfirmaCoreSignersDerDerValue_init__WithByte_withNSString_(EsGobAfirmaCoreSignersDerDerValue *self, jbyte stringTag, NSString *value) {
  
#line 382
  NSString *enc = nil;
  
#line 384
  self->tag_ = stringTag;
  
#line 386
  switch (stringTag) {
    case EsGobAfirmaCoreSignersDerDerValue_tag_PrintableString:
    case EsGobAfirmaCoreSignersDerDerValue_tag_IA5String:
    case EsGobAfirmaCoreSignersDerDerValue_tag_GeneralString:
    enc = @"ASCII";
    break;
    case EsGobAfirmaCoreSignersDerDerValue_tag_T61String:
    enc = @"ISO-8859-1";
    break;
    case EsGobAfirmaCoreSignersDerDerValue_tag_BMPString:
    enc = @"UnicodeBigUnmarked";
    break;
    case EsGobAfirmaCoreSignersDerDerValue_tag_UTF8String:
    enc = @"UTF8";
    break;
    
#line 403
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unsupported DER string type");
  }
  
#line 407
  IOSByteArray *buf = [((NSString *) nil_chk(value)) java_getBytesWithCharsetName:enc];
  self->length_ = ((IOSByteArray *) nil_chk(buf))->size_;
  self->buffer_ = new_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withBoolean_(buf, true);
  EsGobAfirmaCoreSignersDerDerInputStream *result = new_EsGobAfirmaCoreSignersDerDerInputStream_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self->buffer_);
  [result markWithInt:JavaLangInteger_MAX_VALUE];
  return result;
}


#line 418
EsGobAfirmaCoreSignersDerDerInputStream *EsGobAfirmaCoreSignersDerDerValue_init__WithBoolean_withJavaIoInputStream_withBoolean_(EsGobAfirmaCoreSignersDerDerValue *self, jboolean fullyBuffered, JavaIoInputStream *inArg, jboolean allowBER) {
  
#line 421
  self->tag_ = (jbyte) [((JavaIoInputStream *) nil_chk(inArg)) read];
  jbyte lenByte = (jbyte) [inArg read];
  self->length_ = EsGobAfirmaCoreSignersDerDerInputStream_getLengthWithInt_withJavaIoInputStream_(lenByte, inArg);
  if (self->length_ == -1) {
    jint readLen = [inArg available];
    jint offset = 2;
    IOSByteArray *indefData = [IOSByteArray newArrayWithLength:readLen + offset];
    *IOSByteArray_GetRef(indefData, 0) = self->tag_;
    *IOSByteArray_GetRef(indefData, 1) = lenByte;
    JavaIoDataInputStream *dis = new_JavaIoDataInputStream_initWithJavaIoInputStream_(inArg);
    [dis readFullyWithByteArray:indefData withInt:offset withInt:readLen];
    [dis close];
    EsGobAfirmaCoreSignersDerDerIndefLenConverter *derIn = new_EsGobAfirmaCoreSignersDerDerIndefLenConverter_initPackagePrivate();
    inArg = new_JavaIoByteArrayInputStream_initWithByteArray_([derIn convertWithByteArray:indefData]);
    if (self->tag_ != [inArg read]) {
      @throw new_JavaIoIOException_initWithNSString_(
#line 437
      @"Indefinite length encoding not supported");
    }
    self->length_ = EsGobAfirmaCoreSignersDerDerInputStream_getLengthWithJavaIoInputStream_(inArg);
  }
  
#line 442
  if (fullyBuffered && [inArg available] != self->length_) {
    @throw new_JavaIoIOException_initWithNSString_(@"extra data given to DerValue constructor");
  }
  
#line 446
  IOSByteArray *bytes = EsGobAfirmaCoreSignersDerDerValue_readExactlyNBytesWithJavaIoInputStream_withInt_(inArg, self->length_);
  
#line 448
  self->buffer_ = new_EsGobAfirmaCoreSignersDerDerInputBuffer_initPackagePrivateWithByteArray_withBoolean_(bytes, allowBER);
  return new_EsGobAfirmaCoreSignersDerDerInputStream_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self->buffer_);
}


#line 516
IOSByteArray *EsGobAfirmaCoreSignersDerDerValue_appendWithByteArray_withByteArray_(EsGobAfirmaCoreSignersDerDerValue *self, IOSByteArray *a, IOSByteArray *b) {
  if (a == nil) {
    return b;
  }
  
#line 521
  IOSByteArray *ret = [IOSByteArray newArrayWithLength:a->size_ + ((IOSByteArray *) nil_chk(b))->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, ret, 0, a->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, ret, a->size_, b->size_);
  
#line 525
  return ret;
}


#line 899
jboolean EsGobAfirmaCoreSignersDerDerValue_doEqualsWithEsGobAfirmaCoreSignersDerDerValue_withEsGobAfirmaCoreSignersDerDerValue_(EsGobAfirmaCoreSignersDerDerValue *d1, EsGobAfirmaCoreSignersDerDerValue *d2) {
  EsGobAfirmaCoreSignersDerDerValue_initialize();
  
#line 900
  @synchronized(((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(d1))->data_) {
    @synchronized(((EsGobAfirmaCoreSignersDerDerValue *) nil_chk(d2))->data_) {
      [((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(d1->data_)) reset];
      [d2->data_ reset];
      return [((EsGobAfirmaCoreSignersDerDerInputBuffer *) nil_chk(d1->buffer_)) equalsWithEsGobAfirmaCoreSignersDerDerInputBuffer:d2->buffer_];
    }
  }
}


#line 994
jboolean EsGobAfirmaCoreSignersDerDerValue_isPrintableStringCharWithChar_(jchar ch) {
  EsGobAfirmaCoreSignersDerDerValue_initialize();
  
#line 995
  if ((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z') || (
#line 996
  ch >= '0' && ch <= '9')) {
    return true;
  }
  else {
    
#line 999
    switch (ch) {
      case ' ':
      case '\'':
      case '(':
      case ')':
      case '+':
      case ',':
      case '-':
      case '.':
      case '/':
      case ':':
      case '=':
      case '?':
      return true;
      default:
      return false;
    }
  }
}


#line 1029
jbyte EsGobAfirmaCoreSignersDerDerValue_createTagWithByte_withBoolean_withByte_(jbyte tagClass, jboolean form, jbyte val) {
  EsGobAfirmaCoreSignersDerDerValue_initialize();
  
#line 1030
  jbyte tag = (jbyte) (tagClass | val);
  if (form) {
    tag |= (jbyte) (jint) 0x20;
  }
  return tag;
}


#line 1073
IOSByteArray *EsGobAfirmaCoreSignersDerDerValue_readExactlyNBytesWithJavaIoInputStream_withInt_(JavaIoInputStream *is, jint length) {
  EsGobAfirmaCoreSignersDerDerValue_initialize();
  if (length < 0) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"length cannot be negative: ", length));
  }
  IOSByteArray *data = EsGobAfirmaCoreSignersDerDerValue_readNBytesWithJavaIoInputStream_withInt_(is, length);
  if (((IOSByteArray *) nil_chk(data))->size_ < length) {
    @throw new_JavaIoEOFException_init();
  }
  return data;
}


#line 1130
IOSByteArray *EsGobAfirmaCoreSignersDerDerValue_readNBytesWithJavaIoInputStream_withInt_(JavaIoInputStream *is, jint len) {
  EsGobAfirmaCoreSignersDerDerValue_initialize();
  
#line 1131
  if (len < 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"len < 0");
  }
  
#line 1135
  id<JavaUtilList> bufs = nil;
  IOSByteArray *result = nil;
  jint total = 0;
  jint remaining = len;
  jint n;
  do {
    IOSByteArray *buf = [IOSByteArray newArrayWithLength:JavaLangMath_minWithInt_withInt_(remaining, EsGobAfirmaCoreSignersDerDerValue_DEFAULT_BUFFER_SIZE)];
    jint nread = 0;
    
#line 1145
    while ((n = [((JavaIoInputStream *) nil_chk(is)) readWithByteArray:buf withInt:nread withInt:JavaLangMath_minWithInt_withInt_(
#line 1146
    buf->size_ - nread, remaining)]) > 0) {
      nread += n;
      remaining -= n;
    }
    
#line 1151
    if (nread > 0) {
      if (EsGobAfirmaCoreSignersDerDerValue_MAX_BUFFER_SIZE - total < nread) {
        @throw new_JavaLangOutOfMemoryError_initWithNSString_(@"Required array size too large");
      }
      total += nread;
      if (result == nil) {
        result = buf;
      }
      else {
        
#line 1159
        if (bufs == nil) {
          bufs = new_JavaUtilArrayList_init();
          [bufs addWithId:result];
        }
        [bufs addWithId:buf];
      }
    }
  }
  while (
#line 1168
  n >= 0 && remaining > 0);
  
#line 1170
  if (bufs == nil) {
    if (result == nil) {
      return [IOSByteArray newArrayWithLength:0];
    }
    return result->size_ == total ?
#line 1175
    result : JavaUtilArrays_copyOfWithByteArray_withInt_(result, total);
  }
  
#line 1178
  result = [IOSByteArray newArrayWithLength:total];
  jint offset = 0;
  remaining = total;
  for (IOSByteArray * __strong b in bufs) {
    jint count = JavaLangMath_minWithInt_withInt_(((IOSByteArray *) nil_chk(b))->size_, remaining);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, result, offset, count);
    offset += count;
    remaining -= count;
  }
  
#line 1188
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersDerDerValue)

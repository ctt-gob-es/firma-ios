//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfWriter.java
//

#include "BaseFont.h"
#include "ByteBuffer.h"
#include "Color.h"
#include "ColorDetails.h"
#include "DocWriter.h"
#include "Document.h"
#include "DocumentException.h"
#include "DocumentFont.h"
#include "ExceptionConverter.h"
#include "ExtendedColor.h"
#include "FontDetails.h"
#include "ICC_Profile.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "ImgJBIG2.h"
#include "ImgWMF.h"
#include "J2ObjC_source.h"
#include "OutputStreamCounter.h"
#include "PRIndirectReference.h"
#include "PdfAcroForm.h"
#include "PdfAction.h"
#include "PdfAnnotation.h"
#include "PdfArray.h"
#include "PdfBoolean.h"
#include "PdfCollection.h"
#include "PdfContentByte.h"
#include "PdfContents.h"
#include "PdfDestination.h"
#include "PdfDeveloperExtension.h"
#include "PdfDictionary.h"
#include "PdfDocument.h"
#include "PdfEncryption.h"
#include "PdfException.h"
#include "PdfFileSpecification.h"
#include "PdfICCBased.h"
#include "PdfImage.h"
#include "PdfImportedPage.h"
#include "PdfIndirectObject.h"
#include "PdfIndirectReference.h"
#include "PdfLayer.h"
#include "PdfLayerMembership.h"
#include "PdfName.h"
#include "PdfNumber.h"
#include "PdfOCG.h"
#include "PdfOCProperties.h"
#include "PdfObject.h"
#include "PdfOutline.h"
#include "PdfPage.h"
#include "PdfPageEvent.h"
#include "PdfPageEventForwarder.h"
#include "PdfPageLabels.h"
#include "PdfPages.h"
#include "PdfPattern.h"
#include "PdfPatternPainter.h"
#include "PdfReader.h"
#include "PdfReaderInstance.h"
#include "PdfShading.h"
#include "PdfShadingPattern.h"
#include "PdfSpotColor.h"
#include "PdfStream.h"
#include "PdfString.h"
#include "PdfStructureTreeRoot.h"
#include "PdfTemplate.h"
#include "PdfTransition.h"
#include "PdfVersionImp.h"
#include "PdfWriter.h"
#include "PdfXConformanceException.h"
#include "PdfXConformanceImp.h"
#include "RandomAccessFileOrArray.h"
#include "Rectangle.h"
#include "SimpleBookmark.h"
#include "SpotColor.h"
#include "Table.h"
#include "XmpWriter.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Comparable.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/security/cert/Certificate.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"

@class ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference;

#if !__has_feature(objc_arc)
#error "PdfWriter must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfWriter () {
 @public
  /*!
   @brief The direct content in this document.
   */
  ComAowagieTextPdfPdfContentByte *directContent_;
  /*!
   @brief The direct content under in this document.
   */
  ComAowagieTextPdfPdfContentByte *directContentUnder_;
  /*!
   @brief Holds value of property extraCatalog this is used for Output Intents.
   */
  ComAowagieTextPdfPdfDictionary *extraCatalog_;
  /*!
   @brief The PdfIndirectReference to the pages.
   */
  JavaUtilArrayList *pageReferences_;
  /*!
   @brief The current page number.
   */
  jint currentPageNumber_;
  /*!
   @brief The value of the Tabs entry in the page dictionary.
   @since 2.1.5
   */
  ComAowagieTextPdfPdfName *tabs_;
  /*!
   @brief The <CODE>PdfPageEvent</CODE> for this document.
   */
  id<ComAowagieTextPdfPdfPageEvent> pageEvent_;
  /*!
   @brief Stores the PDF/X level.
   */
  ComAowagieTextPdfInternalPdfXConformanceImp *pdfxConformance_;
  /*!
   @brief The fonts of this document
   */
  JavaUtilLinkedHashMap *documentFonts_;
  /*!
   @brief The font number counter for the fonts in the document.
   */
  jint fontNumber_;
  /*!
   @brief The form XObjects in this document.The key is the xref and the value
         is Object[]{PdfName, template}.
   */
  JavaUtilHashMap *formXObjects_;
  /*!
   @brief The name counter for the form XObjects name.
   */
  jint formXObjectsCounter_;
  JavaUtilHashMap *importedPages_;
  /*!
   @brief The colors of this document
   */
  JavaUtilHashMap *documentColors_;
  /*!
   @brief The color number counter for the colors in the document.
   */
  jint colorNumber_;
  /*!
   @brief The patterns of this document
   */
  JavaUtilHashMap *documentPatterns_;
  /*!
   @brief The pattern number counter for the colors in the document.
   */
  jint patternNumber_;
  JavaUtilHashMap *documentShadingPatterns_;
  JavaUtilHashMap *documentShadings_;
  JavaUtilHashMap *documentExtGState_;
  JavaUtilHashMap *documentProperties_;
  ComAowagieTextPdfPdfStructureTreeRoot *structureTreeRoot_;
  /*!
   @brief An array list used to define the order of an OCG tree.
   */
  JavaUtilArrayList *documentOCGorder_;
  /*!
   @brief A group attributes dictionary specifying the attributes
  of the page's page group for use in the transparent
  imaging model
   */
  ComAowagieTextPdfPdfDictionary *group_;
  /*!
   @brief The ratio between the extra word spacing and the extra character spacing.
   Extra word spacing will grow <CODE>ratio</CODE> times more than extra character spacing.
   */
  jfloat spaceCharRatio_;
  jint runDirection_;
  jfloat userunit_;
  ComAowagieTextPdfPdfDictionary *defaultColorspace_;
  JavaUtilHashMap *documentSpotPatterns_;
  ComAowagieTextPdfColorDetails *patternColorspaceRGB_;
  ComAowagieTextPdfColorDetails *patternColorspaceGRAY_;
  ComAowagieTextPdfColorDetails *patternColorspaceCMYK_;
  /*!
   @brief Dictionary, containing all the images of the PDF document
   */
  ComAowagieTextPdfPdfDictionary *imageDictionary_;
  /*!
   @brief This is the list with all the images in the document.
   */
  JavaUtilHashMap *images_;
  /*!
   @brief A HashSet with Stream objects containing JBIG2 Globals
   @since 2.1.5
   */
  JavaUtilHashMap *JBIG2Globals_;
  /*!
   @brief A flag indicating the presence of structure elements that contain user properties attributes.
   */
  jboolean userProperties_;
  /*!
   @brief Holds value of property RGBTranparency.
   */
  jboolean rgbTransparencyBlending_;
}

/*!
 @brief Returns the outputStreamCounter.
 @return the outputStreamCounter
 */
- (ComAowagieTextPdfOutputStreamCounter *)getOs;

/*!
 @brief Use this method to add a JavaScript action at the document level.
 When the document opens, all this JavaScript runs.
 @param js The JavaScript action
 */
- (void)addJavaScriptWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)js;

/*!
 @brief Use this method to add a JavaScript action at the document level.
 When the document opens, all this JavaScript runs.
 @param name The name of the JS Action in the name tree
 @param js The JavaScript action
 */
- (void)addJavaScriptWithNSString:(NSString *)name
   withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)js;

/*!
 @brief Use this method to add a JavaScript action at the document level.
 When the document opens, all this JavaScript runs.
 @param name The name of the JS Action in the name tree
 @param code the JavaScript code
 @param unicode select JavaScript unicode. Note that the internal  Acrobat JavaScript engine does not support unicode,
   so this may or may not work for you
 */
- (void)addJavaScriptWithNSString:(NSString *)name
                     withNSString:(NSString *)code
                      withBoolean:(jboolean)unicode;

/*!
 @return an XmpMetadata byte array
 */
- (IOSByteArray *)createXmpMetadataBytes;

/*!
 @brief Sets the values of the output intent dictionary.Null values are allowed to
  suppress any key.
 Prefer the <CODE>ICC_Profile</CODE>-based version of this method.
 @param outputConditionIdentifier a value
 @param outputCondition a value, "PDFA/A" to force GTS_PDFA1, otherwise cued by pdfxConformance.
 @param registryName a value
 @param info a value
 @param destOutputProfile a value
 @throw IOExceptionon error
 @since 1.x
 @throw IOExceptionon error
 */
- (void)setOutputIntentsWithNSString:(NSString *)outputConditionIdentifier
                        withNSString:(NSString *)outputCondition
                        withNSString:(NSString *)registryName
                        withNSString:(NSString *)info
                       withByteArray:(IOSByteArray *)destOutputProfile;

+ (NSString *)getNameStringWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic
                                 withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key;

+ (void)getOCGOrderWithComAowagieTextPdfPdfArray:(ComAowagieTextPdfPdfArray *)order
                   withComAowagieTextPdfPdfLayer:(ComAowagieTextPdfPdfLayer *)layer;

- (void)addASEventWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)event
                  withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)category;

/*!
 @brief Use this method to sets the default colorspace that will be applied
  to all the document.The colorspace is only applied if another colorspace
  with the same name is not present in the content.
 <p>
  The colorspace is applied immediately when creating templates and
  at the page end for the main document content.
 @param key the name of the colorspace. It can be  <CODE> PdfName.DEFAULTGRAY </CODE> ,  <CODE> PdfName.DEFAULTRGB </CODE>
   or  <CODE> PdfName.DEFAULTCMYK </CODE>
 @param cs the colorspace. A  <CODE> null </CODE>  or  <CODE> PdfNull </CODE>  removes any colorspace with the same name
 */
- (void)setDefaultColorspaceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                          withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)cs;

/*!
 @brief Adds an image to the document but not to the page resources.
 It is used with templates and <CODE>Document.add(Image)</CODE>.
  Use this method only if you know what you're doing!
 @param image the  <CODE> Image </CODE>  to add
 @param fixedRef the reference to used. It may be  <CODE> null </CODE>
  ,  a  <CODE> PdfIndirectReference </CODE>  or a  <CODE> PRIndirectReference </CODE>
  .
 @return the name of the image added
 @throw PdfExceptionon error
 @throw DocumentExceptionon error
 */
- (ComAowagieTextPdfPdfName *)addDirectImageSimpleWithComAowagieTextImage:(ComAowagieTextImage *)image
                                withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)fixedRef;

/*!
 @brief Writes a <CODE>PdfImage</CODE> to the outputstream.
 @param pdfImage the image to be added
 @param fixedRef Reference
 @return a <CODE>PdfIndirectReference</CODE> to the encapsulated image
 @throw PdfExceptionwhen a document isn't open yet, or has been closed
 */
- (ComAowagieTextPdfPdfIndirectReference *)addWithComAowagieTextPdfPdfImage:(ComAowagieTextPdfPdfImage *)pdfImage
                                  withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)fixedRef;

- (ComAowagieTextPdfPdfIndirectReference *)addWithComAowagieTextPdfPdfICCBased:(ComAowagieTextPdfPdfICCBased *)icc;

/*!
 @brief Checks if a <CODE>Table</CODE> fits the current page of the <CODE>PdfDocument</CODE>.
 @param table the table that has to be checked
 @param margin a certain margin
 @return <CODE>true</CODE> if the <CODE>Table</CODE> fits the page, <CODE>false</CODE> otherwise.
 */
- (jboolean)fitsPageWithComAowagieTextTable:(ComAowagieTextTable *)table
                                  withFloat:(jfloat)margin;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, directContent_, ComAowagieTextPdfPdfContentByte *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, directContentUnder_, ComAowagieTextPdfPdfContentByte *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, extraCatalog_, ComAowagieTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, pageReferences_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, tabs_, ComAowagieTextPdfPdfName *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, pageEvent_, id<ComAowagieTextPdfPdfPageEvent>)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, pdfxConformance_, ComAowagieTextPdfInternalPdfXConformanceImp *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentFonts_, JavaUtilLinkedHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, formXObjects_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, importedPages_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentColors_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentPatterns_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentShadingPatterns_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentShadings_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentExtGState_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentProperties_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, structureTreeRoot_, ComAowagieTextPdfPdfStructureTreeRoot *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentOCGorder_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, group_, ComAowagieTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, defaultColorspace_, ComAowagieTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, documentSpotPatterns_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, patternColorspaceRGB_, ComAowagieTextPdfColorDetails *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, patternColorspaceGRAY_, ComAowagieTextPdfColorDetails *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, patternColorspaceCMYK_, ComAowagieTextPdfColorDetails *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, imageDictionary_, ComAowagieTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, images_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter, JBIG2Globals_, JavaUtilHashMap *)

inline jboolean ComAowagieTextPdfPdfWriter_get_tagged(void);
#define ComAowagieTextPdfPdfWriter_tagged false
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, tagged, jboolean)

/*!
 @brief action value
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PAGE_OPEN(void);
static ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PAGE_OPEN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PAGE_OPEN, ComAowagieTextPdfPdfName *)

/*!
 @brief action value
 */
inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_get_PAGE_CLOSE(void);
static ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PAGE_CLOSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfWriter, PAGE_CLOSE, ComAowagieTextPdfPdfName *)

/*!
 @brief The default space-char ratio.
 */
inline jfloat ComAowagieTextPdfPdfWriter_get_SPACE_CHAR_RATIO_DEFAULT(void);
#define ComAowagieTextPdfPdfWriter_SPACE_CHAR_RATIO_DEFAULT 2.5f
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter, SPACE_CHAR_RATIO_DEFAULT, jfloat)

__attribute__((unused)) static ComAowagieTextPdfOutputStreamCounter *ComAowagieTextPdfPdfWriter_getOs(ComAowagieTextPdfPdfWriter *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_addJavaScriptWithComAowagieTextPdfPdfAction_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfAction *js);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_addJavaScriptWithNSString_withComAowagieTextPdfPdfAction_(ComAowagieTextPdfPdfWriter *self, NSString *name, ComAowagieTextPdfPdfAction *js);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_addJavaScriptWithNSString_withNSString_withBoolean_(ComAowagieTextPdfPdfWriter *self, NSString *name, NSString *code, jboolean unicode);

__attribute__((unused)) static IOSByteArray *ComAowagieTextPdfPdfWriter_createXmpMetadataBytes(ComAowagieTextPdfPdfWriter *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_setOutputIntentsWithNSString_withNSString_withNSString_withNSString_withByteArray_(ComAowagieTextPdfPdfWriter *self, NSString *outputConditionIdentifier, NSString *outputCondition, NSString *registryName, NSString *info, IOSByteArray *destOutputProfile);

__attribute__((unused)) static NSString *ComAowagieTextPdfPdfWriter_getNameStringWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfName_(ComAowagieTextPdfPdfDictionary *dic, ComAowagieTextPdfPdfName *key);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_getOCGOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfLayer_(ComAowagieTextPdfPdfArray *order, ComAowagieTextPdfPdfLayer *layer);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_addASEventWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfName *event, ComAowagieTextPdfPdfName *category);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_setDefaultColorspaceWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfObject_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfName *key, ComAowagieTextPdfPdfObject *cs);

__attribute__((unused)) static ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_addDirectImageSimpleWithComAowagieTextImage_withComAowagieTextPdfPdfIndirectReference_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextImage *image, ComAowagieTextPdfPdfIndirectReference *fixedRef);

__attribute__((unused)) static ComAowagieTextPdfPdfIndirectReference *ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfImage_withComAowagieTextPdfPdfIndirectReference_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfImage *pdfImage, ComAowagieTextPdfPdfIndirectReference *fixedRef);

__attribute__((unused)) static ComAowagieTextPdfPdfIndirectReference *ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfICCBased_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfICCBased *icc);

__attribute__((unused)) static jboolean ComAowagieTextPdfPdfWriter_fitsPageWithComAowagieTextTable_withFloat_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextTable *table, jfloat margin);

@interface ComAowagieTextPdfPdfWriter_PdfBody () {
 @public
  /*!
   @brief array containing the cross-reference table of the normal objects.
   */
  JavaUtilTreeSet *xrefs_;
  jint refnum_;
  /*!
   @brief the current byte position in the body.
   */
  jint position_;
  ComAowagieTextPdfPdfWriter *writer_;
  ComAowagieTextPdfByteBuffer *index_;
  ComAowagieTextPdfByteBuffer *streamObjects_;
  jint currentObjNum_;
  jint numObj_;
}

/*!
 @brief Constructs a new <CODE>PdfBody</CODE>.
 @param writer Writer
 */
- (instancetype)initWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer;

- (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *)addToObjStmWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj
                                                                                            withInt:(jint)nObj;

- (void)flushObjStm;

- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                              withBoolean:(jboolean)inObjStm;

- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref
                                                              withBoolean:(jboolean)inObjStm;

- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                  withInt:(jint)refNumber;

- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                  withInt:(jint)refNumber
                                                              withBoolean:(jboolean)inObjStm;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter_PdfBody, xrefs_, JavaUtilTreeSet *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter_PdfBody, writer_, ComAowagieTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter_PdfBody, index_, ComAowagieTextPdfByteBuffer *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfWriter_PdfBody, streamObjects_, ComAowagieTextPdfByteBuffer *)

inline jint ComAowagieTextPdfPdfWriter_PdfBody_get_OBJSINSTREAM(void);
#define ComAowagieTextPdfPdfWriter_PdfBody_OBJSINSTREAM 200
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfWriter_PdfBody, OBJSINSTREAM, jint)

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfWriter *writer);

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody *new_ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody *create_ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer);

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *ComAowagieTextPdfPdfWriter_PdfBody_addToObjStmWithComAowagieTextPdfPdfObject_withInt_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *obj, jint nObj);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_PdfBody_flushObjStm(ComAowagieTextPdfPdfWriter_PdfBody *self);

__attribute__((unused)) static ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withBoolean_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, jboolean inObjStm);

__attribute__((unused)) static ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, ComAowagieTextPdfPdfIndirectReference *ref, jboolean inObjStm);

__attribute__((unused)) static ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, jint refNumber);

__attribute__((unused)) static ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_withBoolean_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, jint refNumber, jboolean inObjStm);

/*!
 @brief <CODE>PdfCrossReference</CODE> is an entry in the PDF Cross-Reference table.
 */
@interface ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference : NSObject < JavaLangComparable > {
 @public
  jint type_;
  /*!
   @brief Byte offset in the PDF file.
   */
  jint offset_;
  jint refnum_;
  /*!
   @brief generation of the object.
   */
  jint generation_;
}

/*!
 @brief Constructs a cross-reference element for a PdfIndirectObject.
 @param refnum Reference
 @param offset byte offset of the object
 @param generation generation number of the object
 */
- (instancetype)initWithInt:(jint)refnum
                    withInt:(jint)offset
                    withInt:(jint)generation;

/*!
 @brief Constructs a cross-reference element for a PdfIndirectObject.
 @param refnum Reference
 @param offset byte offset of the object
 */
- (instancetype)initWithInt:(jint)refnum
                    withInt:(jint)offset;

- (instancetype)initWithInt:(jint)type
                    withInt:(jint)refnum
                    withInt:(jint)offset
                    withInt:(jint)generation;

- (jint)getRefnum;

/*!
 @brief Returns the PDF representation of this <CODE>PdfObject</CODE>.
 @param os OutputStream
 @throw IOExceptionon error
 */
- (void)toPdfWithJavaIoOutputStream:(JavaIoOutputStream *)os;

/*!
 @brief Writes PDF syntax to the OutputStream
 @param midSize Mid Size
 @param os OutputStream
 @throw IOExceptionon error
 */
- (void)toPdfWithInt:(jint)midSize
withJavaIoOutputStream:(JavaIoOutputStream *)os;

/*!
 - seealso: java.lang.Comparable#compareTo(java.lang.Object)
 */
- (jint)compareToWithId:(id)o;

/*!
 - seealso: java.lang.Object#equals(java.lang.Object)
 */
- (jboolean)isEqual:(id)obj;

/*!
 - seealso: java.lang.Object#hashCode()
 */
- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference)

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint refnum, jint offset, jint generation);

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(jint refnum, jint offset, jint generation) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *create_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(jint refnum, jint offset, jint generation);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint refnum, jint offset);

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(jint refnum, jint offset) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *create_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(jint refnum, jint offset);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint type, jint refnum, jint offset, jint generation);

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(jint type, jint refnum, jint offset, jint generation) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *create_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(jint type, jint refnum, jint offset, jint generation);

__attribute__((unused)) static jint ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_getRefnum(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithJavaIoOutputStream_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, JavaIoOutputStream *os);

__attribute__((unused)) static void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithInt_withJavaIoOutputStream_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint midSize, JavaIoOutputStream *os);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference)

@interface ComAowagieTextPdfPdfWriter_PdfTrailer () {
 @public
  jint offset_;
}

@end

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfWriter.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfPdfWriter)

ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_2;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_3;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_4;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_5;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_6;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_PDF_VERSION_1_7;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_DOCUMENT_CLOSE;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_WILL_SAVE;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_DID_SAVE;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_WILL_PRINT;
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_DID_PRINT;


#line 101
@implementation ComAowagieTextPdfPdfWriter


#line 121
+ (ComAowagieTextPdfPdfWriter *)getInstanceWithComAowagieTextDocument:(ComAowagieTextDocument *)document
                                               withJavaIoOutputStream:(JavaIoOutputStream *)os {
  return ComAowagieTextPdfPdfWriter_getInstanceWithComAowagieTextDocument_withJavaIoOutputStream_(document, os);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 621
- (instancetype)init {
  ComAowagieTextPdfPdfWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 634
- (instancetype)initWithComAowagieTextPdfPdfDocument:(ComAowagieTextPdfPdfDocument *)document
                              withJavaIoOutputStream:(JavaIoOutputStream *)os {
  ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(self, document, os);
  return self;
}


#line 655
- (ComAowagieTextPdfPdfDocument *)getPdfDocument {
  return self->pdf_;
}


#line 664
- (ComAowagieTextPdfPdfDictionary *)getInfo {
  return [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getInfo];
}


#line 677
- (void)setInitialLeadingWithFloat:(jfloat)leading {
  if (self->open_) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(@"You can't set the initial leading if the document is already open.");
  }
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setLeadingWithFloat:leading];
}


#line 708
- (ComAowagieTextPdfPdfContentByte *)getDirectContent {
  if (!self->open_) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"The document is not open.");
  }
  return self->directContent_;
}


#line 722
- (ComAowagieTextPdfPdfContentByte *)getDirectContentUnder {
  if (!self->open_) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"The document is not open.");
  }
  return self->directContentUnder_;
}


#line 733
- (void)resetContent {
  [((ComAowagieTextPdfPdfContentByte *) nil_chk(self->directContent_)) reset];
  [((ComAowagieTextPdfPdfContentByte *) nil_chk(self->directContentUnder_)) reset];
}


#line 757
- (void)addLocalDestinationsWithJavaUtilTreeMap:(JavaUtilTreeMap *)dest {
  for (id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilTreeMap *) nil_chk(dest)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([i next], JavaUtilMap_Entry_class_());
    NSString *name = (NSString *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [NSString class]);
    IOSObjectArray *obj = (IOSObjectArray *) cast_check([entry_ getValue], IOSClass_arrayType(NSObject_class_(), 1));
    ComAowagieTextPdfPdfDestination *destination = (ComAowagieTextPdfPdfDestination *) cast_chk(IOSObjectArray_Get(nil_chk(obj), 2), [ComAowagieTextPdfPdfDestination class]);
    if (IOSObjectArray_Get(obj, 1) == nil) {
      (void) IOSObjectArray_Set(obj, 1, [self getPdfIndirectReference]);
    }
    if (destination == nil) {
      (void) [self addToBodyWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(JreStrcat("$$", @"invalid_", name)) withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *) cast_chk(IOSObjectArray_Get(obj, 1), [ComAowagieTextPdfPdfIndirectReference class])];
    }
    else {
      
#line 769
      (void) [self addToBodyWithComAowagieTextPdfPdfObject:destination withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *) cast_chk(IOSObjectArray_Get(obj, 1), [ComAowagieTextPdfPdfIndirectReference class])];
    }
  }
}


#line 781
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object {
  ComAowagieTextPdfPdfIndirectObject *iobj = [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) addWithComAowagieTextPdfPdfObject:object];
  return iobj;
}


#line 792
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                    withBoolean:(jboolean)inObjStm {
  
#line 793
  ComAowagieTextPdfPdfIndirectObject *iobj = ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withBoolean_(nil_chk(self->body_), object, inObjStm);
  return iobj;
}


#line 805
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                      withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref {
  
#line 806
  ComAowagieTextPdfPdfIndirectObject *iobj = [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) addWithComAowagieTextPdfPdfObject:object withComAowagieTextPdfPdfIndirectReference:ref];
  return iobj;
}


#line 819
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                      withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref
                                                                    withBoolean:(jboolean)inObjStm {
  
#line 820
  ComAowagieTextPdfPdfIndirectObject *iobj = ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(nil_chk(self->body_), object, ref, inObjStm);
  return iobj;
}


#line 832
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                        withInt:(jint)refNumber {
  
#line 833
  ComAowagieTextPdfPdfIndirectObject *iobj = ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_(nil_chk(self->body_), object, refNumber);
  return iobj;
}


#line 846
- (ComAowagieTextPdfPdfIndirectObject *)addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                        withInt:(jint)refNumber
                                                                    withBoolean:(jboolean)inObjStm {
  
#line 847
  ComAowagieTextPdfPdfIndirectObject *iobj = ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_withBoolean_(nil_chk(self->body_), object, refNumber, inObjStm);
  return iobj;
}


#line 858
- (ComAowagieTextPdfPdfIndirectReference *)getPdfIndirectReference {
  return [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference];
}

- (jint)getIndirectReferenceNumber {
  return [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getIndirectReferenceNumber];
}


#line 870
- (ComAowagieTextPdfOutputStreamCounter *)getOs {
  return ComAowagieTextPdfPdfWriter_getOs(self);
}


#line 885
- (ComAowagieTextPdfPdfDictionary *)getCatalogWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)rootObj {
  
#line 887
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getCatalogWithComAowagieTextPdfPdfIndirectReference:rootObj];
  
#line 889
  if (ComAowagieTextPdfPdfWriter_tagged) {
    @try {
      [((ComAowagieTextPdfPdfStructureTreeRoot *) nil_chk([self getStructureTreeRoot])) buildTree];
    }
    @catch (JavaLangException *e) {
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
    }
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, STRUCTTREEROOT) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfStructureTreeRoot *) nil_chk(self->structureTreeRoot_)) getReference]];
    ComAowagieTextPdfPdfDictionary *mi = new_ComAowagieTextPdfPdfDictionary_init();
    [mi putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MARKED) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfBoolean, PDFTRUE)];
    if (self->userProperties_) {
      [mi putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, USERPROPERTIES) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfBoolean, PDFTRUE)];
    }
    [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MARKINFO) withComAowagieTextPdfPdfObject:mi];
  }
  
#line 905
  if (![((JavaUtilHashSet *) nil_chk(self->documentOCG_)) isEmpty]) {
    [self fillOCPropertiesWithBoolean:false];
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCPROPERTIES) withComAowagieTextPdfPdfObject:self->OCProperties_];
  }
  return catalog;
}


#line 919
- (ComAowagieTextPdfPdfDictionary *)getExtraCatalog {
  if (self->extraCatalog_ == nil) {
    self->extraCatalog_ = new_ComAowagieTextPdfPdfDictionary_init();
  }
  return self->extraCatalog_;
}


#line 960
- (ComAowagieTextPdfPdfIndirectReference *)getPageReferenceWithInt:(jint)page {
  --page;
  if (page < 0) {
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(@"The page numbers start at 1.");
  }
  ComAowagieTextPdfPdfIndirectReference *ref;
  if (page < [((JavaUtilArrayList *) nil_chk(self->pageReferences_)) size]) {
    ref = (ComAowagieTextPdfPdfIndirectReference *) cast_chk([self->pageReferences_ getWithInt:page], [ComAowagieTextPdfPdfIndirectReference class]);
    if (ref == nil) {
      ref = [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference];
      (void) [self->pageReferences_ setWithInt:page withId:ref];
    }
  }
  else {
    jint empty = page - [self->pageReferences_ size];
    for (jint k = 0; k < empty; ++k) {
      [self->pageReferences_ addWithId:nil];
    }
    ref = [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference];
    [self->pageReferences_ addWithId:ref];
  }
  return ref;
}


#line 991
- (jint)getPageNumber {
  return [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getPageNumber];
}

- (ComAowagieTextPdfPdfIndirectReference *)getCurrentPage {
  return [self getPageReferenceWithInt:self->currentPageNumber_];
}

- (jint)getCurrentPageNumber {
  return self->currentPageNumber_;
}


#line 1010
- (void)setTabsWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)tabs {
  self->tabs_ = tabs;
}


#line 1019
- (ComAowagieTextPdfPdfName *)getTabs {
  return self->tabs_;
}


#line 1035
- (ComAowagieTextPdfPdfIndirectReference *)addWithComAowagieTextPdfPdfPage:(ComAowagieTextPdfPdfPage *)page
                                          withComAowagieTextPdfPdfContents:(ComAowagieTextPdfPdfContents *)contents {
  
#line 1036
  if (!self->open_) {
    @throw new_ComAowagieTextPdfPdfException_initPackagePrivateWithNSString_(@"The document isn't open.");
  }
  ComAowagieTextPdfPdfIndirectObject *object;
  @try {
    object = [self addToBodyWithComAowagieTextPdfPdfObject:contents];
  }
  @catch (JavaIoIOException *ioe) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ioe);
  }
  [((ComAowagieTextPdfPdfPage *) nil_chk(page)) addWithComAowagieTextPdfPdfIndirectReference:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk(object)) getIndirectReference]];
  
#line 1048
  if (self->group_ != nil) {
    [page putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, GROUP) withComAowagieTextPdfPdfObject:self->group_];
    self->group_ = nil;
  }
  else if (self->rgbTransparencyBlending_) {
    ComAowagieTextPdfPdfDictionary *pp = new_ComAowagieTextPdfPdfDictionary_init();
    [pp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, GROUP)];
    [pp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, S) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, TRANSPARENCY)];
    [pp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CS) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, DEVICERGB)];
    [page putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, GROUP) withComAowagieTextPdfPdfObject:pp];
  }
  [((ComAowagieTextPdfPdfPages *) nil_chk(self->root_)) addPageWithComAowagieTextPdfPdfDictionary:page];
  self->currentPageNumber_++;
  return nil;
}


#line 1081
- (void)setPageEventWithComAowagieTextPdfPdfPageEvent:(id<ComAowagieTextPdfPdfPageEvent>)event {
  if (event == nil) {
    self->pageEvent_ = nil;
  }
  else
#line 1084
  if (self->pageEvent_ == nil) {
    self->pageEvent_ = event;
  }
  else
#line 1086
  if ([self->pageEvent_ isKindOfClass:[ComAowagieTextPdfEventsPdfPageEventForwarder class]]) {
    [((ComAowagieTextPdfEventsPdfPageEventForwarder *) self->pageEvent_) addPageEventWithComAowagieTextPdfPdfPageEvent:event];
  }
  else {
    
#line 1089
    ComAowagieTextPdfEventsPdfPageEventForwarder *forward = new_ComAowagieTextPdfEventsPdfPageEventForwarder_init();
    [forward addPageEventWithComAowagieTextPdfPdfPageEvent:self->pageEvent_];
    [forward addPageEventWithComAowagieTextPdfPdfPageEvent:event];
    self->pageEvent_ = forward;
  }
}


#line 1103
- (id<ComAowagieTextPdfPdfPageEvent>)getPageEvent {
  return self->pageEvent_;
}


#line 1120
- (void)open {
  
#line 1122
  [super open];
  @try {
    [((ComAowagieTextPdfInternalPdfVersionImp *) nil_chk(self->pdf_version_)) writeHeaderWithComAowagieTextPdfOutputStreamCounter:self->os_];
    self->body_ = new_ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(self);
    if ([((ComAowagieTextPdfInternalPdfXConformanceImp *) nil_chk(self->pdfxConformance_)) isPdfX32002]) {
      ComAowagieTextPdfPdfDictionary *sec = new_ComAowagieTextPdfPdfDictionary_init();
      [sec putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, GAMMA) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_initWithFloatArray_([IOSFloatArray newArrayWithFloats:(jfloat[]){ 2.2f, 2.2f, 2.2f } count:3])];
      [sec putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MATRIX) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_initWithFloatArray_([IOSFloatArray newArrayWithFloats:(jfloat[]){ 0.4124f, 0.2126f, 0.0193f, 0.3576f, 0.7152f, 0.1192f, 0.1805f, 0.0722f, 0.9505f } count:9])];
      [sec putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, WHITEPOINT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_initWithFloatArray_([IOSFloatArray newArrayWithFloats:(jfloat[]){ 0.9505f, 1.0f, 1.089f } count:3])];
      ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfObject_(JreLoadStatic(ComAowagieTextPdfPdfName, CALRGB));
      [arr addWithComAowagieTextPdfPdfObject:sec];
      ComAowagieTextPdfPdfWriter_setDefaultColorspaceWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfObject_(self, JreLoadStatic(ComAowagieTextPdfPdfName, DEFAULTRGB), [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:arr])) getIndirectReference]);
    }
  }
  @catch (JavaIoIOException *ioe) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ioe);
  }
}


#line 1151
- (void)close {
  
#line 1153
  if (self->open_) {
    if (self->currentPageNumber_ - 1 != [((JavaUtilArrayList *) nil_chk(self->pageReferences_)) size]) {
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$I$I$", @"The page ", [self->pageReferences_ size], @" was requested but the document has only ",
#line 1156
      (self->currentPageNumber_ - 1), @" pages."));
    }
    [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) close];
    @try {
      [self addSharedObjectsToBody];
      
#line 1162
      ComAowagieTextPdfPdfIndirectReference *rootRef = [((ComAowagieTextPdfPdfPages *) nil_chk(self->root_)) writePageTree];
      
#line 1164
      ComAowagieTextPdfPdfDictionary *catalog = [self getCatalogWithComAowagieTextPdfPdfIndirectReference:rootRef];
      
#line 1166
      if (self->xmpMetadata_ != nil) {
        ComAowagieTextPdfPdfStream *xmp = new_ComAowagieTextPdfPdfStream_initWithByteArray_(self->xmpMetadata_);
        [xmp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, METADATA)];
        [xmp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, XML)];
        if (self->crypto_ != nil && ![self->crypto_ isMetadataEncrypted]) {
          ComAowagieTextPdfPdfArray *ar = new_ComAowagieTextPdfPdfArray_init();
          [ar addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, CRYPT)];
          [xmp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FILTER) withComAowagieTextPdfPdfObject:ar];
        }
        [((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, METADATA) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) addWithComAowagieTextPdfPdfObject:xmp])) getIndirectReference]];
      }
      
#line 1178
      if ([self isPdfX]) {
        [((ComAowagieTextPdfInternalPdfXConformanceImp *) nil_chk(self->pdfxConformance_)) completeInfoDictionaryWithComAowagieTextPdfPdfDictionary:[self getInfo]];
        [self->pdfxConformance_ completeExtraCatalogWithComAowagieTextPdfPdfDictionary:[self getExtraCatalog]];
      }
      
#line 1183
      if (self->extraCatalog_ != nil) {
        [((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) mergeDifferentWithComAowagieTextPdfPdfDictionary:self->extraCatalog_];
      }
      
#line 1187
      [self writeOutlinesWithComAowagieTextPdfPdfDictionary:catalog withBoolean:false];
      
#line 1190
      ComAowagieTextPdfPdfIndirectObject *indirectCatalog = [self addToBodyWithComAowagieTextPdfPdfObject:catalog withBoolean:false];
      
#line 1192
      ComAowagieTextPdfPdfIndirectObject *infoObj = [self addToBodyWithComAowagieTextPdfPdfObject:[self getInfo] withBoolean:false];
      
#line 1195
      ComAowagieTextPdfPdfIndirectReference *encryption = nil;
      ComAowagieTextPdfPdfObject *fileID = nil;
      ComAowagieTextPdfPdfWriter_PdfBody_flushObjStm(nil_chk(self->body_));
      if (self->crypto_ != nil) {
        ComAowagieTextPdfPdfIndirectObject *encryptionObject = [self addToBodyWithComAowagieTextPdfPdfObject:[self->crypto_ getEncryptionDictionary] withBoolean:false];
        encryption = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk(encryptionObject)) getIndirectReference];
        fileID = [((ComAowagieTextPdfPdfEncryption *) nil_chk(self->crypto_)) getFileID];
      }
      else {
        
#line 1203
        fileID = ComAowagieTextPdfPdfEncryption_createInfoIdWithByteArray_(ComAowagieTextPdfPdfEncryption_createDocumentId());
      }
      
#line 1207
      [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) writeCrossReferenceTableWithJavaIoOutputStream:self->os_ withComAowagieTextPdfPdfIndirectReference:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk(indirectCatalog)) getIndirectReference] withComAowagieTextPdfPdfIndirectReference:
#line 1208
      [((ComAowagieTextPdfPdfIndirectObject *) nil_chk(infoObj)) getIndirectReference] withComAowagieTextPdfPdfIndirectReference:encryption withComAowagieTextPdfPdfObject:fileID withInt:self->prevxref_];
      
#line 1212
      if (self->fullCompression_) {
        [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"startxref\n")];
        [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(NSString_java_valueOfInt_([((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) offset]))];
        [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"\n%%EOF\n")];
      }
      else {
        ComAowagieTextPdfPdfWriter_PdfTrailer *trailer = new_ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_([((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) size],
#line 1219
        [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) offset],
#line 1220
        [indirectCatalog getIndirectReference],
#line 1221
        [infoObj getIndirectReference],
#line 1222
        encryption,
#line 1223
        fileID, self->prevxref_);
        [trailer toPdfWithComAowagieTextPdfPdfWriter:self withJavaIoOutputStream:self->os_];
      }
      [super close];
    }
    @catch (JavaIoIOException *ioe) {
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ioe);
    }
  }
}


#line 1234
- (void)addSharedObjectsToBody {
  
#line 1236
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilLinkedHashMap *) nil_chk(self->documentFonts_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfFontDetails *details = (ComAowagieTextPdfFontDetails *) cast_chk([it next], [ComAowagieTextPdfFontDetails class]);
    [((ComAowagieTextPdfFontDetails *) nil_chk(details)) writeFontWithComAowagieTextPdfPdfWriter:self];
  }
  
#line 1241
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilHashMap *) nil_chk(self->formXObjects_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    IOSObjectArray *objs = (IOSObjectArray *) cast_check([it next], IOSClass_arrayType(NSObject_class_(), 1));
    ComAowagieTextPdfPdfTemplate *template_ = (ComAowagieTextPdfPdfTemplate *) cast_chk(IOSObjectArray_Get(nil_chk(objs), 1), [ComAowagieTextPdfPdfTemplate class]);
    if (template_ != nil && [[template_ getIndirectReference] isKindOfClass:[ComAowagieTextPdfPRIndirectReference class]]) {
      continue;
    }
    if (template_ != nil && [template_ getType] == ComAowagieTextPdfPdfTemplate_TYPE_TEMPLATE) {
      (void) [self addToBodyWithComAowagieTextPdfPdfObject:[template_ getFormXObjectWithInt:self->compressionLevel_] withComAowagieTextPdfPdfIndirectReference:[template_ getIndirectReference]];
    }
  }
  
#line 1252
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilHashMap *) nil_chk(self->importedPages_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    self->currentPdfReaderInstance_ = (ComAowagieTextPdfPdfReaderInstance *) cast_chk([it next], [ComAowagieTextPdfPdfReaderInstance class]);
    [((ComAowagieTextPdfPdfReaderInstance *) nil_chk(self->currentPdfReaderInstance_)) writeAllPages];
  }
  self->currentPdfReaderInstance_ = nil;
  
#line 1258
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilHashMap *) nil_chk(self->documentColors_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfColorDetails *color = (ComAowagieTextPdfColorDetails *) cast_chk([it next], [ComAowagieTextPdfColorDetails class]);
    (void) [self addToBodyWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfColorDetails *) nil_chk(color)) getSpotColorWithComAowagieTextPdfPdfWriter:self] withComAowagieTextPdfPdfIndirectReference:[color getIndirectReference]];
  }
  
#line 1263
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(self->documentPatterns_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfPatternPainter *pat = (ComAowagieTextPdfPdfPatternPainter *) cast_chk([it next], [ComAowagieTextPdfPdfPatternPainter class]);
    (void) [self addToBodyWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfPatternPainter *) nil_chk(pat)) getPatternWithInt:self->compressionLevel_] withComAowagieTextPdfPdfIndirectReference:[pat getIndirectReference]];
  }
  
#line 1268
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(self->documentShadingPatterns_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfShadingPattern *shadingPattern = (ComAowagieTextPdfPdfShadingPattern *) cast_chk([it next], [ComAowagieTextPdfPdfShadingPattern class]);
    [((ComAowagieTextPdfPdfShadingPattern *) nil_chk(shadingPattern)) addToBody];
  }
  
#line 1273
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(self->documentShadings_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfShading *shading = (ComAowagieTextPdfPdfShading *) cast_chk([it next], [ComAowagieTextPdfPdfShading class]);
    [((ComAowagieTextPdfPdfShading *) nil_chk(shading)) addToBody];
  }
  
#line 1278
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(self->documentExtGState_)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([it next], JavaUtilMap_Entry_class_());
    ComAowagieTextPdfPdfDictionary *gstate = (ComAowagieTextPdfPdfDictionary *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [ComAowagieTextPdfPdfDictionary class]);
    IOSObjectArray *obj = (IOSObjectArray *) cast_check([entry_ getValue], IOSClass_arrayType(ComAowagieTextPdfPdfObject_class_(), 1));
    (void) [self addToBodyWithComAowagieTextPdfPdfObject:gstate withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *) cast_chk(IOSObjectArray_Get(nil_chk(obj), 1), [ComAowagieTextPdfPdfIndirectReference class])];
  }
  
#line 1285
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(self->documentProperties_)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([it next], JavaUtilMap_Entry_class_());
    id prop = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    IOSObjectArray *obj = (IOSObjectArray *) cast_check([entry_ getValue], IOSClass_arrayType(ComAowagieTextPdfPdfObject_class_(), 1));
    if ([prop isKindOfClass:[ComAowagieTextPdfPdfLayerMembership class]]) {
      ComAowagieTextPdfPdfLayerMembership *layer = (ComAowagieTextPdfPdfLayerMembership *) prop;
      (void) [self addToBodyWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfLayerMembership *) nil_chk(layer)) getPdfObject] withComAowagieTextPdfPdfIndirectReference:[layer getRef]];
    }
    else if ([prop isKindOfClass:[ComAowagieTextPdfPdfDictionary class]] && !([prop isKindOfClass:[ComAowagieTextPdfPdfLayer class]])) {
      (void) [self addToBodyWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfDictionary *) prop withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *) cast_chk(IOSObjectArray_Get(nil_chk(obj), 1), [ComAowagieTextPdfPdfIndirectReference class])];
    }
  }
  
#line 1298
  for (id<JavaUtilIterator> it = [((JavaUtilHashSet *) nil_chk(self->documentOCG_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<ComAowagieTextPdfPdfOCG> layer = (id<ComAowagieTextPdfPdfOCG>) cast_check([it next], ComAowagieTextPdfPdfOCG_class_());
    (void) [self addToBodyWithComAowagieTextPdfPdfObject:[((id<ComAowagieTextPdfPdfOCG>) nil_chk(layer)) getPdfObject] withComAowagieTextPdfPdfIndirectReference:[layer getRef]];
  }
}

- (ComAowagieTextPdfPdfOutline *)getRootOutline {
  return [((ComAowagieTextPdfPdfContentByte *) nil_chk(self->directContent_)) getRootOutline];
}


#line 1325
- (void)setOutlinesWithJavaUtilList:(id<JavaUtilList>)outlines {
  self->newBookmarks_ = outlines;
}

- (void)writeOutlinesWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)catalog
                                            withBoolean:(jboolean)namedAsNames {
  
#line 1330
  if (self->newBookmarks_ == nil || [self->newBookmarks_ isEmpty]) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *top = new_ComAowagieTextPdfPdfDictionary_init();
  ComAowagieTextPdfPdfIndirectReference *topRef = [self getPdfIndirectReference];
  IOSObjectArray *kids = ComAowagieTextPdfSimpleBookmark_iterateOutlinesWithComAowagieTextPdfPdfWriter_withComAowagieTextPdfPdfIndirectReference_withJavaUtilList_withBoolean_(self, topRef, self->newBookmarks_, namedAsNames);
  [top putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIRST) withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfIndirectReference *) cast_chk(IOSObjectArray_Get(nil_chk(kids), 0), [ComAowagieTextPdfPdfIndirectReference class])];
  [top putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LAST) withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfIndirectReference *) cast_chk(IOSObjectArray_Get(kids, 1), [ComAowagieTextPdfPdfIndirectReference class])];
  [top putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COUNT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(kids, 2), [JavaLangInteger class])))) intValue])];
  (void) [self addToBodyWithComAowagieTextPdfPdfObject:top withComAowagieTextPdfPdfIndirectReference:topRef];
  [((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OUTLINES) withComAowagieTextPdfPdfObject:topRef];
}


#line 1374
- (void)setPdfVersionWithChar:(jchar)version_ {
  
#line 1376
  [((ComAowagieTextPdfInternalPdfVersionImp *) nil_chk(self->pdf_version_)) setPdfVersionWithChar:version_];
}

- (void)setAtLeastPdfVersionWithChar:(jchar)version_ {
  
#line 1382
  [((ComAowagieTextPdfInternalPdfVersionImp *) nil_chk(self->pdf_version_)) setAtLeastPdfVersionWithChar:version_];
}

- (void)setPdfVersionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)version_ {
  
#line 1388
  [((ComAowagieTextPdfInternalPdfVersionImp *) nil_chk(self->pdf_version_)) setPdfVersionWithComAowagieTextPdfPdfName:version_];
}


#line 1395
- (void)addDeveloperExtensionWithComAowagieTextPdfPdfDeveloperExtension:(ComAowagieTextPdfPdfDeveloperExtension *)de {
  
#line 1397
  [((ComAowagieTextPdfInternalPdfVersionImp *) nil_chk(self->pdf_version_)) addDeveloperExtensionWithComAowagieTextPdfPdfDeveloperExtension:de];
}


#line 1404
- (ComAowagieTextPdfInternalPdfVersionImp *)getPdfVersion {
  return self->pdf_version_;
}


#line 1473
- (void)setViewerPreferencesWithInt:(jint)preferences {
  
#line 1475
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setViewerPreferencesWithInt:preferences];
}

- (void)addViewerPreferenceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                         withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)value {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addViewerPreferenceWithComAowagieTextPdfPdfName:key withComAowagieTextPdfPdfObject:value];
}


#line 1490
- (void)setPageLabelsWithComAowagieTextPdfPdfPageLabels:(ComAowagieTextPdfPdfPageLabels *)pageLabels {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setPageLabelsWithComAowagieTextPdfPdfPageLabels:pageLabels];
}


#line 1501
- (void)addJavaScriptWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)js {
  ComAowagieTextPdfPdfWriter_addJavaScriptWithComAowagieTextPdfPdfAction_(self, js);
}


#line 1513
- (void)addJavaScriptWithNSString:(NSString *)code
                      withBoolean:(jboolean)unicode {
  
#line 1514
  ComAowagieTextPdfPdfWriter_addJavaScriptWithComAowagieTextPdfPdfAction_(self, ComAowagieTextPdfPdfAction_javaScriptWithNSString_withComAowagieTextPdfPdfWriter_withBoolean_(code, self, unicode));
}


#line 1524
- (void)addJavaScriptWithNSString:(NSString *)name
   withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)js {
  ComAowagieTextPdfPdfWriter_addJavaScriptWithNSString_withComAowagieTextPdfPdfAction_(self, name, js);
}


#line 1537
- (void)addJavaScriptWithNSString:(NSString *)name
                     withNSString:(NSString *)code
                      withBoolean:(jboolean)unicode {
  ComAowagieTextPdfPdfWriter_addJavaScriptWithNSString_withNSString_withBoolean_(self, name, code, unicode);
}


#line 1553
- (void)addFileAttachmentWithNSString:(NSString *)description_
                        withByteArray:(IOSByteArray *)fileStore
                         withNSString:(NSString *)file
                         withNSString:(NSString *)fileDisplay {
  
#line 1554
  [self addFileAttachmentWithNSString:description_ withComAowagieTextPdfPdfFileSpecification:ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_(self, file, fileDisplay, fileStore)];
}


#line 1563
- (void)addFileAttachmentWithNSString:(NSString *)description_
withComAowagieTextPdfPdfFileSpecification:(ComAowagieTextPdfPdfFileSpecification *)fs {
  
#line 1564
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addFileAttachmentWithNSString:description_ withComAowagieTextPdfPdfFileSpecification:fs];
}


#line 1583
- (void)setOpenActionWithNSString:(NSString *)name {
  
#line 1585
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setOpenActionWithNSString:name];
}

- (void)setOpenActionWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action {
  
#line 1591
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setOpenActionWithComAowagieTextPdfPdfAction:action];
}


#line 1594
- (void)setAdditionalActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                         withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action {
  
#line 1595
  if (!([((ComAowagieTextPdfPdfName *) nil_chk(actionType)) isEqual:ComAowagieTextPdfPdfWriter_DOCUMENT_CLOSE] ||
#line 1596
  [actionType isEqual:ComAowagieTextPdfPdfWriter_WILL_SAVE] ||
#line 1597
  [actionType isEqual:ComAowagieTextPdfPdfWriter_DID_SAVE] ||
#line 1598
  [actionType isEqual:ComAowagieTextPdfPdfWriter_WILL_PRINT] ||
#line 1599
  [actionType isEqual:ComAowagieTextPdfPdfWriter_DID_PRINT])) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(JreStrcat("$$", @"Invalid additional action type: ", [actionType description]));
  }
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addAdditionalActionWithComAowagieTextPdfPdfName:actionType withComAowagieTextPdfPdfAction:action];
}


#line 1611
- (void)setCollectionWithComAowagieTextPdfCollectionPdfCollection:(ComAowagieTextPdfCollectionPdfCollection *)collection {
  [self setAtLeastPdfVersionWithChar:ComAowagieTextPdfPdfWriter_VERSION_1_7];
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setCollectionWithComAowagieTextPdfCollectionPdfCollection:collection];
}


#line 1622
- (ComAowagieTextPdfPdfAcroForm *)getAcroForm {
  
#line 1624
  return [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getAcroForm];
}

- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot {
  
#line 1630
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addAnnotationWithComAowagieTextPdfPdfAnnotation:annot];
}


#line 1633
- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot
                                                withInt:(jint)page {
  
#line 1634
  [self addAnnotationWithComAowagieTextPdfPdfAnnotation:annot];
}

- (void)setSigFlagsWithInt:(jint)f {
  
#line 1642
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setSigFlagsWithInt:f];
}


#line 1654
- (void)setXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata {
  self->xmpMetadata_ = xmpMetadata;
}


#line 1662
- (void)setPageXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setXmpMetadataWithByteArray:xmpMetadata];
}

- (void)createXmpMetadata {
  [self setXmpMetadataWithByteArray:ComAowagieTextPdfPdfWriter_createXmpMetadataBytes(self)];
}


#line 1673
- (IOSByteArray *)createXmpMetadataBytes {
  return ComAowagieTextPdfPdfWriter_createXmpMetadataBytes(self);
}


#line 1705
- (void)setPDFXConformanceWithInt:(jint)pdfx {
  
#line 1707
  if ([((ComAowagieTextPdfInternalPdfXConformanceImp *) nil_chk(self->pdfxConformance_)) getPDFXConformance] == pdfx) {
    return;
  }
  if ([((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) isOpen]) {
    @throw new_ComAowagieTextPdfPdfXConformanceException_initWithNSString_(@"PDFX conformance can only be set before opening the document.");
  }
  if (self->crypto_ != nil) {
    @throw new_ComAowagieTextPdfPdfXConformanceException_initWithNSString_(@"A PDFX conforming document cannot be encrypted.");
  }
  if (pdfx == ComAowagieTextPdfPdfWriter_PDFA1A || pdfx == ComAowagieTextPdfPdfWriter_PDFA1B || pdfx == ComAowagieTextPdfPdfWriter_PDFA2A || pdfx == ComAowagieTextPdfPdfWriter_PDFA2B) {
    [self setPdfVersionWithChar:ComAowagieTextPdfPdfWriter_VERSION_1_4];
  }
  else if (pdfx != ComAowagieTextPdfPdfWriter_PDFXNONE) {
    [self setPdfVersionWithChar:ComAowagieTextPdfPdfWriter_VERSION_1_3];
  }
  [self->pdfxConformance_ setPDFXConformanceWithInt:pdfx];
}

- (jint)getPDFXConformance {
  
#line 1728
  return [((ComAowagieTextPdfInternalPdfXConformanceImp *) nil_chk(self->pdfxConformance_)) getPDFXConformance];
}

- (jboolean)isPdfX {
  
#line 1734
  return [((ComAowagieTextPdfInternalPdfXConformanceImp *) nil_chk(self->pdfxConformance_)) isPdfX];
}


#line 1750
- (void)setOutputIntentsWithNSString:(NSString *)outputConditionIdentifier
                        withNSString:(NSString *)outputCondition
                        withNSString:(NSString *)registryName
                        withNSString:(NSString *)info
  withHarmonyJavaAwtColorICC_Profile:(HarmonyJavaAwtColorICC_Profile *)colorProfile {
  
#line 1751
  (void) [self getExtraCatalog];
  ComAowagieTextPdfPdfDictionary *out = new_ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(JreLoadStatic(ComAowagieTextPdfPdfName, OUTPUTINTENT));
  if (outputCondition != nil) {
    [out putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OUTPUTCONDITION) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(outputCondition, ComAowagieTextPdfPdfObject_TEXT_UNICODE)];
  }
  if (outputConditionIdentifier != nil) {
    [out putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OUTPUTCONDITIONIDENTIFIER) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(outputConditionIdentifier, ComAowagieTextPdfPdfObject_TEXT_UNICODE)];
  }
  if (registryName != nil) {
    [out putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, REGISTRYNAME) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(registryName, ComAowagieTextPdfPdfObject_TEXT_UNICODE)];
  }
  if (info != nil) {
    [out putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, INFO) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(info, ComAowagieTextPdfPdfObject_TEXT_UNICODE)];
  }
  if (colorProfile != nil) {
    ComAowagieTextPdfPdfStream *stream = new_ComAowagieTextPdfPdfICCBased_initPackagePrivateWithHarmonyJavaAwtColorICC_Profile_withInt_(colorProfile, self->compressionLevel_);
    [out putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DESTOUTPUTPROFILE) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:stream])) getIndirectReference]];
  }
  
#line 1770
  ComAowagieTextPdfPdfName *intentSubtype;
  if ([((ComAowagieTextPdfInternalPdfXConformanceImp *) nil_chk(self->pdfxConformance_)) isPdfA1] || [@"PDFA/1" isEqual:outputCondition]) {
    intentSubtype = JreLoadStatic(ComAowagieTextPdfPdfName, GTS_PDFA1);
  }
  else {
    intentSubtype = JreLoadStatic(ComAowagieTextPdfPdfName, GTS_PDFX);
  }
  
#line 1778
  [out putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, S) withComAowagieTextPdfPdfObject:intentSubtype];
  
#line 1780
  [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->extraCatalog_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OUTPUTINTENTS) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfObject_(out)];
}


#line 1798
- (void)setOutputIntentsWithNSString:(NSString *)outputConditionIdentifier
                        withNSString:(NSString *)outputCondition
                        withNSString:(NSString *)registryName
                        withNSString:(NSString *)info
                       withByteArray:(IOSByteArray *)destOutputProfile {
  ComAowagieTextPdfPdfWriter_setOutputIntentsWithNSString_withNSString_withNSString_withNSString_withByteArray_(self, outputConditionIdentifier, outputCondition, registryName, info, destOutputProfile);
}

+ (NSString *)getNameStringWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic
                                 withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key {
  return ComAowagieTextPdfPdfWriter_getNameStringWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfName_(dic, key);
}


#line 1892
- (ComAowagieTextPdfPdfEncryption *)getEncryption {
  return self->crypto_;
}


#line 1897
- (void)setEncryptionWithByteArray:(IOSByteArray *)userPassword
                     withByteArray:(IOSByteArray *)ownerPassword
                           withInt:(jint)permissions
                           withInt:(jint)encryptionType {
  
#line 1899
  if ([((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) isOpen]) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(@"Encryption can only be added before opening the document.");
  }
  self->crypto_ = new_ComAowagieTextPdfPdfEncryption_initPackagePrivate();
  [self->crypto_ setCryptoModeWithInt:encryptionType withInt:0];
  [((ComAowagieTextPdfPdfEncryption *) nil_chk(self->crypto_)) setupAllKeysWithByteArray:userPassword withByteArray:ownerPassword withInt:permissions];
}


#line 1908
- (void)setEncryptionWithJavaSecurityCertCertificateArray:(IOSObjectArray *)certs
                                             withIntArray:(IOSIntArray *)permissions
                                                  withInt:(jint)encryptionType {
  
#line 1910
  if ([((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) isOpen]) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(@"Encryption can only be added before opening the document.");
  }
  self->crypto_ = new_ComAowagieTextPdfPdfEncryption_initPackagePrivate();
  if (certs != nil) {
    for (jint i = 0; i < certs->size_; i++) {
      [((ComAowagieTextPdfPdfEncryption *) nil_chk(self->crypto_)) addRecipientWithJavaSecurityCertCertificate:IOSObjectArray_Get(certs, i) withInt:IOSIntArray_Get(nil_chk(permissions), i)];
    }
  }
  [((ComAowagieTextPdfPdfEncryption *) nil_chk(self->crypto_)) setCryptoModeWithInt:encryptionType withInt:0];
  (void) [((ComAowagieTextPdfPdfEncryption *) nil_chk(self->crypto_)) getEncryptionDictionary];
}


#line 1938
- (jboolean)isFullCompression {
  return self->fullCompression_;
}


#line 1949
- (void)setFullCompression {
  self->fullCompression_ = true;
  [self setAtLeastPdfVersionWithChar:ComAowagieTextPdfPdfWriter_VERSION_1_5];
}


#line 1965
- (jint)getCompressionLevel {
  return self->compressionLevel_;
}


#line 1974
- (void)setCompressionLevelWithInt:(jint)compressionLevel {
  if (compressionLevel < ComAowagieTextPdfPdfStream_NO_COMPRESSION || compressionLevel > ComAowagieTextPdfPdfStream_BEST_COMPRESSION) {
    self->compressionLevel_ = ComAowagieTextPdfPdfStream_DEFAULT_COMPRESSION;
  }
  else {
    
#line 1978
    self->compressionLevel_ = compressionLevel;
  }
}


#line 1998
- (ComAowagieTextPdfFontDetails *)addSimpleWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)bf {
  if ([((ComAowagieTextPdfBaseFont *) nil_chk(bf)) getFontType] == ComAowagieTextPdfBaseFont_FONT_TYPE_DOCUMENT) {
    return new_ComAowagieTextPdfFontDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfBaseFont_(new_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("CI", 'F', self->fontNumber_++)), [((ComAowagieTextPdfDocumentFont *) cast_chk(bf, [ComAowagieTextPdfDocumentFont class])) getIndirectReference], bf);
  }
  ComAowagieTextPdfFontDetails *ret = (ComAowagieTextPdfFontDetails *) cast_chk([((JavaUtilLinkedHashMap *) nil_chk(self->documentFonts_)) getWithId:bf], [ComAowagieTextPdfFontDetails class]);
  if (ret == nil) {
    ComAowagieTextPdfInternalPdfXConformanceImp_checkPDFXConformanceWithComAowagieTextPdfPdfWriter_withInt_withId_(self, ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_FONT, bf);
    ret = new_ComAowagieTextPdfFontDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfBaseFont_(new_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("CI", 'F', self->fontNumber_++)), [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference], bf);
    (void) [self->documentFonts_ putWithId:bf withId:ret];
  }
  return ret;
}

- (void)eliminateFontSubsetWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)fonts {
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilLinkedHashMap *) nil_chk(self->documentFonts_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfFontDetails *ft = (ComAowagieTextPdfFontDetails *) cast_chk([it next], [ComAowagieTextPdfFontDetails class]);
    if ([((ComAowagieTextPdfPdfDictionary *) nil_chk(fonts)) getWithComAowagieTextPdfPdfName:[((ComAowagieTextPdfFontDetails *) nil_chk(ft)) getFontName]] != nil) {
      [ft setSubsetWithBoolean:false];
    }
  }
}


#line 2036
- (ComAowagieTextPdfPdfName *)addDirectTemplateSimpleWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)template_
                                                         withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)forcedName {
  
#line 2037
  ComAowagieTextPdfPdfIndirectReference *ref = [((ComAowagieTextPdfPdfTemplate *) nil_chk(template_)) getIndirectReference];
  IOSObjectArray *obj = (IOSObjectArray *) cast_check([((JavaUtilHashMap *) nil_chk(self->formXObjects_)) getWithId:ref], IOSClass_arrayType(NSObject_class_(), 1));
  ComAowagieTextPdfPdfName *name = nil;
  @try {
    if (obj == nil) {
      if (forcedName == nil) {
        name = new_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("$I", @"Xf", self->formXObjectsCounter_));
        ++self->formXObjectsCounter_;
      }
      else {
        
#line 2046
        name = forcedName;
      }
      if ([template_ getType] == ComAowagieTextPdfPdfTemplate_TYPE_IMPORTED) {
        
#line 2050
        ComAowagieTextPdfPdfImportedPage *ip = (ComAowagieTextPdfPdfImportedPage *) cast_chk(template_, [ComAowagieTextPdfPdfImportedPage class]);
        ComAowagieTextPdfPdfReader *r = [((ComAowagieTextPdfPdfReaderInstance *) nil_chk([ip getPdfReaderInstance])) getReader];
        if (![((JavaUtilHashMap *) nil_chk(self->importedPages_)) containsKeyWithId:r]) {
          (void) [self->importedPages_ putWithId:r withId:[ip getPdfReaderInstance]];
        }
        template_ = nil;
      }
      (void) [self->formXObjects_ putWithId:ref withId:[IOSObjectArray newArrayWithObjects:(id[]){ name, template_ } count:2 type:NSObject_class_()]];
    }
    else {
      
#line 2059
      name = (ComAowagieTextPdfPdfName *) cast_chk(IOSObjectArray_Get(obj, 0), [ComAowagieTextPdfPdfName class]);
    }
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
  return name;
}


#line 2076
- (void)releaseTemplateWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)tp {
  ComAowagieTextPdfPdfIndirectReference *ref = [((ComAowagieTextPdfPdfTemplate *) nil_chk(tp)) getIndirectReference];
  IOSObjectArray *objs = (IOSObjectArray *) cast_check([((JavaUtilHashMap *) nil_chk(self->formXObjects_)) getWithId:ref], IOSClass_arrayType(NSObject_class_(), 1));
  if (objs == nil || IOSObjectArray_Get(objs, 1) == nil) {
    return;
  }
  ComAowagieTextPdfPdfTemplate *template_ = (ComAowagieTextPdfPdfTemplate *) cast_chk(IOSObjectArray_Get(objs, 1), [ComAowagieTextPdfPdfTemplate class]);
  if ([[((ComAowagieTextPdfPdfTemplate *) nil_chk(template_)) getIndirectReference] isKindOfClass:[ComAowagieTextPdfPRIndirectReference class]]) {
    return;
  }
  if ([template_ getType] == ComAowagieTextPdfPdfTemplate_TYPE_TEMPLATE) {
    (void) [self addToBodyWithComAowagieTextPdfPdfObject:[template_ getFormXObjectWithInt:self->compressionLevel_] withComAowagieTextPdfPdfIndirectReference:[template_ getIndirectReference]];
    (void) IOSObjectArray_Set(objs, 1, nil);
  }
}


#line 2105
- (ComAowagieTextPdfPdfImportedPage *)getImportedPageWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                                                            withInt:(jint)pageNumber {
  
#line 2106
  ComAowagieTextPdfPdfReaderInstance *inst = (ComAowagieTextPdfPdfReaderInstance *) cast_chk([((JavaUtilHashMap *) nil_chk(self->importedPages_)) getWithId:reader], [ComAowagieTextPdfPdfReaderInstance class]);
  if (inst == nil) {
    inst = [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getPdfReaderInstanceWithComAowagieTextPdfPdfWriter:self];
    (void) [self->importedPages_ putWithId:reader withId:inst];
  }
  return [((ComAowagieTextPdfPdfReaderInstance *) nil_chk(inst)) getImportedPageWithInt:pageNumber];
}


#line 2123
- (void)freeReaderWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  self->currentPdfReaderInstance_ = (ComAowagieTextPdfPdfReaderInstance *) cast_chk([((JavaUtilHashMap *) nil_chk(self->importedPages_)) getWithId:reader], [ComAowagieTextPdfPdfReaderInstance class]);
  if (self->currentPdfReaderInstance_ == nil) {
    return;
  }
  [self->currentPdfReaderInstance_ writeAllPages];
  self->currentPdfReaderInstance_ = nil;
  (void) [self->importedPages_ removeWithId:reader];
}


#line 2142
- (jint)getCurrentDocumentSize {
  return [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) offset] + [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) size] * 20 + (jint) 0x48;
}


#line 2148
- (jint)getNewObjectNumberWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                                 withInt:(jint)number
                                                 withInt:(jint)generation {
  
#line 2149
  return [((ComAowagieTextPdfPdfReaderInstance *) nil_chk(self->currentPdfReaderInstance_)) getNewObjectNumberWithInt:number withInt:generation];
}


#line 2152
- (ComAowagieTextPdfRandomAccessFileOrArray *)getReaderFileWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  return [((ComAowagieTextPdfPdfReaderInstance *) nil_chk(self->currentPdfReaderInstance_)) getReaderFile];
}


#line 2164
- (ComAowagieTextPdfPdfName *)getColorspaceName {
  return new_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("$I", @"CS", self->colorNumber_++));
}


#line 2174
- (ComAowagieTextPdfColorDetails *)addSimpleWithComAowagieTextPdfPdfSpotColor:(ComAowagieTextPdfPdfSpotColor *)spc {
  ComAowagieTextPdfColorDetails *ret = (ComAowagieTextPdfColorDetails *) cast_chk([((JavaUtilHashMap *) nil_chk(self->documentColors_)) getWithId:spc], [ComAowagieTextPdfColorDetails class]);
  if (ret == nil) {
    ret = new_ComAowagieTextPdfColorDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfSpotColor_([self getColorspaceName], [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference], spc);
    (void) [self->documentColors_ putWithId:spc withId:ret];
  }
  return ret;
}


#line 2191
- (ComAowagieTextPdfPdfName *)addSimplePatternWithComAowagieTextPdfPdfPatternPainter:(ComAowagieTextPdfPdfPatternPainter *)painter {
  ComAowagieTextPdfPdfName *name = (ComAowagieTextPdfPdfName *) cast_chk([((JavaUtilHashMap *) nil_chk(self->documentPatterns_)) getWithId:painter], [ComAowagieTextPdfPdfName class]);
  @try {
    if (name == nil) {
      name = new_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("CI", 'P', self->patternNumber_));
      ++self->patternNumber_;
      (void) [self->documentPatterns_ putWithId:painter withId:name];
    }
  }
  @catch (
#line 2199
  JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
  return name;
}


#line 2209
- (void)addSimpleShadingPatternWithComAowagieTextPdfPdfShadingPattern:(ComAowagieTextPdfPdfShadingPattern *)shading {
  if (![((JavaUtilHashMap *) nil_chk(self->documentShadingPatterns_)) containsKeyWithId:shading]) {
    [((ComAowagieTextPdfPdfShadingPattern *) nil_chk(shading)) setNameWithInt:self->patternNumber_];
    ++self->patternNumber_;
    (void) [self->documentShadingPatterns_ putWithId:shading withId:nil];
    [self addSimpleShadingWithComAowagieTextPdfPdfShading:[shading getShading]];
  }
}


#line 2222
- (void)addSimpleShadingWithComAowagieTextPdfPdfShading:(ComAowagieTextPdfPdfShading *)shading {
  if (![((JavaUtilHashMap *) nil_chk(self->documentShadings_)) containsKeyWithId:shading]) {
    (void) [self->documentShadings_ putWithId:shading withId:nil];
    [((ComAowagieTextPdfPdfShading *) nil_chk(shading)) setNameWithInt:[self->documentShadings_ size]];
  }
}


#line 2233
- (IOSObjectArray *)addSimpleExtGStateWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)gstate {
  if (![((JavaUtilHashMap *) nil_chk(self->documentExtGState_)) containsKeyWithId:gstate]) {
    ComAowagieTextPdfInternalPdfXConformanceImp_checkPDFXConformanceWithComAowagieTextPdfPdfWriter_withInt_withId_(self, ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_GSTATE, gstate);
    (void) [self->documentExtGState_ putWithId:gstate withId:[IOSObjectArray newArrayWithObjects:(id[]){ create_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("$I", @"GS", ([self->documentExtGState_ size] + 1))), [self getPdfIndirectReference] } count:2 type:ComAowagieTextPdfPdfObject_class_()]];
  }
  return (IOSObjectArray *) cast_check([self->documentExtGState_ getWithId:gstate], IOSClass_arrayType(ComAowagieTextPdfPdfObject_class_(), 1));
}


#line 2244
- (IOSObjectArray *)addSimplePropertyWithId:(id)prop
  withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)refi {
  
#line 2245
  if (![((JavaUtilHashMap *) nil_chk(self->documentProperties_)) containsKeyWithId:prop]) {
    if ([ComAowagieTextPdfPdfOCG_class_() isInstance:prop]) {
      ComAowagieTextPdfInternalPdfXConformanceImp_checkPDFXConformanceWithComAowagieTextPdfPdfWriter_withInt_withId_(self, ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_LAYER, nil);
    }
    (void) [self->documentProperties_ putWithId:prop withId:[IOSObjectArray newArrayWithObjects:(id[]){ create_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("$I", @"Pr", ([self->documentProperties_ size] + 1))), refi } count:2 type:ComAowagieTextPdfPdfObject_class_()]];
  }
  return (IOSObjectArray *) cast_check([self->documentProperties_ getWithId:prop], IOSClass_arrayType(ComAowagieTextPdfPdfObject_class_(), 1));
}


#line 2254
- (jboolean)propertyExistsWithId:(id)prop {
  return [((JavaUtilHashMap *) nil_chk(self->documentProperties_)) containsKeyWithId:prop];
}


#line 2269
- (jboolean)isTagged {
  return ComAowagieTextPdfPdfWriter_tagged;
}


#line 2277
- (ComAowagieTextPdfPdfStructureTreeRoot *)getStructureTreeRoot {
  if (ComAowagieTextPdfPdfWriter_tagged && self->structureTreeRoot_ == nil) {
    self->structureTreeRoot_ = new_ComAowagieTextPdfPdfStructureTreeRoot_initPackagePrivateWithComAowagieTextPdfPdfWriter_(self);
  }
  return self->structureTreeRoot_;
}


#line 2306
- (ComAowagieTextPdfPdfOCProperties *)getOCProperties {
  [self fillOCPropertiesWithBoolean:true];
  return self->OCProperties_;
}


#line 2315
+ (void)getOCGOrderWithComAowagieTextPdfPdfArray:(ComAowagieTextPdfPdfArray *)order
                   withComAowagieTextPdfPdfLayer:(ComAowagieTextPdfPdfLayer *)layer {
  ComAowagieTextPdfPdfWriter_getOCGOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfLayer_(order, layer);
}


#line 2338
- (void)addASEventWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)event
                  withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)category {
  ComAowagieTextPdfPdfWriter_addASEventWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_(self, event, category);
}


#line 2367
- (void)fillOCPropertiesWithBoolean:(jboolean)erase {
  if (self->OCProperties_ == nil) {
    self->OCProperties_ = new_ComAowagieTextPdfPdfOCProperties_initPackagePrivate();
  }
  if (erase) {
    [self->OCProperties_ removeWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCGS)];
    [((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) removeWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)];
  }
  if ([((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCGS)] == nil) {
    ComAowagieTextPdfPdfArray *gr = new_ComAowagieTextPdfPdfArray_init();
    for (id<JavaUtilIterator> it = [((JavaUtilHashSet *) nil_chk(self->documentOCG_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      ComAowagieTextPdfPdfLayer *layer = (ComAowagieTextPdfPdfLayer *) cast_chk([it next], [ComAowagieTextPdfPdfLayer class]);
      [gr addWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) getRef]];
    }
    [((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCGS) withComAowagieTextPdfPdfObject:gr];
  }
  if ([((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)] != nil) {
    return;
  }
  JavaUtilArrayList *docOrder = new_JavaUtilArrayList_initWithJavaUtilCollection_(self->documentOCGorder_);
  for (id<JavaUtilIterator> it = [docOrder iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfLayer *layer = (ComAowagieTextPdfPdfLayer *) cast_chk([it next], [ComAowagieTextPdfPdfLayer class]);
    if ([((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) getParent] != nil) {
      [it remove];
    }
  }
  ComAowagieTextPdfPdfArray *order = new_ComAowagieTextPdfPdfArray_init();
  for (id<JavaUtilIterator> it = [docOrder iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfLayer *layer = (ComAowagieTextPdfPdfLayer *) cast_chk([it next], [ComAowagieTextPdfPdfLayer class]);
    ComAowagieTextPdfPdfWriter_getOCGOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfLayer_(order, layer);
  }
  ComAowagieTextPdfPdfDictionary *d = new_ComAowagieTextPdfPdfDictionary_init();
  [((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D) withComAowagieTextPdfPdfObject:d];
  [d putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ORDER) withComAowagieTextPdfPdfObject:order];
  ComAowagieTextPdfPdfArray *gr = new_ComAowagieTextPdfPdfArray_init();
  for (id<JavaUtilIterator> it = [((JavaUtilHashSet *) nil_chk(self->documentOCG_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfLayer *layer = (ComAowagieTextPdfPdfLayer *) cast_chk([it next], [ComAowagieTextPdfPdfLayer class]);
    if (![((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) isOn]) {
      [gr addWithComAowagieTextPdfPdfObject:[layer getRef]];
    }
  }
  if ([gr size] > 0) {
    [d putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OFF) withComAowagieTextPdfPdfObject:gr];
  }
  if ([((ComAowagieTextPdfPdfArray *) nil_chk(self->OCGRadioGroup_)) size] > 0) {
    [d putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RBGROUPS) withComAowagieTextPdfPdfObject:self->OCGRadioGroup_];
  }
  if ([((ComAowagieTextPdfPdfArray *) nil_chk(self->OCGLocked_)) size] > 0) {
    [d putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LOCKED) withComAowagieTextPdfPdfObject:self->OCGLocked_];
  }
  ComAowagieTextPdfPdfWriter_addASEventWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_(self, JreLoadStatic(ComAowagieTextPdfPdfName, VIEW), JreLoadStatic(ComAowagieTextPdfPdfName, ZOOM));
  ComAowagieTextPdfPdfWriter_addASEventWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_(self, JreLoadStatic(ComAowagieTextPdfPdfName, VIEW), JreLoadStatic(ComAowagieTextPdfPdfName, VIEW));
  ComAowagieTextPdfPdfWriter_addASEventWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_(self, JreLoadStatic(ComAowagieTextPdfPdfName, PRINT), JreLoadStatic(ComAowagieTextPdfPdfName, PRINT));
  ComAowagieTextPdfPdfWriter_addASEventWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_(self, JreLoadStatic(ComAowagieTextPdfPdfName, EXPORT), JreLoadStatic(ComAowagieTextPdfPdfName, EXPORT));
  [d putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LISTMODE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, VISIBLEPAGES)];
}

- (void)registerLayerWithComAowagieTextPdfPdfOCG:(id<ComAowagieTextPdfPdfOCG>)layer {
  ComAowagieTextPdfInternalPdfXConformanceImp_checkPDFXConformanceWithComAowagieTextPdfPdfWriter_withInt_withId_(self, ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_LAYER, nil);
  if ([layer isKindOfClass:[ComAowagieTextPdfPdfLayer class]]) {
    ComAowagieTextPdfPdfLayer *la = (ComAowagieTextPdfPdfLayer *) layer;
    if ([((ComAowagieTextPdfPdfLayer *) nil_chk(la)) getTitle] == nil) {
      if (![((JavaUtilHashSet *) nil_chk(self->documentOCG_)) containsWithId:layer]) {
        [((JavaUtilHashSet *) nil_chk(self->documentOCG_)) addWithId:layer];
        [((JavaUtilArrayList *) nil_chk(self->documentOCGorder_)) addWithId:layer];
      }
    }
    else {
      [((JavaUtilArrayList *) nil_chk(self->documentOCGorder_)) addWithId:layer];
    }
  }
  else {
    
#line 2438
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Only PdfLayer is accepted.");
  }
}


#line 2450
- (ComAowagieTextRectangle *)getPageSize {
  return [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getPageSize];
}


#line 2460
- (void)setCropBoxSizeWithComAowagieTextRectangle:(ComAowagieTextRectangle *)crop {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setCropBoxSizeWithComAowagieTextRectangle:crop];
}


#line 2476
- (void)setPageEmptyWithBoolean:(jboolean)pageEmpty {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setPageEmptyWithBoolean:pageEmpty];
}


#line 2487
- (void)setPageActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                   withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action {
  
#line 2488
  if (![((ComAowagieTextPdfPdfName *) nil_chk(actionType)) isEqual:ComAowagieTextPdfPdfWriter_PAGE_OPEN] && ![actionType isEqual:ComAowagieTextPdfPdfWriter_PAGE_CLOSE]) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(JreStrcat("$$", @"Invalid page additional action type: ", [actionType description]));
  }
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setPageActionWithComAowagieTextPdfPdfName:actionType withComAowagieTextPdfPdfAction:action];
}


#line 2495
- (void)setDurationWithInt:(jint)seconds {
  
#line 2497
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setDurationWithInt:seconds];
}

- (void)setTransitionWithComAowagieTextPdfPdfTransition:(ComAowagieTextPdfPdfTransition *)transition {
  
#line 2503
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setTransitionWithComAowagieTextPdfPdfTransition:transition];
}


#line 2514
- (void)setThumbnailWithComAowagieTextImage:(ComAowagieTextImage *)image {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setThumbnailWithComAowagieTextImage:image];
}


#line 2531
- (ComAowagieTextPdfPdfDictionary *)getGroup {
  return self->group_;
}


#line 2539
- (void)setGroupWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)group {
  self->group_ = group;
}


#line 2560
- (jfloat)getSpaceCharRatio {
  return self->spaceCharRatio_;
}


#line 2572
- (void)setSpaceCharRatioWithFloat:(jfloat)spaceCharRatio {
  if (spaceCharRatio < 0.001f) {
    self->spaceCharRatio_ = 0.001f;
  }
  else {
    
#line 2576
    self->spaceCharRatio_ = spaceCharRatio;
  }
}


#line 2602
- (void)setRunDirectionWithInt:(jint)runDirection {
  
#line 2604
  if (runDirection < ComAowagieTextPdfPdfWriter_RUN_DIRECTION_NO_BIDI || runDirection > ComAowagieTextPdfPdfWriter_RUN_DIRECTION_RTL) {
    @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$I", @"Invalid run direction: ", runDirection));
  }
  self->runDirection_ = runDirection;
}


#line 2614
- (jint)getRunDirection {
  
#line 2616
  return self->runDirection_;
}


#line 2630
- (jfloat)getUserunit {
  return self->userunit_;
}


#line 2642
- (void)setUserunitWithFloat:(jfloat)userunit {
  if (userunit < 1.0f || userunit > 75000.0f) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(@"UserUnit should be a value between 1 and 75000.");
  }
  self->userunit_ = userunit;
  [self setAtLeastPdfVersionWithChar:ComAowagieTextPdfPdfWriter_VERSION_1_6];
}


#line 2659
- (ComAowagieTextPdfPdfDictionary *)getDefaultColorspace {
  return self->defaultColorspace_;
}


#line 2674
- (void)setDefaultColorspaceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                          withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)cs {
  ComAowagieTextPdfPdfWriter_setDefaultColorspaceWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfObject_(self, key, cs);
}


#line 2688
- (ComAowagieTextPdfColorDetails *)addSimplePatternColorspaceWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color {
  jint type = ComAowagieTextPdfExtendedColor_getTypeWithHarmonyJavaAwtColor_(color);
  if (type == ComAowagieTextPdfExtendedColor_TYPE_PATTERN || type == ComAowagieTextPdfExtendedColor_TYPE_SHADING) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"An uncolored tile pattern can not have another pattern or shading as color.");
  }
  @try {
    switch (type) {
      case ComAowagieTextPdfExtendedColor_TYPE_RGB:
      if (self->patternColorspaceRGB_ == nil) {
        self->patternColorspaceRGB_ = new_ComAowagieTextPdfColorDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfSpotColor_([self getColorspaceName], [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference], nil);
        ComAowagieTextPdfPdfArray *array = new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfObject_(JreLoadStatic(ComAowagieTextPdfPdfName, PATTERN));
        [array addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, DEVICERGB)];
        (void) [self addToBodyWithComAowagieTextPdfPdfObject:array withComAowagieTextPdfPdfIndirectReference:[((ComAowagieTextPdfColorDetails *) nil_chk(self->patternColorspaceRGB_)) getIndirectReference]];
      }
      return self->patternColorspaceRGB_;
      case ComAowagieTextPdfExtendedColor_TYPE_CMYK:
      if (self->patternColorspaceCMYK_ == nil) {
        self->patternColorspaceCMYK_ = new_ComAowagieTextPdfColorDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfSpotColor_([self getColorspaceName], [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference], nil);
        ComAowagieTextPdfPdfArray *array = new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfObject_(JreLoadStatic(ComAowagieTextPdfPdfName, PATTERN));
        [array addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, DEVICECMYK)];
        (void) [self addToBodyWithComAowagieTextPdfPdfObject:array withComAowagieTextPdfPdfIndirectReference:[((ComAowagieTextPdfColorDetails *) nil_chk(self->patternColorspaceCMYK_)) getIndirectReference]];
      }
      return self->patternColorspaceCMYK_;
      case ComAowagieTextPdfExtendedColor_TYPE_GRAY:
      if (self->patternColorspaceGRAY_ == nil) {
        self->patternColorspaceGRAY_ = new_ComAowagieTextPdfColorDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfSpotColor_([self getColorspaceName], [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference], nil);
        ComAowagieTextPdfPdfArray *array = new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfObject_(JreLoadStatic(ComAowagieTextPdfPdfName, PATTERN));
        [array addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, DEVICEGRAY)];
        (void) [self addToBodyWithComAowagieTextPdfPdfObject:array withComAowagieTextPdfPdfIndirectReference:[((ComAowagieTextPdfColorDetails *) nil_chk(self->patternColorspaceGRAY_)) getIndirectReference]];
      }
      return self->patternColorspaceGRAY_;
      case ComAowagieTextPdfExtendedColor_TYPE_SEPARATION:
      {
        
#line 2720
        ComAowagieTextPdfColorDetails *details = [self addSimpleWithComAowagieTextPdfPdfSpotColor:[((ComAowagieTextPdfSpotColor *) nil_chk(((ComAowagieTextPdfSpotColor *) cast_chk(color, [ComAowagieTextPdfSpotColor class])))) getPdfSpotColor]];
        ComAowagieTextPdfColorDetails *patternDetails = (ComAowagieTextPdfColorDetails *) cast_chk([((JavaUtilHashMap *) nil_chk(self->documentSpotPatterns_)) getWithId:details], [ComAowagieTextPdfColorDetails class]);
        if (patternDetails == nil) {
          patternDetails = new_ComAowagieTextPdfColorDetails_initPackagePrivateWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfSpotColor_([self getColorspaceName], [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) getPdfIndirectReference], nil);
          ComAowagieTextPdfPdfArray *array = new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfObject_(JreLoadStatic(ComAowagieTextPdfPdfName, PATTERN));
          [array addWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfColorDetails *) nil_chk(details)) getIndirectReference]];
          (void) [self addToBodyWithComAowagieTextPdfPdfObject:array withComAowagieTextPdfPdfIndirectReference:[patternDetails getIndirectReference]];
          (void) [self->documentSpotPatterns_ putWithId:details withId:patternDetails];
        }
        return patternDetails;
      }
      default:
      @throw new_JavaLangRuntimeException_initWithNSString_(@"Invalid color type in PdfWriter.addSimplePatternColorspace().");
    }
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_([e getMessage]);
  }
}


#line 2746
- (jboolean)isStrictImageSequence {
  return [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) isStrictImageSequence];
}


#line 2756
- (void)setStrictImageSequenceWithBoolean:(jboolean)strictImageSequence {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) setStrictImageSequenceWithBoolean:strictImageSequence];
}


#line 2778
- (ComAowagieTextPdfPdfName *)addDirectImageSimpleWithComAowagieTextImage:(ComAowagieTextImage *)image {
  return ComAowagieTextPdfPdfWriter_addDirectImageSimpleWithComAowagieTextImage_withComAowagieTextPdfPdfIndirectReference_(self, image, nil);
}


#line 2793
- (ComAowagieTextPdfPdfName *)addDirectImageSimpleWithComAowagieTextImage:(ComAowagieTextImage *)image
                                withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)fixedRef {
  return ComAowagieTextPdfPdfWriter_addDirectImageSimpleWithComAowagieTextImage_withComAowagieTextPdfPdfIndirectReference_(self, image, fixedRef);
}


#line 2866
- (ComAowagieTextPdfPdfIndirectReference *)addWithComAowagieTextPdfPdfImage:(ComAowagieTextPdfPdfImage *)pdfImage
                                  withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)fixedRef {
  return ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfImage_withComAowagieTextPdfPdfIndirectReference_(self, pdfImage, fixedRef);
}


#line 2896
- (ComAowagieTextPdfPdfIndirectReference *)getImageReferenceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)name {
  return (ComAowagieTextPdfPdfIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(self->imageDictionary_)) getWithComAowagieTextPdfPdfName:name], [ComAowagieTextPdfPdfIndirectReference class]);
}

- (ComAowagieTextPdfPdfIndirectReference *)addWithComAowagieTextPdfPdfICCBased:(ComAowagieTextPdfPdfICCBased *)icc {
  return ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfICCBased_(self, icc);
}


#line 2923
- (ComAowagieTextPdfPdfIndirectReference *)getReferenceJBIG2GlobalsWithByteArray:(IOSByteArray *)content {
  if (content == nil) {
    return nil;
  }
  ComAowagieTextPdfPdfStream *stream;
  for (id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(self->JBIG2Globals_)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    stream = (ComAowagieTextPdfPdfStream *) cast_chk([i next], [ComAowagieTextPdfPdfStream class]);
    if (JavaUtilArrays_equalsWithByteArray_withByteArray_(content, [((ComAowagieTextPdfPdfStream *) nil_chk(stream)) getBytes])) {
      return (ComAowagieTextPdfPdfIndirectReference *) cast_chk([self->JBIG2Globals_ getWithId:stream], [ComAowagieTextPdfPdfIndirectReference class]);
    }
  }
  stream = new_ComAowagieTextPdfPdfStream_initWithByteArray_(content);
  ComAowagieTextPdfPdfIndirectObject *ref;
  @try {
    ref = [self addToBodyWithComAowagieTextPdfPdfObject:stream];
  }
  @catch (
#line 2938
  JavaIoIOException *e) {
    return nil;
  }
  (void) [self->JBIG2Globals_ putWithId:stream withId:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk(ref)) getIndirectReference]];
  return [ref getIndirectReference];
}


#line 2955
- (jboolean)fitsPageWithComAowagieTextTable:(ComAowagieTextTable *)table
                                  withFloat:(jfloat)margin {
  return ComAowagieTextPdfPdfWriter_fitsPageWithComAowagieTextTable_withFloat_(self, table, margin);
}


#line 2970
- (jboolean)isUserProperties {
  return self->userProperties_;
}


#line 2978
- (void)setUserPropertiesWithBoolean:(jboolean)userProperties {
  self->userProperties_ = userProperties;
}


#line 2993
- (jboolean)isRgbTransparencyBlending {
  return self->rgbTransparencyBlending_;
}


#line 3007
- (void)setRgbTransparencyBlendingWithBoolean:(jboolean)rgbTransparencyBlending {
  self->rgbTransparencyBlending_ = rgbTransparencyBlending;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComAowagieTextPdfPdfWriter;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDocument;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfContentByte;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfContentByte;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 7, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x0, 9, 10, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x1, 9, 11, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x1, 9, 12, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x0, 9, 13, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x0, 9, 14, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x0, 9, 15, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfOutputStreamCounter;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x4, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfName;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x0, 22, 23, 24, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfPageEvent;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfOutline;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 29, 30, 8, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 32, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 33, 32, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 34, 35, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfInternalPdfVersionImp;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 36, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 41, 42, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 41, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 41, 44, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 41, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 47, 8, -1, -1, -1 },
    { NULL, "V", 0x0, 46, 48, 8, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 50, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 42, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 52, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 53, 54, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfAcroForm;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 55, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 55, 57, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 58, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 60, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 61, 60, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 62, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 63, 64, 8, -1, -1, -1 },
    { NULL, "V", 0x2, 63, 65, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 66, 67, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfEncryption;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 68, 69, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 68, 70, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 71, 19, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfFontDetails;", 0x0, 72, 73, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 74, 75, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfName;", 0x0, 76, 77, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 78, 79, 8, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfImportedPage;", 0x1, 80, 81, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 82, 83, 8, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 84, 85, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfRandomAccessFileOrArray;", 0x0, 86, 83, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfName;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfColorDetails;", 0x0, 72, 87, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfName;", 0x0, 88, 89, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 90, 91, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 92, 93, -1, -1, -1, -1 },
    { NULL, "[LComAowagieTextPdfPdfObject;", 0x0, 94, 75, -1, -1, -1, -1 },
    { NULL, "[LComAowagieTextPdfPdfObject;", 0x0, 95, 96, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 97, 98, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfStructureTreeRoot;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfOCProperties;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 99, 100, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 101, 102, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 103, 104, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 105, 106, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextRectangle;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 107, 108, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 109, 104, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 110, 52, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 111, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 112, 113, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 114, 115, 116, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 117, 75, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 118, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 119, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 120, 5, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 121, 38, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfColorDetails;", 0x0, 122, 123, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 124, 104, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfName;", 0x0, 125, 115, 116, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfName;", 0x2, 125, 126, 116, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x2, 22, 127, 24, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x0, 128, 21, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x2, 22, 129, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x4, 130, 60, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 131, 132, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 133, 104, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 134, 104, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithComAowagieTextDocument:withJavaIoOutputStream:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithComAowagieTextPdfPdfDocument:withJavaIoOutputStream:);
  methods[3].selector = @selector(getPdfDocument);
  methods[4].selector = @selector(getInfo);
  methods[5].selector = @selector(setInitialLeadingWithFloat:);
  methods[6].selector = @selector(getDirectContent);
  methods[7].selector = @selector(getDirectContentUnder);
  methods[8].selector = @selector(resetContent);
  methods[9].selector = @selector(addLocalDestinationsWithJavaUtilTreeMap:);
  methods[10].selector = @selector(addToBodyWithComAowagieTextPdfPdfObject:);
  methods[11].selector = @selector(addToBodyWithComAowagieTextPdfPdfObject:withBoolean:);
  methods[12].selector = @selector(addToBodyWithComAowagieTextPdfPdfObject:withComAowagieTextPdfPdfIndirectReference:);
  methods[13].selector = @selector(addToBodyWithComAowagieTextPdfPdfObject:withComAowagieTextPdfPdfIndirectReference:withBoolean:);
  methods[14].selector = @selector(addToBodyWithComAowagieTextPdfPdfObject:withInt:);
  methods[15].selector = @selector(addToBodyWithComAowagieTextPdfPdfObject:withInt:withBoolean:);
  methods[16].selector = @selector(getPdfIndirectReference);
  methods[17].selector = @selector(getIndirectReferenceNumber);
  methods[18].selector = @selector(getOs);
  methods[19].selector = @selector(getCatalogWithComAowagieTextPdfPdfIndirectReference:);
  methods[20].selector = @selector(getExtraCatalog);
  methods[21].selector = @selector(getPageReferenceWithInt:);
  methods[22].selector = @selector(getPageNumber);
  methods[23].selector = @selector(getCurrentPage);
  methods[24].selector = @selector(getCurrentPageNumber);
  methods[25].selector = @selector(setTabsWithComAowagieTextPdfPdfName:);
  methods[26].selector = @selector(getTabs);
  methods[27].selector = @selector(addWithComAowagieTextPdfPdfPage:withComAowagieTextPdfPdfContents:);
  methods[28].selector = @selector(setPageEventWithComAowagieTextPdfPdfPageEvent:);
  methods[29].selector = @selector(getPageEvent);
  methods[30].selector = @selector(open);
  methods[31].selector = @selector(close);
  methods[32].selector = @selector(addSharedObjectsToBody);
  methods[33].selector = @selector(getRootOutline);
  methods[34].selector = @selector(setOutlinesWithJavaUtilList:);
  methods[35].selector = @selector(writeOutlinesWithComAowagieTextPdfPdfDictionary:withBoolean:);
  methods[36].selector = @selector(setPdfVersionWithChar:);
  methods[37].selector = @selector(setAtLeastPdfVersionWithChar:);
  methods[38].selector = @selector(setPdfVersionWithComAowagieTextPdfPdfName:);
  methods[39].selector = @selector(addDeveloperExtensionWithComAowagieTextPdfPdfDeveloperExtension:);
  methods[40].selector = @selector(getPdfVersion);
  methods[41].selector = @selector(setViewerPreferencesWithInt:);
  methods[42].selector = @selector(addViewerPreferenceWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfObject:);
  methods[43].selector = @selector(setPageLabelsWithComAowagieTextPdfPdfPageLabels:);
  methods[44].selector = @selector(addJavaScriptWithComAowagieTextPdfPdfAction:);
  methods[45].selector = @selector(addJavaScriptWithNSString:withBoolean:);
  methods[46].selector = @selector(addJavaScriptWithNSString:withComAowagieTextPdfPdfAction:);
  methods[47].selector = @selector(addJavaScriptWithNSString:withNSString:withBoolean:);
  methods[48].selector = @selector(addFileAttachmentWithNSString:withByteArray:withNSString:withNSString:);
  methods[49].selector = @selector(addFileAttachmentWithNSString:withComAowagieTextPdfPdfFileSpecification:);
  methods[50].selector = @selector(setOpenActionWithNSString:);
  methods[51].selector = @selector(setOpenActionWithComAowagieTextPdfPdfAction:);
  methods[52].selector = @selector(setAdditionalActionWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfAction:);
  methods[53].selector = @selector(setCollectionWithComAowagieTextPdfCollectionPdfCollection:);
  methods[54].selector = @selector(getAcroForm);
  methods[55].selector = @selector(addAnnotationWithComAowagieTextPdfPdfAnnotation:);
  methods[56].selector = @selector(addAnnotationWithComAowagieTextPdfPdfAnnotation:withInt:);
  methods[57].selector = @selector(setSigFlagsWithInt:);
  methods[58].selector = @selector(setXmpMetadataWithByteArray:);
  methods[59].selector = @selector(setPageXmpMetadataWithByteArray:);
  methods[60].selector = @selector(createXmpMetadata);
  methods[61].selector = @selector(createXmpMetadataBytes);
  methods[62].selector = @selector(setPDFXConformanceWithInt:);
  methods[63].selector = @selector(getPDFXConformance);
  methods[64].selector = @selector(isPdfX);
  methods[65].selector = @selector(setOutputIntentsWithNSString:withNSString:withNSString:withNSString:withHarmonyJavaAwtColorICC_Profile:);
  methods[66].selector = @selector(setOutputIntentsWithNSString:withNSString:withNSString:withNSString:withByteArray:);
  methods[67].selector = @selector(getNameStringWithComAowagieTextPdfPdfDictionary:withComAowagieTextPdfPdfName:);
  methods[68].selector = @selector(getEncryption);
  methods[69].selector = @selector(setEncryptionWithByteArray:withByteArray:withInt:withInt:);
  methods[70].selector = @selector(setEncryptionWithJavaSecurityCertCertificateArray:withIntArray:withInt:);
  methods[71].selector = @selector(isFullCompression);
  methods[72].selector = @selector(setFullCompression);
  methods[73].selector = @selector(getCompressionLevel);
  methods[74].selector = @selector(setCompressionLevelWithInt:);
  methods[75].selector = @selector(addSimpleWithComAowagieTextPdfBaseFont:);
  methods[76].selector = @selector(eliminateFontSubsetWithComAowagieTextPdfPdfDictionary:);
  methods[77].selector = @selector(addDirectTemplateSimpleWithComAowagieTextPdfPdfTemplate:withComAowagieTextPdfPdfName:);
  methods[78].selector = @selector(releaseTemplateWithComAowagieTextPdfPdfTemplate:);
  methods[79].selector = @selector(getImportedPageWithComAowagieTextPdfPdfReader:withInt:);
  methods[80].selector = @selector(freeReaderWithComAowagieTextPdfPdfReader:);
  methods[81].selector = @selector(getCurrentDocumentSize);
  methods[82].selector = @selector(getNewObjectNumberWithComAowagieTextPdfPdfReader:withInt:withInt:);
  methods[83].selector = @selector(getReaderFileWithComAowagieTextPdfPdfReader:);
  methods[84].selector = @selector(getColorspaceName);
  methods[85].selector = @selector(addSimpleWithComAowagieTextPdfPdfSpotColor:);
  methods[86].selector = @selector(addSimplePatternWithComAowagieTextPdfPdfPatternPainter:);
  methods[87].selector = @selector(addSimpleShadingPatternWithComAowagieTextPdfPdfShadingPattern:);
  methods[88].selector = @selector(addSimpleShadingWithComAowagieTextPdfPdfShading:);
  methods[89].selector = @selector(addSimpleExtGStateWithComAowagieTextPdfPdfDictionary:);
  methods[90].selector = @selector(addSimplePropertyWithId:withComAowagieTextPdfPdfIndirectReference:);
  methods[91].selector = @selector(propertyExistsWithId:);
  methods[92].selector = @selector(isTagged);
  methods[93].selector = @selector(getStructureTreeRoot);
  methods[94].selector = @selector(getOCProperties);
  methods[95].selector = @selector(getOCGOrderWithComAowagieTextPdfPdfArray:withComAowagieTextPdfPdfLayer:);
  methods[96].selector = @selector(addASEventWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfName:);
  methods[97].selector = @selector(fillOCPropertiesWithBoolean:);
  methods[98].selector = @selector(registerLayerWithComAowagieTextPdfPdfOCG:);
  methods[99].selector = @selector(getPageSize);
  methods[100].selector = @selector(setCropBoxSizeWithComAowagieTextRectangle:);
  methods[101].selector = @selector(setPageEmptyWithBoolean:);
  methods[102].selector = @selector(setPageActionWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfAction:);
  methods[103].selector = @selector(setDurationWithInt:);
  methods[104].selector = @selector(setTransitionWithComAowagieTextPdfPdfTransition:);
  methods[105].selector = @selector(setThumbnailWithComAowagieTextImage:);
  methods[106].selector = @selector(getGroup);
  methods[107].selector = @selector(setGroupWithComAowagieTextPdfPdfDictionary:);
  methods[108].selector = @selector(getSpaceCharRatio);
  methods[109].selector = @selector(setSpaceCharRatioWithFloat:);
  methods[110].selector = @selector(setRunDirectionWithInt:);
  methods[111].selector = @selector(getRunDirection);
  methods[112].selector = @selector(getUserunit);
  methods[113].selector = @selector(setUserunitWithFloat:);
  methods[114].selector = @selector(getDefaultColorspace);
  methods[115].selector = @selector(setDefaultColorspaceWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfObject:);
  methods[116].selector = @selector(addSimplePatternColorspaceWithHarmonyJavaAwtColor:);
  methods[117].selector = @selector(isStrictImageSequence);
  methods[118].selector = @selector(setStrictImageSequenceWithBoolean:);
  methods[119].selector = @selector(addDirectImageSimpleWithComAowagieTextImage:);
  methods[120].selector = @selector(addDirectImageSimpleWithComAowagieTextImage:withComAowagieTextPdfPdfIndirectReference:);
  methods[121].selector = @selector(addWithComAowagieTextPdfPdfImage:withComAowagieTextPdfPdfIndirectReference:);
  methods[122].selector = @selector(getImageReferenceWithComAowagieTextPdfPdfName:);
  methods[123].selector = @selector(addWithComAowagieTextPdfPdfICCBased:);
  methods[124].selector = @selector(getReferenceJBIG2GlobalsWithByteArray:);
  methods[125].selector = @selector(fitsPageWithComAowagieTextTable:withFloat:);
  methods[126].selector = @selector(isUserProperties);
  methods[127].selector = @selector(setUserPropertiesWithBoolean:);
  methods[128].selector = @selector(isRgbTransparencyBlending);
  methods[129].selector = @selector(setRgbTransparencyBlendingWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "GENERATION_MAX", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_GENERATION_MAX, 0x18, -1, -1, -1, -1 },
    { "pdf_", "LComAowagieTextPdfPdfDocument;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "directContent_", "LComAowagieTextPdfPdfContentByte;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "directContentUnder_", "LComAowagieTextPdfPdfContentByte;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "body_", "LComAowagieTextPdfPdfWriter_PdfBody;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "extraCatalog_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "root_", "LComAowagieTextPdfPdfPages;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "pageReferences_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "currentPageNumber_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tabs_", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pageEvent_", "LComAowagieTextPdfPdfPageEvent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prevxref_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "newBookmarks_", "LJavaUtilList;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "VERSION_1_2", "C", .constantValue.asUnichar = ComAowagieTextPdfPdfWriter_VERSION_1_2, 0x19, -1, -1, -1, -1 },
    { "VERSION_1_3", "C", .constantValue.asUnichar = ComAowagieTextPdfPdfWriter_VERSION_1_3, 0x19, -1, -1, -1, -1 },
    { "VERSION_1_4", "C", .constantValue.asUnichar = ComAowagieTextPdfPdfWriter_VERSION_1_4, 0x19, -1, -1, -1, -1 },
    { "VERSION_1_5", "C", .constantValue.asUnichar = ComAowagieTextPdfPdfWriter_VERSION_1_5, 0x19, -1, -1, -1, -1 },
    { "VERSION_1_6", "C", .constantValue.asUnichar = ComAowagieTextPdfPdfWriter_VERSION_1_6, 0x19, -1, -1, -1, -1 },
    { "VERSION_1_7", "C", .constantValue.asUnichar = ComAowagieTextPdfPdfWriter_VERSION_1_7, 0x19, -1, -1, -1, -1 },
    { "PDF_VERSION_1_2", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x19, -1, 135, -1, -1 },
    { "PDF_VERSION_1_3", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x19, -1, 136, -1, -1 },
    { "PDF_VERSION_1_4", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x19, -1, 137, -1, -1 },
    { "PDF_VERSION_1_5", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x19, -1, 138, -1, -1 },
    { "PDF_VERSION_1_6", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x19, -1, 139, -1, -1 },
    { "PDF_VERSION_1_7", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x19, -1, 140, -1, -1 },
    { "pdf_version_", "LComAowagieTextPdfInternalPdfVersionImp;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "PageLayoutSinglePage", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageLayoutSinglePage, 0x19, -1, -1, -1, -1 },
    { "PageLayoutOneColumn", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageLayoutOneColumn, 0x19, -1, -1, -1, -1 },
    { "PageLayoutTwoColumnLeft", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageLayoutTwoColumnLeft, 0x19, -1, -1, -1, -1 },
    { "PageLayoutTwoColumnRight", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageLayoutTwoColumnRight, 0x19, -1, -1, -1, -1 },
    { "PageLayoutTwoPageLeft", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageLayoutTwoPageLeft, 0x19, -1, -1, -1, -1 },
    { "PageLayoutTwoPageRight", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageLayoutTwoPageRight, 0x19, -1, -1, -1, -1 },
    { "PageModeUseNone", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageModeUseNone, 0x19, -1, -1, -1, -1 },
    { "PageModeUseOutlines", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageModeUseOutlines, 0x19, -1, -1, -1, -1 },
    { "PageModeUseThumbs", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageModeUseThumbs, 0x19, -1, -1, -1, -1 },
    { "PageModeFullScreen", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageModeFullScreen, 0x19, -1, -1, -1, -1 },
    { "PageModeUseOC", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageModeUseOC, 0x19, -1, -1, -1, -1 },
    { "PageModeUseAttachments", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PageModeUseAttachments, 0x19, -1, -1, -1, -1 },
    { "HideToolbar", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_HideToolbar, 0x19, -1, -1, -1, -1 },
    { "HideMenubar", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_HideMenubar, 0x19, -1, -1, -1, -1 },
    { "HideWindowUI", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_HideWindowUI, 0x19, -1, -1, -1, -1 },
    { "FitWindow", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_FitWindow, 0x19, -1, -1, -1, -1 },
    { "CenterWindow", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_CenterWindow, 0x19, -1, -1, -1, -1 },
    { "DisplayDocTitle", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_DisplayDocTitle, 0x19, -1, -1, -1, -1 },
    { "NonFullScreenPageModeUseNone", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseNone, 0x19, -1, -1, -1, -1 },
    { "NonFullScreenPageModeUseOutlines", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseOutlines, 0x19, -1, -1, -1, -1 },
    { "NonFullScreenPageModeUseThumbs", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseThumbs, 0x19, -1, -1, -1, -1 },
    { "NonFullScreenPageModeUseOC", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_NonFullScreenPageModeUseOC, 0x19, -1, -1, -1, -1 },
    { "DirectionL2R", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_DirectionL2R, 0x19, -1, -1, -1, -1 },
    { "DirectionR2L", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_DirectionR2L, 0x19, -1, -1, -1, -1 },
    { "PrintScalingNone", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PrintScalingNone, 0x19, -1, -1, -1, -1 },
    { "DOCUMENT_CLOSE", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 141, -1, -1 },
    { "WILL_SAVE", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 142, -1, -1 },
    { "DID_SAVE", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 143, -1, -1 },
    { "WILL_PRINT", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 144, -1, -1 },
    { "DID_PRINT", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x18, -1, 145, -1, -1 },
    { "xmpMetadata_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "PDFXNONE", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PDFXNONE, 0x19, -1, -1, -1, -1 },
    { "PDFX1A2001", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PDFX1A2001, 0x19, -1, -1, -1, -1 },
    { "PDFX32002", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PDFX32002, 0x19, -1, -1, -1, -1 },
    { "PDFA1A", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PDFA1A, 0x19, -1, -1, -1, -1 },
    { "PDFA1B", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PDFA1B, 0x19, -1, -1, -1, -1 },
    { "PDFA2A", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PDFA2A, 0x19, -1, -1, -1, -1 },
    { "PDFA2B", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PDFA2B, 0x19, -1, -1, -1, -1 },
    { "pdfxConformance_", "LComAowagieTextPdfInternalPdfXConformanceImp;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "STANDARD_ENCRYPTION_40", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_STANDARD_ENCRYPTION_40, 0x18, -1, -1, -1, -1 },
    { "STANDARD_ENCRYPTION_128", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_STANDARD_ENCRYPTION_128, 0x18, -1, -1, -1, -1 },
    { "ENCRYPTION_AES_128", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ENCRYPTION_AES_128, 0x18, -1, -1, -1, -1 },
    { "ENCRYPTION_AES_256_V3", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ENCRYPTION_AES_256_V3, 0x19, -1, -1, -1, -1 },
    { "ENCRYPTION_MASK", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ENCRYPTION_MASK, 0x18, -1, -1, -1, -1 },
    { "DO_NOT_ENCRYPT_METADATA", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_DO_NOT_ENCRYPT_METADATA, 0x18, -1, -1, -1, -1 },
    { "EMBEDDED_FILES_ONLY", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_EMBEDDED_FILES_ONLY, 0x18, -1, -1, -1, -1 },
    { "ALLOW_PRINTING", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_PRINTING, 0x18, -1, -1, -1, -1 },
    { "ALLOW_MODIFY_CONTENTS", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_MODIFY_CONTENTS, 0x18, -1, -1, -1, -1 },
    { "ALLOW_COPY", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_COPY, 0x18, -1, -1, -1, -1 },
    { "ALLOW_MODIFY_ANNOTATIONS", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_MODIFY_ANNOTATIONS, 0x18, -1, -1, -1, -1 },
    { "ALLOW_FILL_IN", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_FILL_IN, 0x18, -1, -1, -1, -1 },
    { "ALLOW_SCREENREADERS", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_SCREENREADERS, 0x18, -1, -1, -1, -1 },
    { "ALLOW_ASSEMBLY", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_ASSEMBLY, 0x18, -1, -1, -1, -1 },
    { "ALLOW_DEGRADED_PRINTING", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_ALLOW_DEGRADED_PRINTING, 0x18, -1, -1, -1, -1 },
    { "crypto_", "LComAowagieTextPdfPdfEncryption;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "fullCompression_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "compressionLevel_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "documentFonts_", "LJavaUtilLinkedHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fontNumber_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "formXObjects_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "formXObjectsCounter_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "importedPages_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "currentPdfReaderInstance_", "LComAowagieTextPdfPdfReaderInstance;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "documentColors_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "colorNumber_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "documentPatterns_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "patternNumber_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "documentShadingPatterns_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "documentShadings_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "documentExtGState_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "documentProperties_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tagged", "Z", .constantValue.asBOOL = ComAowagieTextPdfPdfWriter_tagged, 0x12, 146, -1, -1, -1 },
    { "structureTreeRoot_", "LComAowagieTextPdfPdfStructureTreeRoot;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "documentOCG_", "LJavaUtilHashSet;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "documentOCGorder_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "OCProperties_", "LComAowagieTextPdfPdfOCProperties;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "OCGRadioGroup_", "LComAowagieTextPdfPdfArray;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "OCGLocked_", "LComAowagieTextPdfPdfArray;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "PAGE_OPEN", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x1a, -1, 147, -1, -1 },
    { "PAGE_CLOSE", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x1a, -1, 148, -1, -1 },
    { "group_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "SPACE_CHAR_RATIO_DEFAULT", "F", .constantValue.asFloat = ComAowagieTextPdfPdfWriter_SPACE_CHAR_RATIO_DEFAULT, 0x1a, -1, -1, -1, -1 },
    { "spaceCharRatio_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "RUN_DIRECTION_DEFAULT", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_RUN_DIRECTION_DEFAULT, 0x19, -1, -1, -1, -1 },
    { "RUN_DIRECTION_NO_BIDI", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_RUN_DIRECTION_NO_BIDI, 0x18, -1, -1, -1, -1 },
    { "RUN_DIRECTION_LTR", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_RUN_DIRECTION_LTR, 0x18, -1, -1, -1, -1 },
    { "RUN_DIRECTION_RTL", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_RUN_DIRECTION_RTL, 0x18, -1, -1, -1, -1 },
    { "runDirection_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "userunit_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "defaultColorspace_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "documentSpotPatterns_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "patternColorspaceRGB_", "LComAowagieTextPdfColorDetails;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "patternColorspaceGRAY_", "LComAowagieTextPdfColorDetails;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "patternColorspaceCMYK_", "LComAowagieTextPdfColorDetails;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "imageDictionary_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "images_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "JBIG2Globals_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "userProperties_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rgbTransparencyBlending_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LComAowagieTextDocument;LJavaIoOutputStream;", "LComAowagieTextDocumentException;", "LComAowagieTextPdfPdfDocument;LJavaIoOutputStream;", "setInitialLeading", "F", "addLocalDestinations", "LJavaUtilTreeMap;", "LJavaIoIOException;", "addToBody", "LComAowagieTextPdfPdfObject;", "LComAowagieTextPdfPdfObject;Z", "LComAowagieTextPdfPdfObject;LComAowagieTextPdfPdfIndirectReference;", "LComAowagieTextPdfPdfObject;LComAowagieTextPdfPdfIndirectReference;Z", "LComAowagieTextPdfPdfObject;I", "LComAowagieTextPdfPdfObject;IZ", "getCatalog", "LComAowagieTextPdfPdfIndirectReference;", "getPageReference", "I", "setTabs", "LComAowagieTextPdfPdfName;", "add", "LComAowagieTextPdfPdfPage;LComAowagieTextPdfPdfContents;", "LComAowagieTextPdfPdfException;", "setPageEvent", "LComAowagieTextPdfPdfPageEvent;", "setOutlines", "LJavaUtilList;", "writeOutlines", "LComAowagieTextPdfPdfDictionary;Z", "setPdfVersion", "C", "setAtLeastPdfVersion", "addDeveloperExtension", "LComAowagieTextPdfPdfDeveloperExtension;", "setViewerPreferences", "addViewerPreference", "LComAowagieTextPdfPdfName;LComAowagieTextPdfPdfObject;", "setPageLabels", "LComAowagieTextPdfPdfPageLabels;", "addJavaScript", "LComAowagieTextPdfPdfAction;", "LNSString;Z", "LNSString;LComAowagieTextPdfPdfAction;", "LNSString;LNSString;Z", "addFileAttachment", "LNSString;[BLNSString;LNSString;", "LNSString;LComAowagieTextPdfPdfFileSpecification;", "setOpenAction", "LNSString;", "setAdditionalAction", "LComAowagieTextPdfPdfName;LComAowagieTextPdfPdfAction;", "setCollection", "LComAowagieTextPdfCollectionPdfCollection;", "addAnnotation", "LComAowagieTextPdfPdfAnnotation;", "LComAowagieTextPdfPdfAnnotation;I", "setSigFlags", "setXmpMetadata", "[B", "setPageXmpMetadata", "setPDFXConformance", "setOutputIntents", "LNSString;LNSString;LNSString;LNSString;LHarmonyJavaAwtColorICC_Profile;", "LNSString;LNSString;LNSString;LNSString;[B", "getNameString", "LComAowagieTextPdfPdfDictionary;LComAowagieTextPdfPdfName;", "setEncryption", "[B[BII", "[LJavaSecurityCertCertificate;[II", "setCompressionLevel", "addSimple", "LComAowagieTextPdfBaseFont;", "eliminateFontSubset", "LComAowagieTextPdfPdfDictionary;", "addDirectTemplateSimple", "LComAowagieTextPdfPdfTemplate;LComAowagieTextPdfPdfName;", "releaseTemplate", "LComAowagieTextPdfPdfTemplate;", "getImportedPage", "LComAowagieTextPdfPdfReader;I", "freeReader", "LComAowagieTextPdfPdfReader;", "getNewObjectNumber", "LComAowagieTextPdfPdfReader;II", "getReaderFile", "LComAowagieTextPdfPdfSpotColor;", "addSimplePattern", "LComAowagieTextPdfPdfPatternPainter;", "addSimpleShadingPattern", "LComAowagieTextPdfPdfShadingPattern;", "addSimpleShading", "LComAowagieTextPdfPdfShading;", "addSimpleExtGState", "addSimpleProperty", "LNSObject;LComAowagieTextPdfPdfIndirectReference;", "propertyExists", "LNSObject;", "getOCGOrder", "LComAowagieTextPdfPdfArray;LComAowagieTextPdfPdfLayer;", "addASEvent", "LComAowagieTextPdfPdfName;LComAowagieTextPdfPdfName;", "fillOCProperties", "Z", "registerLayer", "LComAowagieTextPdfPdfOCG;", "setCropBoxSize", "LComAowagieTextRectangle;", "setPageEmpty", "setPageAction", "setDuration", "setTransition", "LComAowagieTextPdfPdfTransition;", "setThumbnail", "LComAowagieTextImage;", "LComAowagieTextPdfPdfException;LComAowagieTextDocumentException;", "setGroup", "setSpaceCharRatio", "setRunDirection", "setUserunit", "setDefaultColorspace", "addSimplePatternColorspace", "LHarmonyJavaAwtColor;", "setStrictImageSequence", "addDirectImageSimple", "LComAowagieTextImage;LComAowagieTextPdfPdfIndirectReference;", "LComAowagieTextPdfPdfImage;LComAowagieTextPdfPdfIndirectReference;", "getImageReference", "LComAowagieTextPdfPdfICCBased;", "getReferenceJBIG2Globals", "fitsPage", "LComAowagieTextTable;F", "setUserProperties", "setRgbTransparencyBlending", &ComAowagieTextPdfPdfWriter_PDF_VERSION_1_2, &ComAowagieTextPdfPdfWriter_PDF_VERSION_1_3, &ComAowagieTextPdfPdfWriter_PDF_VERSION_1_4, &ComAowagieTextPdfPdfWriter_PDF_VERSION_1_5, &ComAowagieTextPdfPdfWriter_PDF_VERSION_1_6, &ComAowagieTextPdfPdfWriter_PDF_VERSION_1_7, &ComAowagieTextPdfPdfWriter_DOCUMENT_CLOSE, &ComAowagieTextPdfPdfWriter_WILL_SAVE, &ComAowagieTextPdfPdfWriter_DID_SAVE, &ComAowagieTextPdfPdfWriter_WILL_PRINT, &ComAowagieTextPdfPdfWriter_DID_PRINT, "tagged", &ComAowagieTextPdfPdfWriter_PAGE_OPEN, &ComAowagieTextPdfPdfWriter_PAGE_CLOSE, "LComAowagieTextPdfPdfWriter_PdfBody;LComAowagieTextPdfPdfWriter_PdfTrailer;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfWriter = { "PdfWriter", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1, 130, 125, -1, 149, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfWriter;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfPdfWriter class]) {
    ComAowagieTextPdfPdfWriter_PDF_VERSION_1_2 = new_ComAowagieTextPdfPdfName_initWithNSString_(
#line 1358
    @"1.2");
    ComAowagieTextPdfPdfWriter_PDF_VERSION_1_3 = new_ComAowagieTextPdfPdfName_initWithNSString_(
#line 1360
    @"1.3");
    ComAowagieTextPdfPdfWriter_PDF_VERSION_1_4 = new_ComAowagieTextPdfPdfName_initWithNSString_(
#line 1362
    @"1.4");
    ComAowagieTextPdfPdfWriter_PDF_VERSION_1_5 = new_ComAowagieTextPdfPdfName_initWithNSString_(
#line 1364
    @"1.5");
    ComAowagieTextPdfPdfWriter_PDF_VERSION_1_6 = new_ComAowagieTextPdfPdfName_initWithNSString_(
#line 1366
    @"1.6");
    ComAowagieTextPdfPdfWriter_PDF_VERSION_1_7 = new_ComAowagieTextPdfPdfName_initWithNSString_(
#line 1368
    @"1.7");
    ComAowagieTextPdfPdfWriter_DOCUMENT_CLOSE = JreLoadStatic(ComAowagieTextPdfPdfName, WC);
    ComAowagieTextPdfPdfWriter_WILL_SAVE = JreLoadStatic(ComAowagieTextPdfPdfName, WS);
    ComAowagieTextPdfPdfWriter_DID_SAVE = JreLoadStatic(ComAowagieTextPdfPdfName, DS);
    ComAowagieTextPdfPdfWriter_WILL_PRINT = JreLoadStatic(ComAowagieTextPdfPdfName, WP);
    ComAowagieTextPdfPdfWriter_DID_PRINT = JreLoadStatic(ComAowagieTextPdfPdfName, DP);
    ComAowagieTextPdfPdfWriter_PAGE_OPEN = JreLoadStatic(ComAowagieTextPdfPdfName, O);
    ComAowagieTextPdfPdfWriter_PAGE_CLOSE = JreLoadStatic(ComAowagieTextPdfPdfName, C);
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfPdfWriter)
  }
}

@end


#line 121
ComAowagieTextPdfPdfWriter *ComAowagieTextPdfPdfWriter_getInstanceWithComAowagieTextDocument_withJavaIoOutputStream_(ComAowagieTextDocument *document, JavaIoOutputStream *os) {
  ComAowagieTextPdfPdfWriter_initialize();
  ComAowagieTextPdfPdfDocument *pdf = new_ComAowagieTextPdfPdfDocument_initPackagePrivateWithJavaUtilCalendar_(new_JavaUtilGregorianCalendar_init());
  [((ComAowagieTextDocument *) nil_chk(document)) addDocListenerWithComAowagieTextDocListener:pdf];
  ComAowagieTextPdfPdfWriter *writer = new_ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(pdf, os);
  [pdf addWriterWithComAowagieTextPdfPdfWriter:writer];
  return writer;
}


#line 621
void ComAowagieTextPdfPdfWriter_init(ComAowagieTextPdfPdfWriter *self) {
  ComAowagieTextDocWriter_init(self);
  self->root_ = new_ComAowagieTextPdfPdfPages_initPackagePrivateWithComAowagieTextPdfPdfWriter_(self);
  self->pageReferences_ = new_JavaUtilArrayList_init();
  self->currentPageNumber_ =
#line 940
  1;
  self->tabs_ =
#line 945
  nil;
  self->prevxref_ =
#line 1110
  0;
  self->pdf_version_ = new_ComAowagieTextPdfInternalPdfVersionImp_init();
  self->xmpMetadata_ =
#line 1648
  nil;
  self->pdfxConformance_ = new_ComAowagieTextPdfInternalPdfXConformanceImp_init();
  self->fullCompression_ =
#line 1932
  false;
  self->compressionLevel_ =
#line 1958
  ComAowagieTextPdfPdfStream_DEFAULT_COMPRESSION;
  self->documentFonts_ = new_JavaUtilLinkedHashMap_init();
  self->fontNumber_ =
#line 1988
  1;
  self->formXObjects_ = new_JavaUtilLinkedHashMap_init();
  self->formXObjectsCounter_ =
#line 2027
  1;
  self->importedPages_ = new_JavaUtilLinkedHashMap_init();
  self->documentColors_ = new_JavaUtilLinkedHashMap_init();
  self->colorNumber_ =
#line 2162
  1;
  self->documentPatterns_ = new_JavaUtilLinkedHashMap_init();
  self->patternNumber_ =
#line 2189
  1;
  self->documentShadingPatterns_ = new_JavaUtilLinkedHashMap_init();
  self->documentShadings_ = new_JavaUtilLinkedHashMap_init();
  self->documentExtGState_ = new_JavaUtilLinkedHashMap_init();
  self->documentProperties_ = new_JavaUtilLinkedHashMap_init();
  self->documentOCG_ = new_JavaUtilHashSet_init();
  self->documentOCGorder_ = new_JavaUtilArrayList_init();
  self->OCGRadioGroup_ = new_ComAowagieTextPdfPdfArray_init();
  self->OCGLocked_ = new_ComAowagieTextPdfPdfArray_init();
  self->spaceCharRatio_ = ComAowagieTextPdfPdfWriter_SPACE_CHAR_RATIO_DEFAULT;
  self->runDirection_ = ComAowagieTextPdfPdfWriter_RUN_DIRECTION_NO_BIDI;
  self->userunit_ =
#line 2621
  0.0f;
  self->defaultColorspace_ = new_ComAowagieTextPdfPdfDictionary_init();
  self->documentSpotPatterns_ = new_JavaUtilLinkedHashMap_init();
  self->imageDictionary_ = new_ComAowagieTextPdfPdfDictionary_init();
  self->images_ = new_JavaUtilLinkedHashMap_init();
  self->JBIG2Globals_ = new_JavaUtilLinkedHashMap_init();
}


#line 621
ComAowagieTextPdfPdfWriter *new_ComAowagieTextPdfPdfWriter_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfWriter, init)
}


#line 621
ComAowagieTextPdfPdfWriter *create_ComAowagieTextPdfPdfWriter_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfWriter, init)
}


#line 634
void ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfDocument *document, JavaIoOutputStream *os) {
  ComAowagieTextDocWriter_initWithComAowagieTextDocument_withJavaIoOutputStream_(self, document, os);
  self->root_ = new_ComAowagieTextPdfPdfPages_initPackagePrivateWithComAowagieTextPdfPdfWriter_(self);
  self->pageReferences_ = new_JavaUtilArrayList_init();
  self->currentPageNumber_ =
#line 940
  1;
  self->tabs_ =
#line 945
  nil;
  self->prevxref_ =
#line 1110
  0;
  self->pdf_version_ = new_ComAowagieTextPdfInternalPdfVersionImp_init();
  self->xmpMetadata_ =
#line 1648
  nil;
  self->pdfxConformance_ = new_ComAowagieTextPdfInternalPdfXConformanceImp_init();
  self->fullCompression_ =
#line 1932
  false;
  self->compressionLevel_ =
#line 1958
  ComAowagieTextPdfPdfStream_DEFAULT_COMPRESSION;
  self->documentFonts_ = new_JavaUtilLinkedHashMap_init();
  self->fontNumber_ =
#line 1988
  1;
  self->formXObjects_ = new_JavaUtilLinkedHashMap_init();
  self->formXObjectsCounter_ =
#line 2027
  1;
  self->importedPages_ = new_JavaUtilLinkedHashMap_init();
  self->documentColors_ = new_JavaUtilLinkedHashMap_init();
  self->colorNumber_ =
#line 2162
  1;
  self->documentPatterns_ = new_JavaUtilLinkedHashMap_init();
  self->patternNumber_ =
#line 2189
  1;
  self->documentShadingPatterns_ = new_JavaUtilLinkedHashMap_init();
  self->documentShadings_ = new_JavaUtilLinkedHashMap_init();
  self->documentExtGState_ = new_JavaUtilLinkedHashMap_init();
  self->documentProperties_ = new_JavaUtilLinkedHashMap_init();
  self->documentOCG_ = new_JavaUtilHashSet_init();
  self->documentOCGorder_ = new_JavaUtilArrayList_init();
  self->OCGRadioGroup_ = new_ComAowagieTextPdfPdfArray_init();
  self->OCGLocked_ = new_ComAowagieTextPdfPdfArray_init();
  self->spaceCharRatio_ = ComAowagieTextPdfPdfWriter_SPACE_CHAR_RATIO_DEFAULT;
  self->runDirection_ = ComAowagieTextPdfPdfWriter_RUN_DIRECTION_NO_BIDI;
  self->userunit_ =
#line 2621
  0.0f;
  self->defaultColorspace_ = new_ComAowagieTextPdfPdfDictionary_init();
  self->documentSpotPatterns_ = new_JavaUtilLinkedHashMap_init();
  self->imageDictionary_ = new_ComAowagieTextPdfPdfDictionary_init();
  self->images_ = new_JavaUtilLinkedHashMap_init();
  self->JBIG2Globals_ = new_JavaUtilLinkedHashMap_init();
  
#line 636
  self->pdf_ = document;
  self->directContent_ = new_ComAowagieTextPdfPdfContentByte_initWithComAowagieTextPdfPdfWriter_(self);
  self->directContentUnder_ = new_ComAowagieTextPdfPdfContentByte_initWithComAowagieTextPdfPdfWriter_(self);
}


#line 634
ComAowagieTextPdfPdfWriter *new_ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(ComAowagieTextPdfPdfDocument *document, JavaIoOutputStream *os) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfWriter, initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_, document, os)
}


#line 634
ComAowagieTextPdfPdfWriter *create_ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(ComAowagieTextPdfPdfDocument *document, JavaIoOutputStream *os) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfWriter, initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_, document, os)
}


#line 870
ComAowagieTextPdfOutputStreamCounter *ComAowagieTextPdfPdfWriter_getOs(ComAowagieTextPdfPdfWriter *self) {
  return self->os_;
}


#line 1501
void ComAowagieTextPdfPdfWriter_addJavaScriptWithComAowagieTextPdfPdfAction_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfAction *js) {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addJavaScriptWithComAowagieTextPdfPdfAction:js];
}


#line 1524
void ComAowagieTextPdfPdfWriter_addJavaScriptWithNSString_withComAowagieTextPdfPdfAction_(ComAowagieTextPdfPdfWriter *self, NSString *name, ComAowagieTextPdfPdfAction *js) {
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addJavaScriptWithNSString:name withComAowagieTextPdfPdfAction:js];
}


#line 1537
void ComAowagieTextPdfPdfWriter_addJavaScriptWithNSString_withNSString_withBoolean_(ComAowagieTextPdfPdfWriter *self, NSString *name, NSString *code, jboolean unicode) {
  ComAowagieTextPdfPdfWriter_addJavaScriptWithNSString_withComAowagieTextPdfPdfAction_(self, name, ComAowagieTextPdfPdfAction_javaScriptWithNSString_withComAowagieTextPdfPdfWriter_withBoolean_(code, self, unicode));
}


#line 1673
IOSByteArray *ComAowagieTextPdfPdfWriter_createXmpMetadataBytes(ComAowagieTextPdfPdfWriter *self) {
  JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
  @try {
    ComAowagieTextXmlXmpXmpWriter *xmp = new_ComAowagieTextXmlXmpXmpWriter_initWithJavaIoOutputStream_withComAowagieTextPdfPdfDictionary_withInt_(baos, [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getInfo], [((ComAowagieTextPdfInternalPdfXConformanceImp *) nil_chk(self->pdfxConformance_)) getPDFXConformance]);
    [xmp close];
  }
  @catch (JavaIoIOException *ioe) {
    [ioe printStackTrace];
  }
  return [baos toByteArray];
}


#line 1798
void ComAowagieTextPdfPdfWriter_setOutputIntentsWithNSString_withNSString_withNSString_withNSString_withByteArray_(ComAowagieTextPdfPdfWriter *self, NSString *outputConditionIdentifier, NSString *outputCondition, NSString *registryName, NSString *info, IOSByteArray *destOutputProfile) {
  HarmonyJavaAwtColorICC_Profile *colorProfile = destOutputProfile == nil ? nil : HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(destOutputProfile);
  [self setOutputIntentsWithNSString:outputConditionIdentifier withNSString:outputCondition withNSString:registryName withNSString:info withHarmonyJavaAwtColorICC_Profile:colorProfile];
}


#line 1806
NSString *ComAowagieTextPdfPdfWriter_getNameStringWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfName_(ComAowagieTextPdfPdfDictionary *dic, ComAowagieTextPdfPdfName *key) {
  ComAowagieTextPdfPdfWriter_initialize();
  
#line 1807
  ComAowagieTextPdfPdfObject *obj = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(dic)) getWithComAowagieTextPdfPdfName:key]);
  if (obj == nil || ![obj isString]) {
    return nil;
  }
  return [((ComAowagieTextPdfPdfString *) cast_chk(obj, [ComAowagieTextPdfPdfString class])) toUnicodeString];
}


#line 2315
void ComAowagieTextPdfPdfWriter_getOCGOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfLayer_(ComAowagieTextPdfPdfArray *order, ComAowagieTextPdfPdfLayer *layer) {
  ComAowagieTextPdfPdfWriter_initialize();
  
#line 2316
  if (![((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) isOnPanel]) {
    return;
  }
  if ([layer getTitle] == nil) {
    [((ComAowagieTextPdfPdfArray *) nil_chk(order)) addWithComAowagieTextPdfPdfObject:[layer getRef]];
  }
  JavaUtilArrayList *children = [layer getChildren];
  if (children == nil) {
    return;
  }
  ComAowagieTextPdfPdfArray *kids = new_ComAowagieTextPdfPdfArray_init();
  if ([layer getTitle] != nil) {
    [kids addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_([layer getTitle], ComAowagieTextPdfPdfObject_TEXT_UNICODE)];
  }
  for (jint k = 0; k < [children size]; ++k) {
    ComAowagieTextPdfPdfWriter_getOCGOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfLayer_(kids, (ComAowagieTextPdfPdfLayer *) cast_chk([children getWithInt:k], [ComAowagieTextPdfPdfLayer class]));
  }
  if ([kids size] > 0) {
    [((ComAowagieTextPdfPdfArray *) nil_chk(order)) addWithComAowagieTextPdfPdfObject:kids];
  }
}


#line 2338
void ComAowagieTextPdfPdfWriter_addASEventWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfName *event, ComAowagieTextPdfPdfName *category) {
  ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
  for (id<JavaUtilIterator> it = [((JavaUtilHashSet *) nil_chk(self->documentOCG_)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfLayer *layer = (ComAowagieTextPdfPdfLayer *) cast_chk([it next], [ComAowagieTextPdfPdfLayer class]);
    ComAowagieTextPdfPdfDictionary *usage = (ComAowagieTextPdfPdfDictionary *) cast_chk([((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, USAGE)], [ComAowagieTextPdfPdfDictionary class]);
    if (usage != nil && [usage getWithComAowagieTextPdfPdfName:category] != nil) {
      [arr addWithComAowagieTextPdfPdfObject:[layer getRef]];
    }
  }
  if ([arr size] == 0) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *d = (ComAowagieTextPdfPdfDictionary *) cast_chk([((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)], [ComAowagieTextPdfPdfDictionary class]);
  ComAowagieTextPdfPdfArray *arras = (ComAowagieTextPdfPdfArray *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(d)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AS)], [ComAowagieTextPdfPdfArray class]);
  if (arras == nil) {
    arras = new_ComAowagieTextPdfPdfArray_init();
    [d putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AS) withComAowagieTextPdfPdfObject:arras];
  }
  ComAowagieTextPdfPdfDictionary *as = new_ComAowagieTextPdfPdfDictionary_init();
  [as putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, EVENT) withComAowagieTextPdfPdfObject:event];
  [as putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CATEGORY) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfObject_(category)];
  [as putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCGS) withComAowagieTextPdfPdfObject:arr];
  [arras addWithComAowagieTextPdfPdfObject:as];
}


#line 2674
void ComAowagieTextPdfPdfWriter_setDefaultColorspaceWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfObject_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfName *key, ComAowagieTextPdfPdfObject *cs) {
  if (cs == nil || [cs isNull]) {
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->defaultColorspace_)) removeWithComAowagieTextPdfPdfName:key];
  }
  [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->defaultColorspace_)) putWithComAowagieTextPdfPdfName:key withComAowagieTextPdfPdfObject:cs];
}


#line 2793
ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfWriter_addDirectImageSimpleWithComAowagieTextImage_withComAowagieTextPdfPdfIndirectReference_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextImage *image, ComAowagieTextPdfPdfIndirectReference *fixedRef) {
  ComAowagieTextPdfPdfName *name;
  
#line 2796
  if ([((JavaUtilHashMap *) nil_chk(self->images_)) containsKeyWithId:[((ComAowagieTextImage *) nil_chk(image)) getMySerialId]]) {
    name = (ComAowagieTextPdfPdfName *) cast_chk([self->images_ getWithId:[image getMySerialId]], [ComAowagieTextPdfPdfName class]);
  }
  else {
    
#line 2801
    if ([image isImgTemplate]) {
      name = new_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("$I", @"img", [self->images_ size]));
      if ([image isKindOfClass:[ComAowagieTextImgWMF class]]) {
        @try {
          ComAowagieTextImgWMF *wmf = (ComAowagieTextImgWMF *) image;
          [wmf readWMFWithComAowagieTextPdfPdfTemplate:ComAowagieTextPdfPdfTemplate_createTemplateWithComAowagieTextPdfPdfWriter_withFloat_withFloat_(self, 0, 0)];
        }
        @catch (JavaLangException *e) {
          @throw new_ComAowagieTextDocumentException_initWithJavaLangException_(e);
        }
      }
    }
    else {
      ComAowagieTextPdfPdfIndirectReference *dref = [image getDirectReference];
      if (dref != nil) {
        ComAowagieTextPdfPdfName *rname = new_ComAowagieTextPdfPdfName_initWithNSString_(JreStrcat("$I", @"img", [self->images_ size]));
        (void) [self->images_ putWithId:[image getMySerialId] withId:rname];
        [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->imageDictionary_)) putWithComAowagieTextPdfPdfName:rname withComAowagieTextPdfPdfObject:dref];
        return rname;
      }
      ComAowagieTextImage *maskImage = [image getImageMask];
      ComAowagieTextPdfPdfIndirectReference *maskRef = nil;
      if (maskImage != nil) {
        ComAowagieTextPdfPdfName *mname = (ComAowagieTextPdfPdfName *) cast_chk([self->images_ getWithId:[maskImage getMySerialId]], [ComAowagieTextPdfPdfName class]);
        maskRef = [self getImageReferenceWithComAowagieTextPdfPdfName:mname];
      }
      ComAowagieTextPdfPdfImage *i = new_ComAowagieTextPdfPdfImage_initWithComAowagieTextImage_withNSString_withComAowagieTextPdfPdfIndirectReference_(image, JreStrcat("$I", @"img", [self->images_ size]), maskRef);
      if ([image isKindOfClass:[ComAowagieTextImgJBIG2 class]]) {
        IOSByteArray *globals = [((ComAowagieTextImgJBIG2 *) image) getGlobalBytes];
        if (globals != nil) {
          ComAowagieTextPdfPdfDictionary *decodeparms = new_ComAowagieTextPdfPdfDictionary_init();
          [decodeparms putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, JBIG2GLOBALS) withComAowagieTextPdfPdfObject:[self getReferenceJBIG2GlobalsWithByteArray:globals]];
          [i putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DECODEPARMS) withComAowagieTextPdfPdfObject:decodeparms];
        }
      }
      if ([image hasICCProfile]) {
        ComAowagieTextPdfPdfICCBased *icc = new_ComAowagieTextPdfPdfICCBased_initPackagePrivateWithHarmonyJavaAwtColorICC_Profile_withInt_([image getICCProfile], [image getCompressionLevel]);
        ComAowagieTextPdfPdfIndirectReference *iccRef = ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfICCBased_(self, icc);
        ComAowagieTextPdfPdfArray *iccArray = new_ComAowagieTextPdfPdfArray_init();
        [iccArray addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, ICCBASED)];
        [iccArray addWithComAowagieTextPdfPdfObject:iccRef];
        ComAowagieTextPdfPdfArray *colorspace = [i getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COLORSPACE)];
        if ((colorspace != nil) && ([((ComAowagieTextPdfPdfArray *) nil_chk(colorspace)) size] > 1 && [((ComAowagieTextPdfPdfName *) nil_chk(JreLoadStatic(ComAowagieTextPdfPdfName, INDEXED))) isEqual:[colorspace getPdfObjectWithInt:0]])) {
          (void) [((ComAowagieTextPdfPdfArray *) nil_chk(colorspace)) setWithInt:1 withComAowagieTextPdfPdfObject:iccArray];
        }
        else {
          
#line 2846
          [i putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COLORSPACE) withComAowagieTextPdfPdfObject:iccArray];
        }
      }
      (void) ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfImage_withComAowagieTextPdfPdfIndirectReference_(self, i, fixedRef);
      name = [i name];
    }
    (void) [self->images_ putWithId:[image getMySerialId] withId:name];
  }
  return name;
}


#line 2866
ComAowagieTextPdfPdfIndirectReference *ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfImage_withComAowagieTextPdfPdfIndirectReference_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfImage *pdfImage, ComAowagieTextPdfPdfIndirectReference *fixedRef) {
  if (![((ComAowagieTextPdfPdfDictionary *) nil_chk(self->imageDictionary_)) containsWithComAowagieTextPdfPdfName:[((ComAowagieTextPdfPdfImage *) nil_chk(pdfImage)) name]]) {
    ComAowagieTextPdfInternalPdfXConformanceImp_checkPDFXConformanceWithComAowagieTextPdfPdfWriter_withInt_withId_(self, ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_IMAGE, pdfImage);
    if ([fixedRef isKindOfClass:[ComAowagieTextPdfPRIndirectReference class]]) {
      ComAowagieTextPdfPRIndirectReference *r2 = (ComAowagieTextPdfPRIndirectReference *) fixedRef;
      fixedRef = new_ComAowagieTextPdfPdfIndirectReference_initWithInt_withInt_(0, [self getNewObjectNumberWithComAowagieTextPdfPdfReader:[((ComAowagieTextPdfPRIndirectReference *) nil_chk(r2)) getReader] withInt:[r2 getNumber] withInt:[r2 getGeneration]]);
    }
    @try {
      if (fixedRef == nil) {
        fixedRef = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:pdfImage])) getIndirectReference];
      }
      else {
        
#line 2877
        (void) [self addToBodyWithComAowagieTextPdfPdfObject:pdfImage withComAowagieTextPdfPdfIndirectReference:fixedRef];
      }
    }
    @catch (JavaIoIOException *ioe) {
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ioe);
    }
    [self->imageDictionary_ putWithComAowagieTextPdfPdfName:[pdfImage name] withComAowagieTextPdfPdfObject:fixedRef];
    return fixedRef;
  }
  return (ComAowagieTextPdfPdfIndirectReference *) cast_chk([self->imageDictionary_ getWithComAowagieTextPdfPdfName:[pdfImage name]], [ComAowagieTextPdfPdfIndirectReference class]);
}


#line 2900
ComAowagieTextPdfPdfIndirectReference *ComAowagieTextPdfPdfWriter_addWithComAowagieTextPdfPdfICCBased_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextPdfPdfICCBased *icc) {
  ComAowagieTextPdfPdfIndirectObject *object;
  @try {
    object = [self addToBodyWithComAowagieTextPdfPdfObject:icc];
  }
  @catch (JavaIoIOException *ioe) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(ioe);
  }
  return [((ComAowagieTextPdfPdfIndirectObject *) nil_chk(object)) getIndirectReference];
}


#line 2955
jboolean ComAowagieTextPdfPdfWriter_fitsPageWithComAowagieTextTable_withFloat_(ComAowagieTextPdfPdfWriter *self, ComAowagieTextTable *table, jfloat margin) {
  return [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) bottomWithComAowagieTextTable:table] > [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) indentBottom] + margin;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfWriter)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfWriter.java"


#line 151
@implementation ComAowagieTextPdfPdfWriter_PdfBody


#line 294
- (instancetype)initWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(self, writer);
  return self;
}


#line 304
- (void)setRefnumWithInt:(jint)refnum {
  self->refnum_ = refnum;
}

- (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *)addToObjStmWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj
                                                                                            withInt:(jint)nObj {
  return ComAowagieTextPdfPdfWriter_PdfBody_addToObjStmWithComAowagieTextPdfPdfObject_withInt_(self, obj, nObj);
}


#line 329
- (void)flushObjStm {
  ComAowagieTextPdfPdfWriter_PdfBody_flushObjStm(self);
}


#line 360
- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_(self, object, [self getIndirectReferenceNumber]);
}

- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                              withBoolean:(jboolean)inObjStm {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withBoolean_(self, object, inObjStm);
}


#line 373
- (ComAowagieTextPdfPdfIndirectReference *)getPdfIndirectReference {
  return new_ComAowagieTextPdfPdfIndirectReference_initWithInt_withInt_(0, [self getIndirectReferenceNumber]);
}

- (jint)getIndirectReferenceNumber {
  jint n = self->refnum_++;
  [((JavaUtilTreeSet *) nil_chk(self->xrefs_)) addWithId:new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(n, 0, ComAowagieTextPdfPdfWriter_GENERATION_MAX)];
  return n;
}


#line 399
- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref {
  
#line 400
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_(self, object, [((ComAowagieTextPdfPdfIndirectReference *) nil_chk(ref)) getNumber]);
}


#line 403
- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref
                                                              withBoolean:(jboolean)inObjStm {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, object, ref, inObjStm);
}


#line 407
- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                  withInt:(jint)refNumber {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_(self, object, refNumber);
}


#line 411
- (ComAowagieTextPdfPdfIndirectObject *)addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)object
                                                                  withInt:(jint)refNumber
                                                              withBoolean:(jboolean)inObjStm {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_withBoolean_(self, object, refNumber, inObjStm);
}


#line 440
- (jint)offset {
  return self->position_;
}


#line 450
- (jint)size {
  return JavaLangMath_maxWithInt_withInt_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_getRefnum(nil_chk(((ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) cast_chk([((JavaUtilTreeSet *) nil_chk(self->xrefs_)) last], [ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference class])))) + 1, self->refnum_);
}


#line 465
- (void)writeCrossReferenceTableWithJavaIoOutputStream:(JavaIoOutputStream *)os
             withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)root
             withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)info
             withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)encryption
                        withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)fileID
                                               withInt:(jint)prevxref {
  
#line 466
  jint refNumber = 0;
  if ([((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) isFullCompression]) {
    ComAowagieTextPdfPdfWriter_PdfBody_flushObjStm(self);
    refNumber = [self getIndirectReferenceNumber];
    [((JavaUtilTreeSet *) nil_chk(self->xrefs_)) addWithId:new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(refNumber, self->position_)];
  }
  ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *entry_ = (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) cast_chk([((JavaUtilTreeSet *) nil_chk(self->xrefs_)) first], [ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference class]);
  jint first = ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_getRefnum(nil_chk(entry_));
  jint len = 0;
  JavaUtilArrayList *sections = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> i = [self->xrefs_ iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    entry_ = (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) cast_chk([i next], [ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference class]);
    if (first + len == ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_getRefnum(nil_chk(entry_))) {
      ++len;
    }
    else {
      
#line 481
      [sections addWithId:new_JavaLangInteger_initWithInt_(first)];
      [sections addWithId:new_JavaLangInteger_initWithInt_(len)];
      first = ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_getRefnum(entry_);
      len = 1;
    }
  }
  [sections addWithId:new_JavaLangInteger_initWithInt_(first)];
  [sections addWithId:new_JavaLangInteger_initWithInt_(len)];
  if ([self->writer_ isFullCompression]) {
    jint mid = 4;
    jint mask = (jint) 0xff000000;
    for (; mid > 1; --mid) {
      if ((mask & self->position_) != 0) {
        break;
      }
      JreURShiftAssignInt(&mask, 8);
    }
    ComAowagieTextPdfByteBuffer *buf = new_ComAowagieTextPdfByteBuffer_init();
    
#line 500
    for (id<JavaUtilIterator> i = [self->xrefs_ iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
      entry_ = (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) cast_chk([i next], [ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference class]);
      ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithInt_withJavaIoOutputStream_(nil_chk(entry_), mid, buf);
    }
    ComAowagieTextPdfPdfStream *xr = new_ComAowagieTextPdfPdfStream_initWithByteArray_([buf toByteArray]);
    buf = nil;
    [xr flateCompressWithInt:[self->writer_ getCompressionLevel]];
    [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SIZE) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([self size])];
    [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ROOT) withComAowagieTextPdfPdfObject:root];
    if (info != nil) {
      [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, INFO) withComAowagieTextPdfPdfObject:info];
    }
    if (encryption != nil) {
      [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ENCRYPT) withComAowagieTextPdfPdfObject:encryption];
    }
    if (fileID != nil) {
      [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ID) withComAowagieTextPdfPdfObject:fileID];
    }
    [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, W) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_initWithIntArray_([IOSIntArray newArrayWithInts:(jint[]){ 1, mid, 2 } count:3])];
    [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, XREF)];
    ComAowagieTextPdfPdfArray *idx = new_ComAowagieTextPdfPdfArray_init();
    for (jint k = 0; k < [sections size]; ++k) {
      [idx addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([sections getWithInt:k], [JavaLangInteger class])))) intValue])];
    }
    [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, INDEX) withComAowagieTextPdfPdfObject:idx];
    if (prevxref > 0) {
      [xr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PREV) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(prevxref)];
    }
    ComAowagieTextPdfPdfEncryption *enc = self->writer_->crypto_;
    self->writer_->crypto_ = nil;
    ComAowagieTextPdfPdfIndirectObject *indirect = new_ComAowagieTextPdfPdfIndirectObject_initWithInt_withComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfWriter_(refNumber, xr, self->writer_);
    [indirect writeToWithJavaIoOutputStream:ComAowagieTextPdfPdfWriter_getOs(self->writer_)];
    self->writer_->crypto_ = enc;
  }
  else {
    [((JavaIoOutputStream *) nil_chk(os)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"xref\n")];
    id<JavaUtilIterator> i = [self->xrefs_ iterator];
    for (jint k = 0; k < [sections size]; k += 2) {
      first = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([sections getWithInt:k], [JavaLangInteger class])))) intValue];
      len = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([sections getWithInt:k + 1], [JavaLangInteger class])))) intValue];
      [os writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(NSString_java_valueOfInt_(first))];
      [os writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@" ")];
      [os writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(NSString_java_valueOfInt_(len))];
      [os writeWithInt:0x000a];
      while (len-- > 0) {
        entry_ = (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) cast_chk([((id<JavaUtilIterator>) nil_chk(i)) next], [ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference class]);
        ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithJavaIoOutputStream_(nil_chk(entry_), os);
      }
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference;", 0x2, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 5, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x0, 6, 7, 5, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x2, 6, 8, 5, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x0, 6, 9, 5, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x2, 6, 10, 5, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x2, 6, 4, 5, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectObject;", 0x2, 6, 11, 5, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 12, 13, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfPdfWriter:);
  methods[1].selector = @selector(setRefnumWithInt:);
  methods[2].selector = @selector(addToObjStmWithComAowagieTextPdfPdfObject:withInt:);
  methods[3].selector = @selector(flushObjStm);
  methods[4].selector = @selector(addWithComAowagieTextPdfPdfObject:);
  methods[5].selector = @selector(addWithComAowagieTextPdfPdfObject:withBoolean:);
  methods[6].selector = @selector(getPdfIndirectReference);
  methods[7].selector = @selector(getIndirectReferenceNumber);
  methods[8].selector = @selector(addWithComAowagieTextPdfPdfObject:withComAowagieTextPdfPdfIndirectReference:);
  methods[9].selector = @selector(addWithComAowagieTextPdfPdfObject:withComAowagieTextPdfPdfIndirectReference:withBoolean:);
  methods[10].selector = @selector(addWithComAowagieTextPdfPdfObject:withInt:);
  methods[11].selector = @selector(addWithComAowagieTextPdfPdfObject:withInt:withBoolean:);
  methods[12].selector = @selector(offset);
  methods[13].selector = @selector(size);
  methods[14].selector = @selector(writeCrossReferenceTableWithJavaIoOutputStream:withComAowagieTextPdfPdfIndirectReference:withComAowagieTextPdfPdfIndirectReference:withComAowagieTextPdfPdfIndirectReference:withComAowagieTextPdfPdfObject:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OBJSINSTREAM", "I", .constantValue.asInt = ComAowagieTextPdfPdfWriter_PdfBody_OBJSINSTREAM, 0x1a, -1, -1, -1, -1 },
    { "xrefs_", "LJavaUtilTreeSet;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "refnum_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "writer_", "LComAowagieTextPdfPdfWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "index_", "LComAowagieTextPdfByteBuffer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "streamObjects_", "LComAowagieTextPdfByteBuffer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentObjNum_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numObj_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfWriter;", "setRefnum", "I", "addToObjStm", "LComAowagieTextPdfPdfObject;I", "LJavaIoIOException;", "add", "LComAowagieTextPdfPdfObject;", "LComAowagieTextPdfPdfObject;Z", "LComAowagieTextPdfPdfObject;LComAowagieTextPdfPdfIndirectReference;", "LComAowagieTextPdfPdfObject;LComAowagieTextPdfPdfIndirectReference;Z", "LComAowagieTextPdfPdfObject;IZ", "writeCrossReferenceTable", "LJavaIoOutputStream;LComAowagieTextPdfPdfIndirectReference;LComAowagieTextPdfPdfIndirectReference;LComAowagieTextPdfPdfIndirectReference;LComAowagieTextPdfPdfObject;I", "LComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfWriter_PdfBody = { "PdfBody", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x8, 15, 9, 0, 14, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfWriter_PdfBody;
}

@end


#line 294
void ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfWriter *writer) {
  NSObject_init(self);
  self->numObj_ =
#line 286
  0;
  
#line 295
  self->xrefs_ = new_JavaUtilTreeSet_init();
  [self->xrefs_ addWithId:new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(0, 0, ComAowagieTextPdfPdfWriter_GENERATION_MAX)];
  self->position_ = [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(ComAowagieTextPdfPdfWriter_getOs(nil_chk(writer)))) getCounter];
  self->refnum_ = 1;
  self->writer_ = writer;
}


#line 294
ComAowagieTextPdfPdfWriter_PdfBody *new_ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfWriter_PdfBody, initWithComAowagieTextPdfPdfWriter_, writer)
}


#line 294
ComAowagieTextPdfPdfWriter_PdfBody *create_ComAowagieTextPdfPdfWriter_PdfBody_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfWriter_PdfBody, initWithComAowagieTextPdfPdfWriter_, writer)
}


#line 308
ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *ComAowagieTextPdfPdfWriter_PdfBody_addToObjStmWithComAowagieTextPdfPdfObject_withInt_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *obj, jint nObj) {
  if (self->numObj_ >= ComAowagieTextPdfPdfWriter_PdfBody_OBJSINSTREAM) {
    ComAowagieTextPdfPdfWriter_PdfBody_flushObjStm(self);
  }
  if (self->index_ == nil) {
    self->index_ = new_ComAowagieTextPdfByteBuffer_init();
    self->streamObjects_ = new_ComAowagieTextPdfByteBuffer_init();
    self->currentObjNum_ = [self getIndirectReferenceNumber];
    self->numObj_ = 0;
  }
  jint p = [((ComAowagieTextPdfByteBuffer *) nil_chk(self->streamObjects_)) size];
  jint idx = self->numObj_++;
  ComAowagieTextPdfPdfEncryption *enc = ((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_))->crypto_;
  self->writer_->crypto_ = nil;
  [((ComAowagieTextPdfPdfObject *) nil_chk(obj)) toPdfWithComAowagieTextPdfPdfWriter:self->writer_ withJavaIoOutputStream:self->streamObjects_];
  self->writer_->crypto_ = enc;
  (void) [((ComAowagieTextPdfByteBuffer *) nil_chk(self->streamObjects_)) appendWithChar:' '];
  (void) [((ComAowagieTextPdfByteBuffer *) nil_chk([((ComAowagieTextPdfByteBuffer *) nil_chk([((ComAowagieTextPdfByteBuffer *) nil_chk([((ComAowagieTextPdfByteBuffer *) nil_chk(self->index_)) appendWithInt:nObj])) appendWithChar:' '])) appendWithInt:p])) appendWithChar:' '];
  return new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(2, nObj, self->currentObjNum_, idx);
}

void ComAowagieTextPdfPdfWriter_PdfBody_flushObjStm(ComAowagieTextPdfPdfWriter_PdfBody *self) {
  if (self->numObj_ == 0) {
    return;
  }
  jint first = [((ComAowagieTextPdfByteBuffer *) nil_chk(self->index_)) size];
  (void) [((ComAowagieTextPdfByteBuffer *) nil_chk(self->index_)) appendWithComAowagieTextPdfByteBuffer:self->streamObjects_];
  ComAowagieTextPdfPdfStream *stream = new_ComAowagieTextPdfPdfStream_initWithByteArray_([((ComAowagieTextPdfByteBuffer *) nil_chk(self->index_)) toByteArray]);
  [stream flateCompressWithInt:[((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) getCompressionLevel]];
  [stream putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, OBJSTM)];
  [stream putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, N) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(self->numObj_)];
  [stream putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIRST) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(first)];
  (void) ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_(self, stream, self->currentObjNum_);
  self->index_ = nil;
  self->streamObjects_ = nil;
  self->numObj_ = 0;
}


#line 364
ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withBoolean_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, jboolean inObjStm) {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_withBoolean_(self, object, [self getIndirectReferenceNumber], inObjStm);
}


#line 403
ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, ComAowagieTextPdfPdfIndirectReference *ref, jboolean inObjStm) {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_withBoolean_(self, object, [((ComAowagieTextPdfPdfIndirectReference *) nil_chk(ref)) getNumber], inObjStm);
}

ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, jint refNumber) {
  return ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_withBoolean_(self, object, refNumber, true);
}

ComAowagieTextPdfPdfIndirectObject *ComAowagieTextPdfPdfWriter_PdfBody_addWithComAowagieTextPdfPdfObject_withInt_withBoolean_(ComAowagieTextPdfPdfWriter_PdfBody *self, ComAowagieTextPdfPdfObject *object, jint refNumber, jboolean inObjStm) {
  if (inObjStm && [((ComAowagieTextPdfPdfObject *) nil_chk(object)) canBeInObjStm] && [((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) isFullCompression]) {
    ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *pxref = ComAowagieTextPdfPdfWriter_PdfBody_addToObjStmWithComAowagieTextPdfPdfObject_withInt_(self, object, refNumber);
    ComAowagieTextPdfPdfIndirectObject *indirect = new_ComAowagieTextPdfPdfIndirectObject_initWithInt_withComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfWriter_(refNumber, object, self->writer_);
    if (![((JavaUtilTreeSet *) nil_chk(self->xrefs_)) addWithId:pxref]) {
      [self->xrefs_ removeWithId:pxref];
      [self->xrefs_ addWithId:pxref];
    }
    return indirect;
  }
  else {
    ComAowagieTextPdfPdfIndirectObject *indirect = new_ComAowagieTextPdfPdfIndirectObject_initWithInt_withComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfWriter_(refNumber, object, self->writer_);
    ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *pxref = new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(refNumber, self->position_);
    if (![((JavaUtilTreeSet *) nil_chk(self->xrefs_)) addWithId:pxref]) {
      [self->xrefs_ removeWithId:pxref];
      [self->xrefs_ addWithId:pxref];
    }
    [indirect writeToWithJavaIoOutputStream:ComAowagieTextPdfPdfWriter_getOs(nil_chk(self->writer_))];
    self->position_ = [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(ComAowagieTextPdfPdfWriter_getOs(self->writer_))) getCounter];
    return indirect;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfWriter_PdfBody)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfWriter.java"


#line 159
@implementation ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference


#line 179
- (instancetype)initWithInt:(jint)refnum
                    withInt:(jint)offset
                    withInt:(jint)generation {
  ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(self, refnum, offset, generation);
  return self;
}


#line 192
- (instancetype)initWithInt:(jint)refnum
                    withInt:(jint)offset {
  ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(self, refnum, offset);
  return self;
}


#line 199
- (instancetype)initWithInt:(jint)type
                    withInt:(jint)refnum
                    withInt:(jint)offset
                    withInt:(jint)generation {
  ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(self, type, refnum, offset, generation);
  return self;
}


#line 206
- (jint)getRefnum {
  return ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_getRefnum(self);
}


#line 216
- (void)toPdfWithJavaIoOutputStream:(JavaIoOutputStream *)os {
  ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithJavaIoOutputStream_(self, os);
}


#line 232
- (void)toPdfWithInt:(jint)midSize
withJavaIoOutputStream:(JavaIoOutputStream *)os {
  ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithInt_withJavaIoOutputStream_(self, midSize, os);
}


#line 244
- (jint)compareToWithId:(id)o {
  
#line 246
  ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *other = (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) cast_chk(o, [ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference class]);
  return self->refnum_ < ((ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) nil_chk(other))->refnum_ ? -1 : self->refnum_ == other->refnum_ ? 0 : 1;
}


#line 253
- (jboolean)isEqual:(id)obj {
  
#line 255
  if ([obj isKindOfClass:[ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference class]]) {
    ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *other = (ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) obj;
    return self->refnum_ == ((ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *) nil_chk(other))->refnum_;
  }
  else {
    
#line 259
    return false;
  }
}


#line 266
- (NSUInteger)hash {
  
#line 268
  return self->refnum_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 6, 5, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:);
  methods[1].selector = @selector(initWithInt:withInt:);
  methods[2].selector = @selector(initWithInt:withInt:withInt:withInt:);
  methods[3].selector = @selector(getRefnum);
  methods[4].selector = @selector(toPdfWithJavaIoOutputStream:);
  methods[5].selector = @selector(toPdfWithInt:withJavaIoOutputStream:);
  methods[6].selector = @selector(compareToWithId:);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "refnum_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "generation_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "III", "II", "IIII", "toPdf", "LJavaIoOutputStream;", "LJavaIoIOException;", "ILJavaIoOutputStream;", "compareTo", "LNSObject;", "equals", "hashCode", "LComAowagieTextPdfPdfWriter_PdfBody;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference = { "PdfCrossReference", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0xa, 9, 4, 11, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference;
}

@end


#line 179
void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint refnum, jint offset, jint generation) {
  NSObject_init(self);
  
#line 180
  self->type_ = 0;
  self->offset_ = offset;
  self->refnum_ = refnum;
  self->generation_ = generation;
}


#line 179
ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(jint refnum, jint offset, jint generation) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference, initWithInt_withInt_withInt_, refnum, offset, generation)
}


#line 179
ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *create_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_(jint refnum, jint offset, jint generation) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference, initWithInt_withInt_withInt_, refnum, offset, generation)
}


#line 192
void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint refnum, jint offset) {
  NSObject_init(self);
  
#line 193
  self->type_ = 1;
  self->offset_ = offset;
  self->refnum_ = refnum;
  self->generation_ = 0;
}


#line 192
ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(jint refnum, jint offset) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference, initWithInt_withInt_, refnum, offset)
}


#line 192
ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *create_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_(jint refnum, jint offset) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference, initWithInt_withInt_, refnum, offset)
}


#line 199
void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint type, jint refnum, jint offset, jint generation) {
  NSObject_init(self);
  
#line 200
  self->type_ = type;
  self->offset_ = offset;
  self->refnum_ = refnum;
  self->generation_ = generation;
}


#line 199
ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *new_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(jint type, jint refnum, jint offset, jint generation) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference, initWithInt_withInt_withInt_withInt_, type, refnum, offset, generation)
}


#line 199
ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *create_ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_initWithInt_withInt_withInt_withInt_(jint type, jint refnum, jint offset, jint generation) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference, initWithInt_withInt_withInt_withInt_, type, refnum, offset, generation)
}


#line 206
jint ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_getRefnum(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self) {
  return self->refnum_;
}


#line 216
void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithJavaIoOutputStream_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, JavaIoOutputStream *os) {
  JavaLangStringBuffer *off = [new_JavaLangStringBuffer_initWithNSString_(@"0000000000") appendWithInt:self->offset_];
  (void) [((JavaLangStringBuffer *) nil_chk(off)) delete__WithInt:0 withInt:[off java_length] - 10];
  JavaLangStringBuffer *gen = [new_JavaLangStringBuffer_initWithNSString_(@"00000") appendWithInt:self->generation_];
  (void) [((JavaLangStringBuffer *) nil_chk(gen)) delete__WithInt:0 withInt:[gen java_length] - 5];
  
#line 222
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([off appendWithChar:' '])) appendWithJavaLangStringBuffer:gen])) appendWithNSString:self->generation_ == ComAowagieTextPdfPdfWriter_GENERATION_MAX ? @" f \n" : @" n \n"];
  [((JavaIoOutputStream *) nil_chk(os)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_([off description])];
}


#line 232
void ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference_toPdfWithInt_withJavaIoOutputStream_(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference *self, jint midSize, JavaIoOutputStream *os) {
  [((JavaIoOutputStream *) nil_chk(os)) writeWithInt:(jbyte) self->type_];
  while (--midSize >= 0) {
    [os writeWithInt:(jbyte) ((JreURShift32(self->offset_, 8 * midSize)) & (jint) 0xff)];
  }
  [os writeWithInt:(jbyte) ((JreURShift32(self->generation_, 8)) & (jint) 0xff)];
  [os writeWithInt:(jbyte) (self->generation_ & (jint) 0xff)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfWriter_PdfBody_PdfCrossReference)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfWriter.java"


#line 560
@implementation ComAowagieTextPdfPdfWriter_PdfTrailer


#line 580
- (instancetype)initWithInt:(jint)size
                    withInt:(jint)offset
withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)root
withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)info
withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)encryption
withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)fileID
                    withInt:(jint)prevxref {
  ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_(self, size, offset, root, info, encryption, fileID, prevxref);
  return self;
}


#line 604
- (void)toPdfWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withJavaIoOutputStream:(JavaIoOutputStream *)os {
  [((JavaIoOutputStream *) nil_chk(os)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"trailer\n")];
  [super toPdfWithComAowagieTextPdfPdfWriter:nil withJavaIoOutputStream:os];
  [os writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"\nstartxref\n")];
  [os writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(NSString_java_valueOfInt_(self->offset_))];
  [os writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"\n%%EOF\n")];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withComAowagieTextPdfPdfIndirectReference:withComAowagieTextPdfPdfIndirectReference:withComAowagieTextPdfPdfIndirectReference:withComAowagieTextPdfPdfObject:withInt:);
  methods[1].selector = @selector(toPdfWithComAowagieTextPdfPdfWriter:withJavaIoOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "offset_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IILComAowagieTextPdfPdfIndirectReference;LComAowagieTextPdfPdfIndirectReference;LComAowagieTextPdfPdfIndirectReference;LComAowagieTextPdfPdfObject;I", "toPdf", "LComAowagieTextPdfPdfWriter;LJavaIoOutputStream;", "LJavaIoIOException;", "LComAowagieTextPdfPdfWriter;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfWriter_PdfTrailer = { "PdfTrailer", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x8, 2, 1, 4, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfWriter_PdfTrailer;
}

@end


#line 580
void ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_(ComAowagieTextPdfPdfWriter_PdfTrailer *self, jint size, jint offset, ComAowagieTextPdfPdfIndirectReference *root, ComAowagieTextPdfPdfIndirectReference *info, ComAowagieTextPdfPdfIndirectReference *encryption, ComAowagieTextPdfPdfObject *fileID, jint prevxref) {
  ComAowagieTextPdfPdfDictionary_init(self);
  
#line 581
  self->offset_ = offset;
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SIZE) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(size)];
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ROOT) withComAowagieTextPdfPdfObject:root];
  if (info != nil) {
    [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, INFO) withComAowagieTextPdfPdfObject:info];
  }
  if (encryption != nil) {
    [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ENCRYPT) withComAowagieTextPdfPdfObject:encryption];
  }
  if (fileID != nil) {
    [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ID) withComAowagieTextPdfPdfObject:fileID];
  }
  if (prevxref > 0) {
    [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PREV) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(prevxref)];
  }
}


#line 580
ComAowagieTextPdfPdfWriter_PdfTrailer *new_ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_(jint size, jint offset, ComAowagieTextPdfPdfIndirectReference *root, ComAowagieTextPdfPdfIndirectReference *info, ComAowagieTextPdfPdfIndirectReference *encryption, ComAowagieTextPdfPdfObject *fileID, jint prevxref) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfWriter_PdfTrailer, initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_, size, offset, root, info, encryption, fileID, prevxref)
}


#line 580
ComAowagieTextPdfPdfWriter_PdfTrailer *create_ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_(jint size, jint offset, ComAowagieTextPdfPdfIndirectReference *root, ComAowagieTextPdfPdfIndirectReference *info, ComAowagieTextPdfPdfIndirectReference *encryption, ComAowagieTextPdfPdfObject *fileID, jint prevxref) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfWriter_PdfTrailer, initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_, size, offset, root, info, encryption, fileID, prevxref)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfWriter_PdfTrailer)

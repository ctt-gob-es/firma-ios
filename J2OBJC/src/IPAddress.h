//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/IPAddress.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IPAddress")
#ifdef RESTRICT_IPAddress
#define INCLUDE_ALL_IPAddress 0
#else
#define INCLUDE_ALL_IPAddress 1
#endif
#undef RESTRICT_IPAddress

#if !defined (OrgSpongycastleUtilIPAddress_) && (INCLUDE_ALL_IPAddress || defined(INCLUDE_OrgSpongycastleUtilIPAddress))
#define OrgSpongycastleUtilIPAddress_

/*!
 @brief Utility methods for processing String objects containing IP addresses.
 */
@interface OrgSpongycastleUtilIPAddress : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Validate the given IPv4 or IPv6 address.
 @param address the IP address as a String.
 @return true if a valid address, false otherwise
 */
+ (jboolean)isValidWithNSString:(NSString *)address;

/*!
 @brief Validate the given IPv4 address.
 @param address the IP address as a String.
 @return true if a valid IPv4 address, false otherwise
 */
+ (jboolean)isValidIPv4WithNSString:(NSString *)address;

+ (jboolean)isValidIPv4WithNetmaskWithNSString:(NSString *)address;

/*!
 @brief Validate the given IPv6 address.
 @param address the IP address as a String.
 @return true if a valid IPv4 address, false otherwise
 */
+ (jboolean)isValidIPv6WithNSString:(NSString *)address;

+ (jboolean)isValidIPv6WithNetmaskWithNSString:(NSString *)address;

/*!
 @brief Validate the given IPv4 or IPv6 address and netmask.
 @param address the IP address as a String.
 @return true if a valid address with netmask, false otherwise
 */
+ (jboolean)isValidWithNetMaskWithNSString:(NSString *)address;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleUtilIPAddress)

FOUNDATION_EXPORT void OrgSpongycastleUtilIPAddress_init(OrgSpongycastleUtilIPAddress *self);

FOUNDATION_EXPORT OrgSpongycastleUtilIPAddress *new_OrgSpongycastleUtilIPAddress_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleUtilIPAddress *create_OrgSpongycastleUtilIPAddress_init(void);

FOUNDATION_EXPORT jboolean OrgSpongycastleUtilIPAddress_isValidWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean OrgSpongycastleUtilIPAddress_isValidWithNetMaskWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean OrgSpongycastleUtilIPAddress_isValidIPv4WithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean OrgSpongycastleUtilIPAddress_isValidIPv4WithNetmaskWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean OrgSpongycastleUtilIPAddress_isValidIPv6WithNetmaskWithNSString_(NSString *address);

FOUNDATION_EXPORT jboolean OrgSpongycastleUtilIPAddress_isValidIPv6WithNSString_(NSString *address);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleUtilIPAddress)

#endif

#pragma pop_macro("INCLUDE_ALL_IPAddress")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/signers/AOSignInfo.java
//

#include "AOSignInfo.h"
#include "J2ObjC_source.h"

#if !__has_feature(objc_arc)
#error "AOSignInfo must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreSignersAOSignInfo () {
 @public
  /*!
   @brief Formato de firma.
   */
  NSString *format_;
  /*!
   @brief Variante del formato de firma.
   */
  NSString *variant_;
  /*!
   @brief URL desde la que descargar el objeto de firma.
   */
  NSString *urlSignObject_;
  /*!
   @brief URL desde la que descargar el objeto de datos.
   */
  NSString *urlSignedData_;
  /*!
   @brief C&oacute;digo de verificaci&oacute;n de la firma en Base64.
   */
  NSString *b64VerificationCode_;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSignInfo, format_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSignInfo, variant_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSignInfo, urlSignObject_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSignInfo, urlSignedData_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSignInfo, b64VerificationCode_, NSString *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/signers/AOSignInfo.java"


#line 26
@implementation EsGobAfirmaCoreSignersAOSignInfo


#line 47
- (instancetype)initWithNSString:(NSString *)signFormat {
  EsGobAfirmaCoreSignersAOSignInfo_initWithNSString_(self, signFormat);
  return self;
}


#line 53
- (NSString *)getVariant {
  return self->variant_;
}


#line 59
- (void)setVariantWithNSString:(NSString *)variant {
  self->variant_ = variant;
}


#line 69
- (NSString *)getUrlSignObject {
  return self->urlSignObject_;
}


#line 78
- (void)setUrlSignObjectWithNSString:(NSString *)urlSignObject {
  self->urlSignObject_ = urlSignObject;
}


#line 88
- (NSString *)getUrlSignedData {
  return self->urlSignedData_;
}


#line 96
- (void)setUrlSignedDataWithNSString:(NSString *)urlSignedData {
  self->urlSignedData_ = urlSignedData;
}


#line 106
- (NSString *)getB64VerificationCode {
  return self->b64VerificationCode_;
}


#line 115
- (void)setB64VerificationCodeWithNSString:(NSString *)b64VerificationCode {
  self->b64VerificationCode_ = b64VerificationCode;
}


#line 121
- (NSString *)getFormat {
  return self->format_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getVariant);
  methods[2].selector = @selector(setVariantWithNSString:);
  methods[3].selector = @selector(getUrlSignObject);
  methods[4].selector = @selector(setUrlSignObjectWithNSString:);
  methods[5].selector = @selector(getUrlSignedData);
  methods[6].selector = @selector(setUrlSignedDataWithNSString:);
  methods[7].selector = @selector(getB64VerificationCode);
  methods[8].selector = @selector(setB64VerificationCodeWithNSString:);
  methods[9].selector = @selector(getFormat);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "format_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "variant_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "urlSignObject_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "urlSignedData_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "b64VerificationCode_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "setVariant", "setUrlSignObject", "setUrlSignedData", "setB64VerificationCode" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersAOSignInfo = { "AOSignInfo", "es.gob.afirma.core.signers", ptrTable, methods, fields, 7, 0x11, 10, 5, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersAOSignInfo;
}

@end


#line 47
void EsGobAfirmaCoreSignersAOSignInfo_initWithNSString_(EsGobAfirmaCoreSignersAOSignInfo *self, NSString *signFormat) {
  NSObject_init(self);
  self->format_ =
#line 29
  nil;
  self->variant_ =
#line 32
  nil;
  self->urlSignObject_ =
#line 35
  nil;
  self->urlSignedData_ =
#line 38
  nil;
  self->b64VerificationCode_ =
#line 41
  nil;
  
#line 48
  self->format_ = signFormat != nil ? signFormat : @"Desconocido";
}


#line 47
EsGobAfirmaCoreSignersAOSignInfo *new_EsGobAfirmaCoreSignersAOSignInfo_initWithNSString_(NSString *signFormat) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersAOSignInfo, initWithNSString_, signFormat)
}


#line 47
EsGobAfirmaCoreSignersAOSignInfo *create_EsGobAfirmaCoreSignersAOSignInfo_initWithNSString_(NSString *signFormat) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersAOSignInfo, initWithNSString_, signFormat)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersAOSignInfo)

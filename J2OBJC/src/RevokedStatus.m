//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/ocsp/RevokedStatus.java
//

#include "ASN1GeneralizedTime.h"
#include "CRLReason.h"
#include "J2ObjC_source.h"
#include "OCSPUtils.h"
#include "RevokedInfo.h"
#include "RevokedStatus.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "java/util/Date.h"

#if !__has_feature(objc_arc)
#error "RevokedStatus must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/ocsp/RevokedStatus.java"


#line 12
@implementation OrgSpongycastleCertOcspRevokedStatus


#line 17
- (instancetype)initWithOrgSpongycastleAsn1OcspRevokedInfo:(OrgSpongycastleAsn1OcspRevokedInfo *)info {
  OrgSpongycastleCertOcspRevokedStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(self, info);
  return self;
}


#line 23
- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)revocationDate
                             withInt:(jint)reason {
  OrgSpongycastleCertOcspRevokedStatus_initWithJavaUtilDate_withInt_(self, revocationDate, reason);
  return self;
}


#line 30
- (JavaUtilDate *)getRevocationTime {
  
#line 32
  return OrgSpongycastleCertOcspOCSPUtils_extractDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_([((OrgSpongycastleAsn1OcspRevokedInfo *) nil_chk(info_)) getRevocationTime]);
}


#line 35
- (jboolean)hasRevocationReason {
  
#line 37
  return ([((OrgSpongycastleAsn1OcspRevokedInfo *) nil_chk(info_)) getRevocationReason] != nil);
}


#line 46
- (jint)getRevocationReason {
  
#line 48
  if ([((OrgSpongycastleAsn1OcspRevokedInfo *) nil_chk(info_)) getRevocationReason] == nil) {
    
#line 50
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"attempt to get a reason where none is available");
  }
  
#line 53
  return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1X509CRLReason *) nil_chk([((OrgSpongycastleAsn1OcspRevokedInfo *) nil_chk(info_)) getRevocationReason])) getValue])) intValue];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1OcspRevokedInfo:);
  methods[1].selector = @selector(initWithJavaUtilDate:withInt:);
  methods[2].selector = @selector(getRevocationTime);
  methods[3].selector = @selector(hasRevocationReason);
  methods[4].selector = @selector(getRevocationReason);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "info_", "LOrgSpongycastleAsn1OcspRevokedInfo;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1OcspRevokedInfo;", "LJavaUtilDate;I" };
  static const J2ObjcClassInfo _OrgSpongycastleCertOcspRevokedStatus = { "RevokedStatus", "org.spongycastle.cert.ocsp", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertOcspRevokedStatus;
}

@end


#line 17
void OrgSpongycastleCertOcspRevokedStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(OrgSpongycastleCertOcspRevokedStatus *self, OrgSpongycastleAsn1OcspRevokedInfo *info) {
  NSObject_init(self);
  
#line 20
  self->info_ = info;
}


#line 17
OrgSpongycastleCertOcspRevokedStatus *new_OrgSpongycastleCertOcspRevokedStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(OrgSpongycastleAsn1OcspRevokedInfo *info) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspRevokedStatus, initWithOrgSpongycastleAsn1OcspRevokedInfo_, info)
}


#line 17
OrgSpongycastleCertOcspRevokedStatus *create_OrgSpongycastleCertOcspRevokedStatus_initWithOrgSpongycastleAsn1OcspRevokedInfo_(OrgSpongycastleAsn1OcspRevokedInfo *info) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspRevokedStatus, initWithOrgSpongycastleAsn1OcspRevokedInfo_, info)
}


#line 23
void OrgSpongycastleCertOcspRevokedStatus_initWithJavaUtilDate_withInt_(OrgSpongycastleCertOcspRevokedStatus *self, JavaUtilDate *revocationDate, jint reason) {
  NSObject_init(self);
  
#line 27
  self->info_ = new_OrgSpongycastleAsn1OcspRevokedInfo_initWithOrgSpongycastleAsn1ASN1GeneralizedTime_withOrgSpongycastleAsn1X509CRLReason_(new_OrgSpongycastleAsn1ASN1GeneralizedTime_initWithJavaUtilDate_(revocationDate), OrgSpongycastleAsn1X509CRLReason_lookupWithInt_(reason));
}


#line 23
OrgSpongycastleCertOcspRevokedStatus *new_OrgSpongycastleCertOcspRevokedStatus_initWithJavaUtilDate_withInt_(JavaUtilDate *revocationDate, jint reason) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertOcspRevokedStatus, initWithJavaUtilDate_withInt_, revocationDate, reason)
}


#line 23
OrgSpongycastleCertOcspRevokedStatus *create_OrgSpongycastleCertOcspRevokedStatus_initWithJavaUtilDate_withInt_(JavaUtilDate *revocationDate, jint reason) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertOcspRevokedStatus, initWithJavaUtilDate_withInt_, revocationDate, reason)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertOcspRevokedStatus)

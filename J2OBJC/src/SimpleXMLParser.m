//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/xml/simpleparser/SimpleXMLParser.java
//

#include "EntitiesToUnicode.h"
#include "IOSPrimitiveArray.h"
#include "IanaEncodings.h"
#include "J2ObjC_source.h"
#include "SimpleXMLDocHandler.h"
#include "SimpleXMLDocHandlerComment.h"
#include "SimpleXMLParser.h"
#include "java/io/BufferedReader.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Stack.h"

#if !__has_feature(objc_arc)
#error "SimpleXMLParser must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextXmlSimpleparserSimpleXMLParser () {
 @public
  /*!
   @brief the state stack
   */
  JavaUtilStack *stack_;
  /*!
   @brief The current character.
   */
  jint character_;
  /*!
   @brief The previous character.
   */
  jint previousCharacter_;
  /*!
   @brief the line we are currently reading
   */
  jint lines_;
  /*!
   @brief the column where the current character occurs
   */
  jint columns_;
  /*!
   @brief was the last character equivalent to a newline?
   */
  jboolean eol_;
  /*!
   @brief A boolean indicating if the next character should be taken into account
  if it's a space character.When nospace is false, the previous character
  wasn't whitespace.
   @since 2.1.5
   */
  jboolean nowhite_;
  /*!
   @brief the current state
   */
  jint state_;
  /*!
   @brief Are we parsing HTML?
   */
  jboolean html_;
  /*!
   @brief current text (whatever is encountered between tags)
   */
  JavaLangStringBuffer *text_;
  /*!
   @brief current entity (whatever is encountered between & and ;)
   */
  JavaLangStringBuffer *entity_;
  /*!
   @brief current tagname
   */
  NSString *tag_;
  /*!
   @brief current attributes
   */
  JavaUtilHashMap *attributes_;
  /*!
   @brief The handler to which we are going to forward document content
   */
  id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc_;
  /*!
   @brief The handler to which we are going to forward comments.
   */
  id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment_;
  /*!
   @brief Keeps track of the number of tags that are open.
   */
  jint nested_;
  /*!
   @brief the quote character that was used to open the quote.
   */
  jint quoteCharacter_;
  /*!
   @brief the attribute key.
   */
  NSString *attributekey_;
  /*!
   @brief the attribute value.
   */
  NSString *attributevalue_;
}

/*!
 @brief Creates a Simple XML parser object.
 Call go(BufferedReader) immediately after creation.
 */
- (instancetype)initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)doc
             withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment>)comment
                                                             withBoolean:(jboolean)html;

/*!
 @brief Does the actual parsing.Perform this immediately
  after creating the parser object.
 */
- (void)goWithJavaIoReader:(JavaIoReader *)r;

/*!
 @brief Gets a state from the stack
 @return the previous state
 */
- (jint)restoreState;

/*!
 @brief Adds a state to the stack.
 @param s a state to add to the stack
 */
- (void)saveStateWithInt:(jint)s;

/*!
 @brief Flushes the text that is currently in the buffer.
 The text can be ignored, added to the document
  as content or as comment,... depending on the current state.
 */
- (void)flush;

/*!
 @brief Initialized the tag name and attributes.
 */
- (void)initTag OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Sets the name of the tag.
 */
- (void)doTag;

/*!
 @brief processes the tag.
 @param start if true we are dealing with a tag that has just been opened; if false we are closing a tag.
 */
- (void)processTagWithBoolean:(jboolean)start;

/*!
 @brief Throws an exception
 */
- (void)throwExceptionWithNSString:(NSString *)s;

/*!
 @brief Parses the XML document firing the events to the handler.
 @param doc the document handler
 @param r the document. The encoding is already resolved. The reader is not closed
 @throw IOExceptionon error
 */
+ (void)parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)doc
      withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment>)comment
                                                 withJavaIoReader:(JavaIoReader *)r
                                                      withBoolean:(jboolean)html;

+ (NSString *)getDeclaredEncodingWithNSString:(NSString *)decl;

+ (void)parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)doc
                                                 withJavaIoReader:(JavaIoReader *)r;

/*!
 @brief Returns the IANA encoding name that is auto-detected from
  the bytes specified, with the endian-ness of that encoding where appropriate.
 (method found in org.apache.xerces.impl.XMLEntityManager, originally published
  by the Apache Software Foundation under the Apache Software License; now being
  used in iText under the MPL)
 @param b4 The first four bytes of the input.
 @return an IANA-encoding string
 */
+ (NSString *)getEncodingNameWithByteArray:(IOSByteArray *)b4;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, stack_, JavaUtilStack *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, text_, JavaLangStringBuffer *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, entity_, JavaLangStringBuffer *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, tag_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, attributes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, doc_, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, comment_, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment>)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, attributekey_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextXmlSimpleparserSimpleXMLParser, attributevalue_, NSString *)

/*!
 @brief possible states
 */
inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_UNKNOWN(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_UNKNOWN 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, UNKNOWN, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_TEXT(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, TEXT, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_TAG_ENCOUNTERED(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_ENCOUNTERED 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, TAG_ENCOUNTERED, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_EXAMIN_TAG(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_EXAMIN_TAG 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, EXAMIN_TAG, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_TAG_EXAMINED(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_EXAMINED 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, TAG_EXAMINED, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_IN_CLOSETAG(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_IN_CLOSETAG 5
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, IN_CLOSETAG, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_SINGLE_TAG(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_SINGLE_TAG 6
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, SINGLE_TAG, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_CDATA(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_CDATA 7
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, CDATA, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_COMMENT(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_COMMENT 8
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, COMMENT, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_PI(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_PI 9
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, PI, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_ENTITY(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_ENTITY 10
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, ENTITY, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_QUOTE(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_QUOTE 11
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, QUOTE, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_ATTRIBUTE_KEY(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_KEY 12
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, ATTRIBUTE_KEY, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_ATTRIBUTE_EQUAL(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_EQUAL 13
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, ATTRIBUTE_EQUAL, jint)

inline jint ComAowagieTextXmlSimpleparserSimpleXMLParser_get_ATTRIBUTE_VALUE(void);
#define ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_VALUE 14
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextXmlSimpleparserSimpleXMLParser, ATTRIBUTE_VALUE, jint)

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, jboolean html);

__attribute__((unused)) static ComAowagieTextXmlSimpleparserSimpleXMLParser *new_ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, jboolean html) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextXmlSimpleparserSimpleXMLParser *create_ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, jboolean html);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_goWithJavaIoReader_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, JavaIoReader *r);

__attribute__((unused)) static jint ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(ComAowagieTextXmlSimpleparserSimpleXMLParser *self);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_saveStateWithInt_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, jint s);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(ComAowagieTextXmlSimpleparserSimpleXMLParser *self);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(ComAowagieTextXmlSimpleparserSimpleXMLParser *self);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_doTag(ComAowagieTextXmlSimpleparserSimpleXMLParser *self);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, jboolean start);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_throwExceptionWithNSString_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, NSString *s);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withJavaIoReader_withBoolean_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, JavaIoReader *r, jboolean html);

__attribute__((unused)) static NSString *ComAowagieTextXmlSimpleparserSimpleXMLParser_getDeclaredEncodingWithNSString_(NSString *decl);

__attribute__((unused)) static void ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withJavaIoReader_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, JavaIoReader *r);

__attribute__((unused)) static NSString *ComAowagieTextXmlSimpleparserSimpleXMLParser_getEncodingNameWithByteArray_(IOSByteArray *b4);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/xml/simpleparser/SimpleXMLParser.java"


#line 101
@implementation ComAowagieTextXmlSimpleparserSimpleXMLParser


#line 167
- (instancetype)initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)doc
             withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment>)comment
                                                             withBoolean:(jboolean)html {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(self, doc, comment, html);
  return self;
}


#line 179
- (void)goWithJavaIoReader:(JavaIoReader *)r {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_goWithJavaIoReader_(self, r);
}


#line 499
- (jint)restoreState {
  return ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
}


#line 510
- (void)saveStateWithInt:(jint)s {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_saveStateWithInt_(self, s);
}


#line 518
- (void)flush {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
}


#line 550
- (void)initTag {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
}


#line 555
- (void)doTag {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_doTag(self);
}


#line 568
- (void)processTagWithBoolean:(jboolean)start {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, start);
}


#line 579
- (void)throwExceptionWithNSString:(NSString *)s {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_throwExceptionWithNSString_(self, s);
}


#line 589
+ (void)parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)doc
      withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment>)comment
                                                 withJavaIoReader:(JavaIoReader *)r
                                                      withBoolean:(jboolean)html {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withJavaIoReader_withBoolean_(doc, comment, r, html);
}


#line 600
+ (void)parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)doc
                                            withJavaIoInputStream:(JavaIoInputStream *)inArg {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withJavaIoInputStream_(doc, inArg);
}


#line 639
+ (NSString *)getDeclaredEncodingWithNSString:(NSString *)decl {
  return ComAowagieTextXmlSimpleparserSimpleXMLParser_getDeclaredEncodingWithNSString_(decl);
}


#line 669
+ (void)parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>)doc
                                                 withJavaIoReader:(JavaIoReader *)r {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withJavaIoReader_(doc, r);
}


#line 679
+ (NSString *)escapeXMLWithNSString:(NSString *)s
                        withBoolean:(jboolean)onlyASCII {
  return ComAowagieTextXmlSimpleparserSimpleXMLParser_escapeXMLWithNSString_withBoolean_(s, onlyASCII);
}


#line 725
+ (NSString *)getEncodingNameWithByteArray:(IOSByteArray *)b4 {
  return ComAowagieTextXmlSimpleparserSimpleXMLParser_getEncodingNameWithByteArray_(b4);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, 3, -1, -1, -1 },
    { NULL, "V", 0xa, 10, 11, 3, -1, -1, -1 },
    { NULL, "V", 0x9, 10, 12, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 13, 9, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 10, 14, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 15, 16, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 17, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment:withBoolean:);
  methods[1].selector = @selector(goWithJavaIoReader:);
  methods[2].selector = @selector(restoreState);
  methods[3].selector = @selector(saveStateWithInt:);
  methods[4].selector = @selector(flush);
  methods[5].selector = @selector(initTag);
  methods[6].selector = @selector(doTag);
  methods[7].selector = @selector(processTagWithBoolean:);
  methods[8].selector = @selector(throwExceptionWithNSString:);
  methods[9].selector = @selector(parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment:withJavaIoReader:withBoolean:);
  methods[10].selector = @selector(parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:withJavaIoInputStream:);
  methods[11].selector = @selector(getDeclaredEncodingWithNSString:);
  methods[12].selector = @selector(parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler:withJavaIoReader:);
  methods[13].selector = @selector(escapeXMLWithNSString:withBoolean:);
  methods[14].selector = @selector(getEncodingNameWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "UNKNOWN", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_UNKNOWN, 0x1a, -1, -1, -1, -1 },
    { "TEXT", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT, 0x1a, -1, -1, -1, -1 },
    { "TAG_ENCOUNTERED", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_ENCOUNTERED, 0x1a, -1, -1, -1, -1 },
    { "EXAMIN_TAG", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_EXAMIN_TAG, 0x1a, -1, -1, -1, -1 },
    { "TAG_EXAMINED", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_EXAMINED, 0x1a, -1, -1, -1, -1 },
    { "IN_CLOSETAG", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_IN_CLOSETAG, 0x1a, -1, -1, -1, -1 },
    { "SINGLE_TAG", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_SINGLE_TAG, 0x1a, -1, -1, -1, -1 },
    { "CDATA", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_CDATA, 0x1a, -1, -1, -1, -1 },
    { "COMMENT", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_COMMENT, 0x1a, -1, -1, -1, -1 },
    { "PI", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_PI, 0x1a, -1, -1, -1, -1 },
    { "ENTITY", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_ENTITY, 0x1a, -1, -1, -1, -1 },
    { "QUOTE", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_QUOTE, 0x1a, -1, -1, -1, -1 },
    { "ATTRIBUTE_KEY", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_KEY, 0x1a, -1, -1, -1, -1 },
    { "ATTRIBUTE_EQUAL", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_EQUAL, 0x1a, -1, -1, -1, -1 },
    { "ATTRIBUTE_VALUE", "I", .constantValue.asInt = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_VALUE, 0x1a, -1, -1, -1, -1 },
    { "stack_", "LJavaUtilStack;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "character_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "previousCharacter_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lines_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "columns_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "eol_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nowhite_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "state_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "html_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "text_", "LJavaLangStringBuffer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "entity_", "LJavaLangStringBuffer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tag_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributes_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "doc_", "LComAowagieTextXmlSimpleparserSimpleXMLDocHandler;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "comment_", "LComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nested_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "quoteCharacter_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributekey_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributevalue_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextXmlSimpleparserSimpleXMLDocHandler;LComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment;Z", "go", "LJavaIoReader;", "LJavaIoIOException;", "saveState", "I", "processTag", "Z", "throwException", "LNSString;", "parse", "LComAowagieTextXmlSimpleparserSimpleXMLDocHandler;LComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment;LJavaIoReader;Z", "LComAowagieTextXmlSimpleparserSimpleXMLDocHandler;LJavaIoInputStream;", "getDeclaredEncoding", "LComAowagieTextXmlSimpleparserSimpleXMLDocHandler;LJavaIoReader;", "escapeXML", "LNSString;Z", "getEncodingName", "[B" };
  static const J2ObjcClassInfo _ComAowagieTextXmlSimpleparserSimpleXMLParser = { "SimpleXMLParser", "com.aowagie.text.xml.simpleparser", ptrTable, methods, fields, 7, 0x11, 15, 34, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextXmlSimpleparserSimpleXMLParser;
}

@end


#line 167
void ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, jboolean html) {
  NSObject_init(self);
  self->character_ =
#line 122
  0;
  self->previousCharacter_ =
#line 124
  -1;
  self->lines_ =
#line 126
  1;
  self->columns_ =
#line 128
  0;
  self->eol_ =
#line 130
  false;
  self->nowhite_ =
#line 137
  false;
  self->text_ = new_JavaLangStringBuffer_init();
  self->entity_ = new_JavaLangStringBuffer_init();
  self->tag_ =
#line 147
  nil;
  self->attributes_ =
#line 149
  nil;
  self->nested_ =
#line 155
  0;
  self->quoteCharacter_ =
#line 157
  '"';
  self->attributekey_ =
#line 159
  nil;
  self->attributevalue_ =
#line 161
  nil;
  
#line 168
  self->doc_ = doc;
  self->comment_ = comment;
  self->html_ = html;
  self->stack_ = new_JavaUtilStack_init();
  self->state_ = html ? ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT : ComAowagieTextXmlSimpleparserSimpleXMLParser_UNKNOWN;
}


#line 167
ComAowagieTextXmlSimpleparserSimpleXMLParser *new_ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, jboolean html) {
  J2OBJC_NEW_IMPL(ComAowagieTextXmlSimpleparserSimpleXMLParser, initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_, doc, comment, html)
}


#line 167
ComAowagieTextXmlSimpleparserSimpleXMLParser *create_ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, jboolean html) {
  J2OBJC_CREATE_IMPL(ComAowagieTextXmlSimpleparserSimpleXMLParser, initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_, doc, comment, html)
}


#line 179
void ComAowagieTextXmlSimpleparserSimpleXMLParser_goWithJavaIoReader_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, JavaIoReader *r) {
  JavaIoBufferedReader *reader;
  if ([r isKindOfClass:[JavaIoBufferedReader class]]) {
    reader = (JavaIoBufferedReader *) r;
  }
  else {
    
#line 184
    reader = new_JavaIoBufferedReader_initWithJavaIoReader_(r);
  }
  [((id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>) nil_chk(self->doc_)) startDocument];
  while (true) {
    
#line 189
    if (self->previousCharacter_ == -1) {
      self->character_ = [((JavaIoBufferedReader *) nil_chk(reader)) read];
    }
    else {
      
#line 194
      self->character_ = self->previousCharacter_;
      self->previousCharacter_ = -1;
    }
    
#line 199
    if (self->character_ == -1) {
      if (self->html_) {
        if (self->html_ && self->state_ == ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT) {
          ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        }
        [self->doc_ endDocument];
      }
      else {
        
#line 206
        ComAowagieTextXmlSimpleparserSimpleXMLParser_throwExceptionWithNSString_(self, @"Missing end tag");
      }
      return;
    }
    
#line 212
    if (self->character_ == 0x000a && self->eol_) {
      self->eol_ = false;
      continue;
    }
    else
#line 215
    if (self->eol_) {
      self->eol_ = false;
    }
    else
#line 217
    if (self->character_ == 0x000a) {
      self->lines_++;
      self->columns_ = 0;
    }
    else
#line 220
    if (self->character_ == 0x000d) {
      self->eol_ = true;
      self->character_ = 0x000a;
      self->lines_++;
      self->columns_ = 0;
    }
    else {
      
#line 226
      self->columns_++;
    }
    
#line 229
    switch (self->state_) {
      
#line 231
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_UNKNOWN:
      if (self->character_ == '<') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_saveStateWithInt_(self, ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_ENCOUNTERED;
      }
      break;
      
#line 238
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT:
      if (self->character_ == '<') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_saveStateWithInt_(self, self->state_);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_ENCOUNTERED;
      }
      else
#line 243
      if (self->character_ == '&') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_saveStateWithInt_(self, self->state_);
        [((JavaLangStringBuffer *) nil_chk(self->entity_)) setLengthWithInt:0];
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_ENTITY;
      }
      else
#line 247
      if (JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
        if (self->nowhite_) {
          (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
        }
        self->nowhite_ = false;
      }
      else {
        
#line 253
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
        self->nowhite_ = true;
      }
      break;
      
#line 259
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_ENCOUNTERED:
      ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
      if (self->character_ == '/') {
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_IN_CLOSETAG;
      }
      else
#line 263
      if (self->character_ == '?') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_PI;
      }
      else {
        
#line 267
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_EXAMIN_TAG;
      }
      break;
      
#line 273
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_EXAMIN_TAG:
      if (self->character_ == '>') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_doTag(self);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, true);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else
#line 279
      if (self->character_ == '/') {
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_SINGLE_TAG;
      }
      else
#line 281
      if (self->character_ == '-' && [((NSString *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->text_)) description])) isEqual:@"!-"]) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_COMMENT;
      }
      else
#line 284
      if (self->character_ == '[' && [((NSString *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->text_)) description])) isEqual:@"![CDATA"]) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_CDATA;
      }
      else
#line 287
      if (self->character_ == 'E' && [((NSString *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->text_)) description])) isEqual:@"!DOCTYP"]) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_PI;
      }
      else
#line 290
      if (JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_doTag(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_EXAMINED;
      }
      else {
        
#line 294
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
      }
      break;
      
#line 298
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_EXAMINED:
      if (self->character_ == '>') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, true);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else
#line 303
      if (self->character_ == '/') {
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_SINGLE_TAG;
      }
      else
#line 305
      if (JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
      }
      else {
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_KEY;
      }
      break;
      
#line 314
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_IN_CLOSETAG:
      if (self->character_ == '>') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_doTag(self);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, false);
        if (!self->html_ && self->nested_ == 0) {
          return;
        }
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else {
        
#line 323
        if (!JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
          (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
        }
      }
      break;
      
#line 331
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_SINGLE_TAG:
      if (self->character_ != '>') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_throwExceptionWithNSString_(self, JreStrcat("$$$", @"Expected > for tag: <", self->tag_, @"/>"));
      }
      ComAowagieTextXmlSimpleparserSimpleXMLParser_doTag(self);
      ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, true);
      ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, false);
      ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
      if (!self->html_ && self->nested_ == 0) {
        [self->doc_ endDocument];
        return;
      }
      self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      break;
      
#line 347
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_CDATA:
      if (self->character_ == '>' &&
#line 349
      [((NSString *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->text_)) description])) java_hasSuffix:@"]]"]) {
        [((JavaLangStringBuffer *) nil_chk(self->text_)) setLengthWithInt:[self->text_ java_length] - 2];
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else {
        
#line 354
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
      }
      break;
      
#line 360
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_COMMENT:
      if (self->character_ == '>' &&
#line 362
      [((NSString *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->text_)) description])) java_hasSuffix:@"--"]) {
        [((JavaLangStringBuffer *) nil_chk(self->text_)) setLengthWithInt:[self->text_ java_length] - 2];
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else {
        
#line 367
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
      }
      break;
      
#line 372
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_PI:
      if (self->character_ == '>') {
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
        if (self->state_ == ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT) {
          self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_UNKNOWN;
        }
      }
      break;
      
#line 382
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_ENTITY:
      if (self->character_ == ';') {
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
        NSString *cent = [((JavaLangStringBuffer *) nil_chk(self->entity_)) description];
        [self->entity_ setLengthWithInt:0];
        jchar ce = ComAowagieTextXmlSimpleparserEntitiesToUnicode_decodeEntityWithNSString_(cent);
        if (ce == 0x0000) {
          (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:'&'])) appendWithNSString:cent])) appendWithChar:';'];
        }
        else {
          
#line 391
          (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:ce];
        }
      }
      else
#line 393
      if ((self->character_ != '#' && (self->character_ < '0' || self->character_ > '9') && (self->character_ < 'a' || self->character_ > 'z') &&
#line 394
      (self->character_ < 'A' || self->character_ > 'Z')) || [((JavaLangStringBuffer *) nil_chk(self->entity_)) java_length] >= 7) {
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
        self->previousCharacter_ = self->character_;
        (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:'&'])) appendWithNSString:[((JavaLangStringBuffer *) nil_chk(self->entity_)) description]];
        [self->entity_ setLengthWithInt:0];
      }
      else {
        (void) [((JavaLangStringBuffer *) nil_chk(self->entity_)) appendWithChar:(jchar) self->character_];
      }
      break;
      
#line 405
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_QUOTE:
      if (self->html_ && self->quoteCharacter_ == ' ' && self->character_ == '>') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, true);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else if (self->html_ && self->quoteCharacter_ == ' ' && JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_EXAMINED;
      }
      else if (self->html_ && self->quoteCharacter_ == ' ') {
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
      }
      else if (self->character_ == self->quoteCharacter_) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_TAG_EXAMINED;
      }
      else
#line 422
      if ([@" \x0d\n\t" java_indexOf:self->character_] >= 0) {
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:' '];
      }
      else
#line 424
      if (self->character_ == '&') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_saveStateWithInt_(self, self->state_);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_ENTITY;
        [((JavaLangStringBuffer *) nil_chk(self->entity_)) setLengthWithInt:0];
      }
      else {
        
#line 429
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
      }
      break;
      
#line 433
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_KEY:
      if (JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_EQUAL;
      }
      else
#line 437
      if (self->character_ == '=') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_VALUE;
      }
      else
#line 440
      if (self->html_ && self->character_ == '>') {
        [((JavaLangStringBuffer *) nil_chk(self->text_)) setLengthWithInt:0];
        ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, true);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else {
        
#line 446
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
      }
      break;
      
#line 450
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_EQUAL:
      if (self->character_ == '=') {
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_VALUE;
      }
      else
#line 453
      if (JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
      }
      else if (self->html_ && self->character_ == '>') {
        [((JavaLangStringBuffer *) nil_chk(self->text_)) setLengthWithInt:0];
        ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, true);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else
#line 460
      if (self->html_ && self->character_ == '/') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_SINGLE_TAG;
      }
      else
#line 463
      if (self->html_) {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_KEY;
      }
      else {
        
#line 468
        ComAowagieTextXmlSimpleparserSimpleXMLParser_throwExceptionWithNSString_(self, @"Error in attribute processing.");
      }
      break;
      
#line 472
      case ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_VALUE:
      if (self->character_ == '"' || self->character_ == '\'') {
        self->quoteCharacter_ = self->character_;
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_QUOTE;
      }
      else
#line 476
      if (JavaLangCharacter_isWhitespaceWithChar_((jchar) self->character_)) {
      }
      else if (self->html_ && self->character_ == '>') {
        ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(self);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(self, true);
        ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(self);
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(self);
      }
      else
#line 483
      if (self->html_) {
        (void) [((JavaLangStringBuffer *) nil_chk(self->text_)) appendWithChar:(jchar) self->character_];
        self->quoteCharacter_ = ' ';
        self->state_ = ComAowagieTextXmlSimpleparserSimpleXMLParser_QUOTE;
      }
      else {
        
#line 488
        ComAowagieTextXmlSimpleparserSimpleXMLParser_throwExceptionWithNSString_(self, @"Error in attribute processing");
      }
      break;
    }
  }
}


#line 499
jint ComAowagieTextXmlSimpleparserSimpleXMLParser_restoreState(ComAowagieTextXmlSimpleparserSimpleXMLParser *self) {
  if (![((JavaUtilStack *) nil_chk(self->stack_)) empty]) {
    return [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([self->stack_ pop], [JavaLangInteger class])))) intValue];
  }
  else {
    
#line 503
    return ComAowagieTextXmlSimpleparserSimpleXMLParser_UNKNOWN;
  }
}

void ComAowagieTextXmlSimpleparserSimpleXMLParser_saveStateWithInt_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, jint s) {
  (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:new_JavaLangInteger_initWithInt_(s)];
}


#line 518
void ComAowagieTextXmlSimpleparserSimpleXMLParser_flush(ComAowagieTextXmlSimpleparserSimpleXMLParser *self) {
  switch (self->state_) {
    case ComAowagieTextXmlSimpleparserSimpleXMLParser_TEXT:
    case ComAowagieTextXmlSimpleparserSimpleXMLParser_CDATA:
    if ([((JavaLangStringBuffer *) nil_chk(self->text_)) java_length] > 0) {
      [((id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>) nil_chk(self->doc_)) textWithNSString:[self->text_ description]];
    }
    break;
    case ComAowagieTextXmlSimpleparserSimpleXMLParser_COMMENT:
    if (self->comment_ != nil) {
      [self->comment_ commentWithNSString:[((JavaLangStringBuffer *) nil_chk(self->text_)) description]];
    }
    break;
    case ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_KEY:
    self->attributekey_ = [((JavaLangStringBuffer *) nil_chk(self->text_)) description];
    if (self->html_) {
      self->attributekey_ = [((NSString *) nil_chk(self->attributekey_)) lowercaseString];
    }
    break;
    case ComAowagieTextXmlSimpleparserSimpleXMLParser_QUOTE:
    case ComAowagieTextXmlSimpleparserSimpleXMLParser_ATTRIBUTE_VALUE:
    self->attributevalue_ = [((JavaLangStringBuffer *) nil_chk(self->text_)) description];
    (void) [((JavaUtilHashMap *) nil_chk(self->attributes_)) putWithId:self->attributekey_ withId:self->attributevalue_];
    break;
    default:
    
#line 542
    ;
  }
  
#line 545
  [((JavaLangStringBuffer *) nil_chk(self->text_)) setLengthWithInt:0];
}


#line 550
void ComAowagieTextXmlSimpleparserSimpleXMLParser_initTag(ComAowagieTextXmlSimpleparserSimpleXMLParser *self) {
  self->tag_ = nil;
  self->attributes_ = new_JavaUtilLinkedHashMap_init();
}

void ComAowagieTextXmlSimpleparserSimpleXMLParser_doTag(ComAowagieTextXmlSimpleparserSimpleXMLParser *self) {
  if (self->tag_ == nil) {
    self->tag_ = [((JavaLangStringBuffer *) nil_chk(self->text_)) description];
  }
  if (self->html_) {
    self->tag_ = [((NSString *) nil_chk(self->tag_)) lowercaseString];
  }
  [((JavaLangStringBuffer *) nil_chk(self->text_)) setLengthWithInt:0];
}


#line 568
void ComAowagieTextXmlSimpleparserSimpleXMLParser_processTagWithBoolean_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, jboolean start) {
  if (start) {
    self->nested_++;
    [((id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>) nil_chk(self->doc_)) startElementWithNSString:self->tag_ withJavaUtilHashMap:self->attributes_];
  }
  else {
    self->nested_--;
    [((id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler>) nil_chk(self->doc_)) endElementWithNSString:self->tag_];
  }
}

void ComAowagieTextXmlSimpleparserSimpleXMLParser_throwExceptionWithNSString_(ComAowagieTextXmlSimpleparserSimpleXMLParser *self, NSString *s) {
  @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$I$I", s, @" near line ", self->lines_, @", column ", self->columns_));
}


#line 589
void ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withJavaIoReader_withBoolean_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment> comment, JavaIoReader *r, jboolean html) {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initialize();
  
#line 590
  ComAowagieTextXmlSimpleparserSimpleXMLParser *parser = new_ComAowagieTextXmlSimpleparserSimpleXMLParser_initWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withBoolean_(doc, comment, html);
  ComAowagieTextXmlSimpleparserSimpleXMLParser_goWithJavaIoReader_(parser, r);
}


#line 600
void ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withJavaIoInputStream_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, JavaIoInputStream *inArg) {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initialize();
  
#line 601
  IOSByteArray *b4 = [IOSByteArray newArrayWithLength:4];
  jint count = [((JavaIoInputStream *) nil_chk(inArg)) readWithByteArray:b4];
  if (count != 4) {
    @throw new_JavaIoIOException_initWithNSString_(@"Insufficient length.");
  }
  NSString *encoding = ComAowagieTextXmlSimpleparserSimpleXMLParser_getEncodingNameWithByteArray_(b4);
  NSString *decl = nil;
  if ([((NSString *) nil_chk(encoding)) isEqual:@"UTF-8"]) {
    JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
    jint c;
    while ((c = [inArg read]) != -1) {
      if (c == '>') {
        break;
      }
      (void) [sb appendWithChar:(jchar) c];
    }
    decl = [sb description];
  }
  else if ([encoding isEqual:@"CP037"]) {
    JavaIoByteArrayOutputStream *bi = new_JavaIoByteArrayOutputStream_init();
    jint c;
    while ((c = [inArg read]) != -1) {
      if (c == (jint) 0x6e) {
        break;
      }
      [bi writeWithInt:c];
    }
    decl = [NSString java_stringWithBytes:[bi toByteArray] charsetName:@"CP037"];
  }
  if (decl != nil) {
    decl = ComAowagieTextXmlSimpleparserSimpleXMLParser_getDeclaredEncodingWithNSString_(decl);
    if (decl != nil) {
      encoding = decl;
    }
  }
  ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withJavaIoReader_(doc, new_JavaIoInputStreamReader_initWithJavaIoInputStream_withNSString_(inArg, ComAowagieTextXmlSimpleparserIanaEncodings_getJavaEncodingWithNSString_(encoding)));
}


#line 639
NSString *ComAowagieTextXmlSimpleparserSimpleXMLParser_getDeclaredEncodingWithNSString_(NSString *decl) {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initialize();
  
#line 640
  if (decl == nil) {
    return nil;
  }
  jint idx = [decl java_indexOfString:@"encoding"];
  if (idx < 0) {
    return nil;
  }
  jint idx1 = [decl java_indexOf:'"' fromIndex:idx];
  jint idx2 = [decl java_indexOf:'\'' fromIndex:idx];
  if (idx1 == idx2) {
    return nil;
  }
  if ((idx1 < 0 && idx2 > 0) || (idx2 > 0 && idx2 < idx1)) {
    jint idx3 = [decl java_indexOf:'\'' fromIndex:idx2 + 1];
    if (idx3 < 0) {
      return nil;
    }
    return [decl java_substring:idx2 + 1 endIndex:idx3];
  }
  if ((idx2 < 0 && idx1 > 0) || (idx1 > 0 && idx1 < idx2)) {
    jint idx3 = [decl java_indexOf:'"' fromIndex:idx1 + 1];
    if (idx3 < 0) {
      return nil;
    }
    return [decl java_substring:idx1 + 1 endIndex:idx3];
  }
  return nil;
}


#line 669
void ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withJavaIoReader_(id<ComAowagieTextXmlSimpleparserSimpleXMLDocHandler> doc, JavaIoReader *r) {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initialize();
  
#line 670
  ComAowagieTextXmlSimpleparserSimpleXMLParser_parseWithComAowagieTextXmlSimpleparserSimpleXMLDocHandler_withComAowagieTextXmlSimpleparserSimpleXMLDocHandlerComment_withJavaIoReader_withBoolean_(doc, nil, r, false);
}


#line 679
NSString *ComAowagieTextXmlSimpleparserSimpleXMLParser_escapeXMLWithNSString_withBoolean_(NSString *s, jboolean onlyASCII) {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initialize();
  
#line 680
  IOSCharArray *cc = [((NSString *) nil_chk(s)) java_toCharArray];
  jint len = ((IOSCharArray *) nil_chk(cc))->size_;
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  for (jint k = 0; k < len; ++k) {
    jint c = IOSCharArray_Get(cc, k);
    switch (c) {
      case '<':
      (void) [sb appendWithNSString:@"&lt;"];
      break;
      case '>':
      (void) [sb appendWithNSString:@"&gt;"];
      break;
      case '&':
      (void) [sb appendWithNSString:@"&amp;"];
      break;
      case '"':
      (void) [sb appendWithNSString:@"&quot;"];
      break;
      case '\'':
      (void) [sb appendWithNSString:@"&apos;"];
      break;
      default:
      if (c == (jint) 0x9 || c == (jint) 0xA || c == (jint) 0xD || (
#line 703
      c >= (jint) 0x20 && c <= (jint) 0xD7FF) || (
#line 704
      c >= (jint) 0xE000 && c <= (jint) 0xFFFD) || (
#line 705
      c >= (jint) 0x10000 && c <= (jint) 0x10FFFF)) {
        if (onlyASCII && c > 127) {
          (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@"&#"])) appendWithInt:c])) appendWithChar:';'];
        }
        else {
          
#line 709
          (void) [sb appendWithChar:(jchar) c];
        }
      }
    }
  }
  return [sb description];
}


#line 725
NSString *ComAowagieTextXmlSimpleparserSimpleXMLParser_getEncodingNameWithByteArray_(IOSByteArray *b4) {
  ComAowagieTextXmlSimpleparserSimpleXMLParser_initialize();
  
#line 728
  jint b0 = IOSByteArray_Get(nil_chk(b4), 0) & (jint) 0xFF;
  jint b1 = IOSByteArray_Get(b4, 1) & (jint) 0xFF;
  if (b0 == (jint) 0xFE && b1 == (jint) 0xFF) {
    
#line 732
    return @"UTF-16BE";
  }
  if (b0 == (jint) 0xFF && b1 == (jint) 0xFE) {
    
#line 736
    return @"UTF-16LE";
  }
  
#line 740
  jint b2 = IOSByteArray_Get(b4, 2) & (jint) 0xFF;
  if (b0 == (jint) 0xEF && b1 == (jint) 0xBB && b2 == (jint) 0xBF) {
    return @"UTF-8";
  }
  
#line 746
  jint b3 = IOSByteArray_Get(b4, 3) & (jint) 0xFF;
  if (b0 == (jint) 0x00 && b1 == (jint) 0x00 && b2 == (jint) 0x00 && b3 == (jint) 0x3C) {
    
#line 749
    return @"ISO-10646-UCS-4";
  }
  if (b0 == (jint) 0x3C && b1 == (jint) 0x00 && b2 == (jint) 0x00 && b3 == (jint) 0x00) {
    
#line 753
    return @"ISO-10646-UCS-4";
  }
  if (b0 == (jint) 0x00 && b1 == (jint) 0x00 && b2 == (jint) 0x3C && b3 == (jint) 0x00) {
    
#line 758
    return @"ISO-10646-UCS-4";
  }
  if (b0 == (jint) 0x00 && b1 == (jint) 0x3C && b2 == (jint) 0x00 && b3 == (jint) 0x00) {
    
#line 763
    return @"ISO-10646-UCS-4";
  }
  if (b0 == (jint) 0x00 && b1 == (jint) 0x3C && b2 == (jint) 0x00 && b3 == (jint) 0x3F) {
    
#line 769
    return @"UTF-16BE";
  }
  if (b0 == (jint) 0x3C && b1 == (jint) 0x00 && b2 == (jint) 0x3F && b3 == (jint) 0x00) {
    
#line 774
    return @"UTF-16LE";
  }
  if (b0 == (jint) 0x4C && b1 == (jint) 0x6F && b2 == (jint) 0xA7 && b3 == (jint) 0x94) {
    
#line 779
    return @"CP037";
  }
  
#line 783
  return @"UTF-8";
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextXmlSimpleparserSimpleXMLParser)

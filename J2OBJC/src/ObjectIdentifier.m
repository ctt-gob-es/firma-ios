//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/der/ObjectIdentifier.java
//

#include "DerInputBuffer.h"
#include "DerInputStream.h"
#include "DerOutputStreamJ2OBJC.h"
#include "DerValue.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "ObjectIdentifier.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/BigInteger.h"
#include "java/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "ObjectIdentifier must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreSignersDerObjectIdentifier () {
 @public
  /*!
   @brief We use the DER value (no tag, no length) as the internal format
   */
  IOSByteArray *encoding_;
  volatile_id stringForm_;
  /*!
   @brief Changed to Object
   */
  id components_;
  /*!
   */
  jint componentLen_;
  jboolean componentsCalculated_;
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)is;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)os;

- (void)init__WithIntArray:(IOSIntArray *)components
                   withInt:(jint)length OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Private helper method for serialization.To be compatible with old
  versions of JDK.
 @return components in an int array, if all the components are less than
          Integer.MAX_VALUE. Otherwise, null.
 */
- (IOSIntArray *)toIntArray;

/*!
 @brief Repack all bits from input to output.On the both sides, only a portion
  (from the least significant bit) of the 8 bits in a byte is used.
 This
  number is defined as the number of useful bits (NUB) for the array. All the
  used bits from the input byte array and repacked into the output in the
  exactly same order. The output bits are aligned so that the final bit of
  the input (the least significant bit in the last byte), when repacked as
  the final bit of the output, is still at the least significant position.
  Zeroes will be padded on the left side of the first output byte if
  necessary. All unused bits in the output are also zeroed.
  For example: if the input is 01001100 with NUB 8, the output which
  has a NUB 6 will look like:
       00000001 00001100
  The first 2 bits of the output bytes are unused bits. The other bits
  turn out to be 000001 001100. While the 8 bits on the right are from
  the input, the left 4 zeroes are padded to fill the 6 bits space.
 @param inArg the input byte array
 @param ioffset start point inside  <code> in </code>
 @param ilength number of bytes to repack
 @param iw NUB for input
 @param ow NUB for output
 @return the repacked bytes
 */
+ (IOSByteArray *)packWithByteArray:(IOSByteArray *)inArg
                            withInt:(jint)ioffset
                            withInt:(jint)ilength
                            withInt:(jint)iw
                            withInt:(jint)ow;

/*!
 @brief Repack from NUB 8 to a NUB 7 OID sub-identifier, remove all
  unnecessary 0 headings, set the first bit of all non-tail
  output bytes to 1 (as ITU-T Rec.X.690 8.19.2 says), and
  paste it into an existing byte array.
 @param outArg the existing array to be pasted into
 @param ooffset the starting position to paste
 @return the number of bytes pasted
 */
+ (jint)pack7OidWithByteArray:(IOSByteArray *)inArg
                      withInt:(jint)ioffset
                      withInt:(jint)ilength
                withByteArray:(IOSByteArray *)outArg
                      withInt:(jint)ooffset;

/*!
 @brief Repack from NUB 7 to NUB 8, remove all unnecessary 0
  headings, and paste it into an existing byte array.
 @param outArg the existing array to be pasted into
 @param ooffset the starting position to paste
 @return the number of bytes pasted
 */
+ (jint)pack8WithByteArray:(IOSByteArray *)inArg
                   withInt:(jint)ioffset
                   withInt:(jint)ilength
             withByteArray:(IOSByteArray *)outArg
                   withInt:(jint)ooffset;

/*!
 @brief Pack the int into a OID sub-identifier DER encoding
 */
+ (jint)pack7OidWithInt:(jint)input
          withByteArray:(IOSByteArray *)outArg
                withInt:(jint)ooffset;

/*!
 @brief Pack the BigInteger into a OID subidentifier DER encoding
 */
+ (jint)pack7OidWithJavaMathBigInteger:(JavaMathBigInteger *)input
                         withByteArray:(IOSByteArray *)outArg
                               withInt:(jint)ooffset;

/*!
 @brief Check the DER encoding.Since DER encoding defines that the integer bits
  are unsigned, so there's no need to check the MSB.
 */
+ (void)checkWithByteArray:(IOSByteArray *)encoding;

+ (void)checkCountWithInt:(jint)count;

+ (void)checkFirstComponentWithInt:(jint)first;

+ (void)checkFirstComponentWithJavaMathBigInteger:(JavaMathBigInteger *)first;

+ (void)checkSecondComponentWithInt:(jint)first
                            withInt:(jint)second;

+ (void)checkSecondComponentWithInt:(jint)first
             withJavaMathBigInteger:(JavaMathBigInteger *)second;

+ (void)checkOtherComponentWithInt:(jint)i
                           withInt:(jint)num;

+ (void)checkOtherComponentWithInt:(jint)i
            withJavaMathBigInteger:(JavaMathBigInteger *)num;

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersDerObjectIdentifier, encoding_, IOSByteArray *)
J2OBJC_VOLATILE_FIELD_SETTER(EsGobAfirmaCoreSignersDerObjectIdentifier, stringForm_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersDerObjectIdentifier, components_, id)

inline jlong EsGobAfirmaCoreSignersDerObjectIdentifier_get_serialVersionUID(void);
#define EsGobAfirmaCoreSignersDerObjectIdentifier_serialVersionUID 8697030238860181294LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreSignersDerObjectIdentifier, serialVersionUID, jlong)

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_readObjectWithJavaIoObjectInputStream_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, JavaIoObjectInputStream *is);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_writeObjectWithJavaIoObjectOutputStream_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, JavaIoObjectOutputStream *os);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_init__WithIntArray_withInt_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, IOSIntArray *components, jint length);

__attribute__((unused)) static IOSIntArray *EsGobAfirmaCoreSignersDerObjectIdentifier_toIntArray(EsGobAfirmaCoreSignersDerObjectIdentifier *self);

__attribute__((unused)) static IOSByteArray *EsGobAfirmaCoreSignersDerObjectIdentifier_packWithByteArray_withInt_withInt_withInt_withInt_(IOSByteArray *inArg, jint ioffset, jint ilength, jint iw, jint ow);

__attribute__((unused)) static jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithByteArray_withInt_withInt_withByteArray_withInt_(IOSByteArray *inArg, jint ioffset, jint ilength, IOSByteArray *outArg, jint ooffset);

__attribute__((unused)) static jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack8WithByteArray_withInt_withInt_withByteArray_withInt_(IOSByteArray *inArg, jint ioffset, jint ilength, IOSByteArray *outArg, jint ooffset);

__attribute__((unused)) static jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithInt_withByteArray_withInt_(jint input, IOSByteArray *outArg, jint ooffset);

__attribute__((unused)) static jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithJavaMathBigInteger_withByteArray_withInt_(JavaMathBigInteger *input, IOSByteArray *outArg, jint ooffset);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkWithByteArray_(IOSByteArray *encoding);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkCountWithInt_(jint count);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithInt_(jint first);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithJavaMathBigInteger_(JavaMathBigInteger *first);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withInt_(jint first, jint second);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withJavaMathBigInteger_(jint first, JavaMathBigInteger *second);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withInt_(jint i, jint num);

__attribute__((unused)) static void EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withJavaMathBigInteger_(jint i, JavaMathBigInteger *num);

__attribute__((unused)) static IOSObjectArray *EsGobAfirmaCoreSignersDerObjectIdentifier__Annotations$0(void);

inline jlong EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_get_serialVersionUID(void);
#define EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/der/ObjectIdentifier.java"


#line 56
@implementation EsGobAfirmaCoreSignersDerObjectIdentifier


#line 112
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)is {
  EsGobAfirmaCoreSignersDerObjectIdentifier_readObjectWithJavaIoObjectInputStream_(self, is);
}


#line 125
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)os {
  EsGobAfirmaCoreSignersDerObjectIdentifier_writeObjectWithJavaIoObjectOutputStream_(self, os);
}


#line 151
- (instancetype)initWithNSString:(NSString *)oid {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initWithNSString_(self, oid);
  return self;
}


#line 227
- (instancetype)initWithIntArray:(IOSIntArray *)values {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initWithIntArray_(self, values);
  return self;
}


#line 250
- (instancetype)initWithEsGobAfirmaCoreSignersDerDerInputStream:(EsGobAfirmaCoreSignersDerDerInputStream *)inArg {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputStream_(self, inArg);
  return self;
}


#line 288
- (instancetype)initWithEsGobAfirmaCoreSignersDerDerInputBuffer:(EsGobAfirmaCoreSignersDerDerInputBuffer *)buf {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(self, buf);
  return self;
}


#line 296
- (void)init__WithIntArray:(IOSIntArray *)components
                   withInt:(jint)length {
  EsGobAfirmaCoreSignersDerObjectIdentifier_init__WithIntArray_withInt_(self, components, length);
}


#line 326
+ (EsGobAfirmaCoreSignersDerObjectIdentifier *)newInternalWithIntArray:(IOSIntArray *)values {
  return EsGobAfirmaCoreSignersDerObjectIdentifier_newInternalWithIntArray_(values);
}


#line 338
- (void)encodeWithEsGobAfirmaCoreSignersDerDerOutputStreamJ2OBJC:(EsGobAfirmaCoreSignersDerDerOutputStreamJ2OBJC *)outArg {
  
#line 340
  [((EsGobAfirmaCoreSignersDerDerOutputStreamJ2OBJC *) nil_chk(outArg)) writeWithByte:EsGobAfirmaCoreSignersDerDerValue_tag_ObjectId withByteArray:self->encoding_];
}


#line 349
- (jboolean)equalsWithEsGobAfirmaCoreSignersDerObjectIdentifier:(EsGobAfirmaCoreSignersDerObjectIdentifier *)other {
  
#line 351
  return [self isEqual:other];
}


#line 359
- (jboolean)isEqual:(id)obj {
  
#line 361
  if (JreObjectEqualsEquals(self, obj)) {
    return true;
  }
  if ([obj isKindOfClass:[EsGobAfirmaCoreSignersDerObjectIdentifier class]] == false) {
    return false;
  }
  EsGobAfirmaCoreSignersDerObjectIdentifier *other = (EsGobAfirmaCoreSignersDerObjectIdentifier *) cast_chk(obj, [EsGobAfirmaCoreSignersDerObjectIdentifier class]);
  return JavaUtilArrays_equalsWithByteArray_withByteArray_(self->encoding_, ((EsGobAfirmaCoreSignersDerObjectIdentifier *) nil_chk(other))->encoding_);
}


#line 371
- (NSUInteger)hash {
  
#line 373
  return JavaUtilArrays_hashCodeWithByteArray_(self->encoding_);
}


#line 382
- (IOSIntArray *)toIntArray {
  return EsGobAfirmaCoreSignersDerObjectIdentifier_toIntArray(self);
}


#line 441
- (NSString *)description {
  
#line 443
  NSString *s = JreLoadVolatileId(&self->stringForm_);
  if (s == nil) {
    jint length = ((IOSByteArray *) nil_chk(self->encoding_))->size_;
    JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithInt_(length * 4);
    
#line 448
    jint fromPos = 0;
    for (jint i = 0; i < length; i++) {
      if ((IOSByteArray_Get(nil_chk(self->encoding_), i) & (jint) 0x80) == 0) {
        
#line 452
        if (fromPos != 0) {
          (void) [sb appendWithChar:'.'];
        }
        if (i - fromPos + 1 > 4) {
          JavaMathBigInteger *big = new_JavaMathBigInteger_initWithByteArray_(EsGobAfirmaCoreSignersDerObjectIdentifier_packWithByteArray_withInt_withInt_withInt_withInt_(self->encoding_, fromPos, i - fromPos + 1, 7, 8));
          if (fromPos == 0) {
            
#line 460
            (void) [sb appendWithNSString:@"2."];
            (void) [sb appendWithId:[big subtractWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(80)]];
          }
          else {
            
#line 463
            (void) [sb appendWithId:big];
          }
        }
        else {
          
#line 466
          jint retval = 0;
          for (jint j = fromPos; j <= i; j++) {
            JreLShiftAssignInt(&retval, 7);
            jbyte tmp = IOSByteArray_Get(nil_chk(self->encoding_), j);
            retval |= tmp & (jint) 0x07f;
          }
          if (fromPos == 0) {
            if (retval < 80) {
              (void) [sb appendWithInt:JreIntDiv(retval, 40)];
              (void) [sb appendWithChar:'.'];
              (void) [sb appendWithInt:JreIntMod(retval, 40)];
            }
            else {
              
#line 478
              (void) [sb appendWithNSString:@"2."];
              (void) [sb appendWithInt:retval - 80];
            }
          }
          else {
            
#line 482
            (void) [sb appendWithInt:retval];
          }
        }
        fromPos = i + 1;
      }
    }
    s = [sb description];
    (void) JreVolatileStrongAssign(&self->stringForm_, s);
  }
  return s;
}


#line 519
+ (IOSByteArray *)packWithByteArray:(IOSByteArray *)inArg
                            withInt:(jint)ioffset
                            withInt:(jint)ilength
                            withInt:(jint)iw
                            withInt:(jint)ow {
  return EsGobAfirmaCoreSignersDerObjectIdentifier_packWithByteArray_withInt_withInt_withInt_withInt_(inArg, ioffset, ilength, iw, ow);
}


#line 562
+ (jint)pack7OidWithByteArray:(IOSByteArray *)inArg
                      withInt:(jint)ioffset
                      withInt:(jint)ilength
                withByteArray:(IOSByteArray *)outArg
                      withInt:(jint)ooffset {
  return EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithByteArray_withInt_withInt_withByteArray_withInt_(inArg, ioffset, ilength, outArg, ooffset);
}


#line 582
+ (jint)pack8WithByteArray:(IOSByteArray *)inArg
                   withInt:(jint)ioffset
                   withInt:(jint)ilength
             withByteArray:(IOSByteArray *)outArg
                   withInt:(jint)ooffset {
  return EsGobAfirmaCoreSignersDerObjectIdentifier_pack8WithByteArray_withInt_withInt_withByteArray_withInt_(inArg, ioffset, ilength, outArg, ooffset);
}


#line 597
+ (jint)pack7OidWithInt:(jint)input
          withByteArray:(IOSByteArray *)outArg
                withInt:(jint)ooffset {
  return EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithInt_withByteArray_withInt_(input, outArg, ooffset);
}


#line 609
+ (jint)pack7OidWithJavaMathBigInteger:(JavaMathBigInteger *)input
                         withByteArray:(IOSByteArray *)outArg
                               withInt:(jint)ooffset {
  return EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithJavaMathBigInteger_withByteArray_withInt_(input, outArg, ooffset);
}


#line 626
+ (void)checkWithByteArray:(IOSByteArray *)encoding {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkWithByteArray_(encoding);
}


#line 642
+ (void)checkCountWithInt:(jint)count {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkCountWithInt_(count);
}


#line 648
+ (void)checkFirstComponentWithInt:(jint)first {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithInt_(first);
}


#line 654
+ (void)checkFirstComponentWithJavaMathBigInteger:(JavaMathBigInteger *)first {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithJavaMathBigInteger_(first);
}


#line 661
+ (void)checkSecondComponentWithInt:(jint)first
                            withInt:(jint)second {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withInt_(first, second);
}


#line 667
+ (void)checkSecondComponentWithInt:(jint)first
             withJavaMathBigInteger:(JavaMathBigInteger *)second {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withJavaMathBigInteger_(first, second);
}


#line 675
+ (void)checkOtherComponentWithInt:(jint)i
                           withInt:(jint)num {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withInt_(i, num);
}


#line 681
+ (void)checkOtherComponentWithInt:(jint)i
            withJavaMathBigInteger:(JavaMathBigInteger *)num {
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withJavaMathBigInteger_(i, num);
}

- (void)__javaClone:(EsGobAfirmaCoreSignersDerObjectIdentifier *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&stringForm_, &original->stringForm_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x2, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, 5, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, 5, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, 5, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, 5, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 9, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersDerObjectIdentifier;", 0x9, 12, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 13, 14, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 16, -1, -1, 17, -1 },
    { NULL, "Z", 0x1, 15, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 21, 22, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 23, 24, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 25, 24, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 23, 26, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 23, 27, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 28, 29, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 30, 31, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 32, 31, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 32, 33, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 34, 35, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 34, 36, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 37, 35, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 37, 36, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[1].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithIntArray:);
  methods[4].selector = @selector(initWithEsGobAfirmaCoreSignersDerDerInputStream:);
  methods[5].selector = @selector(initWithEsGobAfirmaCoreSignersDerDerInputBuffer:);
  methods[6].selector = @selector(init__WithIntArray:withInt:);
  methods[7].selector = @selector(newInternalWithIntArray:);
  methods[8].selector = @selector(encodeWithEsGobAfirmaCoreSignersDerDerOutputStreamJ2OBJC:);
  methods[9].selector = @selector(equalsWithEsGobAfirmaCoreSignersDerObjectIdentifier:);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(toIntArray);
  methods[13].selector = @selector(description);
  methods[14].selector = @selector(packWithByteArray:withInt:withInt:withInt:withInt:);
  methods[15].selector = @selector(pack7OidWithByteArray:withInt:withInt:withByteArray:withInt:);
  methods[16].selector = @selector(pack8WithByteArray:withInt:withInt:withByteArray:withInt:);
  methods[17].selector = @selector(pack7OidWithInt:withByteArray:withInt:);
  methods[18].selector = @selector(pack7OidWithJavaMathBigInteger:withByteArray:withInt:);
  methods[19].selector = @selector(checkWithByteArray:);
  methods[20].selector = @selector(checkCountWithInt:);
  methods[21].selector = @selector(checkFirstComponentWithInt:);
  methods[22].selector = @selector(checkFirstComponentWithJavaMathBigInteger:);
  methods[23].selector = @selector(checkSecondComponentWithInt:withInt:);
  methods[24].selector = @selector(checkSecondComponentWithInt:withJavaMathBigInteger:);
  methods[25].selector = @selector(checkOtherComponentWithInt:withInt:);
  methods[26].selector = @selector(checkOtherComponentWithInt:withJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "encoding_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "stringForm_", "LNSString;", .constantValue.asLong = 0, 0xc2, -1, -1, -1, -1 },
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaCoreSignersDerObjectIdentifier_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "components_", "LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "componentLen_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "componentsCalculated_", "Z", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;", "LJavaIoIOException;", "LNSString;", "[I", "LEsGobAfirmaCoreSignersDerDerInputStream;", "LEsGobAfirmaCoreSignersDerDerInputBuffer;", "init", "[II", "newInternal", "encode", "LEsGobAfirmaCoreSignersDerDerOutputStreamJ2OBJC;", "equals", "LEsGobAfirmaCoreSignersDerObjectIdentifier;", (void *)&EsGobAfirmaCoreSignersDerObjectIdentifier__Annotations$0, "LNSObject;", "hashCode", "toString", "pack", "[BIIII", "pack7Oid", "[BII[BI", "pack8", "I[BI", "LJavaMathBigInteger;[BI", "check", "[B", "checkCount", "I", "checkFirstComponent", "LJavaMathBigInteger;", "checkSecondComponent", "II", "ILJavaMathBigInteger;", "checkOtherComponent", "LEsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersDerObjectIdentifier = { "ObjectIdentifier", "es.gob.afirma.core.signers.der", ptrTable, methods, fields, 7, 0x11, 27, 6, -1, 38, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersDerObjectIdentifier;
}

@end


#line 112
void EsGobAfirmaCoreSignersDerObjectIdentifier_readObjectWithJavaIoObjectInputStream_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, JavaIoObjectInputStream *is) {
  
#line 114
  [((JavaIoObjectInputStream *) nil_chk(is)) defaultReadObject];
  
#line 116
  if (self->encoding_ == nil) {
    IOSIntArray *comp = (IOSIntArray *) cast_chk(self->components_, [IOSIntArray class]);
    if (self->componentLen_ > ((IOSIntArray *) nil_chk(comp))->size_) {
      self->componentLen_ = comp->size_;
    }
    EsGobAfirmaCoreSignersDerObjectIdentifier_init__WithIntArray_withInt_(self, comp, self->componentLen_);
  }
}


#line 125
void EsGobAfirmaCoreSignersDerObjectIdentifier_writeObjectWithJavaIoObjectOutputStream_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, JavaIoObjectOutputStream *os) {
  
#line 127
  if (!self->componentsCalculated_) {
    IOSIntArray *comps = EsGobAfirmaCoreSignersDerObjectIdentifier_toIntArray(self);
    if (comps != nil) {
      self->components_ = comps;
      self->componentLen_ = comps->size_;
    }
    else {
      
#line 133
      self->components_ = JreLoadStatic(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK, theOne);
    }
    self->componentsCalculated_ = true;
  }
  [((JavaIoObjectOutputStream *) nil_chk(os)) defaultWriteObject];
}


#line 151
void EsGobAfirmaCoreSignersDerObjectIdentifier_initWithNSString_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, NSString *oid) {
  NSObject_init(self);
  self->encoding_ =
#line 63
  nil;
  self->components_ =
#line 103
  nil;
  self->componentLen_ =
#line 107
  -1;
  self->componentsCalculated_ =
#line 110
  false;
  
#line 153
  jint ch = '.';
  jint start = 0;
  jint end = 0;
  
#line 157
  jint pos = 0;
  IOSByteArray *tmp = [IOSByteArray newArrayWithLength:[((NSString *) nil_chk(oid)) java_length]];
  jint first = 0;
  jint second;
  jint count = 0;
  
#line 163
  @try {
    NSString *comp = nil;
    do {
      jint length = 0;
      end = [oid java_indexOf:ch fromIndex:start];
      if (end == -1) {
        comp = [oid java_substring:start];
        length = [oid java_length] - start;
      }
      else {
        
#line 172
        comp = [oid java_substring:start endIndex:end];
        length = end - start;
      }
      
#line 176
      if (length > 9) {
        JavaMathBigInteger *bignum = new_JavaMathBigInteger_initWithNSString_(comp);
        if (count == 0) {
          EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithJavaMathBigInteger_(bignum);
          first = [bignum intValue];
        }
        else {
          
#line 182
          if (count == 1) {
            EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withJavaMathBigInteger_(first, bignum);
            bignum = [bignum addWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(40 * first)];
          }
          else {
            
#line 186
            EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withJavaMathBigInteger_(count, bignum);
          }
          pos += EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithJavaMathBigInteger_withByteArray_withInt_(bignum, tmp, pos);
        }
      }
      else {
        
#line 191
        jint num = JavaLangInteger_parseIntWithNSString_(comp);
        if (count == 0) {
          EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithInt_(num);
          first = num;
        }
        else {
          
#line 196
          if (count == 1) {
            EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withInt_(first, num);
            num += 40 * first;
          }
          else {
            
#line 200
            EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withInt_(count, num);
          }
          pos += EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithInt_withByteArray_withInt_(num, tmp, pos);
        }
      }
      start = end + 1;
      count++;
    }
    while (
#line 207
    end != -1);
    
#line 209
    EsGobAfirmaCoreSignersDerObjectIdentifier_checkCountWithInt_(count);
    self->encoding_ = [IOSByteArray newArrayWithLength:pos];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tmp, 0, self->encoding_, 0, pos);
    (void) JreVolatileStrongAssign(&self->stringForm_, oid);
  }
  @catch (
#line 213
  JavaIoIOException *ioe) {
    @throw ioe;
  }
  @catch (
#line 215
  JavaLangException *e) {
    @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"ObjectIdentifier() -- Invalid format: ",
#line 217
    [e description]), e);
  }
}


#line 151
EsGobAfirmaCoreSignersDerObjectIdentifier *new_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithNSString_(NSString *oid) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithNSString_, oid)
}


#line 151
EsGobAfirmaCoreSignersDerObjectIdentifier *create_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithNSString_(NSString *oid) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithNSString_, oid)
}


#line 227
void EsGobAfirmaCoreSignersDerObjectIdentifier_initWithIntArray_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, IOSIntArray *values) {
  NSObject_init(self);
  self->encoding_ =
#line 63
  nil;
  self->components_ =
#line 103
  nil;
  self->componentLen_ =
#line 107
  -1;
  self->componentsCalculated_ =
#line 110
  false;
  
#line 229
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkCountWithInt_(((IOSIntArray *) nil_chk(values))->size_);
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithInt_(IOSIntArray_Get(values, 0));
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withInt_(IOSIntArray_Get(values, 0), IOSIntArray_Get(values, 1));
  for (jint i = 2; i < values->size_; i++) {
    EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withInt_(i, IOSIntArray_Get(values, i));
  }
  EsGobAfirmaCoreSignersDerObjectIdentifier_init__WithIntArray_withInt_(self, values, values->size_);
}


#line 227
EsGobAfirmaCoreSignersDerObjectIdentifier *new_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithIntArray_(IOSIntArray *values) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithIntArray_, values)
}


#line 227
EsGobAfirmaCoreSignersDerObjectIdentifier *create_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithIntArray_(IOSIntArray *values) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithIntArray_, values)
}


#line 250
void EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputStream_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, EsGobAfirmaCoreSignersDerDerInputStream *inArg) {
  NSObject_init(self);
  self->encoding_ =
#line 63
  nil;
  self->components_ =
#line 103
  nil;
  self->componentLen_ =
#line 107
  -1;
  self->componentsCalculated_ =
#line 110
  false;
  
#line 252
  jbyte type_id;
  jint bufferEnd;
  
#line 264
  type_id = (jbyte) [((EsGobAfirmaCoreSignersDerDerInputStream *) nil_chk(inArg)) getByte];
  if (type_id != EsGobAfirmaCoreSignersDerDerValue_tag_ObjectId) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$BC", @"ObjectIdentifier() -- data isn't an object ID (tag = ",
#line 268
    type_id, ')'));
  }
  
#line 272
  jint len = [inArg getLength];
  if (len > [inArg available]) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I$I", @"ObjectIdentifier() -- length exceedsdata available.  Length: ",
#line 275
    len, @", Available: ",
#line 276
    [inArg available]));
  }
  self->encoding_ = [IOSByteArray newArrayWithLength:len];
  [inArg getBytesWithByteArray:self->encoding_];
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkWithByteArray_(self->encoding_);
}


#line 250
EsGobAfirmaCoreSignersDerObjectIdentifier *new_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputStream_(EsGobAfirmaCoreSignersDerDerInputStream *inArg) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithEsGobAfirmaCoreSignersDerDerInputStream_, inArg)
}


#line 250
EsGobAfirmaCoreSignersDerObjectIdentifier *create_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputStream_(EsGobAfirmaCoreSignersDerDerInputStream *inArg) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithEsGobAfirmaCoreSignersDerDerInputStream_, inArg)
}


#line 288
void EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, EsGobAfirmaCoreSignersDerDerInputBuffer *buf) {
  NSObject_init(self);
  self->encoding_ =
#line 63
  nil;
  self->components_ =
#line 103
  nil;
  self->componentLen_ =
#line 107
  -1;
  self->componentsCalculated_ =
#line 110
  false;
  
#line 290
  EsGobAfirmaCoreSignersDerDerInputStream *in = new_EsGobAfirmaCoreSignersDerDerInputStream_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(buf);
  self->encoding_ = [IOSByteArray newArrayWithLength:[in available]];
  [in getBytesWithByteArray:self->encoding_];
  EsGobAfirmaCoreSignersDerObjectIdentifier_checkWithByteArray_(self->encoding_);
}


#line 288
EsGobAfirmaCoreSignersDerObjectIdentifier *new_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(EsGobAfirmaCoreSignersDerDerInputBuffer *buf) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithEsGobAfirmaCoreSignersDerDerInputBuffer_, buf)
}


#line 288
EsGobAfirmaCoreSignersDerObjectIdentifier *create_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithEsGobAfirmaCoreSignersDerDerInputBuffer_(EsGobAfirmaCoreSignersDerDerInputBuffer *buf) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier, initWithEsGobAfirmaCoreSignersDerDerInputBuffer_, buf)
}


#line 296
void EsGobAfirmaCoreSignersDerObjectIdentifier_init__WithIntArray_withInt_(EsGobAfirmaCoreSignersDerObjectIdentifier *self, IOSIntArray *components, jint length) {
  jint pos = 0;
  IOSByteArray *tmp = [IOSByteArray newArrayWithLength:length * 5 + 1];
  
#line 300
  if (IOSIntArray_Get(nil_chk(components), 1) < JavaLangInteger_MAX_VALUE - IOSIntArray_Get(components, 0) * 40) {
    pos += EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithInt_withByteArray_withInt_(IOSIntArray_Get(components, 0) * 40 + IOSIntArray_Get(components, 1), tmp, pos);
  }
  else {
    
#line 303
    JavaMathBigInteger *big = JavaMathBigInteger_valueOfWithLong_(IOSIntArray_Get(components, 1));
    big = [((JavaMathBigInteger *) nil_chk(big)) addWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(IOSIntArray_Get(components, 0) * 40)];
    pos += EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithJavaMathBigInteger_withByteArray_withInt_(big, tmp, pos);
  }
  
#line 308
  for (jint i = 2; i < length; i++) {
    pos += EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithInt_withByteArray_withInt_(IOSIntArray_Get(components, i), tmp, pos);
  }
  self->encoding_ = [IOSByteArray newArrayWithLength:pos];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tmp, 0, self->encoding_, 0, pos);
}


#line 326
EsGobAfirmaCoreSignersDerObjectIdentifier *EsGobAfirmaCoreSignersDerObjectIdentifier_newInternalWithIntArray_(IOSIntArray *values) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 327
  @try {
    return new_EsGobAfirmaCoreSignersDerObjectIdentifier_initWithIntArray_(values);
  }
  @catch (
#line 329
  JavaIoIOException *ex) {
    @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(ex);
  }
}


#line 382
IOSIntArray *EsGobAfirmaCoreSignersDerObjectIdentifier_toIntArray(EsGobAfirmaCoreSignersDerObjectIdentifier *self) {
  jint length = ((IOSByteArray *) nil_chk(self->encoding_))->size_;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:20];
  jint which = 0;
  jint fromPos = 0;
  for (jint i = 0; i < length; i++) {
    if ((IOSByteArray_Get(nil_chk(self->encoding_), i) & (jint) 0x80) == 0) {
      
#line 390
      if (i - fromPos + 1 > 4) {
        JavaMathBigInteger *big = new_JavaMathBigInteger_initWithByteArray_(EsGobAfirmaCoreSignersDerObjectIdentifier_packWithByteArray_withInt_withInt_withInt_withInt_(self->encoding_, fromPos, i - fromPos + 1, 7, 8));
        if (fromPos == 0) {
          *IOSIntArray_GetRef(nil_chk(result), which++) = 2;
          JavaMathBigInteger *second = [big subtractWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(80)];
          if ([((JavaMathBigInteger *) nil_chk(second)) compareToWithId:JavaMathBigInteger_valueOfWithLong_(JavaLangInteger_MAX_VALUE)] == 1) {
            return nil;
          }
          else {
            
#line 398
            *IOSIntArray_GetRef(result, which++) = [second intValue];
          }
        }
        else {
          
#line 401
          if ([big compareToWithId:JavaMathBigInteger_valueOfWithLong_(JavaLangInteger_MAX_VALUE)] == 1) {
            return nil;
          }
          else {
            
#line 404
            *IOSIntArray_GetRef(nil_chk(result), which++) = [big intValue];
          }
        }
      }
      else {
        
#line 408
        jint retval = 0;
        for (jint j = fromPos; j <= i; j++) {
          JreLShiftAssignInt(&retval, 7);
          jbyte tmp = IOSByteArray_Get(self->encoding_, j);
          retval |= tmp & (jint) 0x07f;
        }
        if (fromPos == 0) {
          if (retval < 80) {
            *IOSIntArray_GetRef(nil_chk(result), which++) = JreIntDiv(retval, 40);
            *IOSIntArray_GetRef(result, which++) = JreIntMod(retval, 40);
          }
          else {
            
#line 419
            *IOSIntArray_GetRef(nil_chk(result), which++) = 2;
            *IOSIntArray_GetRef(result, which++) = retval - 80;
          }
        }
        else {
          
#line 423
          *IOSIntArray_GetRef(nil_chk(result), which++) = retval;
        }
      }
      fromPos = i + 1;
    }
    if (which >= ((IOSIntArray *) nil_chk(result))->size_) {
      result = JavaUtilArrays_copyOfWithIntArray_withInt_(result, which + 10);
    }
  }
  return JavaUtilArrays_copyOfWithIntArray_withInt_(result, which);
}


#line 519
IOSByteArray *EsGobAfirmaCoreSignersDerObjectIdentifier_packWithByteArray_withInt_withInt_withInt_withInt_(IOSByteArray *inArg, jint ioffset, jint ilength, jint iw, jint ow) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 520
  JreAssert(iw > 0 && iw <= 8, @"input NUB must be between 1 and 8");
  JreAssert(ow > 0 && ow <= 8, @"output NUB must be between 1 and 8");
  
#line 523
  if (iw == ow) {
    return [((IOSByteArray *) nil_chk(inArg)) java_clone];
  }
  
#line 527
  jint bits = ilength * iw;
  IOSByteArray *out = [IOSByteArray newArrayWithLength:JreIntDiv((bits + ow - 1), ow)];
  
#line 531
  jint ipos = 0;
  
#line 534
  jint opos = JreIntDiv((bits + ow - 1), ow) * ow - bits;
  
#line 536
  while (ipos < bits) {
    jint count = iw - JreIntMod(ipos, iw);
    if (count > ow - JreIntMod(opos, ow)) {
      count = ow - JreIntMod(opos, ow);
    }
    
#line 542
    *IOSByteArray_GetRef(out, JreIntDiv(opos, ow)) |= JreLShift32(
#line 543
    ((JreRShift32(IOSByteArray_Get(nil_chk(inArg), ioffset + JreIntDiv(ipos, iw)) + 256,
#line 544
    iw - JreIntMod(ipos, iw) - count)) & (
#line 545
    (JreLShift32(1, count)) - 1)),
#line 546
    ow - JreIntMod(opos, ow) - count);
    ipos += count;
    opos += count;
  }
  return out;
}


#line 562
jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithByteArray_withInt_withInt_withByteArray_withInt_(IOSByteArray *inArg, jint ioffset, jint ilength, IOSByteArray *outArg, jint ooffset) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 563
  IOSByteArray *pack = EsGobAfirmaCoreSignersDerObjectIdentifier_packWithByteArray_withInt_withInt_withInt_withInt_(inArg, ioffset, ilength, 8, 7);
  jint firstNonZero = ((IOSByteArray *) nil_chk(pack))->size_ - 1;
  for (jint i = pack->size_ - 2; i >= 0; i--) {
    if (IOSByteArray_Get(pack, i) != 0) {
      firstNonZero = i;
    }
    *IOSByteArray_GetRef(pack, i) |= (jint) 0x80;
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(pack, firstNonZero, outArg, ooffset, pack->size_ - firstNonZero);
  return pack->size_ - firstNonZero;
}


#line 582
jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack8WithByteArray_withInt_withInt_withByteArray_withInt_(IOSByteArray *inArg, jint ioffset, jint ilength, IOSByteArray *outArg, jint ooffset) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 583
  IOSByteArray *pack = EsGobAfirmaCoreSignersDerObjectIdentifier_packWithByteArray_withInt_withInt_withInt_withInt_(inArg, ioffset, ilength, 7, 8);
  jint firstNonZero = ((IOSByteArray *) nil_chk(pack))->size_ - 1;
  for (jint i = pack->size_ - 2; i >= 0; i--) {
    if (IOSByteArray_Get(pack, i) != 0) {
      firstNonZero = i;
    }
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(pack, firstNonZero, outArg, ooffset, pack->size_ - firstNonZero);
  return pack->size_ - firstNonZero;
}

jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithInt_withByteArray_withInt_(jint input, IOSByteArray *outArg, jint ooffset) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 598
  IOSByteArray *b = [IOSByteArray newArrayWithLength:4];
  *IOSByteArray_GetRef(b, 0) = (jbyte) (JreRShift32(input, 24));
  *IOSByteArray_GetRef(b, 1) = (jbyte) (JreRShift32(input, 16));
  *IOSByteArray_GetRef(b, 2) = (jbyte) (JreRShift32(input, 8));
  *IOSByteArray_GetRef(b, 3) = (jbyte) input;
  return EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithByteArray_withInt_withInt_withByteArray_withInt_(b, 0, 4, outArg, ooffset);
}

jint EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithJavaMathBigInteger_withByteArray_withInt_(JavaMathBigInteger *input, IOSByteArray *outArg, jint ooffset) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 610
  IOSByteArray *b = [((JavaMathBigInteger *) nil_chk(input)) toByteArray];
  return EsGobAfirmaCoreSignersDerObjectIdentifier_pack7OidWithByteArray_withInt_withInt_withByteArray_withInt_(b, 0, ((IOSByteArray *) nil_chk(b))->size_, outArg, ooffset);
}


#line 626
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkWithByteArray_(IOSByteArray *encoding) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 627
  jint length = ((IOSByteArray *) nil_chk(encoding))->size_;
  if (length < 1 ||
#line 629
  (IOSByteArray_Get(encoding, length - 1) & (jint) 0x80) != 0) {
    @throw new_JavaIoIOException_initWithNSString_(@"ObjectIdentifier() -- Invalid DER encoding, not ended");
  }
  
#line 633
  for (jint i = 0; i < length; i++) {
    
#line 635
    if (IOSByteArray_Get(encoding, i) == (jbyte) (jint) 0x80 &&
#line 636
    (i == 0 || (IOSByteArray_Get(encoding, i - 1) & (jint) 0x80) == 0)) {
      @throw new_JavaIoIOException_initWithNSString_(@"ObjectIdentifier() -- Invalid DER encoding, useless extra octet detected");
    }
  }
}


#line 642
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkCountWithInt_(jint count) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 643
  if (count < 2) {
    @throw new_JavaIoIOException_initWithNSString_(@"ObjectIdentifier() -- Must be at least two oid components ");
  }
}


#line 648
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithInt_(jint first) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 649
  if (first < 0 || first > 2) {
    @throw new_JavaIoIOException_initWithNSString_(@"ObjectIdentifier() -- First oid component is invalid ");
  }
}


#line 654
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkFirstComponentWithJavaMathBigInteger_(JavaMathBigInteger *first) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 655
  if ([((JavaMathBigInteger *) nil_chk(first)) signum] == -1 ||
#line 656
  [first compareToWithId:JavaMathBigInteger_valueOfWithLong_(2)] == 1) {
    @throw new_JavaIoIOException_initWithNSString_(@"ObjectIdentifier() -- First oid component is invalid ");
  }
}


#line 661
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withInt_(jint first, jint second) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 662
  if (second < 0 || (first != 2 && second > 39)) {
    @throw new_JavaIoIOException_initWithNSString_(@"ObjectIdentifier() -- Second oid component is invalid ");
  }
}


#line 667
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkSecondComponentWithInt_withJavaMathBigInteger_(jint first, JavaMathBigInteger *second) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 668
  if ([((JavaMathBigInteger *) nil_chk(second)) signum] == -1 || (
#line 669
  first != 2 &&
#line 670
  [second compareToWithId:JavaMathBigInteger_valueOfWithLong_(39)] == 1)) {
    @throw new_JavaIoIOException_initWithNSString_(@"ObjectIdentifier() -- Second oid component is invalid ");
  }
}


#line 675
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withInt_(jint i, jint num) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 676
  if (num < 0) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I$", @"ObjectIdentifier() -- oid component #",
#line 678
    (i + 1), @" must be non-negative "));
  }
}


#line 681
void EsGobAfirmaCoreSignersDerObjectIdentifier_checkOtherComponentWithInt_withJavaMathBigInteger_(jint i, JavaMathBigInteger *num) {
  EsGobAfirmaCoreSignersDerObjectIdentifier_initialize();
  
#line 682
  if ([((JavaMathBigInteger *) nil_chk(num)) signum] == -1) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I$", @"ObjectIdentifier() -- oid component #",
#line 684
    (i + 1), @" must be non-negative "));
  }
}

IOSObjectArray *EsGobAfirmaCoreSignersDerObjectIdentifier__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersDerObjectIdentifier)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/der/ObjectIdentifier.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK)

EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK *EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_theOne;


#line 140
@implementation EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 140
- (instancetype)init {
  EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "theOne", "LEsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK;", .constantValue.asLong = 0, 0x8, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_theOne, "LEsGobAfirmaCoreSignersDerObjectIdentifier;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK = { "HugeOidNotSupportedByOldJDK", "es.gob.afirma.core.signers.der", ptrTable, methods, fields, 7, 0x8, 1, 2, 1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK class]) {
    EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_theOne = new_EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_init();
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK)
  }
}

@end


#line 140
void EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_init(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK *self) {
  NSObject_init(self);
}


#line 140
EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK *new_EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK, init)
}


#line 140
EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK *create_EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersDerObjectIdentifier_HugeOidNotSupportedByOldJDK)

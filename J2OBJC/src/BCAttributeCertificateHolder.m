//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/x509/BCAttributeCertificateHolder.java
//

#include "ASN1Encodable.h"
#include "ASN1Enumerated.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "AlgorithmIdentifier.h"
#include "Arrays.h"
#include "BCAttributeCertificateHolder.h"
#include "DERBitString.h"
#include "DERSequence.h"
#include "GeneralName.h"
#include "GeneralNames.h"
#include "Holder.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "IssuerSerial.h"
#include "J2ObjC_source.h"
#include "ObjectDigestInfo.h"
#include "PrincipalUtil.h"
#include "X509Principal.h"
#include "X509Util.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/math/BigInteger.h"
#include "java/security/MessageDigest.h"
#include "java/security/Principal.h"
#include "java/security/PublicKey.h"
#include "java/security/cert/Certificate.h"
#include "java/security/cert/CertificateEncodingException.h"
#include "java/security/cert/CertificateParsingException.h"
#include "java/security/cert/X509Certificate.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "javax/security/auth/x500/X500Principal.h"

#if !__has_feature(objc_arc)
#error "BCAttributeCertificateHolder must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleX509BCAttributeCertificateHolder ()

- (OrgSpongycastleAsn1X509GeneralNames *)generateGeneralNamesWithOrgSpongycastleJceX509Principal:(OrgSpongycastleJceX509Principal *)principal;

- (jboolean)matchesDNWithOrgSpongycastleJceX509Principal:(OrgSpongycastleJceX509Principal *)subject
                 withOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)targets;

- (IOSObjectArray *)getNamesWithOrgSpongycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names;

- (IOSObjectArray *)getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)names;

@end

__attribute__((unused)) static OrgSpongycastleAsn1X509GeneralNames *OrgSpongycastleX509BCAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleJceX509Principal_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleJceX509Principal *principal);

__attribute__((unused)) static jboolean OrgSpongycastleX509BCAttributeCertificateHolder_matchesDNWithOrgSpongycastleJceX509Principal_withOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleJceX509Principal *subject, OrgSpongycastleAsn1X509GeneralNames *targets);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleX509BCAttributeCertificateHolder_getNamesWithOrgSpongycastleAsn1X509GeneralNameArray_(OrgSpongycastleX509BCAttributeCertificateHolder *self, IOSObjectArray *names);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleX509BCAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleAsn1X509GeneralNames *names);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/x509/BCAttributeCertificateHolder.java"


#line 50
@implementation OrgSpongycastleX509BCAttributeCertificateHolder


#line 55
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}

- (instancetype)initWithOrgSpongycastleJceX509Principal:(OrgSpongycastleJceX509Principal *)issuerName
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_withJavaMathBigInteger_(self, issuerName, serialNumber);
  return self;
}


#line 68
- (instancetype)initWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)issuerName
                                    withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(self, issuerName, serialNumber);
  return self;
}

- (instancetype)initWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(self, cert);
  return self;
}


#line 92
- (instancetype)initWithOrgSpongycastleJceX509Principal:(OrgSpongycastleJceX509Principal *)principal {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_(self, principal);
  return self;
}

- (instancetype)initWithJavaxSecurityAuthX500X500Principal:(JavaxSecurityAuthX500X500Principal *)principal {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(self, principal);
  return self;
}


#line 125
- (instancetype)initWithInt:(jint)digestedObjectType
               withNSString:(NSString *)digestAlgorithm
               withNSString:(NSString *)otherObjectTypeID
              withByteArray:(IOSByteArray *)objectDigest {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(self, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest);
  return self;
}


#line 147
- (jint)getDigestedObjectType {
  
#line 149
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 151
    return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1ASN1Enumerated *) nil_chk([((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestedObjectType])) getValue])) intValue];
  }
  
#line 154
  return -1;
}


#line 163
- (NSString *)getDigestAlgorithm {
  
#line 165
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 167
    return [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestAlgorithm])) getAlgorithm])) getId];
  }
  
#line 170
  return nil;
}


#line 178
- (IOSByteArray *)getObjectDigest {
  
#line 180
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 182
    return [((OrgSpongycastleAsn1DERBitString *) nil_chk([((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getObjectDigest])) getBytes];
  }
  return nil;
}


#line 193
- (NSString *)getOtherObjectTypeID {
  
#line 195
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 197
    (void) [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getOtherObjectTypeID])) getId];
  }
  return nil;
}


#line 202
- (OrgSpongycastleAsn1X509GeneralNames *)generateGeneralNamesWithOrgSpongycastleJceX509Principal:(OrgSpongycastleJceX509Principal *)principal {
  return OrgSpongycastleX509BCAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleJceX509Principal_(self, principal);
}


#line 207
- (jboolean)matchesDNWithOrgSpongycastleJceX509Principal:(OrgSpongycastleJceX509Principal *)subject
                 withOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)targets {
  return OrgSpongycastleX509BCAttributeCertificateHolder_matchesDNWithOrgSpongycastleJceX509Principal_withOrgSpongycastleAsn1X509GeneralNames_(self, subject, targets);
}


#line 234
- (IOSObjectArray *)getNamesWithOrgSpongycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names {
  return OrgSpongycastleX509BCAttributeCertificateHolder_getNamesWithOrgSpongycastleAsn1X509GeneralNameArray_(self, names);
}


#line 257
- (IOSObjectArray *)getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames:(OrgSpongycastleAsn1X509GeneralNames *)names {
  return OrgSpongycastleX509BCAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames_(self, names);
}


#line 280
- (IOSObjectArray *)getEntityNames {
  
#line 282
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getEntityName] != nil) {
    
#line 284
    return OrgSpongycastleX509BCAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames_(self, [holder_ getEntityName]);
  }
  
#line 287
  return nil;
}


#line 295
- (IOSObjectArray *)getIssuer {
  
#line 297
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 299
    return OrgSpongycastleX509BCAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames_(self, [((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer]);
  }
  
#line 302
  return nil;
}


#line 312
- (JavaMathBigInteger *)getSerialNumber {
  
#line 314
  if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 316
    return [((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) getValue];
  }
  
#line 319
  return nil;
}


#line 322
- (id)java_clone {
  
#line 324
  return new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_((OrgSpongycastleAsn1ASN1Sequence *) cast_chk([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) toASN1Primitive], [OrgSpongycastleAsn1ASN1Sequence class]));
}

- (jboolean)matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert {
  
#line 330
  if (!([cert isKindOfClass:[JavaSecurityCertX509Certificate class]])) {
    
#line 332
    return false;
  }
  
#line 335
  JavaSecurityCertX509Certificate *x509Cert = (JavaSecurityCertX509Certificate *) cast_chk(cert, [JavaSecurityCertX509Certificate class]);
  
#line 337
  @try {
    
#line 339
    if ([((OrgSpongycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
      
#line 341
      return [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1ASN1Integer *) nil_chk([((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) getValue])) isEqual:[((JavaSecurityCertX509Certificate *) nil_chk(x509Cert)) getSerialNumber]] && OrgSpongycastleX509BCAttributeCertificateHolder_matchesDNWithOrgSpongycastleJceX509Principal_withOrgSpongycastleAsn1X509GeneralNames_(self, OrgSpongycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509Certificate_(
#line 342
      x509Cert), [((OrgSpongycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer]);
    }
    
#line 345
    if ([holder_ getEntityName] != nil) {
      
#line 347
      if (OrgSpongycastleX509BCAttributeCertificateHolder_matchesDNWithOrgSpongycastleJceX509Principal_withOrgSpongycastleAsn1X509GeneralNames_(self, OrgSpongycastleJcePrincipalUtil_getSubjectX509PrincipalWithJavaSecurityCertX509Certificate_(x509Cert),
#line 348
      [holder_ getEntityName])) {
        
#line 350
        return true;
      }
    }
    if ([holder_ getObjectDigestInfo] != nil) {
      
#line 355
      JavaSecurityMessageDigest *md = nil;
      @try {
        
#line 358
        md = JavaSecurityMessageDigest_getInstanceWithNSString_withNSString_([self getDigestAlgorithm], @"SC");
      }
      @catch (
#line 361
      JavaLangException *e) {
        
#line 363
        return false;
      }
      switch ([self getDigestedObjectType]) {
        
#line 367
        case OrgSpongycastleAsn1X509ObjectDigestInfo_publicKey:
        
#line 369
        [((JavaSecurityMessageDigest *) nil_chk(md)) updateWithByteArray:[((id<JavaSecurityPublicKey>) nil_chk([((JavaSecurityCertCertificate *) nil_chk(cert)) getPublicKey])) getEncoded]];
        break;
        case OrgSpongycastleAsn1X509ObjectDigestInfo_publicKeyCert:
        [((JavaSecurityMessageDigest *) nil_chk(md)) updateWithByteArray:[((JavaSecurityCertCertificate *) nil_chk(cert)) getEncoded]];
        break;
      }
      if (!OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_([((JavaSecurityMessageDigest *) nil_chk(md)) digest], [self getObjectDigest])) {
        
#line 377
        return false;
      }
    }
  }
  @catch (JavaSecurityCertCertificateEncodingException *e) {
    
#line 383
    return false;
  }
  
#line 386
  return false;
}


#line 389
- (jboolean)isEqual:(id)obj {
  
#line 391
  if (JreObjectEqualsEquals(obj, self)) {
    
#line 393
    return true;
  }
  
#line 396
  if (!([obj isKindOfClass:[OrgSpongycastleX509BCAttributeCertificateHolder class]])) {
    
#line 398
    return false;
  }
  
#line 401
  OrgSpongycastleX509BCAttributeCertificateHolder *other = (OrgSpongycastleX509BCAttributeCertificateHolder *) cast_chk(obj, [OrgSpongycastleX509BCAttributeCertificateHolder class]);
  
#line 403
  return [((OrgSpongycastleAsn1X509Holder *) nil_chk(self->holder_)) isEqual:((OrgSpongycastleX509BCAttributeCertificateHolder *) nil_chk(other))->holder_];
}


#line 406
- (NSUInteger)hash {
  
#line 408
  return ((jint) [((OrgSpongycastleAsn1X509Holder *) nil_chk(self->holder_)) hash]);
}


#line 411
- (jboolean)matchWithId:(id)obj {
  
#line 413
  if (!([obj isKindOfClass:[JavaSecurityCertX509Certificate class]])) {
    
#line 415
    return false;
  }
  
#line 418
  return [self matchWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *) cast_chk(obj, [JavaSecurityCertCertificate class])];
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 4, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509GeneralNames;", 0x2, 8, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[LJavaSecurityPrincipal;", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "[LJavaSecurityPrincipal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaSecurityPrincipal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithOrgSpongycastleJceX509Principal:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithJavaxSecurityAuthX500X500Principal:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithJavaSecurityCertX509Certificate:);
  methods[4].selector = @selector(initWithOrgSpongycastleJceX509Principal:);
  methods[5].selector = @selector(initWithJavaxSecurityAuthX500X500Principal:);
  methods[6].selector = @selector(initWithInt:withNSString:withNSString:withByteArray:);
  methods[7].selector = @selector(getDigestedObjectType);
  methods[8].selector = @selector(getDigestAlgorithm);
  methods[9].selector = @selector(getObjectDigest);
  methods[10].selector = @selector(getOtherObjectTypeID);
  methods[11].selector = @selector(generateGeneralNamesWithOrgSpongycastleJceX509Principal:);
  methods[12].selector = @selector(matchesDNWithOrgSpongycastleJceX509Principal:withOrgSpongycastleAsn1X509GeneralNames:);
  methods[13].selector = @selector(getNamesWithOrgSpongycastleAsn1X509GeneralNameArray:);
  methods[14].selector = @selector(getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames:);
  methods[15].selector = @selector(getEntityNames);
  methods[16].selector = @selector(getIssuer);
  methods[17].selector = @selector(getSerialNumber);
  methods[18].selector = @selector(java_clone);
  methods[19].selector = @selector(matchWithJavaSecurityCertCertificate:);
  methods[20].selector = @selector(isEqual:);
  methods[21].selector = @selector(hash);
  methods[22].selector = @selector(matchWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "holder_", "LOrgSpongycastleAsn1X509Holder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1ASN1Sequence;", "LOrgSpongycastleJceX509Principal;LJavaMathBigInteger;", "LJavaxSecurityAuthX500X500Principal;LJavaMathBigInteger;", "LJavaSecurityCertX509Certificate;", "LJavaSecurityCertCertificateParsingException;", "LOrgSpongycastleJceX509Principal;", "LJavaxSecurityAuthX500X500Principal;", "ILNSString;LNSString;[B", "generateGeneralNames", "matchesDN", "LOrgSpongycastleJceX509Principal;LOrgSpongycastleAsn1X509GeneralNames;", "getNames", "[LOrgSpongycastleAsn1X509GeneralName;", "getPrincipals", "LOrgSpongycastleAsn1X509GeneralNames;", "clone", "match", "LJavaSecurityCertCertificate;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgSpongycastleX509BCAttributeCertificateHolder = { "BCAttributeCertificateHolder", "org.spongycastle.x509", ptrTable, methods, fields, 7, 0x1, 23, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleX509BCAttributeCertificateHolder;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 55
void OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  NSObject_init(self);
  self->holder_ = OrgSpongycastleAsn1X509Holder_getInstanceWithId_(seq);
}


#line 55
OrgSpongycastleX509BCAttributeCertificateHolder *new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 55
OrgSpongycastleX509BCAttributeCertificateHolder *create_OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 60
void OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_withJavaMathBigInteger_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber) {
  NSObject_init(self);
  
#line 63
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509IssuerSerial_(new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509GeneralNames_getInstanceWithId_(new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1Encodable_(new_OrgSpongycastleAsn1X509GeneralName_initWithOrgSpongycastleAsn1X509X509Name_(
#line 64
  issuerName))), new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(
#line 65
  serialNumber)));
}


#line 60
OrgSpongycastleX509BCAttributeCertificateHolder *new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_withJavaMathBigInteger_(OrgSpongycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithOrgSpongycastleJceX509Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 60
OrgSpongycastleX509BCAttributeCertificateHolder *create_OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_withJavaMathBigInteger_(OrgSpongycastleJceX509Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithOrgSpongycastleJceX509Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 68
void OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(OrgSpongycastleX509BCAttributeCertificateHolder *self, JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber) {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_withJavaMathBigInteger_(self, OrgSpongycastleX509X509Util_convertPrincipalWithJavaxSecurityAuthX500X500Principal_(
#line 71
  issuerName), serialNumber);
}


#line 68
OrgSpongycastleX509BCAttributeCertificateHolder *new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 68
OrgSpongycastleX509BCAttributeCertificateHolder *create_OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_(JavaxSecurityAuthX500X500Principal *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 74
void OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(OrgSpongycastleX509BCAttributeCertificateHolder *self, JavaSecurityCertX509Certificate *cert) {
  NSObject_init(self);
  
#line 77
  OrgSpongycastleJceX509Principal *name;
  
#line 79
  @try {
    
#line 81
    name = OrgSpongycastleJcePrincipalUtil_getIssuerX509PrincipalWithJavaSecurityCertX509Certificate_(cert);
  }
  @catch (JavaLangException *e) {
    
#line 85
    @throw new_JavaSecurityCertCertificateParsingException_initWithNSString_([e getMessage]);
  }
  
#line 88
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509IssuerSerial_(new_OrgSpongycastleAsn1X509IssuerSerial_initWithOrgSpongycastleAsn1X509GeneralNames_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleX509BCAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleJceX509Principal_(self, name), new_OrgSpongycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(
#line 89
  [((JavaSecurityCertX509Certificate *) nil_chk(cert)) getSerialNumber])));
}


#line 74
OrgSpongycastleX509BCAttributeCertificateHolder *new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_NEW_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithJavaSecurityCertX509Certificate_, cert)
}


#line 74
OrgSpongycastleX509BCAttributeCertificateHolder *create_OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithJavaSecurityCertX509Certificate_, cert)
}


#line 92
void OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleJceX509Principal *principal) {
  NSObject_init(self);
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleX509BCAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleJceX509Principal_(self, principal));
}


#line 92
OrgSpongycastleX509BCAttributeCertificateHolder *new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_(OrgSpongycastleJceX509Principal *principal) {
  J2OBJC_NEW_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithOrgSpongycastleJceX509Principal_, principal)
}


#line 92
OrgSpongycastleX509BCAttributeCertificateHolder *create_OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_(OrgSpongycastleJceX509Principal *principal) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithOrgSpongycastleJceX509Principal_, principal)
}


#line 97
void OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(OrgSpongycastleX509BCAttributeCertificateHolder *self, JavaxSecurityAuthX500X500Principal *principal) {
  OrgSpongycastleX509BCAttributeCertificateHolder_initWithOrgSpongycastleJceX509Principal_(self, OrgSpongycastleX509X509Util_convertPrincipalWithJavaxSecurityAuthX500X500Principal_(
#line 99
  principal));
}


#line 97
OrgSpongycastleX509BCAttributeCertificateHolder *new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal) {
  J2OBJC_NEW_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_, principal)
}


#line 97
OrgSpongycastleX509BCAttributeCertificateHolder *create_OrgSpongycastleX509BCAttributeCertificateHolder_initWithJavaxSecurityAuthX500X500Principal_(JavaxSecurityAuthX500X500Principal *principal) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithJavaxSecurityAuthX500X500Principal_, principal)
}


#line 125
void OrgSpongycastleX509BCAttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(OrgSpongycastleX509BCAttributeCertificateHolder *self, jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest) {
  NSObject_init(self);
  
#line 128
  self->holder_ = new_OrgSpongycastleAsn1X509Holder_initWithOrgSpongycastleAsn1X509ObjectDigestInfo_(new_OrgSpongycastleAsn1X509ObjectDigestInfo_initWithInt_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(digestedObjectType, new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 129
  otherObjectTypeID), new_OrgSpongycastleAsn1X509AlgorithmIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_(new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(digestAlgorithm)), OrgSpongycastleUtilArrays_cloneWithByteArray_(
#line 130
  objectDigest)));
}


#line 125
OrgSpongycastleX509BCAttributeCertificateHolder *new_OrgSpongycastleX509BCAttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_NEW_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithInt_withNSString_withNSString_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}


#line 125
OrgSpongycastleX509BCAttributeCertificateHolder *create_OrgSpongycastleX509BCAttributeCertificateHolder_initWithInt_withNSString_withNSString_withByteArray_(jint digestedObjectType, NSString *digestAlgorithm, NSString *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleX509BCAttributeCertificateHolder, initWithInt_withNSString_withNSString_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}


#line 202
OrgSpongycastleAsn1X509GeneralNames *OrgSpongycastleX509BCAttributeCertificateHolder_generateGeneralNamesWithOrgSpongycastleJceX509Principal_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleJceX509Principal *principal) {
  
#line 204
  return OrgSpongycastleAsn1X509GeneralNames_getInstanceWithId_(new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1Encodable_(new_OrgSpongycastleAsn1X509GeneralName_initWithOrgSpongycastleAsn1X509X509Name_(principal)));
}


#line 207
jboolean OrgSpongycastleX509BCAttributeCertificateHolder_matchesDNWithOrgSpongycastleJceX509Principal_withOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleJceX509Principal *subject, OrgSpongycastleAsn1X509GeneralNames *targets) {
  
#line 209
  IOSObjectArray *names = [((OrgSpongycastleAsn1X509GeneralNames *) nil_chk(targets)) getNames];
  
#line 211
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(names))->size_; i++) {
    
#line 213
    OrgSpongycastleAsn1X509GeneralName *gn = IOSObjectArray_Get(names, i);
    
#line 215
    if ([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(gn)) getTagNo] == OrgSpongycastleAsn1X509GeneralName_directoryName) {
      
#line 217
      @try {
        
#line 219
        if ([new_OrgSpongycastleJceX509Principal_initWithByteArray_([((OrgSpongycastleAsn1ASN1Primitive *) nil_chk([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(([gn getName]))) toASN1Primitive])) getEncoded]) isEqual:
#line 220
        subject]) {
          
#line 222
          return true;
        }
      }
      @catch (JavaIoIOException *e) {
      }
    }
  }
  
#line 231
  return false;
}


#line 234
IOSObjectArray *OrgSpongycastleX509BCAttributeCertificateHolder_getNamesWithOrgSpongycastleAsn1X509GeneralNameArray_(OrgSpongycastleX509BCAttributeCertificateHolder *self, IOSObjectArray *names) {
  
#line 236
  id<JavaUtilList> l = new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(names))->size_);
  
#line 238
  for (jint i = 0; i != names->size_; i++) {
    
#line 240
    if ([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getTagNo] == OrgSpongycastleAsn1X509GeneralName_directoryName) {
      
#line 242
      @try {
        
#line 244
        [l addWithId:new_JavaxSecurityAuthX500X500Principal_initWithByteArray_(
#line 245
        [((OrgSpongycastleAsn1ASN1Primitive *) nil_chk([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(([((OrgSpongycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getName]))) toASN1Primitive])) getEncoded])];
      }
      @catch (JavaIoIOException *e) {
        
#line 249
        @throw new_JavaLangRuntimeException_initWithNSString_(@"badly formed Name object");
      }
    }
  }
  
#line 254
  return [l toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[l size] type:NSObject_class_()]];
}


#line 257
IOSObjectArray *OrgSpongycastleX509BCAttributeCertificateHolder_getPrincipalsWithOrgSpongycastleAsn1X509GeneralNames_(OrgSpongycastleX509BCAttributeCertificateHolder *self, OrgSpongycastleAsn1X509GeneralNames *names) {
  
#line 259
  IOSObjectArray *p = OrgSpongycastleX509BCAttributeCertificateHolder_getNamesWithOrgSpongycastleAsn1X509GeneralNameArray_(self, [((OrgSpongycastleAsn1X509GeneralNames *) nil_chk(names)) getNames]);
  id<JavaUtilList> l = new_JavaUtilArrayList_init();
  
#line 262
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(p))->size_; i++) {
    
#line 264
    if ([JavaSecurityPrincipal_class_() isInstance:IOSObjectArray_Get(p, i)]) {
      
#line 266
      [l addWithId:IOSObjectArray_Get(p, i)];
    }
  }
  
#line 270
  return (IOSObjectArray *) cast_check([l toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[l size] type:JavaSecurityPrincipal_class_()]], IOSClass_arrayType(JavaSecurityPrincipal_class_(), 1));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleX509BCAttributeCertificateHolder)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfPublicKeySecurityHandler.java
//

#include "ASN1InputStream.h"
#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "AlgorithmIdentifier.h"
#include "ContentInfo.h"
#include "DEROctetString.h"
#include "DEROutputStream.h"
#include "DERSet.h"
#include "EncryptedContentInfo.h"
#include "EnvelopedData.h"
#include "IOSPrimitiveArray.h"
#include "IssuerAndSerialNumber.h"
#include "J2ObjC_source.h"
#include "KeyTransRecipientInfo.h"
#include "PKCSObjectIdentifiers.h"
#include "PdfArray.h"
#include "PdfContentByte.h"
#include "PdfLiteral.h"
#include "PdfPublicKeyRecipient.h"
#include "PdfPublicKeySecurityHandler.h"
#include "RecipientIdentifier.h"
#include "RecipientInfo.h"
#include "SubjectPublicKeyInfo.h"
#include "TBSCertificateStructure.h"
#include "X500Name.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "java/security/AlgorithmParameterGenerator.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/GeneralSecurityException.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/security/SecureRandom.h"
#include "java/security/cert/Certificate.h"
#include "java/security/cert/X509Certificate.h"
#include "java/util/ArrayList.h"
#include "javax/crypto/Cipher.h"
#include "javax/crypto/KeyGenerator.h"
#include "javax/crypto/SecretKey.h"

#if !__has_feature(objc_arc)
#error "PdfPublicKeySecurityHandler must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfPublicKeySecurityHandler () {
 @public
  JavaUtilArrayList *recipients_;
  IOSByteArray *seed_;
}

- (OrgSpongycastleAsn1ASN1Primitive *)createDERForRecipientWithByteArray:(IOSByteArray *)inArg
                                     withJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

- (OrgSpongycastleAsn1CmsKeyTransRecipientInfo *)computeRecipientInfoWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)x509certificate
                                                                                           withByteArray:(IOSByteArray *)abyte0;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfPublicKeySecurityHandler, recipients_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfPublicKeySecurityHandler, seed_, IOSByteArray *)

inline jint ComAowagieTextPdfPdfPublicKeySecurityHandler_get_SEED_LENGTH(void);
#define ComAowagieTextPdfPdfPublicKeySecurityHandler_SEED_LENGTH 20
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfPublicKeySecurityHandler, SEED_LENGTH, jint)

__attribute__((unused)) static OrgSpongycastleAsn1ASN1Primitive *ComAowagieTextPdfPdfPublicKeySecurityHandler_createDERForRecipientWithByteArray_withJavaSecurityCertX509Certificate_(ComAowagieTextPdfPdfPublicKeySecurityHandler *self, IOSByteArray *inArg, JavaSecurityCertX509Certificate *cert);

__attribute__((unused)) static OrgSpongycastleAsn1CmsKeyTransRecipientInfo *ComAowagieTextPdfPdfPublicKeySecurityHandler_computeRecipientInfoWithJavaSecurityCertX509Certificate_withByteArray_(ComAowagieTextPdfPdfPublicKeySecurityHandler *self, JavaSecurityCertX509Certificate *x509certificate, IOSByteArray *abyte0);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfPublicKeySecurityHandler.java"


#line 129
@implementation ComAowagieTextPdfPdfPublicKeySecurityHandler


#line 137
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfPdfPublicKeySecurityHandler_initPackagePrivate(self);
  return self;
}


#line 159
- (void)addRecipientWithComAowagieTextPdfPdfPublicKeyRecipient:(ComAowagieTextPdfPdfPublicKeyRecipient *)recipient {
  [((JavaUtilArrayList *) nil_chk(self->recipients_)) addWithId:recipient];
}

- (IOSByteArray *)getSeed {
  return [((IOSByteArray *) nil_chk(self->seed_)) java_clone];
}


#line 172
- (jint)getRecipientsSize {
  return [((JavaUtilArrayList *) nil_chk(self->recipients_)) size];
}

- (IOSByteArray *)getEncodedRecipientWithInt:(jint)index {
  
#line 178
  ComAowagieTextPdfPdfPublicKeyRecipient *recipient = (ComAowagieTextPdfPdfPublicKeyRecipient *) cast_chk([((JavaUtilArrayList *) nil_chk(self->recipients_)) getWithInt:index], [ComAowagieTextPdfPdfPublicKeyRecipient class]);
  IOSByteArray *cms = [((ComAowagieTextPdfPdfPublicKeyRecipient *) nil_chk(recipient)) getCms];
  
#line 181
  if (cms != nil) {
    return cms;
  }
  
#line 185
  JavaSecurityCertCertificate *certificate = [recipient getCertificate];
  jint permission = [recipient getPermission];
  jint revision = 3;
  
#line 189
  permission |= (jint) 0xfffff0c0;
  permission &= (jint) 0xfffffffc;
  permission += 1;
  
#line 193
  IOSByteArray *pkcs7input = [IOSByteArray newArrayWithLength:24];
  
#line 195
  jbyte one = (jbyte) permission;
  jbyte two = (jbyte) (JreRShift32(permission, 8));
  jbyte three = (jbyte) (JreRShift32(permission, 16));
  jbyte four = (jbyte) (JreRShift32(permission, 24));
  
#line 200
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->seed_, 0, pkcs7input, 0, 20);
  
#line 202
  *IOSByteArray_GetRef(pkcs7input, 20) = four;
  *IOSByteArray_GetRef(pkcs7input, 21) = three;
  *IOSByteArray_GetRef(pkcs7input, 22) = two;
  *IOSByteArray_GetRef(pkcs7input, 23) = one;
  
#line 207
  OrgSpongycastleAsn1ASN1Primitive *obj = ComAowagieTextPdfPdfPublicKeySecurityHandler_createDERForRecipientWithByteArray_withJavaSecurityCertX509Certificate_(self, pkcs7input, (JavaSecurityCertX509Certificate *) cast_chk(certificate, [JavaSecurityCertX509Certificate class]));
  
#line 209
  JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
  
#line 211
  OrgSpongycastleAsn1DEROutputStream *k = new_OrgSpongycastleAsn1DEROutputStream_initWithJavaIoOutputStream_(baos);
  
#line 213
  [k writeObjectWithOrgSpongycastleAsn1ASN1Encodable:obj];
  
#line 215
  cms = [baos toByteArray];
  
#line 217
  [recipient setCmsWithByteArray:cms];
  
#line 219
  return cms;
}


#line 222
- (ComAowagieTextPdfPdfArray *)getEncodedRecipients {
  
#line 224
  ComAowagieTextPdfPdfArray *EncodedRecipients = new_ComAowagieTextPdfPdfArray_init();
  IOSByteArray *cms = nil;
  for (jint i = 0; i < [((JavaUtilArrayList *) nil_chk(self->recipients_)) size]; i++) {
    @try {
      cms = [self getEncodedRecipientWithInt:i];
      [((ComAowagieTextPdfPdfArray *) nil_chk(EncodedRecipients)) addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfLiteral_initWithByteArray_(ComAowagieTextPdfPdfContentByte_escapeStringWithByteArray_(cms))];
    }
    @catch (
#line 230
    JavaSecurityGeneralSecurityException *e) {
      EncodedRecipients = nil;
    }
    @catch (
#line 232
    JavaIoIOException *e) {
      EncodedRecipients = nil;
    }
  }
  
#line 237
  return EncodedRecipients;
}


#line 240
- (OrgSpongycastleAsn1ASN1Primitive *)createDERForRecipientWithByteArray:(IOSByteArray *)inArg
                                     withJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert {
  return ComAowagieTextPdfPdfPublicKeySecurityHandler_createDERForRecipientWithByteArray_withJavaSecurityCertX509Certificate_(self, inArg, cert);
}


#line 270
- (OrgSpongycastleAsn1CmsKeyTransRecipientInfo *)computeRecipientInfoWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)x509certificate
                                                                                           withByteArray:(IOSByteArray *)abyte0 {
  return ComAowagieTextPdfPdfPublicKeySecurityHandler_computeRecipientInfoWithJavaSecurityCertX509Certificate_withByteArray_(self, x509certificate, abyte0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfArray;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x2, 5, 6, 4, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1CmsKeyTransRecipientInfo;", 0x2, 7, 8, 9, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(addRecipientWithComAowagieTextPdfPdfPublicKeyRecipient:);
  methods[2].selector = @selector(getSeed);
  methods[3].selector = @selector(getRecipientsSize);
  methods[4].selector = @selector(getEncodedRecipientWithInt:);
  methods[5].selector = @selector(getEncodedRecipients);
  methods[6].selector = @selector(createDERForRecipientWithByteArray:withJavaSecurityCertX509Certificate:);
  methods[7].selector = @selector(computeRecipientInfoWithJavaSecurityCertX509Certificate:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SEED_LENGTH", "I", .constantValue.asInt = ComAowagieTextPdfPdfPublicKeySecurityHandler_SEED_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "recipients_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "seed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addRecipient", "LComAowagieTextPdfPdfPublicKeyRecipient;", "getEncodedRecipient", "I", "LJavaIoIOException;LJavaSecurityGeneralSecurityException;", "createDERForRecipient", "[BLJavaSecurityCertX509Certificate;", "computeRecipientInfo", "LJavaSecurityCertX509Certificate;[B", "LJavaSecurityGeneralSecurityException;LJavaIoIOException;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfPublicKeySecurityHandler = { "PdfPublicKeySecurityHandler", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 8, 3, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfPublicKeySecurityHandler;
}

@end


#line 137
void ComAowagieTextPdfPdfPublicKeySecurityHandler_initPackagePrivate(ComAowagieTextPdfPdfPublicKeySecurityHandler *self) {
  NSObject_init(self);
  self->recipients_ =
#line 133
  nil;
  self->seed_ = [IOSByteArray newArrayWithLength:ComAowagieTextPdfPdfPublicKeySecurityHandler_SEED_LENGTH];
  
#line 138
  JavaxCryptoKeyGenerator *key;
  @try {
    key = JavaxCryptoKeyGenerator_getInstanceWithNSString_(@"AES");
    [((JavaxCryptoKeyGenerator *) nil_chk(key)) init__WithInt:192 withJavaSecuritySecureRandom:new_JavaSecuritySecureRandom_init()];
    id<JavaxCryptoSecretKey> sk = [key generateKey];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([((id<JavaxCryptoSecretKey>) nil_chk(sk)) getEncoded], 0, self->seed_, 0, ComAowagieTextPdfPdfPublicKeySecurityHandler_SEED_LENGTH);
  }
  @catch (
#line 144
  JavaSecurityNoSuchAlgorithmException *e) {
    self->seed_ = JavaSecuritySecureRandom_getSeedWithInt_(ComAowagieTextPdfPdfPublicKeySecurityHandler_SEED_LENGTH);
  }
  
#line 148
  self->recipients_ = new_JavaUtilArrayList_init();
}


#line 137
ComAowagieTextPdfPdfPublicKeySecurityHandler *new_ComAowagieTextPdfPdfPublicKeySecurityHandler_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfPublicKeySecurityHandler, initPackagePrivate)
}


#line 137
ComAowagieTextPdfPdfPublicKeySecurityHandler *create_ComAowagieTextPdfPdfPublicKeySecurityHandler_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfPublicKeySecurityHandler, initPackagePrivate)
}


#line 240
OrgSpongycastleAsn1ASN1Primitive *ComAowagieTextPdfPdfPublicKeySecurityHandler_createDERForRecipientWithByteArray_withJavaSecurityCertX509Certificate_(ComAowagieTextPdfPdfPublicKeySecurityHandler *self, IOSByteArray *inArg, JavaSecurityCertX509Certificate *cert) {
  
#line 245
  NSString *s = @"1.2.840.113549.3.2";
  
#line 247
  JavaSecurityAlgorithmParameterGenerator *algorithmparametergenerator = JavaSecurityAlgorithmParameterGenerator_getInstanceWithNSString_(s);
  JavaSecurityAlgorithmParameters *algorithmparameters = [((JavaSecurityAlgorithmParameterGenerator *) nil_chk(algorithmparametergenerator)) generateParameters];
  JavaIoByteArrayInputStream *bytearrayinputstream = new_JavaIoByteArrayInputStream_initWithByteArray_([((JavaSecurityAlgorithmParameters *) nil_chk(algorithmparameters)) getEncodedWithNSString:@"ASN.1"]);
  OrgSpongycastleAsn1ASN1InputStream *asn1inputstream = new_OrgSpongycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(bytearrayinputstream);
  OrgSpongycastleAsn1ASN1Primitive *derobject = [asn1inputstream readObject];
  JavaxCryptoKeyGenerator *keygenerator = JavaxCryptoKeyGenerator_getInstanceWithNSString_(s);
  [((JavaxCryptoKeyGenerator *) nil_chk(keygenerator)) init__WithInt:128];
  id<JavaxCryptoSecretKey> secretkey = [keygenerator generateKey];
  JavaxCryptoCipher *cipher = JavaxCryptoCipher_getInstanceWithNSString_(s);
  [((JavaxCryptoCipher *) nil_chk(cipher)) init__WithInt:1 withJavaSecurityKey:secretkey withJavaSecurityAlgorithmParameters:algorithmparameters];
  IOSByteArray *abyte1 = [cipher doFinalWithByteArray:inArg];
  OrgSpongycastleAsn1DEROctetString *deroctetstring = new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_(abyte1);
  OrgSpongycastleAsn1CmsKeyTransRecipientInfo *keytransrecipientinfo = ComAowagieTextPdfPdfPublicKeySecurityHandler_computeRecipientInfoWithJavaSecurityCertX509Certificate_withByteArray_(self, cert, [((id<JavaxCryptoSecretKey>) nil_chk(secretkey)) getEncoded]);
  OrgSpongycastleAsn1DERSet *derset = new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1Encodable_(new_OrgSpongycastleAsn1CmsRecipientInfo_initWithOrgSpongycastleAsn1CmsKeyTransRecipientInfo_(keytransrecipientinfo));
  OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmidentifier = new_OrgSpongycastleAsn1X509AlgorithmIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(s), derobject);
  OrgSpongycastleAsn1CmsEncryptedContentInfo *encryptedcontentinfo = new_OrgSpongycastleAsn1CmsEncryptedContentInfo_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, data),
#line 263
  algorithmidentifier, deroctetstring);
  OrgSpongycastleAsn1CmsEnvelopedData *env = new_OrgSpongycastleAsn1CmsEnvelopedData_initWithOrgSpongycastleAsn1CmsOriginatorInfo_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1CmsEncryptedContentInfo_withOrgSpongycastleAsn1ASN1Set_(nil, derset, encryptedcontentinfo, nil);
  OrgSpongycastleAsn1CmsContentInfo *contentinfo = new_OrgSpongycastleAsn1CmsContentInfo_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, envelopedData),
#line 266
  env);
  return [contentinfo toASN1Primitive];
}


#line 270
OrgSpongycastleAsn1CmsKeyTransRecipientInfo *ComAowagieTextPdfPdfPublicKeySecurityHandler_computeRecipientInfoWithJavaSecurityCertX509Certificate_withByteArray_(ComAowagieTextPdfPdfPublicKeySecurityHandler *self, JavaSecurityCertX509Certificate *x509certificate, IOSByteArray *abyte0) {
  
#line 273
  OrgSpongycastleAsn1ASN1InputStream *asn1inputstream = new_OrgSpongycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(new_JavaIoByteArrayInputStream_initWithByteArray_(
#line 274
  [((JavaSecurityCertX509Certificate *) nil_chk(x509certificate)) getTBSCertificate]));
  OrgSpongycastleAsn1X509TBSCertificateStructure *tbscertificatestructure = OrgSpongycastleAsn1X509TBSCertificateStructure_getInstanceWithId_(
#line 276
  [asn1inputstream readObject]);
  OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmidentifier = [((OrgSpongycastleAsn1X509SubjectPublicKeyInfo *) nil_chk([((OrgSpongycastleAsn1X509TBSCertificateStructure *) nil_chk(tbscertificatestructure)) getSubjectPublicKeyInfo])) getAlgorithm];
  OrgSpongycastleAsn1CmsIssuerAndSerialNumber *issuerandserialnumber = new_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(
#line 280
  [tbscertificatestructure getIssuer],
#line 281
  [((OrgSpongycastleAsn1ASN1Integer *) nil_chk([tbscertificatestructure getSerialNumber])) getValue]);
  JavaxCryptoCipher *cipher = JavaxCryptoCipher_getInstanceWithNSString_([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(algorithmidentifier)) getAlgorithm])) getId]);
  [((JavaxCryptoCipher *) nil_chk(cipher)) init__WithInt:1 withJavaSecurityCertCertificate:x509certificate];
  OrgSpongycastleAsn1DEROctetString *deroctetstring = new_OrgSpongycastleAsn1DEROctetString_initWithByteArray_([cipher doFinalWithByteArray:abyte0]);
  OrgSpongycastleAsn1CmsRecipientIdentifier *recipId = new_OrgSpongycastleAsn1CmsRecipientIdentifier_initWithOrgSpongycastleAsn1CmsIssuerAndSerialNumber_(issuerandserialnumber);
  return new_OrgSpongycastleAsn1CmsKeyTransRecipientInfo_initWithOrgSpongycastleAsn1CmsRecipientIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(recipId, algorithmidentifier, deroctetstring);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfPublicKeySecurityHandler)

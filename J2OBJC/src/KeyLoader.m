//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/eclipse-workspace/KeyLoader/src/keyloader/KeyLoader.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "KeyLoader.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/InputStream.h"
#include "java/security/KeyFactory.h"
#include "java/security/PrivateKey.h"
#include "java/security/spec/PKCS8EncodedKeySpec.h"

#if !__has_feature(objc_arc)
#error "KeyLoader must be compiled with ARC (-fobjc-arc)"
#endif

@interface KeyloaderKeyLoader ()

+ (IOSByteArray *)readInputStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream;

@end

__attribute__((unused)) static IOSByteArray *KeyloaderKeyLoader_readInputStreamWithJavaIoInputStream_(JavaIoInputStream *inputStream);

#line 1 "/Users/desarrolloabamobile/eclipse-workspace/KeyLoader/src/keyloader/KeyLoader.java"


#line 10
@implementation KeyloaderKeyLoader

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 10
- (instancetype)init {
  KeyloaderKeyLoader_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 12
+ (id<JavaSecurityPrivateKey>)loadPrivateKeyWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  return KeyloaderKeyLoader_loadPrivateKeyWithJavaIoInputStream_(inputStream);
}


#line 27
+ (IOSByteArray *)readInputStreamWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  return KeyloaderKeyLoader_readInputStreamWithJavaIoInputStream_(inputStream);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityPrivateKey;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0xa, 3, 1, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(loadPrivateKeyWithJavaIoInputStream:);
  methods[2].selector = @selector(readInputStreamWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "loadPrivateKey", "LJavaIoInputStream;", "LJavaLangException;", "readInputStream", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _KeyloaderKeyLoader = { "KeyLoader", "keyloader", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_KeyloaderKeyLoader;
}

@end


#line 10
void KeyloaderKeyLoader_init(KeyloaderKeyLoader *self) {
  NSObject_init(self);
}


#line 10
KeyloaderKeyLoader *new_KeyloaderKeyLoader_init() {
  J2OBJC_NEW_IMPL(KeyloaderKeyLoader, init)
}


#line 10
KeyloaderKeyLoader *create_KeyloaderKeyLoader_init() {
  J2OBJC_CREATE_IMPL(KeyloaderKeyLoader, init)
}


#line 12
id<JavaSecurityPrivateKey> KeyloaderKeyLoader_loadPrivateKeyWithJavaIoInputStream_(JavaIoInputStream *inputStream) {
  KeyloaderKeyLoader_initialize();
  IOSByteArray *keyBytes = KeyloaderKeyLoader_readInputStreamWithJavaIoInputStream_(inputStream);
  
#line 17
  JavaSecuritySpecPKCS8EncodedKeySpec *keySpec = new_JavaSecuritySpecPKCS8EncodedKeySpec_initWithByteArray_(keyBytes);
  
#line 20
  JavaSecurityKeyFactory *keyFactory = JavaSecurityKeyFactory_getInstanceWithNSString_(@"RSA");
  
#line 23
  return [((JavaSecurityKeyFactory *) nil_chk(keyFactory)) generatePrivateWithJavaSecuritySpecKeySpec:keySpec];
}


#line 27
IOSByteArray *KeyloaderKeyLoader_readInputStreamWithJavaIoInputStream_(JavaIoInputStream *inputStream) {
  KeyloaderKeyLoader_initialize();
  
#line 28
  JavaIoByteArrayOutputStream *baos = new_JavaIoByteArrayOutputStream_init();
  IOSByteArray *buffer = [IOSByteArray newArrayWithLength:1024];
  jint bytesRead;
  
#line 32
  while ((bytesRead = [((JavaIoInputStream *) nil_chk(inputStream)) readWithByteArray:buffer]) != -1) {
    [baos writeWithByteArray:buffer withInt:0 withInt:bytesRead];
  }
  
#line 36
  return [baos toByteArray];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(KeyloaderKeyLoader)

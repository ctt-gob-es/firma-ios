//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java
//

#include "AcroFields.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PRStream.h"
#include "PdfArray.h"
#include "PdfDictionary.h"
#include "PdfIndirectObject.h"
#include "PdfIndirectReference.h"
#include "PdfName.h"
#include "PdfObject.h"
#include "PdfReader.h"
#include "PdfStream.h"
#include "PdfString.h"
#include "PdfWriter.h"
#include "XMLConstants.h"
#include "XfaForm.h"
#include "XmlDomWriter.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/StringReader.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/EmptyStackException.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Set.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "javax/xml/parsers/DocumentBuilder.h"
#include "javax/xml/parsers/DocumentBuilderFactory.h"
#include "org/w3c/dom/Attr.h"
#include "org/w3c/dom/Document.h"
#include "org/w3c/dom/Element.h"
#include "org/w3c/dom/NamedNodeMap.h"
#include "org/w3c/dom/Node.h"
#include "org/w3c/dom/NodeList.h"
#include "org/w3c/dom/Text.h"
#include "org/xml/sax/EntityResolver.h"
#include "org/xml/sax/InputSource.h"

#if !__has_feature(objc_arc)
#error "XfaForm must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfXfaForm () {
 @public
  ComAowagieTextPdfXfaForm_Xml2SomTemplate *templateSom_;
  id<OrgW3cDomNode> templateNode_;
  ComAowagieTextPdfXfaForm_Xml2SomDatasets *datasetsSom_;
  id<OrgW3cDomNode> datasetsNode_;
  ComAowagieTextPdfXfaForm_AcroFieldsSearch *acroFieldsSom_;
  ComAowagieTextPdfPdfReader *reader_;
  jboolean xfaPresent_;
  id<OrgW3cDomDocument> domDocument_;
  jboolean changed_;
}

/*!
 @brief Extracts the nodes from the domDocument.
 @since 2.1.5
 */
- (void)extractNodes;

/*!
 @brief Sets the XFA key from a byte array.The old XFA is erased.
 @param form the data
 @param reader the reader
 @param writer the writer
 @throw java.io.IOExceptionon error
 */
+ (void)setXfaWithComAowagieTextPdfXfaForm:(ComAowagieTextPdfXfaForm *)form
            withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
            withComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer;

/*!
 @brief Serializes a XML document to a byte array.
 @param n the XML document
 @throw java.io.IOExceptionon error
 @return the serialized XML document
 */
+ (IOSByteArray *)serializeDocWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

/*!
 @brief Finds the complete SOM name contained in the datasets section from a
  possibly partial name.
 @param name the complete or partial name
 @return the complete name or <CODE>null</CODE> if not found
 */
- (NSString *)findDatasetsNameWithNSString:(NSString *)name;

+ (NSString *)getNodeTextWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                              withNSString:(NSString *)name;

+ (JavaxXmlParsersDocumentBuilderFactory *)getSecureDocumentFactory;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm, templateSom_, ComAowagieTextPdfXfaForm_Xml2SomTemplate *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm, templateNode_, id<OrgW3cDomNode>)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm, datasetsSom_, ComAowagieTextPdfXfaForm_Xml2SomDatasets *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm, datasetsNode_, id<OrgW3cDomNode>)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm, acroFieldsSom_, ComAowagieTextPdfXfaForm_AcroFieldsSearch *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm, reader_, ComAowagieTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm, domDocument_, id<OrgW3cDomDocument>)

inline JavaxXmlParsersDocumentBuilderFactory *ComAowagieTextPdfXfaForm_get_SECURE_FACTORY(void);
inline JavaxXmlParsersDocumentBuilderFactory *ComAowagieTextPdfXfaForm_set_SECURE_FACTORY(JavaxXmlParsersDocumentBuilderFactory *value);
static JavaxXmlParsersDocumentBuilderFactory *ComAowagieTextPdfXfaForm_SECURE_FACTORY;
J2OBJC_STATIC_FIELD_OBJ(ComAowagieTextPdfXfaForm, SECURE_FACTORY, JavaxXmlParsersDocumentBuilderFactory *)

inline JavaUtilLoggingLogger *ComAowagieTextPdfXfaForm_get_LOGGER(void);
static JavaUtilLoggingLogger *ComAowagieTextPdfXfaForm_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfXfaForm, LOGGER, JavaUtilLoggingLogger *)

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_extractNodes(ComAowagieTextPdfXfaForm *self);

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_setXfaWithComAowagieTextPdfXfaForm_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfXfaForm *form, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfWriter *writer);

__attribute__((unused)) static IOSByteArray *ComAowagieTextPdfXfaForm_serializeDocWithOrgW3cDomNode_(id<OrgW3cDomNode> n);

__attribute__((unused)) static NSString *ComAowagieTextPdfXfaForm_findDatasetsNameWithNSString_(ComAowagieTextPdfXfaForm *self, NSString *name);

__attribute__((unused)) static NSString *ComAowagieTextPdfXfaForm_getNodeTextWithOrgW3cDomNode_withNSString_(id<OrgW3cDomNode> n, NSString *name);

__attribute__((unused)) static JavaxXmlParsersDocumentBuilderFactory *ComAowagieTextPdfXfaForm_getSecureDocumentFactory(void);

/*!
 @brief A structure to store each part of a SOM name and link it to the next part
  beginning from the lower hierarchy.
 */
@interface ComAowagieTextPdfXfaForm_InverseStore : NSObject {
 @public
  JavaUtilArrayList *part_;
  JavaUtilArrayList *follow_;
}

- (instancetype)init;

/*!
 @brief Gets the full name by traversing the hierarchy using only the
  index 0.
 @return the full name
 */
- (NSString *)getDefaultName;

/*!
 @brief Search the current node for a similar name.A similar name starts
  with the same name but has a different index.
 For example, "detail[3]"
  is similar to "detail[9]". The main use is to discard names that
  correspond to out of bounds records.
 @param name the name to search
 @return <CODE>true</CODE> if a similitude was found
 */
- (jboolean)isSimilarWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfXfaForm_InverseStore)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm_InverseStore, part_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm_InverseStore, follow_, JavaUtilArrayList *)

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_InverseStore_init(ComAowagieTextPdfXfaForm_InverseStore *self);

__attribute__((unused)) static ComAowagieTextPdfXfaForm_InverseStore *new_ComAowagieTextPdfXfaForm_InverseStore_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfXfaForm_InverseStore *create_ComAowagieTextPdfXfaForm_InverseStore_init(void);

__attribute__((unused)) static jboolean ComAowagieTextPdfXfaForm_InverseStore_isSimilarWithNSString_(ComAowagieTextPdfXfaForm_InverseStore *self, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfXfaForm_InverseStore)

@interface ComAowagieTextPdfXfaForm_Stack2 ()

- (instancetype)init;

/*!
 @brief Looks at the object at the top of this stack without removing it from the stack.
 @return the object at the top of this stack
 */
- (id)peek;

/*!
 @brief Removes the object at the top of this stack and returns that object as the value of this function.
 @return the object at the top of this stack
 */
- (id)pop;

/*!
 @brief Pushes an item onto the top of this stack.
 @param item the item to be pushed onto this stack
 @return the <CODE>item</CODE> argument
 */
- (id)pushWithId:(id)item;

/*!
 @brief Tests if this stack is empty.
 @return <CODE>true</CODE> if and only if this stack contains no items; <CODE>false</CODE> otherwise
 */
- (jboolean)empty;

@end

inline jlong ComAowagieTextPdfXfaForm_Stack2_get_serialVersionUID(void);
#define ComAowagieTextPdfXfaForm_Stack2_serialVersionUID -7451476576174095212LL
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfXfaForm_Stack2, serialVersionUID, jlong)

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_Stack2_init(ComAowagieTextPdfXfaForm_Stack2 *self);

__attribute__((unused)) static ComAowagieTextPdfXfaForm_Stack2 *new_ComAowagieTextPdfXfaForm_Stack2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfXfaForm_Stack2 *create_ComAowagieTextPdfXfaForm_Stack2_init(void);

__attribute__((unused)) static id ComAowagieTextPdfXfaForm_Stack2_peek(ComAowagieTextPdfXfaForm_Stack2 *self);

__attribute__((unused)) static id ComAowagieTextPdfXfaForm_Stack2_pop(ComAowagieTextPdfXfaForm_Stack2 *self);

__attribute__((unused)) static id ComAowagieTextPdfXfaForm_Stack2_pushWithId_(ComAowagieTextPdfXfaForm_Stack2 *self, id item);

__attribute__((unused)) static jboolean ComAowagieTextPdfXfaForm_Stack2_empty(ComAowagieTextPdfXfaForm_Stack2 *self);

@interface ComAowagieTextPdfXfaForm_Xml2SomDatasets ()

/*!
 @brief Creates a new instance from the datasets node.This expects
  not the datasets but the data node that comes below.
 @param n the datasets node
 */
- (instancetype)initWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

+ (jboolean)hasChildrenWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (void)processDatasetsInternalWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

@end

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(ComAowagieTextPdfXfaForm_Xml2SomDatasets *self, id<OrgW3cDomNode> n);

__attribute__((unused)) static ComAowagieTextPdfXfaForm_Xml2SomDatasets *new_ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfXfaForm_Xml2SomDatasets *create_ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n);

__attribute__((unused)) static jboolean ComAowagieTextPdfXfaForm_Xml2SomDatasets_hasChildrenWithOrgW3cDomNode_(id<OrgW3cDomNode> n);

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_Xml2SomDatasets_processDatasetsInternalWithOrgW3cDomNode_(ComAowagieTextPdfXfaForm_Xml2SomDatasets *self, id<OrgW3cDomNode> n);

@interface ComAowagieTextPdfXfaForm_AcroFieldsSearch () {
 @public
  JavaUtilHashMap *acroShort2LongName_;
}

/*!
 @brief Creates a new instance from a Collection with the full names.
 @param items the Collection
 */
- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)items;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfXfaForm_AcroFieldsSearch, acroShort2LongName_, JavaUtilHashMap *)

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(ComAowagieTextPdfXfaForm_AcroFieldsSearch *self, id<JavaUtilCollection> items);

__attribute__((unused)) static ComAowagieTextPdfXfaForm_AcroFieldsSearch *new_ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(id<JavaUtilCollection> items) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfXfaForm_AcroFieldsSearch *create_ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(id<JavaUtilCollection> items);

@interface ComAowagieTextPdfXfaForm_Xml2SomTemplate () {
 @public
  jboolean dynamicForm_;
  jint templateLevel_;
}

/*!
 @brief Creates a new instance from the datasets node.
 @param n the template node
 */
- (instancetype)initWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (void)processTemplateWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                     withJavaUtilHashMap:(JavaUtilHashMap *)ff;

@end

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(ComAowagieTextPdfXfaForm_Xml2SomTemplate *self, id<OrgW3cDomNode> n);

__attribute__((unused)) static ComAowagieTextPdfXfaForm_Xml2SomTemplate *new_ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfXfaForm_Xml2SomTemplate *create_ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n);

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_Xml2SomTemplate_processTemplateWithOrgW3cDomNode_withJavaUtilHashMap_(ComAowagieTextPdfXfaForm_Xml2SomTemplate *self, id<OrgW3cDomNode> n, JavaUtilHashMap *ff);

@interface ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver : NSObject < OrgXmlSaxEntityResolver >

- (instancetype)init;

- (OrgXmlSaxInputSource *)resolveEntityWithNSString:(NSString *)publicId
                                       withNSString:(NSString *)systemId;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver)

__attribute__((unused)) static void ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init(ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver *self);

__attribute__((unused)) static ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver *new_ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver *create_ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfXfaForm)

NSString *ComAowagieTextPdfXfaForm_XFA_DATA_SCHEMA = @"http://www.xfa.org/schema/xfa-data/1.0/";


#line 81
@implementation ComAowagieTextPdfXfaForm


#line 101
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfXfaForm_initPackagePrivate(self);
  return self;
}


#line 111
+ (ComAowagieTextPdfPdfObject *)getXfaObjectWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  return ComAowagieTextPdfXfaForm_getXfaObjectWithComAowagieTextPdfPdfReader_(reader);
}


#line 127
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  ComAowagieTextPdfXfaForm_initPackagePrivateWithComAowagieTextPdfPdfReader_(self, reader);
  return self;
}


#line 163
- (void)extractNodes {
  ComAowagieTextPdfXfaForm_extractNodes(self);
}


#line 192
+ (void)setXfaWithComAowagieTextPdfXfaForm:(ComAowagieTextPdfXfaForm *)form
            withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
            withComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  ComAowagieTextPdfXfaForm_setXfaWithComAowagieTextPdfXfaForm_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(form, reader, writer);
}


#line 236
- (void)setXfaWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  ComAowagieTextPdfXfaForm_setXfaWithComAowagieTextPdfXfaForm_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(self, self->reader_, writer);
}


#line 246
+ (IOSByteArray *)serializeDocWithOrgW3cDomNode:(id<OrgW3cDomNode>)n {
  return ComAowagieTextPdfXfaForm_serializeDocWithOrgW3cDomNode_(n);
}


#line 260
- (jboolean)isXfaPresent {
  return self->xfaPresent_;
}


#line 268
- (id<OrgW3cDomDocument>)getDomDocument {
  return self->domDocument_;
}


#line 280
- (NSString *)findFieldNameWithNSString:(NSString *)name
        withComAowagieTextPdfAcroFields:(ComAowagieTextPdfAcroFields *)af {
  
#line 281
  JavaUtilHashMap *items = [((ComAowagieTextPdfAcroFields *) nil_chk(af)) getFields];
  if ([((JavaUtilHashMap *) nil_chk(items)) containsKeyWithId:name]) {
    return name;
  }
  if (self->acroFieldsSom_ == nil) {
    if ([items isEmpty] && self->xfaPresent_) {
      self->acroFieldsSom_ = new_ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_([((JavaUtilHashMap *) nil_chk([((ComAowagieTextPdfXfaForm_Xml2SomDatasets *) nil_chk(self->datasetsSom_)) getName2Node])) keySet]);
    }
    else {
      
#line 289
      self->acroFieldsSom_ = new_ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_([items keySet]);
    }
  }
  if ([((JavaUtilHashMap *) nil_chk([self->acroFieldsSom_ getAcroShort2LongName])) containsKeyWithId:name]) {
    return (NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([((ComAowagieTextPdfXfaForm_AcroFieldsSearch *) nil_chk(self->acroFieldsSom_)) getAcroShort2LongName])) getWithId:name], [NSString class]);
  }
  return [((ComAowagieTextPdfXfaForm_AcroFieldsSearch *) nil_chk(self->acroFieldsSom_)) inverseSearchGlobalWithJavaUtilArrayList:ComAowagieTextPdfXfaForm_Xml2Som_splitPartsWithNSString_(name)];
}

- (NSString *)findDatasetsNameWithNSString:(NSString *)name {
  return ComAowagieTextPdfXfaForm_findDatasetsNameWithNSString_(self, name);
}


#line 317
- (id<OrgW3cDomNode>)findDatasetsNodeWithNSString:(NSString *)name {
  if (name == nil) {
    return nil;
  }
  name = ComAowagieTextPdfXfaForm_findDatasetsNameWithNSString_(self, name);
  if (name == nil) {
    return nil;
  }
  return (id<OrgW3cDomNode>) cast_check([((JavaUtilHashMap *) nil_chk([((ComAowagieTextPdfXfaForm_Xml2SomDatasets *) nil_chk(self->datasetsSom_)) getName2Node])) getWithId:name], OrgW3cDomNode_class_());
}


#line 330
+ (NSString *)getNodeTextWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                              withNSString:(NSString *)name {
  return ComAowagieTextPdfXfaForm_getNodeTextWithOrgW3cDomNode_withNSString_(n, name);
}


#line 350
- (void)setNodeTextWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                        withNSString:(NSString *)text {
  
#line 351
  if (n == nil) {
    return;
  }
  id<OrgW3cDomNode> nc = nil;
  while ((nc = [n getFirstChild]) != nil) {
    (void) [n removeChildWithOrgW3cDomNode:nc];
  }
  if ([((id<OrgW3cDomNamedNodeMap>) nil_chk([n getAttributes])) getNamedItemNSWithNSString:ComAowagieTextPdfXfaForm_XFA_DATA_SCHEMA withNSString:@"dataNode"] != nil) {
    (void) [((id<OrgW3cDomNamedNodeMap>) nil_chk([n getAttributes])) removeNamedItemNSWithNSString:ComAowagieTextPdfXfaForm_XFA_DATA_SCHEMA withNSString:@"dataNode"];
  }
  (void) [n appendChildWithOrgW3cDomNode:[((id<OrgW3cDomDocument>) nil_chk(self->domDocument_)) createTextNodeWithNSString:text]];
  self->changed_ = true;
}


#line 369
- (void)setXfaPresentWithBoolean:(jboolean)xfaPresent {
  self->xfaPresent_ = xfaPresent;
}


#line 377
- (void)setDomDocumentWithOrgW3cDomDocument:(id<OrgW3cDomDocument>)domDocument {
  self->domDocument_ = domDocument;
  ComAowagieTextPdfXfaForm_extractNodes(self);
}


#line 386
- (ComAowagieTextPdfPdfReader *)getReader {
  return self->reader_;
}


#line 394
- (void)setReaderWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  self->reader_ = reader;
}


#line 402
- (jboolean)isChanged {
  return self->changed_;
}


#line 410
- (void)setChangedWithBoolean:(jboolean)changed {
  self->changed_ = changed;
}

+ (JavaxXmlParsersDocumentBuilderFactory *)getSecureDocumentFactory {
  return ComAowagieTextPdfXfaForm_getSecureDocumentFactory();
}


#line 1085
- (ComAowagieTextPdfXfaForm_Xml2SomTemplate *)getTemplateSom {
  return self->templateSom_;
}


#line 1093
- (void)setTemplateSomWithComAowagieTextPdfXfaForm_Xml2SomTemplate:(ComAowagieTextPdfXfaForm_Xml2SomTemplate *)templateSom {
  self->templateSom_ = templateSom;
}


#line 1101
- (ComAowagieTextPdfXfaForm_Xml2SomDatasets *)getDatasetsSom {
  return self->datasetsSom_;
}


#line 1109
- (void)setDatasetsSomWithComAowagieTextPdfXfaForm_Xml2SomDatasets:(ComAowagieTextPdfXfaForm_Xml2SomDatasets *)datasetsSom {
  self->datasetsSom_ = datasetsSom;
}


#line 1117
- (ComAowagieTextPdfXfaForm_AcroFieldsSearch *)getAcroFieldsSom {
  return self->acroFieldsSom_;
}


#line 1125
- (void)setAcroFieldsSomWithComAowagieTextPdfXfaForm_AcroFieldsSearch:(ComAowagieTextPdfXfaForm_AcroFieldsSearch *)acroFieldsSom {
  self->acroFieldsSom_ = acroFieldsSom;
}


#line 1133
- (id<OrgW3cDomNode>)getDatasetsNode {
  return self->datasetsNode_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfObject;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 6, 5, -1, -1, -1 },
    { NULL, "[B", 0xa, 7, 8, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomDocument;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomNode;", 0x0, 13, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 16, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 18, -1, -1, -1, -1 },
    { NULL, "LJavaxXmlParsersDocumentBuilderFactory;", 0x2a, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfXfaForm_Xml2SomTemplate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 24, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfXfaForm_Xml2SomDatasets;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfXfaForm_AcroFieldsSearch;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomNode;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(getXfaObjectWithComAowagieTextPdfPdfReader:);
  methods[2].selector = @selector(initPackagePrivateWithComAowagieTextPdfPdfReader:);
  methods[3].selector = @selector(extractNodes);
  methods[4].selector = @selector(setXfaWithComAowagieTextPdfXfaForm:withComAowagieTextPdfPdfReader:withComAowagieTextPdfPdfWriter:);
  methods[5].selector = @selector(setXfaWithComAowagieTextPdfPdfWriter:);
  methods[6].selector = @selector(serializeDocWithOrgW3cDomNode:);
  methods[7].selector = @selector(isXfaPresent);
  methods[8].selector = @selector(getDomDocument);
  methods[9].selector = @selector(findFieldNameWithNSString:withComAowagieTextPdfAcroFields:);
  methods[10].selector = @selector(findDatasetsNameWithNSString:);
  methods[11].selector = @selector(findDatasetsNodeWithNSString:);
  methods[12].selector = @selector(getNodeTextWithOrgW3cDomNode:withNSString:);
  methods[13].selector = @selector(setNodeTextWithOrgW3cDomNode:withNSString:);
  methods[14].selector = @selector(setXfaPresentWithBoolean:);
  methods[15].selector = @selector(setDomDocumentWithOrgW3cDomDocument:);
  methods[16].selector = @selector(getReader);
  methods[17].selector = @selector(setReaderWithComAowagieTextPdfPdfReader:);
  methods[18].selector = @selector(isChanged);
  methods[19].selector = @selector(setChangedWithBoolean:);
  methods[20].selector = @selector(getSecureDocumentFactory);
  methods[21].selector = @selector(getTemplateSom);
  methods[22].selector = @selector(setTemplateSomWithComAowagieTextPdfXfaForm_Xml2SomTemplate:);
  methods[23].selector = @selector(getDatasetsSom);
  methods[24].selector = @selector(setDatasetsSomWithComAowagieTextPdfXfaForm_Xml2SomDatasets:);
  methods[25].selector = @selector(getAcroFieldsSom);
  methods[26].selector = @selector(setAcroFieldsSomWithComAowagieTextPdfXfaForm_AcroFieldsSearch:);
  methods[27].selector = @selector(getDatasetsNode);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "templateSom_", "LComAowagieTextPdfXfaForm_Xml2SomTemplate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "templateNode_", "LOrgW3cDomNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "datasetsSom_", "LComAowagieTextPdfXfaForm_Xml2SomDatasets;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "datasetsNode_", "LOrgW3cDomNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "acroFieldsSom_", "LComAowagieTextPdfXfaForm_AcroFieldsSearch;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "reader_", "LComAowagieTextPdfPdfReader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xfaPresent_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "domDocument_", "LOrgW3cDomDocument;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "changed_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "XFA_DATA_SCHEMA", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "SECURE_FACTORY", "LJavaxXmlParsersDocumentBuilderFactory;", .constantValue.asLong = 0, 0xa, -1, 30, -1, -1 },
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
  };
  static const void *ptrTable[] = { "getXfaObject", "LComAowagieTextPdfPdfReader;", "LJavaIoIOException;LJavaxXmlParsersParserConfigurationException;LOrgXmlSaxSAXException;", "setXfa", "LComAowagieTextPdfXfaForm;LComAowagieTextPdfPdfReader;LComAowagieTextPdfPdfWriter;", "LJavaIoIOException;", "LComAowagieTextPdfPdfWriter;", "serializeDoc", "LOrgW3cDomNode;", "findFieldName", "LNSString;LComAowagieTextPdfAcroFields;", "findDatasetsName", "LNSString;", "findDatasetsNode", "getNodeText", "LOrgW3cDomNode;LNSString;", "setNodeText", "setXfaPresent", "Z", "setDomDocument", "LOrgW3cDomDocument;", "setReader", "setChanged", "setTemplateSom", "LComAowagieTextPdfXfaForm_Xml2SomTemplate;", "setDatasetsSom", "LComAowagieTextPdfXfaForm_Xml2SomDatasets;", "setAcroFieldsSom", "LComAowagieTextPdfXfaForm_AcroFieldsSearch;", &ComAowagieTextPdfXfaForm_XFA_DATA_SCHEMA, &ComAowagieTextPdfXfaForm_SECURE_FACTORY, &ComAowagieTextPdfXfaForm_LOGGER, "LComAowagieTextPdfXfaForm_InverseStore;LComAowagieTextPdfXfaForm_Stack2;LComAowagieTextPdfXfaForm_Xml2Som;LComAowagieTextPdfXfaForm_Xml2SomDatasets;LComAowagieTextPdfXfaForm_AcroFieldsSearch;LComAowagieTextPdfXfaForm_Xml2SomTemplate;LComAowagieTextPdfXfaForm_SafeEmptyEntityResolver;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm = { "XfaForm", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 28, 12, -1, 32, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfXfaForm class]) {
    ComAowagieTextPdfXfaForm_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 96
    [ComAowagieTextPdfXfaForm_class_() getName]);
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfXfaForm)
  }
}

@end


#line 101
void ComAowagieTextPdfXfaForm_initPackagePrivate(ComAowagieTextPdfXfaForm *self) {
  NSObject_init(self);
}


#line 101
ComAowagieTextPdfXfaForm *new_ComAowagieTextPdfXfaForm_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm, initPackagePrivate)
}


#line 101
ComAowagieTextPdfXfaForm *create_ComAowagieTextPdfXfaForm_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm, initPackagePrivate)
}


#line 111
ComAowagieTextPdfPdfObject *ComAowagieTextPdfXfaForm_getXfaObjectWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfPdfReader *reader) {
  ComAowagieTextPdfXfaForm_initialize();
  
#line 112
  ComAowagieTextPdfPdfDictionary *af = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getCatalog])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)]), [ComAowagieTextPdfPdfDictionary class]);
  if (af == nil) {
    return nil;
  }
  return ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([af getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, XFA)]);
}


#line 127
void ComAowagieTextPdfXfaForm_initPackagePrivateWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfXfaForm *self, ComAowagieTextPdfPdfReader *reader) {
  NSObject_init(self);
  
#line 128
  self->reader_ = reader;
  ComAowagieTextPdfPdfObject *xfa = ComAowagieTextPdfXfaForm_getXfaObjectWithComAowagieTextPdfPdfReader_(reader);
  if (xfa == nil) {
    self->xfaPresent_ = false;
    return;
  }
  self->xfaPresent_ = true;
  JavaIoByteArrayOutputStream *bout = new_JavaIoByteArrayOutputStream_init();
  if ([xfa isArray]) {
    ComAowagieTextPdfPdfArray *ar = (ComAowagieTextPdfPdfArray *) cast_chk(xfa, [ComAowagieTextPdfPdfArray class]);
    for (jint k = 1; k < [ar size]; k += 2) {
      ComAowagieTextPdfPdfObject *ob = [ar getDirectObjectWithInt:k];
      if ([ob isKindOfClass:[ComAowagieTextPdfPRStream class]]) {
        IOSByteArray *b = ComAowagieTextPdfPdfReader_getStreamBytesWithComAowagieTextPdfPRStream_((ComAowagieTextPdfPRStream *) ob);
        [bout writeWithByteArray:b];
      }
    }
  }
  else if ([xfa isKindOfClass:[ComAowagieTextPdfPRStream class]]) {
    IOSByteArray *b = ComAowagieTextPdfPdfReader_getStreamBytesWithComAowagieTextPdfPRStream_((ComAowagieTextPdfPRStream *) xfa);
    [bout writeWithByteArray:b];
  }
  [bout close];
  JavaxXmlParsersDocumentBuilderFactory *fact = ComAowagieTextPdfXfaForm_getSecureDocumentFactory();
  [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(fact)) setNamespaceAwareWithBoolean:true];
  JavaxXmlParsersDocumentBuilder *db = [fact newDocumentBuilder];
  [((JavaxXmlParsersDocumentBuilder *) nil_chk(db)) setEntityResolverWithOrgXmlSaxEntityResolver:new_ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init()];
  self->domDocument_ = [db parseWithJavaIoInputStream:new_JavaIoByteArrayInputStream_initWithByteArray_([bout toByteArray])];
  ComAowagieTextPdfXfaForm_extractNodes(self);
}


#line 127
ComAowagieTextPdfXfaForm *new_ComAowagieTextPdfXfaForm_initPackagePrivateWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfPdfReader *reader) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm, initPackagePrivateWithComAowagieTextPdfPdfReader_, reader)
}


#line 127
ComAowagieTextPdfXfaForm *create_ComAowagieTextPdfXfaForm_initPackagePrivateWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfPdfReader *reader) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm, initPackagePrivateWithComAowagieTextPdfPdfReader_, reader)
}


#line 163
void ComAowagieTextPdfXfaForm_extractNodes(ComAowagieTextPdfXfaForm *self) {
  id<OrgW3cDomNode> n = [((id<OrgW3cDomDocument>) nil_chk(self->domDocument_)) getFirstChild];
  while ([((id<OrgW3cDomNodeList>) nil_chk([((id<OrgW3cDomNode>) nil_chk(n)) getChildNodes])) getLength] == 0) {
    n = [n getNextSibling];
  }
  n = [n getFirstChild];
  while (n != nil) {
    if ([n getNodeType] == OrgW3cDomNode_ELEMENT_NODE) {
      NSString *s = [n getLocalName];
      if ([((NSString *) nil_chk(s)) isEqual:@"template"]) {
        self->templateNode_ = n;
        self->templateSom_ = new_ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(n);
      }
      else if ([s isEqual:@"datasets"]) {
        self->datasetsNode_ = n;
        self->datasetsSom_ = new_ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_([n getFirstChild]);
      }
    }
    n = [n getNextSibling];
  }
}


#line 192
void ComAowagieTextPdfXfaForm_setXfaWithComAowagieTextPdfXfaForm_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfXfaForm *form, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfWriter *writer) {
  ComAowagieTextPdfXfaForm_initialize();
  
#line 193
  ComAowagieTextPdfPdfDictionary *af = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getCatalog])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)]), [ComAowagieTextPdfPdfDictionary class]);
  if (af == nil) {
    return;
  }
  ComAowagieTextPdfPdfObject *xfa = ComAowagieTextPdfXfaForm_getXfaObjectWithComAowagieTextPdfPdfReader_(reader);
  if ([((ComAowagieTextPdfPdfObject *) nil_chk(xfa)) isArray]) {
    ComAowagieTextPdfPdfArray *ar = (ComAowagieTextPdfPdfArray *) cast_chk(xfa, [ComAowagieTextPdfPdfArray class]);
    jint t = -1;
    jint d = -1;
    for (jint k = 0; k < [ar size]; k += 2) {
      ComAowagieTextPdfPdfString *s = [ar getAsStringWithInt:k];
      if ([@"template" isEqual:[((ComAowagieTextPdfPdfString *) nil_chk(s)) description]]) {
        t = k + 1;
      }
      if ([@"datasets" isEqual:[s description]]) {
        d = k + 1;
      }
    }
    if (t > -1 && d > -1) {
      [reader killXrefWithComAowagieTextPdfPdfObject:[ar getAsIndirectObjectWithInt:t]];
      [reader killXrefWithComAowagieTextPdfPdfObject:[ar getAsIndirectObjectWithInt:d]];
      ComAowagieTextPdfPdfStream *tStream = new_ComAowagieTextPdfPdfStream_initWithByteArray_(ComAowagieTextPdfXfaForm_serializeDocWithOrgW3cDomNode_(((ComAowagieTextPdfXfaForm *) nil_chk(form))->templateNode_));
      [tStream flateCompressWithInt:[((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) getCompressionLevel]];
      (void) [ar setWithInt:t withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([writer addToBodyWithComAowagieTextPdfPdfObject:tStream])) getIndirectReference]];
      ComAowagieTextPdfPdfStream *dStream = new_ComAowagieTextPdfPdfStream_initWithByteArray_(ComAowagieTextPdfXfaForm_serializeDocWithOrgW3cDomNode_(form->datasetsNode_));
      [dStream flateCompressWithInt:[writer getCompressionLevel]];
      (void) [ar setWithInt:d withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([writer addToBodyWithComAowagieTextPdfPdfObject:dStream])) getIndirectReference]];
      [af putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, XFA) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_initWithComAowagieTextPdfPdfArray_(ar)];
      return;
    }
  }
  [reader killXrefWithComAowagieTextPdfPdfObject:[af getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, XFA)]];
  ComAowagieTextPdfPdfStream *str = new_ComAowagieTextPdfPdfStream_initWithByteArray_(ComAowagieTextPdfXfaForm_serializeDocWithOrgW3cDomNode_(((ComAowagieTextPdfXfaForm *) nil_chk(form))->domDocument_));
  [str flateCompressWithInt:[((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) getCompressionLevel]];
  ComAowagieTextPdfPdfIndirectReference *ref = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([writer addToBodyWithComAowagieTextPdfPdfObject:str])) getIndirectReference];
  [af putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, XFA) withComAowagieTextPdfPdfObject:ref];
}


#line 246
IOSByteArray *ComAowagieTextPdfXfaForm_serializeDocWithOrgW3cDomNode_(id<OrgW3cDomNode> n) {
  ComAowagieTextPdfXfaForm_initialize();
  
#line 247
  ComAowagieTextXmlXmlDomWriter *xw = new_ComAowagieTextXmlXmlDomWriter_init();
  JavaIoByteArrayOutputStream *fout = new_JavaIoByteArrayOutputStream_init();
  [xw setOutputWithJavaIoOutputStream:fout withNSString:nil];
  [xw setCanonicalWithBoolean:false];
  [xw writeWithOrgW3cDomNode:n];
  [fout close];
  return [fout toByteArray];
}


#line 304
NSString *ComAowagieTextPdfXfaForm_findDatasetsNameWithNSString_(ComAowagieTextPdfXfaForm *self, NSString *name) {
  if ([((JavaUtilHashMap *) nil_chk([((ComAowagieTextPdfXfaForm_Xml2SomDatasets *) nil_chk(self->datasetsSom_)) getName2Node])) containsKeyWithId:name]) {
    return name;
  }
  return [((ComAowagieTextPdfXfaForm_Xml2SomDatasets *) nil_chk(self->datasetsSom_)) inverseSearchGlobalWithJavaUtilArrayList:ComAowagieTextPdfXfaForm_Xml2Som_splitPartsWithNSString_(name)];
}


#line 330
NSString *ComAowagieTextPdfXfaForm_getNodeTextWithOrgW3cDomNode_withNSString_(id<OrgW3cDomNode> n, NSString *name) {
  ComAowagieTextPdfXfaForm_initialize();
  
#line 331
  id<OrgW3cDomNode> n2 = [((id<OrgW3cDomNode>) nil_chk(n)) getFirstChild];
  while (n2 != nil) {
    if ([n2 getNodeType] == OrgW3cDomNode_ELEMENT_NODE) {
      name = ComAowagieTextPdfXfaForm_getNodeTextWithOrgW3cDomNode_withNSString_(n2, name);
    }
    else if ([n2 getNodeType] == OrgW3cDomNode_TEXT_NODE) {
      (void) JreStrAppendStrong(&name, "$", [n2 getNodeValue]);
    }
    n2 = [n2 getNextSibling];
  }
  return name;
}


#line 414
JavaxXmlParsersDocumentBuilderFactory *ComAowagieTextPdfXfaForm_getSecureDocumentFactory() {
  ComAowagieTextPdfXfaForm_initialize();
  @synchronized(ComAowagieTextPdfXfaForm_class_()) {
    
#line 416
    if (ComAowagieTextPdfXfaForm_SECURE_FACTORY != nil) {
      return JreRetainedLocalValue(ComAowagieTextPdfXfaForm_SECURE_FACTORY);
    }
    
#line 420
    ComAowagieTextPdfXfaForm_SECURE_FACTORY = JavaxXmlParsersDocumentBuilderFactory_newInstance();
    
#line 423
    @try {
      [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(ComAowagieTextPdfXfaForm_SECURE_FACTORY)) setFeatureWithNSString:ComAowagieTextXmlXMLConstants_FEATURE_SECURE_PROCESSING withBoolean:[((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, TRUE))) booleanValue]];
    }
    @catch (JavaLangException *e) {
      [((JavaUtilLoggingLogger *) nil_chk(ComAowagieTextPdfXfaForm_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$@", @"No se pudo configurar el procesador seguro: ", e)];
    }
    
#line 433
    IOSObjectArray *securityProperties = [IOSObjectArray newArrayWithObjects:(id[]){
#line 434
      ComAowagieTextXmlXMLConstants_ACCESS_EXTERNAL_DTD,
#line 435
      ComAowagieTextXmlXMLConstants_ACCESS_EXTERNAL_SCHEMA,
#line 436
      ComAowagieTextXmlXMLConstants_ACCESS_EXTERNAL_STYLESHEET } count:3 type:NSString_class_()];
      {
        IOSObjectArray *a__ = securityProperties;
        NSString * const *b__ = a__->buffer_;
        NSString * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          NSString *securityProperty = *b__++;
          
#line 439
          @try {
            [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(ComAowagieTextPdfXfaForm_SECURE_FACTORY)) setAttributeWithNSString:securityProperty withId:@""];
          }
          @catch (JavaLangException *e) {
            
#line 445
            if ([((JavaUtilLoggingLogger *) nil_chk(ComAowagieTextPdfXfaForm_LOGGER)) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE)]) {
              [ComAowagieTextPdfXfaForm_LOGGER logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE) withNSString:JreStrcat("$$$@", @"No se ha podido establecer una propiedad de seguridad '", securityProperty, @"' en la factoria XML: ", e)];
            }
          }
        }
      }
      [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(ComAowagieTextPdfXfaForm_SECURE_FACTORY)) setValidatingWithBoolean:false];
      
#line 453
      return JreRetainedLocalValue(ComAowagieTextPdfXfaForm_SECURE_FACTORY);
    }
  }

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"


#line 460
@implementation ComAowagieTextPdfXfaForm_InverseStore

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 460
- (instancetype)init {
  ComAowagieTextPdfXfaForm_InverseStore_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 469
- (NSString *)getDefaultName {
  ComAowagieTextPdfXfaForm_InverseStore *store = self;
  while (true) {
    id obj = [((JavaUtilArrayList *) nil_chk(((ComAowagieTextPdfXfaForm_InverseStore *) nil_chk(store))->follow_)) getWithInt:0];
    if ([obj isKindOfClass:[NSString class]]) {
      return (NSString *) obj;
    }
    store = (ComAowagieTextPdfXfaForm_InverseStore *) cast_chk(obj, [ComAowagieTextPdfXfaForm_InverseStore class]);
  }
}


#line 488
- (jboolean)isSimilarWithNSString:(NSString *)name {
  return ComAowagieTextPdfXfaForm_InverseStore_isSimilarWithNSString_(self, name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDefaultName);
  methods[2].selector = @selector(isSimilarWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "part_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "follow_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "isSimilar", "LNSString;", "LComAowagieTextPdfXfaForm;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm_InverseStore = { "InverseStore", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0xa, 3, 2, 2, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm_InverseStore;
}

@end


#line 460
void ComAowagieTextPdfXfaForm_InverseStore_init(ComAowagieTextPdfXfaForm_InverseStore *self) {
  NSObject_init(self);
  self->part_ = new_JavaUtilArrayList_init();
  self->follow_ = new_JavaUtilArrayList_init();
}


#line 460
ComAowagieTextPdfXfaForm_InverseStore *new_ComAowagieTextPdfXfaForm_InverseStore_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm_InverseStore, init)
}


#line 460
ComAowagieTextPdfXfaForm_InverseStore *create_ComAowagieTextPdfXfaForm_InverseStore_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm_InverseStore, init)
}


#line 488
jboolean ComAowagieTextPdfXfaForm_InverseStore_isSimilarWithNSString_(ComAowagieTextPdfXfaForm_InverseStore *self, NSString *name) {
  jint idx = [((NSString *) nil_chk(name)) java_indexOf:'['];
  name = [name java_substring:0 endIndex:idx + 1];
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(self->part_)) size]; ++k) {
    if ([((NSString *) nil_chk(((NSString *) cast_chk([self->part_ getWithInt:k], [NSString class])))) java_hasPrefix:name]) {
      return true;
    }
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm_InverseStore)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"


#line 504
@implementation ComAowagieTextPdfXfaForm_Stack2

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 504
- (instancetype)init {
  ComAowagieTextPdfXfaForm_Stack2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 511
- (id)peek {
  return ComAowagieTextPdfXfaForm_Stack2_peek(self);
}


#line 522
- (id)pop {
  return ComAowagieTextPdfXfaForm_Stack2_pop(self);
}


#line 536
- (id)pushWithId:(id)item {
  return ComAowagieTextPdfXfaForm_Stack2_pushWithId_(self, item);
}


#line 545
- (jboolean)empty {
  return ComAowagieTextPdfXfaForm_Stack2_empty(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(peek);
  methods[2].selector = @selector(pop);
  methods[3].selector = @selector(pushWithId:);
  methods[4].selector = @selector(empty);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComAowagieTextPdfXfaForm_Stack2_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "push", "LNSObject;", "LComAowagieTextPdfXfaForm;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm_Stack2 = { "Stack2", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0xa, 5, 1, 2, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm_Stack2;
}

@end


#line 504
void ComAowagieTextPdfXfaForm_Stack2_init(ComAowagieTextPdfXfaForm_Stack2 *self) {
  JavaUtilArrayList_init(self);
}


#line 504
ComAowagieTextPdfXfaForm_Stack2 *new_ComAowagieTextPdfXfaForm_Stack2_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm_Stack2, init)
}


#line 504
ComAowagieTextPdfXfaForm_Stack2 *create_ComAowagieTextPdfXfaForm_Stack2_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm_Stack2, init)
}


#line 511
id ComAowagieTextPdfXfaForm_Stack2_peek(ComAowagieTextPdfXfaForm_Stack2 *self) {
  if ([self size] == 0) {
    @throw new_JavaUtilEmptyStackException_init();
  }
  return [self getWithInt:[self size] - 1];
}


#line 522
id ComAowagieTextPdfXfaForm_Stack2_pop(ComAowagieTextPdfXfaForm_Stack2 *self) {
  if ([self size] == 0) {
    @throw new_JavaUtilEmptyStackException_init();
  }
  id ret = [self getWithInt:[self size] - 1];
  (void) [self removeWithInt:[self size] - 1];
  return ret;
}


#line 536
id ComAowagieTextPdfXfaForm_Stack2_pushWithId_(ComAowagieTextPdfXfaForm_Stack2 *self, id item) {
  [self addWithId:item];
  return item;
}


#line 545
jboolean ComAowagieTextPdfXfaForm_Stack2_empty(ComAowagieTextPdfXfaForm_Stack2 *self) {
  return [self size] == 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm_Stack2)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"


#line 553
@implementation ComAowagieTextPdfXfaForm_Xml2Som

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 553
- (instancetype)init {
  ComAowagieTextPdfXfaForm_Xml2Som_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 580
+ (NSString *)escapeSomWithNSString:(NSString *)s {
  return ComAowagieTextPdfXfaForm_Xml2Som_escapeSomWithNSString_(s);
}


#line 604
- (NSString *)printStack {
  if (ComAowagieTextPdfXfaForm_Stack2_empty(nil_chk(self->stack_))) {
    return @"";
  }
  JavaLangStringBuffer *s = new_JavaLangStringBuffer_init();
  for (jint k = 0; k < [((ComAowagieTextPdfXfaForm_Stack2 *) nil_chk(self->stack_)) size]; ++k) {
    (void) [((JavaLangStringBuffer *) nil_chk([s appendWithChar:'.'])) appendWithNSString:(NSString *) cast_chk([((ComAowagieTextPdfXfaForm_Stack2 *) nil_chk(self->stack_)) getWithInt:k], [NSString class])];
  }
  return [s substringWithInt:1];
}


#line 620
+ (NSString *)getShortNameWithNSString:(NSString *)s {
  return ComAowagieTextPdfXfaForm_Xml2Som_getShortNameWithNSString_(s);
}


#line 644
- (void)inverseSearchAddWithNSString:(NSString *)unstack {
  ComAowagieTextPdfXfaForm_Xml2Som_inverseSearchAddWithJavaUtilHashMap_withComAowagieTextPdfXfaForm_Stack2_withNSString_(self->inverseSearch_, self->stack_, unstack);
}


#line 654
+ (void)inverseSearchAddWithJavaUtilHashMap:(JavaUtilHashMap *)inverseSearch
        withComAowagieTextPdfXfaForm_Stack2:(ComAowagieTextPdfXfaForm_Stack2 *)stack
                               withNSString:(NSString *)unstack {
  ComAowagieTextPdfXfaForm_Xml2Som_inverseSearchAddWithJavaUtilHashMap_withComAowagieTextPdfXfaForm_Stack2_withNSString_(inverseSearch, stack, unstack);
}


#line 683
- (NSString *)inverseSearchGlobalWithJavaUtilArrayList:(JavaUtilArrayList *)parts {
  if ([((JavaUtilArrayList *) nil_chk(parts)) isEmpty]) {
    return nil;
  }
  ComAowagieTextPdfXfaForm_InverseStore *store = (ComAowagieTextPdfXfaForm_InverseStore *) cast_chk([((JavaUtilHashMap *) nil_chk(self->inverseSearch_)) getWithId:[parts getWithInt:[parts size] - 1]], [ComAowagieTextPdfXfaForm_InverseStore class]);
  if (store == nil) {
    return nil;
  }
  for (jint k = [parts size] - 2; k >= 0; --k) {
    NSString *part = (NSString *) cast_chk([parts getWithInt:k], [NSString class]);
    jint idx = [((JavaUtilArrayList *) nil_chk(((ComAowagieTextPdfXfaForm_InverseStore *) nil_chk(store))->part_)) indexOfWithId:part];
    if (idx < 0) {
      if (ComAowagieTextPdfXfaForm_InverseStore_isSimilarWithNSString_(store, part)) {
        return nil;
      }
      return [store getDefaultName];
    }
    store = (ComAowagieTextPdfXfaForm_InverseStore *) cast_chk([((JavaUtilArrayList *) nil_chk(store->follow_)) getWithInt:idx], [ComAowagieTextPdfXfaForm_InverseStore class]);
  }
  return [((ComAowagieTextPdfXfaForm_InverseStore *) nil_chk(store)) getDefaultName];
}


#line 710
+ (ComAowagieTextPdfXfaForm_Stack2 *)splitPartsWithNSString:(NSString *)name {
  return ComAowagieTextPdfXfaForm_Xml2Som_splitPartsWithNSString_(name);
}


#line 753
- (JavaUtilArrayList *)getOrder {
  return self->order_;
}


#line 761
- (void)setOrderWithJavaUtilArrayList:(JavaUtilArrayList *)order {
  self->order_ = order;
}


#line 769
- (JavaUtilHashMap *)getName2Node {
  return self->name2Node_;
}


#line 777
- (void)setName2NodeWithJavaUtilHashMap:(JavaUtilHashMap *)name2Node {
  self->name2Node_ = name2Node;
}


#line 785
- (JavaUtilHashMap *)getInverseSearch {
  return self->inverseSearch_;
}


#line 793
- (void)setInverseSearchWithJavaUtilHashMap:(JavaUtilHashMap *)inverseSearch {
  self->inverseSearch_ = inverseSearch;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfXfaForm_Stack2;", 0x8, 7, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(escapeSomWithNSString:);
  methods[2].selector = @selector(printStack);
  methods[3].selector = @selector(getShortNameWithNSString:);
  methods[4].selector = @selector(inverseSearchAddWithNSString:);
  methods[5].selector = @selector(inverseSearchAddWithJavaUtilHashMap:withComAowagieTextPdfXfaForm_Stack2:withNSString:);
  methods[6].selector = @selector(inverseSearchGlobalWithJavaUtilArrayList:);
  methods[7].selector = @selector(splitPartsWithNSString:);
  methods[8].selector = @selector(getOrder);
  methods[9].selector = @selector(setOrderWithJavaUtilArrayList:);
  methods[10].selector = @selector(getName2Node);
  methods[11].selector = @selector(setName2NodeWithJavaUtilHashMap:);
  methods[12].selector = @selector(getInverseSearch);
  methods[13].selector = @selector(setInverseSearchWithJavaUtilHashMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "order_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "name2Node_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "inverseSearch_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "stack_", "LComAowagieTextPdfXfaForm_Stack2;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "anform_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "escapeSom", "LNSString;", "getShortName", "inverseSearchAdd", "LJavaUtilHashMap;LComAowagieTextPdfXfaForm_Stack2;LNSString;", "inverseSearchGlobal", "LJavaUtilArrayList;", "splitParts", "setOrder", "setName2Node", "LJavaUtilHashMap;", "setInverseSearch", "LComAowagieTextPdfXfaForm;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm_Xml2Som = { "Xml2Som", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x8, 14, 5, 12, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm_Xml2Som;
}

@end


#line 553
void ComAowagieTextPdfXfaForm_Xml2Som_init(ComAowagieTextPdfXfaForm_Xml2Som *self) {
  NSObject_init(self);
}


#line 553
ComAowagieTextPdfXfaForm_Xml2Som *new_ComAowagieTextPdfXfaForm_Xml2Som_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm_Xml2Som, init)
}


#line 553
ComAowagieTextPdfXfaForm_Xml2Som *create_ComAowagieTextPdfXfaForm_Xml2Som_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm_Xml2Som, init)
}


#line 580
NSString *ComAowagieTextPdfXfaForm_Xml2Som_escapeSomWithNSString_(NSString *s) {
  ComAowagieTextPdfXfaForm_Xml2Som_initialize();
  
#line 581
  jint idx = [((NSString *) nil_chk(s)) java_indexOf:'.'];
  if (idx < 0) {
    return s;
  }
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  jint last = 0;
  while (idx >= 0) {
    (void) [sb appendWithNSString:[s java_substring:last endIndex:idx]];
    (void) [sb appendWithChar:'\\'];
    last = idx;
    idx = [s java_indexOf:'.' fromIndex:idx + 1];
  }
  (void) [sb appendWithNSString:[s java_substring:last]];
  return [sb description];
}


#line 620
NSString *ComAowagieTextPdfXfaForm_Xml2Som_getShortNameWithNSString_(NSString *s) {
  ComAowagieTextPdfXfaForm_Xml2Som_initialize();
  
#line 621
  jint idx = [((NSString *) nil_chk(s)) java_indexOfString:@".#subform["];
  if (idx < 0) {
    return s;
  }
  jint last = 0;
  JavaLangStringBuffer *sb = new_JavaLangStringBuffer_init();
  while (idx >= 0) {
    (void) [sb appendWithNSString:[s java_substring:last endIndex:idx]];
    idx = [s java_indexOfString:@"]" fromIndex:idx + 10];
    if (idx < 0) {
      return [sb description];
    }
    last = idx + 1;
    idx = [s java_indexOfString:@".#subform[" fromIndex:last];
  }
  (void) [sb appendWithNSString:[s java_substring:last]];
  return [sb description];
}


#line 654
void ComAowagieTextPdfXfaForm_Xml2Som_inverseSearchAddWithJavaUtilHashMap_withComAowagieTextPdfXfaForm_Stack2_withNSString_(JavaUtilHashMap *inverseSearch, ComAowagieTextPdfXfaForm_Stack2 *stack, NSString *unstack) {
  ComAowagieTextPdfXfaForm_Xml2Som_initialize();
  
#line 655
  NSString *last = (NSString *) cast_chk(ComAowagieTextPdfXfaForm_Stack2_peek(nil_chk(stack)), [NSString class]);
  ComAowagieTextPdfXfaForm_InverseStore *store = (ComAowagieTextPdfXfaForm_InverseStore *) cast_chk([((JavaUtilHashMap *) nil_chk(inverseSearch)) getWithId:last], [ComAowagieTextPdfXfaForm_InverseStore class]);
  if (store == nil) {
    store = new_ComAowagieTextPdfXfaForm_InverseStore_init();
    (void) [inverseSearch putWithId:last withId:store];
  }
  for (jint k = [stack size] - 2; k >= 0; --k) {
    last = (NSString *) cast_chk([stack getWithInt:k], [NSString class]);
    ComAowagieTextPdfXfaForm_InverseStore *store2;
    jint idx = [((JavaUtilArrayList *) nil_chk(((ComAowagieTextPdfXfaForm_InverseStore *) nil_chk(store))->part_)) indexOfWithId:last];
    if (idx < 0) {
      [store->part_ addWithId:last];
      store2 = new_ComAowagieTextPdfXfaForm_InverseStore_init();
      [((JavaUtilArrayList *) nil_chk(store->follow_)) addWithId:store2];
    }
    else {
      
#line 670
      store2 = (ComAowagieTextPdfXfaForm_InverseStore *) cast_chk([((JavaUtilArrayList *) nil_chk(store->follow_)) getWithInt:idx], [ComAowagieTextPdfXfaForm_InverseStore class]);
    }
    store = store2;
  }
  [((JavaUtilArrayList *) nil_chk(((ComAowagieTextPdfXfaForm_InverseStore *) nil_chk(store))->part_)) addWithId:@""];
  [((JavaUtilArrayList *) nil_chk(store->follow_)) addWithId:unstack];
}


#line 710
ComAowagieTextPdfXfaForm_Stack2 *ComAowagieTextPdfXfaForm_Xml2Som_splitPartsWithNSString_(NSString *name) {
  ComAowagieTextPdfXfaForm_Xml2Som_initialize();
  
#line 711
  while ([((NSString *) nil_chk(name)) java_hasPrefix:@"."]) {
    name = [name java_substring:1];
  }
  ComAowagieTextPdfXfaForm_Stack2 *parts = new_ComAowagieTextPdfXfaForm_Stack2_init();
  jint last = 0;
  jint pos = 0;
  NSString *part;
  while (true) {
    pos = last;
    while (true) {
      pos = [name java_indexOf:'.' fromIndex:pos];
      if (pos < 0) {
        break;
      }
      if ([name charAtWithInt:pos - 1] == '\\') {
        ++pos;
      }
      else {
        
#line 728
        break;
      }
    }
    if (pos < 0) {
      break;
    }
    part = [name java_substring:last endIndex:pos];
    if (![((NSString *) nil_chk(part)) java_hasSuffix:@"]"]) {
      (void) JreStrAppendStrong(&part, "$", @"[0]");
    }
    [parts addWithId:part];
    last = pos + 1;
  }
  part = [name java_substring:last];
  if (![((NSString *) nil_chk(part)) java_hasSuffix:@"]"]) {
    (void) JreStrAppendStrong(&part, "$", @"[0]");
  }
  [parts addWithId:part];
  return parts;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm_Xml2Som)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"


#line 801
@implementation ComAowagieTextPdfXfaForm_Xml2SomDatasets


#line 807
- (instancetype)initWithOrgW3cDomNode:(id<OrgW3cDomNode>)n {
  ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(self, n);
  return self;
}


#line 822
- (id<OrgW3cDomNode>)insertNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                                    withNSString:(NSString *)shortName {
  
#line 823
  ComAowagieTextPdfXfaForm_Stack2 *stack = ComAowagieTextPdfXfaForm_Xml2Som_splitPartsWithNSString_(shortName);
  id<OrgW3cDomDocument> doc = [((id<OrgW3cDomNode>) nil_chk(n)) getOwnerDocument];
  id<OrgW3cDomNode> n2 = nil;
  n = [n getFirstChild];
  for (jint k = 0; k < [((ComAowagieTextPdfXfaForm_Stack2 *) nil_chk(stack)) size]; ++k) {
    NSString *part = (NSString *) cast_chk([stack getWithInt:k], [NSString class]);
    jint idx = [((NSString *) nil_chk(part)) java_lastIndexOf:'['];
    NSString *name = [part java_substring:0 endIndex:idx];
    idx = JavaLangInteger_parseIntWithNSString_([part java_substring:idx + 1 endIndex:[part java_length] - 1]);
    jint found = -1;
    for (n2 = [((id<OrgW3cDomNode>) nil_chk(n)) getFirstChild]; n2 != nil; n2 = [n2 getNextSibling]) {
      if ([n2 getNodeType] == OrgW3cDomNode_ELEMENT_NODE) {
        NSString *s = ComAowagieTextPdfXfaForm_Xml2Som_escapeSomWithNSString_([n2 getLocalName]);
        if ([((NSString *) nil_chk(s)) isEqual:name]) {
          ++found;
          if (found == idx) {
            break;
          }
        }
      }
    }
    for (; found < idx; ++found) {
      n2 = [((id<OrgW3cDomDocument>) nil_chk(doc)) createElementNSWithNSString:nil withNSString:name];
      n2 = [n appendChildWithOrgW3cDomNode:n2];
      id<OrgW3cDomNode> attr = [doc createAttributeNSWithNSString:ComAowagieTextPdfXfaForm_XFA_DATA_SCHEMA withNSString:@"dataNode"];
      [((id<OrgW3cDomNode>) nil_chk(attr)) setNodeValueWithNSString:@"dataGroup"];
      (void) [((id<OrgW3cDomNamedNodeMap>) nil_chk([((id<OrgW3cDomNode>) nil_chk(n2)) getAttributes])) setNamedItemNSWithOrgW3cDomNode:attr];
    }
    n = n2;
  }
  ComAowagieTextPdfXfaForm_Xml2Som_inverseSearchAddWithJavaUtilHashMap_withComAowagieTextPdfXfaForm_Stack2_withNSString_(self->inverseSearch_, stack, shortName);
  (void) [((JavaUtilHashMap *) nil_chk(self->name2Node_)) putWithId:shortName withId:n2];
  [((JavaUtilArrayList *) nil_chk(self->order_)) addWithId:shortName];
  return n2;
}


#line 859
+ (jboolean)hasChildrenWithOrgW3cDomNode:(id<OrgW3cDomNode>)n {
  return ComAowagieTextPdfXfaForm_Xml2SomDatasets_hasChildrenWithOrgW3cDomNode_(n);
}


#line 882
- (void)processDatasetsInternalWithOrgW3cDomNode:(id<OrgW3cDomNode>)n {
  ComAowagieTextPdfXfaForm_Xml2SomDatasets_processDatasetsInternalWithOrgW3cDomNode_(self, n);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomNode;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 3, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgW3cDomNode:);
  methods[1].selector = @selector(insertNodeWithOrgW3cDomNode:withNSString:);
  methods[2].selector = @selector(hasChildrenWithOrgW3cDomNode:);
  methods[3].selector = @selector(processDatasetsInternalWithOrgW3cDomNode:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgW3cDomNode;", "insertNode", "LOrgW3cDomNode;LNSString;", "hasChildren", "processDatasetsInternal", "LComAowagieTextPdfXfaForm;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm_Xml2SomDatasets = { "Xml2SomDatasets", "com.aowagie.text.pdf", ptrTable, methods, NULL, 7, 0x8, 4, 0, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm_Xml2SomDatasets;
}

@end


#line 807
void ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(ComAowagieTextPdfXfaForm_Xml2SomDatasets *self, id<OrgW3cDomNode> n) {
  ComAowagieTextPdfXfaForm_Xml2Som_init(self);
  
#line 808
  self->order_ = new_JavaUtilArrayList_init();
  self->name2Node_ = new_JavaUtilLinkedHashMap_init();
  self->stack_ = new_ComAowagieTextPdfXfaForm_Stack2_init();
  self->anform_ = 0;
  self->inverseSearch_ = new_JavaUtilLinkedHashMap_init();
  ComAowagieTextPdfXfaForm_Xml2SomDatasets_processDatasetsInternalWithOrgW3cDomNode_(self, n);
}


#line 807
ComAowagieTextPdfXfaForm_Xml2SomDatasets *new_ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm_Xml2SomDatasets, initWithOrgW3cDomNode_, n)
}


#line 807
ComAowagieTextPdfXfaForm_Xml2SomDatasets *create_ComAowagieTextPdfXfaForm_Xml2SomDatasets_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm_Xml2SomDatasets, initWithOrgW3cDomNode_, n)
}


#line 859
jboolean ComAowagieTextPdfXfaForm_Xml2SomDatasets_hasChildrenWithOrgW3cDomNode_(id<OrgW3cDomNode> n) {
  ComAowagieTextPdfXfaForm_Xml2SomDatasets_initialize();
  
#line 860
  id<OrgW3cDomNode> dataNodeN = [((id<OrgW3cDomNamedNodeMap>) nil_chk([((id<OrgW3cDomNode>) nil_chk(n)) getAttributes])) getNamedItemNSWithNSString:ComAowagieTextPdfXfaForm_XFA_DATA_SCHEMA withNSString:@"dataNode"];
  if (dataNodeN != nil) {
    NSString *dataNode = [dataNodeN getNodeValue];
    if ([@"dataGroup" isEqual:dataNode]) {
      return true;
    }
    else
#line 865
    if ([@"dataValue" isEqual:dataNode]) {
      return false;
    }
  }
  if (![n hasChildNodes]) {
    return false;
  }
  id<OrgW3cDomNode> n2 = [n getFirstChild];
  while (n2 != nil) {
    if ([n2 getNodeType] == OrgW3cDomNode_ELEMENT_NODE) {
      return true;
    }
    n2 = [n2 getNextSibling];
  }
  return false;
}


#line 882
void ComAowagieTextPdfXfaForm_Xml2SomDatasets_processDatasetsInternalWithOrgW3cDomNode_(ComAowagieTextPdfXfaForm_Xml2SomDatasets *self, id<OrgW3cDomNode> n) {
  JavaUtilHashMap *ss = new_JavaUtilLinkedHashMap_init();
  id<OrgW3cDomNode> n2 = [((id<OrgW3cDomNode>) nil_chk(n)) getFirstChild];
  while (n2 != nil) {
    if ([n2 getNodeType] == OrgW3cDomNode_ELEMENT_NODE) {
      NSString *s = ComAowagieTextPdfXfaForm_Xml2Som_escapeSomWithNSString_([n2 getLocalName]);
      JavaLangInteger *i = (JavaLangInteger *) cast_chk([ss getWithId:s], [JavaLangInteger class]);
      if (i == nil) {
        i = new_JavaLangInteger_initWithInt_(0);
      }
      else {
        
#line 892
        i = new_JavaLangInteger_initWithInt_([i intValue] + 1);
      }
      (void) [ss putWithId:s withId:i];
      if (ComAowagieTextPdfXfaForm_Xml2SomDatasets_hasChildrenWithOrgW3cDomNode_(n2)) {
        (void) ComAowagieTextPdfXfaForm_Stack2_pushWithId_(nil_chk(self->stack_), JreStrcat("$C$C", s, '[', [i description], ']'));
        ComAowagieTextPdfXfaForm_Xml2SomDatasets_processDatasetsInternalWithOrgW3cDomNode_(self, n2);
        (void) ComAowagieTextPdfXfaForm_Stack2_pop(nil_chk(self->stack_));
      }
      else {
        (void) ComAowagieTextPdfXfaForm_Stack2_pushWithId_(nil_chk(self->stack_), JreStrcat("$C$C", s, '[', [i description], ']'));
        NSString *unstack = [self printStack];
        [((JavaUtilArrayList *) nil_chk(self->order_)) addWithId:unstack];
        [self inverseSearchAddWithNSString:unstack];
        (void) [((JavaUtilHashMap *) nil_chk(self->name2Node_)) putWithId:unstack withId:n2];
        (void) ComAowagieTextPdfXfaForm_Stack2_pop(nil_chk(self->stack_));
      }
    }
    n2 = [n2 getNextSibling];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm_Xml2SomDatasets)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"


#line 917
@implementation ComAowagieTextPdfXfaForm_AcroFieldsSearch


#line 924
- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)items {
  ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(self, items);
  return self;
}


#line 940
- (JavaUtilHashMap *)getAcroShort2LongName {
  return self->acroShort2LongName_;
}


#line 949
- (void)setAcroShort2LongNameWithJavaUtilHashMap:(JavaUtilHashMap *)acroShort2LongName {
  self->acroShort2LongName_ = acroShort2LongName;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  methods[1].selector = @selector(getAcroShort2LongName);
  methods[2].selector = @selector(setAcroShort2LongNameWithJavaUtilHashMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "acroShort2LongName_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;", "setAcroShort2LongName", "LJavaUtilHashMap;", "LComAowagieTextPdfXfaForm;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm_AcroFieldsSearch = { "AcroFieldsSearch", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0xa, 3, 1, 3, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm_AcroFieldsSearch;
}

@end


#line 924
void ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(ComAowagieTextPdfXfaForm_AcroFieldsSearch *self, id<JavaUtilCollection> items) {
  ComAowagieTextPdfXfaForm_Xml2Som_init(self);
  
#line 925
  self->inverseSearch_ = new_JavaUtilLinkedHashMap_init();
  self->acroShort2LongName_ = new_JavaUtilLinkedHashMap_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk(items)) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    NSString *itemName = (NSString *) cast_chk([it next], [NSString class]);
    NSString *itemShort = ComAowagieTextPdfXfaForm_Xml2Som_getShortNameWithNSString_(itemName);
    (void) [((JavaUtilHashMap *) nil_chk(self->acroShort2LongName_)) putWithId:itemShort withId:itemName];
    ComAowagieTextPdfXfaForm_Xml2Som_inverseSearchAddWithJavaUtilHashMap_withComAowagieTextPdfXfaForm_Stack2_withNSString_(self->inverseSearch_, ComAowagieTextPdfXfaForm_Xml2Som_splitPartsWithNSString_(itemShort), itemName);
  }
}


#line 924
ComAowagieTextPdfXfaForm_AcroFieldsSearch *new_ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(id<JavaUtilCollection> items) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm_AcroFieldsSearch, initWithJavaUtilCollection_, items)
}


#line 924
ComAowagieTextPdfXfaForm_AcroFieldsSearch *create_ComAowagieTextPdfXfaForm_AcroFieldsSearch_initWithJavaUtilCollection_(id<JavaUtilCollection> items) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm_AcroFieldsSearch, initWithJavaUtilCollection_, items)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm_AcroFieldsSearch)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"


#line 957
@implementation ComAowagieTextPdfXfaForm_Xml2SomTemplate


#line 965
- (instancetype)initWithOrgW3cDomNode:(id<OrgW3cDomNode>)n {
  ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(self, n);
  return self;
}


#line 977
- (void)processTemplateWithOrgW3cDomNode:(id<OrgW3cDomNode>)n
                     withJavaUtilHashMap:(JavaUtilHashMap *)ff {
  ComAowagieTextPdfXfaForm_Xml2SomTemplate_processTemplateWithOrgW3cDomNode_withJavaUtilHashMap_(self, n, ff);
}


#line 1068
- (jboolean)isDynamicForm {
  return self->dynamicForm_;
}


#line 1076
- (void)setDynamicFormWithBoolean:(jboolean)dynamicForm {
  self->dynamicForm_ = dynamicForm;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgW3cDomNode:);
  methods[1].selector = @selector(processTemplateWithOrgW3cDomNode:withJavaUtilHashMap:);
  methods[2].selector = @selector(isDynamicForm);
  methods[3].selector = @selector(setDynamicFormWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dynamicForm_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "templateLevel_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgW3cDomNode;", "processTemplate", "LOrgW3cDomNode;LJavaUtilHashMap;", "setDynamicForm", "Z", "LComAowagieTextPdfXfaForm;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm_Xml2SomTemplate = { "Xml2SomTemplate", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0xa, 4, 2, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm_Xml2SomTemplate;
}

@end


#line 965
void ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(ComAowagieTextPdfXfaForm_Xml2SomTemplate *self, id<OrgW3cDomNode> n) {
  ComAowagieTextPdfXfaForm_Xml2Som_init(self);
  
#line 966
  self->order_ = new_JavaUtilArrayList_init();
  self->name2Node_ = new_JavaUtilLinkedHashMap_init();
  self->stack_ = new_ComAowagieTextPdfXfaForm_Stack2_init();
  self->anform_ = 0;
  self->templateLevel_ = 0;
  self->inverseSearch_ = new_JavaUtilLinkedHashMap_init();
  ComAowagieTextPdfXfaForm_Xml2SomTemplate_processTemplateWithOrgW3cDomNode_withJavaUtilHashMap_(self, n, nil);
}


#line 965
ComAowagieTextPdfXfaForm_Xml2SomTemplate *new_ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm_Xml2SomTemplate, initWithOrgW3cDomNode_, n)
}


#line 965
ComAowagieTextPdfXfaForm_Xml2SomTemplate *create_ComAowagieTextPdfXfaForm_Xml2SomTemplate_initWithOrgW3cDomNode_(id<OrgW3cDomNode> n) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm_Xml2SomTemplate, initWithOrgW3cDomNode_, n)
}


#line 977
void ComAowagieTextPdfXfaForm_Xml2SomTemplate_processTemplateWithOrgW3cDomNode_withJavaUtilHashMap_(ComAowagieTextPdfXfaForm_Xml2SomTemplate *self, id<OrgW3cDomNode> n, JavaUtilHashMap *ff) {
  if (ff == nil) {
    ff = new_JavaUtilLinkedHashMap_init();
  }
  JavaUtilHashMap *ss = new_JavaUtilLinkedHashMap_init();
  id<OrgW3cDomNode> n2 = [((id<OrgW3cDomNode>) nil_chk(n)) getFirstChild];
  while (n2 != nil) {
    if ([n2 getNodeType] == OrgW3cDomNode_ELEMENT_NODE) {
      NSString *s = [n2 getLocalName];
      if ([((NSString *) nil_chk(s)) isEqual:@"subform"]) {
        id<OrgW3cDomNode> name = [((id<OrgW3cDomNamedNodeMap>) nil_chk([n2 getAttributes])) getNamedItemWithNSString:@"name"];
        NSString *nn = @"#subform";
        jboolean annon = true;
        if (name != nil) {
          nn = ComAowagieTextPdfXfaForm_Xml2Som_escapeSomWithNSString_([name getNodeValue]);
          annon = false;
        }
        JavaLangInteger *i;
        if (annon) {
          i = new_JavaLangInteger_initWithInt_(self->anform_);
          ++self->anform_;
        }
        else {
          i = (JavaLangInteger *) cast_chk([ss getWithId:nn], [JavaLangInteger class]);
          if (i == nil) {
            i = new_JavaLangInteger_initWithInt_(0);
          }
          else {
            
#line 1004
            i = new_JavaLangInteger_initWithInt_([i intValue] + 1);
          }
          (void) [ss putWithId:nn withId:i];
        }
        (void) ComAowagieTextPdfXfaForm_Stack2_pushWithId_(nil_chk(self->stack_), JreStrcat("$C$C", nn, '[', [i description], ']'));
        ++self->templateLevel_;
        if (annon) {
          ComAowagieTextPdfXfaForm_Xml2SomTemplate_processTemplateWithOrgW3cDomNode_withJavaUtilHashMap_(self, n2, ff);
        }
        else {
          
#line 1013
          ComAowagieTextPdfXfaForm_Xml2SomTemplate_processTemplateWithOrgW3cDomNode_withJavaUtilHashMap_(self, n2, nil);
        }
        --self->templateLevel_;
        (void) ComAowagieTextPdfXfaForm_Stack2_pop(nil_chk(self->stack_));
      }
      else if ([s isEqual:@"field"] || [s isEqual:@"exclGroup"]) {
        id<OrgW3cDomNode> name = [((id<OrgW3cDomNamedNodeMap>) nil_chk([n2 getAttributes])) getNamedItemWithNSString:@"name"];
        if (name != nil) {
          NSString *nn = ComAowagieTextPdfXfaForm_Xml2Som_escapeSomWithNSString_([name getNodeValue]);
          JavaLangInteger *i = (JavaLangInteger *) cast_chk([ff getWithId:nn], [JavaLangInteger class]);
          if (i == nil) {
            i = new_JavaLangInteger_initWithInt_(0);
          }
          else {
            
#line 1026
            i = new_JavaLangInteger_initWithInt_([i intValue] + 1);
          }
          (void) [ff putWithId:nn withId:i];
          (void) ComAowagieTextPdfXfaForm_Stack2_pushWithId_(nil_chk(self->stack_), JreStrcat("$C$C", nn, '[', [i description], ']'));
          NSString *unstack = [self printStack];
          [((JavaUtilArrayList *) nil_chk(self->order_)) addWithId:unstack];
          [self inverseSearchAddWithNSString:unstack];
          (void) [((JavaUtilHashMap *) nil_chk(self->name2Node_)) putWithId:unstack withId:n2];
          (void) ComAowagieTextPdfXfaForm_Stack2_pop(nil_chk(self->stack_));
        }
      }
      else if (!self->dynamicForm_ && self->templateLevel_ > 0 && [s isEqual:@"occur"]) {
        jint initial = 1;
        jint min = 1;
        jint max = 1;
        id<OrgW3cDomNode> a = [((id<OrgW3cDomNamedNodeMap>) nil_chk([n2 getAttributes])) getNamedItemWithNSString:@"initial"];
        if (a != nil) {
          @try {
            
#line 1043
            initial = JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk([a getNodeValue])) java_trim]);
          }
          @catch (
#line 1043
          JavaLangException *e) {
          }
        }
        
#line 1045
        a = [((id<OrgW3cDomNamedNodeMap>) nil_chk([n2 getAttributes])) getNamedItemWithNSString:@"min"];
        if (a != nil) {
          @try {
            
#line 1047
            min = JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk([a getNodeValue])) java_trim]);
          }
          @catch (
#line 1047
          JavaLangException *e) {
          }
        }
        
#line 1049
        a = [((id<OrgW3cDomNamedNodeMap>) nil_chk([n2 getAttributes])) getNamedItemWithNSString:@"max"];
        if (a != nil) {
          @try {
            
#line 1051
            max = JavaLangInteger_parseIntWithNSString_([((NSString *) nil_chk([a getNodeValue])) java_trim]);
          }
          @catch (
#line 1051
          JavaLangException *e) {
          }
        }
        
#line 1053
        if (initial != min || min != max) {
          self->dynamicForm_ = true;
        }
      }
    }
    n2 = [n2 getNextSibling];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm_Xml2SomTemplate)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/XfaForm.java"


#line 1137
@implementation ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 1137
- (instancetype)init {
  ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 1138
- (OrgXmlSaxInputSource *)resolveEntityWithNSString:(NSString *)publicId
                                       withNSString:(NSString *)systemId {
  return new_OrgXmlSaxInputSource_initWithJavaIoReader_(new_JavaIoStringReader_initWithNSString_(@""));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgXmlSaxInputSource;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(resolveEntityWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "resolveEntity", "LNSString;LNSString;", "LOrgXmlSaxSAXException;LJavaIoIOException;", "LComAowagieTextPdfXfaForm;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver = { "SafeEmptyEntityResolver", "com.aowagie.text.pdf", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver;
}

@end


#line 1137
void ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init(ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver *self) {
  NSObject_init(self);
}


#line 1137
ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver *new_ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver, init)
}


#line 1137
ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver *create_ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfXfaForm_SafeEmptyEntityResolver)

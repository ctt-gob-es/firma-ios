//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/Memoable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Memoable")
#ifdef RESTRICT_Memoable
#define INCLUDE_ALL_Memoable 0
#else
#define INCLUDE_ALL_Memoable 1
#endif
#undef RESTRICT_Memoable

#if !defined (OrgSpongycastleUtilMemoable_) && (INCLUDE_ALL_Memoable || defined(INCLUDE_OrgSpongycastleUtilMemoable))
#define OrgSpongycastleUtilMemoable_

/*!
 @brief Interface for Memoable objects.Memoable objects allow the taking of a snapshot of their internal state
  via the copy() method and then reseting the object back to that state later using the reset() method.
 */
@protocol OrgSpongycastleUtilMemoable < JavaObject >

/*!
 @brief Produce a copy of this object with its configuration and in its current state.
 <p>
  The returned object may be used simply to store the state, or may be used as a similar object
  starting from the copied state.
 */
- (id<OrgSpongycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Restore a copied object state into this object.
 <p>
  Implementations of this method <em>should</em> try to avoid or minimise memory allocation to perform the reset.
 @param other an object originally <code>copied</code>  from an object of the same type as this instance.
 @throw ClassCastExceptionif the provided object is not of the correct type.
 @throw MemoableResetExceptionif the <b>other</b> parameter is in some other way invalid.
 */
- (void)resetWithOrgSpongycastleUtilMemoable:(id<OrgSpongycastleUtilMemoable>)other;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleUtilMemoable)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleUtilMemoable)

#endif

#pragma pop_macro("INCLUDE_ALL_Memoable")

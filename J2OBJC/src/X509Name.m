//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/X509Name.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Encoding.h"
#include "ASN1Object.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1Set.h"
#include "ASN1String.h"
#include "ASN1TaggedObject.h"
#include "DERSequence.h"
#include "DERSet.h"
#include "DERUniversalString.h"
#include "Hex.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PKCSObjectIdentifiers.h"
#include "Strings.h"
#include "X500Name.h"
#include "X509DefaultEntryConverter.h"
#include "X509Name.h"
#include "X509NameEntryConverter.h"
#include "X509NameTokenizer.h"
#include "X509ObjectIdentifiers.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"

#if !__has_feature(objc_arc)
#error "X509Name must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1X509X509Name () {
 @public
  OrgSpongycastleAsn1X509X509NameEntryConverter *converter_;
  JavaUtilVector *ordering_;
  JavaUtilVector *values_;
  JavaUtilVector *added_;
  OrgSpongycastleAsn1ASN1Sequence *seq_;
  jboolean isHashCodeCalculated_;
  jint hashCodeValue_;
}

- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)decodeOIDWithNSString:(NSString *)name
                                             withJavaUtilHashtable:(JavaUtilHashtable *)lookUp;

- (NSString *)unescapeWithNSString:(NSString *)elt;

- (void)addEntryWithJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                         withNSString:(NSString *)token
                  withJavaLangBoolean:(JavaLangBoolean *)isAdded;

- (jboolean)equivalentStringsWithNSString:(NSString *)s1
                             withNSString:(NSString *)s2;

- (NSString *)canonicalizeWithNSString:(NSString *)s;

- (OrgSpongycastleAsn1ASN1Primitive *)decodeObjectWithNSString:(NSString *)oValue;

- (NSString *)stripInternalSpacesWithNSString:(NSString *)str;

- (void)appendValueWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                      withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols
withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                               withNSString:(NSString *)value;

- (NSString *)bytesToStringWithByteArray:(IOSByteArray *)data;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509X509Name, converter_, OrgSpongycastleAsn1X509X509NameEntryConverter *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509X509Name, ordering_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509X509Name, values_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509X509Name, added_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509X509Name, seq_, OrgSpongycastleAsn1ASN1Sequence *)

inline JavaLangBoolean *OrgSpongycastleAsn1X509X509Name_get_TRUE(void);
static JavaLangBoolean *OrgSpongycastleAsn1X509X509Name_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1X509X509Name, TRUE, JavaLangBoolean *)

inline JavaLangBoolean *OrgSpongycastleAsn1X509X509Name_get_FALSE(void);
static JavaLangBoolean *OrgSpongycastleAsn1X509X509Name_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1X509X509Name, FALSE, JavaLangBoolean *)

__attribute__((unused)) static OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(OrgSpongycastleAsn1X509X509Name *self, NSString *name, JavaUtilHashtable *lookUp);

__attribute__((unused)) static NSString *OrgSpongycastleAsn1X509X509Name_unescapeWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *elt);

__attribute__((unused)) static void OrgSpongycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(OrgSpongycastleAsn1X509X509Name *self, JavaUtilHashtable *lookUp, NSString *token, JavaLangBoolean *isAdded);

__attribute__((unused)) static jboolean OrgSpongycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *s1, NSString *s2);

__attribute__((unused)) static NSString *OrgSpongycastleAsn1X509X509Name_canonicalizeWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *s);

__attribute__((unused)) static OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleAsn1X509X509Name_decodeObjectWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *oValue);

__attribute__((unused)) static NSString *OrgSpongycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *str);

__attribute__((unused)) static void OrgSpongycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1X509X509Name *self, JavaLangStringBuffer *buf, JavaUtilHashtable *oidSymbols, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *value);

__attribute__((unused)) static NSString *OrgSpongycastleAsn1X509X509Name_bytesToStringWithByteArray_(OrgSpongycastleAsn1X509X509Name *self, IOSByteArray *data);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/X509Name.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleAsn1X509X509Name)

OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_C;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_O;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_OU;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_T;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_CN;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_SN;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_STREET;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_SERIALNUMBER;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_L;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_ST;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_SURNAME;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_GIVENNAME;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_INITIALS;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_GENERATION;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_UNIQUE_IDENTIFIER;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_BUSINESS_CATEGORY;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_POSTAL_CODE;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_DN_QUALIFIER;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_PSEUDONYM;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_DATE_OF_BIRTH;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_PLACE_OF_BIRTH;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_GENDER;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_NAME_AT_BIRTH;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_POSTAL_ADDRESS;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_DMD_NAME;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_TELEPHONE_NUMBER;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_NAME;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_EmailAddress;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_UnstructuredName;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_UnstructuredAddress;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_E;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_DC;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_UID;
jboolean OrgSpongycastleAsn1X509X509Name_DefaultReverse = false;
JavaUtilHashtable *OrgSpongycastleAsn1X509X509Name_DefaultSymbols;
JavaUtilHashtable *OrgSpongycastleAsn1X509X509Name_RFC2253Symbols;
JavaUtilHashtable *OrgSpongycastleAsn1X509X509Name_RFC1779Symbols;
JavaUtilHashtable *OrgSpongycastleAsn1X509X509Name_DefaultLookUp;
JavaUtilHashtable *OrgSpongycastleAsn1X509X509Name_OIDLookUp;
JavaUtilHashtable *OrgSpongycastleAsn1X509X509Name_SymbolLookUp;


#line 38
@implementation OrgSpongycastleAsn1X509X509Name


#line 367
+ (OrgSpongycastleAsn1X509X509Name *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                            withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1X509X509Name_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 374
+ (OrgSpongycastleAsn1X509X509Name *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1X509X509Name_getInstanceWithId_(obj);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 393
- (instancetype)init {
  OrgSpongycastleAsn1X509X509Name_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 403
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1X509X509Name_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 466
- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)attributes {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilHashtable_(self, attributes);
  return self;
}


#line 480
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)attributes {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(self, ordering, attributes);
  return self;
}


#line 499
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)attributes
withOrgSpongycastleAsn1X509X509NameEntryConverter:(OrgSpongycastleAsn1X509X509NameEntryConverter *)converter {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self, ordering, attributes, converter);
  return self;
}


#line 542
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)oids
                    withJavaUtilVector:(JavaUtilVector *)values {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(self, oids, values);
  return self;
}


#line 556
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)oids
                    withJavaUtilVector:(JavaUtilVector *)values
withOrgSpongycastleAsn1X509X509NameEntryConverter:(OrgSpongycastleAsn1X509X509NameEntryConverter *)converter {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self, oids, values, converter);
  return self;
}


#line 591
- (instancetype)initWithNSString:(NSString *)dirName {
  OrgSpongycastleAsn1X509X509Name_initWithNSString_(self, dirName);
  return self;
}


#line 604
- (instancetype)initWithNSString:(NSString *)dirName
withOrgSpongycastleAsn1X509X509NameEntryConverter:(OrgSpongycastleAsn1X509X509NameEntryConverter *)converter {
  OrgSpongycastleAsn1X509X509Name_initWithNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self, dirName, converter);
  return self;
}


#line 618
- (instancetype)initWithBoolean:(jboolean)reverse
                   withNSString:(NSString *)dirName {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_(self, reverse, dirName);
  return self;
}


#line 633
- (instancetype)initWithBoolean:(jboolean)reverse
                   withNSString:(NSString *)dirName
withOrgSpongycastleAsn1X509X509NameEntryConverter:(OrgSpongycastleAsn1X509X509NameEntryConverter *)converter {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self, reverse, dirName, converter);
  return self;
}


#line 655
- (instancetype)initWithBoolean:(jboolean)reverse
          withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                   withNSString:(NSString *)dirName {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(self, reverse, lookUp, dirName);
  return self;
}


#line 663
- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)decodeOIDWithNSString:(NSString *)name
                                             withJavaUtilHashtable:(JavaUtilHashtable *)lookUp {
  return OrgSpongycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(self, name, lookUp);
}


#line 686
- (NSString *)unescapeWithNSString:(NSString *)elt {
  return OrgSpongycastleAsn1X509X509Name_unescapeWithNSString_(self, elt);
}


#line 774
- (instancetype)initWithBoolean:(jboolean)reverse
          withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                   withNSString:(NSString *)dirName
withOrgSpongycastleAsn1X509X509NameEntryConverter:(OrgSpongycastleAsn1X509X509NameEntryConverter *)converter {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self, reverse, lookUp, dirName, converter);
  return self;
}


#line 836
- (void)addEntryWithJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                         withNSString:(NSString *)token
                  withJavaLangBoolean:(JavaLangBoolean *)isAdded {
  OrgSpongycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, token, isAdded);
}


#line 862
- (JavaUtilVector *)getOIDs {
  
#line 864
  JavaUtilVector *v = new_JavaUtilVector_init();
  
#line 866
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
    
#line 868
    [v addElementWithId:[((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i]];
  }
  
#line 871
  return v;
}

- (JavaUtilVector *)getValues {
  
#line 880
  JavaUtilVector *v = new_JavaUtilVector_init();
  
#line 882
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(values_)) size]; i++) {
    
#line 884
    [v addElementWithId:[((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i]];
  }
  
#line 887
  return v;
}

- (JavaUtilVector *)getValuesWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 897
  JavaUtilVector *v = new_JavaUtilVector_init();
  
#line 899
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(values_)) size]; i++) {
    
#line 901
    if ([nil_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i]) isEqual:oid]) {
      
#line 903
      NSString *val = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      
#line 905
      if ([((NSString *) nil_chk(val)) java_length] > 2 && [val charAtWithInt:0] == '\\' && [val charAtWithInt:1] == '#') {
        
#line 907
        [v addElementWithId:[val java_substring:1]];
      }
      else {
        
#line 911
        [v addElementWithId:val];
      }
    }
  }
  
#line 916
  return v;
}


#line 919
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 921
  if (seq_ == nil) {
    
#line 923
    OrgSpongycastleAsn1ASN1EncodableVector *vec = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
    OrgSpongycastleAsn1ASN1EncodableVector *sVec = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
    OrgSpongycastleAsn1ASN1ObjectIdentifier *lstOid = nil;
    
#line 927
    for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
      
#line 929
      OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
      OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
      
#line 932
      [v addWithOrgSpongycastleAsn1ASN1Encodable:oid];
      
#line 934
      NSString *str = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      
#line 936
      [v addWithOrgSpongycastleAsn1ASN1Encodable:[((OrgSpongycastleAsn1X509X509NameEntryConverter *) nil_chk(converter_)) getConvertedValueWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid withNSString:str]];
      
#line 938
      if (lstOid == nil ||
#line 939
      [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk([((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
        
#line 941
        [sVec addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v)];
      }
      else {
        
#line 945
        [vec addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1EncodableVector_(sVec)];
        sVec = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
        
#line 948
        [sVec addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v)];
      }
      
#line 951
      lstOid = oid;
    }
    
#line 954
    [vec addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERSet_initWithOrgSpongycastleAsn1ASN1EncodableVector_(sVec)];
    
#line 956
    seq_ = new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(vec);
  }
  
#line 959
  return seq_;
}


#line 966
- (jboolean)equalsWithId:(id)obj
             withBoolean:(jboolean)inOrder {
  if (!inOrder) {
    
#line 970
    return [self isEqual:obj];
  }
  
#line 973
  if (JreObjectEqualsEquals(obj, self)) {
    
#line 975
    return true;
  }
  
#line 978
  if (!([obj isKindOfClass:[OrgSpongycastleAsn1X509X509Name class]] || [obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]])) {
    
#line 980
    return false;
  }
  
#line 983
  OrgSpongycastleAsn1ASN1Primitive *derO = [((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(obj, OrgSpongycastleAsn1ASN1Encodable_class_())))) toASN1Primitive];
  
#line 985
  if ([((OrgSpongycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) isEqual:derO]) {
    
#line 987
    return true;
  }
  
#line 990
  OrgSpongycastleAsn1X509X509Name *other;
  
#line 992
  @try {
    
#line 994
    other = OrgSpongycastleAsn1X509X509Name_getInstanceWithId_(obj);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    
#line 998
    return false;
  }
  
#line 1001
  jint orderingSize = [((JavaUtilVector *) nil_chk(ordering_)) size];
  
#line 1003
  if (orderingSize != [((JavaUtilVector *) nil_chk(((OrgSpongycastleAsn1X509X509Name *) nil_chk(other))->ordering_)) size]) {
    
#line 1005
    return false;
  }
  
#line 1008
  for (jint i = 0; i < orderingSize; i++) {
    
#line 1010
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oOid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(other->ordering_)) elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    
#line 1013
    if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:oOid]) {
      
#line 1015
      NSString *value = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      NSString *oValue = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(other->values_)) elementAtWithInt:i], [NSString class]);
      
#line 1018
      if (!OrgSpongycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, value, oValue)) {
        
#line 1020
        return false;
      }
    }
    else {
      
#line 1025
      return false;
    }
  }
  
#line 1029
  return true;
}


#line 1032
- (NSUInteger)hash {
  
#line 1034
  if (isHashCodeCalculated_) {
    
#line 1036
    return hashCodeValue_;
  }
  
#line 1039
  isHashCodeCalculated_ = true;
  
#line 1042
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i += 1) {
    
#line 1044
    NSString *value = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
    
#line 1046
    value = OrgSpongycastleAsn1X509X509Name_canonicalizeWithNSString_(self, value);
    value = OrgSpongycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, value);
    
#line 1049
    hashCodeValue_ ^= ((jint) [nil_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i]) hash]);
    hashCodeValue_ ^= ((jint) [((NSString *) nil_chk(value)) hash]);
  }
  
#line 1053
  return hashCodeValue_;
}


#line 1059
- (jboolean)isEqual:(id)obj {
  
#line 1061
  if (JreObjectEqualsEquals(obj, self)) {
    
#line 1063
    return true;
  }
  
#line 1066
  if (!([obj isKindOfClass:[OrgSpongycastleAsn1X509X509Name class]] || [obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]])) {
    
#line 1068
    return false;
  }
  
#line 1071
  OrgSpongycastleAsn1ASN1Primitive *derO = [((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(obj, OrgSpongycastleAsn1ASN1Encodable_class_())))) toASN1Primitive];
  
#line 1073
  if ([((OrgSpongycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) isEqual:derO]) {
    
#line 1075
    return true;
  }
  
#line 1078
  OrgSpongycastleAsn1X509X509Name *other;
  
#line 1080
  @try {
    
#line 1082
    other = OrgSpongycastleAsn1X509X509Name_getInstanceWithId_(obj);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    
#line 1086
    return false;
  }
  
#line 1089
  jint orderingSize = [((JavaUtilVector *) nil_chk(ordering_)) size];
  
#line 1091
  if (orderingSize != [((JavaUtilVector *) nil_chk(((OrgSpongycastleAsn1X509X509Name *) nil_chk(other))->ordering_)) size]) {
    
#line 1093
    return false;
  }
  
#line 1096
  IOSBooleanArray *indexes = [IOSBooleanArray newArrayWithLength:orderingSize];
  jint start;
  
#line 1097
  jint end;
  
#line 1097
  jint delta;
  
#line 1099
  if ([nil_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:0]) isEqual:[((JavaUtilVector *) nil_chk(other->ordering_)) elementAtWithInt:0]]) {
    
#line 1101
    start = 0;
    end = orderingSize;
    delta = 1;
  }
  else {
    
#line 1107
    start = orderingSize - 1;
    end = -1;
    delta = -1;
  }
  
#line 1112
  for (jint i = start; i != end; i += delta) {
    
#line 1114
    jboolean found = false;
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    NSString *value = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
    
#line 1118
    for (jint j = 0; j < orderingSize; j++) {
      
#line 1120
      if (IOSBooleanArray_Get(indexes, j)) {
        
#line 1122
        continue;
      }
      
#line 1125
      OrgSpongycastleAsn1ASN1ObjectIdentifier *oOid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(other->ordering_)) elementAtWithInt:j], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
      
#line 1127
      if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) isEqual:oOid]) {
        
#line 1129
        NSString *oValue = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(other->values_)) elementAtWithInt:j], [NSString class]);
        
#line 1131
        if (OrgSpongycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, value, oValue)) {
          
#line 1133
          *IOSBooleanArray_GetRef(indexes, j) = true;
          found = true;
          break;
        }
      }
    }
    
#line 1140
    if (!found) {
      
#line 1142
      return false;
    }
  }
  
#line 1146
  return true;
}


#line 1149
- (jboolean)equivalentStringsWithNSString:(NSString *)s1
                             withNSString:(NSString *)s2 {
  return OrgSpongycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, s1, s2);
}


#line 1168
- (NSString *)canonicalizeWithNSString:(NSString *)s {
  return OrgSpongycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s);
}


#line 1185
- (OrgSpongycastleAsn1ASN1Primitive *)decodeObjectWithNSString:(NSString *)oValue {
  return OrgSpongycastleAsn1X509X509Name_decodeObjectWithNSString_(self, oValue);
}


#line 1197
- (NSString *)stripInternalSpacesWithNSString:(NSString *)str {
  return OrgSpongycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, str);
}


#line 1222
- (void)appendValueWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                      withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols
withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                               withNSString:(NSString *)value {
  OrgSpongycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, buf, oidSymbols, oid, value);
}


#line 1297
- (NSString *)toStringWithBoolean:(jboolean)reverse
            withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols {
  
#line 1301
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  JavaUtilVector *components = new_JavaUtilVector_init();
  jboolean first = true;
  
#line 1305
  JavaLangStringBuffer *ava = nil;
  
#line 1307
  for (jint i = 0; i < [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
    
#line 1309
    if ([((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk([((JavaUtilVector *) nil_chk(added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
      
#line 1311
      (void) [((JavaLangStringBuffer *) nil_chk(ava)) appendWithChar:'+'];
      OrgSpongycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, ava, oidSymbols,
#line 1313
      (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]),
#line 1314
      (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]));
    }
    else {
      
#line 1318
      ava = new_JavaLangStringBuffer_init();
      OrgSpongycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, ava, oidSymbols,
#line 1320
      (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]),
#line 1321
      (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]));
      [components addElementWithId:ava];
    }
  }
  
#line 1326
  if (reverse) {
    
#line 1328
    for (jint i = [components size] - 1; i >= 0; i--) {
      
#line 1330
      if (first) {
        
#line 1332
        first = false;
      }
      else {
        
#line 1336
        (void) [buf appendWithChar:','];
      }
      
#line 1339
      (void) [buf appendWithNSString:[nil_chk([components elementAtWithInt:i]) description]];
    }
  }
  else {
    
#line 1344
    for (jint i = 0; i < [components size]; i++) {
      
#line 1346
      if (first) {
        
#line 1348
        first = false;
      }
      else {
        
#line 1352
        (void) [buf appendWithChar:','];
      }
      
#line 1355
      (void) [buf appendWithNSString:[nil_chk([components elementAtWithInt:i]) description]];
    }
  }
  
#line 1359
  return [buf description];
}


#line 1362
- (NSString *)bytesToStringWithByteArray:(IOSByteArray *)data {
  return OrgSpongycastleAsn1X509X509Name_bytesToStringWithByteArray_(self, data);
}


#line 1375
- (NSString *)description {
  
#line 1377
  return [self toStringWithBoolean:OrgSpongycastleAsn1X509X509Name_DefaultReverse withJavaUtilHashtable:OrgSpongycastleAsn1X509X509Name_DefaultSymbols];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1X509X509Name;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509X509Name;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 11, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 12, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 13, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 16, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 19, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 24, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 22, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 25, 26, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 27, 9, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x2, 28, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 29, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 30, 31, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 32, 33, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 34, 35, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 32, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[4].selector = @selector(initWithJavaUtilHashtable:);
  methods[5].selector = @selector(initWithJavaUtilVector:withJavaUtilHashtable:);
  methods[6].selector = @selector(initWithJavaUtilVector:withJavaUtilHashtable:withOrgSpongycastleAsn1X509X509NameEntryConverter:);
  methods[7].selector = @selector(initWithJavaUtilVector:withJavaUtilVector:);
  methods[8].selector = @selector(initWithJavaUtilVector:withJavaUtilVector:withOrgSpongycastleAsn1X509X509NameEntryConverter:);
  methods[9].selector = @selector(initWithNSString:);
  methods[10].selector = @selector(initWithNSString:withOrgSpongycastleAsn1X509X509NameEntryConverter:);
  methods[11].selector = @selector(initWithBoolean:withNSString:);
  methods[12].selector = @selector(initWithBoolean:withNSString:withOrgSpongycastleAsn1X509X509NameEntryConverter:);
  methods[13].selector = @selector(initWithBoolean:withJavaUtilHashtable:withNSString:);
  methods[14].selector = @selector(decodeOIDWithNSString:withJavaUtilHashtable:);
  methods[15].selector = @selector(unescapeWithNSString:);
  methods[16].selector = @selector(initWithBoolean:withJavaUtilHashtable:withNSString:withOrgSpongycastleAsn1X509X509NameEntryConverter:);
  methods[17].selector = @selector(addEntryWithJavaUtilHashtable:withNSString:withJavaLangBoolean:);
  methods[18].selector = @selector(getOIDs);
  methods[19].selector = @selector(getValues);
  methods[20].selector = @selector(getValuesWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[21].selector = @selector(toASN1Primitive);
  methods[22].selector = @selector(equalsWithId:withBoolean:);
  methods[23].selector = @selector(hash);
  methods[24].selector = @selector(isEqual:);
  methods[25].selector = @selector(equivalentStringsWithNSString:withNSString:);
  methods[26].selector = @selector(canonicalizeWithNSString:);
  methods[27].selector = @selector(decodeObjectWithNSString:);
  methods[28].selector = @selector(stripInternalSpacesWithNSString:);
  methods[29].selector = @selector(appendValueWithJavaLangStringBuffer:withJavaUtilHashtable:withOrgSpongycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[30].selector = @selector(toStringWithBoolean:withJavaUtilHashtable:);
  methods[31].selector = @selector(bytesToStringWithByteArray:);
  methods[32].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "O", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 37, -1, -1 },
    { "OU", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "T", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "CN", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "SN", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "STREET", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "SERIALNUMBER", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 43, -1, -1 },
    { "L", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "ST", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 45, -1, -1 },
    { "SURNAME", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 46, -1, -1 },
    { "GIVENNAME", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 47, -1, -1 },
    { "INITIALS", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 48, -1, -1 },
    { "GENERATION", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 49, -1, -1 },
    { "UNIQUE_IDENTIFIER", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 50, -1, -1 },
    { "BUSINESS_CATEGORY", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 51, -1, -1 },
    { "POSTAL_CODE", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 52, -1, -1 },
    { "DN_QUALIFIER", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 53, -1, -1 },
    { "PSEUDONYM", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 54, -1, -1 },
    { "DATE_OF_BIRTH", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 55, -1, -1 },
    { "PLACE_OF_BIRTH", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 56, -1, -1 },
    { "GENDER", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 57, -1, -1 },
    { "COUNTRY_OF_CITIZENSHIP", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 58, -1, -1 },
    { "COUNTRY_OF_RESIDENCE", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 59, -1, -1 },
    { "NAME_AT_BIRTH", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "POSTAL_ADDRESS", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 61, -1, -1 },
    { "DMD_NAME", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 62, -1, -1 },
    { "TELEPHONE_NUMBER", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 63, -1, -1 },
    { "NAME", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 64, -1, -1 },
    { "EmailAddress", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 65, -1, -1 },
    { "UnstructuredName", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 66, -1, -1 },
    { "UnstructuredAddress", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 67, -1, -1 },
    { "E", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 68, -1, -1 },
    { "DC", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 69, -1, -1 },
    { "UID", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 70, -1, -1 },
    { "DefaultReverse", "Z", .constantValue.asLong = 0, 0x9, -1, 71, -1, -1 },
    { "DefaultSymbols", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 72, -1, -1 },
    { "RFC2253Symbols", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 73, -1, -1 },
    { "RFC1779Symbols", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 74, -1, -1 },
    { "DefaultLookUp", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 75, -1, -1 },
    { "OIDLookUp", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 76, -1, -1 },
    { "SymbolLookUp", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 77, -1, -1 },
    { "TRUE", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x1a, -1, 78, -1, -1 },
    { "FALSE", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x1a, -1, 79, -1, -1 },
    { "converter_", "LOrgSpongycastleAsn1X509X509NameEntryConverter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ordering_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "values_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "added_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "seq_", "LOrgSpongycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isHashCodeCalculated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashCodeValue_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;", "LJavaUtilHashtable;", "LJavaUtilVector;LJavaUtilHashtable;", "LJavaUtilVector;LJavaUtilHashtable;LOrgSpongycastleAsn1X509X509NameEntryConverter;", "LJavaUtilVector;LJavaUtilVector;", "LJavaUtilVector;LJavaUtilVector;LOrgSpongycastleAsn1X509X509NameEntryConverter;", "LNSString;", "LNSString;LOrgSpongycastleAsn1X509X509NameEntryConverter;", "ZLNSString;", "ZLNSString;LOrgSpongycastleAsn1X509X509NameEntryConverter;", "ZLJavaUtilHashtable;LNSString;", "decodeOID", "LNSString;LJavaUtilHashtable;", "unescape", "ZLJavaUtilHashtable;LNSString;LOrgSpongycastleAsn1X509X509NameEntryConverter;", "addEntry", "LJavaUtilHashtable;LNSString;LJavaLangBoolean;", "getValues", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", "equals", "LNSObject;Z", "hashCode", "equivalentStrings", "LNSString;LNSString;", "canonicalize", "decodeObject", "stripInternalSpaces", "appendValue", "LJavaLangStringBuffer;LJavaUtilHashtable;LOrgSpongycastleAsn1ASN1ObjectIdentifier;LNSString;", "toString", "ZLJavaUtilHashtable;", "bytesToString", "[B", &OrgSpongycastleAsn1X509X509Name_C, &OrgSpongycastleAsn1X509X509Name_O, &OrgSpongycastleAsn1X509X509Name_OU, &OrgSpongycastleAsn1X509X509Name_T, &OrgSpongycastleAsn1X509X509Name_CN, &OrgSpongycastleAsn1X509X509Name_SN, &OrgSpongycastleAsn1X509X509Name_STREET, &OrgSpongycastleAsn1X509X509Name_SERIALNUMBER, &OrgSpongycastleAsn1X509X509Name_L, &OrgSpongycastleAsn1X509X509Name_ST, &OrgSpongycastleAsn1X509X509Name_SURNAME, &OrgSpongycastleAsn1X509X509Name_GIVENNAME, &OrgSpongycastleAsn1X509X509Name_INITIALS, &OrgSpongycastleAsn1X509X509Name_GENERATION, &OrgSpongycastleAsn1X509X509Name_UNIQUE_IDENTIFIER, &OrgSpongycastleAsn1X509X509Name_BUSINESS_CATEGORY, &OrgSpongycastleAsn1X509X509Name_POSTAL_CODE, &OrgSpongycastleAsn1X509X509Name_DN_QUALIFIER, &OrgSpongycastleAsn1X509X509Name_PSEUDONYM, &OrgSpongycastleAsn1X509X509Name_DATE_OF_BIRTH, &OrgSpongycastleAsn1X509X509Name_PLACE_OF_BIRTH, &OrgSpongycastleAsn1X509X509Name_GENDER, &OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP, &OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE, &OrgSpongycastleAsn1X509X509Name_NAME_AT_BIRTH, &OrgSpongycastleAsn1X509X509Name_POSTAL_ADDRESS, &OrgSpongycastleAsn1X509X509Name_DMD_NAME, &OrgSpongycastleAsn1X509X509Name_TELEPHONE_NUMBER, &OrgSpongycastleAsn1X509X509Name_NAME, &OrgSpongycastleAsn1X509X509Name_EmailAddress, &OrgSpongycastleAsn1X509X509Name_UnstructuredName, &OrgSpongycastleAsn1X509X509Name_UnstructuredAddress, &OrgSpongycastleAsn1X509X509Name_E, &OrgSpongycastleAsn1X509X509Name_DC, &OrgSpongycastleAsn1X509X509Name_UID, &OrgSpongycastleAsn1X509X509Name_DefaultReverse, &OrgSpongycastleAsn1X509X509Name_DefaultSymbols, &OrgSpongycastleAsn1X509X509Name_RFC2253Symbols, &OrgSpongycastleAsn1X509X509Name_RFC1779Symbols, &OrgSpongycastleAsn1X509X509Name_DefaultLookUp, &OrgSpongycastleAsn1X509X509Name_OIDLookUp, &OrgSpongycastleAsn1X509X509Name_SymbolLookUp, &OrgSpongycastleAsn1X509X509Name_TRUE, &OrgSpongycastleAsn1X509X509Name_FALSE };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509X509Name = { "X509Name", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 33, 51, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509X509Name;
}

+ (void)initialize {
  if (self == [OrgSpongycastleAsn1X509X509Name class]) {
    OrgSpongycastleAsn1X509X509Name_C = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 45
    @"2.5.4.6");
    OrgSpongycastleAsn1X509X509Name_O = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 51
    @"2.5.4.10");
    OrgSpongycastleAsn1X509X509Name_OU = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 57
    @"2.5.4.11");
    OrgSpongycastleAsn1X509X509Name_T = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 63
    @"2.5.4.12");
    OrgSpongycastleAsn1X509X509Name_CN = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 69
    @"2.5.4.3");
    OrgSpongycastleAsn1X509X509Name_SN = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 74
    @"2.5.4.5");
    OrgSpongycastleAsn1X509X509Name_STREET = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 79
    @"2.5.4.9");
    OrgSpongycastleAsn1X509X509Name_SERIALNUMBER =
#line 84
    OrgSpongycastleAsn1X509X509Name_SN;
    OrgSpongycastleAsn1X509X509Name_L = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 89
    @"2.5.4.7");
    OrgSpongycastleAsn1X509X509Name_ST = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 94
    @"2.5.4.8");
    OrgSpongycastleAsn1X509X509Name_SURNAME = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 99
    @"2.5.4.4");
    OrgSpongycastleAsn1X509X509Name_GIVENNAME = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 100
    @"2.5.4.42");
    OrgSpongycastleAsn1X509X509Name_INITIALS = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 101
    @"2.5.4.43");
    OrgSpongycastleAsn1X509X509Name_GENERATION = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 102
    @"2.5.4.44");
    OrgSpongycastleAsn1X509X509Name_UNIQUE_IDENTIFIER = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 103
    @"2.5.4.45");
    OrgSpongycastleAsn1X509X509Name_BUSINESS_CATEGORY = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 109
    @"2.5.4.15");
    OrgSpongycastleAsn1X509X509Name_POSTAL_CODE = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 115
    @"2.5.4.17");
    OrgSpongycastleAsn1X509X509Name_DN_QUALIFIER = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 121
    @"2.5.4.46");
    OrgSpongycastleAsn1X509X509Name_PSEUDONYM = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 127
    @"2.5.4.65");
    OrgSpongycastleAsn1X509X509Name_DATE_OF_BIRTH = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 134
    @"1.3.6.1.5.5.7.9.1");
    OrgSpongycastleAsn1X509X509Name_PLACE_OF_BIRTH = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 140
    @"1.3.6.1.5.5.7.9.2");
    OrgSpongycastleAsn1X509X509Name_GENDER = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 146
    @"1.3.6.1.5.5.7.9.3");
    OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 153
    @"1.3.6.1.5.5.7.9.4");
    OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 160
    @"1.3.6.1.5.5.7.9.5");
    OrgSpongycastleAsn1X509X509Name_NAME_AT_BIRTH = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 166
    @"1.3.36.8.3.14");
    OrgSpongycastleAsn1X509X509Name_POSTAL_ADDRESS = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 172
    @"2.5.4.16");
    OrgSpongycastleAsn1X509X509Name_DMD_NAME = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 177
    @"2.5.4.54");
    OrgSpongycastleAsn1X509X509Name_TELEPHONE_NUMBER = JreLoadStatic(OrgSpongycastleAsn1X509X509ObjectIdentifiers, id_at_telephoneNumber);
    OrgSpongycastleAsn1X509X509Name_NAME = JreLoadStatic(OrgSpongycastleAsn1X509X509ObjectIdentifiers, id_at_name);
    OrgSpongycastleAsn1X509X509Name_EmailAddress = JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, pkcs_9_at_emailAddress);
    OrgSpongycastleAsn1X509X509Name_UnstructuredName = JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, pkcs_9_at_unstructuredName);
    OrgSpongycastleAsn1X509X509Name_UnstructuredAddress = JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, pkcs_9_at_unstructuredAddress);
    OrgSpongycastleAsn1X509X509Name_E =
#line 205
    OrgSpongycastleAsn1X509X509Name_EmailAddress;
    OrgSpongycastleAsn1X509X509Name_DC = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 210
    @"0.9.2342.19200300.100.1.25");
    OrgSpongycastleAsn1X509X509Name_UID = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 215
    @"0.9.2342.19200300.100.1.1");
    OrgSpongycastleAsn1X509X509Name_DefaultSymbols = new_JavaUtilHashtable_init();
    OrgSpongycastleAsn1X509X509Name_RFC2253Symbols = new_JavaUtilHashtable_init();
    OrgSpongycastleAsn1X509X509Name_RFC1779Symbols = new_JavaUtilHashtable_init();
    OrgSpongycastleAsn1X509X509Name_DefaultLookUp = new_JavaUtilHashtable_init();
    OrgSpongycastleAsn1X509X509Name_OIDLookUp =
#line 250
    OrgSpongycastleAsn1X509X509Name_DefaultSymbols;
    OrgSpongycastleAsn1X509X509Name_SymbolLookUp =
#line 256
    OrgSpongycastleAsn1X509X509Name_DefaultLookUp;
    OrgSpongycastleAsn1X509X509Name_TRUE = new_JavaLangBoolean_initWithBoolean_(
#line 258
    true);
    OrgSpongycastleAsn1X509X509Name_FALSE = new_JavaLangBoolean_initWithBoolean_(
#line 259
    false);
    {
      
#line 263
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_C withId:@"C"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_O withId:@"O"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_T withId:@"T"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_OU withId:@"OU"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_CN withId:@"CN"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_L withId:@"L"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_ST withId:@"ST"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_SN withId:@"SERIALNUMBER"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_EmailAddress withId:@"E"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_DC withId:@"DC"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_UID withId:@"UID"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_STREET withId:@"STREET"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_SURNAME withId:@"SURNAME"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_GIVENNAME withId:@"GIVENNAME"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_INITIALS withId:@"INITIALS"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_GENERATION withId:@"GENERATION"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_UnstructuredAddress withId:@"unstructuredAddress"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_UnstructuredName withId:@"unstructuredName"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_UNIQUE_IDENTIFIER withId:@"UniqueIdentifier"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_DN_QUALIFIER withId:@"DN"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_PSEUDONYM withId:@"Pseudonym"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_POSTAL_ADDRESS withId:@"PostalAddress"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_NAME_AT_BIRTH withId:@"NameAtBirth"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP withId:@"CountryOfCitizenship"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE withId:@"CountryOfResidence"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_GENDER withId:@"Gender"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_PLACE_OF_BIRTH withId:@"PlaceOfBirth"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_DATE_OF_BIRTH withId:@"DateOfBirth"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_POSTAL_CODE withId:@"PostalCode"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_BUSINESS_CATEGORY withId:@"BusinessCategory"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_TELEPHONE_NUMBER withId:@"TelephoneNumber"];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgSpongycastleAsn1X509X509Name_NAME withId:@"Name"];
      
#line 296
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_C withId:@"C"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_O withId:@"O"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_OU withId:@"OU"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_CN withId:@"CN"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_L withId:@"L"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_ST withId:@"ST"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_STREET withId:@"STREET"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_DC withId:@"DC"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgSpongycastleAsn1X509X509Name_UID withId:@"UID"];
      
#line 306
      (void) [OrgSpongycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgSpongycastleAsn1X509X509Name_C withId:@"C"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgSpongycastleAsn1X509X509Name_O withId:@"O"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgSpongycastleAsn1X509X509Name_OU withId:@"OU"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgSpongycastleAsn1X509X509Name_CN withId:@"CN"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgSpongycastleAsn1X509X509Name_L withId:@"L"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgSpongycastleAsn1X509X509Name_ST withId:@"ST"];
      (void) [OrgSpongycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgSpongycastleAsn1X509X509Name_STREET withId:@"STREET"];
      
#line 314
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"c" withId:OrgSpongycastleAsn1X509X509Name_C];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"o" withId:OrgSpongycastleAsn1X509X509Name_O];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"t" withId:OrgSpongycastleAsn1X509X509Name_T];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"ou" withId:OrgSpongycastleAsn1X509X509Name_OU];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"cn" withId:OrgSpongycastleAsn1X509X509Name_CN];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"l" withId:OrgSpongycastleAsn1X509X509Name_L];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"st" withId:OrgSpongycastleAsn1X509X509Name_ST];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"sn" withId:OrgSpongycastleAsn1X509X509Name_SN];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"serialnumber" withId:OrgSpongycastleAsn1X509X509Name_SN];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"street" withId:OrgSpongycastleAsn1X509X509Name_STREET];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"emailaddress" withId:OrgSpongycastleAsn1X509X509Name_E];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"dc" withId:OrgSpongycastleAsn1X509X509Name_DC];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"e" withId:OrgSpongycastleAsn1X509X509Name_E];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"uid" withId:OrgSpongycastleAsn1X509X509Name_UID];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"surname" withId:OrgSpongycastleAsn1X509X509Name_SURNAME];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"givenname" withId:OrgSpongycastleAsn1X509X509Name_GIVENNAME];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"initials" withId:OrgSpongycastleAsn1X509X509Name_INITIALS];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"generation" withId:OrgSpongycastleAsn1X509X509Name_GENERATION];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"unstructuredaddress" withId:OrgSpongycastleAsn1X509X509Name_UnstructuredAddress];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"unstructuredname" withId:OrgSpongycastleAsn1X509X509Name_UnstructuredName];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"uniqueidentifier" withId:OrgSpongycastleAsn1X509X509Name_UNIQUE_IDENTIFIER];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"dn" withId:OrgSpongycastleAsn1X509X509Name_DN_QUALIFIER];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"pseudonym" withId:OrgSpongycastleAsn1X509X509Name_PSEUDONYM];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"postaladdress" withId:OrgSpongycastleAsn1X509X509Name_POSTAL_ADDRESS];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"nameofbirth" withId:OrgSpongycastleAsn1X509X509Name_NAME_AT_BIRTH];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"countryofcitizenship" withId:OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"countryofresidence" withId:OrgSpongycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"gender" withId:OrgSpongycastleAsn1X509X509Name_GENDER];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"placeofbirth" withId:OrgSpongycastleAsn1X509X509Name_PLACE_OF_BIRTH];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"dateofbirth" withId:OrgSpongycastleAsn1X509X509Name_DATE_OF_BIRTH];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"postalcode" withId:OrgSpongycastleAsn1X509X509Name_POSTAL_CODE];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"businesscategory" withId:OrgSpongycastleAsn1X509X509Name_BUSINESS_CATEGORY];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"telephonenumber" withId:OrgSpongycastleAsn1X509X509Name_TELEPHONE_NUMBER];
      (void) [OrgSpongycastleAsn1X509X509Name_DefaultLookUp putWithId:@"name" withId:OrgSpongycastleAsn1X509X509Name_NAME];
    }
    J2OBJC_SET_INITIALIZED(OrgSpongycastleAsn1X509X509Name)
  }
}

@end


#line 367
OrgSpongycastleAsn1X509X509Name *OrgSpongycastleAsn1X509X509Name_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1X509X509Name_initialize();
  
#line 371
  return OrgSpongycastleAsn1X509X509Name_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1X509X509Name *OrgSpongycastleAsn1X509X509Name_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1X509X509Name_initialize();
  
#line 377
  if (obj == nil || [obj isKindOfClass:[OrgSpongycastleAsn1X509X509Name class]]) {
    
#line 379
    return (OrgSpongycastleAsn1X509X509Name *) cast_chk(obj, [OrgSpongycastleAsn1X509X509Name class]);
  }
  else if ([obj isKindOfClass:[OrgSpongycastleAsn1X500X500Name class]]) {
    
#line 383
    return new_OrgSpongycastleAsn1X509X509Name_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgSpongycastleAsn1X500X500Name *) obj) toASN1Primitive]));
  }
  else if (obj != nil) {
    
#line 387
    return new_OrgSpongycastleAsn1X509X509Name_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 390
  return nil;
}


#line 393
void OrgSpongycastleAsn1X509X509Name_init(OrgSpongycastleAsn1X509X509Name *self) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 350
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
}


#line 393
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, init)
}


#line 393
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, init)
}


#line 403
void OrgSpongycastleAsn1X509X509Name_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509X509Name *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 350
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 406
  self->seq_ = seq;
  
#line 408
  id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  
#line 410
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 412
    OrgSpongycastleAsn1ASN1Set *set = OrgSpongycastleAsn1ASN1Set_getInstanceWithId_([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check([e nextElement], OrgSpongycastleAsn1ASN1Encodable_class_())))) toASN1Primitive]);
    
#line 414
    for (jint i = 0; i < [((OrgSpongycastleAsn1ASN1Set *) nil_chk(set)) size]; i++) {
      
#line 416
      OrgSpongycastleAsn1ASN1Sequence *s = OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([set getObjectAtWithInt:i])) toASN1Primitive]);
      
#line 418
      if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(s)) size] != 2) {
        
#line 420
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"badly sized pair");
      }
      
#line 423
      [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([s getObjectAtWithInt:0])];
      
#line 425
      id<OrgSpongycastleAsn1ASN1Encodable> value = [s getObjectAtWithInt:1];
      if ([OrgSpongycastleAsn1ASN1String_class_() isInstance:value] && !([value isKindOfClass:[OrgSpongycastleAsn1DERUniversalString class]])) {
        
#line 428
        NSString *v = [((id<OrgSpongycastleAsn1ASN1String>) nil_chk(((id<OrgSpongycastleAsn1ASN1String>) cast_check(value, OrgSpongycastleAsn1ASN1String_class_())))) getString];
        if ([((NSString *) nil_chk(v)) java_length] > 0 && [v charAtWithInt:0] == '#') {
          
#line 431
          [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:JreStrcat("C$", '\\', v)];
        }
        else {
          
#line 435
          [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:v];
        }
      }
      else {
        
#line 440
        @try {
          
#line 442
          [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:JreStrcat("C$", '#', OrgSpongycastleAsn1X509X509Name_bytesToStringWithByteArray_(self, OrgSpongycastleUtilEncodersHex_encodeWithByteArray_([((OrgSpongycastleAsn1ASN1Primitive *) nil_chk([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk(value)) toASN1Primitive])) getEncodedWithNSString:OrgSpongycastleAsn1ASN1Encoding_DER])))];
        }
        @catch (JavaIoIOException *e1) {
          
#line 446
          @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"cannot encode value");
        }
      }
      [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:(i != 0) ? OrgSpongycastleAsn1X509X509Name_TRUE : OrgSpongycastleAsn1X509X509Name_FALSE];
    }
  }
}


#line 403
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 403
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 466
void OrgSpongycastleAsn1X509X509Name_initWithJavaUtilHashtable_(OrgSpongycastleAsn1X509X509Name *self, JavaUtilHashtable *attributes) {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(self,
#line 469
  nil, attributes);
}


#line 466
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilHashtable_(JavaUtilHashtable *attributes) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilHashtable_, attributes)
}


#line 466
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilHashtable_(JavaUtilHashtable *attributes) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilHashtable_, attributes)
}


#line 480
void OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(OrgSpongycastleAsn1X509X509Name *self, JavaUtilVector *ordering, JavaUtilHashtable *attributes) {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self,
#line 484
  ordering, attributes, new_OrgSpongycastleAsn1X509X509DefaultEntryConverter_init());
}


#line 480
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *attributes) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_, ordering, attributes)
}


#line 480
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *attributes) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_, ordering, attributes)
}


#line 499
void OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgSpongycastleAsn1X509X509NameEntryConverter_(OrgSpongycastleAsn1X509X509Name *self, JavaUtilVector *ordering, JavaUtilHashtable *attributes, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 350
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 504
  self->converter_ = converter;
  
#line 506
  if (ordering != nil) {
    
#line 508
    for (jint i = 0; i != [ordering size]; i++) {
      
#line 510
      [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[ordering elementAtWithInt:i]];
      [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:OrgSpongycastleAsn1X509X509Name_FALSE];
    }
  }
  else {
    
#line 516
    id<JavaUtilEnumeration> e = [((JavaUtilHashtable *) nil_chk(attributes)) keys];
    
#line 518
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      
#line 520
      [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[e nextElement]];
      [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:OrgSpongycastleAsn1X509X509Name_FALSE];
    }
  }
  
#line 525
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(self->ordering_)) size]; i++) {
    
#line 527
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    
#line 529
    if ([((JavaUtilHashtable *) nil_chk(attributes)) getWithId:oid] == nil) {
      
#line 531
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"No attribute for object id - ", [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId], @" - passed to distinguished name"));
    }
    
#line 534
    [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:[attributes getWithId:oid]];
  }
}


#line 499
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgSpongycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *ordering, JavaUtilHashtable *attributes, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_withOrgSpongycastleAsn1X509X509NameEntryConverter_, ordering, attributes, converter)
}


#line 499
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgSpongycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *ordering, JavaUtilHashtable *attributes, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_withOrgSpongycastleAsn1X509X509NameEntryConverter_, ordering, attributes, converter)
}


#line 542
void OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(OrgSpongycastleAsn1X509X509Name *self, JavaUtilVector *oids, JavaUtilVector *values) {
  OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self,
#line 546
  oids, values, new_OrgSpongycastleAsn1X509X509DefaultEntryConverter_init());
}


#line 542
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *oids, JavaUtilVector *values) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_, oids, values)
}


#line 542
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *oids, JavaUtilVector *values) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_, oids, values)
}


#line 556
void OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgSpongycastleAsn1X509X509NameEntryConverter_(OrgSpongycastleAsn1X509X509Name *self, JavaUtilVector *oids, JavaUtilVector *values, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 350
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 561
  self->converter_ = converter;
  
#line 563
  if ([((JavaUtilVector *) nil_chk(oids)) size] != [((JavaUtilVector *) nil_chk(values)) size]) {
    
#line 565
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"oids vector must be same length as values.");
  }
  
#line 568
  for (jint i = 0; i < [oids size]; i++) {
    
#line 570
    [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[oids elementAtWithInt:i]];
    [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:[values elementAtWithInt:i]];
    [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:OrgSpongycastleAsn1X509X509Name_FALSE];
  }
}


#line 556
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgSpongycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *oids, JavaUtilVector *values, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_withOrgSpongycastleAsn1X509X509NameEntryConverter_, oids, values, converter)
}


#line 556
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgSpongycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *oids, JavaUtilVector *values, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_withOrgSpongycastleAsn1X509X509NameEntryConverter_, oids, values, converter)
}


#line 591
void OrgSpongycastleAsn1X509X509Name_initWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *dirName) {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(self, OrgSpongycastleAsn1X509X509Name_DefaultReverse, OrgSpongycastleAsn1X509X509Name_DefaultLookUp,
#line 594
  dirName);
}


#line 591
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithNSString_(NSString *dirName) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithNSString_, dirName)
}


#line 591
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithNSString_(NSString *dirName) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithNSString_, dirName)
}


#line 604
void OrgSpongycastleAsn1X509X509Name_initWithNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(OrgSpongycastleAsn1X509X509Name *self, NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self, OrgSpongycastleAsn1X509X509Name_DefaultReverse, OrgSpongycastleAsn1X509X509Name_DefaultLookUp,
#line 608
  dirName, converter);
}


#line 604
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_, dirName, converter)
}


#line 604
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_, dirName, converter)
}


#line 618
void OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_(OrgSpongycastleAsn1X509X509Name *self, jboolean reverse, NSString *dirName) {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(self,
#line 622
  reverse, OrgSpongycastleAsn1X509X509Name_DefaultLookUp, dirName);
}


#line 618
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_(jboolean reverse, NSString *dirName) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withNSString_, reverse, dirName)
}


#line 618
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_(jboolean reverse, NSString *dirName) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withNSString_, reverse, dirName)
}


#line 633
void OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(OrgSpongycastleAsn1X509X509Name *self, jboolean reverse, NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self,
#line 638
  reverse, OrgSpongycastleAsn1X509X509Name_DefaultLookUp, dirName, converter);
}


#line 633
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(jboolean reverse, NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_, reverse, dirName, converter)
}


#line 633
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(jboolean reverse, NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_, reverse, dirName, converter)
}


#line 655
void OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(OrgSpongycastleAsn1X509X509Name *self, jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName) {
  OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(self,
#line 660
  reverse, lookUp, dirName, new_OrgSpongycastleAsn1X509X509DefaultEntryConverter_init());
}


#line 655
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_, reverse, lookUp, dirName)
}


#line 655
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_, reverse, lookUp, dirName)
}


#line 663
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(OrgSpongycastleAsn1X509X509Name *self, NSString *name, JavaUtilHashtable *lookUp) {
  
#line 667
  name = [((NSString *) nil_chk(name)) java_trim];
  if ([((NSString *) nil_chk(OrgSpongycastleUtilStrings_toUpperCaseWithNSString_(name))) java_hasPrefix:@"OID."]) {
    
#line 670
    return new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((NSString *) nil_chk(name)) java_substring:4]);
  }
  else if ([((NSString *) nil_chk(name)) charAtWithInt:0] >= '0' && [name charAtWithInt:0] <= '9') {
    
#line 674
    return new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(name);
  }
  
#line 677
  OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilHashtable *) nil_chk(lookUp)) getWithId:OrgSpongycastleUtilStrings_toLowerCaseWithNSString_(name)], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
  if (oid == nil) {
    
#line 680
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Unknown object id - ", name, @" - passed to distinguished name"));
  }
  
#line 683
  return oid;
}


#line 686
NSString *OrgSpongycastleAsn1X509X509Name_unescapeWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *elt) {
  
#line 688
  if ([((NSString *) nil_chk(elt)) java_length] == 0 || ([elt java_indexOf:'\\'] < 0 && [elt java_indexOf:'"'] < 0)) {
    
#line 690
    return [elt java_trim];
  }
  
#line 693
  IOSCharArray *elts = [elt java_toCharArray];
  jboolean escaped = false;
  jboolean quoted = false;
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithInt_([elt java_length]);
  jint start = 0;
  
#line 701
  if (IOSCharArray_Get(nil_chk(elts), 0) == '\\') {
    
#line 703
    if (IOSCharArray_Get(elts, 1) == '#') {
      
#line 705
      start = 2;
      (void) [buf appendWithNSString:@"\\#"];
    }
  }
  
#line 710
  jboolean nonWhiteSpaceEncountered = false;
  jint lastEscaped = 0;
  
#line 713
  for (jint i = start; i != elts->size_; i++) {
    
#line 715
    jchar c = IOSCharArray_Get(elts, i);
    
#line 717
    if (c != ' ') {
      
#line 719
      nonWhiteSpaceEncountered = true;
    }
    
#line 722
    if (c == '"') {
      
#line 724
      if (!escaped) {
        
#line 726
        quoted = !quoted;
      }
      else {
        
#line 730
        (void) [buf appendWithChar:c];
      }
      escaped = false;
    }
    else if (c == '\\' && !(escaped || quoted)) {
      
#line 736
      escaped = true;
      lastEscaped = [buf java_length];
    }
    else {
      
#line 741
      if (c == ' ' && !escaped && !nonWhiteSpaceEncountered) {
        
#line 743
        continue;
      }
      (void) [buf appendWithChar:c];
      escaped = false;
    }
  }
  
#line 750
  if ([buf java_length] > 0) {
    
#line 752
    while ([buf charAtWithInt:[buf java_length] - 1] == ' ' && lastEscaped != ([buf java_length] - 1)) {
      
#line 754
      [buf setLengthWithInt:[buf java_length] - 1];
    }
  }
  
#line 758
  return [buf description];
}


#line 774
void OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(OrgSpongycastleAsn1X509X509Name *self, jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 350
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 780
  self->converter_ = converter;
  OrgSpongycastleAsn1X509X509NameTokenizer *nTok = new_OrgSpongycastleAsn1X509X509NameTokenizer_initWithNSString_(dirName);
  
#line 783
  while ([nTok hasMoreTokens]) {
    
#line 785
    NSString *token = [nTok nextToken];
    
#line 787
    if ([((NSString *) nil_chk(token)) java_indexOf:'+'] > 0) {
      
#line 789
      OrgSpongycastleAsn1X509X509NameTokenizer *pTok = new_OrgSpongycastleAsn1X509X509NameTokenizer_initWithNSString_withChar_(token, '+');
      
#line 791
      OrgSpongycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, [pTok nextToken], OrgSpongycastleAsn1X509X509Name_FALSE);
      
#line 793
      while ([pTok hasMoreTokens]) {
        
#line 795
        OrgSpongycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, [pTok nextToken], OrgSpongycastleAsn1X509X509Name_TRUE);
      }
    }
    else {
      
#line 800
      OrgSpongycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, token, OrgSpongycastleAsn1X509X509Name_FALSE);
    }
  }
  
#line 804
  if (reverse) {
    
#line 806
    JavaUtilVector *o = new_JavaUtilVector_init();
    JavaUtilVector *v = new_JavaUtilVector_init();
    JavaUtilVector *a = new_JavaUtilVector_init();
    
#line 810
    jint count = 1;
    
#line 812
    for (jint i = 0; i < [((JavaUtilVector *) nil_chk(self->ordering_)) size]; i++) {
      
#line 814
      if ([((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk([((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
        
#line 816
        [o insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i] withInt:count];
        [v insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->values_)) elementAtWithInt:i] withInt:count];
        [a insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i] withInt:count];
        count++;
      }
      else {
        
#line 823
        [o insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i] withInt:0];
        [v insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->values_)) elementAtWithInt:i] withInt:0];
        [a insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i] withInt:0];
        count = 1;
      }
    }
    
#line 830
    self->ordering_ = o;
    self->values_ = v;
    self->added_ = a;
  }
}


#line 774
OrgSpongycastleAsn1X509X509Name *new_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_, reverse, lookUp, dirName, converter)
}


#line 774
OrgSpongycastleAsn1X509X509Name *create_OrgSpongycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName, OrgSpongycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_withOrgSpongycastleAsn1X509X509NameEntryConverter_, reverse, lookUp, dirName, converter)
}


#line 836
void OrgSpongycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(OrgSpongycastleAsn1X509X509Name *self, JavaUtilHashtable *lookUp, NSString *token, JavaLangBoolean *isAdded) {
  
#line 838
  OrgSpongycastleAsn1X509X509NameTokenizer *vTok;
  NSString *name;
  NSString *value;
  
#line 840
  OrgSpongycastleAsn1ASN1ObjectIdentifier *oid;
  vTok = new_OrgSpongycastleAsn1X509X509NameTokenizer_initWithNSString_withChar_(token, '=');
  
#line 843
  name = [vTok nextToken];
  
#line 845
  if (![vTok hasMoreTokens]) {
    
#line 847
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"badly formatted directory string");
  }
  
#line 850
  value = [vTok nextToken];
  
#line 852
  oid = OrgSpongycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(self, name, lookUp);
  
#line 854
  [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:oid];
  [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:OrgSpongycastleAsn1X509X509Name_unescapeWithNSString_(self, value)];
  [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:isAdded];
}


#line 1149
jboolean OrgSpongycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *s1, NSString *s2) {
  
#line 1151
  NSString *value = OrgSpongycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s1);
  NSString *oValue = OrgSpongycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s2);
  
#line 1154
  if (![((NSString *) nil_chk(value)) isEqual:oValue]) {
    
#line 1156
    value = OrgSpongycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, value);
    oValue = OrgSpongycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, oValue);
    
#line 1159
    if (![((NSString *) nil_chk(value)) isEqual:oValue]) {
      
#line 1161
      return false;
    }
  }
  
#line 1165
  return true;
}


#line 1168
NSString *OrgSpongycastleAsn1X509X509Name_canonicalizeWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *s) {
  
#line 1170
  NSString *value = OrgSpongycastleUtilStrings_toLowerCaseWithNSString_([((NSString *) nil_chk(s)) java_trim]);
  
#line 1172
  if ([((NSString *) nil_chk(value)) java_length] > 0 && [value charAtWithInt:0] == '#') {
    
#line 1174
    OrgSpongycastleAsn1ASN1Primitive *obj = OrgSpongycastleAsn1X509X509Name_decodeObjectWithNSString_(self, value);
    
#line 1176
    if ([OrgSpongycastleAsn1ASN1String_class_() isInstance:obj]) {
      
#line 1178
      value = OrgSpongycastleUtilStrings_toLowerCaseWithNSString_([((NSString *) nil_chk([((id<OrgSpongycastleAsn1ASN1String>) nil_chk(((id<OrgSpongycastleAsn1ASN1String>) cast_check(obj, OrgSpongycastleAsn1ASN1String_class_())))) getString])) java_trim]);
    }
  }
  
#line 1182
  return value;
}


#line 1185
OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleAsn1X509X509Name_decodeObjectWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *oValue) {
  
#line 1187
  @try {
    
#line 1189
    return OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(OrgSpongycastleUtilEncodersHex_decodeWithNSString_([((NSString *) nil_chk(oValue)) java_substring:1]));
  }
  @catch (JavaIoIOException *e) {
    
#line 1193
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"unknown encoding in name: ", e));
  }
}


#line 1197
NSString *OrgSpongycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(OrgSpongycastleAsn1X509X509Name *self, NSString *str) {
  
#line 1200
  JavaLangStringBuffer *res = new_JavaLangStringBuffer_init();
  
#line 1202
  if ([((NSString *) nil_chk(str)) java_length] != 0) {
    
#line 1204
    jchar c1 = [str charAtWithInt:0];
    
#line 1206
    (void) [res appendWithChar:c1];
    
#line 1208
    for (jint k = 1; k < [str java_length]; k++) {
      
#line 1210
      jchar c2 = [str charAtWithInt:k];
      if (!(c1 == ' ' && c2 == ' ')) {
        
#line 1213
        (void) [res appendWithChar:c2];
      }
      c1 = c2;
    }
  }
  
#line 1219
  return [res description];
}


#line 1222
void OrgSpongycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1X509X509Name *self, JavaLangStringBuffer *buf, JavaUtilHashtable *oidSymbols, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *value) {
  
#line 1228
  NSString *sym = (NSString *) cast_chk([((JavaUtilHashtable *) nil_chk(oidSymbols)) getWithId:oid], [NSString class]);
  
#line 1230
  if (sym != nil) {
    
#line 1232
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:sym];
  }
  else {
    
#line 1236
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:[((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]];
  }
  
#line 1239
  (void) [buf appendWithChar:'='];
  
#line 1241
  jint start = [buf java_length];
  (void) [buf appendWithNSString:value];
  jint end = [buf java_length];
  
#line 1245
  if ([((NSString *) nil_chk(value)) java_length] >= 2 && [value charAtWithInt:0] == '\\' && [value charAtWithInt:1] == '#') {
    
#line 1247
    start += 2;
  }
  
#line 1250
  while (start < end && [buf charAtWithInt:start] == ' ') {
    
#line 1252
    (void) [buf insertWithInt:start withNSString:@"\\"];
    start += 2;
    ++end;
  }
  
#line 1257
  while (--end > start && [buf charAtWithInt:end] == ' ') {
    
#line 1259
    (void) [buf insertWithInt:end withChar:'\\'];
  }
  
#line 1262
  while (start <= end) {
    
#line 1264
    switch ([buf charAtWithInt:start]) {
      
#line 1266
      case ',':
      case '"':
      case '\\':
      case '+':
      case '=':
      case '<':
      case '>':
      case ';':
      (void) [buf insertWithInt:start withNSString:@"\\"];
      start += 2;
      ++end;
      break;
      default:
      ++start;
      break;
    }
  }
}


#line 1362
NSString *OrgSpongycastleAsn1X509X509Name_bytesToStringWithByteArray_(OrgSpongycastleAsn1X509X509Name *self, IOSByteArray *data) {
  
#line 1365
  IOSCharArray *cs = [IOSCharArray newArrayWithLength:((IOSByteArray *) nil_chk(data))->size_];
  
#line 1367
  for (jint i = 0; i != cs->size_; i++) {
    
#line 1369
    *IOSCharArray_GetRef(cs, i) = (jchar) (IOSByteArray_Get(data, i) & (jint) 0xff);
  }
  
#line 1372
  return [NSString java_stringWithCharacters:cs];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509X509Name)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Font.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextFont")
#ifdef RESTRICT_ComAowagieTextFont
#define INCLUDE_ALL_ComAowagieTextFont 0
#else
#define INCLUDE_ALL_ComAowagieTextFont 1
#endif
#undef RESTRICT_ComAowagieTextFont

#if !defined (ComAowagieTextFont_) && (INCLUDE_ALL_ComAowagieTextFont || defined(INCLUDE_ComAowagieTextFont))
#define ComAowagieTextFont_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class ComAowagieTextPdfBaseFont;
@class HarmonyJavaAwtColor;

/*!
 @brief Contains all the specifications of a font: fontfamily, size, style and color.
 <P>
  Example: <BLOCKQUOTE>
  
 @code

  Paragraph p = new Paragraph("This is a paragraph", <STRONG>new
  Font(Font.HELVETICA, 18, Font.BOLDITALIC, new Color(0, 0, 255)) </STRONG>);
  
  
@endcode
  
 </BLOCKQUOTE>
 */
@interface ComAowagieTextFont : NSObject < JavaLangComparable >

#pragma mark Public

/*!
 @brief Constructs a Font.
 */
- (instancetype)init;

/*!
 @brief Constructs a Font.
 @param bf the external font
 */
- (instancetype)initWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)bf;

/*!
 @brief Constructs a Font.
 @param bf the external font
 @param size the size of this font
 @param style the style of this font
 @param color the 
  <CODE> Color </CODE>  of this font.
 */
- (instancetype)initWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)bf
                                        withFloat:(jfloat)size
                                          withInt:(jint)style
                          withHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color;

/*!
 @brief Copy constructor of a Font
 @param other the font that has to be copied
 */
- (instancetype)initWithComAowagieTextFont:(ComAowagieTextFont *)other;

/*!
 @brief Constructs a Font.
 @param family the family to which this font belongs
 @param size the size of this font
 @param style the style of this font
 @param color the 
  <CODE> Color </CODE>  of this font.
 */
- (instancetype)initWithInt:(jint)family
                  withFloat:(jfloat)size
                    withInt:(jint)style
    withHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color;

/*!
 @brief Compares this <CODE>Font</CODE> with another
 @param object the other 
  <CODE> Font </CODE>
 @return a value
 */
- (jint)compareToWithId:(id)object;

/*!
 @brief Gets the <CODE>BaseFont</CODE> inside this object.
 @return the <CODE>BaseFont</CODE>
 */
- (ComAowagieTextPdfBaseFont *)getBaseFont;

/*!
 @brief Gets the <CODE>BaseFont</CODE> this class represents.For the built-in
  fonts a <CODE>BaseFont</CODE> is calculated.
 @param specialEncoding <CODE>
  true </CODE>  to use the special encoding for Symbol and             ZapfDingbats, 
  <CODE> false </CODE>  to always use  <CODE> Cp1252             
  </CODE>
 @return the <CODE>BaseFont</CODE> this class represents
 */
- (ComAowagieTextPdfBaseFont *)getCalculatedBaseFontWithBoolean:(jboolean)specialEncoding;

/*!
 @brief Gets the size that can be used with the calculated <CODE>BaseFont
  </CODE>.
 @return the size that can be used with the calculated <CODE>BaseFont
          </CODE>
 */
- (jfloat)getCalculatedSize;

/*!
 @brief Gets the style that can be used with the calculated <CODE>BaseFont
  </CODE>.
 @return the style that can be used with the calculated <CODE>BaseFont
          </CODE>
 */
- (jint)getCalculatedStyle;

/*!
 @brief Gets the color of this font.
 @return a color
 */
- (HarmonyJavaAwtColor *)getColor;

/*!
 @brief Gets the family of this font.
 @return the value of the family
 */
- (jint)getFamily;

/*!
 @brief Gets the familyname as a String.
 @return the familyname
 */
- (NSString *)getFamilyname;

/*!
 @brief Gets the size of this font.
 @return a size
 */
- (jfloat)getSize;

/*!
 @brief Gets the style of this font.
 @return a size
 */
- (jint)getStyle;

/*!
 @brief checks if this font is Bold.
 @return a <CODE>boolean</CODE>
 */
- (jboolean)isBold;

/*!
 @brief checks if this font is Bold.
 @return a <CODE>boolean</CODE>
 */
- (jboolean)isItalic;

/*!
 @brief Checks if the properties of this font are undefined or null.
 <P>
  If so, the standard should be used.
 @return a <CODE>boolean</CODE>
 */
- (jboolean)isStandardFont;

/*!
 @brief checks if the style of this font is STRIKETHRU.
 @return a <CODE>boolean</CODE>
 */
- (jboolean)isStrikethru;

/*!
 @brief checks if this font is underlined.
 @return a <CODE>boolean</CODE>
 */
- (jboolean)isUnderlined;

/*!
 @brief Sets the color.
 @param color the new color of the font
 */
- (void)setColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)color;

/*!
 @brief Sets the family using a <CODE>String</CODE> ("Courier", "Helvetica",
  "Times New Roman", "Symbol" or "ZapfDingbats").
 @param family A 
  <CODE> String </CODE>  representing a certain font-family.
 */
- (void)setFamilyWithNSString:(NSString *)family;

/*!
 @brief Sets the size.
 @param size The new size of the font.
 */
- (void)setSizeWithFloat:(jfloat)size;

/*!
 @brief Sets the style.
 @param style the style.
 */
- (void)setStyleWithInt:(jint)style;

/*!
 @brief Sets the style using a <CODE>String</CODE> containing one of more of
  the following values: normal, bold, italic, underline, strike.
 @param style A 
  <CODE> String </CODE>  representing a certain style.
 */
- (void)setStyleWithNSString:(NSString *)style;

#pragma mark Package-Private

/*!
 @brief Replaces the attributes that are equal to <VAR>null</VAR> with the
  attributes of a given font.
 @param font the font of a bigger element class
 @return a <CODE>Font</CODE>
 */
- (ComAowagieTextFont *)differenceWithComAowagieTextFont:(ComAowagieTextFont *)font;

/*!
 @brief Gets the leading that can be used with this font.
 @param linespacing a certain linespacing
 @return the height of a line
 */
- (jfloat)getCalculatedLeadingWithFloat:(jfloat)linespacing;

/*!
 @brief Translates a <CODE>String</CODE> -value of a certain style into the
  index value is used for this style in this class.
 @param style A 
  <CODE> String </CODE>
 @return the corresponding value
 */
+ (jint)getStyleValueWithNSString:(NSString *)style;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextFont)

/*!
 @brief a possible value of a font family.
 */
inline jint ComAowagieTextFont_get_COURIER(void);
#define ComAowagieTextFont_COURIER 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, COURIER, jint)

/*!
 @brief a possible value of a font family.
 */
inline jint ComAowagieTextFont_get_HELVETICA(void);
#define ComAowagieTextFont_HELVETICA 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, HELVETICA, jint)

/*!
 @brief a possible value of a font family.
 */
inline jint ComAowagieTextFont_get_TIMES_ROMAN(void);
#define ComAowagieTextFont_TIMES_ROMAN 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, TIMES_ROMAN, jint)

/*!
 @brief a possible value of a font family.
 */
inline jint ComAowagieTextFont_get_SYMBOL(void);
#define ComAowagieTextFont_SYMBOL 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, SYMBOL, jint)

/*!
 @brief a possible value of a font family.
 */
inline jint ComAowagieTextFont_get_ZAPFDINGBATS(void);
#define ComAowagieTextFont_ZAPFDINGBATS 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, ZAPFDINGBATS, jint)

/*!
 @brief this is a possible style.
 */
inline jint ComAowagieTextFont_get_NORMAL(void);
#define ComAowagieTextFont_NORMAL 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, NORMAL, jint)

/*!
 @brief this is a possible style.
 */
inline jint ComAowagieTextFont_get_BOLD(void);
#define ComAowagieTextFont_BOLD 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, BOLD, jint)

/*!
 @brief this is a possible style.
 */
inline jint ComAowagieTextFont_get_ITALIC(void);
#define ComAowagieTextFont_ITALIC 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, ITALIC, jint)

/*!
 @brief this is a possible style.
 */
inline jint ComAowagieTextFont_get_BOLDITALIC(void);
#define ComAowagieTextFont_BOLDITALIC 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, BOLDITALIC, jint)

/*!
 @brief the value of an undefined attribute.
 */
inline jint ComAowagieTextFont_get_UNDEFINED(void);
#define ComAowagieTextFont_UNDEFINED -1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, UNDEFINED, jint)

/*!
 @brief the value of the default size.
 */
inline jint ComAowagieTextFont_get_DEFAULTSIZE(void);
#define ComAowagieTextFont_DEFAULTSIZE 12
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextFont, DEFAULTSIZE, jint)

FOUNDATION_EXPORT void ComAowagieTextFont_initWithComAowagieTextFont_(ComAowagieTextFont *self, ComAowagieTextFont *other);

FOUNDATION_EXPORT ComAowagieTextFont *new_ComAowagieTextFont_initWithComAowagieTextFont_(ComAowagieTextFont *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextFont *create_ComAowagieTextFont_initWithComAowagieTextFont_(ComAowagieTextFont *other);

FOUNDATION_EXPORT void ComAowagieTextFont_initWithInt_withFloat_withInt_withHarmonyJavaAwtColor_(ComAowagieTextFont *self, jint family, jfloat size, jint style, HarmonyJavaAwtColor *color);

FOUNDATION_EXPORT ComAowagieTextFont *new_ComAowagieTextFont_initWithInt_withFloat_withInt_withHarmonyJavaAwtColor_(jint family, jfloat size, jint style, HarmonyJavaAwtColor *color) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextFont *create_ComAowagieTextFont_initWithInt_withFloat_withInt_withHarmonyJavaAwtColor_(jint family, jfloat size, jint style, HarmonyJavaAwtColor *color);

FOUNDATION_EXPORT void ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_withFloat_withInt_withHarmonyJavaAwtColor_(ComAowagieTextFont *self, ComAowagieTextPdfBaseFont *bf, jfloat size, jint style, HarmonyJavaAwtColor *color);

FOUNDATION_EXPORT ComAowagieTextFont *new_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_withFloat_withInt_withHarmonyJavaAwtColor_(ComAowagieTextPdfBaseFont *bf, jfloat size, jint style, HarmonyJavaAwtColor *color) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextFont *create_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_withFloat_withInt_withHarmonyJavaAwtColor_(ComAowagieTextPdfBaseFont *bf, jfloat size, jint style, HarmonyJavaAwtColor *color);

FOUNDATION_EXPORT void ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_(ComAowagieTextFont *self, ComAowagieTextPdfBaseFont *bf);

FOUNDATION_EXPORT ComAowagieTextFont *new_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_(ComAowagieTextPdfBaseFont *bf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextFont *create_ComAowagieTextFont_initWithComAowagieTextPdfBaseFont_(ComAowagieTextPdfBaseFont *bf);

FOUNDATION_EXPORT void ComAowagieTextFont_init(ComAowagieTextFont *self);

FOUNDATION_EXPORT ComAowagieTextFont *new_ComAowagieTextFont_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextFont *create_ComAowagieTextFont_init(void);

FOUNDATION_EXPORT jint ComAowagieTextFont_getStyleValueWithNSString_(NSString *style);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextFont)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextFont")

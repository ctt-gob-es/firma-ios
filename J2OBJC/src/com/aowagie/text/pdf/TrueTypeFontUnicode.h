//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/TrueTypeFontUnicode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfTrueTypeFontUnicode")
#ifdef RESTRICT_ComAowagieTextPdfTrueTypeFontUnicode
#define INCLUDE_ALL_ComAowagieTextPdfTrueTypeFontUnicode 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfTrueTypeFontUnicode 1
#endif
#undef RESTRICT_ComAowagieTextPdfTrueTypeFontUnicode

#if !defined (ComAowagieTextPdfTrueTypeFontUnicode_) && (INCLUDE_ALL_ComAowagieTextPdfTrueTypeFontUnicode || defined(INCLUDE_ComAowagieTextPdfTrueTypeFontUnicode))
#define ComAowagieTextPdfTrueTypeFontUnicode_

#define RESTRICT_ComAowagieTextPdfTrueTypeFont 1
#define INCLUDE_ComAowagieTextPdfTrueTypeFont 1
#include "com/aowagie/text/pdf/TrueTypeFont.h"

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfStream;
@class ComAowagieTextPdfPdfWriter;
@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

/*!
 @brief Represents a True Type font with Unicode encoding.All the character
  in the font can be used directly by using the encoding Identity-H or
  Identity-V.
 This is the only way to represent some character sets such
  as Thai.
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfTrueTypeFontUnicode : ComAowagieTextPdfTrueTypeFont < JavaUtilComparator >

#pragma mark Public

/*!
 @brief Checks if a character exists in this font.
 @param c the character to check
 @return <CODE>true</CODE> if the character has a glyph, 
 <CODE>false</CODE> otherwise
 */
- (jboolean)charExistsWithInt:(jint)c;

/*!
 @brief The method used to sort the metrics array.
 @param o1 the first element
 @param o2 the second element
 @return the comparison
 */
- (jint)compareWithId:(id)o1
               withId:(id)o2;

- (IOSIntArray *)getCharBBoxWithInt:(jint)c;

/*!
 @brief Returns a PdfStream object with the full font program.
 @return a PdfStream with the font program
 @since 2.1.3
 */
- (ComAowagieTextPdfPdfStream *)getFullFontStream;

/*!
 @brief Gets the glyph index and metrics for a character.
 @param c the character
 @return an <CODE>int</CODE> array with {glyph index, width}
 */
- (IOSIntArray *)getMetricsTTWithInt:(jint)c;

/*!
 @brief Gets the width of a <CODE>char</CODE> in normalized 1000 units.
 @param char1 the unicode  <CODE> char </CODE>  to get the width of
 @return the width in normalized 1000 units
 */
- (jint)getWidthWithInt:(jint)char1;

/*!
 @brief Gets the width of a <CODE>String</CODE> in normalized 1000 units.
 @param text the  <CODE> String </CODE>  to get the width of
 @return the width in normalized 1000 units
 */
- (jint)getWidthWithNSString:(NSString *)text;

/*!
 @brief Sets the character advance.
 @param c the character
 @param advance the character advance normalized to 1000 units
 @return <CODE>true</CODE> if the advance was set, 
 <CODE>false</CODE> otherwise
 */
- (jboolean)setCharAdvanceWithInt:(jint)c
                          withInt:(jint)advance;

#pragma mark Package-Private

/*!
 @brief Creates a new TrueType font addressed by Unicode characters.The font
  will always be embedded.
 @param ttFile the location of the font on file. The file must end in '.ttf'.  The modifiers after the name are ignored.
 @param enc the encoding to be applied to this font
 @param emb true if the font is to be embedded in the PDF
 @param ttfAfm the font as a  <CODE> byte </CODE>  array
 @param forceRead Force read
 @throw DocumentExceptionthe font is invalid
 @throw IOExceptionthe font file could not be read
 */
- (instancetype)initPackagePrivateWithNSString:(NSString *)ttFile
                                  withNSString:(NSString *)enc
                                   withBoolean:(jboolean)emb
                                 withByteArray:(IOSByteArray *)ttfAfm
                                   withBoolean:(jboolean)forceRead;

- (IOSByteArray *)convertToBytesWithInt:(jint)char1;

/*!
 @brief A forbidden operation.Will throw a null pointer exception.
 @param text the text
 @return always <CODE>null</CODE>
 */
- (IOSByteArray *)convertToBytesWithNSString:(NSString *)text;

/*!
 @brief Outputs to the writer the font dictionaries and streams.
 @param writer the writer for this document
 @param ref the font indirect reference
 @param params several parameters that depend on the font type
 @throw IOExceptionon error
 @throw DocumentExceptionerror in generating the object
 */
- (void)writeFontWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
      withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref
                              withNSObjectArray:(IOSObjectArray *)params;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivate NS_UNAVAILABLE;

- (instancetype)initPackagePrivateWithNSString:(NSString *)arg0
                                  withNSString:(NSString *)arg1
                                   withBoolean:(jboolean)arg2
                                 withByteArray:(IOSByteArray *)arg3
                                   withBoolean:(jboolean)arg4
                                   withBoolean:(jboolean)arg5 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfTrueTypeFontUnicode)

FOUNDATION_EXPORT void ComAowagieTextPdfTrueTypeFontUnicode_initPackagePrivateWithNSString_withNSString_withBoolean_withByteArray_withBoolean_(ComAowagieTextPdfTrueTypeFontUnicode *self, NSString *ttFile, NSString *enc, jboolean emb, IOSByteArray *ttfAfm, jboolean forceRead);

FOUNDATION_EXPORT ComAowagieTextPdfTrueTypeFontUnicode *new_ComAowagieTextPdfTrueTypeFontUnicode_initPackagePrivateWithNSString_withNSString_withBoolean_withByteArray_withBoolean_(NSString *ttFile, NSString *enc, jboolean emb, IOSByteArray *ttfAfm, jboolean forceRead) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfTrueTypeFontUnicode *create_ComAowagieTextPdfTrueTypeFontUnicode_initPackagePrivateWithNSString_withNSString_withBoolean_withByteArray_withBoolean_(NSString *ttFile, NSString *enc, jboolean emb, IOSByteArray *ttfAfm, jboolean forceRead);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfTrueTypeFontUnicode)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfTrueTypeFontUnicode")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/BaseField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfBaseField")
#ifdef RESTRICT_ComAowagieTextPdfBaseField
#define INCLUDE_ALL_ComAowagieTextPdfBaseField 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfBaseField 1
#endif
#undef RESTRICT_ComAowagieTextPdfBaseField

#if !defined (ComAowagieTextPdfBaseField_) && (INCLUDE_ALL_ComAowagieTextPdfBaseField || defined(INCLUDE_ComAowagieTextPdfBaseField))
#define ComAowagieTextPdfBaseField_

@class ComAowagieTextPdfBaseFont;
@class ComAowagieTextPdfPdfAppearance;
@class ComAowagieTextPdfPdfWriter;
@class ComAowagieTextRectangle;
@class HarmonyJavaAwtColor;

/*!
 @brief Common field variables.
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfBaseField : NSObject {
 @public
  jfloat borderWidth_;
  jint borderStyle_;
  HarmonyJavaAwtColor *borderColor_;
  HarmonyJavaAwtColor *backgroundColor_;
  HarmonyJavaAwtColor *textColor_;
  jfloat fontSize_;
  jint alignment_;
  ComAowagieTextPdfPdfWriter *writer_;
  NSString *text_;
  ComAowagieTextRectangle *box_;
  /*!
   @brief Holds value of property rotation.
   */
  jint rotation_;
  /*!
   @brief Holds value of property visibility.
   */
  jint visibility_;
  /*!
   @brief Holds value of property fieldName.
   */
  NSString *fieldName_;
  /*!
   @brief Holds value of property options.
   */
  jint options_;
  /*!
   @brief Holds value of property maxCharacterLength.
   */
  jint maxCharacterLength_;
}

#pragma mark Public

/*!
 @brief Creates a new <CODE>TextField</CODE>.
 @param writer the document  <CODE> PdfWriter </CODE>
 @param box the field location and dimensions
 @param fieldName the field name. If  <CODE> null </CODE>  only the widget keys
   will be included in the field allowing it to be used as a kid field.
 */
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                     withComAowagieTextRectangle:(ComAowagieTextRectangle *)box
                                                    withNSString:(NSString *)fieldName;

/*!
 @brief Gets the text horizontal alignment.
 @return the text horizontal alignment
 */
- (jint)getAlignment;

/*!
 @brief Gets the background color.
 @return the background color
 */
- (HarmonyJavaAwtColor *)getBackgroundColor;

/*!
 @brief Gets the border color.
 @return the border color
 */
- (HarmonyJavaAwtColor *)getBorderColor;

/*!
 @brief Gets the border style.
 @return the border style
 */
- (jint)getBorderStyle;

/*!
 @brief Gets the border width in points.
 @return the border width in points
 */
- (jfloat)getBorderWidth;

/*!
 @brief Gets the field dimension and position.
 @return the field dimension and position
 */
- (ComAowagieTextRectangle *)getBox;

/*!
 @brief Gets the field name.
 @return the field name
 */
- (NSString *)getFieldName;

/*!
 @brief Gets the text font.
 @return the text font
 */
- (ComAowagieTextPdfBaseFont *)getFont;

/*!
 @brief Gets the font size.
 @return the font size
 */
- (jfloat)getFontSize;

/*!
 @brief Gets the maximum length of the field's text, in characters.
 @return the maximum length of the field's text, in characters.
 */
- (jint)getMaxCharacterLength;

/*!
 @brief Gets the option flags.
 @return the option flags
 */
- (jint)getOptions;

/*!
 @brief Gets the field rotation.
 @return the field rotation
 */
- (jint)getRotation;

/*!
 @brief Gets the text.
 @return the text
 */
- (NSString *)getText;

/*!
 @brief Gets the text color.
 @return the text color
 */
- (HarmonyJavaAwtColor *)getTextColor;

/*!
 @brief Gets the field visibility flag.
 @return the field visibility flag
 */
- (jint)getVisibility;

/*!
 @brief Getter for property writer.
 @return Value of property writer.
 */
- (ComAowagieTextPdfPdfWriter *)getWriter;

/*!
 @brief Sets the text horizontal alignment.It can be <CODE>Element.ALIGN_LEFT</CODE>,
  <CODE>Element.ALIGN_CENTER</CODE> and <CODE>Element.ALIGN_RIGHT</CODE>.
 @param alignment the text horizontal alignment
 */
- (void)setAlignmentWithInt:(jint)alignment;

/*!
 @brief Sets the background color.Set to <CODE>null</CODE> for
  transparent background.
 @param backgroundColor the background color
 */
- (void)setBackgroundColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)backgroundColor;

/*!
 @brief Sets the border color.Set to <CODE>null</CODE> to remove
  the border.
 @param borderColor the border color
 */
- (void)setBorderColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColor;

/*!
 @brief Sets the border style.The styles are found in <CODE>PdfBorderDictionary</CODE>
  and can be <CODE>STYLE_SOLID</CODE>, <CODE>STYLE_DASHED</CODE>,
  <CODE>STYLE_BEVELED</CODE>, <CODE>STYLE_INSET</CODE> and 
 <CODE>STYLE_UNDERLINE</CODE>.
 @param borderStyle the border style
 */
- (void)setBorderStyleWithInt:(jint)borderStyle;

/*!
 @brief Sets the border width in points.To eliminate the border
  set the border color to <CODE>null</CODE>.
 @param borderWidth the border width in points
 */
- (void)setBorderWidthWithFloat:(jfloat)borderWidth;

/*!
 @brief Sets the field dimension and position.
 @param box the field dimension and position
 */
- (void)setBoxWithComAowagieTextRectangle:(ComAowagieTextRectangle *)box;

/*!
 @brief Sets the field name.
 @param fieldName the field name. If  <CODE> null </CODE>  only the widget keys
   will be included in the field allowing it to be used as a kid field.
 */
- (void)setFieldNameWithNSString:(NSString *)fieldName;

/*!
 @brief Sets the text font.If <CODE>null</CODE> then Helvetica
  will be used.
 @param font the text font
 */
- (void)setFontWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)font;

/*!
 @brief Sets the font size.If 0 then auto-sizing will be used but
  only for text fields.
 @param fontSize the font size
 */
- (void)setFontSizeWithFloat:(jfloat)fontSize;

/*!
 @brief Sets the maximum length of the field's text, in characters.
 It is only meaningful for text fields.
 @param maxCharacterLength the maximum length of the field's text, in characters
 */
- (void)setMaxCharacterLengthWithInt:(jint)maxCharacterLength;

/*!
 @brief Sets the option flags.The option flags can be a combination by oring of 
 <CODE>READ_ONLY</CODE>, <CODE>REQUIRED</CODE>,
  <CODE>MULTILINE</CODE>, <CODE>DO_NOT_SCROLL</CODE>,
  <CODE>PASSWORD</CODE>, <CODE>FILE_SELECTION</CODE>,
  <CODE>DO_NOT_SPELL_CHECK</CODE> and <CODE>EDIT</CODE>.
 @param options the option flags
 */
- (void)setOptionsWithInt:(jint)options;

/*!
 @brief Sets the field rotation.This value should be the same as
  the page rotation where the field will be shown.
 @param rotation the field rotation
 */
- (void)setRotationWithInt:(jint)rotation;

/*!
 @brief Convenience method to set the field rotation the same as the
  page rotation.
 @param page the page
 */
- (void)setRotationFromPageWithComAowagieTextRectangle:(ComAowagieTextRectangle *)page;

/*!
 @brief Sets the text for text fields.
 @param text the text
 */
- (void)setTextWithNSString:(NSString *)text;

/*!
 @brief Sets the text color.If <CODE>null</CODE> the color used
  will be black.
 @param textColor the text color
 */
- (void)setTextColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)textColor;

/*!
 @brief Sets the field visibility flag.This flags can be one of 
 <CODE>VISIBLE</CODE>, <CODE>HIDDEN</CODE>, <CODE>VISIBLE_BUT_DOES_NOT_PRINT</CODE>
  and <CODE>HIDDEN_BUT_PRINTABLE</CODE>.
 @param visibility field visibility flag
 */
- (void)setVisibilityWithInt:(jint)visibility;

/*!
 @brief Setter for property writer.
 @param writer New value of property writer.
 */
- (void)setWriterWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer;

#pragma mark Protected

- (ComAowagieTextPdfPdfAppearance *)getBorderAppearance;

- (ComAowagieTextPdfBaseFont *)getRealFont;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfBaseField)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, borderColor_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, backgroundColor_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, textColor_, HarmonyJavaAwtColor *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, writer_, ComAowagieTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, text_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, box_, ComAowagieTextRectangle *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfBaseField, fieldName_, NSString *)

/*!
 @brief The field is visible.
 */
inline jint ComAowagieTextPdfBaseField_get_VISIBLE(void);
#define ComAowagieTextPdfBaseField_VISIBLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, VISIBLE, jint)

/*!
 @brief The field is hidden.
 */
inline jint ComAowagieTextPdfBaseField_get_HIDDEN(void);
#define ComAowagieTextPdfBaseField_HIDDEN 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, HIDDEN, jint)

/*!
 @brief The field is visible but does not print.
 */
inline jint ComAowagieTextPdfBaseField_get_VISIBLE_BUT_DOES_NOT_PRINT(void);
#define ComAowagieTextPdfBaseField_VISIBLE_BUT_DOES_NOT_PRINT 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, VISIBLE_BUT_DOES_NOT_PRINT, jint)

/*!
 @brief The field is hidden but is printable.
 */
inline jint ComAowagieTextPdfBaseField_get_HIDDEN_BUT_PRINTABLE(void);
#define ComAowagieTextPdfBaseField_HIDDEN_BUT_PRINTABLE 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, HIDDEN_BUT_PRINTABLE, jint)

/*!
 @brief The user may not change the value of the field.
 */
inline jint ComAowagieTextPdfBaseField_get_READ_ONLY(void);
#define ComAowagieTextPdfBaseField_READ_ONLY 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, READ_ONLY, jint)

/*!
 @brief The field must have a value at the time it is exported by a submit-form
  action.
 */
inline jint ComAowagieTextPdfBaseField_get_REQUIRED(void);
#define ComAowagieTextPdfBaseField_REQUIRED 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, REQUIRED, jint)

/*!
 @brief The field may contain multiple lines of text.
 This flag is only meaningful with text fields.
 */
inline jint ComAowagieTextPdfBaseField_get_MULTILINE(void);
#define ComAowagieTextPdfBaseField_MULTILINE 4096
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, MULTILINE, jint)

/*!
 @brief The field will not scroll (horizontally for single-line
  fields, vertically for multiple-line fields) to accommodate more text
  than will fit within its annotation rectangle.Once the field is full, no
  further text will be accepted.
 */
inline jint ComAowagieTextPdfBaseField_get_DO_NOT_SCROLL(void);
#define ComAowagieTextPdfBaseField_DO_NOT_SCROLL 8388608
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, DO_NOT_SCROLL, jint)

/*!
 @brief The field is intended for entering a secure password that should
  not be echoed visibly to the screen.
 */
inline jint ComAowagieTextPdfBaseField_get_PASSWORD(void);
#define ComAowagieTextPdfBaseField_PASSWORD 8192
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, PASSWORD, jint)

/*!
 @brief The text entered in the field represents the pathname of
  a file whose contents are to be submitted as the value of the field.
 */
inline jint ComAowagieTextPdfBaseField_get_FILE_SELECTION(void);
#define ComAowagieTextPdfBaseField_FILE_SELECTION 1048576
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, FILE_SELECTION, jint)

/*!
 @brief The text entered in the field will not be spell-checked.
 This flag is meaningful only in text fields and in combo
  fields with the <CODE>EDIT</CODE> flag set.
 */
inline jint ComAowagieTextPdfBaseField_get_DO_NOT_SPELL_CHECK(void);
#define ComAowagieTextPdfBaseField_DO_NOT_SPELL_CHECK 4194304
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, DO_NOT_SPELL_CHECK, jint)

/*!
 @brief If set the combo box includes an editable text box as well as a drop list; if
  clear, it includes only a drop list.
 This flag is only meaningful with combo fields.
 */
inline jint ComAowagieTextPdfBaseField_get_EDIT(void);
#define ComAowagieTextPdfBaseField_EDIT 262144
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, EDIT, jint)

/*!
 @brief combo box flag.
 */
inline jint ComAowagieTextPdfBaseField_get_COMB(void);
#define ComAowagieTextPdfBaseField_COMB 16777216
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfBaseField, COMB, jint)

FOUNDATION_EXPORT void ComAowagieTextPdfBaseField_initPackagePrivateWithComAowagieTextPdfPdfWriter_withComAowagieTextRectangle_withNSString_(ComAowagieTextPdfBaseField *self, ComAowagieTextPdfPdfWriter *writer, ComAowagieTextRectangle *box, NSString *fieldName);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfBaseField)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfBaseField")

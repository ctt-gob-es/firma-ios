//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/TIFFDirectory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfCodecTIFFDirectory")
#ifdef RESTRICT_ComAowagieTextPdfCodecTIFFDirectory
#define INCLUDE_ALL_ComAowagieTextPdfCodecTIFFDirectory 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfCodecTIFFDirectory 1
#endif
#undef RESTRICT_ComAowagieTextPdfCodecTIFFDirectory

#if !defined (ComAowagieTextPdfCodecTIFFDirectory_) && (INCLUDE_ALL_ComAowagieTextPdfCodecTIFFDirectory || defined(INCLUDE_ComAowagieTextPdfCodecTIFFDirectory))
#define ComAowagieTextPdfCodecTIFFDirectory_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComAowagieTextPdfCodecTIFFField;
@class ComAowagieTextPdfRandomAccessFileOrArray;
@class IOSIntArray;
@class IOSObjectArray;

/*!
 @brief A class representing an Image File Directory (IFD) from a TIFF 6.0
  stream.The TIFF file format is described in more detail in the
  comments for the TIFFDescriptor class.
 <p> A TIFF IFD consists of a set of TIFFField tags.  Methods are
  provided to query the set of tags and to obtain the raw field
  array.  In addition, convenience methods are provided for acquiring
  the values of tags that contain a single value that fits into a
  byte, int, long, float, or double. 
 <p> Every TIFF file is made up of one or more public IFDs that are
  joined in a linked list, rooted in the file header.  A file may
  also contain so-called private IFDs that are referenced from
  tag data and do not appear in the main list. 
 <p><b> This class is not a committed part of the JAI API.  It may
  be removed or changed in future releases of JAI.</b>
 - seealso: TIFFField
 */
@interface ComAowagieTextPdfCodecTIFFDirectory : NSObject < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Returns an array of TIFFFields containing all the fields
  in this directory.
 @return Fields
 */
- (IOSObjectArray *)getFields;

/*!
 @brief Returns the offset of the IFD corresponding to this 
 <code>TIFFDirectory</code>.
 @return Offset
 */
- (jlong)getIFDOffset;

/*!
 @brief Returns the offset of the next IFD after the IFD corresponding to this 
 <code>TIFFDirectory</code>.
 @return Offset
 */
- (jlong)getNextIFDOffset;

/*!
 @brief Returns the number of directory entries.
 @return Num entries
 */
- (jint)getNumEntries;

/*!
 @brief Returns an ordered array of ints indicating the tag
  values.
 @return Tags
 */
- (IOSIntArray *)getTags;

/*!
 @brief Returns a boolean indicating whether the byte order used in the
  the TIFF file is big-endian (i.e.whether the byte order is from
  the most significant to the least significant)
 @return Is it big endian.
 */
- (jboolean)isBigEndian;

#pragma mark Package-Private

/*!
 @brief The default constructor.
 */
- (instancetype)initPackagePrivate;

/*!
 @brief Constructs a TIFFDirectory from a SeekableStream.
 The directory parameter specifies which directory to read from
  the linked list present in the stream; directory 0 is normally
  read but it is possible to store multiple images in a single
  TIFF file by maintaining multiple directories.
 @param stream a SeekableStream to read from.
 @param directory the index of the directory to read.
 @throw IOExceptionon error
 */
- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream
                                                                       withInt:(jint)directory;

/*!
 @brief Returns the value of a given tag as a TIFFField,
  or null if the tag is not present.
 @param tag Tag
 @return Field
 */
- (ComAowagieTextPdfCodecTIFFField *)getFieldWithInt:(jint)tag;

/*!
 @brief Returns the value of index 0 of a given tag as a
  long.The caller is responsible for ensuring that the tag is
  present and has type TIFF_BYTE, TIFF_SBYTE, TIFF_UNDEFINED,
  TIFF_SHORT, TIFF_SSHORT, TIFF_SLONG or TIFF_LONG.
 @param tag Tag
 @return Field
 */
- (jlong)getFieldAsLongWithInt:(jint)tag;

/*!
 @brief Returns true if a tag appears in the directory.
 @param tag Tag
 @return is present
 */
- (jboolean)isTagPresentWithInt:(jint)tag;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfCodecTIFFDirectory)

FOUNDATION_EXPORT void ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivate(ComAowagieTextPdfCodecTIFFDirectory *self);

FOUNDATION_EXPORT ComAowagieTextPdfCodecTIFFDirectory *new_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfCodecTIFFDirectory *create_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivate(void);

FOUNDATION_EXPORT void ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream, jint directory);

FOUNDATION_EXPORT ComAowagieTextPdfCodecTIFFDirectory *new_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jint directory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfCodecTIFFDirectory *create_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jint directory);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfCodecTIFFDirectory)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfCodecTIFFDirectory")

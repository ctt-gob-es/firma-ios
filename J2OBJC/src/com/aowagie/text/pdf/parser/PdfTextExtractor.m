//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/parser/PdfTextExtractor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/pdf/PdfDictionary.h"
#include "com/aowagie/text/pdf/PdfName.h"
#include "com/aowagie/text/pdf/PdfReader.h"
#include "com/aowagie/text/pdf/RandomAccessFileOrArray.h"
#include "com/aowagie/text/pdf/parser/PdfTextExtractor.h"
#include "com/aowagie/text/pdf/parser/SimpleTextExtractingPdfContentStreamProcessor.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/parser/PdfTextExtractor must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfParserPdfTextExtractor () {
 @public
  /*!
   @brief The PdfReader that holds the PDF file.
   */
  ComAowagieTextPdfPdfReader *reader_;
  /*!
   @brief The processor that will extract the text.
   */
  ComAowagieTextPdfParserSimpleTextExtractingPdfContentStreamProcessor *extractionProcessor_;
}

/*!
 @brief Gets the content stream of a page.
 @param pageNum the page number of page you want get the content stream from
 @return a byte array with the content stream of a page
 @throw IOExceptionon error
 */
- (IOSByteArray *)getContentBytesForPageWithInt:(jint)pageNum;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfParserPdfTextExtractor, reader_, ComAowagieTextPdfPdfReader *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfParserPdfTextExtractor, extractionProcessor_, ComAowagieTextPdfParserSimpleTextExtractingPdfContentStreamProcessor *)

__attribute__((unused)) static IOSByteArray *ComAowagieTextPdfParserPdfTextExtractor_getContentBytesForPageWithInt_(ComAowagieTextPdfParserPdfTextExtractor *self, jint pageNum);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/parser/PdfTextExtractor.java"


#line 60
@implementation ComAowagieTextPdfParserPdfTextExtractor


#line 71
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  ComAowagieTextPdfParserPdfTextExtractor_initPackagePrivateWithComAowagieTextPdfPdfReader_(self, reader);
  return self;
}


#line 82
- (IOSByteArray *)getContentBytesForPageWithInt:(jint)pageNum {
  return ComAowagieTextPdfParserPdfTextExtractor_getContentBytesForPageWithInt_(self, pageNum);
}


#line 95
- (NSString *)getTextFromPageWithInt:(jint)page {
  ComAowagieTextPdfPdfDictionary *pageDic = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:page];
  ComAowagieTextPdfPdfDictionary *resourcesDic = [((ComAowagieTextPdfPdfDictionary *) nil_chk(pageDic)) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES)];
  [((ComAowagieTextPdfParserSimpleTextExtractingPdfContentStreamProcessor *) nil_chk(self->extractionProcessor_)) processContentWithByteArray:ComAowagieTextPdfParserPdfTextExtractor_getContentBytesForPageWithInt_(self, page) withComAowagieTextPdfPdfDictionary:resourcesDic];
  return [self->extractionProcessor_ getResultantText];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfPdfReader:);
  methods[1].selector = @selector(getContentBytesForPageWithInt:);
  methods[2].selector = @selector(getTextFromPageWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reader_", "LComAowagieTextPdfPdfReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "extractionProcessor_", "LComAowagieTextPdfParserSimpleTextExtractingPdfContentStreamProcessor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfReader;", "getContentBytesForPage", "I", "LJavaIoIOException;", "getTextFromPage" };
  static const J2ObjcClassInfo _ComAowagieTextPdfParserPdfTextExtractor = { "PdfTextExtractor", "com.aowagie.text.pdf.parser", ptrTable, methods, fields, 7, 0x0, 3, 2, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfParserPdfTextExtractor;
}

@end


#line 71
void ComAowagieTextPdfParserPdfTextExtractor_initPackagePrivateWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfParserPdfTextExtractor *self, ComAowagieTextPdfPdfReader *reader) {
  NSObject_init(self);
  
#line 72
  self->reader_ = reader;
  self->extractionProcessor_ = new_ComAowagieTextPdfParserSimpleTextExtractingPdfContentStreamProcessor_initPackagePrivate();
}


#line 71
ComAowagieTextPdfParserPdfTextExtractor *new_ComAowagieTextPdfParserPdfTextExtractor_initPackagePrivateWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfPdfReader *reader) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfParserPdfTextExtractor, initPackagePrivateWithComAowagieTextPdfPdfReader_, reader)
}


#line 71
ComAowagieTextPdfParserPdfTextExtractor *create_ComAowagieTextPdfParserPdfTextExtractor_initPackagePrivateWithComAowagieTextPdfPdfReader_(ComAowagieTextPdfPdfReader *reader) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfParserPdfTextExtractor, initPackagePrivateWithComAowagieTextPdfPdfReader_, reader)
}


#line 82
IOSByteArray *ComAowagieTextPdfParserPdfTextExtractor_getContentBytesForPageWithInt_(ComAowagieTextPdfParserPdfTextExtractor *self, jint pageNum) {
  ComAowagieTextPdfRandomAccessFileOrArray *f = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getSafeFile];
  IOSByteArray *contentBytes = [self->reader_ getPageContentWithInt:pageNum withComAowagieTextPdfRandomAccessFileOrArray:f];
  [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(f)) close];
  return contentBytes;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfParserPdfTextExtractor)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfPages.java
//

#include "J2ObjC_source.h"
#include "com/aowagie/text/Document.h"
#include "com/aowagie/text/ExceptionConverter.h"
#include "com/aowagie/text/pdf/PdfArray.h"
#include "com/aowagie/text/pdf/PdfDictionary.h"
#include "com/aowagie/text/pdf/PdfIndirectObject.h"
#include "com/aowagie/text/pdf/PdfIndirectReference.h"
#include "com/aowagie/text/pdf/PdfName.h"
#include "com/aowagie/text/pdf/PdfNumber.h"
#include "com/aowagie/text/pdf/PdfPages.h"
#include "com/aowagie/text/pdf/PdfString.h"
#include "com/aowagie/text/pdf/PdfWriter.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/PdfPages must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfPages () {
 @public
  JavaUtilArrayList *pages_;
  JavaUtilArrayList *parents_;
  ComAowagieTextPdfPdfWriter *writer_;
  ComAowagieTextPdfPdfIndirectReference *topParent_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfPages, pages_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfPages, parents_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfPages, writer_, ComAowagieTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfPages, topParent_, ComAowagieTextPdfPdfIndirectReference *)

inline jint ComAowagieTextPdfPdfPages_get_leafSize(void);
#define ComAowagieTextPdfPdfPages_leafSize 10
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfPages, leafSize, jint)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfPages.java"


#line 69
@implementation ComAowagieTextPdfPdfPages


#line 84
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  ComAowagieTextPdfPdfPages_initPackagePrivateWithComAowagieTextPdfPdfWriter_(self, writer);
  return self;
}


#line 88
- (void)addPageWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)page {
  @try {
    if (JreIntMod([((JavaUtilArrayList *) nil_chk(self->pages_)) size], ComAowagieTextPdfPdfPages_leafSize) == 0) {
      [((JavaUtilArrayList *) nil_chk(self->parents_)) addWithId:[((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) getPdfIndirectReference]];
    }
    ComAowagieTextPdfPdfIndirectReference *parent = (ComAowagieTextPdfPdfIndirectReference *) cast_chk([((JavaUtilArrayList *) nil_chk(self->parents_)) getWithInt:[self->parents_ size] - 1], [ComAowagieTextPdfPdfIndirectReference class]);
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(page)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT) withComAowagieTextPdfPdfObject:parent];
    ComAowagieTextPdfPdfIndirectReference *current = [((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) getCurrentPage];
    (void) [self->writer_ addToBodyWithComAowagieTextPdfPdfObject:page withComAowagieTextPdfPdfIndirectReference:current];
    [self->pages_ addWithId:current];
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}

- (ComAowagieTextPdfPdfIndirectReference *)addPageRefWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)pageRef {
  @try {
    if (JreIntMod([((JavaUtilArrayList *) nil_chk(self->pages_)) size], ComAowagieTextPdfPdfPages_leafSize) == 0) {
      [((JavaUtilArrayList *) nil_chk(self->parents_)) addWithId:[((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) getPdfIndirectReference]];
    }
    [self->pages_ addWithId:pageRef];
    return (ComAowagieTextPdfPdfIndirectReference *) cast_chk([((JavaUtilArrayList *) nil_chk(self->parents_)) getWithInt:[self->parents_ size] - 1], [ComAowagieTextPdfPdfIndirectReference class]);
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 118
- (ComAowagieTextPdfPdfIndirectReference *)writePageTree {
  if ([((JavaUtilArrayList *) nil_chk(self->pages_)) isEmpty]) {
    @throw new_JavaIoIOException_initWithNSString_(@"The document has no pages.");
  }
  jint leaf = 1;
  JavaUtilArrayList *tParents = self->parents_;
  JavaUtilArrayList *tPages = self->pages_;
  JavaUtilArrayList *nextParents = new_JavaUtilArrayList_init();
  while (true) {
    leaf *= ComAowagieTextPdfPdfPages_leafSize;
    jint stdCount = ComAowagieTextPdfPdfPages_leafSize;
    jint rightCount = JreIntMod([tPages size], ComAowagieTextPdfPdfPages_leafSize);
    if (rightCount == 0) {
      rightCount = ComAowagieTextPdfPdfPages_leafSize;
    }
    for (jint p = 0; p < [((JavaUtilArrayList *) nil_chk(tParents)) size]; ++p) {
      jint count;
      jint thisLeaf = leaf;
      if (p == [tParents size] - 1) {
        count = rightCount;
        thisLeaf = JreIntMod([self->pages_ size], leaf);
        if (thisLeaf == 0) {
          thisLeaf = leaf;
        }
      }
      else {
        
#line 143
        count = stdCount;
      }
      ComAowagieTextPdfPdfDictionary *top = new_ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(JreLoadStatic(ComAowagieTextPdfPdfName, PAGES));
      [top putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COUNT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(thisLeaf)];
      ComAowagieTextPdfPdfArray *kids = new_ComAowagieTextPdfPdfArray_init();
      JavaUtilArrayList *internal = [kids getArrayList];
      [((JavaUtilArrayList *) nil_chk(internal)) addAllWithJavaUtilCollection:[tPages subListWithInt:p * stdCount withInt:p * stdCount + count]];
      [top putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:kids];
      if ([tParents size] > 1) {
        if (JreIntMod(p, ComAowagieTextPdfPdfPages_leafSize) == 0) {
          [nextParents addWithId:[((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) getPdfIndirectReference]];
        }
        [top putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT) withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfIndirectReference *) cast_chk([nextParents getWithInt:JreIntDiv(p, ComAowagieTextPdfPdfPages_leafSize)], [ComAowagieTextPdfPdfIndirectReference class])];
      }
      else {
        [top putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ITXT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(ComAowagieTextDocument_getRelease())];
      }
      (void) [((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) addToBodyWithComAowagieTextPdfPdfObject:top withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *) cast_chk([tParents getWithInt:p], [ComAowagieTextPdfPdfIndirectReference class])];
    }
    if ([tParents size] == 1) {
      self->topParent_ = (ComAowagieTextPdfPdfIndirectReference *) cast_chk([tParents getWithInt:0], [ComAowagieTextPdfPdfIndirectReference class]);
      return self->topParent_;
    }
    tPages = tParents;
    tParents = nextParents;
    nextParents = new_JavaUtilArrayList_init();
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x0, -1, -1, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfPdfWriter:);
  methods[1].selector = @selector(addPageWithComAowagieTextPdfPdfDictionary:);
  methods[2].selector = @selector(addPageRefWithComAowagieTextPdfPdfIndirectReference:);
  methods[3].selector = @selector(writePageTree);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pages_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parents_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "leafSize", "I", .constantValue.asInt = ComAowagieTextPdfPdfPages_leafSize, 0x12, 6, -1, -1, -1 },
    { "writer_", "LComAowagieTextPdfPdfWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "topParent_", "LComAowagieTextPdfPdfIndirectReference;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfWriter;", "addPage", "LComAowagieTextPdfPdfDictionary;", "addPageRef", "LComAowagieTextPdfPdfIndirectReference;", "LJavaIoIOException;", "leafSize" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfPages = { "PdfPages", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 4, 5, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfPages;
}

@end


#line 84
void ComAowagieTextPdfPdfPages_initPackagePrivateWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfPages *self, ComAowagieTextPdfPdfWriter *writer) {
  NSObject_init(self);
  self->pages_ = new_JavaUtilArrayList_init();
  self->parents_ = new_JavaUtilArrayList_init();
  
#line 85
  self->writer_ = writer;
}


#line 84
ComAowagieTextPdfPdfPages *new_ComAowagieTextPdfPdfPages_initPackagePrivateWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfPages, initPackagePrivateWithComAowagieTextPdfPdfWriter_, writer)
}


#line 84
ComAowagieTextPdfPdfPages *create_ComAowagieTextPdfPdfPages_initPackagePrivateWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfPages, initPackagePrivateWithComAowagieTextPdfPdfWriter_, writer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfPages)

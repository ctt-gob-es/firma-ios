//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfPRow.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfPdfPRow")
#ifdef RESTRICT_ComAowagieTextPdfPdfPRow
#define INCLUDE_ALL_ComAowagieTextPdfPdfPRow 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfPdfPRow 1
#endif
#undef RESTRICT_ComAowagieTextPdfPdfPRow

#if !defined (ComAowagieTextPdfPdfPRow_) && (INCLUDE_ALL_ComAowagieTextPdfPdfPRow || defined(INCLUDE_ComAowagieTextPdfPdfPRow))
#define ComAowagieTextPdfPdfPRow_

@class ComAowagieTextPdfColumnText;
@class ComAowagieTextPdfPdfPTable;
@class IOSFloatArray;
@class IOSObjectArray;

/*!
 @brief A row in a PdfPTable.
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfPdfPRow : NSObject

#pragma mark Public

/*!
 @brief Constructs a new PdfPRow with the cells in the array that was passed
  as a parameter.
 @param cells Cells
 */
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfPCellArray:(IOSObjectArray *)cells;

/*!
 @brief Makes a copy of an existing row.
 @param row Row
 */
- (instancetype)initPackagePrivateWithComAowagieTextPdfPdfPRow:(ComAowagieTextPdfPdfPRow *)row;

/*!
 @brief Returns the array of cells in the row.
 Please be extremely careful with this method.
  Use the cells as read only objects.
 @return an array of cells
 @since 2.1.1
 */
- (IOSObjectArray *)getCells;

/*!
 @brief Gets the maximum height of the row (i.e.of the 'highest' cell).
 @return the maximum height of the row
 */
- (jfloat)getMaxHeights;

/*!
 @brief Initializes the extra heights array.
 @since 2.1.6
 */
- (void)initExtraHeights OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Checks if the dimensions of the columns were calculated.
 @return true if the dimensions of the columns were calculated
 */
- (jboolean)isCalculated;

/*!
 @param ct Column text
 @param left left
 @param bottom Bottom
 @param right Right
 @param top Top
 @return Column
 @since 3.0.0 protected is now public static
 */
+ (jfloat)setColumnWithComAowagieTextPdfColumnText:(ComAowagieTextPdfColumnText *)ct
                                         withFloat:(jfloat)left
                                         withFloat:(jfloat)bottom
                                         withFloat:(jfloat)right
                                         withFloat:(jfloat)top;

/*!
 @brief Sets an extra height for a cell.
 @param cell the index of the cell that needs an extra height
 @param height the extra height
 @since 2.1.6
 */
- (void)setExtraHeightWithInt:(jint)cell
                    withFloat:(jfloat)height;

/*!
 @brief Changes the maximum height of the row (to make it higher).
 (added by Jin-Hsia Yang)
 @param maxHeight the new maximum height
 */
- (void)setMaxHeightsWithFloat:(jfloat)maxHeight;

/*!
 @brief Sets the widths of the columns in the row.
 @param widths Widths
 @return true if everything went right
 */
- (jboolean)setWidthsWithFloatArray:(IOSFloatArray *)widths;

/*!
 @brief Splits a row to newHeight.
 The returned row is the remainder. It will return null if the newHeight
  was so small that only an empty row would result.
 @param table Table
 @param rowIndex Row index
 @param new_height the new height
 @return the remainder row or null if the newHeight was so small that only
  an empty row would result
 */
- (ComAowagieTextPdfPdfPRow *)splitRowWithComAowagieTextPdfPdfPTable:(ComAowagieTextPdfPdfPTable *)table
                                                             withInt:(jint)rowIndex
                                                           withFloat:(jfloat)new_height;

/*!
 @brief Writes a number of cells (not necessarily all cells).
 @param colStart The first column to be written.  Remember that the column index starts with 0.
 @param colEnd The last column to be written.  Remember that the column index starts with 0.
   If -1, all the columns to the end are written.
 @param xPos The x-coordinate where the table starts on the canvas
 @param yPos The y-coordinate where the table starts on the canvas
 @param canvases Canvases
 */
- (void)writeCellsWithInt:(jint)colStart
                  withInt:(jint)colEnd
                withFloat:(jfloat)xPos
                withFloat:(jfloat)yPos
withComAowagieTextPdfPdfContentByteArray:(IOSObjectArray *)canvases;

#pragma mark Package-Private

- (IOSFloatArray *)getEventWidthWithFloat:(jfloat)xPos;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfPRow)

/*!
 @brief the bottom limit (bottom right y)
 */
inline jfloat ComAowagieTextPdfPdfPRow_get_BOTTOM_LIMIT(void);
#define ComAowagieTextPdfPdfPRow_BOTTOM_LIMIT -1.07374182E9f
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfPRow, BOTTOM_LIMIT, jfloat)

/*!
 @brief the right limit
 @since 2.1.5
 */
inline jfloat ComAowagieTextPdfPdfPRow_get_RIGHT_LIMIT(void);
#define ComAowagieTextPdfPdfPRow_RIGHT_LIMIT 20000.0f
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfPRow, RIGHT_LIMIT, jfloat)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfPRow_initPackagePrivateWithComAowagieTextPdfPdfPCellArray_(ComAowagieTextPdfPdfPRow *self, IOSObjectArray *cells);

FOUNDATION_EXPORT ComAowagieTextPdfPdfPRow *new_ComAowagieTextPdfPdfPRow_initPackagePrivateWithComAowagieTextPdfPdfPCellArray_(IOSObjectArray *cells) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfPRow *create_ComAowagieTextPdfPdfPRow_initPackagePrivateWithComAowagieTextPdfPdfPCellArray_(IOSObjectArray *cells);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfPRow_initPackagePrivateWithComAowagieTextPdfPdfPRow_(ComAowagieTextPdfPdfPRow *self, ComAowagieTextPdfPdfPRow *row);

FOUNDATION_EXPORT ComAowagieTextPdfPdfPRow *new_ComAowagieTextPdfPdfPRow_initPackagePrivateWithComAowagieTextPdfPdfPRow_(ComAowagieTextPdfPdfPRow *row) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfPRow *create_ComAowagieTextPdfPdfPRow_initPackagePrivateWithComAowagieTextPdfPdfPRow_(ComAowagieTextPdfPdfPRow *row);

FOUNDATION_EXPORT jfloat ComAowagieTextPdfPdfPRow_setColumnWithComAowagieTextPdfColumnText_withFloat_withFloat_withFloat_withFloat_(ComAowagieTextPdfColumnText *ct, jfloat left, jfloat bottom, jfloat right, jfloat top);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfPRow)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfPdfPRow")

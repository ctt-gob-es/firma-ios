//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/EnumerateTTC.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/DocumentException.h"
#include "com/aowagie/text/pdf/EnumerateTTC.h"
#include "com/aowagie/text/pdf/RandomAccessFileOrArray.h"
#include "com/aowagie/text/pdf/TrueTypeFont.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/EnumerateTTC must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfEnumerateTTC () {
 @public
  IOSObjectArray *names_;
}

- (void)findNames;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfEnumerateTTC, names_, IOSObjectArray *)

__attribute__((unused)) static void ComAowagieTextPdfEnumerateTTC_findNames(ComAowagieTextPdfEnumerateTTC *self);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/EnumerateTTC.java"


#line 60
@implementation ComAowagieTextPdfEnumerateTTC


#line 64
- (instancetype)initPackagePrivateWithNSString:(NSString *)ttcFile {
  ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithNSString_(self, ttcFile);
  return self;
}


#line 70
- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)ttcArray {
  ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithByteArray_(self, ttcArray);
  return self;
}


#line 76
- (void)findNames {
  ComAowagieTextPdfEnumerateTTC_findNames(self);
}


#line 117
- (IOSObjectArray *)getNames {
  return self->names_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithNSString:);
  methods[1].selector = @selector(initPackagePrivateWithByteArray:);
  methods[2].selector = @selector(findNames);
  methods[3].selector = @selector(getNames);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "names_", "[LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LComAowagieTextDocumentException;LJavaIoIOException;", "[B" };
  static const J2ObjcClassInfo _ComAowagieTextPdfEnumerateTTC = { "EnumerateTTC", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfEnumerateTTC;
}

@end


#line 64
void ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithNSString_(ComAowagieTextPdfEnumerateTTC *self, NSString *ttcFile) {
  ComAowagieTextPdfTrueTypeFont_initPackagePrivate(self);
  
#line 65
  self->fileName_ = ttcFile;
  self->rf_ = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithNSString_(ttcFile);
  ComAowagieTextPdfEnumerateTTC_findNames(self);
}


#line 64
ComAowagieTextPdfEnumerateTTC *new_ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithNSString_(NSString *ttcFile) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfEnumerateTTC, initPackagePrivateWithNSString_, ttcFile)
}


#line 64
ComAowagieTextPdfEnumerateTTC *create_ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithNSString_(NSString *ttcFile) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfEnumerateTTC, initPackagePrivateWithNSString_, ttcFile)
}


#line 70
void ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithByteArray_(ComAowagieTextPdfEnumerateTTC *self, IOSByteArray *ttcArray) {
  ComAowagieTextPdfTrueTypeFont_initPackagePrivate(self);
  
#line 71
  self->fileName_ = @"Byte array TTC";
  self->rf_ = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithByteArray_(ttcArray);
  ComAowagieTextPdfEnumerateTTC_findNames(self);
}


#line 70
ComAowagieTextPdfEnumerateTTC *new_ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithByteArray_(IOSByteArray *ttcArray) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfEnumerateTTC, initPackagePrivateWithByteArray_, ttcArray)
}


#line 70
ComAowagieTextPdfEnumerateTTC *create_ComAowagieTextPdfEnumerateTTC_initPackagePrivateWithByteArray_(IOSByteArray *ttcArray) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfEnumerateTTC, initPackagePrivateWithByteArray_, ttcArray)
}


#line 76
void ComAowagieTextPdfEnumerateTTC_findNames(ComAowagieTextPdfEnumerateTTC *self) {
  self->tables_ = new_JavaUtilLinkedHashMap_init();
  
#line 79
  @try {
    NSString *mainTag = [self readStandardStringWithInt:4];
    if (![((NSString *) nil_chk(mainTag)) isEqual:@"ttcf"]) {
      @throw new_ComAowagieTextDocumentException_initWithNSString_(JreStrcat("$$", self->fileName_, @" is not a valid TTC file."));
    }
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) skipBytesWithInt:4];
    jint dirCount = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) readInt];
    self->names_ = [IOSObjectArray newArrayWithLength:dirCount type:NSString_class_()];
    jint dirPos = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) getFilePointer];
    for (jint dirIdx = 0; dirIdx < dirCount; ++dirIdx) {
      [((JavaUtilHashMap *) nil_chk(self->tables_)) clear];
      [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) seekWithInt:dirPos];
      [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) skipBytesWithInt:dirIdx * 4];
      self->directoryOffset_ = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) readInt];
      [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) seekWithInt:self->directoryOffset_];
      if ([((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) readInt] != (jint) 0x00010000) {
        @throw new_ComAowagieTextDocumentException_initWithNSString_(JreStrcat("$$", self->fileName_, @" is not a valid TTF file."));
      }
      jint num_tables = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) readUnsignedShort];
      [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) skipBytesWithInt:6];
      for (jint k = 0; k < num_tables; ++k) {
        NSString *tag = [self readStandardStringWithInt:4];
        [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) skipBytesWithInt:4];
        IOSIntArray *table_location = [IOSIntArray newArrayWithLength:2];
        *IOSIntArray_GetRef(table_location, 0) = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) readInt];
        *IOSIntArray_GetRef(table_location, 1) = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->rf_)) readInt];
        (void) [((JavaUtilHashMap *) nil_chk(self->tables_)) putWithId:tag withId:table_location];
      }
      (void) IOSObjectArray_Set(nil_chk(self->names_), dirIdx, [self getBaseFont]);
    }
  }
  @finally {
    if (self->rf_ != nil) {
      [self->rf_ close];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfEnumerateTTC)

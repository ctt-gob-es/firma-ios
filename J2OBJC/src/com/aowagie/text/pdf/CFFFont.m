//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/ExceptionConverter.h"
#include "com/aowagie/text/pdf/CFFFont.h"
#include "com/aowagie/text/pdf/RandomAccessFileOrArray.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/CFFFont must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCFFFont () {
 @public
  jint offSize_;
  jint nameIndexOffset_;
  jint topdictIndexOffset_;
  IOSIntArray *nameOffsets_;
}

- (NSString *)getStringWithChar:(jchar)sid;

- (jint)getOffsetWithInt:(jint)offSize;

- (jshort)getShort;

- (jint)getInt;

- (void)ReadEncodingWithInt:(jint)nextIndexOffset;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont, nameOffsets_, IOSIntArray *)

inline IOSObjectArray *ComAowagieTextPdfCFFFont_get_operatorNames(void);
static IOSObjectArray *ComAowagieTextPdfCFFFont_operatorNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCFFFont, operatorNames, IOSObjectArray *)

__attribute__((unused)) static NSString *ComAowagieTextPdfCFFFont_getStringWithChar_(ComAowagieTextPdfCFFFont *self, jchar sid);

__attribute__((unused)) static jint ComAowagieTextPdfCFFFont_getOffsetWithInt_(ComAowagieTextPdfCFFFont *self, jint offSize);

__attribute__((unused)) static jshort ComAowagieTextPdfCFFFont_getShort(ComAowagieTextPdfCFFFont *self);

__attribute__((unused)) static jint ComAowagieTextPdfCFFFont_getInt(ComAowagieTextPdfCFFFont *self);

__attribute__((unused)) static void ComAowagieTextPdfCFFFont_ReadEncodingWithInt_(ComAowagieTextPdfCFFFont *self, jint nextIndexOffset);

__attribute__((unused)) static void ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(ComAowagieTextPdfCFFFont_Item *self, IOSIntArray *currentOffset);

@interface ComAowagieTextPdfCFFFont_OffsetItem ()

/*!
 @brief set the value of an offset item that was initially unknown.
 It will be fixed up latex by a call to xref on some marker.
 @param offset Offset.
 */
- (void)setWithInt:(jint)offset;

@end

__attribute__((unused)) static void ComAowagieTextPdfCFFFont_OffsetItem_setWithInt_(ComAowagieTextPdfCFFFont_OffsetItem *self, jint offset);

@interface ComAowagieTextPdfCFFFont_RangeItem () {
 @public
  jint offset_;
  jint length_;
  ComAowagieTextPdfRandomAccessFileOrArray *buf_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont_RangeItem, buf_, ComAowagieTextPdfRandomAccessFileOrArray *)

@interface ComAowagieTextPdfCFFFont_IndexOffsetItem () {
 @public
  jint size_;
}

@end

@interface ComAowagieTextPdfCFFFont_IndexMarkerItem () {
 @public
  ComAowagieTextPdfCFFFont_OffsetItem *offItem_;
  ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont_IndexMarkerItem, offItem_, ComAowagieTextPdfCFFFont_OffsetItem *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont_IndexMarkerItem, indexBase_, ComAowagieTextPdfCFFFont_IndexBaseItem *)

@interface ComAowagieTextPdfCFFFont_SubrMarkerItem () {
 @public
  ComAowagieTextPdfCFFFont_OffsetItem *offItem_;
  ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont_SubrMarkerItem, offItem_, ComAowagieTextPdfCFFFont_OffsetItem *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont_SubrMarkerItem, indexBase_, ComAowagieTextPdfCFFFont_IndexBaseItem *)

@interface ComAowagieTextPdfCFFFont_DictOffsetItem () {
 @public
  jint size_;
}

@end

@interface ComAowagieTextPdfCFFFont_UInt24Item () {
 @public
  jint value_;
}

@end

@interface ComAowagieTextPdfCFFFont_UInt32Item () {
 @public
  jint value_;
}

@end

@interface ComAowagieTextPdfCFFFont_UInt16Item () {
 @public
  jchar value_;
}

@end

@interface ComAowagieTextPdfCFFFont_UInt8Item () {
 @public
  jchar value_;
}

@end

@interface ComAowagieTextPdfCFFFont_StringItem () {
 @public
  NSString *s_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont_StringItem, s_, NSString *)

@interface ComAowagieTextPdfCFFFont_DictNumberItem () {
 @public
  jint value_;
}

@end

inline jint ComAowagieTextPdfCFFFont_DictNumberItem_get_size(void);
#define ComAowagieTextPdfCFFFont_DictNumberItem_size 5
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCFFFont_DictNumberItem, size, jint)

@interface ComAowagieTextPdfCFFFont_MarkerItem () {
 @public
  ComAowagieTextPdfCFFFont_OffsetItem *p_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCFFFont_MarkerItem, p_, ComAowagieTextPdfCFFFont_OffsetItem *)

@interface ComAowagieTextPdfCFFFont_Font () {
 @public
  jint encodingOffset_;
}

@end

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfCFFFont)

IOSObjectArray *ComAowagieTextPdfCFFFont_standardStrings;


#line 73
@implementation ComAowagieTextPdfCFFFont


#line 169
- (NSString *)getStringWithChar:(jchar)sid {
  return ComAowagieTextPdfCFFFont_getStringWithChar_(self, sid);
}


#line 188
- (jchar)getCard8 {
  @try {
    jbyte i = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->buf_)) readByte];
    return (jchar) (i & (jint) 0xff);
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}

- (jchar)getCard16 {
  @try {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->buf_)) readChar];
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}

- (jint)getOffsetWithInt:(jint)offSize {
  return ComAowagieTextPdfCFFFont_getOffsetWithInt_(self, offSize);
}


#line 216
- (void)seekWithInt:(jint)offset {
  @try {
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->buf_)) seekWithInt:offset];
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}

- (jshort)getShort {
  return ComAowagieTextPdfCFFFont_getShort(self);
}


#line 234
- (jint)getInt {
  return ComAowagieTextPdfCFFFont_getInt(self);
}


#line 243
- (jint)getPosition {
  @try {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->buf_)) getFilePointer];
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 256
- (IOSIntArray *)getIndexWithInt:(jint)nextIndexOffset {
  jint count;
  
#line 257
  jint indexOffSize;
  
#line 259
  [self seekWithInt:nextIndexOffset];
  count = [self getCard16];
  IOSIntArray *offsets = [IOSIntArray newArrayWithLength:count + 1];
  
#line 263
  if (count == 0) {
    *IOSIntArray_GetRef(offsets, 0) = -1;
    nextIndexOffset += 2;
    return offsets;
  }
  
#line 269
  indexOffSize = [self getCard8];
  
#line 271
  for (jint j = 0; j <= count; j++) {
    
#line 273
    *IOSIntArray_GetRef(offsets, j) = nextIndexOffset +
#line 275
    2 + 1 +
#line 277
    (count + 1) * indexOffSize -
#line 279
    1 + ComAowagieTextPdfCFFFont_getOffsetWithInt_(self,
#line 281
    indexOffSize);
  }
  
#line 284
  return offsets;
}


#line 291
- (void)getDictItem {
  for (jint i = 0; i < self->arg_count_; i++) {
    (void) IOSObjectArray_Set(nil_chk(self->args_), i, nil);
  }
  self->arg_count_ = 0;
  self->key_ = nil;
  jboolean gotKey = false;
  
#line 299
  while (!gotKey) {
    jchar b0 = [self getCard8];
    if (b0 == 29) {
      jint item = ComAowagieTextPdfCFFFont_getInt(self);
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->args_), self->arg_count_, new_JavaLangInteger_initWithInt_(item));
      self->arg_count_++;
      
#line 306
      continue;
    }
    if (b0 == 28) {
      jshort item = ComAowagieTextPdfCFFFont_getShort(self);
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->args_), self->arg_count_, new_JavaLangInteger_initWithInt_(item));
      self->arg_count_++;
      
#line 313
      continue;
    }
    if (b0 >= 32 && b0 <= 246) {
      jbyte item = (jbyte) (b0 - 139);
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->args_), self->arg_count_, new_JavaLangInteger_initWithInt_(item));
      self->arg_count_++;
      
#line 320
      continue;
    }
    if (b0 >= 247 && b0 <= 250) {
      jchar b1 = [self getCard8];
      jshort item = (jshort) ((b0 - 247) * 256 + b1 + 108);
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->args_), self->arg_count_, new_JavaLangInteger_initWithInt_(item));
      self->arg_count_++;
      
#line 328
      continue;
    }
    if (b0 >= 251 && b0 <= 254) {
      jchar b1 = [self getCard8];
      jshort item = (jshort) (-(b0 - 251) * 256 - b1 - 108);
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->args_), self->arg_count_, new_JavaLangInteger_initWithInt_(item));
      self->arg_count_++;
      
#line 336
      continue;
    }
    if (b0 == 30) {
      NSString *item = @"";
      jboolean done = false;
      jchar buffer = 0;
      jbyte avail = 0;
      jint nibble = 0;
      while (!done) {
        
#line 346
        if (avail == 0) {
          
#line 346
          buffer = [self getCard8];
          
#line 346
          avail = 2;
        }
        
#line 347
        if (avail == 1) {
          
#line 347
          nibble = JreIntDiv(buffer, 16);
          
#line 347
          avail--;
        }
        
#line 348
        if (avail == 2) {
          
#line 348
          nibble = JreIntMod(buffer, 16);
          
#line 348
          avail--;
        }
        
#line 349
        switch (nibble) {
          case (jint) 0xa:
          
#line 350
          (void) JreStrAppendStrong(&item, "$", @".");
          
#line 350
          break;
          case (jint) 0xb:
          
#line 351
          (void) JreStrAppendStrong(&item, "$", @"E");
          
#line 351
          break;
          case (jint) 0xc:
          
#line 352
          (void) JreStrAppendStrong(&item, "$", @"E-");
          
#line 352
          break;
          case (jint) 0xe:
          
#line 353
          (void) JreStrAppendStrong(&item, "$", @"-");
          
#line 353
          break;
          case (jint) 0xf:
          
#line 354
          done = true;
          
#line 354
          break;
          default:
          if (nibble >= 0 && nibble <= 9) {
            (void) JreStrAppendStrong(&item, "$", NSString_java_valueOfInt_(nibble));
          }
          else {
            
#line 359
            (void) JreStrAppendStrong(&item, "$IC", @"<NIBBLE ERROR: ", nibble, '>');
            done = true;
          }
          break;
        }
      }
      (void) IOSObjectArray_Set(nil_chk(self->args_), self->arg_count_, item);
      self->arg_count_++;
      
#line 368
      continue;
    }
    if (b0 <= 21) {
      gotKey = true;
      if (b0 != 12) {
        self->key_ = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCFFFont_operatorNames), b0);
      }
      else {
        
#line 375
        self->key_ = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCFFFont_operatorNames), 32 + [self getCard8]);
      }
      
#line 380
      continue;
    }
  }
}


#line 694
- (ComAowagieTextPdfCFFFont_RangeItem *)getEntireIndexRangeWithInt:(jint)indexOffset {
  [self seekWithInt:indexOffset];
  jint count = [self getCard16];
  if (count == 0) {
    return new_ComAowagieTextPdfCFFFont_RangeItem_initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_(self->buf_, indexOffset, 2);
  }
  else {
    
#line 700
    jint indexOffSize = [self getCard8];
    [self seekWithInt:indexOffset + 2 + 1 + count * indexOffSize];
    jint size = ComAowagieTextPdfCFFFont_getOffsetWithInt_(self, indexOffSize) - 1;
    return new_ComAowagieTextPdfCFFFont_RangeItem_initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_(self->buf_, indexOffset,
#line 704
    2 + 1 + (count + 1) * indexOffSize + size);
  }
}


#line 717
- (IOSObjectArray *)getNames {
  IOSObjectArray *names = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(self->fonts_))->size_ type:NSString_class_()];
  for (jint i = 0; i < self->fonts_->size_; i++) {
    (void) IOSObjectArray_Set(names, i, ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, i)))->name_);
  }
  return names;
}


#line 778
- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)inputbuffer {
  ComAowagieTextPdfCFFFont_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(self, inputbuffer);
  return self;
}


#line 925
- (void)ReadEncodingWithInt:(jint)nextIndexOffset {
  ComAowagieTextPdfCFFFont_ReadEncodingWithInt_(self, nextIndexOffset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "C", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "C", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 4, 3, -1, -1, -1, -1 },
    { NULL, "S", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x0, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfCFFFont_RangeItem;", 0x4, 6, 3, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getStringWithChar:);
  methods[1].selector = @selector(getCard8);
  methods[2].selector = @selector(getCard16);
  methods[3].selector = @selector(getOffsetWithInt:);
  methods[4].selector = @selector(seekWithInt:);
  methods[5].selector = @selector(getShort);
  methods[6].selector = @selector(getInt);
  methods[7].selector = @selector(getPosition);
  methods[8].selector = @selector(getIndexWithInt:);
  methods[9].selector = @selector(getDictItem);
  methods[10].selector = @selector(getEntireIndexRangeWithInt:);
  methods[11].selector = @selector(getNames);
  methods[12].selector = @selector(initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[13].selector = @selector(ReadEncodingWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "operatorNames", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "standardStrings", "[LNSString;", .constantValue.asLong = 0, 0x18, -1, 10, -1, -1 },
    { "key_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "args_", "[LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "arg_count_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "buf_", "LComAowagieTextPdfRandomAccessFileOrArray;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "offSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "nameIndexOffset_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "topdictIndexOffset_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "stringIndexOffset_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "gsubrIndexOffset_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "nameOffsets_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "topdictOffsets_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "stringOffsets_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "gsubrOffsets_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "fonts_", "[LComAowagieTextPdfCFFFont_Font;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getString", "C", "getOffset", "I", "seek", "getIndex", "getEntireIndexRange", "LComAowagieTextPdfRandomAccessFileOrArray;", "ReadEncoding", &ComAowagieTextPdfCFFFont_operatorNames, &ComAowagieTextPdfCFFFont_standardStrings, "LComAowagieTextPdfCFFFont_Item;LComAowagieTextPdfCFFFont_OffsetItem;LComAowagieTextPdfCFFFont_RangeItem;LComAowagieTextPdfCFFFont_IndexOffsetItem;LComAowagieTextPdfCFFFont_IndexBaseItem;LComAowagieTextPdfCFFFont_IndexMarkerItem;LComAowagieTextPdfCFFFont_SubrMarkerItem;LComAowagieTextPdfCFFFont_DictOffsetItem;LComAowagieTextPdfCFFFont_UInt24Item;LComAowagieTextPdfCFFFont_UInt32Item;LComAowagieTextPdfCFFFont_UInt16Item;LComAowagieTextPdfCFFFont_UInt8Item;LComAowagieTextPdfCFFFont_StringItem;LComAowagieTextPdfCFFFont_DictNumberItem;LComAowagieTextPdfCFFFont_MarkerItem;LComAowagieTextPdfCFFFont_Font;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont = { "CFFFont", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 14, 16, -1, 11, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfCFFFont class]) {
    ComAowagieTextPdfCFFFont_operatorNames = [IOSObjectArray newArrayWithObjects:(id[]){
#line 76
      @"version", @"Notice", @"FullName", @"FamilyName",
#line 77
      @"Weight", @"FontBBox", @"BlueValues", @"OtherBlues",
#line 78
      @"FamilyBlues", @"FamilyOtherBlues", @"StdHW", @"StdVW",
#line 79
      @"UNKNOWN_12", @"UniqueID", @"XUID", @"charset",
#line 80
      @"Encoding", @"CharStrings", @"Private", @"Subrs",
#line 81
      @"defaultWidthX", @"nominalWidthX", @"UNKNOWN_22", @"UNKNOWN_23",
#line 82
      @"UNKNOWN_24", @"UNKNOWN_25", @"UNKNOWN_26", @"UNKNOWN_27",
#line 83
      @"UNKNOWN_28", @"UNKNOWN_29", @"UNKNOWN_30", @"UNKNOWN_31",
#line 84
      @"Copyright", @"isFixedPitch", @"ItalicAngle", @"UnderlinePosition",
#line 85
      @"UnderlineThickness", @"PaintType", @"CharstringType", @"FontMatrix",
#line 86
      @"StrokeWidth", @"BlueScale", @"BlueShift", @"BlueFuzz",
#line 87
      @"StemSnapH", @"StemSnapV", @"ForceBold", @"UNKNOWN_12_15",
#line 88
      @"UNKNOWN_12_16", @"LanguageGroup", @"ExpansionFactor", @"initialRandomSeed",
#line 89
      @"SyntheticBase", @"PostScript", @"BaseFontName", @"BaseFontBlend",
#line 90
      @"UNKNOWN_12_24", @"UNKNOWN_12_25", @"UNKNOWN_12_26", @"UNKNOWN_12_27",
#line 91
      @"UNKNOWN_12_28", @"UNKNOWN_12_29", @"ROS", @"CIDFontVersion",
#line 92
      @"CIDFontRevision", @"CIDFontType", @"CIDCount", @"UIDBase",
#line 93
      @"FDArray", @"FDSelect", @"FontName" } count:71 type:NSString_class_()];
      ComAowagieTextPdfCFFFont_standardStrings = [IOSObjectArray newArrayWithObjects:(id[]){
#line 99
        @".notdef", @"space", @"exclam", @"quotedbl", @"numbersign", @"dollar",
#line 100
        @"percent", @"ampersand", @"quoteright", @"parenleft", @"parenright",
#line 101
        @"asterisk", @"plus", @"comma", @"hyphen", @"period", @"slash", @"zero", @"one",
#line 102
        @"two", @"three", @"four", @"five", @"six", @"seven", @"eight", @"nine", @"colon",
#line 103
        @"semicolon", @"less", @"equal", @"greater", @"question", @"at", @"A", @"B", @"C",
#line 104
        @"D", @"E", @"F", @"G", @"H", @"I", @"J", @"K", @"L", @"M", @"N", @"O", @"P", @"Q", @"R",
#line 105
        @"S", @"T", @"U", @"V", @"W", @"X", @"Y", @"Z", @"bracketleft", @"backslash",
#line 106
        @"bracketright", @"asciicircum", @"underscore", @"quoteleft", @"a", @"b", @"c",
#line 107
        @"d", @"e", @"f", @"g", @"h", @"i", @"j", @"k", @"l", @"m", @"n", @"o", @"p", @"q", @"r",
#line 108
        @"s", @"t", @"u", @"v", @"w", @"x", @"y", @"z", @"braceleft", @"bar", @"braceright",
#line 109
        @"asciitilde", @"exclamdown", @"cent", @"sterling", @"fraction", @"yen",
#line 110
        @"florin", @"section", @"currency", @"quotesingle", @"quotedblleft",
#line 111
        @"guillemotleft", @"guilsinglleft", @"guilsinglright", @"fi", @"fl", @"endash",
#line 112
        @"dagger", @"daggerdbl", @"periodcentered", @"paragraph", @"bullet",
#line 113
        @"quotesinglbase", @"quotedblbase", @"quotedblright", @"guillemotright",
#line 114
        @"ellipsis", @"perthousand", @"questiondown", @"grave", @"acute", @"circumflex",
#line 115
        @"tilde", @"macron", @"breve", @"dotaccent", @"dieresis", @"ring", @"cedilla",
#line 116
        @"hungarumlaut", @"ogonek", @"caron", @"emdash", @"AE", @"ordfeminine", @"Lslash",
#line 117
        @"Oslash", @"OE", @"ordmasculine", @"ae", @"dotlessi", @"lslash", @"oslash", @"oe",
#line 118
        @"germandbls", @"onesuperior", @"logicalnot", @"mu", @"trademark", @"Eth",
#line 119
        @"onehalf", @"plusminus", @"Thorn", @"onequarter", @"divide", @"brokenbar",
#line 120
        @"degree", @"thorn", @"threequarters", @"twosuperior", @"registered", @"minus",
#line 121
        @"eth", @"multiply", @"threesuperior", @"copyright", @"Aacute", @"Acircumflex",
#line 122
        @"Adieresis", @"Agrave", @"Aring", @"Atilde", @"Ccedilla", @"Eacute",
#line 123
        @"Ecircumflex", @"Edieresis", @"Egrave", @"Iacute", @"Icircumflex", @"Idieresis",
#line 124
        @"Igrave", @"Ntilde", @"Oacute", @"Ocircumflex", @"Odieresis", @"Ograve",
#line 125
        @"Otilde", @"Scaron", @"Uacute", @"Ucircumflex", @"Udieresis", @"Ugrave",
#line 126
        @"Yacute", @"Ydieresis", @"Zcaron", @"aacute", @"acircumflex", @"adieresis",
#line 127
        @"agrave", @"aring", @"atilde", @"ccedilla", @"eacute", @"ecircumflex",
#line 128
        @"edieresis", @"egrave", @"iacute", @"icircumflex", @"idieresis", @"igrave",
#line 129
        @"ntilde", @"oacute", @"ocircumflex", @"odieresis", @"ograve", @"otilde",
#line 130
        @"scaron", @"uacute", @"ucircumflex", @"udieresis", @"ugrave", @"yacute",
#line 131
        @"ydieresis", @"zcaron", @"exclamsmall", @"Hungarumlautsmall",
#line 132
        @"dollaroldstyle", @"dollarsuperior", @"ampersandsmall", @"Acutesmall",
#line 133
        @"parenleftsuperior", @"parenrightsuperior", @"twodotenleader",
#line 134
        @"onedotenleader", @"zerooldstyle", @"oneoldstyle", @"twooldstyle",
#line 135
        @"threeoldstyle", @"fouroldstyle", @"fiveoldstyle", @"sixoldstyle",
#line 136
        @"sevenoldstyle", @"eightoldstyle", @"nineoldstyle", @"commasuperior",
#line 137
        @"threequartersemdash", @"periodsuperior", @"questionsmall", @"asuperior",
#line 138
        @"bsuperior", @"centsuperior", @"dsuperior", @"esuperior", @"isuperior",
#line 139
        @"lsuperior", @"msuperior", @"nsuperior", @"osuperior", @"rsuperior",
#line 140
        @"ssuperior", @"tsuperior", @"ff", @"ffi", @"ffl", @"parenleftinferior",
#line 141
        @"parenrightinferior", @"Circumflexsmall", @"hyphensuperior", @"Gravesmall",
#line 142
        @"Asmall", @"Bsmall", @"Csmall", @"Dsmall", @"Esmall", @"Fsmall", @"Gsmall",
#line 143
        @"Hsmall", @"Ismall", @"Jsmall", @"Ksmall", @"Lsmall", @"Msmall", @"Nsmall",
#line 144
        @"Osmall", @"Psmall", @"Qsmall", @"Rsmall", @"Ssmall", @"Tsmall", @"Usmall",
#line 145
        @"Vsmall", @"Wsmall", @"Xsmall", @"Ysmall", @"Zsmall", @"colonmonetary",
#line 146
        @"onefitted", @"rupiah", @"Tildesmall", @"exclamdownsmall", @"centoldstyle",
#line 147
        @"Lslashsmall", @"Scaronsmall", @"Zcaronsmall", @"Dieresissmall", @"Brevesmall",
#line 148
        @"Caronsmall", @"Dotaccentsmall", @"Macronsmall", @"figuredash",
#line 149
        @"hypheninferior", @"Ogoneksmall", @"Ringsmall", @"Cedillasmall",
#line 150
        @"questiondownsmall", @"oneeighth", @"threeeighths", @"fiveeighths",
#line 151
        @"seveneighths", @"onethird", @"twothirds", @"zerosuperior", @"foursuperior",
#line 152
        @"fivesuperior", @"sixsuperior", @"sevensuperior", @"eightsuperior",
#line 153
        @"ninesuperior", @"zeroinferior", @"oneinferior", @"twoinferior",
#line 154
        @"threeinferior", @"fourinferior", @"fiveinferior", @"sixinferior",
#line 155
        @"seveninferior", @"eightinferior", @"nineinferior", @"centinferior",
#line 156
        @"dollarinferior", @"periodinferior", @"commainferior", @"Agravesmall",
#line 157
        @"Aacutesmall", @"Acircumflexsmall", @"Atildesmall", @"Adieresissmall",
#line 158
        @"Aringsmall", @"AEsmall", @"Ccedillasmall", @"Egravesmall", @"Eacutesmall",
#line 159
        @"Ecircumflexsmall", @"Edieresissmall", @"Igravesmall", @"Iacutesmall",
#line 160
        @"Icircumflexsmall", @"Idieresissmall", @"Ethsmall", @"Ntildesmall",
#line 161
        @"Ogravesmall", @"Oacutesmall", @"Ocircumflexsmall", @"Otildesmall",
#line 162
        @"Odieresissmall", @"OEsmall", @"Oslashsmall", @"Ugravesmall", @"Uacutesmall",
#line 163
        @"Ucircumflexsmall", @"Udieresissmall", @"Yacutesmall", @"Thornsmall",
#line 164
        @"Ydieresissmall", @"001.000", @"001.001", @"001.002", @"001.003", @"Black",
#line 165
        @"Bold", @"Book", @"Light", @"Medium", @"Regular", @"Roman", @"Semibold" } count:391 type:NSString_class_()];
        J2OBJC_SET_INITIALIZED(ComAowagieTextPdfCFFFont)
      }
    }

@end


#line 169
NSString *ComAowagieTextPdfCFFFont_getStringWithChar_(ComAowagieTextPdfCFFFont *self, jchar sid) {
  if (sid < ((IOSObjectArray *) nil_chk(ComAowagieTextPdfCFFFont_standardStrings))->size_) {
    return IOSObjectArray_Get(ComAowagieTextPdfCFFFont_standardStrings, sid);
  }
  if (sid >= ComAowagieTextPdfCFFFont_standardStrings->size_ + ((IOSIntArray *) nil_chk(self->stringOffsets_))->size_ - 1) {
    return nil;
  }
  jint j = sid - ComAowagieTextPdfCFFFont_standardStrings->size_;
  
#line 178
  jint p = [self getPosition];
  [self seekWithInt:IOSIntArray_Get(nil_chk(self->stringOffsets_), j)];
  JavaLangStringBuffer *s = new_JavaLangStringBuffer_init();
  for (jint k = IOSIntArray_Get(nil_chk(self->stringOffsets_), j); k < IOSIntArray_Get(nil_chk(self->stringOffsets_), j + 1); k++) {
    (void) [s appendWithChar:[self getCard8]];
  }
  [self seekWithInt:p];
  return [s description];
}


#line 207
jint ComAowagieTextPdfCFFFont_getOffsetWithInt_(ComAowagieTextPdfCFFFont *self, jint offSize) {
  jint offset = 0;
  for (jint i = 0; i < offSize; i++) {
    offset *= 256;
    offset += [self getCard8];
  }
  return offset;
}


#line 225
jshort ComAowagieTextPdfCFFFont_getShort(ComAowagieTextPdfCFFFont *self) {
  @try {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->buf_)) readShort];
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}

jint ComAowagieTextPdfCFFFont_getInt(ComAowagieTextPdfCFFFont *self) {
  @try {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->buf_)) readInt];
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 778
void ComAowagieTextPdfCFFFont_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCFFFont *self, ComAowagieTextPdfRandomAccessFileOrArray *inputbuffer) {
  NSObject_init(self);
  self->args_ = [IOSObjectArray newArrayWithLength:
#line 288
  48 type:NSObject_class_()];
  self->arg_count_ = 0;
  
#line 781
  self->buf_ = inputbuffer;
  [self seekWithInt:0];
  
#line 784
  jint major;
  
#line 784
  jint minor;
  major = [self getCard8];
  minor = [self getCard8];
  
#line 790
  jint hdrSize = [self getCard8];
  
#line 792
  self->offSize_ = [self getCard8];
  
#line 798
  self->nameIndexOffset_ = hdrSize;
  self->nameOffsets_ = [self getIndexWithInt:self->nameIndexOffset_];
  self->topdictIndexOffset_ = IOSIntArray_Get(self->nameOffsets_, ((IOSIntArray *) nil_chk(self->nameOffsets_))->size_ - 1);
  self->topdictOffsets_ = [self getIndexWithInt:self->topdictIndexOffset_];
  self->stringIndexOffset_ = IOSIntArray_Get(self->topdictOffsets_, ((IOSIntArray *) nil_chk(self->topdictOffsets_))->size_ - 1);
  self->stringOffsets_ = [self getIndexWithInt:self->stringIndexOffset_];
  self->gsubrIndexOffset_ = IOSIntArray_Get(self->stringOffsets_, ((IOSIntArray *) nil_chk(self->stringOffsets_))->size_ - 1);
  self->gsubrOffsets_ = [self getIndexWithInt:self->gsubrIndexOffset_];
  
#line 807
  self->fonts_ = [IOSObjectArray newArrayWithLength:self->nameOffsets_->size_ - 1 type:ComAowagieTextPdfCFFFont_Font_class_()];
  
#line 821
  for (jint j = 0; j < self->nameOffsets_->size_ - 1; j++) {
    (void) IOSObjectArray_SetAndConsume(nil_chk(self->fonts_), j, new_ComAowagieTextPdfCFFFont_Font_initWithComAowagieTextPdfCFFFont_(self));
    [self seekWithInt:IOSIntArray_Get(self->nameOffsets_, j)];
    ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->name_ = @"";
    for (jint k = IOSIntArray_Get(self->nameOffsets_, j); k < IOSIntArray_Get(self->nameOffsets_, j + 1); k++) {
      (void) JreStrAppendStrong(&((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->name_, "C", [self getCard8]);
    }
  }
  
#line 850
  for (jint j = 0; j < ((IOSIntArray *) nil_chk(self->topdictOffsets_))->size_ - 1; j++) {
    [self seekWithInt:IOSIntArray_Get(self->topdictOffsets_, j)];
    while ([self getPosition] < IOSIntArray_Get(nil_chk(self->topdictOffsets_), j + 1)) {
      [self getDictItem];
      if (JreStringEqualsEquals(self->key_, @"ROS")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->isCID_ = true;
      }
      else
#line 856
      if (JreStringEqualsEquals(self->key_, @"Private")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->privateLength_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->privateOffset_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(self->args_, 1), [JavaLangInteger class])))) intValue];
      }
      else if (JreStringEqualsEquals(self->key_, @"charset")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->charsetOffset_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
      }
      else
#line 864
      if (JreStringEqualsEquals(self->key_, @"Encoding")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->encodingOffset_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
        ComAowagieTextPdfCFFFont_ReadEncodingWithInt_(self, ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->encodingOffset_);
      }
      else if (JreStringEqualsEquals(self->key_, @"CharStrings")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->charstringsOffset_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
        
#line 872
        jint p = [self getPosition];
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->charstringsOffsets_ = [self getIndexWithInt:((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->charstringsOffset_];
        [self seekWithInt:p];
      }
      else
#line 875
      if (JreStringEqualsEquals(self->key_, @"FDArray")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->fdarrayOffset_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
      }
      else
#line 877
      if (JreStringEqualsEquals(self->key_, @"FDSelect")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->fdselectOffset_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
      }
      else
#line 879
      if (JreStringEqualsEquals(self->key_, @"CharstringType")) {
        ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->CharstringType_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
      }
    }
    
#line 885
    if (((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->privateOffset_ >= 0) {
      
#line 887
      [self seekWithInt:((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->privateOffset_];
      while ([self getPosition] < ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->privateOffset_ + ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->privateLength_) {
        [self getDictItem];
        if (JreStringEqualsEquals(self->key_, @"Subrs")) {
          
#line 893
          ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->privateSubrs_ = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue] + ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->privateOffset_;
        }
      }
    }
    
#line 899
    if (((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->fdarrayOffset_ >= 0) {
      IOSIntArray *fdarrayOffsets = [self getIndexWithInt:((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->fdarrayOffset_];
      
#line 902
      ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->fdprivateOffsets_ = [IOSIntArray newArrayWithLength:((IOSIntArray *) nil_chk(fdarrayOffsets))->size_ - 1];
      ((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->fdprivateLengths_ = [IOSIntArray newArrayWithLength:fdarrayOffsets->size_ - 1];
      
#line 907
      for (jint k = 0; k < fdarrayOffsets->size_ - 1; k++) {
        [self seekWithInt:IOSIntArray_Get(fdarrayOffsets, k)];
        while ([self getPosition] < IOSIntArray_Get(fdarrayOffsets, k + 1)) {
          [self getDictItem];
        }
        if (JreStringEqualsEquals(self->key_, @"Private")) {
          *IOSIntArray_GetRef(nil_chk(((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(nil_chk(self->fonts_), j)))->fdprivateLengths_), k) = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(nil_chk(self->args_), 0), [JavaLangInteger class])))) intValue];
          *IOSIntArray_GetRef(nil_chk(((ComAowagieTextPdfCFFFont_Font *) nil_chk(IOSObjectArray_Get(self->fonts_, j)))->fdprivateOffsets_), k) = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(IOSObjectArray_Get(self->args_, 1), [JavaLangInteger class])))) intValue];
        }
      }
    }
  }
}


#line 778
ComAowagieTextPdfCFFFont *new_ComAowagieTextPdfCFFFont_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfRandomAccessFileOrArray *inputbuffer) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_, inputbuffer)
}


#line 778
ComAowagieTextPdfCFFFont *create_ComAowagieTextPdfCFFFont_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfRandomAccessFileOrArray *inputbuffer) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_, inputbuffer)
}


#line 925
void ComAowagieTextPdfCFFFont_ReadEncodingWithInt_(ComAowagieTextPdfCFFFont *self, jint nextIndexOffset) {
  jint format;
  [self seekWithInt:nextIndexOffset];
  format = [self getCard8];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 388
@implementation ComAowagieTextPdfCFFFont_Item

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 388
- (instancetype)init {
  ComAowagieTextPdfCFFFont_Item_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 392
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
}


#line 397
- (void)emitWithByteArray:(IOSByteArray *)buffer {
}


#line 399
- (void)xref {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  methods[3].selector = @selector(xref);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "myOffset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_Item = { "Item", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x40c, 4, 1, 4, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_Item;
}

@end


#line 388
void ComAowagieTextPdfCFFFont_Item_init(ComAowagieTextPdfCFFFont_Item *self) {
  NSObject_init(self);
  self->myOffset_ =
#line 389
  -1;
}


#line 392
void ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(ComAowagieTextPdfCFFFont_Item *self, IOSIntArray *currentOffset) {
  self->myOffset_ = IOSIntArray_Get(nil_chk(currentOffset), 0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_Item)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 402
@implementation ComAowagieTextPdfCFFFont_OffsetItem

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 402
- (instancetype)init {
  ComAowagieTextPdfCFFFont_OffsetItem_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setWithInt:(jint)offset {
  ComAowagieTextPdfCFFFont_OffsetItem_setWithInt_(self, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "set", "I", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_OffsetItem = { "OffsetItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x40c, 2, 1, 2, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_OffsetItem;
}

@end


#line 402
void ComAowagieTextPdfCFFFont_OffsetItem_init(ComAowagieTextPdfCFFFont_OffsetItem *self) {
  ComAowagieTextPdfCFFFont_Item_init(self);
}


#line 408
void ComAowagieTextPdfCFFFont_OffsetItem_setWithInt_(ComAowagieTextPdfCFFFont_OffsetItem *self, jint offset) {
  
#line 408
  self->value_ = offset;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_OffsetItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 415
@implementation ComAowagieTextPdfCFFFont_RangeItem


#line 418
- (instancetype)initWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)buf
                                                         withInt:(jint)offset
                                                         withInt:(jint)length {
  ComAowagieTextPdfCFFFont_RangeItem_initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_(self, buf, offset, length);
  return self;
}


#line 423
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 425
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += self->length_;
}


#line 428
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 431
  @try {
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->buf_)) seekWithInt:self->offset_];
    for (jint i = self->myOffset_; i < self->myOffset_ + self->length_; i++) {
      *IOSByteArray_GetRef(nil_chk(buffer), i) = [self->buf_ readByte];
    }
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfRandomAccessFileOrArray:withInt:withInt:);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "offset_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "buf_", "LComAowagieTextPdfRandomAccessFileOrArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfRandomAccessFileOrArray;II", "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_RangeItem = { "RangeItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 3, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_RangeItem;
}

@end


#line 418
void ComAowagieTextPdfCFFFont_RangeItem_initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_(ComAowagieTextPdfCFFFont_RangeItem *self, ComAowagieTextPdfRandomAccessFileOrArray *buf, jint offset, jint length) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 419
  self->offset_ = offset;
  self->length_ = length;
  self->buf_ = buf;
}


#line 418
ComAowagieTextPdfCFFFont_RangeItem *new_ComAowagieTextPdfCFFFont_RangeItem_initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_(ComAowagieTextPdfRandomAccessFileOrArray *buf, jint offset, jint length) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_RangeItem, initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_, buf, offset, length)
}


#line 418
ComAowagieTextPdfCFFFont_RangeItem *create_ComAowagieTextPdfCFFFont_RangeItem_initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_(ComAowagieTextPdfRandomAccessFileOrArray *buf, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_RangeItem, initWithComAowagieTextPdfRandomAccessFileOrArray_withInt_withInt_, buf, offset, length)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_RangeItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 450
@implementation ComAowagieTextPdfCFFFont_IndexOffsetItem

- (instancetype)initWithInt:(jint)size
                    withInt:(jint)value {
  ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_withInt_(self, size, value);
  return self;
}


#line 453
- (instancetype)initWithInt:(jint)size {
  ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_(self, size);
  return self;
}


#line 455
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 457
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += self->size_;
}


#line 460
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 462
  jint i = 0;
  switch (self->size_) {
    case 4:
    *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + i) = (jbyte) ((JreURShift32(self->value_, 24)) & (jint) 0xff);
    i++;
    case 3:
    *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + i) = (jbyte) ((JreURShift32(self->value_, 16)) & (jint) 0xff);
    i++;
    case 2:
    *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + i) = (jbyte) ((JreURShift32(self->value_, 8)) & (jint) 0xff);
    i++;
    case 1:
    *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + i) = (jbyte) ((JreURShift32(self->value_, 0)) & (jint) 0xff);
    i++;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(incrementWithIntArray:);
  methods[3].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "size_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "I", "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_IndexOffsetItem = { "IndexOffsetItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 4, 1, 6, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_IndexOffsetItem;
}

@end


#line 452
void ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_withInt_(ComAowagieTextPdfCFFFont_IndexOffsetItem *self, jint size, jint value) {
  ComAowagieTextPdfCFFFont_OffsetItem_init(self);
  
#line 452
  self->size_ = size;
  
#line 452
  self->value_ = value;
}


#line 452
ComAowagieTextPdfCFFFont_IndexOffsetItem *new_ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_withInt_(jint size, jint value) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_IndexOffsetItem, initWithInt_withInt_, size, value)
}


#line 452
ComAowagieTextPdfCFFFont_IndexOffsetItem *create_ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_withInt_(jint size, jint value) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_IndexOffsetItem, initWithInt_withInt_, size, value)
}


#line 453
void ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_(ComAowagieTextPdfCFFFont_IndexOffsetItem *self, jint size) {
  ComAowagieTextPdfCFFFont_OffsetItem_init(self);
  
#line 453
  self->size_ = size;
}


#line 453
ComAowagieTextPdfCFFFont_IndexOffsetItem *new_ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_IndexOffsetItem, initWithInt_, size)
}


#line 453
ComAowagieTextPdfCFFFont_IndexOffsetItem *create_ComAowagieTextPdfCFFFont_IndexOffsetItem_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_IndexOffsetItem, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_IndexOffsetItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 487
@implementation ComAowagieTextPdfCFFFont_IndexBaseItem

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 488
- (instancetype)init {
  ComAowagieTextPdfCFFFont_IndexBaseItem_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_IndexBaseItem = { "IndexBaseItem", "com.aowagie.text.pdf", ptrTable, methods, NULL, 7, 0x1c, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_IndexBaseItem;
}

@end


#line 488
void ComAowagieTextPdfCFFFont_IndexBaseItem_init(ComAowagieTextPdfCFFFont_IndexBaseItem *self) {
  ComAowagieTextPdfCFFFont_Item_init(self);
}


#line 488
ComAowagieTextPdfCFFFont_IndexBaseItem *new_ComAowagieTextPdfCFFFont_IndexBaseItem_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_IndexBaseItem, init)
}


#line 488
ComAowagieTextPdfCFFFont_IndexBaseItem *create_ComAowagieTextPdfCFFFont_IndexBaseItem_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_IndexBaseItem, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_IndexBaseItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 491
@implementation ComAowagieTextPdfCFFFont_IndexMarkerItem


#line 494
- (instancetype)initWithComAowagieTextPdfCFFFont_OffsetItem:(ComAowagieTextPdfCFFFont_OffsetItem *)offItem
                 withComAowagieTextPdfCFFFont_IndexBaseItem:(ComAowagieTextPdfCFFFont_IndexBaseItem *)indexBase {
  ComAowagieTextPdfCFFFont_IndexMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(self, offItem, indexBase);
  return self;
}


#line 498
- (void)xref {
  
#line 501
  ComAowagieTextPdfCFFFont_OffsetItem_setWithInt_(nil_chk(self->offItem_), self->myOffset_ - ((ComAowagieTextPdfCFFFont_IndexBaseItem *) nil_chk(self->indexBase_))->myOffset_ + 1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfCFFFont_OffsetItem:withComAowagieTextPdfCFFFont_IndexBaseItem:);
  methods[1].selector = @selector(xref);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "offItem_", "LComAowagieTextPdfCFFFont_OffsetItem;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexBase_", "LComAowagieTextPdfCFFFont_IndexBaseItem;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfCFFFont_OffsetItem;LComAowagieTextPdfCFFFont_IndexBaseItem;", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_IndexMarkerItem = { "IndexMarkerItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 2, 2, 1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_IndexMarkerItem;
}

@end


#line 494
void ComAowagieTextPdfCFFFont_IndexMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(ComAowagieTextPdfCFFFont_IndexMarkerItem *self, ComAowagieTextPdfCFFFont_OffsetItem *offItem, ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 495
  self->offItem_ = offItem;
  self->indexBase_ = indexBase;
}


#line 494
ComAowagieTextPdfCFFFont_IndexMarkerItem *new_ComAowagieTextPdfCFFFont_IndexMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(ComAowagieTextPdfCFFFont_OffsetItem *offItem, ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_IndexMarkerItem, initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_, offItem, indexBase)
}


#line 494
ComAowagieTextPdfCFFFont_IndexMarkerItem *create_ComAowagieTextPdfCFFFont_IndexMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(ComAowagieTextPdfCFFFont_OffsetItem *offItem, ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_IndexMarkerItem, initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_, offItem, indexBase)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_IndexMarkerItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 508
@implementation ComAowagieTextPdfCFFFont_SubrMarkerItem


#line 511
- (instancetype)initWithComAowagieTextPdfCFFFont_OffsetItem:(ComAowagieTextPdfCFFFont_OffsetItem *)offItem
                 withComAowagieTextPdfCFFFont_IndexBaseItem:(ComAowagieTextPdfCFFFont_IndexBaseItem *)indexBase {
  ComAowagieTextPdfCFFFont_SubrMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(self, offItem, indexBase);
  return self;
}


#line 515
- (void)xref {
  
#line 518
  ComAowagieTextPdfCFFFont_OffsetItem_setWithInt_(nil_chk(self->offItem_), self->myOffset_ - ((ComAowagieTextPdfCFFFont_IndexBaseItem *) nil_chk(self->indexBase_))->myOffset_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfCFFFont_OffsetItem:withComAowagieTextPdfCFFFont_IndexBaseItem:);
  methods[1].selector = @selector(xref);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "offItem_", "LComAowagieTextPdfCFFFont_OffsetItem;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexBase_", "LComAowagieTextPdfCFFFont_IndexBaseItem;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfCFFFont_OffsetItem;LComAowagieTextPdfCFFFont_IndexBaseItem;", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_SubrMarkerItem = { "SubrMarkerItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 2, 2, 1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_SubrMarkerItem;
}

@end


#line 511
void ComAowagieTextPdfCFFFont_SubrMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(ComAowagieTextPdfCFFFont_SubrMarkerItem *self, ComAowagieTextPdfCFFFont_OffsetItem *offItem, ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 512
  self->offItem_ = offItem;
  self->indexBase_ = indexBase;
}


#line 511
ComAowagieTextPdfCFFFont_SubrMarkerItem *new_ComAowagieTextPdfCFFFont_SubrMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(ComAowagieTextPdfCFFFont_OffsetItem *offItem, ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_SubrMarkerItem, initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_, offItem, indexBase)
}


#line 511
ComAowagieTextPdfCFFFont_SubrMarkerItem *create_ComAowagieTextPdfCFFFont_SubrMarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_(ComAowagieTextPdfCFFFont_OffsetItem *offItem, ComAowagieTextPdfCFFFont_IndexBaseItem *indexBase) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_SubrMarkerItem, initWithComAowagieTextPdfCFFFont_OffsetItem_withComAowagieTextPdfCFFFont_IndexBaseItem_, offItem, indexBase)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_SubrMarkerItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 526
@implementation ComAowagieTextPdfCFFFont_DictOffsetItem

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 528
- (instancetype)init {
  ComAowagieTextPdfCFFFont_DictOffsetItem_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 530
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 532
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += self->size_;
}


#line 536
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 538
  if (self->size_ == 5) {
    *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_) = 29;
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 1) = (jbyte) ((JreURShift32(self->value_, 24)) & (jint) 0xff);
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 2) = (jbyte) ((JreURShift32(self->value_, 16)) & (jint) 0xff);
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 3) = (jbyte) ((JreURShift32(self->value_, 8)) & (jint) 0xff);
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 4) = (jbyte) ((JreURShift32(self->value_, 0)) & (jint) 0xff);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "size_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_DictOffsetItem = { "DictOffsetItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 1, 4, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_DictOffsetItem;
}

@end


#line 528
void ComAowagieTextPdfCFFFont_DictOffsetItem_init(ComAowagieTextPdfCFFFont_DictOffsetItem *self) {
  ComAowagieTextPdfCFFFont_OffsetItem_init(self);
  
#line 528
  self->size_ = 5;
}


#line 528
ComAowagieTextPdfCFFFont_DictOffsetItem *new_ComAowagieTextPdfCFFFont_DictOffsetItem_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_DictOffsetItem, init)
}


#line 528
ComAowagieTextPdfCFFFont_DictOffsetItem *create_ComAowagieTextPdfCFFFont_DictOffsetItem_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_DictOffsetItem, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_DictOffsetItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 551
@implementation ComAowagieTextPdfCFFFont_UInt24Item

- (instancetype)initWithInt:(jint)value {
  ComAowagieTextPdfCFFFont_UInt24Item_initWithInt_(self, value);
  return self;
}


#line 555
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 557
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += 3;
}


#line 561
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 563
  *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + 0) = (jbyte) ((JreURShift32(self->value_, 16)) & (jint) 0xff);
  *IOSByteArray_GetRef(buffer, self->myOffset_ + 1) = (jbyte) ((JreURShift32(self->value_, 8)) & (jint) 0xff);
  *IOSByteArray_GetRef(buffer, self->myOffset_ + 2) = (jbyte) ((JreURShift32(self->value_, 0)) & (jint) 0xff);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_UInt24Item = { "UInt24Item", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 1, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_UInt24Item;
}

@end


#line 553
void ComAowagieTextPdfCFFFont_UInt24Item_initWithInt_(ComAowagieTextPdfCFFFont_UInt24Item *self, jint value) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 553
  self->value_ = value;
}


#line 553
ComAowagieTextPdfCFFFont_UInt24Item *new_ComAowagieTextPdfCFFFont_UInt24Item_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_UInt24Item, initWithInt_, value)
}


#line 553
ComAowagieTextPdfCFFFont_UInt24Item *create_ComAowagieTextPdfCFFFont_UInt24Item_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_UInt24Item, initWithInt_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_UInt24Item)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 572
@implementation ComAowagieTextPdfCFFFont_UInt32Item

- (instancetype)initWithInt:(jint)value {
  ComAowagieTextPdfCFFFont_UInt32Item_initWithInt_(self, value);
  return self;
}


#line 576
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 578
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += 4;
}


#line 582
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 584
  *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + 0) = (jbyte) ((JreURShift32(self->value_, 24)) & (jint) 0xff);
  *IOSByteArray_GetRef(buffer, self->myOffset_ + 1) = (jbyte) ((JreURShift32(self->value_, 16)) & (jint) 0xff);
  *IOSByteArray_GetRef(buffer, self->myOffset_ + 2) = (jbyte) ((JreURShift32(self->value_, 8)) & (jint) 0xff);
  *IOSByteArray_GetRef(buffer, self->myOffset_ + 3) = (jbyte) ((JreURShift32(self->value_, 0)) & (jint) 0xff);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_UInt32Item = { "UInt32Item", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 1, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_UInt32Item;
}

@end


#line 574
void ComAowagieTextPdfCFFFont_UInt32Item_initWithInt_(ComAowagieTextPdfCFFFont_UInt32Item *self, jint value) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 574
  self->value_ = value;
}


#line 574
ComAowagieTextPdfCFFFont_UInt32Item *new_ComAowagieTextPdfCFFFont_UInt32Item_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_UInt32Item, initWithInt_, value)
}


#line 574
ComAowagieTextPdfCFFFont_UInt32Item *create_ComAowagieTextPdfCFFFont_UInt32Item_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_UInt32Item, initWithInt_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_UInt32Item)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 594
@implementation ComAowagieTextPdfCFFFont_UInt16Item

- (instancetype)initWithChar:(jchar)value {
  ComAowagieTextPdfCFFFont_UInt16Item_initWithChar_(self, value);
  return self;
}


#line 598
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 600
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += 2;
}


#line 604
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 606
  *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + 0) = (jbyte) ((JreURShift32(self->value_, 8)) & (jint) 0xff);
  *IOSByteArray_GetRef(buffer, self->myOffset_ + 1) = (jbyte) ((JreURShift32(self->value_, 0)) & (jint) 0xff);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithChar:);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "C", "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_UInt16Item = { "UInt16Item", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 1, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_UInt16Item;
}

@end


#line 596
void ComAowagieTextPdfCFFFont_UInt16Item_initWithChar_(ComAowagieTextPdfCFFFont_UInt16Item *self, jchar value) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 596
  self->value_ = value;
}


#line 596
ComAowagieTextPdfCFFFont_UInt16Item *new_ComAowagieTextPdfCFFFont_UInt16Item_initWithChar_(jchar value) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_UInt16Item, initWithChar_, value)
}


#line 596
ComAowagieTextPdfCFFFont_UInt16Item *create_ComAowagieTextPdfCFFFont_UInt16Item_initWithChar_(jchar value) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_UInt16Item, initWithChar_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_UInt16Item)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 614
@implementation ComAowagieTextPdfCFFFont_UInt8Item

- (instancetype)initWithChar:(jchar)value {
  ComAowagieTextPdfCFFFont_UInt8Item_initWithChar_(self, value);
  return self;
}


#line 618
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 620
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += 1;
}


#line 624
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 626
  *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + 0) = (jbyte) ((JreURShift32(self->value_, 0)) & (jint) 0xff);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithChar:);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "C", "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_UInt8Item = { "UInt8Item", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 1, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_UInt8Item;
}

@end


#line 616
void ComAowagieTextPdfCFFFont_UInt8Item_initWithChar_(ComAowagieTextPdfCFFFont_UInt8Item *self, jchar value) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 616
  self->value_ = value;
}


#line 616
ComAowagieTextPdfCFFFont_UInt8Item *new_ComAowagieTextPdfCFFFont_UInt8Item_initWithChar_(jchar value) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_UInt8Item, initWithChar_, value)
}


#line 616
ComAowagieTextPdfCFFFont_UInt8Item *create_ComAowagieTextPdfCFFFont_UInt8Item_initWithChar_(jchar value) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_UInt8Item, initWithChar_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_UInt8Item)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 630
@implementation ComAowagieTextPdfCFFFont_StringItem

- (instancetype)initWithNSString:(NSString *)s {
  ComAowagieTextPdfCFFFont_StringItem_initWithNSString_(self, s);
  return self;
}


#line 634
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 636
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += [((NSString *) nil_chk(self->s_)) java_length];
}


#line 639
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 641
  for (jint i = 0; i < [((NSString *) nil_chk(self->s_)) java_length]; i++) {
    *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_ + i) = (jbyte) ([self->s_ charAtWithInt:i] & (jint) 0xff);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "s_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "increment", "[I", "emit", "[B", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_StringItem = { "StringItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 1, 5, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_StringItem;
}

@end


#line 632
void ComAowagieTextPdfCFFFont_StringItem_initWithNSString_(ComAowagieTextPdfCFFFont_StringItem *self, NSString *s) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 632
  self->s_ = s;
}


#line 632
ComAowagieTextPdfCFFFont_StringItem *new_ComAowagieTextPdfCFFFont_StringItem_initWithNSString_(NSString *s) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_StringItem, initWithNSString_, s)
}


#line 632
ComAowagieTextPdfCFFFont_StringItem *create_ComAowagieTextPdfCFFFont_StringItem_initWithNSString_(NSString *s) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_StringItem, initWithNSString_, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_StringItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 653
@implementation ComAowagieTextPdfCFFFont_DictNumberItem


#line 656
- (instancetype)initWithInt:(jint)value {
  ComAowagieTextPdfCFFFont_DictNumberItem_initWithInt_(self, value);
  return self;
}


#line 657
- (void)incrementWithIntArray:(IOSIntArray *)currentOffset {
  
#line 659
  ComAowagieTextPdfCFFFont_Item_incrementWithIntArray_(self, currentOffset);
  *IOSIntArray_GetRef(nil_chk(currentOffset), 0) += ComAowagieTextPdfCFFFont_DictNumberItem_size;
}


#line 663
- (void)emitWithByteArray:(IOSByteArray *)buffer {
  
#line 665
  if (ComAowagieTextPdfCFFFont_DictNumberItem_size == 5) {
    *IOSByteArray_GetRef(nil_chk(buffer), self->myOffset_) = 29;
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 1) = (jbyte) ((JreURShift32(self->value_, 24)) & (jint) 0xff);
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 2) = (jbyte) ((JreURShift32(self->value_, 16)) & (jint) 0xff);
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 3) = (jbyte) ((JreURShift32(self->value_, 8)) & (jint) 0xff);
    *IOSByteArray_GetRef(buffer, self->myOffset_ + 4) = (jbyte) ((JreURShift32(self->value_, 0)) & (jint) 0xff);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(incrementWithIntArray:);
  methods[2].selector = @selector(emitWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "size", "I", .constantValue.asInt = ComAowagieTextPdfCFFFont_DictNumberItem_size, 0x12, 5, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "increment", "[I", "emit", "[B", "size", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_DictNumberItem = { "DictNumberItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 3, 2, 6, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_DictNumberItem;
}

@end


#line 656
void ComAowagieTextPdfCFFFont_DictNumberItem_initWithInt_(ComAowagieTextPdfCFFFont_DictNumberItem *self, jint value) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 656
  self->value_ = value;
}


#line 656
ComAowagieTextPdfCFFFont_DictNumberItem *new_ComAowagieTextPdfCFFFont_DictNumberItem_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_DictNumberItem, initWithInt_, value)
}


#line 656
ComAowagieTextPdfCFFFont_DictNumberItem *create_ComAowagieTextPdfCFFFont_DictNumberItem_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_DictNumberItem, initWithInt_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_DictNumberItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 679
@implementation ComAowagieTextPdfCFFFont_MarkerItem

- (instancetype)initWithComAowagieTextPdfCFFFont_OffsetItem:(ComAowagieTextPdfCFFFont_OffsetItem *)pointerToMarker {
  ComAowagieTextPdfCFFFont_MarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_(self, pointerToMarker);
  return self;
}


#line 682
- (void)xref {
  
#line 684
  ComAowagieTextPdfCFFFont_OffsetItem_setWithInt_(nil_chk(self->p_), self->myOffset_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfCFFFont_OffsetItem:);
  methods[1].selector = @selector(xref);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "p_", "LComAowagieTextPdfCFFFont_OffsetItem;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfCFFFont_OffsetItem;", "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_MarkerItem = { "MarkerItem", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1c, 2, 1, 1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_MarkerItem;
}

@end


#line 681
void ComAowagieTextPdfCFFFont_MarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_(ComAowagieTextPdfCFFFont_MarkerItem *self, ComAowagieTextPdfCFFFont_OffsetItem *pointerToMarker) {
  ComAowagieTextPdfCFFFont_Item_init(self);
  
#line 681
  self->p_ = pointerToMarker;
}


#line 681
ComAowagieTextPdfCFFFont_MarkerItem *new_ComAowagieTextPdfCFFFont_MarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_(ComAowagieTextPdfCFFFont_OffsetItem *pointerToMarker) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_MarkerItem, initWithComAowagieTextPdfCFFFont_OffsetItem_, pointerToMarker)
}


#line 681
ComAowagieTextPdfCFFFont_MarkerItem *create_ComAowagieTextPdfCFFFont_MarkerItem_initWithComAowagieTextPdfCFFFont_OffsetItem_(ComAowagieTextPdfCFFFont_OffsetItem *pointerToMarker) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_MarkerItem, initWithComAowagieTextPdfCFFFont_OffsetItem_, pointerToMarker)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_MarkerItem)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/CFFFont.java"


#line 742
@implementation ComAowagieTextPdfCFFFont_Font


#line 742
- (instancetype)initWithComAowagieTextPdfCFFFont:(ComAowagieTextPdfCFFFont *)outer$ {
  ComAowagieTextPdfCFFFont_Font_initWithComAowagieTextPdfCFFFont_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfCFFFont:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "isCID_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "privateOffset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "privateLength_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "privateSubrs_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "charstringsOffset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "encodingOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "charsetOffset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fdarrayOffset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fdselectOffset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fdprivateOffsets_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fdprivateLengths_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "nglyphs_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "nstrings_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "CharsetLength_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "charstringsOffsets_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "FDSelect_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "FDSelectLength_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "FDSelectFormat_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "CharstringType_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "FDArrayCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "FDArrayOffsize_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "FDArrayOffsets_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "PrivateSubrsOffset_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "PrivateSubrsOffsetsArray_", "[[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "SubrsOffsets_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfCFFFont;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfCFFFont_Font = { "Font", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x10, 1, 26, 0, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCFFFont_Font;
}

@end


#line 742
void ComAowagieTextPdfCFFFont_Font_initWithComAowagieTextPdfCFFFont_(ComAowagieTextPdfCFFFont_Font *self, ComAowagieTextPdfCFFFont *outer$) {
  NSObject_init(self);
  self->isCID_ =
#line 745
  false;
  self->privateOffset_ = -1;
  self->privateLength_ = -1;
  self->privateSubrs_ = -1;
  self->charstringsOffset_ = -1;
  self->encodingOffset_ = -1;
  self->charsetOffset_ = -1;
  self->fdarrayOffset_ = -1;
  self->fdselectOffset_ = -1;
  self->CharstringType_ =
#line 767
  2;
}


#line 742
ComAowagieTextPdfCFFFont_Font *new_ComAowagieTextPdfCFFFont_Font_initWithComAowagieTextPdfCFFFont_(ComAowagieTextPdfCFFFont *outer$) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCFFFont_Font, initWithComAowagieTextPdfCFFFont_, outer$)
}


#line 742
ComAowagieTextPdfCFFFont_Font *create_ComAowagieTextPdfCFFFont_Font_initWithComAowagieTextPdfCFFFont_(ComAowagieTextPdfCFFFont *outer$) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCFFFont_Font, initWithComAowagieTextPdfCFFFont_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCFFFont_Font)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Document.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextDocument")
#ifdef RESTRICT_ComAowagieTextDocument
#define INCLUDE_ALL_ComAowagieTextDocument 0
#else
#define INCLUDE_ALL_ComAowagieTextDocument 1
#endif
#undef RESTRICT_ComAowagieTextDocument

#if !defined (ComAowagieTextDocument_) && (INCLUDE_ALL_ComAowagieTextDocument || defined(INCLUDE_ComAowagieTextDocument))
#define ComAowagieTextDocument_

#define RESTRICT_ComAowagieTextDocListener 1
#define INCLUDE_ComAowagieTextDocListener 1
#include "com/aowagie/text/DocListener.h"

@class ComAowagieTextHeaderFooter;
@class ComAowagieTextRectangle;
@class JavaUtilCalendar;
@protocol ComAowagieTextElement;

/*!
 @brief A generic Document class.
 <P>
  All kinds of Text-elements can be added to a <CODE>HTMLDocument</CODE>.
  The <CODE>Document</CODE> signals all the listeners when an element has
  been added. 
 <P>
  Remark: 
 <OL>
      <LI>Once a document is created you can add some meta information.
      <LI>You can also set the headers/footers.
      <LI>You have to open the document before you can write content. 
 <LI>You can only write content (no more meta-formation!) once a document is
  opened. 
 <LI>When you change the header/footer on a certain page, this will be
  effective starting on the next page. 
 <LI>After closing the document, every listener (as well as its <CODE>
  OutputStream</CODE>) is closed too. 
 </OL>
  Example: <BLOCKQUOTE>
  
 @code
// creation of the document with a certain size and certain margins 
  <STRONG>Document document = new Document(PageSize.A4, 50, 50, 50, 50); 
  </STRONG> try {
    // creation of the different writers
    HtmlWriter.getInstance(<STRONG>document </STRONG>, System.out);
    PdfWriter.getInstance(<STRONG>document </STRONG>, new FileOutputStream("text.pdf"));
    // we add some meta information to the document   
   <STRONG>document.addAuthor("Bruno Lowagie"); </STRONG>
      <STRONG>document.addSubject("This is the result of a Test."); </STRONG>
    // we open the document for writing   
   <STRONG>document.open(); </STRONG>
      <STRONG>document.add(new Paragraph("Hello world"));</STRONG>
   } catch(DocumentException de) {
    System.err.println(de.getMessage());
   }  
  <STRONG>document.close();</STRONG>
   
@endcode
  
 </BLOCKQUOTE>
 */
@interface ComAowagieTextDocument : NSObject < ComAowagieTextDocListener > {
 @public
  /*!
   @brief Is the document open or not?
   */
  jboolean open_;
  /*!
   @brief Has the document already been closed?
   */
  jboolean close_;
  /*!
   @brief The size of the page.
   */
  ComAowagieTextRectangle *pageSize_;
  /*!
   @brief margin in x direction starting from the left
   */
  jfloat marginLeft_;
  /*!
   @brief margin in x direction starting from the right
   */
  jfloat marginRight_;
  /*!
   @brief margin in y direction starting from the top
   */
  jfloat marginTop_;
  /*!
   @brief margin in y direction starting from the bottom
   */
  jfloat marginBottom_;
  /*!
   @brief mirroring of the left/right margins
   */
  jboolean marginMirroring_;
  /*!
   @brief mirroring of the top/bottom margins
   @since 2.1.6
   */
  jboolean marginMirroringTopBottom_;
  /*!
   @brief Current pagenumber
   */
  jint pageN_;
  /*!
   @brief This is the textual part of a Page; it can contain a header
   */
  ComAowagieTextHeaderFooter *header_;
  /*!
   @brief This is the textual part of the footer
   */
  ComAowagieTextHeaderFooter *footer_;
}

#pragma mark Public

/*!
 @brief Constructs a new <CODE>Document</CODE> -object.
 */
- (instancetype)init;

/*!
 @brief Constructs a new <CODE>Document</CODE> -object.
 @param pageSize the pageSize
 */
- (instancetype)initWithComAowagieTextRectangle:(ComAowagieTextRectangle *)pageSize;

/*!
 @brief Constructs a new <CODE>Document</CODE> -object.
 @param pageSize the pageSize
 @param marginLeft the margin on the left
 @param marginRight the margin on the right
 @param marginTop the margin on the top
 @param marginBottom the margin on the bottom
 */
- (instancetype)initWithComAowagieTextRectangle:(ComAowagieTextRectangle *)pageSize
                                      withFloat:(jfloat)marginLeft
                                      withFloat:(jfloat)marginRight
                                      withFloat:(jfloat)marginTop
                                      withFloat:(jfloat)marginBottom;

/*!
 @brief Adds an <CODE>Element</CODE> to the <CODE>Document</CODE>.
 @param element the 
  <CODE> Element </CODE>  to add
 @return <CODE>true</CODE> if the element was added, <CODE>false
          </CODE> if not
 @throw DocumentException
 when a document isn't open yet, or has been closed
 */
- (jboolean)addWithComAowagieTextElement:(id<ComAowagieTextElement>)element;

- (jboolean)addCreationDate;

/*!
 @brief Adds the current date and time to a Document.
 @param globalDate Date
 @return <CODE>true</CODE> if successful, <CODE>false</CODE> otherwise
 */
- (jboolean)addCreationDateWithJavaUtilCalendar:(JavaUtilCalendar *)globalDate;

/*!
 @brief Adds a <CODE>DocListener</CODE> to the <CODE>Document</CODE>.
 @param listener the new DocListener.
 */
- (void)addDocListenerWithComAowagieTextDocListener:(id<ComAowagieTextDocListener>)listener;

/*!
 @brief Adds the producer to a Document.
 @return <CODE>true</CODE> if successful, <CODE>false</CODE> otherwise
 */
- (jboolean)addProducer;

/*!
 @brief Adds the title to a Document.
 @param title the title
 @return <CODE>true</CODE> if successful, <CODE>false</CODE> otherwise
 */
- (jboolean)addTitleWithNSString:(NSString *)title;

/*!
 @brief Returns the lower left y-coordinate.
 @return the lower left y-coordinate
 */
- (jfloat)bottom;

/*!
 @brief Returns the lower left y-coordinate, considering a given margin.
 @param margin a margin
 @return the lower left y-coordinate
 */
- (jfloat)bottomWithFloat:(jfloat)margin;

/*!
 @brief Returns the bottom margin.
 @return the bottom margin
 */
- (jfloat)bottomMargin;

/*!
 @brief Closes the document.
 <P>
  Once all the content has been written in the body, you have to close the
  body. After that nothing can be written to the body anymore.
 */
- (void)close;

/*!
 @brief Gets the style class of the HTML body tag
 @return the style class of the HTML body tag
 */
- (NSString *)getHtmlStyleClass;

/*!
 @brief Gets the JavaScript onLoad command.
 @return the JavaScript onLoad command
 */
- (NSString *)getJavaScript_onLoad;

/*!
 @brief Gets the JavaScript onUnLoad command.
 @return the JavaScript onUnLoad command
 */
- (NSString *)getJavaScript_onUnLoad;

/*!
 @brief Returns the current page number.
 @return the current page number
 */
- (jint)getPageNumber;

/*!
 @brief Gets the pagesize.
 @return the page size
 */
- (ComAowagieTextRectangle *)getPageSize;

/*!
 @brief Gets the product name.
 This method may only be changed by Paulo Soares and/or Bruno Lowagie.
 @return the product name
 @since 2.1.6
 */
+ (NSString *)getProduct;

/*!
 @brief Gets the release number.
 This method may only be changed by Paulo Soares and/or Bruno Lowagie.
 @return the product name
 @since 2.1.6
 */
+ (NSString *)getRelease;

/*!
 @brief Gets the iText version.
 This method may only be changed by Paulo Soares and/or Bruno Lowagie.
 @return iText version
 */
+ (NSString *)getVersion;

/*!
 @brief Gets the margin mirroring flag.
 @return the margin mirroring flag
 */
- (jboolean)isMarginMirroring;

/*!
 @brief Checks if the document is open.
 @return <CODE>true</CODE> if the document is open
 */
- (jboolean)isOpen;

/*!
 @brief Returns the lower left x-coordinate.
 @return the lower left x-coordinate
 */
- (jfloat)left;

/*!
 @brief Returns the lower left x-coordinate considering a given margin.
 @param margin a margin
 @return the lower left x-coordinate
 */
- (jfloat)leftWithFloat:(jfloat)margin;

/*!
 @brief Returns the left margin.
 @return the left margin
 */
- (jfloat)leftMargin;

/*!
 @brief Signals that an new page has to be started.
 @return <CODE>true</CODE> if the page was added, <CODE>false</CODE>
          if not.
 */
- (jboolean)newPage OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Opens the document.
 <P>
  Once the document is opened, you can't write any Header- or
  Meta-information anymore. You have to open the document before you can
  begin to add content to the body of the document.
 */
- (void)open;

/*!
 @brief Removes a <CODE>DocListener</CODE> from the <CODE>Document</CODE>.
 @param listener the DocListener that has to be removed.
 */
- (void)removeDocListenerWithComAowagieTextDocListener:(id<ComAowagieTextDocListener>)listener;

/*!
 @brief Resets the footer of this document.
 */
- (void)resetFooter;

/*!
 @brief Resets the header of this document.
 */
- (void)resetHeader;

/*!
 @brief Sets the page number to 0.
 */
- (void)resetPageCount;

/*!
 @brief Returns the upper right x-coordinate.
 @return the upper right x-coordinate
 */
- (jfloat)right;

/*!
 @brief Returns the upper right x-coordinate, considering a given margin.
 @param margin a margin
 @return the upper right x-coordinate
 */
- (jfloat)rightWithFloat:(jfloat)margin;

/*!
 @brief Return the right margin.
 @return the right margin
 */
- (jfloat)rightMargin;

/*!
 @brief Changes the footer of this document.
 @param footer the new footer
 */
- (void)setFooterWithComAowagieTextHeaderFooter:(ComAowagieTextHeaderFooter *)footer;

/*!
 @brief Changes the header of this document.
 @param header the new header
 */
- (void)setHeaderWithComAowagieTextHeaderFooter:(ComAowagieTextHeaderFooter *)header;

/*!
 @brief Adds a style class to the HTML body tag
 @param htmlStyleClass the style class for the HTML body tag
 */
- (void)setHtmlStyleClassWithNSString:(NSString *)htmlStyleClass;

/*!
 @brief Adds a JavaScript onLoad function to the HTML body tag
 @param code the JavaScript code to be executed on load of the HTML page
 */
- (void)setJavaScript_onLoadWithNSString:(NSString *)code;

/*!
 @brief Adds a JavaScript onUnLoad function to the HTML body tag
 @param code the JavaScript code to be executed on unload of the HTML page
 */
- (void)setJavaScript_onUnLoadWithNSString:(NSString *)code;

/*!
 @brief Set the margin mirroring.It will mirror right/left margins for odd/even pages.
 <p>
  Note: it will not work with <code>Table</code>.
 @param marginMirroring <CODE>
  true </CODE>  to mirror the margins
 @return always <CODE>true</CODE>
 */
- (jboolean)setMarginMirroringWithBoolean:(jboolean)marginMirroring;

/*!
 @brief Set the margin mirroring.It will mirror top/bottom margins for odd/even pages.
 <p>
  Note: it will not work with <code>Table</code>.
 @param marginMirroringTopBottom <CODE>
  true </CODE>  to mirror the margins
 @return always <CODE>true</CODE>
 @since 2.1.6
 */
- (jboolean)setMarginMirroringTopBottomWithBoolean:(jboolean)marginMirroringTopBottom;

/*!
 @brief Sets the margins.
 @param marginLeft the margin on the left
 @param marginRight the margin on the right
 @param marginTop the margin on the top
 @param marginBottom the margin on the bottom
 @return a <CODE>boolean</CODE>
 */
- (jboolean)setMarginsWithFloat:(jfloat)marginLeft
                      withFloat:(jfloat)marginRight
                      withFloat:(jfloat)marginTop
                      withFloat:(jfloat)marginBottom;

/*!
 @brief Sets the page number.
 @param pageN the new page number
 */
- (void)setPageCountWithInt:(jint)pageN;

/*!
 @brief Sets the pagesize.
 @param pageSize the new pagesize
 @return a <CODE>boolean</CODE>
 */
- (jboolean)setPageSizeWithComAowagieTextRectangle:(ComAowagieTextRectangle *)pageSize;

/*!
 @brief Returns the upper right y-coordinate.
 @return the upper right y-coordinate
 */
- (jfloat)top;

/*!
 @brief Returns the upper right y-coordinate, considering a given margin.
 @param margin a margin
 @return the upper right y-coordinate
 */
- (jfloat)topWithFloat:(jfloat)margin;

/*!
 @brief Returns the top margin.
 @return the top margin
 */
- (jfloat)topMargin;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextDocument)

J2OBJC_FIELD_SETTER(ComAowagieTextDocument, pageSize_, ComAowagieTextRectangle *)
J2OBJC_FIELD_SETTER(ComAowagieTextDocument, header_, ComAowagieTextHeaderFooter *)
J2OBJC_FIELD_SETTER(ComAowagieTextDocument, footer_, ComAowagieTextHeaderFooter *)

/*!
 @brief Allows the pdf documents to be produced without compression for debugging
  purposes.
 */
inline jboolean ComAowagieTextDocument_get_compress(void);
inline jboolean ComAowagieTextDocument_set_compress(jboolean value);
inline jboolean *ComAowagieTextDocument_getRef_compress(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean ComAowagieTextDocument_compress;
J2OBJC_STATIC_FIELD_PRIMITIVE(ComAowagieTextDocument, compress, jboolean)

/*!
 @brief When true the file access is not done through a memory mapped file.Use it if the file
  is too big to be mapped in your address space.
 */
inline jboolean ComAowagieTextDocument_get_plainRandomAccess(void);
inline jboolean ComAowagieTextDocument_set_plainRandomAccess(jboolean value);
inline jboolean *ComAowagieTextDocument_getRef_plainRandomAccess(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jboolean ComAowagieTextDocument_plainRandomAccess;
J2OBJC_STATIC_FIELD_PRIMITIVE(ComAowagieTextDocument, plainRandomAccess, jboolean)

/*!
 @brief Scales the WMF font size.The default value is 0.86.
 */
inline jfloat ComAowagieTextDocument_get_wmfFontCorrection(void);
inline jfloat ComAowagieTextDocument_set_wmfFontCorrection(jfloat value);
inline jfloat *ComAowagieTextDocument_getRef_wmfFontCorrection(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jfloat ComAowagieTextDocument_wmfFontCorrection;
J2OBJC_STATIC_FIELD_PRIMITIVE(ComAowagieTextDocument, wmfFontCorrection, jfloat)

FOUNDATION_EXPORT void ComAowagieTextDocument_init(ComAowagieTextDocument *self);

FOUNDATION_EXPORT ComAowagieTextDocument *new_ComAowagieTextDocument_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextDocument *create_ComAowagieTextDocument_init(void);

FOUNDATION_EXPORT void ComAowagieTextDocument_initWithComAowagieTextRectangle_(ComAowagieTextDocument *self, ComAowagieTextRectangle *pageSize);

FOUNDATION_EXPORT ComAowagieTextDocument *new_ComAowagieTextDocument_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *pageSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextDocument *create_ComAowagieTextDocument_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *pageSize);

FOUNDATION_EXPORT void ComAowagieTextDocument_initWithComAowagieTextRectangle_withFloat_withFloat_withFloat_withFloat_(ComAowagieTextDocument *self, ComAowagieTextRectangle *pageSize, jfloat marginLeft, jfloat marginRight, jfloat marginTop, jfloat marginBottom);

FOUNDATION_EXPORT ComAowagieTextDocument *new_ComAowagieTextDocument_initWithComAowagieTextRectangle_withFloat_withFloat_withFloat_withFloat_(ComAowagieTextRectangle *pageSize, jfloat marginLeft, jfloat marginRight, jfloat marginTop, jfloat marginBottom) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextDocument *create_ComAowagieTextDocument_initWithComAowagieTextRectangle_withFloat_withFloat_withFloat_withFloat_(ComAowagieTextRectangle *pageSize, jfloat marginLeft, jfloat marginRight, jfloat marginTop, jfloat marginBottom);

FOUNDATION_EXPORT NSString *ComAowagieTextDocument_getProduct(void);

FOUNDATION_EXPORT NSString *ComAowagieTextDocument_getRelease(void);

FOUNDATION_EXPORT NSString *ComAowagieTextDocument_getVersion(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextDocument)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextDocument")

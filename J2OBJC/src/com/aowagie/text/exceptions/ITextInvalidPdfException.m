//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/exceptions/ITextInvalidPdfException.java
//

#include "J2ObjC_source.h"
#include "com/aowagie/text/exceptions/ITextInvalidPdfException.h"
#include "java/io/IOException.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/exceptions/ITextInvalidPdfException must be compiled with ARC (-fobjc-arc)"
#endif

/*!
 @brief a serial version UID
 */
inline jlong ComAowagieTextExceptionsITextInvalidPdfException_get_serialVersionUID(void);
#define ComAowagieTextExceptionsITextInvalidPdfException_serialVersionUID -2319614911517026938LL
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextExceptionsITextInvalidPdfException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/exceptions/ITextInvalidPdfException.java"


#line 59
@implementation ComAowagieTextExceptionsITextInvalidPdfException


#line 68
- (instancetype)initWithNSString:(NSString *)message {
  ComAowagieTextExceptionsITextInvalidPdfException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComAowagieTextExceptionsITextInvalidPdfException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _ComAowagieTextExceptionsITextInvalidPdfException = { "ITextInvalidPdfException", "com.aowagie.text.exceptions", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextExceptionsITextInvalidPdfException;
}

@end


#line 68
void ComAowagieTextExceptionsITextInvalidPdfException_initWithNSString_(ComAowagieTextExceptionsITextInvalidPdfException *self, NSString *message) {
  JavaIoIOException_initWithNSString_(self, message);
}


#line 68
ComAowagieTextExceptionsITextInvalidPdfException *new_ComAowagieTextExceptionsITextInvalidPdfException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(ComAowagieTextExceptionsITextInvalidPdfException, initWithNSString_, message)
}


#line 68
ComAowagieTextExceptionsITextInvalidPdfException *create_ComAowagieTextExceptionsITextInvalidPdfException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(ComAowagieTextExceptionsITextInvalidPdfException, initWithNSString_, message)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextExceptionsITextInvalidPdfException)

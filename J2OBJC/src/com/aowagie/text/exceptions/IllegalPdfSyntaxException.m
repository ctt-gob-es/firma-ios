//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/exceptions/IllegalPdfSyntaxException.java
//

#include "J2ObjC_source.h"
#include "com/aowagie/text/exceptions/IllegalPdfSyntaxException.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/exceptions/IllegalPdfSyntaxException must be compiled with ARC (-fobjc-arc)"
#endif

/*!
 @brief Serial version ID
 */
inline jlong ComAowagieTextExceptionsIllegalPdfSyntaxException_get_serialVersionUID(void);
#define ComAowagieTextExceptionsIllegalPdfSyntaxException_serialVersionUID -643024246596031671LL
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextExceptionsIllegalPdfSyntaxException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/exceptions/IllegalPdfSyntaxException.java"


#line 56
@implementation ComAowagieTextExceptionsIllegalPdfSyntaxException


#line 65
- (instancetype)initWithNSString:(NSString *)message {
  ComAowagieTextExceptionsIllegalPdfSyntaxException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComAowagieTextExceptionsIllegalPdfSyntaxException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _ComAowagieTextExceptionsIllegalPdfSyntaxException = { "IllegalPdfSyntaxException", "com.aowagie.text.exceptions", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextExceptionsIllegalPdfSyntaxException;
}

@end


#line 65
void ComAowagieTextExceptionsIllegalPdfSyntaxException_initWithNSString_(ComAowagieTextExceptionsIllegalPdfSyntaxException *self, NSString *message) {
  JavaLangIllegalArgumentException_initWithNSString_(self, message);
}


#line 65
ComAowagieTextExceptionsIllegalPdfSyntaxException *new_ComAowagieTextExceptionsIllegalPdfSyntaxException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(ComAowagieTextExceptionsIllegalPdfSyntaxException, initWithNSString_, message)
}


#line 65
ComAowagieTextExceptionsIllegalPdfSyntaxException *create_ComAowagieTextExceptionsIllegalPdfSyntaxException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(ComAowagieTextExceptionsIllegalPdfSyntaxException, initWithNSString_, message)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextExceptionsIllegalPdfSyntaxException)

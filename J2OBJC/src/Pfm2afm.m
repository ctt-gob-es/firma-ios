//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/Pfm2afm.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "Pfm2afm.h"
#include "RandomAccessFileOrArray.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/io/OutputStreamWriter.h"
#include "java/io/PrintWriter.h"
#include "java/lang/Exception.h"
#include "java/lang/StringBuffer.h"

#if !__has_feature(objc_arc)
#error "Pfm2afm must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPfm2afm () {
 @public
  ComAowagieTextPdfRandomAccessFileOrArray *in_;
  JavaIoPrintWriter *out_;
  jshort vers_;
  jint h_len_;
  NSString *copyright_;
  jshort type_;
  jshort points_;
  jshort verres_;
  jshort horres_;
  jshort ascent_;
  jshort intleading_;
  jshort extleading_;
  jbyte italic_;
  jbyte uline_;
  jbyte overs_;
  jshort weight_;
  jbyte charset_;
  jshort pixwidth_;
  jshort pixheight_;
  jbyte kind_;
  jshort avgwidth_;
  jshort maxwidth_;
  jint firstchar_;
  jint lastchar_;
  jbyte defchar_;
  jbyte brkchar_;
  jshort widthby_;
  jint device_;
  jint face_;
  jint bits_;
  jint bitoff_;
  jshort extlen_;
  jint psext_;
  jint chartab_;
  jint res1_;
  jint kernpairs_;
  jint res2_;
  jint fontname_;
  jshort capheight_;
  jshort xheight_;
  jshort ascender_;
  jshort descender_;
  jboolean isMono_;
  /*!
   @brief Translate table from 1004 to psstd.1004 is an extension of the
  Windows translate table used in PM.
   */
  IOSIntArray *Win2PSStd_;
  /*!
   @brief Character class.This is a minor attempt to overcome the problem that
   in the pfm file, all unused characters are given the width of space.
   Note that this array isn't used in iText.
   */
  IOSIntArray *WinClass_;
  /*!
   @brief Windows character names.Give a name to the used locations
   for when the all flag is specified.
   */
  IOSObjectArray *WinChars_;
}

/*!
 @brief Creates a new instance of Pfm2afm
 @param inArg Input
 @param outArg Output
 @throw IOExceptionon error
 */
- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)inArg
                                                        withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (NSString *)readStringWithInt:(jint)n;

- (NSString *)readString;

- (void)outvalWithInt:(jint)n;

- (void)outcharWithInt:(jint)code
               withInt:(jint)width
          withNSString:(NSString *)name;

- (void)openpfm;

- (void)putheader;

- (void)putchartab;

- (void)putkerntab;

- (void)puttrailer;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPfm2afm, in_, ComAowagieTextPdfRandomAccessFileOrArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPfm2afm, out_, JavaIoPrintWriter *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPfm2afm, copyright_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPfm2afm, Win2PSStd_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPfm2afm, WinClass_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPfm2afm, WinChars_, IOSObjectArray *)

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(ComAowagieTextPdfPfm2afm *self, ComAowagieTextPdfRandomAccessFileOrArray *inArg, JavaIoOutputStream *outArg);

__attribute__((unused)) static ComAowagieTextPdfPfm2afm *new_ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(ComAowagieTextPdfRandomAccessFileOrArray *inArg, JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfPfm2afm *create_ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(ComAowagieTextPdfRandomAccessFileOrArray *inArg, JavaIoOutputStream *outArg);

__attribute__((unused)) static NSString *ComAowagieTextPdfPfm2afm_readStringWithInt_(ComAowagieTextPdfPfm2afm *self, jint n);

__attribute__((unused)) static NSString *ComAowagieTextPdfPfm2afm_readString(ComAowagieTextPdfPfm2afm *self);

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_outvalWithInt_(ComAowagieTextPdfPfm2afm *self, jint n);

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_outcharWithInt_withInt_withNSString_(ComAowagieTextPdfPfm2afm *self, jint code, jint width, NSString *name);

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_openpfm(ComAowagieTextPdfPfm2afm *self);

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_putheader(ComAowagieTextPdfPfm2afm *self);

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_putchartab(ComAowagieTextPdfPfm2afm *self);

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_putkerntab(ComAowagieTextPdfPfm2afm *self);

__attribute__((unused)) static void ComAowagieTextPdfPfm2afm_puttrailer(ComAowagieTextPdfPfm2afm *self);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/Pfm2afm.java"


#line 152
@implementation ComAowagieTextPdfPfm2afm


#line 162
- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)inArg
                                                        withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(self, inArg, outArg);
  return self;
}


#line 173
+ (void)convertWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)inArg
                                     withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  ComAowagieTextPdfPfm2afm_convertWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(inArg, outArg);
}


#line 183
+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  ComAowagieTextPdfPfm2afm_mainWithNSStringArray_(args);
}


#line 196
- (NSString *)readStringWithInt:(jint)n {
  return ComAowagieTextPdfPfm2afm_readStringWithInt_(self, n);
}


#line 208
- (NSString *)readString {
  return ComAowagieTextPdfPfm2afm_readString(self);
}


#line 220
- (void)outvalWithInt:(jint)n {
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, n);
}


#line 228
- (void)outcharWithInt:(jint)code
               withInt:(jint)width
          withNSString:(NSString *)name {
  ComAowagieTextPdfPfm2afm_outcharWithInt_withInt_withNSString_(self, code, width, name);
}


#line 240
- (void)openpfm {
  ComAowagieTextPdfPfm2afm_openpfm(self);
}


#line 288
- (void)putheader {
  ComAowagieTextPdfPfm2afm_putheader(self);
}


#line 378
- (void)putchartab {
  ComAowagieTextPdfPfm2afm_putchartab(self);
}


#line 430
- (void)putkerntab {
  ComAowagieTextPdfPfm2afm_putkerntab(self);
}


#line 466
- (void)puttrailer {
  ComAowagieTextPdfPfm2afm_puttrailer(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 5, 6, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:withJavaIoOutputStream:);
  methods[1].selector = @selector(convertWithComAowagieTextPdfRandomAccessFileOrArray:withJavaIoOutputStream:);
  methods[2].selector = @selector(mainWithNSStringArray:);
  methods[3].selector = @selector(readStringWithInt:);
  methods[4].selector = @selector(readString);
  methods[5].selector = @selector(outvalWithInt:);
  methods[6].selector = @selector(outcharWithInt:withInt:withNSString:);
  methods[7].selector = @selector(openpfm);
  methods[8].selector = @selector(putheader);
  methods[9].selector = @selector(putchartab);
  methods[10].selector = @selector(putkerntab);
  methods[11].selector = @selector(puttrailer);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LComAowagieTextPdfRandomAccessFileOrArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "out_", "LJavaIoPrintWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "vers_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "h_len_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "copyright_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "type_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "points_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "verres_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "horres_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ascent_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "intleading_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extleading_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "italic_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "uline_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "overs_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "weight_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "charset_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pixwidth_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pixheight_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "kind_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "avgwidth_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxwidth_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "firstchar_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastchar_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "defchar_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "brkchar_", "B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "widthby_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "device_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "face_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bits_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bitoff_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extlen_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "psext_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "chartab_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "res1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "kernpairs_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "res2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fontname_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "capheight_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xheight_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ascender_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "descender_", "S", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isMono_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "Win2PSStd_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "WinClass_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "WinChars_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfRandomAccessFileOrArray;LJavaIoOutputStream;", "LJavaIoIOException;", "convert", "main", "[LNSString;", "readString", "I", "outval", "outchar", "IILNSString;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPfm2afm = { "Pfm2afm", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x10, 12, 46, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPfm2afm;
}

@end


#line 162
void ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(ComAowagieTextPdfPfm2afm *self, ComAowagieTextPdfRandomAccessFileOrArray *inArg, JavaIoOutputStream *outArg) {
  NSObject_init(self);
  self->Win2PSStd_ = [IOSIntArray newArrayWithInts:(jint[]){
#line 522
    0, 0, 0, 0, 197, 198, 199, 0, 202, 0, 205, 206, 207, 0, 0, 0,
#line 523
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#line 524
    32, 33, 34, 35, 36, 37, 38, 169, 40, 41, 42, 43, 44, 45, 46, 47,
#line 525
    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
#line 526
    64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
#line 527
    80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
#line 528
    193, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
#line 529
    112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
#line 530
    0, 0, 184, 166, 185, 188, 178, 179, 195, 189, 0, 172, 234, 0, 0, 0,
#line 531
    0, 96, 0, 170, 186, 183, 177, 208, 196, 0, 0, 173, 250, 0, 0, 0,
#line 532
    0, 161, 162, 163, 168, 165, 0, 167, 200, 0, 227, 171, 0, 0, 0, 197,
#line 533
    0, 0, 0, 0, 194, 0, 182, 180, 203, 0, 235, 187, 0, 0, 0, 191,
#line 534
    0, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#line 535
    0, 0, 0, 0, 0, 0, 0, 0, 233, 0, 0, 0, 0, 0, 0, 251,
#line 536
    0, 0, 0, 0, 0, 0, 241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#line 537
    0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0, 0, 0, 0, 0, 0 } count:256];
    self->WinClass_ = [IOSIntArray newArrayWithInts:(jint[]){
#line 546
      0, 0, 0, 0, 2, 2, 2, 0, 2, 0, 2, 2, 2, 0, 0, 0,
#line 547
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#line 548
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 549
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 550
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 551
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 552
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 553
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
#line 554
      0, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0,
#line 555
      0, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 2,
#line 556
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 557
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 558
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 559
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 560
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
#line 561
      1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 } count:256];
      self->WinChars_ = [IOSObjectArray newArrayWithObjects:(id[]){
#line 569
        @"W00",
#line 570
        @"W01",
#line 571
        @"W02",
#line 572
        @"W03",
#line 573
        @"macron",
#line 574
        @"breve",
#line 575
        @"dotaccent",
#line 576
        @"W07",
#line 577
        @"ring",
#line 578
        @"W09",
#line 579
        @"W0a",
#line 580
        @"W0b",
#line 581
        @"W0c",
#line 582
        @"W0d",
#line 583
        @"W0e",
#line 584
        @"W0f",
#line 585
        @"hungarumlaut",
#line 586
        @"ogonek",
#line 587
        @"caron",
#line 588
        @"W13",
#line 589
        @"W14",
#line 590
        @"W15",
#line 591
        @"W16",
#line 592
        @"W17",
#line 593
        @"W18",
#line 594
        @"W19",
#line 595
        @"W1a",
#line 596
        @"W1b",
#line 597
        @"W1c",
#line 598
        @"W1d",
#line 599
        @"W1e",
#line 600
        @"W1f",
#line 601
        @"space",
#line 602
        @"exclam",
#line 603
        @"quotedbl",
#line 604
        @"numbersign",
#line 605
        @"dollar",
#line 606
        @"percent",
#line 607
        @"ampersand",
#line 608
        @"quotesingle",
#line 609
        @"parenleft",
#line 610
        @"parenright",
#line 611
        @"asterisk",
#line 612
        @"plus",
#line 613
        @"comma",
#line 614
        @"hyphen",
#line 615
        @"period",
#line 616
        @"slash",
#line 617
        @"zero",
#line 618
        @"one",
#line 619
        @"two",
#line 620
        @"three",
#line 621
        @"four",
#line 622
        @"five",
#line 623
        @"six",
#line 624
        @"seven",
#line 625
        @"eight",
#line 626
        @"nine",
#line 627
        @"colon",
#line 628
        @"semicolon",
#line 629
        @"less",
#line 630
        @"equal",
#line 631
        @"greater",
#line 632
        @"question",
#line 633
        @"at",
#line 634
        @"A",
#line 635
        @"B",
#line 636
        @"C",
#line 637
        @"D",
#line 638
        @"E",
#line 639
        @"F",
#line 640
        @"G",
#line 641
        @"H",
#line 642
        @"I",
#line 643
        @"J",
#line 644
        @"K",
#line 645
        @"L",
#line 646
        @"M",
#line 647
        @"N",
#line 648
        @"O",
#line 649
        @"P",
#line 650
        @"Q",
#line 651
        @"R",
#line 652
        @"S",
#line 653
        @"T",
#line 654
        @"U",
#line 655
        @"V",
#line 656
        @"W",
#line 657
        @"X",
#line 658
        @"Y",
#line 659
        @"Z",
#line 660
        @"bracketleft",
#line 661
        @"backslash",
#line 662
        @"bracketright",
#line 663
        @"asciicircum",
#line 664
        @"underscore",
#line 665
        @"grave",
#line 666
        @"a",
#line 667
        @"b",
#line 668
        @"c",
#line 669
        @"d",
#line 670
        @"e",
#line 671
        @"f",
#line 672
        @"g",
#line 673
        @"h",
#line 674
        @"i",
#line 675
        @"j",
#line 676
        @"k",
#line 677
        @"l",
#line 678
        @"m",
#line 679
        @"n",
#line 680
        @"o",
#line 681
        @"p",
#line 682
        @"q",
#line 683
        @"r",
#line 684
        @"s",
#line 685
        @"t",
#line 686
        @"u",
#line 687
        @"v",
#line 688
        @"w",
#line 689
        @"x",
#line 690
        @"y",
#line 691
        @"z",
#line 692
        @"braceleft",
#line 693
        @"bar",
#line 694
        @"braceright",
#line 695
        @"asciitilde",
#line 696
        @"W7f",
#line 697
        @"euro",
#line 698
        @"W81",
#line 699
        @"quotesinglbase",
#line 700
        @"florin",
#line 701
        @"quotedblbase",
#line 702
        @"ellipsis",
#line 703
        @"dagger",
#line 704
        @"daggerdbl",
#line 705
        @"circumflex",
#line 706
        @"perthousand",
#line 707
        @"Scaron",
#line 708
        @"guilsinglleft",
#line 709
        @"OE",
#line 710
        @"W8d",
#line 711
        @"Zcaron",
#line 712
        @"W8f",
#line 713
        @"W90",
#line 714
        @"quoteleft",
#line 715
        @"quoteright",
#line 716
        @"quotedblleft",
#line 717
        @"quotedblright",
#line 718
        @"bullet",
#line 719
        @"endash",
#line 720
        @"emdash",
#line 721
        @"tilde",
#line 722
        @"trademark",
#line 723
        @"scaron",
#line 724
        @"guilsinglright",
#line 725
        @"oe",
#line 726
        @"W9d",
#line 727
        @"zcaron",
#line 728
        @"Ydieresis",
#line 729
        @"reqspace",
#line 730
        @"exclamdown",
#line 731
        @"cent",
#line 732
        @"sterling",
#line 733
        @"currency",
#line 734
        @"yen",
#line 735
        @"brokenbar",
#line 736
        @"section",
#line 737
        @"dieresis",
#line 738
        @"copyright",
#line 739
        @"ordfeminine",
#line 740
        @"guillemotleft",
#line 741
        @"logicalnot",
#line 742
        @"syllable",
#line 743
        @"registered",
#line 744
        @"macron",
#line 745
        @"degree",
#line 746
        @"plusminus",
#line 747
        @"twosuperior",
#line 748
        @"threesuperior",
#line 749
        @"acute",
#line 750
        @"mu",
#line 751
        @"paragraph",
#line 752
        @"periodcentered",
#line 753
        @"cedilla",
#line 754
        @"onesuperior",
#line 755
        @"ordmasculine",
#line 756
        @"guillemotright",
#line 757
        @"onequarter",
#line 758
        @"onehalf",
#line 759
        @"threequarters",
#line 760
        @"questiondown",
#line 761
        @"Agrave",
#line 762
        @"Aacute",
#line 763
        @"Acircumflex",
#line 764
        @"Atilde",
#line 765
        @"Adieresis",
#line 766
        @"Aring",
#line 767
        @"AE",
#line 768
        @"Ccedilla",
#line 769
        @"Egrave",
#line 770
        @"Eacute",
#line 771
        @"Ecircumflex",
#line 772
        @"Edieresis",
#line 773
        @"Igrave",
#line 774
        @"Iacute",
#line 775
        @"Icircumflex",
#line 776
        @"Idieresis",
#line 777
        @"Eth",
#line 778
        @"Ntilde",
#line 779
        @"Ograve",
#line 780
        @"Oacute",
#line 781
        @"Ocircumflex",
#line 782
        @"Otilde",
#line 783
        @"Odieresis",
#line 784
        @"multiply",
#line 785
        @"Oslash",
#line 786
        @"Ugrave",
#line 787
        @"Uacute",
#line 788
        @"Ucircumflex",
#line 789
        @"Udieresis",
#line 790
        @"Yacute",
#line 791
        @"Thorn",
#line 792
        @"germandbls",
#line 793
        @"agrave",
#line 794
        @"aacute",
#line 795
        @"acircumflex",
#line 796
        @"atilde",
#line 797
        @"adieresis",
#line 798
        @"aring",
#line 799
        @"ae",
#line 800
        @"ccedilla",
#line 801
        @"egrave",
#line 802
        @"eacute",
#line 803
        @"ecircumflex",
#line 804
        @"edieresis",
#line 805
        @"igrave",
#line 806
        @"iacute",
#line 807
        @"icircumflex",
#line 808
        @"idieresis",
#line 809
        @"eth",
#line 810
        @"ntilde",
#line 811
        @"ograve",
#line 812
        @"oacute",
#line 813
        @"ocircumflex",
#line 814
        @"otilde",
#line 815
        @"odieresis",
#line 816
        @"divide",
#line 817
        @"oslash",
#line 818
        @"ugrave",
#line 819
        @"uacute",
#line 820
        @"ucircumflex",
#line 821
        @"udieresis",
#line 822
        @"yacute",
#line 823
        @"thorn",
#line 824
        @"ydieresis" } count:256 type:NSString_class_()];
        
#line 163
        self->in_ = inArg;
        self->out_ = new_JavaIoPrintWriter_initWithJavaIoWriter_(new_JavaIoOutputStreamWriter_initWithJavaIoOutputStream_withNSString_(outArg, @"ISO-8859-1"));
      }


#line 162
ComAowagieTextPdfPfm2afm *new_ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(ComAowagieTextPdfRandomAccessFileOrArray *inArg, JavaIoOutputStream *outArg) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPfm2afm, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_, inArg, outArg)
}


#line 162
ComAowagieTextPdfPfm2afm *create_ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(ComAowagieTextPdfRandomAccessFileOrArray *inArg, JavaIoOutputStream *outArg) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPfm2afm, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_, inArg, outArg)
}


#line 173
void ComAowagieTextPdfPfm2afm_convertWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(ComAowagieTextPdfRandomAccessFileOrArray *inArg, JavaIoOutputStream *outArg) {
  ComAowagieTextPdfPfm2afm_initialize();
  
#line 174
  ComAowagieTextPdfPfm2afm *p = new_ComAowagieTextPdfPfm2afm_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(inArg, outArg);
  ComAowagieTextPdfPfm2afm_openpfm(p);
  ComAowagieTextPdfPfm2afm_putheader(p);
  ComAowagieTextPdfPfm2afm_putchartab(p);
  ComAowagieTextPdfPfm2afm_putkerntab(p);
  ComAowagieTextPdfPfm2afm_puttrailer(p);
  [((JavaIoPrintWriter *) nil_chk(p->out_)) flush];
}


#line 183
void ComAowagieTextPdfPfm2afm_mainWithNSStringArray_(IOSObjectArray *args) {
  ComAowagieTextPdfPfm2afm_initialize();
  
#line 184
  @try {
    ComAowagieTextPdfRandomAccessFileOrArray *in = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithNSString_(IOSObjectArray_Get(nil_chk(args), 0));
    JavaIoOutputStream *out = new_JavaIoFileOutputStream_initWithNSString_(IOSObjectArray_Get(args, 1));
    ComAowagieTextPdfPfm2afm_convertWithComAowagieTextPdfRandomAccessFileOrArray_withJavaIoOutputStream_(in, out);
    [in close];
    [out close];
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
  }
}


#line 196
NSString *ComAowagieTextPdfPfm2afm_readStringWithInt_(ComAowagieTextPdfPfm2afm *self, jint n) {
  IOSByteArray *b = [IOSByteArray newArrayWithLength:n];
  [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->in_)) readFullyWithByteArray:b];
  jint k;
  for (k = 0; k < b->size_; ++k) {
    if (IOSByteArray_Get(b, k) == 0) {
      break;
    }
  }
  return [NSString java_stringWithBytes:b offset:0 length:k charsetName:@"ISO-8859-1"];
}

NSString *ComAowagieTextPdfPfm2afm_readString(ComAowagieTextPdfPfm2afm *self) {
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  while (true) {
    jint c = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->in_)) read];
    if (c <= 0) {
      break;
    }
    (void) [buf appendWithChar:(jchar) c];
  }
  return [buf description];
}

void ComAowagieTextPdfPfm2afm_outvalWithInt_(ComAowagieTextPdfPfm2afm *self, jint n) {
  [((JavaIoPrintWriter *) nil_chk(self->out_)) printWithChar:' '];
  [self->out_ printWithInt:n];
}


#line 228
void ComAowagieTextPdfPfm2afm_outcharWithInt_withInt_withNSString_(ComAowagieTextPdfPfm2afm *self, jint code, jint width, NSString *name) {
  [((JavaIoPrintWriter *) nil_chk(self->out_)) printWithNSString:@"C "];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, code);
  [self->out_ printWithNSString:@" ; WX "];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, width);
  if (name != nil) {
    [self->out_ printWithNSString:@" ; N "];
    [self->out_ printWithNSString:name];
  }
  [self->out_ printWithNSString:@" ;\n"];
}

void ComAowagieTextPdfPfm2afm_openpfm(ComAowagieTextPdfPfm2afm *self) {
  [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->in_)) seekWithInt:0];
  self->vers_ = [self->in_ readShortLE];
  self->h_len_ = [self->in_ readIntLE];
  self->copyright_ = ComAowagieTextPdfPfm2afm_readStringWithInt_(self, 60);
  self->type_ = [self->in_ readShortLE];
  self->points_ = [self->in_ readShortLE];
  self->verres_ = [self->in_ readShortLE];
  self->horres_ = [self->in_ readShortLE];
  self->ascent_ = [self->in_ readShortLE];
  self->intleading_ = [self->in_ readShortLE];
  self->extleading_ = [self->in_ readShortLE];
  self->italic_ = (jbyte) [self->in_ read];
  self->uline_ = (jbyte) [self->in_ read];
  self->overs_ = (jbyte) [self->in_ read];
  self->weight_ = [self->in_ readShortLE];
  self->charset_ = (jbyte) [self->in_ read];
  self->pixwidth_ = [self->in_ readShortLE];
  self->pixheight_ = [self->in_ readShortLE];
  self->kind_ = (jbyte) [self->in_ read];
  self->avgwidth_ = [self->in_ readShortLE];
  self->maxwidth_ = [self->in_ readShortLE];
  self->firstchar_ = [self->in_ read];
  self->lastchar_ = [self->in_ read];
  self->defchar_ = (jbyte) [self->in_ read];
  self->brkchar_ = (jbyte) [self->in_ read];
  self->widthby_ = [self->in_ readShortLE];
  self->device_ = [self->in_ readIntLE];
  self->face_ = [self->in_ readIntLE];
  self->bits_ = [self->in_ readIntLE];
  self->bitoff_ = [self->in_ readIntLE];
  self->extlen_ = [self->in_ readShortLE];
  self->psext_ = [self->in_ readIntLE];
  self->chartab_ = [self->in_ readIntLE];
  self->res1_ = [self->in_ readIntLE];
  self->kernpairs_ = [self->in_ readIntLE];
  self->res2_ = [self->in_ readIntLE];
  self->fontname_ = [self->in_ readIntLE];
  if (self->h_len_ != [self->in_ length] || self->extlen_ != 30 || self->fontname_ < 75 || self->fontname_ > 512) {
    @throw new_JavaIoIOException_initWithNSString_(@"Not a valid PFM file.");
  }
  [self->in_ seekWithInt:self->psext_ + 14];
  self->capheight_ = [self->in_ readShortLE];
  self->xheight_ = [self->in_ readShortLE];
  self->ascender_ = [self->in_ readShortLE];
  self->descender_ = [self->in_ readShortLE];
}

void ComAowagieTextPdfPfm2afm_putheader(ComAowagieTextPdfPfm2afm *self) {
  [((JavaIoPrintWriter *) nil_chk(self->out_)) printWithNSString:@"StartFontMetrics 2.0\n"];
  if ([((NSString *) nil_chk(self->copyright_)) java_length] > 0) {
    [self->out_ printWithNSString:JreStrcat("$$C", @"Comment ", self->copyright_, 0x000a)];
  }
  [self->out_ printWithNSString:@"FontName "];
  [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->in_)) seekWithInt:self->fontname_];
  NSString *fname = ComAowagieTextPdfPfm2afm_readString(self);
  [self->out_ printWithNSString:fname];
  [self->out_ printWithNSString:@"\nEncodingScheme "];
  if (self->charset_ != 0) {
    [self->out_ printWithNSString:@"FontSpecific\n"];
  }
  else {
    
#line 301
    [self->out_ printWithNSString:@"AdobeStandardEncoding\n"];
  }
  
#line 308
  [self->out_ printWithNSString:JreStrcat("$$", @"FullName ", [((NSString *) nil_chk(fname)) java_replace:'-' withChar:' '])];
  if (self->face_ != 0) {
    [self->in_ seekWithInt:self->face_];
    [self->out_ printWithNSString:JreStrcat("$$", @"\nFamilyName ", ComAowagieTextPdfPfm2afm_readString(self))];
  }
  
#line 314
  [self->out_ printWithNSString:@"\nWeight "];
  if (self->weight_ > 475 || [((NSString *) nil_chk([fname lowercaseString])) java_indexOfString:@"bold"] >= 0) {
    [self->out_ printWithNSString:@"Bold"];
  }
  else
#line 317
  if ((self->weight_ < 325 && self->weight_ != 0) || [((NSString *) nil_chk([fname lowercaseString])) java_indexOfString:@"light"] >= 0) {
    [self->out_ printWithNSString:@"Light"];
  }
  else
#line 319
  if ([((NSString *) nil_chk([fname lowercaseString])) java_indexOfString:@"black"] >= 0) {
    [self->out_ printWithNSString:@"Black"];
  }
  else {
    
#line 322
    [self->out_ printWithNSString:@"Medium"];
  }
  
#line 325
  [self->out_ printWithNSString:@"\nItalicAngle "];
  if (self->italic_ != 0 || [((NSString *) nil_chk([fname lowercaseString])) java_indexOfString:@"italic"] >= 0) {
    [self->out_ printWithNSString:@"-12.00"];
  }
  else {
    
#line 331
    [self->out_ printWithNSString:@"0"];
  }
  
#line 338
  [self->out_ printWithNSString:@"\nIsFixedPitch "];
  if ((self->kind_ & 1) == 0 ||
#line 340
  self->avgwidth_ == self->maxwidth_) {
    [self->out_ printWithNSString:@"true"];
    self->isMono_ = true;
  }
  else {
    [self->out_ printWithNSString:@"false"];
    self->isMono_ = false;
  }
  
#line 354
  [self->out_ printWithNSString:@"\nFontBBox"];
  if (self->isMono_) {
    ComAowagieTextPdfPfm2afm_outvalWithInt_(self, -20);
  }
  else {
    
#line 358
    ComAowagieTextPdfPfm2afm_outvalWithInt_(self, -100);
  }
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, -(self->descender_ + 5));
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, self->maxwidth_ + 10);
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, self->ascent_ + 5);
  
#line 367
  [self->out_ printWithNSString:@"\nCapHeight"];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, self->capheight_);
  [self->out_ printWithNSString:@"\nXHeight"];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, self->xheight_);
  [self->out_ printWithNSString:@"\nDescender"];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, self->descender_);
  [self->out_ printWithNSString:@"\nAscender"];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, self->ascender_);
  [self->out_ printWithChar:0x000a];
}


#line 378
void ComAowagieTextPdfPfm2afm_putchartab(ComAowagieTextPdfPfm2afm *self) {
  jint count = self->lastchar_ - self->firstchar_ + 1;
  IOSIntArray *ctabs = [IOSIntArray newArrayWithLength:count];
  [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->in_)) seekWithInt:self->chartab_];
  for (jint k = 0; k < count; ++k) {
    *IOSIntArray_GetRef(ctabs, k) = [self->in_ readUnsignedShortLE];
  }
  IOSIntArray *back = [IOSIntArray newArrayWithLength:256];
  if (self->charset_ == 0) {
    for (jint i = self->firstchar_; i <= self->lastchar_; ++i) {
      if (IOSIntArray_Get(nil_chk(self->Win2PSStd_), i) != 0) {
        *IOSIntArray_GetRef(back, IOSIntArray_Get(self->Win2PSStd_, i)) = i;
      }
    }
  }
  
#line 394
  [((JavaIoPrintWriter *) nil_chk(self->out_)) printWithNSString:@"StartCharMetrics"];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, count);
  [self->out_ printWithChar:0x000a];
  
#line 399
  if (self->charset_ != 0) {
    
#line 404
    for (jint i = self->firstchar_; i <= self->lastchar_; i++) {
      if (IOSIntArray_Get(ctabs, i - self->firstchar_) != 0) {
        ComAowagieTextPdfPfm2afm_outcharWithInt_withInt_withNSString_(self, i, IOSIntArray_Get(ctabs, i - self->firstchar_), nil);
      }
    }
  }
  else {
    for (jint i = 0; i < 256; i++) {
      jint j = IOSIntArray_Get(back, i);
      if (j != 0) {
        ComAowagieTextPdfPfm2afm_outcharWithInt_withInt_withNSString_(self, i, IOSIntArray_Get(ctabs, j - self->firstchar_), IOSObjectArray_Get(nil_chk(self->WinChars_), j));
        *IOSIntArray_GetRef(ctabs, j - self->firstchar_) = 0;
      }
    }
    
#line 419
    for (jint i = self->firstchar_; i <= self->lastchar_; i++) {
      if (IOSIntArray_Get(ctabs, i - self->firstchar_) != 0) {
        ComAowagieTextPdfPfm2afm_outcharWithInt_withInt_withNSString_(self, -1, IOSIntArray_Get(ctabs, i - self->firstchar_), IOSObjectArray_Get(nil_chk(self->WinChars_), i));
      }
    }
  }
  
#line 426
  [self->out_ printWithNSString:@"EndCharMetrics\n"];
}

void ComAowagieTextPdfPfm2afm_putkerntab(ComAowagieTextPdfPfm2afm *self) {
  if (self->kernpairs_ == 0) {
    return;
  }
  [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->in_)) seekWithInt:self->kernpairs_];
  jint count = [self->in_ readUnsignedShortLE];
  jint nzero = 0;
  IOSIntArray *kerns = [IOSIntArray newArrayWithLength:count * 3];
  for (jint k = 0; k < kerns->size_; ) {
    *IOSIntArray_GetRef(kerns, k++) = [self->in_ read];
    *IOSIntArray_GetRef(kerns, k++) = [self->in_ read];
    if ((*IOSIntArray_GetRef(kerns, k++) = [self->in_ readShortLE]) != 0) {
      ++nzero;
    }
  }
  if (nzero == 0) {
    return;
  }
  [((JavaIoPrintWriter *) nil_chk(self->out_)) printWithNSString:@"StartKernData\nStartKernPairs"];
  ComAowagieTextPdfPfm2afm_outvalWithInt_(self, nzero);
  [self->out_ printWithChar:0x000a];
  for (jint k = 0; k < kerns->size_; k += 3) {
    if (IOSIntArray_Get(kerns, k + 2) != 0) {
      [self->out_ printWithNSString:@"KPX "];
      [self->out_ printWithNSString:IOSObjectArray_Get(nil_chk(self->WinChars_), IOSIntArray_Get(kerns, k))];
      [self->out_ printWithChar:' '];
      [self->out_ printWithNSString:IOSObjectArray_Get(self->WinChars_, IOSIntArray_Get(kerns, k + 1))];
      ComAowagieTextPdfPfm2afm_outvalWithInt_(self, IOSIntArray_Get(kerns, k + 2));
      [self->out_ printWithChar:0x000a];
    }
  }
  
#line 462
  [self->out_ printWithNSString:@"EndKernPairs\nEndKernData\n"];
}

void ComAowagieTextPdfPfm2afm_puttrailer(ComAowagieTextPdfPfm2afm *self) {
  [((JavaIoPrintWriter *) nil_chk(self->out_)) printWithNSString:@"EndFontMetrics\n"];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPfm2afm)

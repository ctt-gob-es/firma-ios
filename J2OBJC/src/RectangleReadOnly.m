//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/RectangleReadOnly.java
//

#include "Color.h"
#include "J2ObjC_source.h"
#include "Rectangle.h"
#include "RectangleReadOnly.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/UnsupportedOperationException.h"

#if !__has_feature(objc_arc)
#error "RectangleReadOnly must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextRectangleReadOnly ()

/*!
 @brief Throws an error because of the read only nature of this object.
 */
- (void)throwReadOnlyError;

@end

__attribute__((unused)) static void ComAowagieTextRectangleReadOnly_throwReadOnlyError(ComAowagieTextRectangleReadOnly *self);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/RectangleReadOnly.java"


#line 70
@implementation ComAowagieTextRectangleReadOnly


#line 81
- (instancetype)initPackagePrivateWithFloat:(jfloat)urx
                                  withFloat:(jfloat)ury {
  ComAowagieTextRectangleReadOnly_initPackagePrivateWithFloat_withFloat_(self, urx, ury);
  return self;
}


#line 88
- (void)throwReadOnlyError {
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 99
- (void)setLeftWithFloat:(jfloat)llx {
  
#line 101
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 110
- (void)setRightWithFloat:(jfloat)urx {
  
#line 112
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 120
- (void)setTopWithFloat:(jfloat)ury {
  
#line 122
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 130
- (void)setBottomWithFloat:(jfloat)lly {
  
#line 132
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 139
- (void)normalize {
  
#line 141
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 151
- (void)setBackgroundColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)value {
  
#line 153
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 161
- (void)setGrayFillWithFloat:(jfloat)value {
  
#line 163
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 177
- (void)setBorderWithInt:(jint)border {
  
#line 179
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 187
- (void)setUseVariableBordersWithBoolean:(jboolean)useVariableBorders {
  
#line 189
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 198
- (void)enableBorderSideWithInt:(jint)side {
  
#line 200
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 209
- (void)disableBorderSideWithInt:(jint)side {
  
#line 211
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 222
- (void)setBorderWidthWithFloat:(jfloat)borderWidth {
  
#line 224
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 232
- (void)setBorderWidthLeftWithFloat:(jfloat)borderWidthLeft {
  
#line 234
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 242
- (void)setBorderWidthRightWithFloat:(jfloat)borderWidthRight {
  
#line 244
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 252
- (void)setBorderWidthTopWithFloat:(jfloat)borderWidthTop {
  
#line 254
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 262
- (void)setBorderWidthBottomWithFloat:(jfloat)borderWidthBottom {
  
#line 264
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 275
- (void)setBorderColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColor {
  
#line 277
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 285
- (void)setBorderColorLeftWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorLeft {
  
#line 287
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 295
- (void)setBorderColorRightWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorRight {
  
#line 297
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 305
- (void)setBorderColorTopWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorTop {
  
#line 307
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 315
- (void)setBorderColorBottomWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorBottom {
  
#line 317
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 328
- (void)cloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect {
  
#line 330
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 339
- (void)softCloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect {
  
#line 341
  ComAowagieTextRectangleReadOnly_throwReadOnlyError(self);
}


#line 348
- (NSString *)description {
  
#line 350
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithNSString_(@"RectangleReadOnly: ");
  (void) [buf appendWithFloat:[self getWidth]];
  (void) [buf appendWithChar:'x'];
  (void) [buf appendWithFloat:[self getHeight]];
  (void) [buf appendWithNSString:@" (rot: "];
  (void) [buf appendWithInt:self->rotation_];
  (void) [buf appendWithNSString:@" degrees)"];
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 26, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 28, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithFloat:withFloat:);
  methods[1].selector = @selector(throwReadOnlyError);
  methods[2].selector = @selector(setLeftWithFloat:);
  methods[3].selector = @selector(setRightWithFloat:);
  methods[4].selector = @selector(setTopWithFloat:);
  methods[5].selector = @selector(setBottomWithFloat:);
  methods[6].selector = @selector(normalize);
  methods[7].selector = @selector(setBackgroundColorWithHarmonyJavaAwtColor:);
  methods[8].selector = @selector(setGrayFillWithFloat:);
  methods[9].selector = @selector(setBorderWithInt:);
  methods[10].selector = @selector(setUseVariableBordersWithBoolean:);
  methods[11].selector = @selector(enableBorderSideWithInt:);
  methods[12].selector = @selector(disableBorderSideWithInt:);
  methods[13].selector = @selector(setBorderWidthWithFloat:);
  methods[14].selector = @selector(setBorderWidthLeftWithFloat:);
  methods[15].selector = @selector(setBorderWidthRightWithFloat:);
  methods[16].selector = @selector(setBorderWidthTopWithFloat:);
  methods[17].selector = @selector(setBorderWidthBottomWithFloat:);
  methods[18].selector = @selector(setBorderColorWithHarmonyJavaAwtColor:);
  methods[19].selector = @selector(setBorderColorLeftWithHarmonyJavaAwtColor:);
  methods[20].selector = @selector(setBorderColorRightWithHarmonyJavaAwtColor:);
  methods[21].selector = @selector(setBorderColorTopWithHarmonyJavaAwtColor:);
  methods[22].selector = @selector(setBorderColorBottomWithHarmonyJavaAwtColor:);
  methods[23].selector = @selector(cloneNonPositionParametersWithComAowagieTextRectangle:);
  methods[24].selector = @selector(softCloneNonPositionParametersWithComAowagieTextRectangle:);
  methods[25].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "FF", "setLeft", "F", "setRight", "setTop", "setBottom", "setBackgroundColor", "LHarmonyJavaAwtColor;", "setGrayFill", "setBorder", "I", "setUseVariableBorders", "Z", "enableBorderSide", "disableBorderSide", "setBorderWidth", "setBorderWidthLeft", "setBorderWidthRight", "setBorderWidthTop", "setBorderWidthBottom", "setBorderColor", "setBorderColorLeft", "setBorderColorRight", "setBorderColorTop", "setBorderColorBottom", "cloneNonPositionParameters", "LComAowagieTextRectangle;", "softCloneNonPositionParameters", "toString" };
  static const J2ObjcClassInfo _ComAowagieTextRectangleReadOnly = { "RectangleReadOnly", "com.aowagie.text", ptrTable, methods, NULL, 7, 0x0, 26, 0, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextRectangleReadOnly;
}

@end


#line 81
void ComAowagieTextRectangleReadOnly_initPackagePrivateWithFloat_withFloat_(ComAowagieTextRectangleReadOnly *self, jfloat urx, jfloat ury) {
  ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(self, 0, 0, urx, ury);
}


#line 81
ComAowagieTextRectangleReadOnly *new_ComAowagieTextRectangleReadOnly_initPackagePrivateWithFloat_withFloat_(jfloat urx, jfloat ury) {
  J2OBJC_NEW_IMPL(ComAowagieTextRectangleReadOnly, initPackagePrivateWithFloat_withFloat_, urx, ury)
}


#line 81
ComAowagieTextRectangleReadOnly *create_ComAowagieTextRectangleReadOnly_initPackagePrivateWithFloat_withFloat_(jfloat urx, jfloat ury) {
  J2OBJC_CREATE_IMPL(ComAowagieTextRectangleReadOnly, initPackagePrivateWithFloat_withFloat_, urx, ury)
}


#line 88
void ComAowagieTextRectangleReadOnly_throwReadOnlyError(ComAowagieTextRectangleReadOnly *self) {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"RectangleReadOnly: this Rectangle is read only.");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextRectangleReadOnly)

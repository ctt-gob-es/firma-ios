//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/OfficeAnalizer.java
//

#include "AOFileUtils.h"
#include "AOUtil.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OfficeAnalizer.h"
#include "SecureXmlBuilder.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/nio/file/Files.h"
#include "java/nio/file/Path.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/logging/Logger.h"
#include "java/util/zip/ZipEntry.h"
#include "java/util/zip/ZipException.h"
#include "java/util/zip/ZipFile.h"
#include "javax/xml/parsers/DocumentBuilder.h"
#include "org/w3c/dom/Document.h"
#include "org/w3c/dom/Element.h"
#include "org/w3c/dom/NamedNodeMap.h"
#include "org/w3c/dom/Node.h"
#include "org/w3c/dom/NodeList.h"

#if !__has_feature(objc_arc)
#error "OfficeAnalizer must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreMiscOfficeAnalizer ()

- (instancetype)init;

+ (NSString *)getMimeTypeOffice97WithByteArray:(IOSByteArray *)data;

/*!
 @brief Indica si un fichero Zip tiene la estructura de un documento OOXML
  soportado.
 @param zipFile Fichero Zip que deseamos comprobar.
 @return Devuelve <code>true</code> si el fichero era un OOXML soportado, <code>false</code> en caso contrario.
 @throw IOExceptionError en el tama&ntilde;o permitido del archivo
 */
+ (jboolean)isOOXMLFileWithJavaUtilZipZipFile:(JavaUtilZipZipFile *)zipFile;

/*!
 @brief Indica si un fichero Zip tiene la estructura de un documento ODF
  soportado.
 @param zipFile Fichero Zip que deseamos comprobar.
 @return Devuelve <code>true</code> si el fichero era un ODF soportado, <code>false</code> en caso contrario.
 @throw IOExceptionError en el tama&ntilde;o permitido del archivo
 */
+ (jboolean)isODFFileWithJavaUtilZipZipFile:(JavaUtilZipZipFile *)zipFile;

/*!
 @brief Recupera la extensi&oacute;n apropiada para un documento ODF.Si el
  fichero no era un documento ODF soportado, se devolver&aacute; <code>null</code>.
 @param contentTypeIs Fichero del que deseamos obtener la extensi &oacute; n.
 @return Extensi&oacute;n del documento.
 */
+ (NSString *)getODFMimeTypeWithJavaIoInputStream:(JavaIoInputStream *)contentTypeIs;

@end

inline NSString *EsGobAfirmaCoreMiscOfficeAnalizer_get_ZIP_MIMETYPE(void);
static NSString *EsGobAfirmaCoreMiscOfficeAnalizer_ZIP_MIMETYPE = @"application/zip";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscOfficeAnalizer, ZIP_MIMETYPE, NSString *)

inline JavaUtilLoggingLogger *EsGobAfirmaCoreMiscOfficeAnalizer_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscOfficeAnalizer, LOGGER, JavaUtilLoggingLogger *)

/*!
 @brief MimeTypes reconocidos del formato OOXML.
 */
inline id<JavaUtilSet> EsGobAfirmaCoreMiscOfficeAnalizer_get_OOXML_MIMETYPES(void);
static id<JavaUtilSet> EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscOfficeAnalizer, OOXML_MIMETYPES, id<JavaUtilSet>)

/*!
 @brief MimeTypes reconocidos del formato ODF.
 */
inline id<JavaUtilSet> EsGobAfirmaCoreMiscOfficeAnalizer_get_ODF_MIMETYPES(void);
static id<JavaUtilSet> EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscOfficeAnalizer, ODF_MIMETYPES, id<JavaUtilSet>)

/*!
 @brief Extensiones de fichero asignadas a cada uno de los mimetypes.
 */
inline id<JavaUtilMap> EsGobAfirmaCoreMiscOfficeAnalizer_get_FILE_EXTENSIONS(void);
static id<JavaUtilMap> EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscOfficeAnalizer, FILE_EXTENSIONS, id<JavaUtilMap>)

/*!
 @brief Descripciones de fichero asignadas a cada uno de los mimetypes.
 */
inline id<JavaUtilMap> EsGobAfirmaCoreMiscOfficeAnalizer_get_FILE_DESCRIPTIONS(void);
static id<JavaUtilMap> EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscOfficeAnalizer, FILE_DESCRIPTIONS, id<JavaUtilMap>)

inline jlong EsGobAfirmaCoreMiscOfficeAnalizer_get_THRESHOLD_FILE_SIZE(void);
#define EsGobAfirmaCoreMiscOfficeAnalizer_THRESHOLD_FILE_SIZE 1000000000LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreMiscOfficeAnalizer, THRESHOLD_FILE_SIZE, jlong)

__attribute__((unused)) static void EsGobAfirmaCoreMiscOfficeAnalizer_init(EsGobAfirmaCoreMiscOfficeAnalizer *self);

__attribute__((unused)) static EsGobAfirmaCoreMiscOfficeAnalizer *new_EsGobAfirmaCoreMiscOfficeAnalizer_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreMiscOfficeAnalizer *create_EsGobAfirmaCoreMiscOfficeAnalizer_init(void);

__attribute__((unused)) static NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeOffice97WithByteArray_(IOSByteArray *data);

__attribute__((unused)) static jboolean EsGobAfirmaCoreMiscOfficeAnalizer_isOOXMLFileWithJavaUtilZipZipFile_(JavaUtilZipZipFile *zipFile);

__attribute__((unused)) static jboolean EsGobAfirmaCoreMiscOfficeAnalizer_isODFFileWithJavaUtilZipZipFile_(JavaUtilZipZipFile *zipFile);

__attribute__((unused)) static NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getODFMimeTypeWithJavaIoInputStream_(JavaIoInputStream *contentTypeIs);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/OfficeAnalizer.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreMiscOfficeAnalizer)


#line 31
@implementation EsGobAfirmaCoreMiscOfficeAnalizer

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 33
- (instancetype)init {
  EsGobAfirmaCoreMiscOfficeAnalizer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 145
+ (NSString *)getMimeTypeWithByteArray:(IOSByteArray *)data {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeWithByteArray_(data);
}


#line 195
+ (NSString *)getMimeTypeOffice97WithByteArray:(IOSByteArray *)data {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeOffice97WithByteArray_(data);
}


#line 225
+ (NSString *)getExtensionWithByteArray:(IOSByteArray *)zipData {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getExtensionWithByteArray_(zipData);
}


#line 234
+ (NSString *)getExtensionWithNSString:(NSString *)mimetype {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getExtensionWithNSString_(mimetype);
}


#line 248
+ (NSString *)getDescriptionWithByteArray:(IOSByteArray *)zipData {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getDescriptionWithByteArray_(zipData);
}


#line 257
+ (NSString *)getDescriptionWithNSString:(NSString *)mimetype {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getDescriptionWithNSString_(mimetype);
}


#line 268
+ (jboolean)isOOXMLDocumentWithByteArray:(IOSByteArray *)document {
  return EsGobAfirmaCoreMiscOfficeAnalizer_isOOXMLDocumentWithByteArray_(document);
}


#line 299
+ (jboolean)isOOXMLFileWithJavaUtilZipZipFile:(JavaUtilZipZipFile *)zipFile {
  return EsGobAfirmaCoreMiscOfficeAnalizer_isOOXMLFileWithJavaUtilZipZipFile_(zipFile);
}


#line 311
+ (NSString *)getOOXMLMimeTypeWithJavaIoInputStream:(JavaIoInputStream *)contentTypeIs {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getOOXMLMimeTypeWithJavaIoInputStream_(contentTypeIs);
}


#line 361
+ (jboolean)isODFDocumentWithByteArray:(IOSByteArray *)document {
  return EsGobAfirmaCoreMiscOfficeAnalizer_isODFDocumentWithByteArray_(document);
}


#line 392
+ (jboolean)isODFFileWithJavaUtilZipZipFile:(JavaUtilZipZipFile *)zipFile {
  return EsGobAfirmaCoreMiscOfficeAnalizer_isODFFileWithJavaUtilZipZipFile_(zipFile);
}


#line 421
+ (NSString *)getODFMimeTypeWithJavaIoInputStream:(JavaIoInputStream *)contentTypeIs {
  return EsGobAfirmaCoreMiscOfficeAnalizer_getODFMimeTypeWithJavaIoInputStream_(contentTypeIs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 3, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 4, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 6, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 6, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 7, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 8, 9, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 12, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0xa, 13, 9, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 14, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMimeTypeWithByteArray:);
  methods[2].selector = @selector(getMimeTypeOffice97WithByteArray:);
  methods[3].selector = @selector(getExtensionWithByteArray:);
  methods[4].selector = @selector(getExtensionWithNSString:);
  methods[5].selector = @selector(getDescriptionWithByteArray:);
  methods[6].selector = @selector(getDescriptionWithNSString:);
  methods[7].selector = @selector(isOOXMLDocumentWithByteArray:);
  methods[8].selector = @selector(isOOXMLFileWithJavaUtilZipZipFile:);
  methods[9].selector = @selector(getOOXMLMimeTypeWithJavaIoInputStream:);
  methods[10].selector = @selector(isODFDocumentWithByteArray:);
  methods[11].selector = @selector(isODFFileWithJavaUtilZipZipFile:);
  methods[12].selector = @selector(getODFMimeTypeWithJavaIoInputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZIP_MIMETYPE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "OOXML_MIMETYPES", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 17, 18, -1 },
    { "ODF_MIMETYPES", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 19, 18, -1 },
    { "FILE_EXTENSIONS", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 20, 21, -1 },
    { "FILE_DESCRIPTIONS", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 22, 21, -1 },
    { "THRESHOLD_FILE_SIZE", "J", .constantValue.asLong = EsGobAfirmaCoreMiscOfficeAnalizer_THRESHOLD_FILE_SIZE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getMimeType", "[B", "LJavaIoIOException;", "getMimeTypeOffice97", "getExtension", "LNSString;", "getDescription", "isOOXMLDocument", "isOOXMLFile", "LJavaUtilZipZipFile;", "getOOXMLMimeType", "LJavaIoInputStream;", "isODFDocument", "isODFFile", "getODFMimeType", &EsGobAfirmaCoreMiscOfficeAnalizer_ZIP_MIMETYPE, &EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER, &EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES, "Ljava/util/Set<Ljava/lang/String;>;", &EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES, &EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", &EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscOfficeAnalizer = { "OfficeAnalizer", "es.gob.afirma.core.misc", ptrTable, methods, fields, 7, 0x11, 13, 7, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreMiscOfficeAnalizer;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreMiscOfficeAnalizer class]) {
    EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 39
    @"es.gob.afirma");
    EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES = new_JavaUtilHashSet_initWithInt_(
#line 42
    17);
    EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES = new_JavaUtilHashSet_initWithInt_(
#line 45
    15);
    EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS = new_JavaUtilHashMap_init();
    EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS = new_JavaUtilHashMap_init();
    {
      
#line 57
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-word.document.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.openxmlformats-officedocument.wordprocessingml.document"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-word.template.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.openxmlformats-officedocument.wordprocessingml.template"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-powerpoint.template.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.openxmlformats-officedocument.presentationml.template"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-powerpoint.addin.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-powerpoint.slideshow.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.openxmlformats-officedocument.presentationml.slideshow"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-powerpoint.presentation.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.openxmlformats-officedocument.presentationml.presentation"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-excel.addin.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-excel.sheet.binary.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-excel.sheet.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.ms-excel.template.macroEnabled.12"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES addWithId:@"application/vnd.openxmlformats-officedocument.spreadsheetml.template"];
      
#line 76
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.text"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.text-template"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.text-web"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.text-master"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.graphics"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.graphics-template"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.presentation"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.presentation-template"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.spreadsheet"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.spreadsheet-template"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.chart"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.formula"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.database"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.oasis.opendocument.image"];
      [EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES addWithId:@"application/vnd.openofficeorg.extension"];
      
#line 93
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/zip" withId:@"zip"];
      
#line 95
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.openxmlformats-officedocument.wordprocessingml.document" withId:@"docx"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.openxmlformats-officedocument.presentationml.presentation" withId:@"pptx"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" withId:@"xlsx"];
      
#line 99
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.text" withId:@"odt"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.presentation" withId:@"odp"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.spreadsheet" withId:@"ods"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.graphics" withId:@"odg"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.chart" withId:@"odc"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.formula" withId:@"odf"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.database" withId:@"odb"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.image" withId:@"odi"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.oasis.opendocument.text-master" withId:@"odm"];
      
#line 109
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/msword" withId:@"doc"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.ms-powerpoint" withId:@"ppt"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.ms-excel" withId:@"xls"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS putWithId:@"application/vnd.ms-project" withId:@"mpp"];
      
#line 115
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/zip" withId:@"Archivo zip"];
      
#line 117
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.openxmlformats-officedocument.wordprocessingml.document" withId:@"Documento de texto"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.openxmlformats-officedocument.presentationml.presentation" withId:@"Presentaci\u00f3n"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" withId:@"Hoja de c\u00e1lculo"];
      
#line 121
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.text" withId:@"Documento de texto"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.presentation" withId:@"Presentaci\u00f3n"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.spreadsheet" withId:@"Hoja de c\u00e1lculo"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.graphics" withId:@"Gr\u00e1fico"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.chart" withId:@"Diagrama"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.formula" withId:@"F\u00f3rmula"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.database" withId:@"Base de datos"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.image" withId:@"Imagen"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.oasis.opendocument.text-master" withId:@"Plantilla de documento"];
      
#line 131
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/msword" withId:@"Documento de texto"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.ms-powerpoint" withId:@"Presentaci\u00f3n"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.ms-excel" withId:@"Hoja de c\u00e1lculo"];
      (void) [EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS putWithId:@"application/vnd.ms-project" withId:@"Planificaci&oacute;n de proyecto"];
    }
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreMiscOfficeAnalizer)
  }
}

@end


#line 33
void EsGobAfirmaCoreMiscOfficeAnalizer_init(EsGobAfirmaCoreMiscOfficeAnalizer *self) {
  NSObject_init(self);
}


#line 33
EsGobAfirmaCoreMiscOfficeAnalizer *new_EsGobAfirmaCoreMiscOfficeAnalizer_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscOfficeAnalizer, init)
}


#line 33
EsGobAfirmaCoreMiscOfficeAnalizer *create_EsGobAfirmaCoreMiscOfficeAnalizer_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscOfficeAnalizer, init)
}


#line 145
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeWithByteArray_(IOSByteArray *data) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  NSString *mimetype = nil;
  if (((IOSByteArray *) nil_chk(data))->size_ >= EsGobAfirmaCoreMiscOfficeAnalizer_THRESHOLD_FILE_SIZE) {
    @throw new_JavaIoIOException_initWithNSString_(@"El archivo tiene un tamano superior al permitido.");
  }
  JavaIoFile *tempFile = EsGobAfirmaCoreMiscAOFileUtils_createTempFileWithByteArray_(data);
  @try {
    JavaUtilZipZipFile *zipFile = new_JavaUtilZipZipFile_initWithJavaIoFile_(
#line 152
    tempFile);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      
#line 153
      if (EsGobAfirmaCoreMiscOfficeAnalizer_isODFFileWithJavaUtilZipZipFile_(zipFile)) {
        JavaIoInputStream *is =
#line 155
        [zipFile getInputStreamWithJavaUtilZipZipEntry:[zipFile getEntryWithNSString:@"mimetype"]];
        JavaLangThrowable *__primaryException1 = nil;
        
#line 154
        @try {
          
#line 157
          mimetype = EsGobAfirmaCoreMiscOfficeAnalizer_getODFMimeTypeWithJavaIoInputStream_(is);
        }
        @catch (JavaLangThrowable *e) {
          __primaryException1 = e;
          @throw e;
        }
        @finally {
          if (is != nil) {
            if (__primaryException1 != nil) {
              @try {
                [is close];
              }
              @catch (JavaLangThrowable *e) {
                [__primaryException1 addSuppressedWithJavaLangThrowable:e];
              }
            }
            else {
              [is close];
            }
          }
        }
      }
      else
#line 160
      if (EsGobAfirmaCoreMiscOfficeAnalizer_isOOXMLFileWithJavaUtilZipZipFile_(zipFile)) {
        JavaIoInputStream *is =
#line 162
        [zipFile getInputStreamWithJavaUtilZipZipEntry:[zipFile getEntryWithNSString:@"[Content_Types].xml"]];
        JavaLangThrowable *__primaryException1 = nil;
        
#line 161
        @try {
          
#line 164
          mimetype = EsGobAfirmaCoreMiscOfficeAnalizer_getOOXMLMimeTypeWithJavaIoInputStream_(is);
        }
        @catch (JavaLangThrowable *e) {
          __primaryException1 = e;
          @throw e;
        }
        @finally {
          if (is != nil) {
            if (__primaryException1 != nil) {
              @try {
                [is close];
              }
              @catch (JavaLangThrowable *e) {
                [__primaryException1 addSuppressedWithJavaLangThrowable:e];
              }
            }
            else {
              [is close];
            }
          }
        }
      }
      else {
        
#line 168
        mimetype = EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeOffice97WithByteArray_(data);
      }
      if (mimetype == nil) {
        mimetype = EsGobAfirmaCoreMiscOfficeAnalizer_ZIP_MIMETYPE;
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (zipFile != nil) {
        if (__primaryException1 != nil) {
          @try {
            [zipFile close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [zipFile close];
        }
      }
    }
  }
  @catch (
#line 174
  JavaUtilZipZipException *e) {
  }
  
#line 178
  @try {
    JavaNioFileFiles_delete__WithJavaNioFilePath_([((JavaIoFile *) nil_chk(tempFile)) toPath]);
  }
  @catch (
#line 180
  JavaIoIOException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se ha podido eliminar el fichero temporal:  ", e)];
  }
  
#line 184
  if (mimetype == nil) {
    mimetype = EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeOffice97WithByteArray_(data);
  }
  
#line 188
  if (mimetype == nil) {
    mimetype = @"application/octect-stream";
  }
  
#line 192
  return mimetype;
}


#line 195
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeOffice97WithByteArray_(IOSByteArray *data) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 198
  NSString *testString = [NSString java_stringWithBytes:data];
  
#line 200
  if ([testString java_contains:@"Microsoft Excel"]) {
    return @"application/vnd.ms-excel";
  }
  if ([testString java_contains:@"Microsoft Office Word"]) {
    return @"application/msword";
  }
  if ([testString java_contains:@"Microsoft Office PowerPoint"]) {
    return @"application/vnd.ms-powerpoint";
  }
  if ([testString java_contains:@"Microsoft Project"]) {
    return @"application/vnd.ms-project";
  }
  if ([testString java_contains:@"Microsoft Visio"]) {
    return @"application/vnd.visio";
  }
  return nil;
}


#line 225
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getExtensionWithByteArray_(IOSByteArray *zipData) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 226
  NSString *mimetype = EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeWithByteArray_(zipData);
  return [((id<JavaUtilMap>) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS)) getWithId:mimetype];
}


#line 234
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getExtensionWithNSString_(NSString *mimetype) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 235
  if (mimetype == nil) {
    return nil;
  }
  return [((id<JavaUtilMap>) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_FILE_EXTENSIONS)) getWithId:mimetype];
}


#line 248
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getDescriptionWithByteArray_(IOSByteArray *zipData) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 249
  NSString *mimetype = EsGobAfirmaCoreMiscOfficeAnalizer_getMimeTypeWithByteArray_(zipData);
  return [((id<JavaUtilMap>) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS)) getWithId:mimetype];
}


#line 257
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getDescriptionWithNSString_(NSString *mimetype) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 258
  if (mimetype == nil) {
    return nil;
  }
  return [((id<JavaUtilMap>) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_FILE_DESCRIPTIONS)) getWithId:mimetype];
}


#line 268
jboolean EsGobAfirmaCoreMiscOfficeAnalizer_isOOXMLDocumentWithByteArray_(IOSByteArray *document) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 269
  jboolean result;
  JavaIoFile *tempFile = nil;
  @try {
    if (((IOSByteArray *) nil_chk(document))->size_ >= EsGobAfirmaCoreMiscOfficeAnalizer_THRESHOLD_FILE_SIZE) {
      @throw new_JavaIoIOException_initWithNSString_(@"El archivo tiene un tamano superior al permitido.");
    }
    tempFile = EsGobAfirmaCoreMiscAOFileUtils_createTempFileWithByteArray_(document);
    {
      JavaUtilZipZipFile *zipFile = new_JavaUtilZipZipFile_initWithJavaIoFile_(
#line 276
      tempFile);
      JavaLangThrowable *__primaryException1 = nil;
      
#line 276
      @try {
        result = EsGobAfirmaCoreMiscOfficeAnalizer_isOOXMLFileWithJavaUtilZipZipFile_(zipFile);
      }
      @catch (JavaLangThrowable *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (zipFile != nil) {
          if (__primaryException1 != nil) {
            @try {
              [zipFile close];
            }
            @catch (JavaLangThrowable *e) {
              [__primaryException1 addSuppressedWithJavaLangThrowable:e];
            }
          }
          else {
            [zipFile close];
          }
        }
      }
    }
  }
  @catch (
#line 280
  JavaLangException *e) {
    result = false;
  }
  
#line 284
  if (tempFile != nil) {
    @try {
      JavaNioFileFiles_delete__WithJavaNioFilePath_([tempFile toPath]);
    }
    @catch (
#line 287
    JavaIoIOException *e) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se ha podido eliminar el fichero temporal:  ", e)];
    }
  }
  return result;
}


#line 299
jboolean EsGobAfirmaCoreMiscOfficeAnalizer_isOOXMLFileWithJavaUtilZipZipFile_(JavaUtilZipZipFile *zipFile) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  return [((JavaUtilZipZipFile *) nil_chk(zipFile)) getEntryWithNSString:@"[Content_Types].xml"] != nil && [zipFile getEntryWithNSString:@"_rels/.rels"] != nil &&
#line 302
  [zipFile getEntryWithNSString:@"docProps/app.xml"] != nil &&
#line 303
  [zipFile getEntryWithNSString:@"docProps/core.xml"] != nil;
}


#line 311
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getOOXMLMimeTypeWithJavaIoInputStream_(JavaIoInputStream *contentTypeIs) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  id<OrgW3cDomDocument> doc;
  @try {
    doc = [((JavaxXmlParsersDocumentBuilder *) nil_chk(EsGobAfirmaCoreMiscSecureXmlBuilder_getSecureDocumentBuilder())) parseWithJavaIoInputStream:contentTypeIs];
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se ha podido analizar el XML de ContentTypes de OOXML: ", e)];
    return nil;
  }
  
#line 323
  id<OrgW3cDomElement> root = [((id<OrgW3cDomDocument>) nil_chk(doc)) getDocumentElement];
  if (![((NSString *) nil_chk([((id<OrgW3cDomElement>) nil_chk(root)) getNodeName])) java_equalsIgnoreCase:@"Types"]) {
    return nil;
  }
  
#line 328
  id<OrgW3cDomNode> node = nil;
  id<OrgW3cDomNodeList> nodes = [root getChildNodes];
  for (jint i = 0; i < [((id<OrgW3cDomNodeList>) nil_chk(nodes)) getLength]; i++) {
    node = [nodes itemWithInt:i];
    if ([((NSString *) nil_chk([((id<OrgW3cDomNode>) nil_chk(node)) getNodeName])) java_equalsIgnoreCase:@"Override"]) {
      id<OrgW3cDomNamedNodeMap> nodeAttributes = [node getAttributes];
      id<OrgW3cDomNode> nodeAttribute = nil;
      for (jint j = 0; j < [((id<OrgW3cDomNamedNodeMap>) nil_chk(nodeAttributes)) getLength]; j++) {
        if ([((NSString *) nil_chk([((id<OrgW3cDomNode>) nil_chk([nodeAttributes itemWithInt:j])) getNodeName])) java_equalsIgnoreCase:@"ContentType"]) {
          nodeAttribute = [nodeAttributes itemWithInt:j];
          break;
        }
      }
      
#line 342
      if (nodeAttribute != nil) {
        NSString *value = [nodeAttribute getNodeValue];
        if ([((NSString *) nil_chk(value)) java_indexOf:'.'] != -1) {
          value = [value java_substring:0 endIndex:[value java_lastIndexOf:'.']];
        }
        if ([((id<JavaUtilSet>) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_OOXML_MIMETYPES)) containsWithId:value]) {
          return value;
        }
      }
    }
  }
  return nil;
}


#line 361
jboolean EsGobAfirmaCoreMiscOfficeAnalizer_isODFDocumentWithByteArray_(IOSByteArray *document) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 362
  jboolean result;
  JavaIoFile *tempFile = nil;
  @try {
    if (((IOSByteArray *) nil_chk(document))->size_ >= EsGobAfirmaCoreMiscOfficeAnalizer_THRESHOLD_FILE_SIZE) {
      @throw new_JavaIoIOException_initWithNSString_(@"El archivo tiene un tamano superior al permitido.");
    }
    tempFile = EsGobAfirmaCoreMiscAOFileUtils_createTempFileWithByteArray_(document);
    {
      JavaUtilZipZipFile *zipFile = new_JavaUtilZipZipFile_initWithJavaIoFile_(
#line 369
      tempFile);
      JavaLangThrowable *__primaryException1 = nil;
      
#line 369
      @try {
        result = EsGobAfirmaCoreMiscOfficeAnalizer_isODFFileWithJavaUtilZipZipFile_(zipFile);
      }
      @catch (JavaLangThrowable *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (zipFile != nil) {
          if (__primaryException1 != nil) {
            @try {
              [zipFile close];
            }
            @catch (JavaLangThrowable *e) {
              [__primaryException1 addSuppressedWithJavaLangThrowable:e];
            }
          }
          else {
            [zipFile close];
          }
        }
      }
    }
  }
  @catch (
#line 373
  JavaLangException *e) {
    result = false;
  }
  
#line 377
  if (tempFile != nil) {
    @try {
      JavaNioFileFiles_delete__WithJavaNioFilePath_([tempFile toPath]);
    }
    @catch (
#line 380
    JavaIoIOException *e) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se ha podido eliminar el fichero temporal:  ", e)];
    }
  }
  return result;
}


#line 392
jboolean EsGobAfirmaCoreMiscOfficeAnalizer_isODFFileWithJavaUtilZipZipFile_(JavaUtilZipZipFile *zipFile) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 396
  if ([((JavaUtilZipZipFile *) nil_chk(zipFile)) getEntryWithNSString:@"mimetype"] == nil) {
    return false;
  }
  if ([zipFile getEntryWithNSString:@"content.xml"] == nil) {
    return false;
  }
  if ([zipFile getEntryWithNSString:@"meta.xml"] == nil) {
    return false;
  }
  if ([zipFile getEntryWithNSString:@"settings.xml"] == nil) {
    return false;
  }
  if ([zipFile getEntryWithNSString:@"styles.xml"] == nil) {
    return false;
  }
  if ([zipFile getEntryWithNSString:@"META-INF/manifest.xml"] == nil) {
    return false;
  }
  return true;
}


#line 421
NSString *EsGobAfirmaCoreMiscOfficeAnalizer_getODFMimeTypeWithJavaIoInputStream_(JavaIoInputStream *contentTypeIs) {
  EsGobAfirmaCoreMiscOfficeAnalizer_initialize();
  
#line 422
  NSString *contentTypeData;
  @try {
    contentTypeData = [NSString java_stringWithBytes:EsGobAfirmaCoreMiscAOUtil_getDataFromInputStreamWithJavaIoInputStream_(contentTypeIs)];
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se ha podido obtener el tipo de contenido ODF del flujo de entrada: ",
#line 428
    e)];
    
#line 430
    return nil;
  }
  if ([((id<JavaUtilSet>) nil_chk(EsGobAfirmaCoreMiscOfficeAnalizer_ODF_MIMETYPES)) containsWithId:contentTypeData]) {
    return contentTypeData;
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscOfficeAnalizer)

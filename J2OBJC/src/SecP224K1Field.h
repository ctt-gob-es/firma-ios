//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/ec/custom/sec/SecP224K1Field.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SecP224K1Field")
#ifdef RESTRICT_SecP224K1Field
#define INCLUDE_ALL_SecP224K1Field 0
#else
#define INCLUDE_ALL_SecP224K1Field 1
#endif
#undef RESTRICT_SecP224K1Field

#if !defined (OrgSpongycastleMathEcCustomSecSecP224K1Field_) && (INCLUDE_ALL_SecP224K1Field || defined(INCLUDE_OrgSpongycastleMathEcCustomSecSecP224K1Field))
#define OrgSpongycastleMathEcCustomSecSecP224K1Field_

@class IOSIntArray;
@class JavaMathBigInteger;

@interface OrgSpongycastleMathEcCustomSecSecP224K1Field : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z;

+ (void)addExtWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)yy
              withIntArray:(IOSIntArray *)zz;

+ (void)addOneWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (IOSIntArray *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x;

+ (void)halfWithIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)z;

+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z;

+ (void)multiplyAddToExtWithIntArray:(IOSIntArray *)x
                        withIntArray:(IOSIntArray *)y
                        withIntArray:(IOSIntArray *)zz;

+ (void)negateWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (void)reduceWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)z;

+ (void)reduce32WithInt:(jint)x
           withIntArray:(IOSIntArray *)z;

+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z;

+ (void)subtractWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z;

+ (void)subtractExtWithIntArray:(IOSIntArray *)xx
                   withIntArray:(IOSIntArray *)yy
                   withIntArray:(IOSIntArray *)zz;

+ (void)twiceWithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)z;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleMathEcCustomSecSecP224K1Field)

inline IOSIntArray *OrgSpongycastleMathEcCustomSecSecP224K1Field_get_P(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleMathEcCustomSecSecP224K1Field_P;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleMathEcCustomSecSecP224K1Field, P, IOSIntArray *)

inline IOSIntArray *OrgSpongycastleMathEcCustomSecSecP224K1Field_get_PExt(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleMathEcCustomSecSecP224K1Field_PExt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleMathEcCustomSecSecP224K1Field, PExt, IOSIntArray *)

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_init(OrgSpongycastleMathEcCustomSecSecP224K1Field *self);

FOUNDATION_EXPORT OrgSpongycastleMathEcCustomSecSecP224K1Field *new_OrgSpongycastleMathEcCustomSecSecP224K1Field_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleMathEcCustomSecSecP224K1Field *create_OrgSpongycastleMathEcCustomSecSecP224K1Field_init(void);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_addExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_addOneWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleMathEcCustomSecSecP224K1Field_fromBigIntegerWithJavaMathBigInteger_(JavaMathBigInteger *x);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_halfWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_multiplyWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_multiplyAddToExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_negateWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_reduceWithIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_reduce32WithInt_withIntArray_(jint x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_squareNWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_subtractWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_subtractExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz);

FOUNDATION_EXPORT void OrgSpongycastleMathEcCustomSecSecP224K1Field_twiceWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathEcCustomSecSecP224K1Field)

#endif

#pragma pop_macro("INCLUDE_ALL_SecP224K1Field")

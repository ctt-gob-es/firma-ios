//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ASN1ObjectIdentifier.java
//

#include "ASN1Encodable.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1OutputStream.h"
#include "ASN1Primitive.h"
#include "ASN1TaggedObject.h"
#include "Arrays.h"
#include "BERTags.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "OIDTokenizer.h"
#include "StreamUtil.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/ConcurrentMap.h"

#if !__has_feature(objc_arc)
#error "ASN1ObjectIdentifier must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1ASN1ObjectIdentifier () {
 @public
  NSString *identifier_;
  IOSByteArray *body_;
}

- (void)writeFieldWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)outArg
                                         withLong:(jlong)fieldValue;

- (void)writeFieldWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)outArg
                           withJavaMathBigInteger:(JavaMathBigInteger *)fieldValue;

- (void)doOutputWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)aOut;

- (IOSByteArray *)getBody;

+ (jboolean)isValidBranchIDWithNSString:(NSString *)branchID
                                withInt:(jint)start;

+ (jboolean)isValidIdentifierWithNSString:(NSString *)identifier;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1ASN1ObjectIdentifier, identifier_, NSString *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1ASN1ObjectIdentifier, body_, IOSByteArray *)

inline jlong OrgSpongycastleAsn1ASN1ObjectIdentifier_get_LONG_LIMIT(void);
#define OrgSpongycastleAsn1ASN1ObjectIdentifier_LONG_LIMIT 72057594037927808LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1ASN1ObjectIdentifier, LONG_LIMIT, jlong)

inline id<JavaUtilConcurrentConcurrentMap> OrgSpongycastleAsn1ASN1ObjectIdentifier_get_pool(void);
static id<JavaUtilConcurrentConcurrentMap> OrgSpongycastleAsn1ASN1ObjectIdentifier_pool;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1ASN1ObjectIdentifier, pool, id<JavaUtilConcurrentConcurrentMap>)

__attribute__((unused)) static void OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withLong_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *outArg, jlong fieldValue);

__attribute__((unused)) static void OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *outArg, JavaMathBigInteger *fieldValue);

__attribute__((unused)) static void OrgSpongycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *aOut);

__attribute__((unused)) static IOSByteArray *OrgSpongycastleAsn1ASN1ObjectIdentifier_getBody(OrgSpongycastleAsn1ASN1ObjectIdentifier *self);

__attribute__((unused)) static jboolean OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidBranchIDWithNSString_withInt_(NSString *branchID, jint start);

__attribute__((unused)) static jboolean OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(NSString *identifier);

@interface OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle : NSObject {
 @public
  jint key_;
  IOSByteArray *enc_;
}

- (instancetype)initWithByteArray:(IOSByteArray *)enc;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle)

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle, enc_, IOSByteArray *)

__attribute__((unused)) static void OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *self, IOSByteArray *enc);

__attribute__((unused)) static OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *enc) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *enc);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ASN1ObjectIdentifier.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleAsn1ASN1ObjectIdentifier)


#line 14
@implementation OrgSpongycastleAsn1ASN1ObjectIdentifier


#line 28
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(obj);
}


#line 67
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                    withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 85
- (instancetype)initWithByteArray:(IOSByteArray *)bytes {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(self, bytes);
  return self;
}


#line 167
- (instancetype)initWithNSString:(NSString *)identifier {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(self, identifier);
  return self;
}


#line 188
- (instancetype)initWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                                                   withNSString:(NSString *)branchID {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, oid, branchID);
  return self;
}


#line 203
- (NSString *)getId {
  
#line 205
  return identifier_;
}


#line 214
- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)branchWithNSString:(NSString *)branchID {
  
#line 216
  return new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(self, branchID);
}


#line 225
- (jboolean)onWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)stem {
  
#line 227
  NSString *id_ = [self getId];
  
#line 227
  NSString *stemId = [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(stem)) getId];
  return [((NSString *) nil_chk(id_)) java_length] > [((NSString *) nil_chk(stemId)) java_length] && [id_ charAtWithInt:[stemId java_length]] == '.' && [id_ java_hasPrefix:stemId];
}


#line 231
- (void)writeFieldWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)outArg
                                         withLong:(jlong)fieldValue {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withLong_(self, outArg, fieldValue);
}


#line 246
- (void)writeFieldWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)outArg
                           withJavaMathBigInteger:(JavaMathBigInteger *)fieldValue {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(self, outArg, fieldValue);
}


#line 269
- (void)doOutputWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)aOut {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(self, aOut);
}


#line 298
- (IOSByteArray *)getBody {
  return OrgSpongycastleAsn1ASN1ObjectIdentifier_getBody(self);
}


#line 312
- (jboolean)isConstructed {
  
#line 314
  return false;
}


#line 317
- (jint)encodedLength {
  
#line 320
  jint length = ((IOSByteArray *) nil_chk(OrgSpongycastleAsn1ASN1ObjectIdentifier_getBody(self)))->size_;
  
#line 322
  return 1 + OrgSpongycastleAsn1StreamUtil_calculateBodyLengthWithInt_(length) + length;
}


#line 325
- (void)encodeWithOrgSpongycastleAsn1ASN1OutputStream:(OrgSpongycastleAsn1ASN1OutputStream *)outArg {
  
#line 329
  IOSByteArray *enc = OrgSpongycastleAsn1ASN1ObjectIdentifier_getBody(self);
  
#line 331
  [((OrgSpongycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeWithInt:OrgSpongycastleAsn1BERTags_OBJECT_IDENTIFIER];
  [outArg writeLengthWithInt:((IOSByteArray *) nil_chk(enc))->size_];
  [outArg writeWithByteArray:enc];
}

- (NSUInteger)hash {
  
#line 338
  return ((jint) [((NSString *) nil_chk(identifier_)) hash]);
}


#line 341
- (jboolean)asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:(OrgSpongycastleAsn1ASN1Primitive *)o {
  
#line 344
  if (JreObjectEqualsEquals(o, self)) {
    
#line 346
    return true;
  }
  
#line 349
  if (!([o isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]])) {
    
#line 351
    return false;
  }
  
#line 354
  return [((NSString *) nil_chk(identifier_)) isEqual:((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(((OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk(o, [OrgSpongycastleAsn1ASN1ObjectIdentifier class]))))->identifier_];
}


#line 357
- (NSString *)description {
  
#line 359
  return [self getId];
}


#line 362
+ (jboolean)isValidBranchIDWithNSString:(NSString *)branchID
                                withInt:(jint)start {
  return OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidBranchIDWithNSString_withInt_(branchID, start);
}


#line 396
+ (jboolean)isValidIdentifierWithNSString:(NSString *)identifier {
  return OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(identifier);
}


#line 423
- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)intern {
  
#line 425
  OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *hdl = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(OrgSpongycastleAsn1ASN1ObjectIdentifier_getBody(self));
  OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = [((id<JavaUtilConcurrentConcurrentMap>) nil_chk(OrgSpongycastleAsn1ASN1ObjectIdentifier_pool)) getWithId:hdl];
  if (oid == nil) {
    
#line 429
    oid = [OrgSpongycastleAsn1ASN1ObjectIdentifier_pool putIfAbsentWithId:hdl withId:self];
    if (oid == nil) {
      
#line 432
      oid = self;
    }
  }
  return oid;
}


#line 467
+ (OrgSpongycastleAsn1ASN1ObjectIdentifier *)fromOctetStringWithByteArray:(IOSByteArray *)enc {
  return OrgSpongycastleAsn1ASN1ObjectIdentifier_fromOctetStringWithByteArray_(enc);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x22, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, 14, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 16, 14, -1, -1, -1 },
    { NULL, "I", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 18, 19, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 21, 22, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 23, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x8, 24, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithNSString:);
  methods[4].selector = @selector(initWithOrgSpongycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[5].selector = @selector(getId);
  methods[6].selector = @selector(branchWithNSString:);
  methods[7].selector = @selector(onWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[8].selector = @selector(writeFieldWithJavaIoByteArrayOutputStream:withLong:);
  methods[9].selector = @selector(writeFieldWithJavaIoByteArrayOutputStream:withJavaMathBigInteger:);
  methods[10].selector = @selector(doOutputWithJavaIoByteArrayOutputStream:);
  methods[11].selector = @selector(getBody);
  methods[12].selector = @selector(isConstructed);
  methods[13].selector = @selector(encodedLength);
  methods[14].selector = @selector(encodeWithOrgSpongycastleAsn1ASN1OutputStream:);
  methods[15].selector = @selector(hash);
  methods[16].selector = @selector(asn1EqualsWithOrgSpongycastleAsn1ASN1Primitive:);
  methods[17].selector = @selector(description);
  methods[18].selector = @selector(isValidBranchIDWithNSString:withInt:);
  methods[19].selector = @selector(isValidIdentifierWithNSString:);
  methods[20].selector = @selector(intern);
  methods[21].selector = @selector(fromOctetStringWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "identifier_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "body_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "LONG_LIMIT", "J", .constantValue.asLong = OrgSpongycastleAsn1ASN1ObjectIdentifier_LONG_LIMIT, 0x1a, -1, -1, -1, -1 },
    { "pool", "LJavaUtilConcurrentConcurrentMap;", .constantValue.asLong = 0, 0x1a, -1, 25, 26, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "[B", "LNSString;", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;LNSString;", "branch", "on", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", "writeField", "LJavaIoByteArrayOutputStream;J", "LJavaIoByteArrayOutputStream;LJavaMathBigInteger;", "doOutput", "LJavaIoByteArrayOutputStream;", "LJavaIoIOException;", "encode", "LOrgSpongycastleAsn1ASN1OutputStream;", "hashCode", "asn1Equals", "LOrgSpongycastleAsn1ASN1Primitive;", "toString", "isValidBranchID", "LNSString;I", "isValidIdentifier", "fromOctetString", &OrgSpongycastleAsn1ASN1ObjectIdentifier_pool, "Ljava/util/concurrent/ConcurrentMap<Lorg/spongycastle/asn1/ASN1ObjectIdentifier$OidHandle;Lorg/spongycastle/asn1/ASN1ObjectIdentifier;>;", "LOrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1ASN1ObjectIdentifier = { "ASN1ObjectIdentifier", "org.spongycastle.asn1", ptrTable, methods, fields, 7, 0x1, 22, 4, -1, 27, -1, -1, -1 };
  return &_OrgSpongycastleAsn1ASN1ObjectIdentifier;
}

+ (void)initialize {
  if (self == [OrgSpongycastleAsn1ASN1ObjectIdentifier class]) {
    OrgSpongycastleAsn1ASN1ObjectIdentifier_pool = new_JavaUtilConcurrentConcurrentHashMap_init();
    J2OBJC_SET_INITIALIZED(OrgSpongycastleAsn1ASN1ObjectIdentifier)
  }
}

@end


#line 28
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initialize();
  
#line 31
  if (obj == nil || [obj isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 33
    return (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk(obj, [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
  }
  
#line 36
  if ([OrgSpongycastleAsn1ASN1Encodable_class_() isInstance:obj] && [[((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(obj, OrgSpongycastleAsn1ASN1Encodable_class_())) toASN1Primitive] isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 38
    return (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((id<OrgSpongycastleAsn1ASN1Encodable>) cast_check(obj, OrgSpongycastleAsn1ASN1Encodable_class_())) toASN1Primitive], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
  }
  
#line 41
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 43
    IOSByteArray *enc = (IOSByteArray *) cast_chk(obj, [IOSByteArray class]);
    @try {
      
#line 46
      return (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk(OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(enc), [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    }
    @catch (JavaIoIOException *e) {
      
#line 50
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"failed to construct object identifier from byte[]: ", [e getMessage]));
    }
  }
  
#line 54
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 67
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initialize();
  
#line 71
  OrgSpongycastleAsn1ASN1Primitive *o = [((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject];
  
#line 73
  if (explicit_ || [o isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 75
    return OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(o);
  }
  else {
    
#line 79
    return OrgSpongycastleAsn1ASN1ObjectIdentifier_fromOctetStringWithByteArray_([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([obj getObject]))) getOctets]);
  }
}


#line 85
void OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, IOSByteArray *bytes) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  
#line 88
  JavaLangStringBuffer *objId = new_JavaLangStringBuffer_init();
  jlong value = 0;
  JavaMathBigInteger *bigValue = nil;
  jboolean first = true;
  
#line 93
  for (jint i = 0; i != ((IOSByteArray *) nil_chk(bytes))->size_; i++) {
    
#line 95
    jint b = IOSByteArray_Get(bytes, i) & (jint) 0xff;
    
#line 97
    if (value <= OrgSpongycastleAsn1ASN1ObjectIdentifier_LONG_LIMIT) {
      
#line 99
      value += (b & (jint) 0x7f);
      if ((b & (jint) 0x80) == 0) {
        
#line 102
        if (first) {
          
#line 104
          if (value < 40) {
            
#line 106
            (void) [objId appendWithChar:'0'];
          }
          else if (value < 80) {
            
#line 110
            (void) [objId appendWithChar:'1'];
            value -= 40;
          }
          else {
            
#line 115
            (void) [objId appendWithChar:'2'];
            value -= 80;
          }
          first = false;
        }
        
#line 121
        (void) [objId appendWithChar:'.'];
        (void) [objId appendWithLong:value];
        value = 0;
      }
      else {
        
#line 127
        JreLShiftAssignLong(&value, 7);
      }
    }
    else {
      
#line 132
      if (bigValue == nil) {
        
#line 134
        bigValue = JavaMathBigInteger_valueOfWithLong_(value);
      }
      bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) or__WithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(b & (jint) 0x7f)];
      if ((b & (jint) 0x80) == 0) {
        
#line 139
        if (first) {
          
#line 141
          (void) [objId appendWithChar:'2'];
          bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) subtractWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(80)];
          first = false;
        }
        
#line 146
        (void) [objId appendWithChar:'.'];
        (void) [objId appendWithId:bigValue];
        bigValue = nil;
        value = 0;
      }
      else {
        
#line 153
        bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) shiftLeftWithInt:7];
      }
    }
  }
  
#line 158
  self->identifier_ = [objId description];
  self->body_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(bytes);
}


#line 85
OrgSpongycastleAsn1ASN1ObjectIdentifier *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier, initWithByteArray_, bytes)
}


#line 85
OrgSpongycastleAsn1ASN1ObjectIdentifier *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier, initWithByteArray_, bytes)
}


#line 167
void OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, NSString *identifier) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  
#line 170
  if (identifier == nil) {
    
#line 172
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'identifier' cannot be null");
  }
  if (!OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(identifier)) {
    
#line 176
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"string ", identifier, @" not an OID"));
  }
  
#line 179
  self->identifier_ = identifier;
}


#line 167
OrgSpongycastleAsn1ASN1ObjectIdentifier *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier, initWithNSString_, identifier)
}


#line 167
OrgSpongycastleAsn1ASN1ObjectIdentifier *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier, initWithNSString_, identifier)
}


#line 188
void OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) {
  OrgSpongycastleAsn1ASN1Primitive_init(self);
  if (!OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidBranchIDWithNSString_withInt_(branchID, 0)) {
    
#line 192
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"string ", branchID, @" not a valid OID branch"));
  }
  
#line 195
  self->identifier_ = JreStrcat("$C$", [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId], '.', branchID);
}


#line 188
OrgSpongycastleAsn1ASN1ObjectIdentifier *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier, initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_, oid, branchID)
}


#line 188
OrgSpongycastleAsn1ASN1ObjectIdentifier *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier, initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withNSString_, oid, branchID)
}


#line 231
void OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withLong_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *outArg, jlong fieldValue) {
  
#line 235
  IOSByteArray *result = [IOSByteArray newArrayWithLength:9];
  jint pos = 8;
  *IOSByteArray_GetRef(result, pos) = (jbyte) ((jint) fieldValue & (jint) 0x7f);
  while (fieldValue >= (JreLShift64(1LL, 7))) {
    
#line 240
    JreRShiftAssignLong(&fieldValue, 7);
    *IOSByteArray_GetRef(result, --pos) = (jbyte) (((jint) fieldValue & (jint) 0x7f) | (jint) 0x80);
  }
  [((JavaIoByteArrayOutputStream *) nil_chk(outArg)) writeWithByteArray:result withInt:pos withInt:9 - pos];
}

void OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *outArg, JavaMathBigInteger *fieldValue) {
  
#line 250
  jint byteCount = JreIntDiv(([((JavaMathBigInteger *) nil_chk(fieldValue)) bitLength] + 6), 7);
  if (byteCount == 0) {
    
#line 253
    [((JavaIoByteArrayOutputStream *) nil_chk(outArg)) writeWithInt:0];
  }
  else {
    
#line 257
    JavaMathBigInteger *tmpValue = fieldValue;
    IOSByteArray *tmp = [IOSByteArray newArrayWithLength:byteCount];
    for (jint i = byteCount - 1; i >= 0; i--) {
      
#line 261
      *IOSByteArray_GetRef(tmp, i) = (jbyte) (([((JavaMathBigInteger *) nil_chk(tmpValue)) intValue] & (jint) 0x7f) | (jint) 0x80);
      tmpValue = [tmpValue shiftRightWithInt:7];
    }
    *IOSByteArray_GetRef(tmp, byteCount - 1) &= (jint) 0x7f;
    [((JavaIoByteArrayOutputStream *) nil_chk(outArg)) writeWithByteArray:tmp withInt:0 withInt:tmp->size_];
  }
}


#line 269
void OrgSpongycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(OrgSpongycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *aOut) {
  
#line 271
  OrgSpongycastleAsn1OIDTokenizer *tok = new_OrgSpongycastleAsn1OIDTokenizer_initWithNSString_(self->identifier_);
  jint first = JavaLangInteger_parseIntWithNSString_([tok nextToken]) * 40;
  
#line 274
  NSString *secondToken = [tok nextToken];
  if ([((NSString *) nil_chk(secondToken)) java_length] <= 18) {
    
#line 277
    OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withLong_(self, aOut, first + JavaLangLong_parseLongWithNSString_(secondToken));
  }
  else {
    
#line 281
    OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(self, aOut, [new_JavaMathBigInteger_initWithNSString_(secondToken) addWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(first)]);
  }
  
#line 284
  while ([tok hasMoreTokens]) {
    
#line 286
    NSString *token = [tok nextToken];
    if ([((NSString *) nil_chk(token)) java_length] <= 18) {
      
#line 289
      OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withLong_(self, aOut, JavaLangLong_parseLongWithNSString_(token));
    }
    else {
      
#line 293
      OrgSpongycastleAsn1ASN1ObjectIdentifier_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(self, aOut, new_JavaMathBigInteger_initWithNSString_(token));
    }
  }
}


#line 298
IOSByteArray *OrgSpongycastleAsn1ASN1ObjectIdentifier_getBody(OrgSpongycastleAsn1ASN1ObjectIdentifier *self) {
  @synchronized(self) {
    if (self->body_ == nil) {
      
#line 302
      JavaIoByteArrayOutputStream *bOut = new_JavaIoByteArrayOutputStream_init();
      
#line 304
      OrgSpongycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(self, bOut);
      
#line 306
      self->body_ = [bOut toByteArray];
    }
    
#line 309
    return JreRetainedLocalValue(self->body_);
  }
}


#line 362
jboolean OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidBranchIDWithNSString_withInt_(NSString *branchID, jint start) {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initialize();
  
#line 365
  jboolean periodAllowed = false;
  
#line 367
  jint pos = [((NSString *) nil_chk(branchID)) java_length];
  while (--pos >= start) {
    
#line 370
    jchar ch = [branchID charAtWithInt:pos];
    
#line 373
    if ('0' <= ch && ch <= '9') {
      
#line 375
      periodAllowed = true;
      continue;
    }
    
#line 379
    if (ch == '.') {
      
#line 381
      if (!periodAllowed) {
        
#line 383
        return false;
      }
      
#line 386
      periodAllowed = false;
      continue;
    }
    
#line 390
    return false;
  }
  
#line 393
  return periodAllowed;
}


#line 396
jboolean OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(NSString *identifier) {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initialize();
  
#line 399
  if ([((NSString *) nil_chk(identifier)) java_length] < 3 || [identifier charAtWithInt:1] != '.') {
    
#line 401
    return false;
  }
  
#line 404
  jchar first = [identifier charAtWithInt:0];
  if (first < '0' || first > '2') {
    
#line 407
    return false;
  }
  
#line 410
  return OrgSpongycastleAsn1ASN1ObjectIdentifier_isValidBranchIDWithNSString_withInt_(identifier, 2);
}


#line 467
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1ASN1ObjectIdentifier_fromOctetStringWithByteArray_(IOSByteArray *enc) {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_initialize();
  OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *hdl = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(enc);
  OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = [((id<JavaUtilConcurrentConcurrentMap>) nil_chk(OrgSpongycastleAsn1ASN1ObjectIdentifier_pool)) getWithId:hdl];
  if (oid == nil) {
    
#line 473
    return new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithByteArray_(enc);
  }
  return oid;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1ASN1ObjectIdentifier)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ASN1ObjectIdentifier.java"


#line 440
@implementation OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle


#line 445
- (instancetype)initWithByteArray:(IOSByteArray *)enc {
  OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(self, enc);
  return self;
}


#line 451
- (NSUInteger)hash {
  
#line 453
  return key_;
}


#line 456
- (jboolean)isEqual:(id)o {
  
#line 458
  if ([o isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle class]]) {
    
#line 460
    return OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(enc_, ((OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *) nil_chk(((OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *) o)))->enc_);
  }
  
#line 463
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "key_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "enc_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "hashCode", "equals", "LNSObject;", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle = { "OidHandle", "org.spongycastle.asn1", ptrTable, methods, fields, 7, 0xa, 3, 2, 4, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle;
}

@end


#line 445
void OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *self, IOSByteArray *enc) {
  NSObject_init(self);
  self->key_ = OrgSpongycastleUtilArrays_hashCodeWithByteArray_(enc);
  self->enc_ = enc;
}


#line 445
OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *new_OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *enc) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle, initWithByteArray_, enc)
}


#line 445
OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle *create_OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *enc) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle, initWithByteArray_, enc)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1ASN1ObjectIdentifier_OidHandle)

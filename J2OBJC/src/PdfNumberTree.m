//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfNumberTree.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PdfArray.h"
#include "PdfDictionary.h"
#include "PdfIndirectObject.h"
#include "PdfIndirectReference.h"
#include "PdfName.h"
#include "PdfNumber.h"
#include "PdfNumberTree.h"
#include "PdfObject.h"
#include "PdfReader.h"
#include "PdfWriter.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"

#if !__has_feature(objc_arc)
#error "PdfNumberTree must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfNumberTree ()

+ (void)iterateItemsWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic
                                   withJavaUtilHashMap:(JavaUtilHashMap *)items;

@end

inline jint ComAowagieTextPdfPdfNumberTree_get_leafSize(void);
#define ComAowagieTextPdfPdfNumberTree_leafSize 64
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfNumberTree, leafSize, jint)

__attribute__((unused)) static void ComAowagieTextPdfPdfNumberTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(ComAowagieTextPdfPdfDictionary *dic, JavaUtilHashMap *items);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfNumberTree.java"


#line 57
@implementation ComAowagieTextPdfPdfNumberTree


#line 57
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfPdfNumberTree_initPackagePrivate(self);
  return self;
}


#line 69
+ (ComAowagieTextPdfPdfDictionary *)writeTreeWithJavaUtilHashMap:(JavaUtilHashMap *)items
                                  withComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  return ComAowagieTextPdfPdfNumberTree_writeTreeWithJavaUtilHashMap_withComAowagieTextPdfPdfWriter_(items, writer);
}


#line 136
+ (void)iterateItemsWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic
                                   withJavaUtilHashMap:(JavaUtilHashMap *)items {
  ComAowagieTextPdfPdfNumberTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(dic, items);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x8, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0xa, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(writeTreeWithJavaUtilHashMap:withComAowagieTextPdfPdfWriter:);
  methods[2].selector = @selector(iterateItemsWithComAowagieTextPdfPdfDictionary:withJavaUtilHashMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "leafSize", "I", .constantValue.asInt = ComAowagieTextPdfPdfNumberTree_leafSize, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "writeTree", "LJavaUtilHashMap;LComAowagieTextPdfPdfWriter;", "LJavaIoIOException;", "iterateItems", "LComAowagieTextPdfPdfDictionary;LJavaUtilHashMap;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfNumberTree = { "PdfNumberTree", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 3, 1, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfNumberTree;
}

@end


#line 57
void ComAowagieTextPdfPdfNumberTree_initPackagePrivate(ComAowagieTextPdfPdfNumberTree *self) {
  NSObject_init(self);
}


#line 57
ComAowagieTextPdfPdfNumberTree *new_ComAowagieTextPdfPdfNumberTree_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfNumberTree, initPackagePrivate)
}


#line 57
ComAowagieTextPdfPdfNumberTree *create_ComAowagieTextPdfPdfNumberTree_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfNumberTree, initPackagePrivate)
}


#line 69
ComAowagieTextPdfPdfDictionary *ComAowagieTextPdfPdfNumberTree_writeTreeWithJavaUtilHashMap_withComAowagieTextPdfPdfWriter_(JavaUtilHashMap *items, ComAowagieTextPdfPdfWriter *writer) {
  ComAowagieTextPdfPdfNumberTree_initialize();
  
#line 70
  if ([((JavaUtilHashMap *) nil_chk(items)) isEmpty]) {
    return nil;
  }
  IOSObjectArray *numbers = [IOSObjectArray newArrayWithLength:[items size] type:JavaLangInteger_class_()];
  numbers = (IOSObjectArray *) cast_check([((id<JavaUtilSet>) nil_chk([items keySet])) toArrayWithNSObjectArray:numbers], IOSClass_arrayType(JavaLangInteger_class_(), 1));
  JavaUtilArrays_sortWithNSObjectArray_(numbers);
  if (((IOSObjectArray *) nil_chk(numbers))->size_ <= ComAowagieTextPdfPdfNumberTree_leafSize) {
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
    ComAowagieTextPdfPdfArray *ar = new_ComAowagieTextPdfPdfArray_init();
    {
      IOSObjectArray *a__ =
#line 79
      numbers;
      JavaLangInteger * const *b__ = a__->buffer_;
      JavaLangInteger * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangInteger *number = *b__++;
        
#line 80
        [ar addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(number)) intValue])];
        [ar addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *) cast_chk([items getWithId:number], [ComAowagieTextPdfPdfObject class])];
      }
    }
    
#line 83
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NUMS) withComAowagieTextPdfPdfObject:ar];
    return dic;
  }
  jint skip = ComAowagieTextPdfPdfNumberTree_leafSize;
  IOSObjectArray *kids = [IOSObjectArray newArrayWithLength:JreIntDiv((numbers->size_ + ComAowagieTextPdfPdfNumberTree_leafSize - 1), ComAowagieTextPdfPdfNumberTree_leafSize) type:ComAowagieTextPdfPdfIndirectReference_class_()];
  for (jint k = 0; k < kids->size_; ++k) {
    jint offset = k * ComAowagieTextPdfPdfNumberTree_leafSize;
    jint end = JavaLangMath_minWithInt_withInt_(offset + ComAowagieTextPdfPdfNumberTree_leafSize, numbers->size_);
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
    ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
    [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(numbers, offset))) intValue])];
    [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(numbers, end - 1))) intValue])];
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LIMITS) withComAowagieTextPdfPdfObject:arr];
    arr = new_ComAowagieTextPdfPdfArray_init();
    for (; offset < end; ++offset) {
      [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(numbers, offset))) intValue])];
      [arr addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *) cast_chk([items getWithId:IOSObjectArray_Get(numbers, offset)], [ComAowagieTextPdfPdfObject class])];
    }
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NUMS) withComAowagieTextPdfPdfObject:arr];
    (void) IOSObjectArray_Set(kids, k, [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) addToBodyWithComAowagieTextPdfPdfObject:dic])) getIndirectReference]);
  }
  jint top = kids->size_;
  while (true) {
    if (top <= ComAowagieTextPdfPdfNumberTree_leafSize) {
      ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
      for (jint k = 0; k < top; ++k) {
        [arr addWithComAowagieTextPdfPdfObject:IOSObjectArray_Get(kids, k)];
      }
      ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:arr];
      return dic;
    }
    skip *= ComAowagieTextPdfPdfNumberTree_leafSize;
    jint tt = JreIntDiv((numbers->size_ + skip - 1), skip);
    for (jint k = 0; k < tt; ++k) {
      jint offset = k * ComAowagieTextPdfPdfNumberTree_leafSize;
      jint end = JavaLangMath_minWithInt_withInt_(offset + ComAowagieTextPdfPdfNumberTree_leafSize, top);
      ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
      ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
      [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(numbers, k * skip))) intValue])];
      [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk(IOSObjectArray_Get(numbers, JavaLangMath_minWithInt_withInt_((k + 1) * skip, numbers->size_) - 1))) intValue])];
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LIMITS) withComAowagieTextPdfPdfObject:arr];
      arr = new_ComAowagieTextPdfPdfArray_init();
      for (; offset < end; ++offset) {
        [arr addWithComAowagieTextPdfPdfObject:IOSObjectArray_Get(kids, offset)];
      }
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:arr];
      (void) IOSObjectArray_Set(kids, k, [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) addToBodyWithComAowagieTextPdfPdfObject:dic])) getIndirectReference]);
    }
    top = tt;
  }
}


#line 136
void ComAowagieTextPdfPdfNumberTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(ComAowagieTextPdfPdfDictionary *dic, JavaUtilHashMap *items) {
  ComAowagieTextPdfPdfNumberTree_initialize();
  
#line 137
  ComAowagieTextPdfPdfArray *nn = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(dic)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NUMS)]), [ComAowagieTextPdfPdfArray class]);
  if (nn != nil) {
    for (jint k = 0; k < [nn size]; ++k) {
      ComAowagieTextPdfPdfNumber *s = (ComAowagieTextPdfPdfNumber *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([nn getPdfObjectWithInt:k++]), [ComAowagieTextPdfPdfNumber class]);
      (void) [((JavaUtilHashMap *) nil_chk(items)) putWithId:new_JavaLangInteger_initWithInt_([((ComAowagieTextPdfPdfNumber *) nil_chk(s)) intValue]) withId:[nn getPdfObjectWithInt:k]];
    }
  }
  else if ((nn = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS)]), [ComAowagieTextPdfPdfArray class])) != nil) {
    for (jint k = 0; k < [((ComAowagieTextPdfPdfArray *) nil_chk(nn)) size]; ++k) {
      ComAowagieTextPdfPdfDictionary *kid = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([nn getPdfObjectWithInt:k]), [ComAowagieTextPdfPdfDictionary class]);
      ComAowagieTextPdfPdfNumberTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(kid, items);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfNumberTree)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/cms/SignerInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_SignerInfo")
#ifdef RESTRICT_SignerInfo
#define INCLUDE_ALL_SignerInfo 0
#else
#define INCLUDE_ALL_SignerInfo 1
#endif
#undef RESTRICT_SignerInfo

#if !defined (OrgSpongycastleAsn1CmsSignerInfo_) && (INCLUDE_ALL_SignerInfo || defined(INCLUDE_OrgSpongycastleAsn1CmsSignerInfo))
#define OrgSpongycastleAsn1CmsSignerInfo_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Integer;
@class OrgSpongycastleAsn1ASN1OctetString;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1ASN1Set;
@class OrgSpongycastleAsn1CmsAttributes;
@class OrgSpongycastleAsn1CmsSignerIdentifier;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

/*!
 @brief <a href="http://tools.ietf.org/html/rfc5652#section-5.3">RFC 5652</a>:
  Signature container per Signer, see <code>SignerIdentifier</code>.
 @code

  PKCS#7:
  SignerInfo ::= SEQUENCE {
      version                   Version,
      sid                       SignerIdentifier,
      digestAlgorithm           DigestAlgorithmIdentifier,
      authenticatedAttributes   [0] IMPLICIT Attributes OPTIONAL,
      digestEncryptionAlgorithm DigestEncryptionAlgorithmIdentifier,
      encryptedDigest           EncryptedDigest,
      unauthenticatedAttributes [1] IMPLICIT Attributes OPTIONAL
  }
  EncryptedDigest ::= OCTET STRING
  DigestAlgorithmIdentifier ::= AlgorithmIdentifier
  DigestEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier
  -----------------------------------------
  RFC 5652:
  SignerInfo ::= SEQUENCE {
      version            CMSVersion,
      sid                SignerIdentifier,
      digestAlgorithm    DigestAlgorithmIdentifier,
      signedAttrs        [0] IMPLICIT SignedAttributes OPTIONAL,
      signatureAlgorithm SignatureAlgorithmIdentifier,
      signature          SignatureValue,
      unsignedAttrs      [1] IMPLICIT UnsignedAttributes OPTIONAL
  }
  -- <code>SignerIdentifier</code> referenced certificates are at containing
  -- <code>SignedData</code> certificates element.
  SignerIdentifier ::= CHOICE {
      issuerAndSerialNumber <code>IssuerAndSerialNumber</code>,
      subjectKeyIdentifier  [0] SubjectKeyIdentifier }
  -- See <code>Attributes</code> for generalized SET OF <code>Attribute</code>
  SignedAttributes   ::= SET SIZE (1..MAX) OF Attribute
  UnsignedAttributes ::= SET SIZE (1..MAX) OF Attribute  
 <code>Attribute</code> ::= SEQUENCE {
      attrType   OBJECT IDENTIFIER,
      attrValues SET OF AttributeValue }
  AttributeValue ::= ANY 
  SignatureValue ::= OCTET STRING 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsSignerInfo : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

/*!
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

/*!
 @param sid
 @param digAlgorithm CMS knows as 'digestAlgorithm'
 @param authenticatedAttributes CMS knows as 'signedAttrs'
 @param digEncryptionAlgorithm CMS knows as 'signatureAlgorithm'
 @param encryptedDigest CMS knows as 'signature'
 @param unauthenticatedAttributes CMS knows as 'unsignedAttrs'
 */
- (instancetype)initWithOrgSpongycastleAsn1CmsSignerIdentifier:(OrgSpongycastleAsn1CmsSignerIdentifier *)sid
                withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)digAlgorithm
                                withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)authenticatedAttributes
                withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)digEncryptionAlgorithm
                        withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)encryptedDigest
                                withOrgSpongycastleAsn1ASN1Set:(OrgSpongycastleAsn1ASN1Set *)unauthenticatedAttributes;

/*!
 @param sid
 @param digAlgorithm CMS knows as 'digestAlgorithm'
 @param authenticatedAttributes CMS knows as 'signedAttrs'
 @param digEncryptionAlgorithm CMS knows as 'signatureAlgorithm'
 @param encryptedDigest CMS knows as 'signature'
 @param unauthenticatedAttributes CMS knows as 'unsignedAttrs'
 */
- (instancetype)initWithOrgSpongycastleAsn1CmsSignerIdentifier:(OrgSpongycastleAsn1CmsSignerIdentifier *)sid
                withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)digAlgorithm
                          withOrgSpongycastleAsn1CmsAttributes:(OrgSpongycastleAsn1CmsAttributes *)authenticatedAttributes
                withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)digEncryptionAlgorithm
                        withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)encryptedDigest
                          withOrgSpongycastleAsn1CmsAttributes:(OrgSpongycastleAsn1CmsAttributes *)unauthenticatedAttributes;

- (OrgSpongycastleAsn1ASN1Set *)getAuthenticatedAttributes;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getDigestEncryptionAlgorithm;

- (OrgSpongycastleAsn1ASN1OctetString *)getEncryptedDigest;

/*!
 @brief Return a SignerInfo object from the given input
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>SignerInfo</code> object 
 <li> <code>ASN1Sequence</code> input formats with SignerInfo structure inside 
 </ul>
 @param o the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsSignerInfo *)getInstanceWithId:(id)o;

- (OrgSpongycastleAsn1CmsSignerIdentifier *)getSID;

- (OrgSpongycastleAsn1ASN1Set *)getUnauthenticatedAttributes;

- (OrgSpongycastleAsn1ASN1Integer *)getVersion;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsSignerInfo)

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsSignerInfo *OrgSpongycastleAsn1CmsSignerInfo_getInstanceWithId_(id o);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignerInfo *self, OrgSpongycastleAsn1CmsSignerIdentifier *sid, OrgSpongycastleAsn1X509AlgorithmIdentifier *digAlgorithm, OrgSpongycastleAsn1ASN1Set *authenticatedAttributes, OrgSpongycastleAsn1X509AlgorithmIdentifier *digEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedDigest, OrgSpongycastleAsn1ASN1Set *unauthenticatedAttributes);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsSignerInfo *new_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignerIdentifier *sid, OrgSpongycastleAsn1X509AlgorithmIdentifier *digAlgorithm, OrgSpongycastleAsn1ASN1Set *authenticatedAttributes, OrgSpongycastleAsn1X509AlgorithmIdentifier *digEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedDigest, OrgSpongycastleAsn1ASN1Set *unauthenticatedAttributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsSignerInfo *create_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1Set_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1ASN1Set_(OrgSpongycastleAsn1CmsSignerIdentifier *sid, OrgSpongycastleAsn1X509AlgorithmIdentifier *digAlgorithm, OrgSpongycastleAsn1ASN1Set *authenticatedAttributes, OrgSpongycastleAsn1X509AlgorithmIdentifier *digEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedDigest, OrgSpongycastleAsn1ASN1Set *unauthenticatedAttributes);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1CmsAttributes_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1CmsAttributes_(OrgSpongycastleAsn1CmsSignerInfo *self, OrgSpongycastleAsn1CmsSignerIdentifier *sid, OrgSpongycastleAsn1X509AlgorithmIdentifier *digAlgorithm, OrgSpongycastleAsn1CmsAttributes *authenticatedAttributes, OrgSpongycastleAsn1X509AlgorithmIdentifier *digEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedDigest, OrgSpongycastleAsn1CmsAttributes *unauthenticatedAttributes);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsSignerInfo *new_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1CmsAttributes_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1CmsAttributes_(OrgSpongycastleAsn1CmsSignerIdentifier *sid, OrgSpongycastleAsn1X509AlgorithmIdentifier *digAlgorithm, OrgSpongycastleAsn1CmsAttributes *authenticatedAttributes, OrgSpongycastleAsn1X509AlgorithmIdentifier *digEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedDigest, OrgSpongycastleAsn1CmsAttributes *unauthenticatedAttributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsSignerInfo *create_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1CmsSignerIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1CmsAttributes_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_withOrgSpongycastleAsn1CmsAttributes_(OrgSpongycastleAsn1CmsSignerIdentifier *sid, OrgSpongycastleAsn1X509AlgorithmIdentifier *digAlgorithm, OrgSpongycastleAsn1CmsAttributes *authenticatedAttributes, OrgSpongycastleAsn1X509AlgorithmIdentifier *digEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedDigest, OrgSpongycastleAsn1CmsAttributes *unauthenticatedAttributes);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsSignerInfo *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsSignerInfo *new_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsSignerInfo *create_OrgSpongycastleAsn1CmsSignerInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsSignerInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_SignerInfo")

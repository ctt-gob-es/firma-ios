//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/signers/cades/GenCAdESEPESSignedData.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_GenCAdESEPESSignedData")
#ifdef RESTRICT_GenCAdESEPESSignedData
#define INCLUDE_ALL_GenCAdESEPESSignedData 0
#else
#define INCLUDE_ALL_GenCAdESEPESSignedData 1
#endif
#undef RESTRICT_GenCAdESEPESSignedData

#if !defined (EsGobAfirmaSignersCadesGenCAdESEPESSignedData_) && (INCLUDE_ALL_GenCAdESEPESSignedData || defined(INCLUDE_EsGobAfirmaSignersCadesGenCAdESEPESSignedData))
#define EsGobAfirmaSignersCadesGenCAdESEPESSignedData_

@class EsGobAfirmaSignersCadesCAdESParameters;
@class IOSByteArray;
@class IOSObjectArray;
@protocol JavaSecurityPrivateKey;

/*!
 @brief Generaci&oacute;n de firmas digitales CMS Advanced Electronic Signatures
  (CAdES).
 La implementaci&oacute;n es la misma que para el SignedData de CMS, salvo
  que en los atributos del SignerInfo, en vez de ir el n&uacute;mero de serie
  (SerialNumber), va la firma del certificado. 
 <p>La Estructura del mensaje es la siguiente (se omite la parte correspondiente
  a CMS):</p>
  
 @code

   <code>
   id-aa-ets-sigPolicyId OBJECT IDENTIFIER ::= { iso(1)
       member-body(2) us(840) rsadsi(113549) pkcs(1) pkcs9(9)
       smime(16) id-aa(2) 15 }
       SignaturePolicyIdentifier ::= CHOICE {
            signaturePolicyId          SignaturePolicyId,
            signaturePolicyImplied     SignaturePolicyImplied
                                       -- not used in this version
    }
       SignaturePolicyId ::= SEQUENCE {
            sigPolicyId           SigPolicyId,
            sigPolicyHash         SigPolicyHash,
            sigPolicyQualifiers   SEQUENCE SIZE (1..MAX) OF
                                    AOSigPolicyQualifierInfo OPTIONAL} 
  </code>
   
@endcode
 */
@interface EsGobAfirmaSignersCadesGenCAdESEPESSignedData : NSObject

#pragma mark Public

/*!
 @brief Genera una firma digital usando una estructura PKCS#7 SignedData.
 @param signatureAlgorithm Algoritmo de firma que se deber &acute;  usar.
 @param key Referencia a la cl@@ve privada de firme.
 @param certChain Cadena de certificaci &oacute; n del certificado de firma.
 @param config Configurac &oacute; n de la firma a generar.
 @return La firma generada codificada en ASN.1 binario.
 @throw AOExceptionCuando ocurre alg&uacute;n error durante el proceso de codificaci&oacute;n ASN.1
 */
+ (IOSByteArray *)generateSignedDataWithNSString:(NSString *)signatureAlgorithm
                      withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
            withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
      withEsGobAfirmaSignersCadesCAdESParameters:(EsGobAfirmaSignersCadesCAdESParameters *)config;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaSignersCadesGenCAdESEPESSignedData)

FOUNDATION_EXPORT IOSByteArray *EsGobAfirmaSignersCadesGenCAdESEPESSignedData_generateSignedDataWithNSString_withJavaSecurityPrivateKey_withJavaSecurityCertCertificateArray_withEsGobAfirmaSignersCadesCAdESParameters_(NSString *signatureAlgorithm, id<JavaSecurityPrivateKey> key, IOSObjectArray *certChain, EsGobAfirmaSignersCadesCAdESParameters *config);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaSignersCadesGenCAdESEPESSignedData)

#endif

#pragma pop_macro("INCLUDE_ALL_GenCAdESEPESSignedData")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jce/provider/PKIXPolicyNode.java
//

#include "J2ObjC_source.h"
#include "PKIXPolicyNode.h"
#include "java/lang/StringBuffer.h"
#include "java/security/cert/PolicyNode.h"
#include "java/util/ArrayList.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"

#if !__has_feature(objc_arc)
#error "PKIXPolicyNode must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jce/provider/PKIXPolicyNode.java"


#line 10
@implementation OrgSpongycastleJceProviderPKIXPolicyNode


#line 27
- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)_children
                             withInt:(jint)_depth
                     withJavaUtilSet:(id<JavaUtilSet>)_expectedPolicies
      withJavaSecurityCertPolicyNode:(id<JavaSecurityCertPolicyNode>)_parent
                     withJavaUtilSet:(id<JavaUtilSet>)_policyQualifiers
                        withNSString:(NSString *)_validPolicy
                         withBoolean:(jboolean)_critical {
  OrgSpongycastleJceProviderPKIXPolicyNode_initWithJavaUtilList_withInt_withJavaUtilSet_withJavaSecurityCertPolicyNode_withJavaUtilSet_withNSString_withBoolean_(self, _children, _depth, _expectedPolicies, _parent, _policyQualifiers, _validPolicy, _critical);
  return self;
}


#line 45
- (void)addChildWithOrgSpongycastleJceProviderPKIXPolicyNode:(OrgSpongycastleJceProviderPKIXPolicyNode *)_child {
  
#line 48
  [((id<JavaUtilList>) nil_chk(children_)) addWithId:_child];
  [((OrgSpongycastleJceProviderPKIXPolicyNode *) nil_chk(_child)) setParentWithOrgSpongycastleJceProviderPKIXPolicyNode:self];
}

- (id<JavaUtilIterator>)getChildren {
  
#line 54
  return [((id<JavaUtilList>) nil_chk(children_)) iterator];
}


#line 57
- (jint)getDepth {
  
#line 59
  return depth_;
}


#line 62
- (id<JavaUtilSet>)getExpectedPolicies {
  
#line 64
  return expectedPolicies_;
}


#line 67
- (id<JavaSecurityCertPolicyNode>)getParent {
  
#line 69
  return parent_;
}


#line 72
- (id<JavaUtilSet>)getPolicyQualifiers {
  
#line 74
  return policyQualifiers_;
}


#line 77
- (NSString *)getValidPolicy {
  
#line 79
  return validPolicy_;
}


#line 82
- (jboolean)hasChildren {
  
#line 84
  return ![((id<JavaUtilList>) nil_chk(children_)) isEmpty];
}


#line 87
- (jboolean)isCritical {
  
#line 89
  return critical_;
}


#line 92
- (void)removeChildWithOrgSpongycastleJceProviderPKIXPolicyNode:(OrgSpongycastleJceProviderPKIXPolicyNode *)_child {
  
#line 94
  [((id<JavaUtilList>) nil_chk(children_)) removeWithId:_child];
}


#line 97
- (void)setCriticalWithBoolean:(jboolean)_critical {
  
#line 99
  critical_ = _critical;
}


#line 102
- (void)setParentWithOrgSpongycastleJceProviderPKIXPolicyNode:(OrgSpongycastleJceProviderPKIXPolicyNode *)_parent {
  
#line 104
  parent_ = _parent;
}


#line 107
- (NSString *)description {
  
#line 109
  return [self toStringWithNSString:@""];
}


#line 112
- (NSString *)toStringWithNSString:(NSString *)_indent {
  
#line 114
  JavaLangStringBuffer *_buf = new_JavaLangStringBuffer_init();
  (void) [_buf appendWithNSString:_indent];
  (void) [_buf appendWithNSString:validPolicy_];
  (void) [_buf appendWithNSString:@" {\n"];
  
#line 119
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(children_)) size]; i++) {
    
#line 121
    (void) [_buf appendWithNSString:[((OrgSpongycastleJceProviderPKIXPolicyNode *) nil_chk(((OrgSpongycastleJceProviderPKIXPolicyNode *) cast_chk([((id<JavaUtilList>) nil_chk(children_)) getWithInt:i], [OrgSpongycastleJceProviderPKIXPolicyNode class])))) toStringWithNSString:JreStrcat("$$", _indent, @"    ")]];
  }
  
#line 124
  (void) [_buf appendWithNSString:_indent];
  (void) [_buf appendWithNSString:@"}\n"];
  return [_buf description];
}


#line 129
- (id)java_clone {
  
#line 131
  return [self copy__];
}


#line 134
- (OrgSpongycastleJceProviderPKIXPolicyNode *)copy__ {
  
#line 136
  id<JavaUtilSet> _expectedPolicies = new_JavaUtilHashSet_init();
  id<JavaUtilIterator> _iter = [((id<JavaUtilSet>) nil_chk(expectedPolicies_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(_iter)) hasNext]) {
    
#line 140
    [_expectedPolicies addWithId:[NSString stringWithString:(NSString *) cast_chk([_iter next], [NSString class])]];
  }
  
#line 143
  id<JavaUtilSet> _policyQualifiers = new_JavaUtilHashSet_init();
  _iter = [((id<JavaUtilSet>) nil_chk(policyQualifiers_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(_iter)) hasNext]) {
    
#line 147
    [_policyQualifiers addWithId:[NSString stringWithString:(NSString *) cast_chk([_iter next], [NSString class])]];
  }
  
#line 150
  OrgSpongycastleJceProviderPKIXPolicyNode *_node = new_OrgSpongycastleJceProviderPKIXPolicyNode_initWithJavaUtilList_withInt_withJavaUtilSet_withJavaSecurityCertPolicyNode_withJavaUtilSet_withNSString_withBoolean_(new_JavaUtilArrayList_init(),
#line 151
  depth_,
#line 152
  _expectedPolicies,
#line 153
  nil,
#line 154
  _policyQualifiers, [NSString stringWithString:
#line 155
  validPolicy_],
#line 156
  critical_);
  
#line 158
  _iter = [((id<JavaUtilList>) nil_chk(children_)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(_iter)) hasNext]) {
    
#line 161
    OrgSpongycastleJceProviderPKIXPolicyNode *_child = [((OrgSpongycastleJceProviderPKIXPolicyNode *) nil_chk(((OrgSpongycastleJceProviderPKIXPolicyNode *) cast_chk([_iter next], [OrgSpongycastleJceProviderPKIXPolicyNode class])))) copy__];
    [((OrgSpongycastleJceProviderPKIXPolicyNode *) nil_chk(_child)) setParentWithOrgSpongycastleJceProviderPKIXPolicyNode:_node];
    [_node addChildWithOrgSpongycastleJceProviderPKIXPolicyNode:_child];
  }
  
#line 166
  return _node;
}


#line 169
- (void)setExpectedPoliciesWithJavaUtilSet:(id<JavaUtilSet>)expectedPolicies {
  
#line 171
  self->expectedPolicies_ = expectedPolicies;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertPolicyNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleJceProviderPKIXPolicyNode;", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:withInt:withJavaUtilSet:withJavaSecurityCertPolicyNode:withJavaUtilSet:withNSString:withBoolean:);
  methods[1].selector = @selector(addChildWithOrgSpongycastleJceProviderPKIXPolicyNode:);
  methods[2].selector = @selector(getChildren);
  methods[3].selector = @selector(getDepth);
  methods[4].selector = @selector(getExpectedPolicies);
  methods[5].selector = @selector(getParent);
  methods[6].selector = @selector(getPolicyQualifiers);
  methods[7].selector = @selector(getValidPolicy);
  methods[8].selector = @selector(hasChildren);
  methods[9].selector = @selector(isCritical);
  methods[10].selector = @selector(removeChildWithOrgSpongycastleJceProviderPKIXPolicyNode:);
  methods[11].selector = @selector(setCriticalWithBoolean:);
  methods[12].selector = @selector(setParentWithOrgSpongycastleJceProviderPKIXPolicyNode:);
  methods[13].selector = @selector(description);
  methods[14].selector = @selector(toStringWithNSString:);
  methods[15].selector = @selector(java_clone);
  methods[16].selector = @selector(copy__);
  methods[17].selector = @selector(setExpectedPoliciesWithJavaUtilSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "children_", "LJavaUtilList;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "depth_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "expectedPolicies_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "parent_", "LJavaSecurityCertPolicyNode;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "policyQualifiers_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "validPolicy_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "critical_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;ILJavaUtilSet;LJavaSecurityCertPolicyNode;LJavaUtilSet;LNSString;Z", "addChild", "LOrgSpongycastleJceProviderPKIXPolicyNode;", "removeChild", "setCritical", "Z", "setParent", "toString", "LNSString;", "clone", "copy", "setExpectedPolicies", "LJavaUtilSet;" };
  static const J2ObjcClassInfo _OrgSpongycastleJceProviderPKIXPolicyNode = { "PKIXPolicyNode", "org.spongycastle.jce.provider", ptrTable, methods, fields, 7, 0x1, 18, 7, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJceProviderPKIXPolicyNode;
}

@end


#line 27
void OrgSpongycastleJceProviderPKIXPolicyNode_initWithJavaUtilList_withInt_withJavaUtilSet_withJavaSecurityCertPolicyNode_withJavaUtilSet_withNSString_withBoolean_(OrgSpongycastleJceProviderPKIXPolicyNode *self, id<JavaUtilList> _children, jint _depth, id<JavaUtilSet> _expectedPolicies, id<JavaSecurityCertPolicyNode> _parent, id<JavaUtilSet> _policyQualifiers, NSString *_validPolicy, jboolean _critical) {
  NSObject_init(self);
  
#line 36
  self->children_ = _children;
  self->depth_ = _depth;
  self->expectedPolicies_ = _expectedPolicies;
  self->parent_ = _parent;
  self->policyQualifiers_ = _policyQualifiers;
  self->validPolicy_ = _validPolicy;
  self->critical_ = _critical;
}


#line 27
OrgSpongycastleJceProviderPKIXPolicyNode *new_OrgSpongycastleJceProviderPKIXPolicyNode_initWithJavaUtilList_withInt_withJavaUtilSet_withJavaSecurityCertPolicyNode_withJavaUtilSet_withNSString_withBoolean_(id<JavaUtilList> _children, jint _depth, id<JavaUtilSet> _expectedPolicies, id<JavaSecurityCertPolicyNode> _parent, id<JavaUtilSet> _policyQualifiers, NSString *_validPolicy, jboolean _critical) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJceProviderPKIXPolicyNode, initWithJavaUtilList_withInt_withJavaUtilSet_withJavaSecurityCertPolicyNode_withJavaUtilSet_withNSString_withBoolean_, _children, _depth, _expectedPolicies, _parent, _policyQualifiers, _validPolicy, _critical)
}


#line 27
OrgSpongycastleJceProviderPKIXPolicyNode *create_OrgSpongycastleJceProviderPKIXPolicyNode_initWithJavaUtilList_withInt_withJavaUtilSet_withJavaSecurityCertPolicyNode_withJavaUtilSet_withNSString_withBoolean_(id<JavaUtilList> _children, jint _depth, id<JavaUtilSet> _expectedPolicies, id<JavaSecurityCertPolicyNode> _parent, id<JavaUtilSet> _policyQualifiers, NSString *_validPolicy, jboolean _critical) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJceProviderPKIXPolicyNode, initWithJavaUtilList_withInt_withJavaUtilSet_withJavaSecurityCertPolicyNode_withJavaUtilSet_withNSString_withBoolean_, _children, _depth, _expectedPolicies, _parent, _policyQualifiers, _validPolicy, _critical)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJceProviderPKIXPolicyNode)

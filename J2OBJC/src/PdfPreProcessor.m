//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/PdfPreProcessor.java
//

#include "AOUtil.h"
#include "Annotation.h"
#include "Base64.h"
#include "DocumentException.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "J2ObjC_source.h"
#include "Jpeg.h"
#include "PdfContentByte.h"
#include "PdfExtraParams.h"
#include "PdfPreProcessor.h"
#include "PdfReader.h"
#include "PdfStamper.h"
#include "PdfUtil.h"
#include "PdfWriter.h"
#include "Rectangle.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Method.h"
#include "java/net/URI.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

#if !__has_feature(objc_arc)
#error "PdfPreProcessor must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaSignersPadesPdfPreProcessor ()

- (instancetype)init;

/*!
 @brief Sobreimpone una imagen JPEG en un documento PDF.
 @param image Imagen JPEG
 @param width Ancho de la imagen
 @param height Alto de la imagen
 @param left Distancia de la imagen al borde izquiero de la p &aacute; gina del PDF
 @param bottom Distancia de la imagen al borde inferior de la p &aacute; gina del PDF
 @param pageNum N &uacute; mero de p &aacute; gina del PDF donde insertar la imagen                 (la numeraci &oacute; n comienza en 1)
 @param url URL a la que enlazar &aacute;  la imagen si queremos que esta sea un hiperv &iacute; nculo             (puede ser  <code> null </code> )
 @param stp Estampador PDF de iText
 @throw IOExceptionEn caso de errores de entrada / salida
 */
+ (void)addImageWithComAowagieTextImage:(ComAowagieTextImage *)image
                                withInt:(jint)width
                                withInt:(jint)height
                                withInt:(jint)left
                                withInt:(jint)bottom
                                withInt:(jint)pageNum
                           withNSString:(NSString *)url
        withComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stp;

@end

inline JavaUtilLoggingLogger *EsGobAfirmaSignersPadesPdfPreProcessor_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaSignersPadesPdfPreProcessor_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersPadesPdfPreProcessor, LOGGER, JavaUtilLoggingLogger *)

/*!
 @brief Tama&ntilde;o m&aacute;ximo de ruta de un recurso.
 */
inline jint EsGobAfirmaSignersPadesPdfPreProcessor_get_MAX_PATH_SIZE(void);
#define EsGobAfirmaSignersPadesPdfPreProcessor_MAX_PATH_SIZE 500
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesPdfPreProcessor, MAX_PATH_SIZE, jint)

inline jint EsGobAfirmaSignersPadesPdfPreProcessor_get_LAST_PAGE(void);
#define EsGobAfirmaSignersPadesPdfPreProcessor_LAST_PAGE -1
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesPdfPreProcessor, LAST_PAGE, jint)

inline jint EsGobAfirmaSignersPadesPdfPreProcessor_get_ALL_PAGES(void);
#define EsGobAfirmaSignersPadesPdfPreProcessor_ALL_PAGES 0
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesPdfPreProcessor, ALL_PAGES, jint)

inline jint EsGobAfirmaSignersPadesPdfPreProcessor_get_FIRST_PAGE(void);
#define EsGobAfirmaSignersPadesPdfPreProcessor_FIRST_PAGE 1
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaSignersPadesPdfPreProcessor, FIRST_PAGE, jint)

__attribute__((unused)) static void EsGobAfirmaSignersPadesPdfPreProcessor_init(EsGobAfirmaSignersPadesPdfPreProcessor *self);

__attribute__((unused)) static EsGobAfirmaSignersPadesPdfPreProcessor *new_EsGobAfirmaSignersPadesPdfPreProcessor_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaSignersPadesPdfPreProcessor *create_EsGobAfirmaSignersPadesPdfPreProcessor_init(void);

__attribute__((unused)) static void EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithComAowagieTextImage_withInt_withInt_withInt_withInt_withInt_withNSString_withComAowagieTextPdfPdfStamper_(ComAowagieTextImage *image, jint width, jint height, jint left, jint bottom, jint pageNum, NSString *url, ComAowagieTextPdfPdfStamper *stp);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/pades/PdfPreProcessor.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaSignersPadesPdfPreProcessor)


#line 36
@implementation EsGobAfirmaSignersPadesPdfPreProcessor

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 47
- (instancetype)init {
  EsGobAfirmaSignersPadesPdfPreProcessor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 54
+ (void)addMoreInfoWithJavaUtilMap:(id<JavaUtilMap>)moreInfo
   withComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stp {
  EsGobAfirmaSignersPadesPdfPreProcessor_addMoreInfoWithJavaUtilMap_withComAowagieTextPdfPdfStamper_(moreInfo, stp);
}


#line 61
+ (void)attachFileWithJavaUtilProperties:(JavaUtilProperties *)extraParams
         withComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stp
                             withBoolean:(jboolean)secureMode {
  EsGobAfirmaSignersPadesPdfPreProcessor_attachFileWithJavaUtilProperties_withComAowagieTextPdfPdfStamper_withBoolean_(extraParams, stp, secureMode);
}


#line 128
+ (void)addImageWithByteArray:(IOSByteArray *)jpegImage
                      withInt:(jint)width
                      withInt:(jint)height
                      withInt:(jint)left
                      withInt:(jint)bottom
                      withInt:(jint)pageNum
                 withNSString:(NSString *)url
withComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stp {
  EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithByteArray_withInt_withInt_withInt_withInt_withInt_withNSString_withComAowagieTextPdfPdfStamper_(jpegImage, width, height, left, bottom, pageNum, url, stp);
}


#line 158
+ (void)addImageWithComAowagieTextImage:(ComAowagieTextImage *)image
                                withInt:(jint)width
                                withInt:(jint)height
                                withInt:(jint)left
                                withInt:(jint)bottom
                                withInt:(jint)pageNum
                           withNSString:(NSString *)url
        withComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stp {
  EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithComAowagieTextImage_withInt_withInt_withInt_withInt_withInt_withNSString_withComAowagieTextPdfPdfStamper_(image, width, height, left, bottom, pageNum, url, stp);
}


#line 198
+ (void)addImageWithJavaUtilProperties:(JavaUtilProperties *)extraParams
       withComAowagieTextPdfPdfStamper:(ComAowagieTextPdfPdfStamper *)stp
        withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)pdfReader
                           withBoolean:(jboolean)secureMode {
  EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithJavaUtilProperties_withComAowagieTextPdfPdfStamper_withComAowagieTextPdfPdfReader_withBoolean_(extraParams, stp, pdfReader, secureMode);
}


#line 264
+ (ComAowagieTextImage *)getImageWithNSString:(NSString *)imageReference
                                  withBoolean:(jboolean)secureMode {
  return EsGobAfirmaSignersPadesPdfPreProcessor_getImageWithNSString_withBoolean_(imageReference, secureMode);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x8, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x9, 6, 7, 5, -1, -1, -1 },
    { NULL, "V", 0xa, 6, 8, 5, -1, -1, -1 },
    { NULL, "V", 0x8, 6, 9, 5, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x8, 10, 11, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addMoreInfoWithJavaUtilMap:withComAowagieTextPdfPdfStamper:);
  methods[2].selector = @selector(attachFileWithJavaUtilProperties:withComAowagieTextPdfPdfStamper:withBoolean:);
  methods[3].selector = @selector(addImageWithByteArray:withInt:withInt:withInt:withInt:withInt:withNSString:withComAowagieTextPdfPdfStamper:);
  methods[4].selector = @selector(addImageWithComAowagieTextImage:withInt:withInt:withInt:withInt:withInt:withNSString:withComAowagieTextPdfPdfStamper:);
  methods[5].selector = @selector(addImageWithJavaUtilProperties:withComAowagieTextPdfPdfStamper:withComAowagieTextPdfPdfReader:withBoolean:);
  methods[6].selector = @selector(getImageWithNSString:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "MAX_PATH_SIZE", "I", .constantValue.asInt = EsGobAfirmaSignersPadesPdfPreProcessor_MAX_PATH_SIZE, 0x1a, -1, -1, -1, -1 },
    { "LAST_PAGE", "I", .constantValue.asInt = EsGobAfirmaSignersPadesPdfPreProcessor_LAST_PAGE, 0x1a, -1, -1, -1, -1 },
    { "ALL_PAGES", "I", .constantValue.asInt = EsGobAfirmaSignersPadesPdfPreProcessor_ALL_PAGES, 0x1a, -1, -1, -1, -1 },
    { "FIRST_PAGE", "I", .constantValue.asInt = EsGobAfirmaSignersPadesPdfPreProcessor_FIRST_PAGE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "addMoreInfo", "LJavaUtilMap;LComAowagieTextPdfPdfStamper;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;Lcom/aowagie/text/pdf/PdfStamper;)V", "attachFile", "LJavaUtilProperties;LComAowagieTextPdfPdfStamper;Z", "LJavaIoIOException;", "addImage", "[BIIIIILNSString;LComAowagieTextPdfPdfStamper;", "LComAowagieTextImage;IIIIILNSString;LComAowagieTextPdfPdfStamper;", "LJavaUtilProperties;LComAowagieTextPdfPdfStamper;LComAowagieTextPdfPdfReader;Z", "getImage", "LNSString;Z", &EsGobAfirmaSignersPadesPdfPreProcessor_LOGGER };
  static const J2ObjcClassInfo _EsGobAfirmaSignersPadesPdfPreProcessor = { "PdfPreProcessor", "es.gob.afirma.signers.pades", ptrTable, methods, fields, 7, 0x11, 7, 5, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersPadesPdfPreProcessor;
}

+ (void)initialize {
  if (self == [EsGobAfirmaSignersPadesPdfPreProcessor class]) {
    EsGobAfirmaSignersPadesPdfPreProcessor_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 38
    @"es.gob.afirma");
    J2OBJC_SET_INITIALIZED(EsGobAfirmaSignersPadesPdfPreProcessor)
  }
}

@end


#line 47
void EsGobAfirmaSignersPadesPdfPreProcessor_init(EsGobAfirmaSignersPadesPdfPreProcessor *self) {
  NSObject_init(self);
}


#line 47
EsGobAfirmaSignersPadesPdfPreProcessor *new_EsGobAfirmaSignersPadesPdfPreProcessor_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersPadesPdfPreProcessor, init)
}


#line 47
EsGobAfirmaSignersPadesPdfPreProcessor *create_EsGobAfirmaSignersPadesPdfPreProcessor_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersPadesPdfPreProcessor, init)
}


#line 54
void EsGobAfirmaSignersPadesPdfPreProcessor_addMoreInfoWithJavaUtilMap_withComAowagieTextPdfPdfStamper_(id<JavaUtilMap> moreInfo, ComAowagieTextPdfPdfStamper *stp) {
  EsGobAfirmaSignersPadesPdfPreProcessor_initialize();
  
#line 55
  if (moreInfo == nil || [moreInfo isEmpty]) {
    return;
  }
  [((ComAowagieTextPdfPdfStamper *) nil_chk(stp)) setMoreInfoWithJavaUtilMap:moreInfo];
}


#line 61
void EsGobAfirmaSignersPadesPdfPreProcessor_attachFileWithJavaUtilProperties_withComAowagieTextPdfPdfStamper_withBoolean_(JavaUtilProperties *extraParams, ComAowagieTextPdfPdfStamper *stp, jboolean secureMode) {
  EsGobAfirmaSignersPadesPdfPreProcessor_initialize();
  
#line 62
  if (extraParams == nil) {
    return;
  }
  if (stp == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"No se puede adjuntar un fichero a un PdfStamper nulo");
  }
  
#line 69
  NSString *b64Attachment = [extraParams getPropertyWithNSString:EsGobAfirmaSignersPadesCommonPdfExtraParams_ATTACH];
  
#line 72
  NSString *attachmentFileName = [extraParams getPropertyWithNSString:EsGobAfirmaSignersPadesCommonPdfExtraParams_ATTACH_FILENAME];
  
#line 75
  NSString *attachmentDescription = [extraParams getPropertyWithNSString:EsGobAfirmaSignersPadesCommonPdfExtraParams_ATTACH_DESCRIPTION];
  
#line 78
  if (b64Attachment != nil && attachmentFileName != nil) {
    
#line 80
    IOSByteArray *attachment = nil;
    
#line 84
    if (!secureMode) {
      
#line 87
      if ([b64Attachment java_length] < EsGobAfirmaSignersPadesPdfPreProcessor_MAX_PATH_SIZE) {
        @try {
          JavaNetURI *uri = EsGobAfirmaCoreMiscAOUtil_createURIWithNSString_(b64Attachment);
          {
            JavaIoInputStream *is = EsGobAfirmaCoreMiscAOUtil_loadFileWithJavaNetURI_(
#line 90
            uri);
            JavaLangThrowable *__primaryException1 = nil;
            
#line 90
            @try {
              attachment = EsGobAfirmaCoreMiscAOUtil_getDataFromInputStreamWithJavaIoInputStream_(is);
            }
            @catch (JavaLangThrowable *e) {
              __primaryException1 = e;
              @throw e;
            }
            @finally {
              if (is != nil) {
                if (__primaryException1 != nil) {
                  @try {
                    [is close];
                  }
                  @catch (JavaLangThrowable *e) {
                    [__primaryException1 addSuppressedWithJavaLangThrowable:e];
                  }
                }
                else {
                  [is close];
                }
              }
            }
          }
        }
        @catch (
#line 93
        JavaLangException *e) {
          [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfPreProcessor_LOGGER)) infoWithNSString:JreStrcat("$@", @"El parametro de adjunto no contiene una ruta valida a un recurso: ", e)];
          attachment = nil;
        }
      }
    }
    
#line 102
    if (attachment == nil) {
      @try {
        attachment = EsGobAfirmaCoreMiscBase64_decodeWithNSString_(b64Attachment);
      }
      @catch (JavaIoIOException *e) {
        [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfPreProcessor_LOGGER)) warningWithNSString:JreStrcat("$@", @"Se ha indicado un adjunto, pero no estaba en formato Base64, se ignorara : ", e)];
        return;
      }
    }
    [((ComAowagieTextPdfPdfWriter *) nil_chk([stp getWriter])) addFileAttachmentWithNSString:attachmentDescription withByteArray:attachment withNSString:nil withNSString:attachmentFileName];
  }
}


#line 128
void EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithByteArray_withInt_withInt_withInt_withInt_withInt_withNSString_withComAowagieTextPdfPdfStamper_(IOSByteArray *jpegImage, jint width, jint height, jint left, jint bottom, jint pageNum, NSString *url, ComAowagieTextPdfPdfStamper *stp) {
  EsGobAfirmaSignersPadesPdfPreProcessor_initialize();
  
#line 136
  ComAowagieTextImage *image;
  @try {
    image = new_ComAowagieTextJpeg_initWithByteArray_(jpegImage);
  }
  @catch (ComAowagieTextDocumentException *e) {
    @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(@"Error durante la carga de la imagen JPG", e);
  }
  EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithComAowagieTextImage_withInt_withInt_withInt_withInt_withInt_withNSString_withComAowagieTextPdfPdfStamper_(image, width, height, left, bottom, pageNum, url, stp);
}


#line 158
void EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithComAowagieTextImage_withInt_withInt_withInt_withInt_withInt_withNSString_withComAowagieTextPdfPdfStamper_(ComAowagieTextImage *image, jint width, jint height, jint left, jint bottom, jint pageNum, NSString *url, ComAowagieTextPdfPdfStamper *stp) {
  EsGobAfirmaSignersPadesPdfPreProcessor_initialize();
  
#line 166
  ComAowagieTextPdfPdfContentByte *content = [((ComAowagieTextPdfPdfStamper *) nil_chk(stp)) getOverContentWithInt:pageNum];
  @try {
    if (url != nil) {
      [((ComAowagieTextImage *) nil_chk(image)) setAnnotationWithComAowagieTextAnnotation:new_ComAowagieTextAnnotation_initWithFloat_withFloat_withFloat_withFloat_withNSString_(0, 0, 0, 0, url)];
    }
    [((ComAowagieTextPdfPdfContentByte *) nil_chk(content)) addImageWithComAowagieTextImage:
#line 172
    image withFloat:
#line 173
    width withFloat:
#line 174
    0 withFloat:
#line 175
    0 withFloat:
#line 176
    height withFloat:
#line 177
    left withFloat:
#line 178
    bottom withBoolean:
#line 179
    false];
  }
  @catch (
#line 182
  ComAowagieTextDocumentException *e) {
    @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error durante la insercion de la imagen en el PDF: ", e), e);
  }
}


#line 198
void EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithJavaUtilProperties_withComAowagieTextPdfPdfStamper_withComAowagieTextPdfPdfReader_withBoolean_(JavaUtilProperties *extraParams, ComAowagieTextPdfPdfStamper *stp, ComAowagieTextPdfPdfReader *pdfReader, jboolean secureMode) {
  EsGobAfirmaSignersPadesPdfPreProcessor_initialize();
  if (extraParams == nil || stp == nil) {
    return;
  }
  
#line 204
  NSString *imageDataBase64 = [extraParams getPropertyWithNSString:EsGobAfirmaSignersPadesCommonPdfExtraParams_IMAGE];
  if (imageDataBase64 == nil || [imageDataBase64 java_length] < 1) {
    return;
  }
  
#line 209
  ComAowagieTextImage *image = EsGobAfirmaSignersPadesPdfPreProcessor_getImageWithNSString_withBoolean_(imageDataBase64, secureMode);
  if (image == nil) {
    @throw new_JavaIoIOException_initWithNSString_(@"No se pudo cargar la imagen para agregarla al PDF");
  }
  
#line 215
  ComAowagieTextRectangle *rect = EsGobAfirmaSignersPadesPdfUtil_getPositionOnPageWithJavaUtilProperties_withNSString_(extraParams, EsGobAfirmaSignersPadesCommonPdfExtraParams_IMAGE);
  
#line 217
  if (rect == nil) {
    return;
  }
  
#line 221
  NSString *imagePage = [extraParams getPropertyWithNSString:EsGobAfirmaSignersPadesCommonPdfExtraParams_IMAGE_PAGE];
  if (imagePage == nil) {
    return;
  }
  
#line 226
  jint pageNum;
  @try {
    pageNum = JavaLangInteger_parseIntWithNSString_([imagePage java_trim]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$@", @"Se ha indicado un numero de pagina con formato invalido para insertar la imagen (",
#line 232
    imagePage, @"): ", e), e);
  }
  
#line 236
  if (pageNum == EsGobAfirmaSignersPadesPdfPreProcessor_LAST_PAGE) {
    pageNum = [((ComAowagieTextPdfPdfReader *) nil_chk(pdfReader)) getNumberOfPages];
  }
  jint pageLimit;
  if (pageNum == EsGobAfirmaSignersPadesPdfPreProcessor_ALL_PAGES) {
    pageNum = EsGobAfirmaSignersPadesPdfPreProcessor_FIRST_PAGE;
    pageLimit = [((ComAowagieTextPdfPdfReader *) nil_chk(pdfReader)) getNumberOfPages];
  }
  else {
    pageLimit = pageNum;
  }
  
#line 248
  for (jint i = pageNum; i <= pageLimit; i++) {
    EsGobAfirmaSignersPadesPdfPreProcessor_addImageWithComAowagieTextImage_withInt_withInt_withInt_withInt_withInt_withNSString_withComAowagieTextPdfPdfStamper_(
#line 250
    image, JreFpToInt(
#line 251
    [rect getWidth]), JreFpToInt(
#line 252
    [rect getHeight]), JreFpToInt(
#line 253
    [rect getLeft]), JreFpToInt(
#line 254
    [rect getBottom]),
#line 255
    i,
#line 256
    nil,
#line 257
    stp);
  }
  
#line 261
  [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfPreProcessor_LOGGER)) infoWithNSString:@"Anadida imagen al PDF antes de la firma"];
}


#line 264
ComAowagieTextImage *EsGobAfirmaSignersPadesPdfPreProcessor_getImageWithNSString_withBoolean_(NSString *imageReference, jboolean secureMode) {
  EsGobAfirmaSignersPadesPdfPreProcessor_initialize();
  if (imageReference == nil || [imageReference java_isEmpty]) {
    return nil;
  }
  
#line 270
  IOSByteArray *image = nil;
  
#line 274
  if (!secureMode) {
    
#line 277
    if ([imageReference java_length] < EsGobAfirmaSignersPadesPdfPreProcessor_MAX_PATH_SIZE) {
      @try {
        JavaNetURI *uri = EsGobAfirmaCoreMiscAOUtil_createURIWithNSString_(imageReference);
        {
          JavaIoInputStream *is = EsGobAfirmaCoreMiscAOUtil_loadFileWithJavaNetURI_(
#line 280
          uri);
          JavaLangThrowable *__primaryException1 = nil;
          
#line 280
          @try {
            image = EsGobAfirmaCoreMiscAOUtil_getDataFromInputStreamWithJavaIoInputStream_(is);
          }
          @catch (JavaLangThrowable *e) {
            __primaryException1 = e;
            @throw e;
          }
          @finally {
            if (is != nil) {
              if (__primaryException1 != nil) {
                @try {
                  [is close];
                }
                @catch (JavaLangThrowable *e) {
                  [__primaryException1 addSuppressedWithJavaLangThrowable:e];
                }
              }
              else {
                [is close];
              }
            }
          }
        }
      }
      @catch (
#line 283
      JavaLangException *e) {
        @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(@"El parametro de imagen no contiene una ruta valida a un recurso", e);
      }
    }
  }
  
#line 291
  if (image == nil) {
    
#line 293
    @try {
      image = EsGobAfirmaCoreMiscBase64_decodeWithNSString_(imageReference);
    }
    @catch (JavaLangException *e) {
      @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(@"Se ha proporcionado una imagen de rubrica que no esta codificada en Base64", e);
    }
  }
  
#line 302
  IOSByteArray *normalizedImage;
  @try {
    IOSClass *ImageUtilsClass = IOSClass_forName_(@"es.gob.afirma.ui.utils.ImageUtils");
    JavaLangReflectMethod *normalizeImageToPdfMethod = [((IOSClass *) nil_chk(ImageUtilsClass)) getMethod:@"normalizeImageToPdf" parameterTypes:[IOSObjectArray newArrayWithObjects:(id[]){ IOSClass_byteArray(1) } count:1 type:IOSClass_class_()]];
    id normalizedImageObject = [((JavaLangReflectMethod *) nil_chk(normalizeImageToPdfMethod)) invokeWithId:nil withNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ image } count:1 type:NSObject_class_()]];
    normalizedImage = (IOSByteArray *) cast_chk(normalizedImageObject, [IOSByteArray class]);
  }
  @catch (JavaLangThrowable *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersPadesPdfPreProcessor_LOGGER)) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, WARNING) withNSString:JreStrcat("$@", @"No se pudo normalizar la imagen de rubrica. Se agregara tal cual: ", e)];
    normalizedImage = image;
  }
  
#line 314
  ComAowagieTextImage *jpgImage;
  @try {
    jpgImage = new_ComAowagieTextJpeg_initWithByteArray_(normalizedImage);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(@"Se ha proporcionado una imagen de rubrica que no esta codificada en JPEG", e);
  }
  return jpgImage;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersPadesPdfPreProcessor)

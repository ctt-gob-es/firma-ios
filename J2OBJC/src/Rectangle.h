//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Rectangle.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Rectangle")
#ifdef RESTRICT_Rectangle
#define INCLUDE_ALL_Rectangle 0
#else
#define INCLUDE_ALL_Rectangle 1
#endif
#undef RESTRICT_Rectangle

#if !defined (ComAowagieTextRectangle_) && (INCLUDE_ALL_Rectangle || defined(INCLUDE_ComAowagieTextRectangle))
#define ComAowagieTextRectangle_

#define RESTRICT_Element 1
#define INCLUDE_ComAowagieTextElement 1
#include "Element.h"

@class HarmonyJavaAwtColor;
@class JavaUtilArrayList;
@protocol ComAowagieTextElementListener;

/*!
 @brief A <CODE>Rectangle</CODE> is the representation of a geometric figure.
 Rectangles support constant width borders using 
 <code>setBorderWidth(float)</code>and <code>setBorder(int)</code>.
  They also support borders that vary in width/color on each side using
  methods like <code>setBorderWidthLeft(float)</code>or
  <code>setBorderColorLeft(Color)</code>.
 - seealso: Element
 - seealso: Table
 - seealso: Cell
 - seealso: HeaderFooter
 */
@interface ComAowagieTextRectangle : NSObject < ComAowagieTextElement > {
 @public
  /*!
   @brief the lower left x-coordinate.
   */
  jfloat llx_;
  /*!
   @brief the lower left y-coordinate.
   */
  jfloat lly_;
  /*!
   @brief the upper right x-coordinate.
   */
  jfloat urx_;
  /*!
   @brief the upper right y-coordinate.
   */
  jfloat ury_;
  /*!
   @brief The rotation of the Rectangle
   */
  jint rotation_;
  /*!
   @brief This represents the status of the 4 sides of the rectangle.
   */
  jint border_;
  /*!
   @brief This is the width of the border around this rectangle.
   */
  jfloat borderWidth_;
}

#pragma mark Public

/*!
 @brief Constructs a <CODE>Rectangle</CODE> -object starting from the origin
  (0, 0).
 @param urx upper right x
 @param ury upper right y
 */
- (instancetype)initWithFloat:(jfloat)urx
                    withFloat:(jfloat)ury;

/*!
 @brief Constructs a <CODE>Rectangle</CODE> -object.
 @param llx lower left x
 @param lly lower left y
 @param urx upper right x
 @param ury upper right y
 */
- (instancetype)initWithFloat:(jfloat)llx
                    withFloat:(jfloat)lly
                    withFloat:(jfloat)urx
                    withFloat:(jfloat)ury;

/*!
 @brief Constructs a <CODE>Rectangle</CODE> -object.
 @param rect another  <CODE> Rectangle </CODE>
 */
- (instancetype)initWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect;

/*!
 @brief Copies each of the parameters, except the position, from a 
 <CODE>Rectangle</CODE> object
 @param rect <CODE> Rectangle </CODE>  to copy from
 */
- (void)cloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect;

/*!
 @brief Disables the border on the specified side.
 @param side the side to disable.  One of 
  <CODE> LEFT, RIGHT, TOP, BOTTOM </CODE>
 */
- (void)disableBorderSideWithInt:(jint)side;

/*!
 @brief Enables the border on the specified side.
 @param side the side to enable.  One of 
  <CODE> LEFT, RIGHT, TOP, BOTTOM </CODE>
 */
- (void)enableBorderSideWithInt:(jint)side;

/*!
 @brief Gets the backgroundcolor.
 @return a <CODE>Color</CODE>
 */
- (HarmonyJavaAwtColor *)getBackgroundColor;

/*!
 @brief Returns the exact type of the border.
 @return a value
 */
- (jint)getBorder;

/*!
 @brief Gets the color of the border.
 @return a <CODE>Color</CODE>
 */
- (HarmonyJavaAwtColor *)getBorderColor;

/*!
 @brief Gets the color of the bottom border.
 @return a <CODE>Color</CODE>
 */
- (HarmonyJavaAwtColor *)getBorderColorBottom;

/*!
 @brief Gets the color of the left border.
 @return a <CODE>Color</CODE>
 */
- (HarmonyJavaAwtColor *)getBorderColorLeft;

/*!
 @brief Gets the color of the right border.
 @return a <CODE>Color</CODE>
 */
- (HarmonyJavaAwtColor *)getBorderColorRight;

/*!
 @brief Gets the color of the top border.
 @return a <CODE>Color</CODE>
 */
- (HarmonyJavaAwtColor *)getBorderColorTop;

/*!
 @brief Gets the borderwidth.
 @return a value
 */
- (jfloat)getBorderWidth;

/*!
 @brief Gets the width of the bottom border.
 @return a width
 */
- (jfloat)getBorderWidthBottom;

/*!
 @brief Gets the width of the left border.
 @return a width
 */
- (jfloat)getBorderWidthLeft;

/*!
 @brief Gets the width of the right border.
 @return a width
 */
- (jfloat)getBorderWidthRight;

/*!
 @brief Gets the width of the top border.
 @return a width
 */
- (jfloat)getBorderWidthTop;

/*!
 @brief Returns the lower left y-coordinate.
 @return the lower left y-coordinate
 */
- (jfloat)getBottom;

/*!
 @brief Returns the lower left y-coordinate, considering a given margin.
 @param margin a margin
 @return the lower left y-coordinate
 */
- (jfloat)getBottomWithFloat:(jfloat)margin;

/*!
 @brief Gets all the chunks in this element.
 @return an <CODE>ArrayList</CODE>
 */
- (JavaUtilArrayList *)getChunks;

/*!
 @brief Gets the grayscale.
 @return the grayscale color of the background
  or 0 if the background has no grayscale color.
 */
- (jfloat)getGrayFill;

/*!
 @brief Returns the height of the rectangle.
 @return the height
 */
- (jfloat)getHeight;

/*!
 @brief Returns the lower left x-coordinate.
 @return the lower left x-coordinate
 */
- (jfloat)getLeft;

/*!
 @brief Returns the lower left x-coordinate, considering a given margin.
 @param margin a margin
 @return the lower left x-coordinate
 */
- (jfloat)getLeftWithFloat:(jfloat)margin;

/*!
 @brief Returns the upper right x-coordinate.
 @return the upper right x-coordinate
 */
- (jfloat)getRight;

/*!
 @brief Returns the upper right x-coordinate, considering a given margin.
 @param margin a margin
 @return the upper right x-coordinate
 */
- (jfloat)getRightWithFloat:(jfloat)margin;

/*!
 @brief Gets the rotation of the rectangle
 @return a rotation value
 */
- (jint)getRotation;

/*!
 @brief Returns the upper right y-coordinate.
 @return the upper right y-coordinate
 */
- (jfloat)getTop;

/*!
 @brief Returns the upper right y-coordinate, considering a given margin.
 @param margin a margin
 @return the upper right y-coordinate
 */
- (jfloat)getTopWithFloat:(jfloat)margin;

/*!
 @brief Returns the width of the rectangle.
 @return the width
 */
- (jfloat)getWidth;

/*!
 @brief Indicates whether the specified type of border is set.
 @param type the type of border
 @return a boolean
 */
- (jboolean)hasBorderWithInt:(jint)type;

/*!
 @brief Indicates whether some type of border is set.
 @return a boolean
 */
- (jboolean)hasBorders;

/*!
 - seealso: com.aowagie.text.Element#isContent()
 @since iText 2.0.8
 */
- (jboolean)isContent;

/*!
 - seealso: com.aowagie.text.Element#isNestable()
 @since iText 2.0.8
 */
- (jboolean)isNestable;

/*!
 @brief Indicates whether variable width borders are being used.
 Returns true if <CODE>setBorderWidthLeft, setBorderWidthRight,
  setBorderWidthTop, or setBorderWidthBottom</CODE> has been called.
 @return true if variable width borders are in use
 */
- (jboolean)isUseVariableBorders;

/*!
 @brief Normalizes the rectangle.
 Switches lower left with upper right if necessary.
 */
- (void)normalize;

/*!
 @brief Processes the element by adding it (or the different parts) to an 
 <CODE>ElementListener</CODE>.
 @param listener an  <CODE> ElementListener </CODE>
 @return <CODE>true</CODE> if the element was processed successfully
 */
- (jboolean)processWithComAowagieTextElementListener:(id<ComAowagieTextElementListener>)listener;

/*!
 @brief Gets a Rectangle that is altered to fit on the page.
 @param top the top position
 @param bottom the bottom position
 @return a <CODE>Rectangle</CODE>
 */
- (ComAowagieTextRectangle *)rectangleWithFloat:(jfloat)top
                                      withFloat:(jfloat)bottom;

/*!
 @brief Rotates the rectangle.
 Swaps the values of llx and lly and of urx and ury.
 @return the rotated <CODE>Rectangle</CODE>
 */
- (ComAowagieTextRectangle *)rotate;

/*!
 @brief Sets the backgroundcolor of the rectangle.
 @param backgroundColor a  <CODE> Color </CODE>
 */
- (void)setBackgroundColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)backgroundColor;

/*!
 @brief Enables/Disables the border on the specified sides.
 The border is specified as an integer bitwise combination of
  the constants: <CODE>LEFT, RIGHT, TOP, BOTTOM</CODE>.
 - seealso: #enableBorderSide(int)
 - seealso: #disableBorderSide(int)
 @param border the new value
 */
- (void)setBorderWithInt:(jint)border;

/*!
 @brief Sets the color of the border.
 @param borderColor a  <CODE> Color </CODE>
 */
- (void)setBorderColorWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColor;

/*!
 @brief Sets the color of the bottom border.
 @param borderColorBottom a  <CODE> Color </CODE>
 */
- (void)setBorderColorBottomWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorBottom;

/*!
 @brief Sets the color of the left border.
 @param borderColorLeft a  <CODE> Color </CODE>
 */
- (void)setBorderColorLeftWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorLeft;

/*!
 @brief Sets the color of the right border.
 @param borderColorRight a  <CODE> Color </CODE>
 */
- (void)setBorderColorRightWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorRight;

/*!
 @brief Sets the color of the top border.
 @param borderColorTop a  <CODE> Color </CODE>
 */
- (void)setBorderColorTopWithHarmonyJavaAwtColor:(HarmonyJavaAwtColor *)borderColorTop;

/*!
 @brief Sets the borderwidth of the table.
 @param borderWidth the new value
 */
- (void)setBorderWidthWithFloat:(jfloat)borderWidth;

/*!
 @brief Sets the width of the bottom border.
 @param borderWidthBottom a width
 */
- (void)setBorderWidthBottomWithFloat:(jfloat)borderWidthBottom;

/*!
 @brief Sets the width of the left border.
 @param borderWidthLeft a width
 */
- (void)setBorderWidthLeftWithFloat:(jfloat)borderWidthLeft;

/*!
 @brief Sets the width of the right border.
 @param borderWidthRight a width
 */
- (void)setBorderWidthRightWithFloat:(jfloat)borderWidthRight;

/*!
 @brief Sets the width of the top border.
 @param borderWidthTop a width
 */
- (void)setBorderWidthTopWithFloat:(jfloat)borderWidthTop;

/*!
 @brief Sets the lower left y-coordinate.
 @param lly the new value
 */
- (void)setBottomWithFloat:(jfloat)lly;

/*!
 @brief Sets the the background color to a grayscale value.
 @param value the new grayscale value
 */
- (void)setGrayFillWithFloat:(jfloat)value;

/*!
 @brief Sets the lower left x-coordinate.
 @param llx the new value
 */
- (void)setLeftWithFloat:(jfloat)llx;

/*!
 @brief Sets the upper right x-coordinate.
 @param urx the new value
 */
- (void)setRightWithFloat:(jfloat)urx;

/*!
 @brief Sets the upper right y-coordinate.
 @param ury the new value
 */
- (void)setTopWithFloat:(jfloat)ury;

/*!
 @brief Sets a parameter indicating if the rectangle has variable borders
 @param useVariableBorders indication if the rectangle has variable borders
 */
- (void)setUseVariableBordersWithBoolean:(jboolean)useVariableBorders;

/*!
 @brief Copies each of the parameters, except the position, from a 
 <CODE>Rectangle</CODE> object if the value is set there
 @param rect <CODE> Rectangle </CODE>  to copy from
 */
- (void)softCloneNonPositionParametersWithComAowagieTextRectangle:(ComAowagieTextRectangle *)rect;

/*!
 @return a String representation of the rectangle
 - seealso: java.lang.Object#toString()
 */
- (NSString *)description;

/*!
 @brief Gets the type of the text element.
 @return a type
 */
- (jint)type;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextRectangle)

/*!
 @brief This is the value that will be used as <VAR>undefined </VAR>.
 */
inline jint ComAowagieTextRectangle_get_UNDEFINED(void);
#define ComAowagieTextRectangle_UNDEFINED -1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextRectangle, UNDEFINED, jint)

/*!
 @brief This represents one side of the border of the <CODE>Rectangle</CODE>.
 */
inline jint ComAowagieTextRectangle_get_TOP(void);
#define ComAowagieTextRectangle_TOP 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextRectangle, TOP, jint)

/*!
 @brief This represents one side of the border of the <CODE>Rectangle</CODE>.
 */
inline jint ComAowagieTextRectangle_get_BOTTOM(void);
#define ComAowagieTextRectangle_BOTTOM 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextRectangle, BOTTOM, jint)

/*!
 @brief This represents one side of the border of the <CODE>Rectangle</CODE>.
 */
inline jint ComAowagieTextRectangle_get_LEFT(void);
#define ComAowagieTextRectangle_LEFT 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextRectangle, LEFT, jint)

/*!
 @brief This represents one side of the border of the <CODE>Rectangle</CODE>.
 */
inline jint ComAowagieTextRectangle_get_RIGHT(void);
#define ComAowagieTextRectangle_RIGHT 8
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextRectangle, RIGHT, jint)

/*!
 @brief This represents a rectangle without borders.
 */
inline jint ComAowagieTextRectangle_get_NO_BORDER(void);
#define ComAowagieTextRectangle_NO_BORDER 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextRectangle, NO_BORDER, jint)

/*!
 @brief This represents a type of border.
 */
inline jint ComAowagieTextRectangle_get_BOX(void);
#define ComAowagieTextRectangle_BOX 15
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextRectangle, BOX, jint)

FOUNDATION_EXPORT void ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(ComAowagieTextRectangle *self, jfloat llx, jfloat lly, jfloat urx, jfloat ury);

FOUNDATION_EXPORT ComAowagieTextRectangle *new_ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(jfloat llx, jfloat lly, jfloat urx, jfloat ury) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextRectangle *create_ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_(jfloat llx, jfloat lly, jfloat urx, jfloat ury);

FOUNDATION_EXPORT void ComAowagieTextRectangle_initWithFloat_withFloat_(ComAowagieTextRectangle *self, jfloat urx, jfloat ury);

FOUNDATION_EXPORT ComAowagieTextRectangle *new_ComAowagieTextRectangle_initWithFloat_withFloat_(jfloat urx, jfloat ury) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextRectangle *create_ComAowagieTextRectangle_initWithFloat_withFloat_(jfloat urx, jfloat ury);

FOUNDATION_EXPORT void ComAowagieTextRectangle_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *self, ComAowagieTextRectangle *rect);

FOUNDATION_EXPORT ComAowagieTextRectangle *new_ComAowagieTextRectangle_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *rect) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextRectangle *create_ComAowagieTextRectangle_initWithComAowagieTextRectangle_(ComAowagieTextRectangle *rect);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextRectangle)

#endif

#pragma pop_macro("INCLUDE_ALL_Rectangle")

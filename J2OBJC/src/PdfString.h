//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfString")
#ifdef RESTRICT_PdfString
#define INCLUDE_ALL_PdfString 0
#else
#define INCLUDE_ALL_PdfString 1
#endif
#undef RESTRICT_PdfString

#if !defined (ComAowagieTextPdfPdfString_) && (INCLUDE_ALL_PdfString || defined(INCLUDE_ComAowagieTextPdfPdfString))
#define ComAowagieTextPdfPdfString_

#define RESTRICT_PdfObject 1
#define INCLUDE_ComAowagieTextPdfPdfObject 1
#include "PdfObject.h"

@class ComAowagieTextPdfPdfReader;
@class ComAowagieTextPdfPdfWriter;
@class IOSByteArray;
@class JavaIoOutputStream;

/*!
 @brief A <CODE>PdfString</CODE>-class is the PDF-equivalent of a
  JAVA-<CODE>String</CODE>-object.
 <P>
  A string is a sequence of characters delimited by parenthesis.
  If a string is too long to be conveniently placed on a single line, it may
  be split across multiple lines by using the backslash character (\) at the
  end of a line to indicate that the string continues on the following line.
  Within a string, the backslash character is used as an escape to specify
  unbalanced parenthesis, non-printing ASCII characters, and the backslash
  character itself. Use of the \<I>ddd</I> escape sequence is the preferred
  way to represent characters outside the printable ASCII character set.<BR>
  This object is described in the 'Portable Document Format Reference Manual
  version 1.7' section 3.2.3 (page 53-56).
 - seealso: PdfObject
 - seealso: BadPdfFormatException
 */
@interface ComAowagieTextPdfPdfString : ComAowagieTextPdfPdfObject {
 @public
  /*!
   @brief The value of this object.
   */
  NSString *value_;
}

#pragma mark Public

/*!
 @brief Constructs an empty <CODE>PdfString</CODE>-object.
 */
- (instancetype)init;

/*!
 @brief Constructs a <CODE>PdfString</CODE>-object.
 @param bytes an array of  <CODE> byte </CODE>
 */
- (instancetype)initWithByteArray:(IOSByteArray *)bytes;

/*!
 @brief Constructs a <CODE>PdfString</CODE>-object containing a string in the
  standard encoding <CODE>TEXT_PDFDOCENCODING</CODE>.
 @param value the content of the string
 */
- (instancetype)initWithNSString:(NSString *)value;

/*!
 @brief Constructs a <CODE>PdfString</CODE>-object containing a string in the
  specified encoding.
 @param value the content of the string
 @param encoding an encoding
 */
- (instancetype)initWithNSString:(NSString *)value
                    withNSString:(NSString *)encoding;

- (IOSByteArray *)getBytes;

/*!
 @brief Gets the encoding of this string.
 @return a <CODE>String</CODE>
 */
- (NSString *)getEncoding;

- (IOSByteArray *)getOriginalBytes;

- (jboolean)isHexWriting;

- (ComAowagieTextPdfPdfString *)setHexWritingWithBoolean:(jboolean)hexWriting;

/*!
 @brief Writes the PDF representation of this <CODE>PdfString</CODE> as an array
  of <CODE>byte</CODE> to the specified <CODE>OutputStream</CODE>.
 @param writer for backwards compatibility
 @param os The  <CODE> OutputStream </CODE>  to write the bytes to.
 */
- (void)toPdfWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withJavaIoOutputStream:(JavaIoOutputStream *)os;

/*!
 @brief Returns the <CODE>String</CODE> value of this <CODE>PdfString</CODE>-object.
 @return A <CODE>String</CODE>
 */
- (NSString *)description;

/*!
 @brief Returns the Unicode <CODE>String</CODE> value of this 
 <CODE>PdfString</CODE>-object.
 @return A <CODE>String</CODE>
 */
- (NSString *)toUnicodeString;

#pragma mark Package-Private

/*!
 @brief Decrypt an encrypted <CODE>PdfString</CODE>
 @param reader Reader
 */
- (void)decryptWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader;

- (void)setObjNumWithInt:(jint)objNum
                 withInt:(jint)objGen;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0
              withByteArray:(IOSByteArray *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0
               withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfString)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfString, value_, NSString *)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfString_init(ComAowagieTextPdfPdfString *self);

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_init(void);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfString_initWithNSString_(ComAowagieTextPdfPdfString *self, NSString *value);

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_initWithNSString_(NSString *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_initWithNSString_(NSString *value);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfString_initWithNSString_withNSString_(ComAowagieTextPdfPdfString *self, NSString *value, NSString *encoding);

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(NSString *value, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(NSString *value, NSString *encoding);

FOUNDATION_EXPORT void ComAowagieTextPdfPdfString_initWithByteArray_(ComAowagieTextPdfPdfString *self, IOSByteArray *bytes);

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *new_ComAowagieTextPdfPdfString_initWithByteArray_(IOSByteArray *bytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfString *create_ComAowagieTextPdfPdfString_initWithByteArray_(IOSByteArray *bytes);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfString)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfString")

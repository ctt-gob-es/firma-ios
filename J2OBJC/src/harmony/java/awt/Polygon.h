//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/Polygon.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HarmonyJavaAwtPolygon")
#ifdef RESTRICT_HarmonyJavaAwtPolygon
#define INCLUDE_ALL_HarmonyJavaAwtPolygon 0
#else
#define INCLUDE_ALL_HarmonyJavaAwtPolygon 1
#endif
#undef RESTRICT_HarmonyJavaAwtPolygon

#if !defined (HarmonyJavaAwtPolygon_) && (INCLUDE_ALL_HarmonyJavaAwtPolygon || defined(INCLUDE_HarmonyJavaAwtPolygon))
#define HarmonyJavaAwtPolygon_

#define RESTRICT_HarmonyJavaAwtShape 1
#define INCLUDE_HarmonyJavaAwtShape 1
#include "harmony/java/awt/Shape.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class HarmonyJavaAwtAWTRectangle;
@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomPoint2D;
@class HarmonyJavaAwtGeomRectangle2D;
@class HarmonyJavaAwtPoint;
@class IOSIntArray;
@protocol HarmonyJavaAwtGeomPathIterator;

@interface HarmonyJavaAwtPolygon : NSObject < HarmonyJavaAwtShape, JavaIoSerializable > {
 @public
  jint npoints_;
  IOSIntArray *xpoints_;
  IOSIntArray *ypoints_;
  HarmonyJavaAwtAWTRectangle *bounds_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithIntArray:(IOSIntArray *)xpoints
                    withIntArray:(IOSIntArray *)ypoints
                         withInt:(jint)npoints;

- (void)addPointWithInt:(jint)px
                withInt:(jint)py;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y;

- (jboolean)containsWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)width
                    withDouble:(jdouble)height;

- (jboolean)containsWithInt:(jint)x
                    withInt:(jint)y;

- (jboolean)containsWithHarmonyJavaAwtPoint:(HarmonyJavaAwtPoint *)point;

- (jboolean)containsWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)point;

- (jboolean)containsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)rect;

/*!
 @return the bounds of box
 */
- (HarmonyJavaAwtAWTRectangle *)getBoundingBox;

- (HarmonyJavaAwtAWTRectangle *)getBounds;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t
                                                                                withDouble:(jdouble)flatness;

/*!
 @param x position of x
 @param y position of y
 @return the inside
 */
- (jboolean)insideWithInt:(jint)x
                  withInt:(jint)y;

- (jboolean)intersectsWithDouble:(jdouble)x
                      withDouble:(jdouble)y
                      withDouble:(jdouble)width
                      withDouble:(jdouble)height;

- (jboolean)intersectsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)rect;

- (void)invalidate;

- (void)reset;

- (void)translateWithInt:(jint)mx
                 withInt:(jint)my;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtPolygon)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtPolygon, xpoints_, IOSIntArray *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtPolygon, ypoints_, IOSIntArray *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtPolygon, bounds_, HarmonyJavaAwtAWTRectangle *)

FOUNDATION_EXPORT void HarmonyJavaAwtPolygon_init(HarmonyJavaAwtPolygon *self);

FOUNDATION_EXPORT HarmonyJavaAwtPolygon *new_HarmonyJavaAwtPolygon_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtPolygon *create_HarmonyJavaAwtPolygon_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtPolygon_initWithIntArray_withIntArray_withInt_(HarmonyJavaAwtPolygon *self, IOSIntArray *xpoints, IOSIntArray *ypoints, jint npoints);

FOUNDATION_EXPORT HarmonyJavaAwtPolygon *new_HarmonyJavaAwtPolygon_initWithIntArray_withIntArray_withInt_(IOSIntArray *xpoints, IOSIntArray *ypoints, jint npoints) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtPolygon *create_HarmonyJavaAwtPolygon_initWithIntArray_withIntArray_withInt_(IOSIntArray *xpoints, IOSIntArray *ypoints, jint npoints);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtPolygon)

#endif

#if !defined (HarmonyJavaAwtPolygon_Iterator_) && (INCLUDE_ALL_HarmonyJavaAwtPolygon || defined(INCLUDE_HarmonyJavaAwtPolygon_Iterator))
#define HarmonyJavaAwtPolygon_Iterator_

#define RESTRICT_HarmonyJavaAwtGeomPathIterator 1
#define INCLUDE_HarmonyJavaAwtGeomPathIterator 1
#include "harmony/java/awt/geom/PathIterator.h"

@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtPolygon;
@class IOSDoubleArray;
@class IOSFloatArray;

@interface HarmonyJavaAwtPolygon_Iterator : NSObject < HarmonyJavaAwtGeomPathIterator > {
 @public
  /*!
   @brief The source Polygon object
   */
  HarmonyJavaAwtPolygon *p_;
  /*!
   @brief The path iterator transformation
   */
  HarmonyJavaAwtGeomAffineTransform *t_;
  /*!
   @brief The current segmenet index
   */
  jint index_;
}

#pragma mark Public

/*!
 @brief Constructs a new Polygon.Iterator for given polygon and
  transformation
 @param l - the source Line2D object
 @param at - the AffineTransform object to apply rectangle path
 */
- (instancetype)initWithHarmonyJavaAwtPolygon:(HarmonyJavaAwtPolygon *)outer$
        withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at
                    withHarmonyJavaAwtPolygon:(HarmonyJavaAwtPolygon *)p;

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtPolygon_Iterator)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtPolygon_Iterator, p_, HarmonyJavaAwtPolygon *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtPolygon_Iterator, t_, HarmonyJavaAwtGeomAffineTransform *)

FOUNDATION_EXPORT void HarmonyJavaAwtPolygon_Iterator_initWithHarmonyJavaAwtPolygon_withHarmonyJavaAwtGeomAffineTransform_withHarmonyJavaAwtPolygon_(HarmonyJavaAwtPolygon_Iterator *self, HarmonyJavaAwtPolygon *outer$, HarmonyJavaAwtGeomAffineTransform *at, HarmonyJavaAwtPolygon *p);

FOUNDATION_EXPORT HarmonyJavaAwtPolygon_Iterator *new_HarmonyJavaAwtPolygon_Iterator_initWithHarmonyJavaAwtPolygon_withHarmonyJavaAwtGeomAffineTransform_withHarmonyJavaAwtPolygon_(HarmonyJavaAwtPolygon *outer$, HarmonyJavaAwtGeomAffineTransform *at, HarmonyJavaAwtPolygon *p) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtPolygon_Iterator *create_HarmonyJavaAwtPolygon_Iterator_initWithHarmonyJavaAwtPolygon_withHarmonyJavaAwtGeomAffineTransform_withHarmonyJavaAwtPolygon_(HarmonyJavaAwtPolygon *outer$, HarmonyJavaAwtGeomAffineTransform *at, HarmonyJavaAwtPolygon *p);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtPolygon_Iterator)

#endif

#pragma pop_macro("INCLUDE_ALL_HarmonyJavaAwtPolygon")

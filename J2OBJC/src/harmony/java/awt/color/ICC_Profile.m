//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/color/ICC_Profile.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "harmony/java/awt/color/CMMException.h"
#include "harmony/java/awt/color/ColorSpace.h"
#include "harmony/java/awt/color/ICC_Profile.h"
#include "harmony/java/awt/color/ICC_ProfileGray.h"
#include "harmony/java/awt/color/ICC_ProfileRGB.h"
#include "harmony/java/awt/color/ProfileDataException.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/FileOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/security/AccessController.h"
#include "java/security/PrivilegedAction.h"
#include "java/util/StringTokenizer.h"
#include "org/apache/harmony/awt/Utils.h"
#include "org/apache/harmony/awt/gl/color/ICC_ProfileHelper.h"
#include "org/apache/harmony/awt/gl/color/NativeCMM.h"
#include "org/apache/harmony/awt/internal/nls/Messages.h"

#if !__has_feature(objc_arc)
#error "harmony/java/awt/color/ICC_Profile must be compiled with ARC (-fobjc-arc)"
#endif

@interface HarmonyJavaAwtColorICC_Profile () {
 @public
  /*!
   @brief Handle to the current profile
   */
  jlong profileHandle_;
  /*!
   @brief If handle is used by another class this object is not responsible for
  closing profile
   */
  jboolean handleStolen_;
  /*!
   @brief Cached header data
   */
  IOSByteArray *headerData_;
  /*!
   @brief Serialization support
   */
  HarmonyJavaAwtColorICC_Profile *openedProfileObject_;
}

- (instancetype)initWithByteArray:(IOSByteArray *)data;

/*!
 @brief Serializable implementation
 @param s output stream to use
 @throw IOExceptionException with information about a IO error
 */
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)s;

/*!
 @brief Serializable implementation
 @param s input stream to use
 @throw IOExceptionException with information about a IO error
 @throw ClassNotFoundExceptionException with information about a class not found
 */
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)s;

/*!
 @brief Tries to open file at the specified path.Path entries can be divided by
  separator char
 @param path
 @param fileName
 */
+ (JavaIoFileInputStream *)tryPathWithNSString:(NSString *)path
                                  withNSString:(NSString *)fileName;

/*!
 @brief Reads integer from the profile header at the specified position
 @param idx - offset in bytes from the beginning of the header
 */
- (jint)getIntFromHeaderWithInt:(jint)idx;

/*!
 @brief Reads byte from the profile header at the specified position
 @param idx - offset in bytes from the beginning of the header
 */
- (jbyte)getByteFromHeaderWithInt:(jint)idx;

/*!
 @brief Converts ICC color space signature to the java predefined color space
  type
 @param signature
 */
- (jint)csFromSignatureWithInt:(jint)signature;

- (jlong)getProfileHandle;

- (jint)getDataSizeWithInt:(jint)tagSignature;

/*!
 @brief If TRC is not a table returns gamma via return value and sets dataTRC to
  null.If TRC is a table returns 0 and fills dataTRC with values.
 @param tagSignature
 @param dataTRC
 @return - gamma or zero if TRC is a table
 */
- (jfloat)getGammaOrTRCWithInt:(jint)tagSignature
                withShortArray:(IOSShortArray *)dataTRC;

@end

J2OBJC_FIELD_SETTER(HarmonyJavaAwtColorICC_Profile, headerData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtColorICC_Profile, openedProfileObject_, HarmonyJavaAwtColorICC_Profile *)

inline jlong HarmonyJavaAwtColorICC_Profile_get_serialVersionUID(void);
#define HarmonyJavaAwtColorICC_Profile_serialVersionUID -3938515861990936766LL
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtColorICC_Profile, serialVersionUID, jlong)

/*!
 @brief Size of a profile header
 */
inline jint HarmonyJavaAwtColorICC_Profile_get_headerSize(void);
#define HarmonyJavaAwtColorICC_Profile_headerSize 128
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtColorICC_Profile, headerSize, jint)

/*!
 @brief header magic number
 */
inline jint HarmonyJavaAwtColorICC_Profile_get_headerMagicNumber(void);
#define HarmonyJavaAwtColorICC_Profile_headerMagicNumber 1633907568
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtColorICC_Profile, headerMagicNumber, jint)

inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_get_sRGBProfile(void);
inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_set_sRGBProfile(HarmonyJavaAwtColorICC_Profile *value);
static HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_sRGBProfile;
J2OBJC_STATIC_FIELD_OBJ(HarmonyJavaAwtColorICC_Profile, sRGBProfile, HarmonyJavaAwtColorICC_Profile *)

inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_get_xyzProfile(void);
inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_set_xyzProfile(HarmonyJavaAwtColorICC_Profile *value);
static HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_xyzProfile;
J2OBJC_STATIC_FIELD_OBJ(HarmonyJavaAwtColorICC_Profile, xyzProfile, HarmonyJavaAwtColorICC_Profile *)

inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_get_grayProfile(void);
inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_set_grayProfile(HarmonyJavaAwtColorICC_Profile *value);
static HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_grayProfile;
J2OBJC_STATIC_FIELD_OBJ(HarmonyJavaAwtColorICC_Profile, grayProfile, HarmonyJavaAwtColorICC_Profile *)

inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_get_pyccProfile(void);
inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_set_pyccProfile(HarmonyJavaAwtColorICC_Profile *value);
static HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_pyccProfile;
J2OBJC_STATIC_FIELD_OBJ(HarmonyJavaAwtColorICC_Profile, pyccProfile, HarmonyJavaAwtColorICC_Profile *)

inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_get_linearRGBProfile(void);
inline HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_set_linearRGBProfile(HarmonyJavaAwtColorICC_Profile *value);
static HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_linearRGBProfile;
J2OBJC_STATIC_FIELD_OBJ(HarmonyJavaAwtColorICC_Profile, linearRGBProfile, HarmonyJavaAwtColorICC_Profile *)

__attribute__((unused)) static void HarmonyJavaAwtColorICC_Profile_initWithByteArray_(HarmonyJavaAwtColorICC_Profile *self, IOSByteArray *data);

__attribute__((unused)) static HarmonyJavaAwtColorICC_Profile *new_HarmonyJavaAwtColorICC_Profile_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

__attribute__((unused)) static HarmonyJavaAwtColorICC_Profile *create_HarmonyJavaAwtColorICC_Profile_initWithByteArray_(IOSByteArray *data);

__attribute__((unused)) static void HarmonyJavaAwtColorICC_Profile_writeObjectWithJavaIoObjectOutputStream_(HarmonyJavaAwtColorICC_Profile *self, JavaIoObjectOutputStream *s);

__attribute__((unused)) static void HarmonyJavaAwtColorICC_Profile_readObjectWithJavaIoObjectInputStream_(HarmonyJavaAwtColorICC_Profile *self, JavaIoObjectInputStream *s);

__attribute__((unused)) static JavaIoFileInputStream *HarmonyJavaAwtColorICC_Profile_tryPathWithNSString_withNSString_(NSString *path, NSString *fileName);

__attribute__((unused)) static jint HarmonyJavaAwtColorICC_Profile_getIntFromHeaderWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint idx);

__attribute__((unused)) static jbyte HarmonyJavaAwtColorICC_Profile_getByteFromHeaderWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint idx);

__attribute__((unused)) static jint HarmonyJavaAwtColorICC_Profile_csFromSignatureWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint signature);

__attribute__((unused)) static jlong HarmonyJavaAwtColorICC_Profile_getProfileHandle(HarmonyJavaAwtColorICC_Profile *self);

__attribute__((unused)) static jint HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint tagSignature);

__attribute__((unused)) static jfloat HarmonyJavaAwtColorICC_Profile_getGammaOrTRCWithInt_withShortArray_(HarmonyJavaAwtColorICC_Profile *self, jint tagSignature, IOSShortArray *dataTRC);

@interface HarmonyJavaAwtColorICC_Profile_1 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  NSString *val$fName_;
}

- (instancetype)initWithNSString:(NSString *)capture$0;

- (JavaIoFileInputStream *)run;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtColorICC_Profile_1)

__attribute__((unused)) static void HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(HarmonyJavaAwtColorICC_Profile_1 *self, NSString *capture$0);

__attribute__((unused)) static HarmonyJavaAwtColorICC_Profile_1 *new_HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static HarmonyJavaAwtColorICC_Profile_1 *create_HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(NSString *capture$0);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/color/ICC_Profile.java"


#line 41
@implementation HarmonyJavaAwtColorICC_Profile


#line 323
- (instancetype)initWithByteArray:(IOSByteArray *)data {
  HarmonyJavaAwtColorICC_Profile_initWithByteArray_(self, data);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 331
- (instancetype)init {
  HarmonyJavaAwtColorICC_Profile_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 340
- (instancetype)initWithLong:(jlong)profileHandle {
  HarmonyJavaAwtColorICC_Profile_initWithLong_(self, profileHandle);
  return self;
}


#line 346
- (void)writeWithNSString:(NSString *)fileName {
  JavaIoFileOutputStream *oStream = new_JavaIoFileOutputStream_initWithNSString_(fileName);
  [oStream writeWithByteArray:[self getData]];
  [oStream close];
}


#line 358
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)s {
  HarmonyJavaAwtColorICC_Profile_writeObjectWithJavaIoObjectOutputStream_(self, s);
}


#line 371
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)s {
  HarmonyJavaAwtColorICC_Profile_readObjectWithJavaIoObjectInputStream_(self, s);
}


#line 395
- (id)readResolve {
  return openedProfileObject_;
}

- (void)writeWithJavaIoOutputStream:(JavaIoOutputStream *)s {
  [((JavaIoOutputStream *) nil_chk(s)) writeWithByteArray:[self getData]];
}

- (void)setDataWithInt:(jint)tagSignature
         withByteArray:(IOSByteArray *)tagData {
  
#line 404
  OrgApacheHarmonyAwtGlColorNativeCMM_cmmSetProfileElementWithLong_withInt_withByteArray_(profileHandle_, tagSignature, tagData);
  
#line 406
  if (tagSignature == HarmonyJavaAwtColorICC_Profile_icSigHead) {
    headerData_ = nil;
  }
}


#line 411
- (IOSByteArray *)getDataWithInt:(jint)tagSignature {
  jint tagSize = 0;
  @try {
    tagSize = OrgApacheHarmonyAwtGlColorNativeCMM_cmmGetProfileElementSizeWithLong_withInt_(profileHandle_, tagSignature);
  }
  @catch (
#line 415
  HarmonyJavaAwtColorCMMException *e) {
    
#line 418
    return nil;
  }
  
#line 421
  IOSByteArray *data = [IOSByteArray newArrayWithLength:tagSize];
  OrgApacheHarmonyAwtGlColorNativeCMM_cmmGetProfileElementWithLong_withInt_withByteArray_(profileHandle_, tagSignature, data);
  return data;
}


#line 426
- (IOSByteArray *)getData {
  jint profileSize = OrgApacheHarmonyAwtGlColorNativeCMM_cmmGetProfileSizeWithLong_(profileHandle_);
  IOSByteArray *data = [IOSByteArray newArrayWithLength:profileSize];
  OrgApacheHarmonyAwtGlColorNativeCMM_cmmGetProfileWithLong_withByteArray_(profileHandle_, data);
  return data;
}

- (void)java_finalize {
  
#line 435
  if (profileHandle_ != 0 && !handleStolen_) {
    OrgApacheHarmonyAwtGlColorNativeCMM_cmmCloseProfileWithLong_(profileHandle_);
  }
  
#line 441
  OrgApacheHarmonyAwtGlColorNativeCMM_removeHandleWithHarmonyJavaAwtColorICC_Profile_(self);
}

- (jint)getProfileClass {
  jint deviceClassSignature = HarmonyJavaAwtColorICC_Profile_getIntFromHeaderWithInt_(self, HarmonyJavaAwtColorICC_Profile_icHdrDeviceClass);
  
#line 447
  switch (deviceClassSignature) {
    case HarmonyJavaAwtColorICC_Profile_icSigColorSpaceClass:
    return HarmonyJavaAwtColorICC_Profile_CLASS_COLORSPACECONVERSION;
    case HarmonyJavaAwtColorICC_Profile_icSigDisplayClass:
    return HarmonyJavaAwtColorICC_Profile_CLASS_DISPLAY;
    case HarmonyJavaAwtColorICC_Profile_icSigOutputClass:
    return HarmonyJavaAwtColorICC_Profile_CLASS_OUTPUT;
    case HarmonyJavaAwtColorICC_Profile_icSigInputClass:
    return HarmonyJavaAwtColorICC_Profile_CLASS_INPUT;
    case HarmonyJavaAwtColorICC_Profile_icSigLinkClass:
    return HarmonyJavaAwtColorICC_Profile_CLASS_DEVICELINK;
    case HarmonyJavaAwtColorICC_Profile_icSigAbstractClass:
    return HarmonyJavaAwtColorICC_Profile_CLASS_ABSTRACT;
    case HarmonyJavaAwtColorICC_Profile_icSigNamedColorClass:
    return HarmonyJavaAwtColorICC_Profile_CLASS_NAMEDCOLOR;
    default:
    
#line 462
    ;
  }
  
#line 467
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.15F"));
}


#line 471
- (jint)getPCSType {
  return HarmonyJavaAwtColorICC_Profile_csFromSignatureWithInt_(self, HarmonyJavaAwtColorICC_Profile_getIntFromHeaderWithInt_(self, HarmonyJavaAwtColorICC_Profile_icHdrPcs));
}

- (jint)getNumComponents {
  switch (HarmonyJavaAwtColorICC_Profile_getIntFromHeaderWithInt_(self, HarmonyJavaAwtColorICC_Profile_icHdrColorSpace)) {
    
#line 478
    case HarmonyJavaAwtColorICC_Profile_icSigRgbData:
    case HarmonyJavaAwtColorICC_Profile_icSigXYZData:
    case HarmonyJavaAwtColorICC_Profile_icSigLabData:
    return 3;
    case HarmonyJavaAwtColorICC_Profile_icSigCmykData:
    return 4;
    
#line 485
    case HarmonyJavaAwtColorICC_Profile_icSigGrayData:
    return 1;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace2CLR:
    return 2;
    case HarmonyJavaAwtColorICC_Profile_icSigYCbCrData:
    case HarmonyJavaAwtColorICC_Profile_icSigLuvData:
    case HarmonyJavaAwtColorICC_Profile_icSigYxyData:
    case HarmonyJavaAwtColorICC_Profile_icSigHlsData:
    case HarmonyJavaAwtColorICC_Profile_icSigHsvData:
    case HarmonyJavaAwtColorICC_Profile_icSigCmyData:
    case HarmonyJavaAwtColorICC_Profile_icSigSpace3CLR:
    return 3;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace4CLR:
    return 4;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace5CLR:
    return 5;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace6CLR:
    return 6;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace7CLR:
    return 7;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace8CLR:
    return 8;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace9CLR:
    return 9;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceACLR:
    return 10;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceBCLR:
    return 11;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceCCLR:
    return 12;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceDCLR:
    return 13;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceECLR:
    return 14;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceFCLR:
    return 15;
    default:
    
#line 521
    ;
  }
  
#line 525
  @throw new_HarmonyJavaAwtColorProfileDataException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.160"));
}


#line 529
- (jint)getMinorVersion {
  return HarmonyJavaAwtColorICC_Profile_getByteFromHeaderWithInt_(self, HarmonyJavaAwtColorICC_Profile_icHdrVersion + 1);
}

- (jint)getMajorVersion {
  return HarmonyJavaAwtColorICC_Profile_getByteFromHeaderWithInt_(self, HarmonyJavaAwtColorICC_Profile_icHdrVersion);
}

- (jint)getColorSpaceType {
  return HarmonyJavaAwtColorICC_Profile_csFromSignatureWithInt_(self, HarmonyJavaAwtColorICC_Profile_getIntFromHeaderWithInt_(self, HarmonyJavaAwtColorICC_Profile_icHdrColorSpace));
}


#line 549
+ (JavaIoFileInputStream *)tryPathWithNSString:(NSString *)path
                                  withNSString:(NSString *)fileName {
  return HarmonyJavaAwtColorICC_Profile_tryPathWithNSString_withNSString_(path, fileName);
}


#line 566
+ (HarmonyJavaAwtColorICC_Profile *)getInstanceWithNSString:(NSString *)fileName {
  return HarmonyJavaAwtColorICC_Profile_getInstanceWithNSString_(fileName);
}


#line 611
+ (HarmonyJavaAwtColorICC_Profile *)getInstanceWithJavaIoInputStream:(JavaIoInputStream *)s {
  return HarmonyJavaAwtColorICC_Profile_getInstanceWithJavaIoInputStream_(s);
}


#line 641
+ (HarmonyJavaAwtColorICC_Profile *)getInstanceWithByteArray:(IOSByteArray *)data {
  return HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(data);
}


#line 670
+ (HarmonyJavaAwtColorICC_Profile *)getInstanceWithInt:(jint)cspace {
  return HarmonyJavaAwtColorICC_Profile_getInstanceWithInt_(cspace);
}


#line 721
- (jint)getIntFromHeaderWithInt:(jint)idx {
  return HarmonyJavaAwtColorICC_Profile_getIntFromHeaderWithInt_(self, idx);
}


#line 737
- (jbyte)getByteFromHeaderWithInt:(jint)idx {
  return HarmonyJavaAwtColorICC_Profile_getByteFromHeaderWithInt_(self, idx);
}


#line 752
- (jint)csFromSignatureWithInt:(jint)signature {
  return HarmonyJavaAwtColorICC_Profile_csFromSignatureWithInt_(self, signature);
}


#line 811
- (jlong)getProfileHandle {
  return HarmonyJavaAwtColorICC_Profile_getProfileHandle(self);
}


#line 816
- (jint)getDataSizeWithInt:(jint)tagSignature {
  return HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(self, tagSignature);
}


#line 826
- (IOSFloatArray *)getXYZValueWithInt:(jint)tagSignature {
  IOSFloatArray *res = [IOSFloatArray newArrayWithLength:3];
  IOSByteArray *data = [self getDataWithInt:tagSignature];
  
#line 833
  *IOSFloatArray_GetRef(res, 0) = OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getIntFromByteArrayWithByteArray_withInt_(data, 0) / 65536.f;
  *IOSFloatArray_GetRef(res, 1) = OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getIntFromByteArrayWithByteArray_withInt_(data, 4) / 65536.f;
  *IOSFloatArray_GetRef(res, 2) = OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getIntFromByteArrayWithByteArray_withInt_(data, 8) / 65536.f;
  
#line 837
  return res;
}


#line 840
- (IOSFloatArray *)getMediaWhitePoint {
  return [self getXYZValueWithInt:HarmonyJavaAwtColorICC_Profile_icSigMediaWhitePointTag];
}


#line 852
- (jfloat)getGammaOrTRCWithInt:(jint)tagSignature
                withShortArray:(IOSShortArray *)dataTRC {
  return HarmonyJavaAwtColorICC_Profile_getGammaOrTRCWithInt_withShortArray_(self, tagSignature, dataTRC);
}


#line 875
- (jfloat)getGammaWithInt:(jint)tagSignature {
  
#line 877
  IOSShortArray *dataTRC = nil;
  jfloat gamma = HarmonyJavaAwtColorICC_Profile_getGammaOrTRCWithInt_withShortArray_(self, tagSignature, dataTRC);
  
#line 880
  if (dataTRC == nil) {
    return gamma;
  }
  
#line 884
  @throw new_HarmonyJavaAwtColorProfileDataException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.166"));
}


#line 887
- (IOSShortArray *)getTRCWithInt:(jint)tagSignature {
  
#line 889
  IOSShortArray *dataTRC = nil;
  HarmonyJavaAwtColorICC_Profile_getGammaOrTRCWithInt_withShortArray_(self, tagSignature, dataTRC);
  
#line 892
  if (dataTRC == nil) {
    
#line 894
    @throw new_HarmonyJavaAwtColorProfileDataException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.167"));
  }
  return dataTRC;
}

- (void)dealloc {
  JreCheckFinalize(self, [HarmonyJavaAwtColorICC_Profile class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 11, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 16, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoFileInputStream;", 0xa, 17, 18, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x9, 19, 3, 4, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x9, 19, 20, 4, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x9, 19, 0, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x9, 19, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 21, 15, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 22, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 23, 15, -1, -1, -1, -1 },
    { NULL, "J", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 24, 15, -1, -1, -1, -1 },
    { NULL, "[F", 0x0, 25, 15, -1, -1, -1, -1 },
    { NULL, "[F", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x2, 26, 27, -1, -1, -1, -1 },
    { NULL, "F", 0x0, 28, 15, -1, -1, -1, -1 },
    { NULL, "[S", 0x0, 29, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithLong:);
  methods[3].selector = @selector(writeWithNSString:);
  methods[4].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  methods[5].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[6].selector = @selector(readResolve);
  methods[7].selector = @selector(writeWithJavaIoOutputStream:);
  methods[8].selector = @selector(setDataWithInt:withByteArray:);
  methods[9].selector = @selector(getDataWithInt:);
  methods[10].selector = @selector(getData);
  methods[11].selector = @selector(java_finalize);
  methods[12].selector = @selector(getProfileClass);
  methods[13].selector = @selector(getPCSType);
  methods[14].selector = @selector(getNumComponents);
  methods[15].selector = @selector(getMinorVersion);
  methods[16].selector = @selector(getMajorVersion);
  methods[17].selector = @selector(getColorSpaceType);
  methods[18].selector = @selector(tryPathWithNSString:withNSString:);
  methods[19].selector = @selector(getInstanceWithNSString:);
  methods[20].selector = @selector(getInstanceWithJavaIoInputStream:);
  methods[21].selector = @selector(getInstanceWithByteArray:);
  methods[22].selector = @selector(getInstanceWithInt:);
  methods[23].selector = @selector(getIntFromHeaderWithInt:);
  methods[24].selector = @selector(getByteFromHeaderWithInt:);
  methods[25].selector = @selector(csFromSignatureWithInt:);
  methods[26].selector = @selector(getProfileHandle);
  methods[27].selector = @selector(getDataSizeWithInt:);
  methods[28].selector = @selector(getXYZValueWithInt:);
  methods[29].selector = @selector(getMediaWhitePoint);
  methods[30].selector = @selector(getGammaOrTRCWithInt:withShortArray:);
  methods[31].selector = @selector(getGammaWithInt:);
  methods[32].selector = @selector(getTRCWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = HarmonyJavaAwtColorICC_Profile_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "CLASS_INPUT", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_CLASS_INPUT, 0x19, -1, -1, -1, -1 },
    { "CLASS_DISPLAY", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_CLASS_DISPLAY, 0x19, -1, -1, -1, -1 },
    { "CLASS_OUTPUT", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_CLASS_OUTPUT, 0x19, -1, -1, -1, -1 },
    { "CLASS_DEVICELINK", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_CLASS_DEVICELINK, 0x19, -1, -1, -1, -1 },
    { "CLASS_COLORSPACECONVERSION", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_CLASS_COLORSPACECONVERSION, 0x19, -1, -1, -1, -1 },
    { "CLASS_ABSTRACT", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_CLASS_ABSTRACT, 0x19, -1, -1, -1, -1 },
    { "CLASS_NAMEDCOLOR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_CLASS_NAMEDCOLOR, 0x19, -1, -1, -1, -1 },
    { "icSigXYZData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigXYZData, 0x19, -1, -1, -1, -1 },
    { "icSigLabData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigLabData, 0x19, -1, -1, -1, -1 },
    { "icSigLuvData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigLuvData, 0x19, -1, -1, -1, -1 },
    { "icSigYCbCrData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigYCbCrData, 0x19, -1, -1, -1, -1 },
    { "icSigYxyData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigYxyData, 0x19, -1, -1, -1, -1 },
    { "icSigRgbData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigRgbData, 0x19, -1, -1, -1, -1 },
    { "icSigGrayData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigGrayData, 0x19, -1, -1, -1, -1 },
    { "icSigHsvData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigHsvData, 0x19, -1, -1, -1, -1 },
    { "icSigHlsData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigHlsData, 0x19, -1, -1, -1, -1 },
    { "icSigCmykData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigCmykData, 0x19, -1, -1, -1, -1 },
    { "icSigCmyData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigCmyData, 0x19, -1, -1, -1, -1 },
    { "icSigSpace2CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace2CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpace3CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace3CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpace4CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace4CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpace5CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace5CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpace6CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace6CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpace7CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace7CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpace8CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace8CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpace9CLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpace9CLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpaceACLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpaceACLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpaceBCLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpaceBCLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpaceCCLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpaceCCLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpaceDCLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpaceDCLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpaceECLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpaceECLR, 0x19, -1, -1, -1, -1 },
    { "icSigSpaceFCLR", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigSpaceFCLR, 0x19, -1, -1, -1, -1 },
    { "icSigInputClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigInputClass, 0x19, -1, -1, -1, -1 },
    { "icSigDisplayClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigDisplayClass, 0x19, -1, -1, -1, -1 },
    { "icSigOutputClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigOutputClass, 0x19, -1, -1, -1, -1 },
    { "icSigLinkClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigLinkClass, 0x19, -1, -1, -1, -1 },
    { "icSigAbstractClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigAbstractClass, 0x19, -1, -1, -1, -1 },
    { "icSigColorantOrderTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigColorantOrderTag, 0x19, -1, -1, -1, -1 },
    { "icSigColorantTableTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigColorantTableTag, 0x19, -1, -1, -1, -1 },
    { "icSigColorSpaceClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigColorSpaceClass, 0x19, -1, -1, -1, -1 },
    { "icSigNamedColorClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigNamedColorClass, 0x19, -1, -1, -1, -1 },
    { "icPerceptual", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icPerceptual, 0x19, -1, -1, -1, -1 },
    { "icRelativeColorimetric", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icRelativeColorimetric, 0x19, -1, -1, -1, -1 },
    { "icSaturation", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSaturation, 0x19, -1, -1, -1, -1 },
    { "icAbsoluteColorimetric", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icAbsoluteColorimetric, 0x19, -1, -1, -1, -1 },
    { "icSigHead", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigHead, 0x19, -1, -1, -1, -1 },
    { "icSigAToB0Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigAToB0Tag, 0x19, -1, -1, -1, -1 },
    { "icSigAToB1Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigAToB1Tag, 0x19, -1, -1, -1, -1 },
    { "icSigAToB2Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigAToB2Tag, 0x19, -1, -1, -1, -1 },
    { "icSigBlueColorantTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigBlueColorantTag, 0x19, -1, -1, -1, -1 },
    { "icSigBlueMatrixColumnTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigBlueMatrixColumnTag, 0x19, -1, -1, -1, -1 },
    { "icSigBlueTRCTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigBlueTRCTag, 0x19, -1, -1, -1, -1 },
    { "icSigBToA0Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigBToA0Tag, 0x19, -1, -1, -1, -1 },
    { "icSigBToA1Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigBToA1Tag, 0x19, -1, -1, -1, -1 },
    { "icSigBToA2Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigBToA2Tag, 0x19, -1, -1, -1, -1 },
    { "icSigCalibrationDateTimeTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigCalibrationDateTimeTag, 0x19, -1, -1, -1, -1 },
    { "icSigCharTargetTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigCharTargetTag, 0x19, -1, -1, -1, -1 },
    { "icSigCopyrightTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigCopyrightTag, 0x19, -1, -1, -1, -1 },
    { "icSigCrdInfoTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigCrdInfoTag, 0x19, -1, -1, -1, -1 },
    { "icSigDeviceMfgDescTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigDeviceMfgDescTag, 0x19, -1, -1, -1, -1 },
    { "icSigDeviceModelDescTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigDeviceModelDescTag, 0x19, -1, -1, -1, -1 },
    { "icSigDeviceSettingsTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigDeviceSettingsTag, 0x19, -1, -1, -1, -1 },
    { "icSigGamutTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigGamutTag, 0x19, -1, -1, -1, -1 },
    { "icSigGrayTRCTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigGrayTRCTag, 0x19, -1, -1, -1, -1 },
    { "icSigGreenColorantTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigGreenColorantTag, 0x19, -1, -1, -1, -1 },
    { "icSigGreenMatrixColumnTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigGreenMatrixColumnTag, 0x19, -1, -1, -1, -1 },
    { "icSigGreenTRCTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigGreenTRCTag, 0x19, -1, -1, -1, -1 },
    { "icSigLuminanceTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigLuminanceTag, 0x19, -1, -1, -1, -1 },
    { "icSigMeasurementTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigMeasurementTag, 0x19, -1, -1, -1, -1 },
    { "icSigMediaBlackPointTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigMediaBlackPointTag, 0x19, -1, -1, -1, -1 },
    { "icSigMediaWhitePointTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigMediaWhitePointTag, 0x19, -1, -1, -1, -1 },
    { "icSigNamedColor2Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigNamedColor2Tag, 0x19, -1, -1, -1, -1 },
    { "icSigOutputResponseTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigOutputResponseTag, 0x19, -1, -1, -1, -1 },
    { "icSigPreview0Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPreview0Tag, 0x19, -1, -1, -1, -1 },
    { "icSigPreview1Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPreview1Tag, 0x19, -1, -1, -1, -1 },
    { "icSigPreview2Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPreview2Tag, 0x19, -1, -1, -1, -1 },
    { "icSigProfileDescriptionTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigProfileDescriptionTag, 0x19, -1, -1, -1, -1 },
    { "icSigProfileSequenceDescTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigProfileSequenceDescTag, 0x19, -1, -1, -1, -1 },
    { "icSigPs2CRD0Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPs2CRD0Tag, 0x19, -1, -1, -1, -1 },
    { "icSigPs2CRD1Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPs2CRD1Tag, 0x19, -1, -1, -1, -1 },
    { "icSigPs2CRD2Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPs2CRD2Tag, 0x19, -1, -1, -1, -1 },
    { "icSigPs2CRD3Tag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPs2CRD3Tag, 0x19, -1, -1, -1, -1 },
    { "icSigPs2CSATag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPs2CSATag, 0x19, -1, -1, -1, -1 },
    { "icSigPs2RenderingIntentTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigPs2RenderingIntentTag, 0x19, -1, -1, -1, -1 },
    { "icSigRedColorantTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigRedColorantTag, 0x19, -1, -1, -1, -1 },
    { "icSigRedMatrixColumnTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigRedMatrixColumnTag, 0x19, -1, -1, -1, -1 },
    { "icSigRedTRCTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigRedTRCTag, 0x19, -1, -1, -1, -1 },
    { "icSigScreeningDescTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigScreeningDescTag, 0x19, -1, -1, -1, -1 },
    { "icSigScreeningTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigScreeningTag, 0x19, -1, -1, -1, -1 },
    { "icSigTechnologyTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigTechnologyTag, 0x19, -1, -1, -1, -1 },
    { "icSigUcrBgTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigUcrBgTag, 0x19, -1, -1, -1, -1 },
    { "icSigViewingCondDescTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigViewingCondDescTag, 0x19, -1, -1, -1, -1 },
    { "icSigViewingConditionsTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigViewingConditionsTag, 0x19, -1, -1, -1, -1 },
    { "icSigChromaticAdaptationTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigChromaticAdaptationTag, 0x19, -1, -1, -1, -1 },
    { "icSigChromaticityTag", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icSigChromaticityTag, 0x19, -1, -1, -1, -1 },
    { "icHdrSize", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrSize, 0x19, -1, -1, -1, -1 },
    { "icHdrCmmId", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrCmmId, 0x19, -1, -1, -1, -1 },
    { "icHdrVersion", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrVersion, 0x19, -1, -1, -1, -1 },
    { "icHdrDeviceClass", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrDeviceClass, 0x19, -1, -1, -1, -1 },
    { "icHdrColorSpace", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrColorSpace, 0x19, -1, -1, -1, -1 },
    { "icHdrPcs", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrPcs, 0x19, -1, -1, -1, -1 },
    { "icHdrDate", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrDate, 0x19, -1, -1, -1, -1 },
    { "icHdrMagic", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrMagic, 0x19, -1, -1, -1, -1 },
    { "icHdrPlatform", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrPlatform, 0x19, -1, -1, -1, -1 },
    { "icHdrProfileID", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrProfileID, 0x19, -1, -1, -1, -1 },
    { "icHdrFlags", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrFlags, 0x19, -1, -1, -1, -1 },
    { "icHdrManufacturer", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrManufacturer, 0x19, -1, -1, -1, -1 },
    { "icHdrModel", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrModel, 0x19, -1, -1, -1, -1 },
    { "icHdrAttributes", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrAttributes, 0x19, -1, -1, -1, -1 },
    { "icHdrRenderingIntent", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrRenderingIntent, 0x19, -1, -1, -1, -1 },
    { "icHdrIlluminant", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrIlluminant, 0x19, -1, -1, -1, -1 },
    { "icHdrCreator", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icHdrCreator, 0x19, -1, -1, -1, -1 },
    { "icICCAbsoluteColorimetric", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icICCAbsoluteColorimetric, 0x19, -1, -1, -1, -1 },
    { "icMediaRelativeColorimetric", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icMediaRelativeColorimetric, 0x19, -1, -1, -1, -1 },
    { "icTagType", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icTagType, 0x19, -1, -1, -1, -1 },
    { "icTagReserved", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icTagReserved, 0x19, -1, -1, -1, -1 },
    { "icCurveCount", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icCurveCount, 0x19, -1, -1, -1, -1 },
    { "icCurveData", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icCurveData, 0x19, -1, -1, -1, -1 },
    { "icXYZNumberX", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_icXYZNumberX, 0x19, -1, -1, -1, -1 },
    { "headerSize", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_headerSize, 0x1a, -1, -1, -1, -1 },
    { "headerMagicNumber", "I", .constantValue.asInt = HarmonyJavaAwtColorICC_Profile_headerMagicNumber, 0x1a, -1, -1, -1, -1 },
    { "sRGBProfile", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0xa, -1, 30, -1, -1 },
    { "xyzProfile", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0xa, -1, 31, -1, -1 },
    { "grayProfile", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0xa, -1, 32, -1, -1 },
    { "pyccProfile", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0xa, -1, 33, -1, -1 },
    { "linearRGBProfile", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0xa, -1, 34, -1, -1 },
    { "profileHandle_", "J", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "handleStolen_", "Z", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "headerData_", "[B", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "openedProfileObject_", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "J", "write", "LNSString;", "LJavaIoIOException;", "writeObject", "LJavaIoObjectOutputStream;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "LJavaIoObjectStreamException;", "LJavaIoOutputStream;", "setData", "I[B", "getData", "I", "finalize", "tryPath", "LNSString;LNSString;", "getInstance", "LJavaIoInputStream;", "getIntFromHeader", "getByteFromHeader", "csFromSignature", "getDataSize", "getXYZValue", "getGammaOrTRC", "I[S", "getGamma", "getTRC", &HarmonyJavaAwtColorICC_Profile_sRGBProfile, &HarmonyJavaAwtColorICC_Profile_xyzProfile, &HarmonyJavaAwtColorICC_Profile_grayProfile, &HarmonyJavaAwtColorICC_Profile_pyccProfile, &HarmonyJavaAwtColorICC_Profile_linearRGBProfile };
  static const J2ObjcClassInfo _HarmonyJavaAwtColorICC_Profile = { "ICC_Profile", "harmony.java.awt.color", ptrTable, methods, fields, 7, 0x1, 33, 131, -1, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtColorICC_Profile;
}

@end


#line 323
void HarmonyJavaAwtColorICC_Profile_initWithByteArray_(HarmonyJavaAwtColorICC_Profile *self, IOSByteArray *data) {
  NSObject_init(self);
  self->profileHandle_ =
#line 305
  0;
  self->handleStolen_ =
#line 311
  false;
  self->headerData_ =
#line 316
  nil;
  
#line 324
  self->profileHandle_ = OrgApacheHarmonyAwtGlColorNativeCMM_cmmOpenProfileWithByteArray_(data);
  OrgApacheHarmonyAwtGlColorNativeCMM_addHandleWithHarmonyJavaAwtColorICC_Profile_withLong_(self, self->profileHandle_);
}


#line 323
HarmonyJavaAwtColorICC_Profile *new_HarmonyJavaAwtColorICC_Profile_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtColorICC_Profile, initWithByteArray_, data)
}


#line 323
HarmonyJavaAwtColorICC_Profile *create_HarmonyJavaAwtColorICC_Profile_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtColorICC_Profile, initWithByteArray_, data)
}


#line 331
void HarmonyJavaAwtColorICC_Profile_init(HarmonyJavaAwtColorICC_Profile *self) {
  NSObject_init(self);
  self->profileHandle_ =
#line 305
  0;
  self->handleStolen_ =
#line 311
  false;
  self->headerData_ =
#line 316
  nil;
}


#line 331
HarmonyJavaAwtColorICC_Profile *new_HarmonyJavaAwtColorICC_Profile_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtColorICC_Profile, init)
}


#line 331
HarmonyJavaAwtColorICC_Profile *create_HarmonyJavaAwtColorICC_Profile_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtColorICC_Profile, init)
}


#line 340
void HarmonyJavaAwtColorICC_Profile_initWithLong_(HarmonyJavaAwtColorICC_Profile *self, jlong profileHandle) {
  NSObject_init(self);
  self->profileHandle_ =
#line 305
  0;
  self->handleStolen_ =
#line 311
  false;
  self->headerData_ =
#line 316
  nil;
  
#line 341
  self->profileHandle_ = profileHandle;
  
#line 343
  OrgApacheHarmonyAwtGlColorNativeCMM_addHandleWithHarmonyJavaAwtColorICC_Profile_withLong_(self, profileHandle);
}


#line 340
HarmonyJavaAwtColorICC_Profile *new_HarmonyJavaAwtColorICC_Profile_initWithLong_(jlong profileHandle) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtColorICC_Profile, initWithLong_, profileHandle)
}


#line 340
HarmonyJavaAwtColorICC_Profile *create_HarmonyJavaAwtColorICC_Profile_initWithLong_(jlong profileHandle) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtColorICC_Profile, initWithLong_, profileHandle)
}


#line 358
void HarmonyJavaAwtColorICC_Profile_writeObjectWithJavaIoObjectOutputStream_(HarmonyJavaAwtColorICC_Profile *self, JavaIoObjectOutputStream *s) {
  [((JavaIoObjectOutputStream *) nil_chk(s)) defaultWriteObject];
  [s writeObjectWithId:nil];
  [s writeObjectWithId:[self getData]];
}


#line 371
void HarmonyJavaAwtColorICC_Profile_readObjectWithJavaIoObjectInputStream_(HarmonyJavaAwtColorICC_Profile *self, JavaIoObjectInputStream *s) {
  [((JavaIoObjectInputStream *) nil_chk(s)) defaultReadObject];
  NSString *colorSpaceStr = (NSString *) cast_chk([s readObject], [NSString class]);
  IOSByteArray *data = (IOSByteArray *) cast_chk([s readObject], [IOSByteArray class]);
  
#line 376
  if (colorSpaceStr != nil) {
    if ([colorSpaceStr isEqual:@"CS_sRGB"]) {
      self->openedProfileObject_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithInt_(HarmonyJavaAwtColorColorSpace_CS_sRGB);
    }
    else
#line 379
    if ([colorSpaceStr isEqual:@"CS_GRAY"]) {
      self->openedProfileObject_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithInt_(HarmonyJavaAwtColorColorSpace_CS_GRAY);
    }
    else
#line 381
    if ([colorSpaceStr isEqual:@"CS_LINEAR_RGB"]) {
      self->openedProfileObject_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithInt_(HarmonyJavaAwtColorColorSpace_CS_LINEAR_RGB);
    }
    else
#line 383
    if ([colorSpaceStr isEqual:@"CS_CIEXYZ"]) {
      self->openedProfileObject_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithInt_(HarmonyJavaAwtColorColorSpace_CS_CIEXYZ);
    }
    else
#line 385
    if ([colorSpaceStr isEqual:@"CS_PYCC"]) {
      self->openedProfileObject_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithInt_(HarmonyJavaAwtColorColorSpace_CS_PYCC);
    }
    else {
      
#line 388
      self->openedProfileObject_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(data);
    }
  }
  else {
    
#line 391
    self->openedProfileObject_ = HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(data);
  }
}


#line 549
JavaIoFileInputStream *HarmonyJavaAwtColorICC_Profile_tryPathWithNSString_withNSString_(NSString *path, NSString *fileName) {
  HarmonyJavaAwtColorICC_Profile_initialize();
  
#line 550
  if (path == nil) {
    return nil;
  }
  
#line 554
  JavaUtilStringTokenizer *st = new_JavaUtilStringTokenizer_initWithNSString_withNSString_(path, JreLoadStatic(JavaIoFile, pathSeparator));
  
#line 556
  while ([st hasMoreTokens]) {
    NSString *pathEntry = [st nextToken];
    @try {
      return new_JavaIoFileInputStream_initWithNSString_(JreStrcat("$C$", pathEntry, JreLoadStatic(JavaIoFile, separatorChar), fileName));
    }
    @catch (
#line 560
    JavaIoFileNotFoundException *e) {
    }
  }
  return nil;
}


#line 566
HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_getInstanceWithNSString_(NSString *fileName) {
  HarmonyJavaAwtColorICC_Profile_initialize();
  
#line 567
  NSString *fName = fileName;
  
#line 569
  JavaIoFileInputStream *fiStream = JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(fName));
  
#line 601
  if (fiStream == nil) {
    
#line 603
    @throw new_JavaIoIOException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_withId_(@"awt.161", fileName));
  }
  
#line 606
  HarmonyJavaAwtColorICC_Profile *pf = HarmonyJavaAwtColorICC_Profile_getInstanceWithJavaIoInputStream_(fiStream);
  [fiStream close];
  return pf;
}


#line 611
HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_getInstanceWithJavaIoInputStream_(JavaIoInputStream *s) {
  HarmonyJavaAwtColorICC_Profile_initialize();
  
#line 612
  IOSByteArray *header = [IOSByteArray newArrayWithLength:HarmonyJavaAwtColorICC_Profile_headerSize];
  
#line 614
  NSString *invalidDataMessage = OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.162");
  
#line 617
  if ([((JavaIoInputStream *) nil_chk(s)) readWithByteArray:header] != HarmonyJavaAwtColorICC_Profile_headerSize) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(invalidDataMessage);
  }
  
#line 622
  if (OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getBigEndianFromByteArrayWithByteArray_withInt_(header, HarmonyJavaAwtColorICC_Profile_icHdrMagic) != HarmonyJavaAwtColorICC_Profile_headerMagicNumber) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(invalidDataMessage);
  }
  
#line 627
  jint profileSize = OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getBigEndianFromByteArrayWithByteArray_withInt_(header, HarmonyJavaAwtColorICC_Profile_icHdrSize);
  IOSByteArray *profileData = [IOSByteArray newArrayWithLength:profileSize];
  
#line 631
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(header, 0, profileData, 0, HarmonyJavaAwtColorICC_Profile_headerSize);
  
#line 634
  if ([s readWithByteArray:profileData withInt:HarmonyJavaAwtColorICC_Profile_headerSize withInt:profileSize - HarmonyJavaAwtColorICC_Profile_headerSize] != profileSize - HarmonyJavaAwtColorICC_Profile_headerSize) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(invalidDataMessage);
  }
  
#line 638
  return HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(profileData);
}


#line 641
HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(IOSByteArray *data) {
  HarmonyJavaAwtColorICC_Profile_initialize();
  
#line 642
  HarmonyJavaAwtColorICC_Profile *res = nil;
  
#line 644
  @try {
    res = new_HarmonyJavaAwtColorICC_Profile_initWithByteArray_(data);
  }
  @catch (
#line 646
  HarmonyJavaAwtColorCMMException *e) {
    
#line 648
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.162"));
  }
  
#line 651
  if ([((NSString *) nil_chk([((NSString *) nil_chk(JavaLangSystem_getPropertyWithNSString_(@"os.name"))) lowercaseString])) java_indexOfString:@"windows"] >= 0) {
    @try {
      if ([((HarmonyJavaAwtColorICC_Profile *) nil_chk(res)) getColorSpaceType] == HarmonyJavaAwtColorColorSpace_TYPE_RGB && HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigMediaWhitePointTag) > 0 &&
#line 654
      HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigRedColorantTag) > 0 && HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigGreenColorantTag) > 0 &&
#line 655
      HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigBlueColorantTag) > 0 && HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigRedTRCTag) > 0 &&
#line 656
      HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigGreenTRCTag) > 0 && HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigBlueTRCTag) > 0) {
        res = new_HarmonyJavaAwtColorICC_ProfileRGB_initWithLong_(HarmonyJavaAwtColorICC_Profile_getProfileHandle(res));
      }
      else
#line 658
      if ([res getColorSpaceType] == HarmonyJavaAwtColorColorSpace_TYPE_GRAY &&
#line 659
      HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigMediaWhitePointTag) > 0 && HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(res, HarmonyJavaAwtColorICC_Profile_icSigGrayTRCTag) > 0) {
        res = new_HarmonyJavaAwtColorICC_ProfileGray_initWithLong_(HarmonyJavaAwtColorICC_Profile_getProfileHandle(res));
      }
    }
    @catch (HarmonyJavaAwtColorCMMException *e) {
    }
  }
  
#line 667
  return res;
}


#line 670
HarmonyJavaAwtColorICC_Profile *HarmonyJavaAwtColorICC_Profile_getInstanceWithInt_(jint cspace) {
  HarmonyJavaAwtColorICC_Profile_initialize();
  
#line 671
  @try {
    switch (cspace) {
      
#line 674
      case HarmonyJavaAwtColorColorSpace_CS_sRGB:
      if (HarmonyJavaAwtColorICC_Profile_sRGBProfile == nil) {
        HarmonyJavaAwtColorICC_Profile_sRGBProfile = HarmonyJavaAwtColorICC_Profile_getInstanceWithNSString_(@"sRGB.pf");
      }
      return HarmonyJavaAwtColorICC_Profile_sRGBProfile;
      
#line 680
      case HarmonyJavaAwtColorColorSpace_CS_CIEXYZ:
      if (HarmonyJavaAwtColorICC_Profile_xyzProfile == nil) {
        HarmonyJavaAwtColorICC_Profile_xyzProfile = HarmonyJavaAwtColorICC_Profile_getInstanceWithNSString_(@"CIEXYZ.pf");
      }
      return HarmonyJavaAwtColorICC_Profile_xyzProfile;
      
#line 686
      case HarmonyJavaAwtColorColorSpace_CS_GRAY:
      if (HarmonyJavaAwtColorICC_Profile_grayProfile == nil) {
        HarmonyJavaAwtColorICC_Profile_grayProfile = HarmonyJavaAwtColorICC_Profile_getInstanceWithNSString_(@"GRAY.pf");
      }
      return HarmonyJavaAwtColorICC_Profile_grayProfile;
      
#line 692
      case HarmonyJavaAwtColorColorSpace_CS_PYCC:
      if (HarmonyJavaAwtColorICC_Profile_pyccProfile == nil) {
        HarmonyJavaAwtColorICC_Profile_pyccProfile = HarmonyJavaAwtColorICC_Profile_getInstanceWithNSString_(@"PYCC.pf");
      }
      return HarmonyJavaAwtColorICC_Profile_pyccProfile;
      
#line 698
      case HarmonyJavaAwtColorColorSpace_CS_LINEAR_RGB:
      if (HarmonyJavaAwtColorICC_Profile_linearRGBProfile == nil) {
        HarmonyJavaAwtColorICC_Profile_linearRGBProfile = HarmonyJavaAwtColorICC_Profile_getInstanceWithNSString_(@"LINEAR_RGB.pf");
      }
      return HarmonyJavaAwtColorICC_Profile_linearRGBProfile;
    }
  }
  @catch (JavaIoIOException *e) {
    
#line 707
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.163"));
  }
  
#line 711
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.164"));
}


#line 721
jint HarmonyJavaAwtColorICC_Profile_getIntFromHeaderWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint idx) {
  if (self->headerData_ == nil) {
    self->headerData_ = [self getDataWithInt:HarmonyJavaAwtColorICC_Profile_icSigHead];
  }
  
#line 726
  return (JreLShift32((IOSByteArray_Get(nil_chk(self->headerData_), idx) & (jint) 0xFF), 24)) | (JreLShift32((IOSByteArray_Get(self->headerData_, idx + 1) & (jint) 0xFF), 16)) |
#line 727
  (JreLShift32((IOSByteArray_Get(self->headerData_, idx + 2) & (jint) 0xFF), 8)) | ((IOSByteArray_Get(self->headerData_, idx + 3) & (jint) 0xFF));
}


#line 737
jbyte HarmonyJavaAwtColorICC_Profile_getByteFromHeaderWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint idx) {
  if (self->headerData_ == nil) {
    self->headerData_ = [self getDataWithInt:HarmonyJavaAwtColorICC_Profile_icSigHead];
  }
  
#line 742
  return IOSByteArray_Get(nil_chk(self->headerData_), idx);
}


#line 752
jint HarmonyJavaAwtColorICC_Profile_csFromSignatureWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint signature) {
  switch (signature) {
    case HarmonyJavaAwtColorICC_Profile_icSigRgbData:
    return HarmonyJavaAwtColorColorSpace_TYPE_RGB;
    case HarmonyJavaAwtColorICC_Profile_icSigXYZData:
    return HarmonyJavaAwtColorColorSpace_TYPE_XYZ;
    case HarmonyJavaAwtColorICC_Profile_icSigCmykData:
    return HarmonyJavaAwtColorColorSpace_TYPE_CMYK;
    case HarmonyJavaAwtColorICC_Profile_icSigLabData:
    return HarmonyJavaAwtColorColorSpace_TYPE_Lab;
    case HarmonyJavaAwtColorICC_Profile_icSigGrayData:
    return HarmonyJavaAwtColorColorSpace_TYPE_GRAY;
    case HarmonyJavaAwtColorICC_Profile_icSigHlsData:
    return HarmonyJavaAwtColorColorSpace_TYPE_HLS;
    case HarmonyJavaAwtColorICC_Profile_icSigLuvData:
    return HarmonyJavaAwtColorColorSpace_TYPE_Luv;
    case HarmonyJavaAwtColorICC_Profile_icSigYCbCrData:
    return HarmonyJavaAwtColorColorSpace_TYPE_YCbCr;
    case HarmonyJavaAwtColorICC_Profile_icSigYxyData:
    return HarmonyJavaAwtColorColorSpace_TYPE_Yxy;
    case HarmonyJavaAwtColorICC_Profile_icSigHsvData:
    return HarmonyJavaAwtColorColorSpace_TYPE_HSV;
    case HarmonyJavaAwtColorICC_Profile_icSigCmyData:
    return HarmonyJavaAwtColorColorSpace_TYPE_CMY;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace2CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_2CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace3CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_3CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace4CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_4CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace5CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_5CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace6CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_6CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace7CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_7CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace8CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_8CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpace9CLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_9CLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceACLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_ACLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceBCLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_BCLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceCCLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_CCLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceDCLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_DCLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceECLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_ECLR;
    case HarmonyJavaAwtColorICC_Profile_icSigSpaceFCLR:
    return HarmonyJavaAwtColorColorSpace_TYPE_FCLR;
    default:
    
#line 804
    ;
  }
  
#line 808
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.165"));
}


#line 811
jlong HarmonyJavaAwtColorICC_Profile_getProfileHandle(HarmonyJavaAwtColorICC_Profile *self) {
  self->handleStolen_ = true;
  return self->profileHandle_;
}

jint HarmonyJavaAwtColorICC_Profile_getDataSizeWithInt_(HarmonyJavaAwtColorICC_Profile *self, jint tagSignature) {
  return OrgApacheHarmonyAwtGlColorNativeCMM_cmmGetProfileElementSizeWithLong_withInt_(self->profileHandle_, tagSignature);
}


#line 852
jfloat HarmonyJavaAwtColorICC_Profile_getGammaOrTRCWithInt_withShortArray_(HarmonyJavaAwtColorICC_Profile *self, jint tagSignature, IOSShortArray *dataTRC) {
  IOSByteArray *data = [self getDataWithInt:tagSignature];
  jint trcSize = OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getIntFromByteArrayWithByteArray_withInt_(data, HarmonyJavaAwtColorICC_Profile_icCurveCount);
  
#line 856
  dataTRC = nil;
  
#line 858
  if (trcSize == 0) {
    return 1.0f;
  }
  
#line 862
  if (trcSize == 1) {
    
#line 864
    return OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getShortFromByteArrayWithByteArray_withInt_(data, HarmonyJavaAwtColorICC_Profile_icCurveData) / 256.f;
  }
  
#line 868
  dataTRC = [IOSShortArray newArrayWithLength:trcSize];
  for (jint i = 0, pos = HarmonyJavaAwtColorICC_Profile_icCurveData; i < trcSize; i++, pos += 2) {
    *IOSShortArray_GetRef(dataTRC, i) = OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getShortFromByteArrayWithByteArray_withInt_(data, pos);
  }
  return 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtColorICC_Profile)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/color/ICC_Profile.java"


#line 570
@implementation HarmonyJavaAwtColorICC_Profile_1


#line 569
- (instancetype)initWithNSString:(NSString *)capture$0 {
  HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(self, capture$0);
  return self;
}


#line 570
- (JavaIoFileInputStream *)run {
  
#line 572
  @try {
    return new_JavaIoFileInputStream_initWithNSString_(val$fName_);
  }
  @catch (
#line 574
  JavaIoFileNotFoundException *e) {
  }
  
#line 578
  JavaIoFileInputStream *fiStream = HarmonyJavaAwtColorICC_Profile_tryPathWithNSString_withNSString_(OrgApacheHarmonyAwtUtils_getSystemPropertyWithNSString_(
#line 579
  @"java.iccprofile.path"), val$fName_);
  if (fiStream != nil) {
    return JreRetainedLocalValue(fiStream);
  }
  
#line 585
  fiStream = HarmonyJavaAwtColorICC_Profile_tryPathWithNSString_withNSString_(OrgApacheHarmonyAwtUtils_getSystemPropertyWithNSString_(@"java.class.path"), val$fName_);
  if (fiStream != nil) {
    return JreRetainedLocalValue(fiStream);
  }
  
#line 591
  NSString *home = OrgApacheHarmonyAwtUtils_getSystemPropertyWithNSString_(@"java.home");
  if (home != nil) {
    fiStream = HarmonyJavaAwtColorICC_Profile_tryPathWithNSString_withNSString_(JreStrcat("$C$C$", home, JreLoadStatic(JavaIoFile, separatorChar), @"lib", JreLoadStatic(JavaIoFile, separatorChar), @"cmm"), val$fName_);
  }
  
#line 597
  return JreRetainedLocalValue(fiStream);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoFileInputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$fName_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LHarmonyJavaAwtColorICC_Profile;", "getInstanceWithNSString:", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Ljava/io/FileInputStream;>;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtColorICC_Profile_1 = { "", "harmony.java.awt.color", ptrTable, methods, fields, 7, 0x8000, 2, 1, 1, -1, 2, 3, -1 };
  return &_HarmonyJavaAwtColorICC_Profile_1;
}

@end


#line 569
void HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(HarmonyJavaAwtColorICC_Profile_1 *self, NSString *capture$0) {
  self->val$fName_ = capture$0;
  NSObject_init(self);
}


#line 569
HarmonyJavaAwtColorICC_Profile_1 *new_HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtColorICC_Profile_1, initWithNSString_, capture$0)
}


#line 569
HarmonyJavaAwtColorICC_Profile_1 *create_HarmonyJavaAwtColorICC_Profile_1_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtColorICC_Profile_1, initWithNSString_, capture$0)
}

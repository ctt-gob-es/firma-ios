//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Point2D.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "harmony/java/awt/geom/Point2D.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/InternalError.h"
#include "java/lang/Math.h"
#include "org/apache/harmony/misc/HashCode.h"

#if !__has_feature(objc_arc)
#error "harmony/java/awt/geom/Point2D must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Point2D.java"


#line 24
@implementation HarmonyJavaAwtGeomPoint2D

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 101
- (instancetype)init {
  HarmonyJavaAwtGeomPoint2D_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 104
- (jdouble)getX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 106
- (jdouble)getY {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 108
- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 110
- (void)setLocationWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  [self setLocationWithDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX] withDouble:[p getY]];
}

+ (jdouble)distanceSqWithDouble:(jdouble)x1
                     withDouble:(jdouble)y1
                     withDouble:(jdouble)x2
                     withDouble:(jdouble)y2 {
  return HarmonyJavaAwtGeomPoint2D_distanceSqWithDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2);
}


#line 120
- (jdouble)distanceSqWithDouble:(jdouble)px
                     withDouble:(jdouble)py {
  
#line 121
  return HarmonyJavaAwtGeomPoint2D_distanceSqWithDouble_withDouble_withDouble_withDouble_([self getX], [self getY], px, py);
}


#line 124
- (jdouble)distanceSqWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return HarmonyJavaAwtGeomPoint2D_distanceSqWithDouble_withDouble_withDouble_withDouble_([self getX], [self getY], [((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX], [p getY]);
}

+ (jdouble)distanceWithDouble:(jdouble)x1
                   withDouble:(jdouble)y1
                   withDouble:(jdouble)x2
                   withDouble:(jdouble)y2 {
  return HarmonyJavaAwtGeomPoint2D_distanceWithDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2);
}


#line 132
- (jdouble)distanceWithDouble:(jdouble)px
                   withDouble:(jdouble)py {
  
#line 133
  return JavaLangMath_sqrtWithDouble_([self distanceSqWithDouble:px withDouble:py]);
}


#line 136
- (jdouble)distanceWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return JavaLangMath_sqrtWithDouble_([self distanceSqWithHarmonyJavaAwtGeomPoint2D:p]);
}

- (id)java_clone {
  
#line 142
  @try {
    return [super java_clone];
  }
  @catch (
#line 144
  JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangInternalError_init();
  }
}


#line 149
- (NSUInteger)hash {
  
#line 151
  OrgApacheHarmonyMiscHashCode *hash_ = new_OrgApacheHarmonyMiscHashCode_init();
  (void) [hash_ appendWithDouble:[self getX]];
  (void) [hash_ appendWithDouble:[self getY]];
  return ((jint) [hash_ hash]);
}


#line 157
- (jboolean)isEqual:(id)obj {
  
#line 159
  if (JreObjectEqualsEquals(obj, self)) {
    return true;
  }
  if ([obj isKindOfClass:[HarmonyJavaAwtGeomPoint2D class]]) {
    HarmonyJavaAwtGeomPoint2D *p = (HarmonyJavaAwtGeomPoint2D *) obj;
    return [self getX] == [((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX] && [self getY] == [p getY];
  }
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 5, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getX);
  methods[2].selector = @selector(getY);
  methods[3].selector = @selector(setLocationWithDouble:withDouble:);
  methods[4].selector = @selector(setLocationWithHarmonyJavaAwtGeomPoint2D:);
  methods[5].selector = @selector(distanceSqWithDouble:withDouble:withDouble:withDouble:);
  methods[6].selector = @selector(distanceSqWithDouble:withDouble:);
  methods[7].selector = @selector(distanceSqWithHarmonyJavaAwtGeomPoint2D:);
  methods[8].selector = @selector(distanceWithDouble:withDouble:withDouble:withDouble:);
  methods[9].selector = @selector(distanceWithDouble:withDouble:);
  methods[10].selector = @selector(distanceWithHarmonyJavaAwtGeomPoint2D:);
  methods[11].selector = @selector(java_clone);
  methods[12].selector = @selector(hash);
  methods[13].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setLocation", "DD", "LHarmonyJavaAwtGeomPoint2D;", "distanceSq", "DDDD", "distance", "clone", "hashCode", "equals", "LNSObject;", "LHarmonyJavaAwtGeomPoint2D_Float;LHarmonyJavaAwtGeomPoint2D_Double;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomPoint2D = { "Point2D", "harmony.java.awt.geom", ptrTable, methods, NULL, 7, 0x401, 14, 0, -1, 10, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomPoint2D;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 101
void HarmonyJavaAwtGeomPoint2D_init(HarmonyJavaAwtGeomPoint2D *self) {
  NSObject_init(self);
}


#line 114
jdouble HarmonyJavaAwtGeomPoint2D_distanceSqWithDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2) {
  HarmonyJavaAwtGeomPoint2D_initialize();
  
#line 115
  JreMinusAssignDoubleD(&x2, x1);
  JreMinusAssignDoubleD(&y2, y1);
  return x2 * x2 + y2 * y2;
}


#line 128
jdouble HarmonyJavaAwtGeomPoint2D_distanceWithDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2) {
  HarmonyJavaAwtGeomPoint2D_initialize();
  
#line 129
  return JavaLangMath_sqrtWithDouble_(HarmonyJavaAwtGeomPoint2D_distanceSqWithDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomPoint2D)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Point2D.java"


#line 26
@implementation HarmonyJavaAwtGeomPoint2D_Float

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 31
- (instancetype)init {
  HarmonyJavaAwtGeomPoint2D_Float_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 34
- (instancetype)initWithFloat:(jfloat)x
                    withFloat:(jfloat)y {
  HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(self, x, y);
  return self;
}


#line 39
- (jdouble)getX {
  
#line 41
  return x_;
}


#line 44
- (jdouble)getY {
  
#line 46
  return y_;
}


#line 49
- (void)setLocationWithFloat:(jfloat)x
                   withFloat:(jfloat)y {
  
#line 50
  self->x_ = x;
  self->y_ = y;
}


#line 54
- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  self->x_ = (jfloat) x;
  self->y_ = (jfloat) y;
}

- (NSString *)description {
  
#line 62
  return JreStrcat("$$F$FC", [[self java_getClass] getName], @"[x=", x_, @",y=", y_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithFloat:withFloat:);
  methods[2].selector = @selector(getX);
  methods[3].selector = @selector(getY);
  methods[4].selector = @selector(setLocationWithFloat:withFloat:);
  methods[5].selector = @selector(setLocationWithDouble:withDouble:);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "FF", "setLocation", "DD", "toString", "LHarmonyJavaAwtGeomPoint2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomPoint2D_Float = { "Float", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x9, 7, 2, 4, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomPoint2D_Float;
}

@end


#line 31
void HarmonyJavaAwtGeomPoint2D_Float_init(HarmonyJavaAwtGeomPoint2D_Float *self) {
  HarmonyJavaAwtGeomPoint2D_init(self);
}


#line 31
HarmonyJavaAwtGeomPoint2D_Float *new_HarmonyJavaAwtGeomPoint2D_Float_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomPoint2D_Float, init)
}


#line 31
HarmonyJavaAwtGeomPoint2D_Float *create_HarmonyJavaAwtGeomPoint2D_Float_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomPoint2D_Float, init)
}


#line 34
void HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(HarmonyJavaAwtGeomPoint2D_Float *self, jfloat x, jfloat y) {
  HarmonyJavaAwtGeomPoint2D_init(self);
  
#line 35
  self->x_ = x;
  self->y_ = y;
}


#line 34
HarmonyJavaAwtGeomPoint2D_Float *new_HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(jfloat x, jfloat y) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomPoint2D_Float, initWithFloat_withFloat_, x, y)
}


#line 34
HarmonyJavaAwtGeomPoint2D_Float *create_HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(jfloat x, jfloat y) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomPoint2D_Float, initWithFloat_withFloat_, x, y)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomPoint2D_Float)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Point2D.java"


#line 66
@implementation HarmonyJavaAwtGeomPoint2D_Double

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 71
- (instancetype)init {
  HarmonyJavaAwtGeomPoint2D_Double_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 74
- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y {
  HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(self, x, y);
  return self;
}


#line 79
- (jdouble)getX {
  
#line 81
  return x_;
}


#line 84
- (jdouble)getY {
  
#line 86
  return y_;
}


#line 89
- (void)setLocationWithDouble:(jdouble)x
                   withDouble:(jdouble)y {
  self->x_ = x;
  self->y_ = y;
}

- (NSString *)description {
  
#line 97
  return JreStrcat("$$D$DC", [[self java_getClass] getName], @"[x=", x_, @",y=", y_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithDouble:withDouble:);
  methods[2].selector = @selector(getX);
  methods[3].selector = @selector(getY);
  methods[4].selector = @selector(setLocationWithDouble:withDouble:);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "DD", "setLocation", "toString", "LHarmonyJavaAwtGeomPoint2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomPoint2D_Double = { "Double", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x9, 6, 2, 3, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomPoint2D_Double;
}

@end


#line 71
void HarmonyJavaAwtGeomPoint2D_Double_init(HarmonyJavaAwtGeomPoint2D_Double *self) {
  HarmonyJavaAwtGeomPoint2D_init(self);
}


#line 71
HarmonyJavaAwtGeomPoint2D_Double *new_HarmonyJavaAwtGeomPoint2D_Double_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomPoint2D_Double, init)
}


#line 71
HarmonyJavaAwtGeomPoint2D_Double *create_HarmonyJavaAwtGeomPoint2D_Double_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomPoint2D_Double, init)
}


#line 74
void HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(HarmonyJavaAwtGeomPoint2D_Double *self, jdouble x, jdouble y) {
  HarmonyJavaAwtGeomPoint2D_init(self);
  
#line 75
  self->x_ = x;
  self->y_ = y;
}


#line 74
HarmonyJavaAwtGeomPoint2D_Double *new_HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(jdouble x, jdouble y) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomPoint2D_Double, initWithDouble_withDouble_, x, y)
}


#line 74
HarmonyJavaAwtGeomPoint2D_Double *create_HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(jdouble x, jdouble y) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomPoint2D_Double, initWithDouble_withDouble_, x, y)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomPoint2D_Double)

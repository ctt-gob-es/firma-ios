//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/ec/WNafPreCompInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_WNafPreCompInfo")
#ifdef RESTRICT_WNafPreCompInfo
#define INCLUDE_ALL_WNafPreCompInfo 0
#else
#define INCLUDE_ALL_WNafPreCompInfo 1
#endif
#undef RESTRICT_WNafPreCompInfo

#if !defined (OrgSpongycastleMathEcWNafPreCompInfo_) && (INCLUDE_ALL_WNafPreCompInfo || defined(INCLUDE_OrgSpongycastleMathEcWNafPreCompInfo))
#define OrgSpongycastleMathEcWNafPreCompInfo_

#define RESTRICT_PreCompInfo 1
#define INCLUDE_OrgSpongycastleMathEcPreCompInfo 1
#include "PreCompInfo.h"

@class IOSObjectArray;
@class OrgSpongycastleMathEcECPoint;

/*!
 @brief Class holding precomputation data for the WNAF (Window Non-Adjacent Form)
  algorithm.
 */
@interface OrgSpongycastleMathEcWNafPreCompInfo : NSObject < OrgSpongycastleMathEcPreCompInfo > {
 @public
  /*!
   @brief Array holding the precomputed <code>ECPoint</code>s used for a Window
  NAF multiplication.
   */
  IOSObjectArray *preComp_;
  /*!
   @brief Array holding the negations of the precomputed <code>ECPoint</code>s used
  for a Window NAF multiplication.
   */
  IOSObjectArray *preCompNeg_;
  /*!
   @brief Holds an <code>ECPoint</code> representing twice(this).Used for the
  Window NAF multiplication to create or extend the precomputed values.
   */
  OrgSpongycastleMathEcECPoint *twice_;
}

#pragma mark Public

- (instancetype)init;

- (IOSObjectArray *)getPreComp;

- (IOSObjectArray *)getPreCompNeg;

- (OrgSpongycastleMathEcECPoint *)getTwice;

- (void)setPreCompWithOrgSpongycastleMathEcECPointArray:(IOSObjectArray *)preComp;

- (void)setPreCompNegWithOrgSpongycastleMathEcECPointArray:(IOSObjectArray *)preCompNeg;

- (void)setTwiceWithOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)twice;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleMathEcWNafPreCompInfo)

J2OBJC_FIELD_SETTER(OrgSpongycastleMathEcWNafPreCompInfo, preComp_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleMathEcWNafPreCompInfo, preCompNeg_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleMathEcWNafPreCompInfo, twice_, OrgSpongycastleMathEcECPoint *)

FOUNDATION_EXPORT void OrgSpongycastleMathEcWNafPreCompInfo_init(OrgSpongycastleMathEcWNafPreCompInfo *self);

FOUNDATION_EXPORT OrgSpongycastleMathEcWNafPreCompInfo *new_OrgSpongycastleMathEcWNafPreCompInfo_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleMathEcWNafPreCompInfo *create_OrgSpongycastleMathEcWNafPreCompInfo_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathEcWNafPreCompInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_WNafPreCompInfo")

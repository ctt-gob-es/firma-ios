//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/PKIXCRLStoreSelector.java
//

#include "ASN1Integer.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "Arrays.h"
#include "Extension.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PKIXCRLStoreSelector.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "java/security/cert/CRL.h"
#include "java/security/cert/CRLSelector.h"
#include "java/security/cert/CertStore.h"
#include "java/security/cert/X509CRL.h"
#include "java/security/cert/X509CRLSelector.h"
#include "java/security/cert/X509Certificate.h"
#include "java/util/Collection.h"
#include "java/util/Date.h"

#if !__has_feature(objc_arc)
#error "PKIXCRLStoreSelector must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleJcajcePKIXCRLStoreSelector () {
 @public
  id<JavaSecurityCertCRLSelector> baseSelector_;
  jboolean deltaCRLIndicator_;
  jboolean completeCRLEnabled_;
  JavaMathBigInteger *maxBaseCRLNumber_;
  IOSByteArray *issuingDistributionPoint_;
  jboolean issuingDistributionPointEnabled_;
}

- (instancetype)initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder:(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *)baseBuilder;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleJcajcePKIXCRLStoreSelector, baseSelector_, id<JavaSecurityCertCRLSelector>)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajcePKIXCRLStoreSelector, maxBaseCRLNumber_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajcePKIXCRLStoreSelector, issuingDistributionPoint_, IOSByteArray *)

__attribute__((unused)) static void OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(OrgSpongycastleJcajcePKIXCRLStoreSelector *self, OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder);

__attribute__((unused)) static OrgSpongycastleJcajcePKIXCRLStoreSelector *new_OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleJcajcePKIXCRLStoreSelector *create_OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder);

@interface OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder () {
 @public
  id<JavaSecurityCertCRLSelector> baseSelector_;
  jboolean deltaCRLIndicator_;
  jboolean completeCRLEnabled_;
  JavaMathBigInteger *maxBaseCRLNumber_;
  IOSByteArray *issuingDistributionPoint_;
  jboolean issuingDistributionPointEnabled_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder, baseSelector_, id<JavaSecurityCertCRLSelector>)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder, maxBaseCRLNumber_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder, issuingDistributionPoint_, IOSByteArray *)

@interface OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone : JavaSecurityCertX509CRLSelector {
 @public
  OrgSpongycastleJcajcePKIXCRLStoreSelector *selector_;
}

- (instancetype)initWithOrgSpongycastleJcajcePKIXCRLStoreSelector:(OrgSpongycastleJcajcePKIXCRLStoreSelector *)selector;

- (jboolean)matchWithJavaSecurityCertCRL:(JavaSecurityCertCRL *)crl;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone)

J2OBJC_FIELD_SETTER(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone, selector_, OrgSpongycastleJcajcePKIXCRLStoreSelector *)

__attribute__((unused)) static void OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone *self, OrgSpongycastleJcajcePKIXCRLStoreSelector *selector);

__attribute__((unused)) static OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone *new_OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(OrgSpongycastleJcajcePKIXCRLStoreSelector *selector) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone *create_OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(OrgSpongycastleJcajcePKIXCRLStoreSelector *selector);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/PKIXCRLStoreSelector.java"


#line 25
@implementation OrgSpongycastleJcajcePKIXCRLStoreSelector


#line 153
- (instancetype)initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder:(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *)baseBuilder {
  OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(self, baseBuilder);
  return self;
}


#line 173
- (jboolean)isIssuingDistributionPointEnabled {
  
#line 175
  return issuingDistributionPointEnabled_;
}


#line 180
- (jboolean)matchWithId:(JavaSecurityCertCRL *)obj {
  
#line 182
  if (!([obj isKindOfClass:[JavaSecurityCertX509CRL class]])) {
    
#line 184
    return [((id<JavaSecurityCertCRLSelector>) nil_chk(baseSelector_)) matchWithJavaSecurityCertCRL:obj];
  }
  
#line 187
  JavaSecurityCertX509CRL *crl = (JavaSecurityCertX509CRL *) cast_chk(obj, [JavaSecurityCertX509CRL class]);
  OrgSpongycastleAsn1ASN1Integer *dci = nil;
  @try {
    
#line 191
    IOSByteArray *bytes = [((JavaSecurityCertX509CRL *) nil_chk(crl)) getExtensionValueWithNSString:
#line 192
    [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgSpongycastleAsn1X509Extension, deltaCRLIndicator))) getId]];
    if (bytes != nil) {
      
#line 195
      dci = OrgSpongycastleAsn1ASN1Integer_getInstanceWithId_([((OrgSpongycastleAsn1ASN1OctetString *) nil_chk(OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_(bytes))) getOctets]);
    }
  }
  @catch (JavaLangException *e) {
    
#line 200
    return false;
  }
  if ([self isDeltaCRLIndicatorEnabled]) {
    
#line 204
    if (dci == nil) {
      
#line 206
      return false;
    }
  }
  if ([self isCompleteCRLEnabled]) {
    
#line 211
    if (dci != nil) {
      
#line 213
      return false;
    }
  }
  if (dci != nil) {
    
#line 219
    if (maxBaseCRLNumber_ != nil) {
      
#line 221
      if ([((JavaMathBigInteger *) nil_chk([dci getPositiveValue])) compareToWithId:maxBaseCRLNumber_] == 1) {
        
#line 223
        return false;
      }
    }
  }
  if (issuingDistributionPointEnabled_) {
    
#line 229
    IOSByteArray *idp = [crl getExtensionValueWithNSString:
#line 230
    [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgSpongycastleAsn1X509Extension, issuingDistributionPoint))) getId]];
    
#line 232
    if (issuingDistributionPoint_ == nil) {
      
#line 234
      if (idp != nil) {
        
#line 236
        return false;
      }
    }
    else {
      
#line 241
      if (!OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(idp, issuingDistributionPoint_)) {
        
#line 243
        return false;
      }
    }
  }
  
#line 248
  return [((id<JavaSecurityCertCRLSelector>) nil_chk(baseSelector_)) matchWithJavaSecurityCertCRL:obj];
}


#line 258
- (jboolean)isDeltaCRLIndicatorEnabled {
  
#line 260
  return deltaCRLIndicator_;
}


#line 263
- (id)java_clone {
  
#line 265
  return self;
}


#line 274
- (jboolean)isCompleteCRLEnabled {
  
#line 276
  return completeCRLEnabled_;
}


#line 284
- (JavaMathBigInteger *)getMaxBaseCRLNumber {
  
#line 286
  return maxBaseCRLNumber_;
}


#line 300
- (IOSByteArray *)getIssuingDistributionPoint {
  
#line 302
  return OrgSpongycastleUtilArrays_cloneWithByteArray_(issuingDistributionPoint_);
}


#line 305
- (JavaSecurityCertX509Certificate *)getCertificateChecking {
  
#line 307
  if ([baseSelector_ isKindOfClass:[JavaSecurityCertX509CRLSelector class]]) {
    
#line 309
    return [((JavaSecurityCertX509CRLSelector *) nil_chk(((JavaSecurityCertX509CRLSelector *) baseSelector_))) getCertificateChecking];
  }
  
#line 312
  return nil;
}


#line 315
+ (id<JavaUtilCollection>)getCRLsWithOrgSpongycastleJcajcePKIXCRLStoreSelector:(OrgSpongycastleJcajcePKIXCRLStoreSelector *)selector
                                                 withJavaSecurityCertCertStore:(JavaSecurityCertCertStore *)certStore {
  return OrgSpongycastleJcajcePKIXCRLStoreSelector_getCRLsWithOrgSpongycastleJcajcePKIXCRLStoreSelector_withJavaSecurityCertCertStore_(selector, certStore);
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509Certificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x9, 4, 5, 6, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder:);
  methods[1].selector = @selector(isIssuingDistributionPointEnabled);
  methods[2].selector = @selector(matchWithId:);
  methods[3].selector = @selector(isDeltaCRLIndicatorEnabled);
  methods[4].selector = @selector(java_clone);
  methods[5].selector = @selector(isCompleteCRLEnabled);
  methods[6].selector = @selector(getMaxBaseCRLNumber);
  methods[7].selector = @selector(getIssuingDistributionPoint);
  methods[8].selector = @selector(getCertificateChecking);
  methods[9].selector = @selector(getCRLsWithOrgSpongycastleJcajcePKIXCRLStoreSelector:withJavaSecurityCertCertStore:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseSelector_", "LJavaSecurityCertCRLSelector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "deltaCRLIndicator_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "completeCRLEnabled_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxBaseCRLNumber_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "issuingDistributionPoint_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "issuingDistributionPointEnabled_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder;", "match", "LJavaSecurityCertCRL;", "clone", "getCRLs", "LOrgSpongycastleJcajcePKIXCRLStoreSelector;LJavaSecurityCertCertStore;", "LJavaSecurityCertCertStoreException;", "(Lorg/spongycastle/jcajce/PKIXCRLStoreSelector;Ljava/security/cert/CertStore;)Ljava/util/Collection<+Ljava/security/cert/CRL;>;", "LOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder;LOrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone;", "<T:Ljava/security/cert/CRL;>Ljava/lang/Object;Lorg/spongycastle/util/Selector<TT;>;" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajcePKIXCRLStoreSelector = { "PKIXCRLStoreSelector", "org.spongycastle.jcajce", ptrTable, methods, fields, 7, 0x1, 10, 6, -1, 8, -1, 9, -1 };
  return &_OrgSpongycastleJcajcePKIXCRLStoreSelector;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 153
void OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(OrgSpongycastleJcajcePKIXCRLStoreSelector *self, OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) {
  NSObject_init(self);
  self->baseSelector_ = ((OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *) nil_chk(baseBuilder))->baseSelector_;
  self->deltaCRLIndicator_ = baseBuilder->deltaCRLIndicator_;
  self->completeCRLEnabled_ = baseBuilder->completeCRLEnabled_;
  self->maxBaseCRLNumber_ = baseBuilder->maxBaseCRLNumber_;
  self->issuingDistributionPoint_ = baseBuilder->issuingDistributionPoint_;
  self->issuingDistributionPointEnabled_ = baseBuilder->issuingDistributionPointEnabled_;
}


#line 153
OrgSpongycastleJcajcePKIXCRLStoreSelector *new_OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajcePKIXCRLStoreSelector, initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_, baseBuilder)
}


#line 153
OrgSpongycastleJcajcePKIXCRLStoreSelector *create_OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *baseBuilder) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajcePKIXCRLStoreSelector, initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_, baseBuilder)
}


#line 315
id<JavaUtilCollection> OrgSpongycastleJcajcePKIXCRLStoreSelector_getCRLsWithOrgSpongycastleJcajcePKIXCRLStoreSelector_withJavaSecurityCertCertStore_(OrgSpongycastleJcajcePKIXCRLStoreSelector *selector, JavaSecurityCertCertStore *certStore) {
  OrgSpongycastleJcajcePKIXCRLStoreSelector_initialize();
  
#line 318
  return [((JavaSecurityCertCertStore *) nil_chk(certStore)) getCRLsWithJavaSecurityCertCRLSelector:new_OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(selector)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajcePKIXCRLStoreSelector)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/PKIXCRLStoreSelector.java"


#line 31
@implementation OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder


#line 46
- (instancetype)initWithJavaSecurityCertCRLSelector:(id<JavaSecurityCertCRLSelector>)crlSelector {
  OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(self, crlSelector);
  return self;
}


#line 61
- (OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *)setCompleteCRLEnabledWithBoolean:(jboolean)completeCRLEnabled {
  
#line 63
  self->completeCRLEnabled_ = completeCRLEnabled;
  
#line 65
  return self;
}


#line 78
- (OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *)setDeltaCRLIndicatorEnabledWithBoolean:(jboolean)deltaCRLIndicator {
  
#line 80
  self->deltaCRLIndicator_ = deltaCRLIndicator;
  
#line 82
  return self;
}


#line 95
- (void)setMaxBaseCRLNumberWithJavaMathBigInteger:(JavaMathBigInteger *)maxBaseCRLNumber {
  
#line 97
  self->maxBaseCRLNumber_ = maxBaseCRLNumber;
}


#line 106
- (void)setIssuingDistributionPointEnabledWithBoolean:(jboolean)issuingDistributionPointEnabled {
  
#line 109
  self->issuingDistributionPointEnabled_ = issuingDistributionPointEnabled;
}


#line 130
- (void)setIssuingDistributionPointWithByteArray:(IOSByteArray *)issuingDistributionPoint {
  
#line 132
  self->issuingDistributionPoint_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(issuingDistributionPoint);
}


#line 140
- (OrgSpongycastleJcajcePKIXCRLStoreSelector *)build {
  
#line 142
  return new_OrgSpongycastleJcajcePKIXCRLStoreSelector_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleJcajcePKIXCRLStoreSelector_Builder;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleJcajcePKIXCRLStoreSelector;", 0x1, -1, -1, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecurityCertCRLSelector:);
  methods[1].selector = @selector(setCompleteCRLEnabledWithBoolean:);
  methods[2].selector = @selector(setDeltaCRLIndicatorEnabledWithBoolean:);
  methods[3].selector = @selector(setMaxBaseCRLNumberWithJavaMathBigInteger:);
  methods[4].selector = @selector(setIssuingDistributionPointEnabledWithBoolean:);
  methods[5].selector = @selector(setIssuingDistributionPointWithByteArray:);
  methods[6].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseSelector_", "LJavaSecurityCertCRLSelector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "deltaCRLIndicator_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "completeCRLEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxBaseCRLNumber_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuingDistributionPoint_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuingDistributionPointEnabled_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityCertCRLSelector;", "setCompleteCRLEnabled", "Z", "setDeltaCRLIndicatorEnabled", "setMaxBaseCRLNumber", "LJavaMathBigInteger;", "setIssuingDistributionPointEnabled", "setIssuingDistributionPoint", "[B", "()Lorg/spongycastle/jcajce/PKIXCRLStoreSelector<+Ljava/security/cert/CRL;>;", "LOrgSpongycastleJcajcePKIXCRLStoreSelector;" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder = { "Builder", "org.spongycastle.jcajce", ptrTable, methods, fields, 7, 0x9, 7, 6, 10, -1, -1, -1, -1 };
  return &_OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder;
}

@end


#line 46
void OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *self, id<JavaSecurityCertCRLSelector> crlSelector) {
  NSObject_init(self);
  self->deltaCRLIndicator_ =
#line 35
  false;
  self->completeCRLEnabled_ = false;
  self->maxBaseCRLNumber_ = nil;
  self->issuingDistributionPoint_ = nil;
  self->issuingDistributionPointEnabled_ = false;
  
#line 48
  self->baseSelector_ = (id<JavaSecurityCertCRLSelector>) cast_check([((id<JavaSecurityCertCRLSelector>) nil_chk(crlSelector)) clone], JavaSecurityCertCRLSelector_class_());
}


#line 46
OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *new_OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(id<JavaSecurityCertCRLSelector> crlSelector) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder, initWithJavaSecurityCertCRLSelector_, crlSelector)
}


#line 46
OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder *create_OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder_initWithJavaSecurityCertCRLSelector_(id<JavaSecurityCertCRLSelector> crlSelector) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder, initWithJavaSecurityCertCRLSelector_, crlSelector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajcePKIXCRLStoreSelector_Builder)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/PKIXCRLStoreSelector.java"


#line 321
@implementation OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone


#line 326
- (instancetype)initWithOrgSpongycastleJcajcePKIXCRLStoreSelector:(OrgSpongycastleJcajcePKIXCRLStoreSelector *)selector {
  OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(self, selector);
  return self;
}


#line 342
- (jboolean)matchWithJavaSecurityCertCRL:(JavaSecurityCertCRL *)crl {
  
#line 344
  return (selector_ == nil) ? (crl != nil) : [((OrgSpongycastleJcajcePKIXCRLStoreSelector *) nil_chk(selector_)) matchWithId:crl];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleJcajcePKIXCRLStoreSelector:);
  methods[1].selector = @selector(matchWithJavaSecurityCertCRL:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "selector_", "LOrgSpongycastleJcajcePKIXCRLStoreSelector;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleJcajcePKIXCRLStoreSelector;", "match", "LJavaSecurityCertCRL;" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone = { "SelectorClone", "org.spongycastle.jcajce", ptrTable, methods, fields, 7, 0xa, 2, 1, 0, -1, -1, -1, -1 };
  return &_OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone;
}

@end


#line 326
void OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone *self, OrgSpongycastleJcajcePKIXCRLStoreSelector *selector) {
  JavaSecurityCertX509CRLSelector_init(self);
  self->selector_ = selector;
  
#line 330
  if ([((OrgSpongycastleJcajcePKIXCRLStoreSelector *) nil_chk(selector))->baseSelector_ isKindOfClass:[JavaSecurityCertX509CRLSelector class]]) {
    
#line 332
    JavaSecurityCertX509CRLSelector *baseSelector = (JavaSecurityCertX509CRLSelector *) selector->baseSelector_;
    
#line 334
    [self setCertificateCheckingWithJavaSecurityCertX509Certificate:[((JavaSecurityCertX509CRLSelector *) nil_chk(baseSelector)) getCertificateChecking]];
    [self setDateAndTimeWithJavaUtilDate:[baseSelector getDateAndTime]];
    [self setIssuersWithJavaUtilCollection:[baseSelector getIssuers]];
    [self setMinCRLNumberWithJavaMathBigInteger:[baseSelector getMinCRL]];
    [self setMaxCRLNumberWithJavaMathBigInteger:[baseSelector getMaxCRL]];
  }
}


#line 326
OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone *new_OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(OrgSpongycastleJcajcePKIXCRLStoreSelector *selector) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone, initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_, selector)
}


#line 326
OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone *create_OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone_initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_(OrgSpongycastleJcajcePKIXCRLStoreSelector *selector) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone, initWithOrgSpongycastleJcajcePKIXCRLStoreSelector_, selector)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajcePKIXCRLStoreSelector_SelectorClone)

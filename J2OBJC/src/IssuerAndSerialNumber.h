//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/cms/IssuerAndSerialNumber.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IssuerAndSerialNumber")
#ifdef RESTRICT_IssuerAndSerialNumber
#define INCLUDE_ALL_IssuerAndSerialNumber 0
#else
#define INCLUDE_ALL_IssuerAndSerialNumber 1
#endif
#undef RESTRICT_IssuerAndSerialNumber

#if !defined (OrgSpongycastleAsn1CmsIssuerAndSerialNumber_) && (INCLUDE_ALL_IssuerAndSerialNumber || defined(INCLUDE_OrgSpongycastleAsn1CmsIssuerAndSerialNumber))
#define OrgSpongycastleAsn1CmsIssuerAndSerialNumber_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class JavaMathBigInteger;
@class OrgSpongycastleAsn1ASN1Integer;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1X500X500Name;
@class OrgSpongycastleAsn1X509Certificate;
@class OrgSpongycastleAsn1X509X509CertificateStructure;
@class OrgSpongycastleAsn1X509X509Name;

/*!
 @brief <a href="http://tools.ietf.org/html/rfc5652#section-10.2.4">RFC 5652</a>: IssuerAndSerialNumber object.
 <p>
  @code

  IssuerAndSerialNumber ::= SEQUENCE {
      issuer Name,
      serialNumber CertificateSerialNumber
  }
  CertificateSerialNumber ::= INTEGER  -- See RFC 5280 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsIssuerAndSerialNumber : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

/*!
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

- (instancetype)initWithOrgSpongycastleAsn1X509Certificate:(OrgSpongycastleAsn1X509Certificate *)certificate;

- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)name
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

/*!
 */
- (instancetype)initWithOrgSpongycastleAsn1X509X509CertificateStructure:(OrgSpongycastleAsn1X509X509CertificateStructure *)certificate;

/*!
 */
- (instancetype)initWithOrgSpongycastleAsn1X509X509Name:(OrgSpongycastleAsn1X509X509Name *)name
                     withOrgSpongycastleAsn1ASN1Integer:(OrgSpongycastleAsn1ASN1Integer *)serialNumber;

/*!
 */
- (instancetype)initWithOrgSpongycastleAsn1X509X509Name:(OrgSpongycastleAsn1X509X509Name *)name
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

/*!
 @brief Return an IssuerAndSerialNumber object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>IssuerAndSerialNumber</code> object 
 <li> <code>ASN1Sequence</code> input formats with IssuerAndSerialNumber structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsIssuerAndSerialNumber *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1X500X500Name *)getName;

- (OrgSpongycastleAsn1ASN1Integer *)getSerialNumber;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsIssuerAndSerialNumber)

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *OrgSpongycastleAsn1CmsIssuerAndSerialNumber_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsIssuerAndSerialNumber *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *new_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *create_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1CmsIssuerAndSerialNumber *self, OrgSpongycastleAsn1X509Certificate *certificate);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *new_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate *certificate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *create_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleAsn1X509Certificate *certificate);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509CertificateStructure_(OrgSpongycastleAsn1CmsIssuerAndSerialNumber *self, OrgSpongycastleAsn1X509X509CertificateStructure *certificate);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *new_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509CertificateStructure_(OrgSpongycastleAsn1X509X509CertificateStructure *certificate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *create_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509CertificateStructure_(OrgSpongycastleAsn1X509X509CertificateStructure *certificate);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1CmsIssuerAndSerialNumber *self, OrgSpongycastleAsn1X500X500Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *new_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *name, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *create_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509Name_withJavaMathBigInteger_(OrgSpongycastleAsn1CmsIssuerAndSerialNumber *self, OrgSpongycastleAsn1X509X509Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *new_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X509X509Name *name, JavaMathBigInteger *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *create_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X509X509Name *name, JavaMathBigInteger *serialNumber);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509Name_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1CmsIssuerAndSerialNumber *self, OrgSpongycastleAsn1X509X509Name *name, OrgSpongycastleAsn1ASN1Integer *serialNumber);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *new_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509Name_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509X509Name *name, OrgSpongycastleAsn1ASN1Integer *serialNumber) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsIssuerAndSerialNumber *create_OrgSpongycastleAsn1CmsIssuerAndSerialNumber_initWithOrgSpongycastleAsn1X509X509Name_withOrgSpongycastleAsn1ASN1Integer_(OrgSpongycastleAsn1X509X509Name *name, OrgSpongycastleAsn1ASN1Integer *serialNumber);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsIssuerAndSerialNumber)

#endif

#pragma pop_macro("INCLUDE_ALL_IssuerAndSerialNumber")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/io/pem/PemWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PemWriter")
#ifdef RESTRICT_PemWriter
#define INCLUDE_ALL_PemWriter 0
#else
#define INCLUDE_ALL_PemWriter 1
#endif
#undef RESTRICT_PemWriter

#if !defined (OrgSpongycastleUtilIoPemPemWriter_) && (INCLUDE_ALL_PemWriter || defined(INCLUDE_OrgSpongycastleUtilIoPemPemWriter))
#define OrgSpongycastleUtilIoPemPemWriter_

#define RESTRICT_JavaIoBufferedWriter 1
#define INCLUDE_JavaIoBufferedWriter 1
#include "java/io/BufferedWriter.h"

@class JavaIoWriter;
@class OrgSpongycastleUtilIoPemPemObject;
@protocol OrgSpongycastleUtilIoPemPemObjectGenerator;

/*!
 @brief A generic PEM writer, based on RFC 1421
 */
@interface OrgSpongycastleUtilIoPemPemWriter : JavaIoBufferedWriter

#pragma mark Public

/*!
 @brief Base constructor.
 @param outArg output stream to use.
 */
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)outArg;

/*!
 @brief Return the number of bytes or characters required to contain the
  passed in object if it is PEM encoded.
 @param obj pem object to be output
 @return an estimate of the number of bytes
 */
- (jint)getOutputSizeWithOrgSpongycastleUtilIoPemPemObject:(OrgSpongycastleUtilIoPemPemObject *)obj;

- (void)writeObjectWithOrgSpongycastleUtilIoPemPemObjectGenerator:(id<OrgSpongycastleUtilIoPemPemObjectGenerator>)objGen;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)arg0
                             withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleUtilIoPemPemWriter)

FOUNDATION_EXPORT void OrgSpongycastleUtilIoPemPemWriter_initWithJavaIoWriter_(OrgSpongycastleUtilIoPemPemWriter *self, JavaIoWriter *outArg);

FOUNDATION_EXPORT OrgSpongycastleUtilIoPemPemWriter *new_OrgSpongycastleUtilIoPemPemWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleUtilIoPemPemWriter *create_OrgSpongycastleUtilIoPemPemWriter_initWithJavaIoWriter_(JavaIoWriter *outArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleUtilIoPemPemWriter)

#endif

#pragma pop_macro("INCLUDE_ALL_PemWriter")

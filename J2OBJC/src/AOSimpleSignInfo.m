//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/AOSimpleSignInfo.java
//

#include "AOSimpleSignInfo.h"
#include "AOUtil.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/cert/X509Certificate.h"
#include "java/text/DateFormat.h"
#include "java/util/Date.h"

#if !__has_feature(objc_arc)
#error "AOSimpleSignInfo must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreSignersAOSimpleSignInfo () {
 @public
  /*!
   @brief Cadena de certificaci&oacute;n.
   */
  IOSObjectArray *certs_;
  /*!
   @brief Algoritmo de firma.
   */
  NSString *signAlgorithm_;
  /*!
   @brief Formato de firma.
   */
  NSString *signFormat_;
  /*!
   @brief Momento de la firma segundo el dispositivo que la realiz&oacute;.
   */
  JavaUtilDate *signingTime_;
  /*!
   @brief Momento de la firma seg&uacute;n un sello de una TSA.
   */
  IOSObjectArray *timestampingTime_;
  /*!
   @brief Cadena binaria con el PKCS#1 de la firma individual.
   */
  IOSByteArray *pkcs1_;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSimpleSignInfo, certs_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSimpleSignInfo, signAlgorithm_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSimpleSignInfo, signFormat_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSimpleSignInfo, signingTime_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSimpleSignInfo, timestampingTime_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAOSimpleSignInfo, pkcs1_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/AOSimpleSignInfo.java"


#line 20
@implementation EsGobAfirmaCoreSignersAOSimpleSignInfo


#line 49
- (instancetype)initWithJavaSecurityCertX509CertificateArray:(IOSObjectArray *)chainCert
                                            withJavaUtilDate:(JavaUtilDate *)signingTime {
  EsGobAfirmaCoreSignersAOSimpleSignInfo_initWithJavaSecurityCertX509CertificateArray_withJavaUtilDate_(self, chainCert, signingTime);
  return self;
}


#line 61
- (NSString *)getSignAlgorithm {
  return self->signAlgorithm_;
}


#line 67
- (void)setSignAlgorithmWithNSString:(NSString *)algorithm {
  self->signAlgorithm_ = algorithm;
}


#line 73
- (NSString *)getSignFormat {
  return self->signFormat_;
}


#line 79
- (void)setSignFormatWithNSString:(NSString *)format {
  self->signFormat_ = format;
}


#line 85
- (IOSObjectArray *)getTimestampingTime {
  return self->timestampingTime_ == nil ? nil : [self->timestampingTime_ java_clone];
}


#line 91
- (void)setTimestampingTimeWithJavaUtilDateArray:(IOSObjectArray *)timestampingTime {
  self->timestampingTime_ = timestampingTime == nil ? nil : [timestampingTime java_clone];
}


#line 97
- (IOSObjectArray *)getCerts {
  return self->certs_ == nil ? nil : [self->certs_ java_clone];
}


#line 103
- (JavaUtilDate *)getSigningTime {
  return self->signingTime_;
}


#line 110
- (jboolean)isTimeStamped {
  return self->timestampingTime_ != nil && self->timestampingTime_->size_ > 0 && IOSObjectArray_Get(self->timestampingTime_, 0) != nil;
}


#line 116
- (IOSByteArray *)getPkcs1 {
  return self->pkcs1_ == nil ? nil : [self->pkcs1_ java_clone];
}


#line 122
- (void)setPkcs1WithByteArray:(IOSByteArray *)pkcs1 {
  self->pkcs1_ = pkcs1 == nil ? nil : [pkcs1 java_clone];
}

- (NSString *)description {
  
#line 128
  NSString *desc = EsGobAfirmaCoreMiscAOUtil_getCNWithJavaSecurityCertX509Certificate_(IOSObjectArray_Get(nil_chk(self->certs_), 0));
  if (self->timestampingTime_ != nil && self->timestampingTime_->size_ > 0 && IOSObjectArray_Get(self->timestampingTime_, 0) != nil) {
    (void) JreStrAppendStrong(&desc, "$$C", @" (TimeStamp: ", [((JavaTextDateFormat *) nil_chk(JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(JavaTextDateFormat_DEFAULT, JavaTextDateFormat_SHORT))) formatWithJavaUtilDate:IOSObjectArray_Get(nil_chk(self->timestampingTime_), 0)], ')');
  }
  else if (self->signingTime_ != nil) {
    (void) JreStrAppendStrong(&desc, "$$C", @" (", [((JavaTextDateFormat *) nil_chk(JavaTextDateFormat_getDateTimeInstanceWithInt_withInt_(JavaTextDateFormat_DEFAULT, JavaTextDateFormat_SHORT))) formatWithJavaUtilDate:self->signingTime_], ')');
  }
  
#line 136
  return desc;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "[LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "[LJavaSecurityCertX509Certificate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecurityCertX509CertificateArray:withJavaUtilDate:);
  methods[1].selector = @selector(getSignAlgorithm);
  methods[2].selector = @selector(setSignAlgorithmWithNSString:);
  methods[3].selector = @selector(getSignFormat);
  methods[4].selector = @selector(setSignFormatWithNSString:);
  methods[5].selector = @selector(getTimestampingTime);
  methods[6].selector = @selector(setTimestampingTimeWithJavaUtilDateArray:);
  methods[7].selector = @selector(getCerts);
  methods[8].selector = @selector(getSigningTime);
  methods[9].selector = @selector(isTimeStamped);
  methods[10].selector = @selector(getPkcs1);
  methods[11].selector = @selector(setPkcs1WithByteArray:);
  methods[12].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certs_", "[LJavaSecurityCertX509Certificate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signFormat_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signingTime_", "LJavaUtilDate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "timestampingTime_", "[LJavaUtilDate;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pkcs1_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LJavaSecurityCertX509Certificate;LJavaUtilDate;", "setSignAlgorithm", "LNSString;", "setSignFormat", "setTimestampingTime", "[LJavaUtilDate;", "setPkcs1", "[B", "toString" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersAOSimpleSignInfo = { "AOSimpleSignInfo", "es.gob.afirma.core.signers", ptrTable, methods, fields, 7, 0x11, 13, 6, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersAOSimpleSignInfo;
}

@end


#line 49
void EsGobAfirmaCoreSignersAOSimpleSignInfo_initWithJavaSecurityCertX509CertificateArray_withJavaUtilDate_(EsGobAfirmaCoreSignersAOSimpleSignInfo *self, IOSObjectArray *chainCert, JavaUtilDate *signingTime) {
  NSObject_init(self);
  self->certs_ =
#line 23
  nil;
  self->signAlgorithm_ =
#line 26
  nil;
  self->signFormat_ =
#line 29
  nil;
  self->signingTime_ =
#line 32
  nil;
  self->timestampingTime_ =
#line 35
  nil;
  self->pkcs1_ =
#line 38
  nil;
  
#line 51
  if (chainCert == nil || chainCert->size_ == 0 || IOSObjectArray_Get(chainCert, 0) == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"No se ha introducido la cadena de certificacion");
  }
  
#line 55
  self->certs_ = [chainCert java_clone];
  self->signingTime_ = signingTime;
}


#line 49
EsGobAfirmaCoreSignersAOSimpleSignInfo *new_EsGobAfirmaCoreSignersAOSimpleSignInfo_initWithJavaSecurityCertX509CertificateArray_withJavaUtilDate_(IOSObjectArray *chainCert, JavaUtilDate *signingTime) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersAOSimpleSignInfo, initWithJavaSecurityCertX509CertificateArray_withJavaUtilDate_, chainCert, signingTime)
}


#line 49
EsGobAfirmaCoreSignersAOSimpleSignInfo *create_EsGobAfirmaCoreSignersAOSimpleSignInfo_initWithJavaSecurityCertX509CertificateArray_withJavaUtilDate_(IOSObjectArray *chainCert, JavaUtilDate *signingTime) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersAOSimpleSignInfo, initWithJavaSecurityCertX509CertificateArray_withJavaUtilDate_, chainCert, signingTime)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersAOSimpleSignInfo)

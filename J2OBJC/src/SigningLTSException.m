//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/SigningLTSException.java
//

#include "J2ObjC_source.h"
#include "RuntimeConfigNeededException.h"
#include "SigningLTSException.h"
#include "java/lang/Throwable.h"

#if !__has_feature(objc_arc)
#error "SigningLTSException must be compiled with ARC (-fobjc-arc)"
#endif

/*!
 @brief Serial Id.
 */
inline jlong EsGobAfirmaCoreSigningLTSException_get_serialVersionUID(void);
#define EsGobAfirmaCoreSigningLTSException_serialVersionUID 995443738935981665LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreSigningLTSException, serialVersionUID, jlong)

inline NSString *EsGobAfirmaCoreSigningLTSException_get_EXTRA_PARAM_NEEDED(void);
static NSString *EsGobAfirmaCoreSigningLTSException_EXTRA_PARAM_NEEDED = @"allowSignLTSignature";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreSigningLTSException, EXTRA_PARAM_NEEDED, NSString *)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/SigningLTSException.java"

NSString *EsGobAfirmaCoreSigningLTSException_REQUESTOR_MSG_CODE = @"signingLts";
NSString *EsGobAfirmaCoreSigningLTSException_REQUESTOR_POSSIBLE_MSG_CODE = @"signingLtsPossible";


#line 17
@implementation EsGobAfirmaCoreSigningLTSException


#line 31
- (instancetype)initWithNSString:(NSString *)message {
  EsGobAfirmaCoreSigningLTSException_initWithNSString_(self, message);
  return self;
}


#line 41
- (instancetype)initWithNSString:(NSString *)message
                     withBoolean:(jboolean)possible {
  EsGobAfirmaCoreSigningLTSException_initWithNSString_withBoolean_(self, message, possible);
  return self;
}


#line 53
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause
                     withBoolean:(jboolean)possible {
  EsGobAfirmaCoreSigningLTSException_initWithNSString_withJavaLangThrowable_withBoolean_(self, message, cause, possible);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withBoolean:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaCoreSigningLTSException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "REQUESTOR_MSG_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "REQUESTOR_POSSIBLE_MSG_CODE", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "EXTRA_PARAM_NEEDED", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;Z", "LNSString;LJavaLangThrowable;Z", &EsGobAfirmaCoreSigningLTSException_REQUESTOR_MSG_CODE, &EsGobAfirmaCoreSigningLTSException_REQUESTOR_POSSIBLE_MSG_CODE, &EsGobAfirmaCoreSigningLTSException_EXTRA_PARAM_NEEDED };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSigningLTSException = { "SigningLTSException", "es.gob.afirma.core", ptrTable, methods, fields, 7, 0x1, 3, 4, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSigningLTSException;
}

@end


#line 31
void EsGobAfirmaCoreSigningLTSException_initWithNSString_(EsGobAfirmaCoreSigningLTSException *self, NSString *message) {
  EsGobAfirmaCoreRuntimeConfigNeededException_initWithNSString_withEsGobAfirmaCoreRuntimeConfigNeededException_RequestType_withNSString_withNSString_(self, message, JreLoadEnum(EsGobAfirmaCoreRuntimeConfigNeededException_RequestType, CONFIRM), EsGobAfirmaCoreSigningLTSException_REQUESTOR_MSG_CODE, EsGobAfirmaCoreSigningLTSException_EXTRA_PARAM_NEEDED);
}


#line 31
EsGobAfirmaCoreSigningLTSException *new_EsGobAfirmaCoreSigningLTSException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSigningLTSException, initWithNSString_, message)
}


#line 31
EsGobAfirmaCoreSigningLTSException *create_EsGobAfirmaCoreSigningLTSException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSigningLTSException, initWithNSString_, message)
}


#line 41
void EsGobAfirmaCoreSigningLTSException_initWithNSString_withBoolean_(EsGobAfirmaCoreSigningLTSException *self, NSString *message, jboolean possible) {
  EsGobAfirmaCoreRuntimeConfigNeededException_initWithNSString_withEsGobAfirmaCoreRuntimeConfigNeededException_RequestType_withNSString_withNSString_(self, message, JreLoadEnum(EsGobAfirmaCoreRuntimeConfigNeededException_RequestType, CONFIRM),
#line 43
  possible ? EsGobAfirmaCoreSigningLTSException_REQUESTOR_POSSIBLE_MSG_CODE : EsGobAfirmaCoreSigningLTSException_REQUESTOR_MSG_CODE, EsGobAfirmaCoreSigningLTSException_EXTRA_PARAM_NEEDED);
}


#line 41
EsGobAfirmaCoreSigningLTSException *new_EsGobAfirmaCoreSigningLTSException_initWithNSString_withBoolean_(NSString *message, jboolean possible) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSigningLTSException, initWithNSString_withBoolean_, message, possible)
}


#line 41
EsGobAfirmaCoreSigningLTSException *create_EsGobAfirmaCoreSigningLTSException_initWithNSString_withBoolean_(NSString *message, jboolean possible) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSigningLTSException, initWithNSString_withBoolean_, message, possible)
}


#line 53
void EsGobAfirmaCoreSigningLTSException_initWithNSString_withJavaLangThrowable_withBoolean_(EsGobAfirmaCoreSigningLTSException *self, NSString *message, JavaLangThrowable *cause, jboolean possible) {
  EsGobAfirmaCoreRuntimeConfigNeededException_initWithNSString_withEsGobAfirmaCoreRuntimeConfigNeededException_RequestType_withNSString_withNSString_withJavaLangThrowable_(self, message, JreLoadEnum(EsGobAfirmaCoreRuntimeConfigNeededException_RequestType, CONFIRM),
#line 55
  possible ? EsGobAfirmaCoreSigningLTSException_REQUESTOR_POSSIBLE_MSG_CODE : EsGobAfirmaCoreSigningLTSException_REQUESTOR_MSG_CODE, EsGobAfirmaCoreSigningLTSException_EXTRA_PARAM_NEEDED, cause);
}


#line 53
EsGobAfirmaCoreSigningLTSException *new_EsGobAfirmaCoreSigningLTSException_initWithNSString_withJavaLangThrowable_withBoolean_(NSString *message, JavaLangThrowable *cause, jboolean possible) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSigningLTSException, initWithNSString_withJavaLangThrowable_withBoolean_, message, cause, possible)
}


#line 53
EsGobAfirmaCoreSigningLTSException *create_EsGobAfirmaCoreSigningLTSException_initWithNSString_withJavaLangThrowable_withBoolean_(NSString *message, JavaLangThrowable *cause, jboolean possible) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSigningLTSException, initWithNSString_withJavaLangThrowable_withBoolean_, message, cause, possible)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSigningLTSException)

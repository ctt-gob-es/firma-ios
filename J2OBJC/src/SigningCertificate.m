//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ess/SigningCertificate.java
//

#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "DERSequence.h"
#include "ESSCertID.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "PolicyInformation.h"
#include "SigningCertificate.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "SigningCertificate must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1EssSigningCertificate ()

/*!
 @brief constructeurs
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1EssSigningCertificate *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgSpongycastleAsn1EssSigningCertificate *new_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleAsn1EssSigningCertificate *create_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/ess/SigningCertificate.java"


#line 11
@implementation OrgSpongycastleAsn1EssSigningCertificate


#line 17
+ (OrgSpongycastleAsn1EssSigningCertificate *)getInstanceWithId:(id)o {
  return OrgSpongycastleAsn1EssSigningCertificate_getInstanceWithId_(o);
}


#line 34
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 49
- (instancetype)initWithOrgSpongycastleAsn1EssESSCertID:(OrgSpongycastleAsn1EssESSCertID *)essCertID {
  OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1EssESSCertID_(self, essCertID);
  return self;
}


#line 55
- (IOSObjectArray *)getCerts {
  
#line 57
  IOSObjectArray *cs = [IOSObjectArray newArrayWithLength:[((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(certs_)) size] type:OrgSpongycastleAsn1EssESSCertID_class_()];
  
#line 59
  for (jint i = 0; i != [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(certs_)) size]; i++) {
    
#line 61
    (void) IOSObjectArray_Set(cs, i, OrgSpongycastleAsn1EssESSCertID_getInstanceWithId_([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(certs_)) getObjectAtWithInt:i]));
  }
  
#line 64
  return cs;
}


#line 67
- (IOSObjectArray *)getPolicies {
  
#line 69
  if (policies_ == nil) {
    
#line 71
    return nil;
  }
  
#line 74
  IOSObjectArray *ps = [IOSObjectArray newArrayWithLength:[policies_ size] type:OrgSpongycastleAsn1X509PolicyInformation_class_()];
  
#line 76
  for (jint i = 0; i != [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(policies_)) size]; i++) {
    
#line 78
    (void) IOSObjectArray_Set(ps, i, OrgSpongycastleAsn1X509PolicyInformation_getInstanceWithId_([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(policies_)) getObjectAtWithInt:i]));
  }
  
#line 81
  return ps;
}


#line 96
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 98
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 100
  [v addWithOrgSpongycastleAsn1ASN1Encodable:certs_];
  
#line 102
  if (policies_ != nil) {
    
#line 104
    [v addWithOrgSpongycastleAsn1ASN1Encodable:policies_];
  }
  
#line 107
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1EssSigningCertificate;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1EssESSCertID;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1X509PolicyInformation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1EssESSCertID:);
  methods[3].selector = @selector(getCerts);
  methods[4].selector = @selector(getPolicies);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "certs_", "LOrgSpongycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "policies_", "LOrgSpongycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;", "LOrgSpongycastleAsn1EssESSCertID;" };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1EssSigningCertificate = { "SigningCertificate", "org.spongycastle.asn1.ess", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1EssSigningCertificate;
}

@end


#line 17
OrgSpongycastleAsn1EssSigningCertificate *OrgSpongycastleAsn1EssSigningCertificate_getInstanceWithId_(id o) {
  OrgSpongycastleAsn1EssSigningCertificate_initialize();
  if ([o isKindOfClass:[OrgSpongycastleAsn1EssSigningCertificate class]]) {
    
#line 21
    return (OrgSpongycastleAsn1EssSigningCertificate *) o;
  }
  else if (o != nil) {
    
#line 25
    return new_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  
#line 28
  return nil;
}

void OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1EssSigningCertificate *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) size] < 1 || [seq size] > 2) {
    
#line 38
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ",
#line 39
    [seq size]));
  }
  self->certs_ = OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:0]);
  
#line 43
  if ([seq size] > 1) {
    
#line 45
    self->policies_ = OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:1]);
  }
}


#line 34
OrgSpongycastleAsn1EssSigningCertificate *new_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EssSigningCertificate, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 34
OrgSpongycastleAsn1EssSigningCertificate *create_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EssSigningCertificate, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 49
void OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1EssESSCertID_(OrgSpongycastleAsn1EssSigningCertificate *self, OrgSpongycastleAsn1EssESSCertID *essCertID) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  
#line 52
  self->certs_ = new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1Encodable_(essCertID);
}


#line 49
OrgSpongycastleAsn1EssSigningCertificate *new_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1EssESSCertID_(OrgSpongycastleAsn1EssESSCertID *essCertID) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1EssSigningCertificate, initWithOrgSpongycastleAsn1EssESSCertID_, essCertID)
}


#line 49
OrgSpongycastleAsn1EssSigningCertificate *create_OrgSpongycastleAsn1EssSigningCertificate_initWithOrgSpongycastleAsn1EssESSCertID_(OrgSpongycastleAsn1EssESSCertID *essCertID) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1EssSigningCertificate, initWithOrgSpongycastleAsn1EssESSCertID_, essCertID)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1EssSigningCertificate)

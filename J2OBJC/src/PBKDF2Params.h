//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/pkcs/PBKDF2Params.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PBKDF2Params")
#ifdef RESTRICT_PBKDF2Params
#define INCLUDE_ALL_PBKDF2Params 0
#else
#define INCLUDE_ALL_PBKDF2Params 1
#endif
#undef RESTRICT_PBKDF2Params

#if !defined (OrgSpongycastleAsn1PkcsPBKDF2Params_) && (INCLUDE_ALL_PBKDF2Params || defined(INCLUDE_OrgSpongycastleAsn1PkcsPBKDF2Params))
#define OrgSpongycastleAsn1PkcsPBKDF2Params_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

/*!
 @brief @code

      PBKDF2-params ::= SEQUENCE {
                salt CHOICE {
                       specified OCTET STRING,
                       otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}
                },
               iterationCount INTEGER (1..MAX),
               keyLength INTEGER (1..MAX) OPTIONAL,
               prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1 }
  
@endcode
 */
@interface OrgSpongycastleAsn1PkcsPBKDF2Params : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

/*!
 @brief Create a PBKDF2Params with the specified salt, iteration count, and algid-hmacWithSHA1 for the prf.
 @param salt input salt.
 @param iterationCount input iteration count.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)salt
                          withInt:(jint)iterationCount;

/*!
 @brief Create a PBKDF2Params with the specified salt, iteration count, and a defined prf.
 @param salt input salt.
 @param iterationCount input iteration count.
 @param prf the pseudo-random function to use.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)salt
                          withInt:(jint)iterationCount
withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)prf;

/*!
 @brief Create a PBKDF2Params with the specified salt, iteration count, keyLength, and algid-hmacWithSHA1 for the prf.
 @param salt input salt.
 @param iterationCount input iteration count.
 @param keyLength intended key length to be produced.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)salt
                          withInt:(jint)iterationCount
                          withInt:(jint)keyLength;

/*!
 @brief Create a PBKDF2Params with the specified salt, iteration count, keyLength, and a defined prf.
 @param salt input salt.
 @param iterationCount input iteration count.
 @param keyLength intended key length to be produced.
 @param prf the pseudo-random function to use.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)salt
                          withInt:(jint)iterationCount
                          withInt:(jint)keyLength
withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)prf;

/*!
 @brief Create PBKDF2Params from the passed in object,
 @param obj either PBKDF2Params or an ASN1Sequence.
 @return a PBKDF2Params instance.
 */
+ (OrgSpongycastleAsn1PkcsPBKDF2Params *)getInstanceWithId:(id)obj;

/*!
 @brief Return the iteration count to use.
 @return the input iteration count.
 */
- (JavaMathBigInteger *)getIterationCount;

/*!
 @brief Return the intended length in octets of the derived key.
 @return length in octets for derived key, if specified.
 */
- (JavaMathBigInteger *)getKeyLength;

/*!
 @brief Return the algId of the underlying pseudo random function to use.
 @return the prf algorithm identifier.
 */
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getPrf;

/*!
 @brief Return the salt to use.
 @return the input salt.
 */
- (IOSByteArray *)getSalt;

/*!
 @brief Return true if the PRF is the default (hmacWithSHA1)
 @return true if PRF is default, false otherwise.
 */
- (jboolean)isDefaultPrf;

/*!
 @brief Return an ASN.1 structure suitable for encoding.
 @return the object as an ASN.1 encodable structure.
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleAsn1PkcsPBKDF2Params)

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *OrgSpongycastleAsn1PkcsPBKDF2Params_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_(OrgSpongycastleAsn1PkcsPBKDF2Params *self, IOSByteArray *salt, jint iterationCount);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *new_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_(IOSByteArray *salt, jint iterationCount) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *create_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_(IOSByteArray *salt, jint iterationCount);

FOUNDATION_EXPORT void OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withInt_(OrgSpongycastleAsn1PkcsPBKDF2Params *self, IOSByteArray *salt, jint iterationCount, jint keyLength);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *new_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withInt_(IOSByteArray *salt, jint iterationCount, jint keyLength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *create_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withInt_(IOSByteArray *salt, jint iterationCount, jint keyLength);

FOUNDATION_EXPORT void OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(OrgSpongycastleAsn1PkcsPBKDF2Params *self, IOSByteArray *salt, jint iterationCount, jint keyLength, OrgSpongycastleAsn1X509AlgorithmIdentifier *prf);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *new_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(IOSByteArray *salt, jint iterationCount, jint keyLength, OrgSpongycastleAsn1X509AlgorithmIdentifier *prf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *create_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(IOSByteArray *salt, jint iterationCount, jint keyLength, OrgSpongycastleAsn1X509AlgorithmIdentifier *prf);

FOUNDATION_EXPORT void OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(OrgSpongycastleAsn1PkcsPBKDF2Params *self, IOSByteArray *salt, jint iterationCount, OrgSpongycastleAsn1X509AlgorithmIdentifier *prf);

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *new_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(IOSByteArray *salt, jint iterationCount, OrgSpongycastleAsn1X509AlgorithmIdentifier *prf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1PkcsPBKDF2Params *create_OrgSpongycastleAsn1PkcsPBKDF2Params_initWithByteArray_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(IOSByteArray *salt, jint iterationCount, OrgSpongycastleAsn1X509AlgorithmIdentifier *prf);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1PkcsPBKDF2Params)

#endif

#pragma pop_macro("INCLUDE_ALL_PBKDF2Params")

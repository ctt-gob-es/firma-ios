//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfFont.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PdfFont")
#ifdef RESTRICT_PdfFont
#define INCLUDE_ALL_PdfFont 0
#else
#define INCLUDE_ALL_PdfFont 1
#endif
#undef RESTRICT_PdfFont

#if !defined (ComAowagieTextPdfPdfFont_) && (INCLUDE_ALL_PdfFont || defined(INCLUDE_ComAowagieTextPdfPdfFont))
#define ComAowagieTextPdfPdfFont_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class ComAowagieTextImage;
@class ComAowagieTextPdfBaseFont;

/*!
 @brief <CODE>PdfFont</CODE> is the Pdf Font object.
 <P>
  Limitation: in this class only base 14 Type 1 fonts (courier, courier bold, courier oblique,
  courier boldoblique, helvetica, helvetica bold, helvetica oblique, helvetica boldoblique,
  symbol, times roman, times bold, times italic, times bolditalic, zapfdingbats) and their
  standard encoding (standard, MacRoman, (MacExpert,) WinAnsi) are supported.<BR>
  This object is described in the 'Portable Document Format Reference Manual version 1.3'
  section 7.7 (page 198-203).
 - seealso: PdfName
 - seealso: PdfDictionary
 - seealso: BadPdfFormatException
 */
@interface ComAowagieTextPdfPdfFont : NSObject < JavaLangComparable >

#pragma mark Public

/*!
 @brief Compares this <CODE>PdfFont</CODE> with another
 @param object the other  <CODE> PdfFont </CODE>
 @return a value
 */
- (jint)compareToWithId:(id)object;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithComAowagieTextPdfBaseFont:(ComAowagieTextPdfBaseFont *)bf
                                                      withFloat:(jfloat)size;

+ (ComAowagieTextPdfPdfFont *)getDefaultFont;

- (ComAowagieTextPdfBaseFont *)getFont;

- (void)setHorizontalScalingWithFloat:(jfloat)hScale;

- (void)setImageWithComAowagieTextImage:(ComAowagieTextImage *)image;

/*!
 @brief Returns the size of this font.
 @return a size
 */
- (jfloat)size;

/*!
 @brief Returns the approximative width of 1 character of this font.
 @return a width in Text Space
 */
- (jfloat)width;

/*!
 @brief Returns the width of a certain character of this font.
 @param character a certain character
 @return a width in Text Space
 */
- (jfloat)widthWithInt:(jint)character;

- (jfloat)widthWithNSString:(NSString *)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfFont)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(ComAowagieTextPdfPdfFont *self, ComAowagieTextPdfBaseFont *bf, jfloat size);

FOUNDATION_EXPORT ComAowagieTextPdfPdfFont *new_ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(ComAowagieTextPdfBaseFont *bf, jfloat size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfFont *create_ComAowagieTextPdfPdfFont_initPackagePrivateWithComAowagieTextPdfBaseFont_withFloat_(ComAowagieTextPdfBaseFont *bf, jfloat size);

FOUNDATION_EXPORT ComAowagieTextPdfPdfFont *ComAowagieTextPdfPdfFont_getDefaultFont(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfFont)

#endif

#pragma pop_macro("INCLUDE_ALL_PdfFont")

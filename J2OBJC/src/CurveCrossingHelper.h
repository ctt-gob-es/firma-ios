//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/CurveCrossingHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CurveCrossingHelper")
#ifdef RESTRICT_CurveCrossingHelper
#define INCLUDE_ALL_CurveCrossingHelper 0
#else
#define INCLUDE_ALL_CurveCrossingHelper 1
#endif
#undef RESTRICT_CurveCrossingHelper

#if !defined (ComCurveCrossingHelper_) && (INCLUDE_ALL_CurveCrossingHelper || defined(INCLUDE_ComCurveCrossingHelper))
#define ComCurveCrossingHelper_

@class IOSIntArray;
@class IOSObjectArray;

@interface ComCurveCrossingHelper : NSObject

#pragma mark Public

- (instancetype)initWithDoubleArray2:(IOSObjectArray *)coords
                        withIntArray:(IOSIntArray *)sizes
                       withIntArray2:(IOSObjectArray *)rules
                        withIntArray:(IOSIntArray *)rulesSizes
                       withIntArray2:(IOSObjectArray *)offsets;

- (IOSObjectArray *)findCrossing;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComCurveCrossingHelper)

FOUNDATION_EXPORT void ComCurveCrossingHelper_initWithDoubleArray2_withIntArray_withIntArray2_withIntArray_withIntArray2_(ComCurveCrossingHelper *self, IOSObjectArray *coords, IOSIntArray *sizes, IOSObjectArray *rules, IOSIntArray *rulesSizes, IOSObjectArray *offsets);

FOUNDATION_EXPORT ComCurveCrossingHelper *new_ComCurveCrossingHelper_initWithDoubleArray2_withIntArray_withIntArray2_withIntArray_withIntArray2_(IOSObjectArray *coords, IOSIntArray *sizes, IOSObjectArray *rules, IOSIntArray *rulesSizes, IOSObjectArray *offsets) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComCurveCrossingHelper *create_ComCurveCrossingHelper_initWithDoubleArray2_withIntArray_withIntArray2_withIntArray_withIntArray2_(IOSObjectArray *coords, IOSIntArray *sizes, IOSObjectArray *rules, IOSIntArray *rulesSizes, IOSObjectArray *offsets);

J2OBJC_TYPE_LITERAL_HEADER(ComCurveCrossingHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_CurveCrossingHelper")

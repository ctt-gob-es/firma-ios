//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Jpeg.java
//

#include "BadElementException.h"
#include "Element.h"
#include "ICC_Profile.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "J2ObjC_source.h"
#include "Jpeg.h"
#include "Utilities.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/net/URL.h"

#if !__has_feature(objc_arc)
#error "Jpeg must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextJpeg () {
 @public
  IOSObjectArray *icc_;
}

/*!
 @brief Reads a short from the <CODE>InputStream</CODE>.
 @param is the  <CODE> InputStream </CODE>
 @return an int
 @throw IOExceptionon error
 */
+ (jint)getShortWithJavaIoInputStream:(JavaIoInputStream *)is;

/*!
 @brief Returns a type of marker.
 @param marker an int
 @return a type: <VAR>VALID_MARKER</VAR>, <VAR>UNSUPPORTED_MARKER</VAR> or <VAR>NOPARAM_MARKER</VAR>
 */
+ (jint)markerWithInt:(jint)marker;

/*!
 @brief This method checks if the image is a valid JPEG and processes some parameters.
 @throw BadElementExceptionon error
 @throw IOExceptionon error
 */
- (void)processParameters;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextJpeg, icc_, IOSObjectArray *)

/*!
 @brief This is a type of marker.
 */
inline jint ComAowagieTextJpeg_get_NOT_A_MARKER(void);
#define ComAowagieTextJpeg_NOT_A_MARKER -1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg, NOT_A_MARKER, jint)

/*!
 @brief This is a type of marker.
 */
inline jint ComAowagieTextJpeg_get_VALID_MARKER(void);
#define ComAowagieTextJpeg_VALID_MARKER 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg, VALID_MARKER, jint)

/*!
 @brief Acceptable Jpeg markers.
 */
inline IOSIntArray *ComAowagieTextJpeg_get_VALID_MARKERS(void);
static IOSIntArray *ComAowagieTextJpeg_VALID_MARKERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextJpeg, VALID_MARKERS, IOSIntArray *)

/*!
 @brief This is a type of marker.
 */
inline jint ComAowagieTextJpeg_get_UNSUPPORTED_MARKER(void);
#define ComAowagieTextJpeg_UNSUPPORTED_MARKER 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg, UNSUPPORTED_MARKER, jint)

/*!
 @brief Unsupported Jpeg markers.
 */
inline IOSIntArray *ComAowagieTextJpeg_get_UNSUPPORTED_MARKERS(void);
static IOSIntArray *ComAowagieTextJpeg_UNSUPPORTED_MARKERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextJpeg, UNSUPPORTED_MARKERS, IOSIntArray *)

/*!
 @brief This is a type of marker.
 */
inline jint ComAowagieTextJpeg_get_NOPARAM_MARKER(void);
#define ComAowagieTextJpeg_NOPARAM_MARKER 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg, NOPARAM_MARKER, jint)

/*!
 @brief Jpeg markers without additional parameters.
 */
inline IOSIntArray *ComAowagieTextJpeg_get_NOPARAM_MARKERS(void);
static IOSIntArray *ComAowagieTextJpeg_NOPARAM_MARKERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextJpeg, NOPARAM_MARKERS, IOSIntArray *)

/*!
 @brief Marker value
 */
inline jint ComAowagieTextJpeg_get_M_APP0(void);
#define ComAowagieTextJpeg_M_APP0 224
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg, M_APP0, jint)

/*!
 @brief Marker value
 */
inline jint ComAowagieTextJpeg_get_M_APP2(void);
#define ComAowagieTextJpeg_M_APP2 226
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg, M_APP2, jint)

/*!
 @brief Marker value
 */
inline jint ComAowagieTextJpeg_get_M_APPE(void);
#define ComAowagieTextJpeg_M_APPE 238
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextJpeg, M_APPE, jint)

/*!
 @brief sequence that is used in all Jpeg files
 */
inline IOSByteArray *ComAowagieTextJpeg_get_JFIF_ID(void);
static IOSByteArray *ComAowagieTextJpeg_JFIF_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextJpeg, JFIF_ID, IOSByteArray *)

__attribute__((unused)) static jint ComAowagieTextJpeg_getShortWithJavaIoInputStream_(JavaIoInputStream *is);

__attribute__((unused)) static jint ComAowagieTextJpeg_markerWithInt_(jint marker);

__attribute__((unused)) static void ComAowagieTextJpeg_processParameters(ComAowagieTextJpeg *self);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Jpeg.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextJpeg)


#line 66
@implementation ComAowagieTextJpeg


#line 104
- (instancetype)initWithComAowagieTextImage:(ComAowagieTextImage *)image {
  ComAowagieTextJpeg_initWithComAowagieTextImage_(self, image);
  return self;
}


#line 115
- (instancetype)initWithJavaNetURL:(JavaNetURL *)url {
  ComAowagieTextJpeg_initWithJavaNetURL_(self, url);
  return self;
}


#line 128
- (instancetype)initWithByteArray:(IOSByteArray *)img {
  ComAowagieTextJpeg_initWithByteArray_(self, img);
  return self;
}


#line 144
+ (jint)getShortWithJavaIoInputStream:(JavaIoInputStream *)is {
  return ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is);
}


#line 154
+ (jint)markerWithInt:(jint)marker {
  return ComAowagieTextJpeg_markerWithInt_(marker);
}


#line 180
- (void)processParameters {
  ComAowagieTextJpeg_processParameters(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 2, -1, -1, -1 },
    { NULL, "I", 0x1a, 4, 5, 6, -1, -1, -1 },
    { NULL, "I", 0x1a, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextImage:);
  methods[1].selector = @selector(initWithJavaNetURL:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(getShortWithJavaIoInputStream:);
  methods[4].selector = @selector(markerWithInt:);
  methods[5].selector = @selector(processParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NOT_A_MARKER", "I", .constantValue.asInt = ComAowagieTextJpeg_NOT_A_MARKER, 0x1a, -1, -1, -1, -1 },
    { "VALID_MARKER", "I", .constantValue.asInt = ComAowagieTextJpeg_VALID_MARKER, 0x1a, -1, -1, -1, -1 },
    { "VALID_MARKERS", "[I", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "UNSUPPORTED_MARKER", "I", .constantValue.asInt = ComAowagieTextJpeg_UNSUPPORTED_MARKER, 0x1a, -1, -1, -1, -1 },
    { "UNSUPPORTED_MARKERS", "[I", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "NOPARAM_MARKER", "I", .constantValue.asInt = ComAowagieTextJpeg_NOPARAM_MARKER, 0x1a, -1, -1, -1, -1 },
    { "NOPARAM_MARKERS", "[I", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "M_APP0", "I", .constantValue.asInt = ComAowagieTextJpeg_M_APP0, 0x1a, -1, -1, -1, -1 },
    { "M_APP2", "I", .constantValue.asInt = ComAowagieTextJpeg_M_APP2, 0x1a, -1, -1, -1, -1 },
    { "M_APPE", "I", .constantValue.asInt = ComAowagieTextJpeg_M_APPE, 0x1a, -1, -1, -1, -1 },
    { "JFIF_ID", "[B", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "icc_", "[[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextImage;", "LJavaNetURL;", "LComAowagieTextBadElementException;LJavaIoIOException;", "[B", "getShort", "LJavaIoInputStream;", "LJavaIoIOException;", "marker", "I", &ComAowagieTextJpeg_VALID_MARKERS, &ComAowagieTextJpeg_UNSUPPORTED_MARKERS, &ComAowagieTextJpeg_NOPARAM_MARKERS, &ComAowagieTextJpeg_JFIF_ID };
  static const J2ObjcClassInfo _ComAowagieTextJpeg = { "Jpeg", "com.aowagie.text", ptrTable, methods, fields, 7, 0x1, 6, 12, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextJpeg;
}

+ (void)initialize {
  if (self == [ComAowagieTextJpeg class]) {
    ComAowagieTextJpeg_VALID_MARKERS = [IOSIntArray newArrayWithInts:(jint[]){
#line 77
      (jint) 0xC0, (jint) 0xC1, (jint) 0xC2 } count:3];
      ComAowagieTextJpeg_UNSUPPORTED_MARKERS = [IOSIntArray newArrayWithInts:(jint[]){
#line 83
        (jint) 0xC3, (jint) 0xC5, (jint) 0xC6, (jint) 0xC7, (jint) 0xC8, (jint) 0xC9, (jint) 0xCA, (jint) 0xCB, (jint) 0xCD, (jint) 0xCE, (jint) 0xCF } count:11];
        ComAowagieTextJpeg_NOPARAM_MARKERS = [IOSIntArray newArrayWithInts:(jint[]){
#line 89
          (jint) 0xD0, (jint) 0xD1, (jint) 0xD2, (jint) 0xD3, (jint) 0xD4, (jint) 0xD5, (jint) 0xD6, (jint) 0xD7, (jint) 0xD8, (jint) 0x01 } count:10];
          ComAowagieTextJpeg_JFIF_ID = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 99
            (jint) 0x4A, (jint) 0x46, (jint) 0x49, (jint) 0x46, (jint) 0x00 } count:5];
            J2OBJC_SET_INITIALIZED(ComAowagieTextJpeg)
          }
        }

@end


#line 104
void ComAowagieTextJpeg_initWithComAowagieTextImage_(ComAowagieTextJpeg *self, ComAowagieTextImage *image) {
  ComAowagieTextImage_initWithComAowagieTextImage_(self, image);
}


#line 104
ComAowagieTextJpeg *new_ComAowagieTextJpeg_initWithComAowagieTextImage_(ComAowagieTextImage *image) {
  J2OBJC_NEW_IMPL(ComAowagieTextJpeg, initWithComAowagieTextImage_, image)
}


#line 104
ComAowagieTextJpeg *create_ComAowagieTextJpeg_initWithComAowagieTextImage_(ComAowagieTextImage *image) {
  J2OBJC_CREATE_IMPL(ComAowagieTextJpeg, initWithComAowagieTextImage_, image)
}


#line 115
void ComAowagieTextJpeg_initWithJavaNetURL_(ComAowagieTextJpeg *self, JavaNetURL *url) {
  ComAowagieTextImage_initWithJavaNetURL_(self, url);
  ComAowagieTextJpeg_processParameters(self);
}


#line 115
ComAowagieTextJpeg *new_ComAowagieTextJpeg_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_NEW_IMPL(ComAowagieTextJpeg, initWithJavaNetURL_, url)
}


#line 115
ComAowagieTextJpeg *create_ComAowagieTextJpeg_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_CREATE_IMPL(ComAowagieTextJpeg, initWithJavaNetURL_, url)
}


#line 128
void ComAowagieTextJpeg_initWithByteArray_(ComAowagieTextJpeg *self, IOSByteArray *img) {
  ComAowagieTextImage_initWithJavaNetURL_(self, nil);
  self->rawData_ = img;
  self->originalData_ = img;
  ComAowagieTextJpeg_processParameters(self);
}


#line 128
ComAowagieTextJpeg *new_ComAowagieTextJpeg_initWithByteArray_(IOSByteArray *img) {
  J2OBJC_NEW_IMPL(ComAowagieTextJpeg, initWithByteArray_, img)
}


#line 128
ComAowagieTextJpeg *create_ComAowagieTextJpeg_initWithByteArray_(IOSByteArray *img) {
  J2OBJC_CREATE_IMPL(ComAowagieTextJpeg, initWithByteArray_, img)
}


#line 144
jint ComAowagieTextJpeg_getShortWithJavaIoInputStream_(JavaIoInputStream *is) {
  ComAowagieTextJpeg_initialize();
  
#line 145
  return (JreLShift32([((JavaIoInputStream *) nil_chk(is)) read], 8)) + [is read];
}


#line 154
jint ComAowagieTextJpeg_markerWithInt_(jint marker) {
  ComAowagieTextJpeg_initialize();
  {
    IOSIntArray *a__ =
#line 155
    ComAowagieTextJpeg_VALID_MARKERS;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint element = *b__++;
      
#line 156
      if (marker == element) {
        return ComAowagieTextJpeg_VALID_MARKER;
      }
    }
  }
  {
    IOSIntArray *a__ =
#line 160
    ComAowagieTextJpeg_NOPARAM_MARKERS;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint element = *b__++;
      
#line 161
      if (marker == element) {
        return ComAowagieTextJpeg_NOPARAM_MARKER;
      }
    }
  }
  {
    IOSIntArray *a__ =
#line 165
    ComAowagieTextJpeg_UNSUPPORTED_MARKERS;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint element = *b__++;
      
#line 166
      if (marker == element) {
        return ComAowagieTextJpeg_UNSUPPORTED_MARKER;
      }
    }
  }
  
#line 170
  return ComAowagieTextJpeg_NOT_A_MARKER;
}


#line 180
void ComAowagieTextJpeg_processParameters(ComAowagieTextJpeg *self) {
  self->type_ = ComAowagieTextElement_JPEG;
  self->originalType_ = ComAowagieTextImage_ORIGINAL_JPEG;
  JavaIoInputStream *is = nil;
  @try {
    NSString *errorID;
    if (self->rawData_ == nil) {
      is = [((JavaNetURL *) nil_chk(self->url_)) openStream];
      errorID = [((JavaNetURL *) nil_chk(self->url_)) description];
    }
    else {
      is = new_JavaIoByteArrayInputStream_initWithByteArray_(self->rawData_);
      errorID = @"Byte array";
    }
    if ([((JavaIoInputStream *) nil_chk(is)) read] != (jint) 0xFF || [is read] != (jint) 0xD8) {
      @throw new_ComAowagieTextBadElementException_initWithNSString_(JreStrcat("$$", errorID, @" is not a valid JPEG-file."));
    }
    jboolean firstPass = true;
    jint len;
    while (true) {
      jint v = [is read];
      if (v < 0) {
        @throw new_JavaIoIOException_initWithNSString_(@"Premature EOF while reading JPG.");
      }
      if (v == (jint) 0xFF) {
        jint marker = [is read];
        if (firstPass && marker == ComAowagieTextJpeg_M_APP0) {
          firstPass = false;
          len = ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is);
          if (len < 16) {
            ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(is, len - 2);
            continue;
          }
          IOSByteArray *bcomp = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(ComAowagieTextJpeg_JFIF_ID))->size_];
          jint r = [is readWithByteArray:bcomp];
          if (r != bcomp->size_) {
            @throw new_ComAowagieTextBadElementException_initWithNSString_(JreStrcat("$$", errorID, @" corrupted JFIF marker."));
          }
          jboolean found = true;
          for (jint k = 0; k < bcomp->size_; ++k) {
            if (IOSByteArray_Get(bcomp, k) != IOSByteArray_Get(ComAowagieTextJpeg_JFIF_ID, k)) {
              found = false;
              break;
            }
          }
          if (!found) {
            ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(is, len - 2 - bcomp->size_);
            continue;
          }
          ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(is, 2);
          jint units = [is read];
          jint dx = ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is);
          jint dy = ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is);
          if (units == 1) {
            self->dpiX_ = dx;
            self->dpiY_ = dy;
          }
          else if (units == 2) {
            self->dpiX_ = JreFpToInt((dx * 2.54f + 0.5f));
            self->dpiY_ = JreFpToInt((dy * 2.54f + 0.5f));
          }
          ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(is, len - 2 - bcomp->size_ - 7);
          continue;
        }
        if (marker == ComAowagieTextJpeg_M_APPE) {
          len = ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is) - 2;
          IOSByteArray *byteappe = [IOSByteArray newArrayWithLength:len];
          for (jint k = 0; k < len; ++k) {
            *IOSByteArray_GetRef(byteappe, k) = (jbyte) [is read];
          }
          if (byteappe->size_ >= 12) {
            NSString *appe = [NSString java_stringWithBytes:byteappe offset:0 length:5 charsetName:@"ISO-8859-1"];
            if ([appe isEqual:@"Adobe"]) {
              self->invert_ = true;
            }
          }
          continue;
        }
        if (marker == ComAowagieTextJpeg_M_APP2) {
          len = ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is) - 2;
          IOSByteArray *byteapp2 = [IOSByteArray newArrayWithLength:len];
          for (jint k = 0; k < len; ++k) {
            *IOSByteArray_GetRef(byteapp2, k) = (jbyte) [is read];
          }
          if (byteapp2->size_ >= 14) {
            NSString *app2 = [NSString java_stringWithBytes:byteapp2 offset:0 length:11 charsetName:@"ISO-8859-1"];
            if ([app2 isEqual:@"ICC_PROFILE"]) {
              jint order = IOSByteArray_Get(byteapp2, 12) & (jint) 0xff;
              jint count = IOSByteArray_Get(byteapp2, 13) & (jint) 0xff;
              if (self->icc_ == nil) {
                self->icc_ = [IOSObjectArray newArrayWithLength:count type:IOSClass_byteArray(1)];
              }
              (void) IOSObjectArray_Set(self->icc_, order - 1, byteapp2);
            }
          }
          continue;
        }
        firstPass = false;
        jint markertype = ComAowagieTextJpeg_markerWithInt_(marker);
        if (markertype == ComAowagieTextJpeg_VALID_MARKER) {
          ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(is, 2);
          if ([is read] != (jint) 0x08) {
            @throw new_ComAowagieTextBadElementException_initWithNSString_(JreStrcat("$$", errorID, @" must have 8 bits per component."));
          }
          self->scaledHeight_ = ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is);
          [self setTopWithFloat:self->scaledHeight_];
          self->scaledWidth_ = ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is);
          [self setRightWithFloat:self->scaledWidth_];
          self->colorspace_ = [is read];
          self->bpc_ = 8;
          break;
        }
        else if (markertype == ComAowagieTextJpeg_UNSUPPORTED_MARKER) {
          @throw new_ComAowagieTextBadElementException_initWithNSString_(JreStrcat("$$I", errorID, @": unsupported JPEG marker: ", marker));
        }
        else if (markertype != ComAowagieTextJpeg_NOPARAM_MARKER) {
          ComAowagieTextUtilities_skipWithJavaIoInputStream_withInt_(is, ComAowagieTextJpeg_getShortWithJavaIoInputStream_(is) - 2);
        }
      }
    }
  }
  @finally {
    if (is != nil) {
      [is close];
    }
  }
  self->plainWidth_ = [self getWidth];
  self->plainHeight_ = [self getHeight];
  if (self->icc_ != nil) {
    jint total = 0;
    for (jint k = 0; k < self->icc_->size_; ++k) {
      if (IOSObjectArray_Get(self->icc_, k) == nil) {
        self->icc_ = nil;
        return;
      }
      total += ((IOSByteArray *) nil_chk(IOSObjectArray_Get(self->icc_, k)))->size_ - 14;
    }
    IOSByteArray *ficc = [IOSByteArray newArrayWithLength:total];
    total = 0;
    {
      IOSObjectArray *a__ =
#line 319
      self->icc_;
      IOSByteArray * const *b__ = a__->buffer_;
      IOSByteArray * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        IOSByteArray *element = *b__++;
        
#line 320
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(element, 14, ficc, total, ((IOSByteArray *) nil_chk(element))->size_ - 14);
        total += element->size_ - 14;
      }
    }
    
#line 323
    @try {
      HarmonyJavaAwtColorICC_Profile *icc_prof = HarmonyJavaAwtColorICC_Profile_getInstanceWithByteArray_(ficc);
      [self tagICCWithHarmonyJavaAwtColorICC_Profile:icc_prof];
    }
    @catch (JavaLangIllegalArgumentException *e) {
    }
    
#line 330
    self->icc_ = nil;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextJpeg)

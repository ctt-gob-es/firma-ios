//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/cms/CMSAlgorithmProtection.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CMSAlgorithmProtection")
#ifdef RESTRICT_CMSAlgorithmProtection
#define INCLUDE_ALL_CMSAlgorithmProtection 0
#else
#define INCLUDE_ALL_CMSAlgorithmProtection 1
#endif
#undef RESTRICT_CMSAlgorithmProtection

#if !defined (OrgSpongycastleAsn1CmsCMSAlgorithmProtection_) && (INCLUDE_ALL_CMSAlgorithmProtection || defined(INCLUDE_OrgSpongycastleAsn1CmsCMSAlgorithmProtection))
#define OrgSpongycastleAsn1CmsCMSAlgorithmProtection_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

/*!
 @brief From RFC 6211
 @code

  CMSAlgorithmProtection ::= SEQUENCE {
     digestAlgorithm         DigestAlgorithmIdentifier,
     signatureAlgorithm  [1] SignatureAlgorithmIdentifier OPTIONAL,
     macAlgorithm        [2] MessageAuthenticationCodeAlgorithm
                                      OPTIONAL
  }
  (WITH COMPONENTS { signatureAlgorithm PRESENT,
                     macAlgorithm ABSENT } |
   WITH COMPONENTS { signatureAlgorithm ABSENT,
                     macAlgorithm PRESENT }) 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsCMSAlgorithmProtection : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)digestAlgorithm
                                                           withInt:(jint)type
                    withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algorithmIdentifier;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm;

+ (OrgSpongycastleAsn1CmsCMSAlgorithmProtection *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getMacAlgorithm;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsCMSAlgorithmProtection)

inline jint OrgSpongycastleAsn1CmsCMSAlgorithmProtection_get_SIGNATURE(void);
#define OrgSpongycastleAsn1CmsCMSAlgorithmProtection_SIGNATURE 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1CmsCMSAlgorithmProtection, SIGNATURE, jint)

inline jint OrgSpongycastleAsn1CmsCMSAlgorithmProtection_get_MAC(void);
#define OrgSpongycastleAsn1CmsCMSAlgorithmProtection_MAC 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleAsn1CmsCMSAlgorithmProtection, MAC, jint)

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsCMSAlgorithmProtection_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(OrgSpongycastleAsn1CmsCMSAlgorithmProtection *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, jint type, OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsCMSAlgorithmProtection *new_OrgSpongycastleAsn1CmsCMSAlgorithmProtection_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(OrgSpongycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, jint type, OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsCMSAlgorithmProtection *create_OrgSpongycastleAsn1CmsCMSAlgorithmProtection_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withInt_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(OrgSpongycastleAsn1X509AlgorithmIdentifier *digestAlgorithm, jint type, OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsCMSAlgorithmProtection *OrgSpongycastleAsn1CmsCMSAlgorithmProtection_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsCMSAlgorithmProtection)

#endif

#pragma pop_macro("INCLUDE_ALL_CMSAlgorithmProtection")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfStamperImp.java
//

#include "AcroFields.h"
#include "BadPasswordException.h"
#include "ByteBuffer.h"
#include "DocWriter.h"
#include "Document.h"
#include "DocumentException.h"
#include "ExceptionConverter.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "Image.h"
#include "IntHashtable.h"
#include "J2ObjC_source.h"
#include "OutputStreamCounter.h"
#include "PRIndirectReference.h"
#include "PRStream.h"
#include "PageResources.h"
#include "PdfAction.h"
#include "PdfAnnotation.h"
#include "PdfAppearance.h"
#include "PdfArray.h"
#include "PdfContentByte.h"
#include "PdfContents.h"
#include "PdfDate.h"
#include "PdfDictionary.h"
#include "PdfDocument.h"
#include "PdfEncryption.h"
#include "PdfException.h"
#include "PdfFormField.h"
#include "PdfIndirectObject.h"
#include "PdfIndirectReference.h"
#include "PdfLayer.h"
#include "PdfName.h"
#include "PdfNameTree.h"
#include "PdfNumber.h"
#include "PdfOCProperties.h"
#include "PdfObject.h"
#include "PdfPageLabels.h"
#include "PdfReader.h"
#include "PdfReaderInstance.h"
#include "PdfRectangle.h"
#include "PdfStamperImp.h"
#include "PdfStream.h"
#include "PdfString.h"
#include "PdfTemplate.h"
#include "PdfTransition.h"
#include "PdfVersionImp.h"
#include "PdfViewerPreferencesImp.h"
#include "PdfWriter.h"
#include "RandomAccessFileOrArray.h"
#include "Rectangle.h"
#include "StampContent.h"
#include "XfaForm.h"
#include "XmpReader.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Calendar.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/xml/sax/SAXException.h"

static void (*ComAowagieTextPdfPdfStamperImp_super$_setPdfVersionWithChar_)(id, SEL, jchar);

static void (*ComAowagieTextPdfPdfStamperImp_super$_open)(id, SEL);

#if !__has_feature(objc_arc)
#error "PdfStamperImp must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfStamperImp () {
 @public
  ComAowagieTextPdfPdfObject *pdfFileID_;
  JavaUtilHashMap *readers2intrefs_;
  JavaUtilHashMap *readers2file_;
  ComAowagieTextPdfRandomAccessFileOrArray *file_;
  ComAowagieTextPdfIntHashtable *myXref_;
  /*!
   @brief Integer(page number) -&lt; PageStamp
   */
  JavaUtilHashMap *pagesToContent_;
  jboolean closed_;
  /*!
   @brief Holds value of property rotateContents.
   */
  jboolean rotateContents_;
  ComAowagieTextPdfAcroFields *acroFields_;
  jboolean flat_;
  jboolean flatFreeText_;
  IOSIntArray *namePtr_;
  JavaUtilHashSet *partialFlattening_;
  jboolean useVp_;
  ComAowagieTextPdfInternalPdfViewerPreferencesImp *viewerPreferences_;
  JavaUtilHashMap *fieldTemplates_;
  jboolean fieldsAdded_;
  jint sigFlags_;
  jboolean append_;
  ComAowagieTextPdfIntHashtable *marked_;
  jint initialXrefSize_;
  ComAowagieTextPdfPdfAction *openAction_;
}

- (void)applyRotationWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)pageN
                        withComAowagieTextPdfByteBuffer:(ComAowagieTextPdfByteBuffer *)outArg;

- (void)alterContents;

- (void)alterResourcesWithComAowagieTextPdfPdfStamperImp_PageStamp:(ComAowagieTextPdfPdfStamperImp_PageStamp *)ps;

/*!
 @param reader reader
 @param openFile It's open file
 @throw IOExceptionon error
 */
- (void)registerReaderWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                         withBoolean:(jboolean)openFile;

+ (void)findAllObjectsWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                      withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj
                   withComAowagieTextPdfIntHashtable:(ComAowagieTextPdfIntHashtable *)hits;

- (ComAowagieTextPdfPdfStamperImp_PageStamp *)getPageStampWithInt:(jint)pageNum;

- (void)correctAcroFieldPagesWithInt:(jint)page;

+ (void)moveRectangleWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic2
                         withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)r
                                                withInt:(jint)pageImported
                           withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                                           withNSString:(NSString *)name;

- (void)flatFields;

- (void)eliminateAcroformObjects;

- (void)sweepKidsWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj;

- (void)flatFreeTextFields;

- (void)addDocumentFieldWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref;

- (void)addFieldResources;

- (void)expandFieldsWithComAowagieTextPdfPdfFormField:(ComAowagieTextPdfPdfFormField *)field
                                withJavaUtilArrayList:(JavaUtilArrayList *)allAnnots;

- (void)outlineTravelWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)outline;

- (void)deleteOutlines;

- (void)setJavaScript;

- (void)addFileAttachments;

- (void)setOutlines;

/*!
 @brief Reads the OCProperties dictionary from the catalog of the existing document
  and fills the documentOCG, documentOCGorder and OCGRadioGroup variables in PdfWriter.
 Note that the original OCProperties of the existing document can contain more information.
 @since 2.1.2
 */
- (void)readOCProperties;

/*!
 @brief Recursive method to reconstruct the documentOCGorder variable in the writer.
 @param parent a parent PdfLayer (can be null)
 @param arr an array possibly containing children for the parent PdfLayer
 @param ocgmap a HashMap with indirect reference Strings as keys and PdfLayer objects as values.
 @since 2.1.2
 */
- (void)addOrderWithComAowagieTextPdfPdfLayer:(ComAowagieTextPdfPdfLayer *)parent
                withComAowagieTextPdfPdfArray:(ComAowagieTextPdfPdfArray *)arr
                              withJavaUtilMap:(id<JavaUtilMap>)ocgmap;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, pdfFileID_, ComAowagieTextPdfPdfObject *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, readers2intrefs_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, readers2file_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, file_, ComAowagieTextPdfRandomAccessFileOrArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, myXref_, ComAowagieTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, pagesToContent_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, acroFields_, ComAowagieTextPdfAcroFields *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, namePtr_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, partialFlattening_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, viewerPreferences_, ComAowagieTextPdfInternalPdfViewerPreferencesImp *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, fieldTemplates_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, marked_, ComAowagieTextPdfIntHashtable *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp, openAction_, ComAowagieTextPdfPdfAction *)

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_applyRotationWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfByteBuffer_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfDictionary *pageN, ComAowagieTextPdfByteBuffer *outArg);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_alterContents(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_alterResourcesWithComAowagieTextPdfPdfStamperImp_PageStamp_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfStamperImp_PageStamp *ps);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_registerReaderWithComAowagieTextPdfPdfReader_withBoolean_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfReader *reader, jboolean openFile);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_findAllObjectsWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfObject_withComAowagieTextPdfIntHashtable_(ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfObject *obj, ComAowagieTextPdfIntHashtable *hits);

__attribute__((unused)) static ComAowagieTextPdfPdfStamperImp_PageStamp *ComAowagieTextPdfPdfStamperImp_getPageStampWithInt_(ComAowagieTextPdfPdfStamperImp *self, jint pageNum);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_correctAcroFieldPagesWithInt_(ComAowagieTextPdfPdfStamperImp *self, jint page);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_moveRectangleWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfReader_withInt_withComAowagieTextPdfPdfName_withNSString_(ComAowagieTextPdfPdfDictionary *dic2, ComAowagieTextPdfPdfReader *r, jint pageImported, ComAowagieTextPdfPdfName *key, NSString *name);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_flatFields(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_eliminateAcroformObjects(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_sweepKidsWithComAowagieTextPdfPdfObject_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfObject *obj);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_flatFreeTextFields(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_addDocumentFieldWithComAowagieTextPdfPdfIndirectReference_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfIndirectReference *ref);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_addFieldResources(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_expandFieldsWithComAowagieTextPdfPdfFormField_withJavaUtilArrayList_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfFormField *field, JavaUtilArrayList *allAnnots);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_outlineTravelWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPRIndirectReference *outline);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_deleteOutlines(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_setJavaScript(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_addFileAttachments(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_setOutlines(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_readOCProperties(ComAowagieTextPdfPdfStamperImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_addOrderWithComAowagieTextPdfPdfLayer_withComAowagieTextPdfPdfArray_withJavaUtilMap_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfLayer *parent, ComAowagieTextPdfPdfArray *arr, id<JavaUtilMap> ocgmap);

@interface ComAowagieTextPdfPdfStamperImp_PageStamp () {
 @public
  ComAowagieTextPdfStampContent *under_;
  ComAowagieTextPdfStampContent *over_;
}

- (instancetype)initWithComAowagieTextPdfPdfStamperImp:(ComAowagieTextPdfPdfStamperImp *)stamper
                        withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                    withComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)pageN;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp_PageStamp, under_, ComAowagieTextPdfStampContent *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfStamperImp_PageStamp, over_, ComAowagieTextPdfStampContent *)

inline jint ComAowagieTextPdfPdfStamperImp_PageStamp_get_replacePoint(void);
#define ComAowagieTextPdfPdfStamperImp_PageStamp_replacePoint 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfStamperImp_PageStamp, replacePoint, jint)

__attribute__((unused)) static void ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(ComAowagieTextPdfPdfStamperImp_PageStamp *self, ComAowagieTextPdfPdfStamperImp *stamper, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfDictionary *pageN);

__attribute__((unused)) static ComAowagieTextPdfPdfStamperImp_PageStamp *new_ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(ComAowagieTextPdfPdfStamperImp *stamper, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfDictionary *pageN) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfPdfStamperImp_PageStamp *create_ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(ComAowagieTextPdfPdfStamperImp *stamper, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfDictionary *pageN);

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfStamperImp.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfPdfStamperImp)


#line 70
@implementation ComAowagieTextPdfPdfStamperImp


#line 109
- (instancetype)initWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                            withJavaIoOutputStream:(JavaIoOutputStream *)os
                                          withChar:(jchar)pdfVersion
                                       withBoolean:(jboolean)append
                              withJavaUtilCalendar:(JavaUtilCalendar *)globalDate {
  ComAowagieTextPdfPdfStamperImp_initWithComAowagieTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_withJavaUtilCalendar_(self, reader, os, pdfVersion, append, globalDate);
  return self;
}


#line 161
- (void)closeWithJavaUtilMap:(id<JavaUtilMap>)moreInfo
        withJavaUtilCalendar:(JavaUtilCalendar *)globalDate {
  
#line 162
  if (self->closed_) {
    return;
  }
  if (self->useVp_) {
    [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) setViewerPreferencesWithComAowagieTextPdfInternalPdfViewerPreferencesImp:self->viewerPreferences_];
    [self markUsedWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getTrailer])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ROOT)]];
  }
  if (self->flat_) {
    ComAowagieTextPdfPdfStamperImp_flatFields(self);
  }
  if (self->flatFreeText_) {
    ComAowagieTextPdfPdfStamperImp_flatFreeTextFields(self);
  }
  ComAowagieTextPdfPdfStamperImp_addFieldResources(self);
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog];
  ComAowagieTextPdfPdfDictionary *pages = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PAGES)]), [ComAowagieTextPdfPdfDictionary class]);
  [((ComAowagieTextPdfPdfDictionary *) nil_chk(pages)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ITXT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(ComAowagieTextDocument_getRelease())];
  [self markUsedWithComAowagieTextPdfPdfObject:pages];
  ComAowagieTextPdfPdfDictionary *acroForm = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([catalog getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)], [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog]), [ComAowagieTextPdfPdfDictionary class]);
  if (self->acroFields_ != nil && [((ComAowagieTextPdfXfaForm *) nil_chk([self->acroFields_ getXfa])) isChanged]) {
    [self markUsedWithComAowagieTextPdfPdfObject:acroForm];
    if (!self->flat_) {
      [((ComAowagieTextPdfXfaForm *) nil_chk([((ComAowagieTextPdfAcroFields *) nil_chk(self->acroFields_)) getXfa])) setXfaWithComAowagieTextPdfPdfWriter:self];
    }
  }
  if (self->sigFlags_ != 0) {
    if (acroForm != nil) {
      [acroForm putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SIGFLAGS) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(self->sigFlags_)];
      [self markUsedWithComAowagieTextPdfPdfObject:acroForm];
      [self markUsedWithComAowagieTextPdfPdfObject:catalog];
    }
  }
  self->closed_ = true;
  [self addSharedObjectsToBody];
  ComAowagieTextPdfPdfStamperImp_setOutlines(self);
  ComAowagieTextPdfPdfStamperImp_setJavaScript(self);
  ComAowagieTextPdfPdfStamperImp_addFileAttachments(self);
  if (self->openAction_ != nil) {
    [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OPENACTION) withComAowagieTextPdfPdfObject:self->openAction_];
  }
  if (((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_))->pageLabels_ != nil) {
    [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PAGELABELS) withComAowagieTextPdfPdfObject:[self->pdf_->pageLabels_ getDictionaryWithComAowagieTextPdfPdfWriter:self]];
  }
  
#line 206
  if (![((JavaUtilHashSet *) nil_chk(self->documentOCG_)) isEmpty]) {
    [self fillOCPropertiesWithBoolean:false];
    ComAowagieTextPdfPdfDictionary *ocdict = [catalog getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCPROPERTIES)];
    if (ocdict == nil) {
      [((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog])) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCPROPERTIES) withComAowagieTextPdfPdfObject:self->OCProperties_];
    }
    else {
      [ocdict putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCGS) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCGS)]];
      ComAowagieTextPdfPdfDictionary *ddict = [ocdict getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)];
      if (ddict == nil) {
        ddict = new_ComAowagieTextPdfPdfDictionary_init();
        [ocdict putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D) withComAowagieTextPdfPdfObject:ddict];
      }
      [ddict putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ORDER) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ORDER)]];
      [ddict putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RBGROUPS) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RBGROUPS)]];
      [ddict putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OFF) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OFF)]];
      [ddict putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AS) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfOCProperties *) nil_chk(self->OCProperties_)) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AS)]];
    }
  }
  
#line 226
  jint skipInfo = -1;
  ComAowagieTextPdfPRIndirectReference *iInfo = (ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getTrailer])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, INFO)], [ComAowagieTextPdfPRIndirectReference class]);
  ComAowagieTextPdfPdfDictionary *oldInfo = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(iInfo), [ComAowagieTextPdfPdfDictionary class]);
  
#line 230
  if (iInfo != nil) {
    skipInfo = [iInfo getNumber];
  }
  
#line 237
  IOSByteArray *altMetadata = nil;
  ComAowagieTextPdfPdfObject *xmpo = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_([catalog getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, METADATA)]);
  if (xmpo != nil && [xmpo isStream]) {
    altMetadata = ComAowagieTextPdfPdfReader_getStreamBytesRawWithComAowagieTextPdfPRStream_((ComAowagieTextPdfPRStream *) cast_chk(xmpo, [ComAowagieTextPdfPRStream class]));
    (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_([catalog getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, METADATA)]);
  }
  if (self->xmpMetadata_ != nil) {
    altMetadata = self->xmpMetadata_;
  }
  
#line 247
  ComAowagieTextPdfPdfDate *date = new_ComAowagieTextPdfPdfDate_initWithJavaUtilCalendar_(globalDate);
  if (altMetadata != nil) {
    ComAowagieTextPdfPdfStream *xmp;
    @try {
      ComAowagieTextXmlXmpXmpReader *xmpr = new_ComAowagieTextXmlXmpXmpReader_initWithByteArray_(altMetadata);
      
#line 255
      if (![xmpr replaceWithNSString:@"rdf:Description" withNSString:@"http://ns.adobe.com/xap/1.0/" withNSString:@"ModifyDate" withNSString:[date getW3CDate]]) {
        [xmpr addWithNSString:@"rdf:Description" withNSString:@"http://ns.adobe.com/xap/1.0/" withNSString:@"xmp:ModifyDate" withNSString:[date getW3CDate]];
      }
      [xmpr replaceWithNSString:@"rdf:Description" withNSString:@"http://ns.adobe.com/xap/1.0/" withNSString:@"MetadataDate" withNSString:[date getW3CDate]];
      xmp = new_ComAowagieTextPdfPdfStream_initWithByteArray_([xmpr serializeDoc]);
    }
    @catch (OrgXmlSaxSAXException *e) {
      xmp = new_ComAowagieTextPdfPdfStream_initWithByteArray_(altMetadata);
    }
    @catch (JavaIoIOException *e) {
      xmp = new_ComAowagieTextPdfPdfStream_initWithByteArray_(altMetadata);
    }
    [((ComAowagieTextPdfPdfStream *) nil_chk(xmp)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, METADATA)];
    [xmp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, XML)];
    if (self->crypto_ != nil && ![self->crypto_ isMetadataEncrypted]) {
      ComAowagieTextPdfPdfArray *ar = new_ComAowagieTextPdfPdfArray_init();
      [ar addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, CRYPT)];
      [xmp putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FILTER) withComAowagieTextPdfPdfObject:ar];
    }
    if (self->append_ && xmpo != nil) {
      (void) [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) addWithComAowagieTextPdfPdfObject:xmp withComAowagieTextPdfPdfIndirectReference:[xmpo getIndRef]];
    }
    else {
      [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, METADATA) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) addWithComAowagieTextPdfPdfObject:xmp])) getIndirectReference]];
      [self markUsedWithComAowagieTextPdfPdfObject:catalog];
    }
  }
  @try {
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->file_)) reOpen];
    ComAowagieTextPdfPdfStamperImp_alterContents(self);
    jint rootN = [((ComAowagieTextPdfPRIndirectReference *) nil_chk(((ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_))->trailer_)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ROOT)], [ComAowagieTextPdfPRIndirectReference class])))) getNumber];
    if (self->append_) {
      IOSIntArray *keys = [((ComAowagieTextPdfIntHashtable *) nil_chk(self->marked_)) getKeys];
      {
        IOSIntArray *a__ =
#line 288
        keys;
        jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
        jint const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          jint j = *b__++;
          
#line 289
          ComAowagieTextPdfPdfObject *obj = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPdfObjectReleaseWithInt:j];
          if (obj != nil && skipInfo != j && j < self->initialXrefSize_) {
            (void) [self addToBodyWithComAowagieTextPdfPdfObject:obj withInt:j withBoolean:j != rootN];
          }
        }
      }
      
#line 294
      for (jint k = self->initialXrefSize_; k < [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getXrefSize]; ++k) {
        ComAowagieTextPdfPdfObject *obj = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPdfObjectWithInt:k];
        if (obj != nil) {
          (void) [self addToBodyWithComAowagieTextPdfPdfObject:obj withInt:[self getNewObjectNumberWithComAowagieTextPdfPdfReader:self->reader_ withInt:k withInt:0]];
        }
      }
    }
    else {
      for (jint k = 1; k < [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getXrefSize]; ++k) {
        ComAowagieTextPdfPdfObject *obj = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPdfObjectReleaseWithInt:k];
        if (obj != nil && skipInfo != k) {
          (void) [self addToBodyWithComAowagieTextPdfPdfObject:obj withInt:[self getNewObjectNumberWithComAowagieTextPdfPdfReader:self->reader_ withInt:k withInt:0] withBoolean:k != rootN];
        }
      }
    }
  }
  @finally {
    @try {
      [self->file_ close];
    }
    @catch (JavaLangException *e) {
    }
  }
  
#line 318
  ComAowagieTextPdfPdfIndirectReference *encryption = nil;
  ComAowagieTextPdfPdfObject *fileID = nil;
  if (self->crypto_ != nil) {
    if (self->append_) {
      encryption = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCryptoRef];
    }
    else {
      ComAowagieTextPdfPdfIndirectObject *encryptionObject = [self addToBodyWithComAowagieTextPdfPdfObject:[self->crypto_ getEncryptionDictionary] withBoolean:false];
      encryption = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk(encryptionObject)) getIndirectReference];
    }
    fileID = [((ComAowagieTextPdfPdfEncryption *) nil_chk(self->crypto_)) getFileID];
  }
  else {
    fileID = ComAowagieTextPdfPdfEncryption_createInfoIdWithByteArray_(ComAowagieTextPdfPdfEncryption_createDocumentId());
  }
  
#line 334
  self->pdfFileID_ = fileID;
  
#line 336
  ComAowagieTextPdfPRIndirectReference *iRoot = (ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_))->trailer_)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ROOT)], [ComAowagieTextPdfPRIndirectReference class]);
  ComAowagieTextPdfPdfIndirectReference *root = new_ComAowagieTextPdfPdfIndirectReference_initWithInt_withInt_(0, [self getNewObjectNumberWithComAowagieTextPdfPdfReader:self->reader_ withInt:[((ComAowagieTextPdfPRIndirectReference *) nil_chk(iRoot)) getNumber] withInt:0]);
  ComAowagieTextPdfPdfIndirectReference *info = nil;
  ComAowagieTextPdfPdfDictionary *newInfo = new_ComAowagieTextPdfPdfDictionary_init();
  
#line 341
  if (oldInfo != nil) {
    for (id __strong element in nil_chk([oldInfo getKeys])) {
      ComAowagieTextPdfPdfName *key = (ComAowagieTextPdfPdfName *) cast_chk(element, [ComAowagieTextPdfPdfName class]);
      ComAowagieTextPdfPdfObject *value = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_([oldInfo getWithComAowagieTextPdfPdfName:key]);
      [newInfo putWithComAowagieTextPdfPdfName:key withComAowagieTextPdfPdfObject:value];
    }
  }
  
#line 349
  if (moreInfo != nil) {
    for (id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([moreInfo entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
      id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([i next], JavaUtilMap_Entry_class_());
      NSString *key = (NSString *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [NSString class]);
      ComAowagieTextPdfPdfName *keyName = new_ComAowagieTextPdfPdfName_initWithNSString_(key);
      NSString *value = (NSString *) cast_chk([entry_ getValue], [NSString class]);
      
#line 356
      if (value == nil) {
        [newInfo removeWithComAowagieTextPdfPdfName:keyName];
      }
      else {
        
#line 361
        [newInfo putWithComAowagieTextPdfPdfName:keyName withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(value, ComAowagieTextPdfPdfObject_TEXT_UNICODE)];
      }
    }
  }
  
#line 366
  [newInfo putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MODDATE) withComAowagieTextPdfPdfObject:date];
  
#line 368
  if (self->append_) {
    if (iInfo == nil) {
      info = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:newInfo withBoolean:false])) getIndirectReference];
    }
    else {
      info = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:newInfo withInt:[iInfo getNumber] withBoolean:false])) getIndirectReference];
    }
  }
  else {
    info = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:newInfo withBoolean:false])) getIndirectReference];
  }
  
#line 380
  [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) writeCrossReferenceTableWithJavaIoOutputStream:self->os_ withComAowagieTextPdfPdfIndirectReference:root withComAowagieTextPdfPdfIndirectReference:info withComAowagieTextPdfPdfIndirectReference:encryption withComAowagieTextPdfPdfObject:fileID withInt:self->prevxref_];
  if (self->fullCompression_) {
    [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"startxref\n")];
    [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(NSString_java_valueOfInt_([((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) offset]))];
    [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) writeWithByteArray:ComAowagieTextDocWriter_getISOBytesWithNSString_(@"\n%%EOF\n")];
  }
  else {
    ComAowagieTextPdfPdfWriter_PdfTrailer *trailer = new_ComAowagieTextPdfPdfWriter_PdfTrailer_initWithInt_withInt_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfObject_withInt_([((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) size],
#line 388
    [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) offset],
#line 389
    root,
#line 390
    info,
#line 391
    encryption,
#line 392
    fileID, self->prevxref_);
    [trailer toPdfWithComAowagieTextPdfPdfWriter:self withJavaIoOutputStream:self->os_];
  }
  [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) flush];
  if ([self isCloseStream]) {
    [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) close];
  }
  [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) close];
}


#line 402
- (void)applyRotationWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)pageN
                        withComAowagieTextPdfByteBuffer:(ComAowagieTextPdfByteBuffer *)outArg {
  ComAowagieTextPdfPdfStamperImp_applyRotationWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfByteBuffer_(self, pageN, outArg);
}


#line 430
- (void)alterContents {
  ComAowagieTextPdfPdfStamperImp_alterContents(self);
}


#line 485
- (void)alterResourcesWithComAowagieTextPdfPdfStamperImp_PageStamp:(ComAowagieTextPdfPdfStamperImp_PageStamp *)ps {
  ComAowagieTextPdfPdfStamperImp_alterResourcesWithComAowagieTextPdfPdfStamperImp_PageStamp_(self, ps);
}

- (jint)getNewObjectNumberWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                                 withInt:(jint)number
                                                 withInt:(jint)generation {
  
#line 491
  ComAowagieTextPdfIntHashtable *ref = (ComAowagieTextPdfIntHashtable *) cast_chk([((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) getWithId:reader], [ComAowagieTextPdfIntHashtable class]);
  if (ref != nil) {
    jint n = [ref getWithInt:number];
    if (n == 0) {
      n = [self getIndirectReferenceNumber];
      [ref putWithInt:number withInt:n];
    }
    return n;
  }
  if (self->currentPdfReaderInstance_ == nil) {
    if (self->append_ && number < self->initialXrefSize_) {
      return number;
    }
    jint n = [((ComAowagieTextPdfIntHashtable *) nil_chk(self->myXref_)) getWithInt:number];
    if (n == 0) {
      n = [self getIndirectReferenceNumber];
      [self->myXref_ putWithInt:number withInt:n];
    }
    return n;
  }
  else {
    
#line 511
    return [self->currentPdfReaderInstance_ getNewObjectNumberWithInt:number withInt:generation];
  }
}


#line 515
- (ComAowagieTextPdfRandomAccessFileOrArray *)getReaderFileWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  
#line 517
  if ([((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) containsKeyWithId:reader]) {
    ComAowagieTextPdfRandomAccessFileOrArray *raf = (ComAowagieTextPdfRandomAccessFileOrArray *) cast_chk([((JavaUtilHashMap *) nil_chk(self->readers2file_)) getWithId:reader], [ComAowagieTextPdfRandomAccessFileOrArray class]);
    if (raf != nil) {
      return raf;
    }
    return [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getSafeFile];
  }
  if (self->currentPdfReaderInstance_ == nil) {
    return self->file_;
  }
  else {
    
#line 527
    return [self->currentPdfReaderInstance_ getReaderFile];
  }
}


#line 536
- (void)registerReaderWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                         withBoolean:(jboolean)openFile {
  ComAowagieTextPdfPdfStamperImp_registerReaderWithComAowagieTextPdfPdfReader_withBoolean_(self, reader, openFile);
}


#line 550
+ (void)findAllObjectsWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                      withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj
                   withComAowagieTextPdfIntHashtable:(ComAowagieTextPdfIntHashtable *)hits {
  ComAowagieTextPdfPdfStamperImp_findAllObjectsWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfObject_withComAowagieTextPdfIntHashtable_(reader, obj, hits);
}


#line 585
- (ComAowagieTextPdfPdfStamperImp_PageStamp *)getPageStampWithInt:(jint)pageNum {
  return ComAowagieTextPdfPdfStamperImp_getPageStampWithInt_(self, pageNum);
}


#line 597
- (ComAowagieTextPdfPdfContentByte *)getOverContentWithInt:(jint)pageNum {
  if (pageNum < 1 || pageNum > [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getNumberOfPages]) {
    return nil;
  }
  ComAowagieTextPdfPdfStamperImp_PageStamp *ps = ComAowagieTextPdfPdfStamperImp_getPageStampWithInt_(self, pageNum);
  if (((ComAowagieTextPdfPdfStamperImp_PageStamp *) nil_chk(ps))->over_ == nil) {
    ps->over_ = new_ComAowagieTextPdfStampContent_initPackagePrivateWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfStamperImp_PageStamp_(self, ps);
  }
  return ps->over_;
}

- (void)correctAcroFieldPagesWithInt:(jint)page {
  ComAowagieTextPdfPdfStamperImp_correctAcroFieldPagesWithInt_(self, page);
}


#line 627
+ (void)moveRectangleWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic2
                         withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)r
                                                withInt:(jint)pageImported
                           withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                                           withNSString:(NSString *)name {
  ComAowagieTextPdfPdfStamperImp_moveRectangleWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfReader_withInt_withComAowagieTextPdfPdfName_withNSString_(dic2, r, pageImported, key, name);
}


#line 636
- (void)insertPageWithInt:(jint)pageNumber
withComAowagieTextRectangle:(ComAowagieTextRectangle *)mediabox {
  
#line 637
  ComAowagieTextRectangle *media = new_ComAowagieTextRectangle_initWithComAowagieTextRectangle_(mediabox);
  jint rotation = JreIntMod([media getRotation], 360);
  ComAowagieTextPdfPdfDictionary *page = new_ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(JreLoadStatic(ComAowagieTextPdfPdfName, PAGE));
  ComAowagieTextPdfPdfDictionary *resources = new_ComAowagieTextPdfPdfDictionary_init();
  ComAowagieTextPdfPdfArray *procset = new_ComAowagieTextPdfPdfArray_init();
  [procset addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, PDF)];
  [procset addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, TEXT)];
  [procset addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, IMAGEB)];
  [procset addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, IMAGEC)];
  [procset addWithComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, IMAGEI)];
  [resources putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PROCSET) withComAowagieTextPdfPdfObject:procset];
  [page putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES) withComAowagieTextPdfPdfObject:resources];
  [page putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ROTATE) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(rotation)];
  [page putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MEDIABOX) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithComAowagieTextRectangle_withInt_(media, rotation)];
  ComAowagieTextPdfPRIndirectReference *pref = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) addPdfObjectWithComAowagieTextPdfPdfObject:page];
  ComAowagieTextPdfPdfDictionary *parent;
  ComAowagieTextPdfPRIndirectReference *parentRef;
  if (pageNumber > [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getNumberOfPages]) {
    ComAowagieTextPdfPdfDictionary *lastPage = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNReleaseWithInt:[self->reader_ getNumberOfPages]];
    parentRef = (ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(lastPage)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT)], [ComAowagieTextPdfPRIndirectReference class]);
    parentRef = new_ComAowagieTextPdfPRIndirectReference_initWithComAowagieTextPdfPdfReader_withInt_(self->reader_, [((ComAowagieTextPdfPRIndirectReference *) nil_chk(parentRef)) getNumber]);
    parent = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(parentRef), [ComAowagieTextPdfPdfDictionary class]);
    ComAowagieTextPdfPdfArray *kids = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(parent)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS)], parent), [ComAowagieTextPdfPdfArray class]);
    [((ComAowagieTextPdfPdfArray *) nil_chk(kids)) addWithComAowagieTextPdfPdfObject:pref];
    [self markUsedWithComAowagieTextPdfPdfObject:kids];
    [((ComAowagieTextPdfPdfReader_PageRefs *) nil_chk(((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_))->pageRefs_)) insertPageWithInt:pageNumber withComAowagieTextPdfPRIndirectReference:pref];
  }
  else {
    if (pageNumber < 1) {
      pageNumber = 1;
    }
    ComAowagieTextPdfPdfDictionary *firstPage = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:pageNumber];
    ComAowagieTextPdfPRIndirectReference *firstPageRef = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageOrigRefWithInt:pageNumber];
    [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) releasePageWithInt:pageNumber];
    parentRef = (ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(firstPage)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT)], [ComAowagieTextPdfPRIndirectReference class]);
    parentRef = new_ComAowagieTextPdfPRIndirectReference_initWithComAowagieTextPdfPdfReader_withInt_(self->reader_, [((ComAowagieTextPdfPRIndirectReference *) nil_chk(parentRef)) getNumber]);
    parent = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(parentRef), [ComAowagieTextPdfPdfDictionary class]);
    ComAowagieTextPdfPdfArray *kids = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(parent)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS)], parent), [ComAowagieTextPdfPdfArray class]);
    jint len = [((ComAowagieTextPdfPdfArray *) nil_chk(kids)) size];
    jint num = [((ComAowagieTextPdfPRIndirectReference *) nil_chk(firstPageRef)) getNumber];
    for (jint k = 0; k < len; ++k) {
      ComAowagieTextPdfPRIndirectReference *cur = (ComAowagieTextPdfPRIndirectReference *) cast_chk([kids getPdfObjectWithInt:k], [ComAowagieTextPdfPRIndirectReference class]);
      if (num == [((ComAowagieTextPdfPRIndirectReference *) nil_chk(cur)) getNumber]) {
        [kids addWithInt:k withComAowagieTextPdfPdfObject:pref];
        break;
      }
    }
    if (len == [kids size]) {
      @throw new_JavaLangRuntimeException_initWithNSString_(@"Internal inconsistence.");
    }
    [self markUsedWithComAowagieTextPdfPdfObject:kids];
    [((ComAowagieTextPdfPdfReader_PageRefs *) nil_chk(((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_))->pageRefs_)) insertPageWithInt:pageNumber withComAowagieTextPdfPRIndirectReference:pref];
    ComAowagieTextPdfPdfStamperImp_correctAcroFieldPagesWithInt_(self, pageNumber);
  }
  [page putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT) withComAowagieTextPdfPdfObject:parentRef];
  while (parent != nil) {
    [self markUsedWithComAowagieTextPdfPdfObject:parent];
    ComAowagieTextPdfPdfNumber *count = (ComAowagieTextPdfPdfNumber *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([parent getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COUNT)]), [ComAowagieTextPdfPdfNumber class]);
    [parent putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, COUNT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((ComAowagieTextPdfPdfNumber *) nil_chk(count)) intValue] + 1)];
    parent = [parent getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT)];
  }
}


#line 704
- (jboolean)isRotateContents {
  return self->rotateContents_;
}


#line 712
- (void)setRotateContentsWithBoolean:(jboolean)rotateContents {
  self->rotateContents_ = rotateContents;
}

- (jboolean)isContentWritten {
  return [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) size] > 1;
}

- (ComAowagieTextPdfAcroFields *)getAcroFields {
  if (self->acroFields_ == nil) {
    self->acroFields_ = new_ComAowagieTextPdfAcroFields_initWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfWriter_(self->reader_, self);
  }
  return self->acroFields_;
}

- (void)setFormFlatteningWithBoolean:(jboolean)flat {
  self->flat_ = flat;
}

- (void)setFreeTextFlatteningWithBoolean:(jboolean)flat {
  self->flatFreeText_ = flat;
}


#line 737
- (void)flatFields {
  ComAowagieTextPdfPdfStamperImp_flatFields(self);
}


#line 886
- (void)eliminateAcroformObjects {
  ComAowagieTextPdfPdfStamperImp_eliminateAcroformObjects(self);
}


#line 906
- (void)sweepKidsWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj {
  ComAowagieTextPdfPdfStamperImp_sweepKidsWithComAowagieTextPdfPdfObject_(self, obj);
}


#line 921
- (void)flatFreeTextFields {
  ComAowagieTextPdfPdfStamperImp_flatFreeTextFields(self);
}


#line 1020
- (ComAowagieTextPdfPdfIndirectReference *)getPageReferenceWithInt:(jint)page {
  
#line 1022
  ComAowagieTextPdfPdfIndirectReference *ref = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageOrigRefWithInt:page];
  if (ref == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Invalid page number ", page));
  }
  return ref;
}


#line 1032
- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot {
  
#line 1034
  @throw new_JavaLangRuntimeException_initWithNSString_(@"Unsupported in this context. Use PdfStamper.addAnnotation()");
}


#line 1037
- (void)addDocumentFieldWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ref {
  ComAowagieTextPdfPdfStamperImp_addDocumentFieldWithComAowagieTextPdfPdfIndirectReference_(self, ref);
}


#line 1059
- (void)addFieldResources {
  ComAowagieTextPdfPdfStamperImp_addFieldResources(self);
}


#line 1108
- (void)expandFieldsWithComAowagieTextPdfPdfFormField:(ComAowagieTextPdfPdfFormField *)field
                                withJavaUtilArrayList:(JavaUtilArrayList *)allAnnots {
  ComAowagieTextPdfPdfStamperImp_expandFieldsWithComAowagieTextPdfPdfFormField_withJavaUtilArrayList_(self, field, allAnnots);
}


#line 1118
- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot
                     withComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)pageN {
  
#line 1119
  @try {
    JavaUtilArrayList *allAnnots = new_JavaUtilArrayList_init();
    if ([((ComAowagieTextPdfPdfAnnotation *) nil_chk(annot)) isForm]) {
      self->fieldsAdded_ = true;
      (void) [self getAcroFields];
      ComAowagieTextPdfPdfFormField *field = (ComAowagieTextPdfPdfFormField *) cast_chk(annot, [ComAowagieTextPdfPdfFormField class]);
      if ([field getParent] != nil) {
        return;
      }
      ComAowagieTextPdfPdfStamperImp_expandFieldsWithComAowagieTextPdfPdfFormField_withJavaUtilArrayList_(self, field, allAnnots);
    }
    else {
      
#line 1130
      [allAnnots addWithId:annot];
    }
    for (jint k = 0; k < [allAnnots size]; ++k) {
      annot = (ComAowagieTextPdfPdfAnnotation *) cast_chk([allAnnots getWithInt:k], [ComAowagieTextPdfPdfAnnotation class]);
      if ([((ComAowagieTextPdfPdfAnnotation *) nil_chk(annot)) getPlaceInPage] > 0) {
        pageN = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:[annot getPlaceInPage]];
      }
      if ([annot isForm]) {
        if (![annot isUsed]) {
          JavaUtilHashMap *templates = [annot getTemplates];
          if (templates != nil) {
            [((JavaUtilHashMap *) nil_chk(self->fieldTemplates_)) putAllWithJavaUtilMap:templates];
          }
        }
        ComAowagieTextPdfPdfFormField *field = (ComAowagieTextPdfPdfFormField *) cast_chk(annot, [ComAowagieTextPdfPdfFormField class]);
        if ([field getParent] == nil) {
          ComAowagieTextPdfPdfStamperImp_addDocumentFieldWithComAowagieTextPdfPdfIndirectReference_(self, [field getIndirectReference]);
        }
      }
      if ([annot isAnnotation]) {
        ComAowagieTextPdfPdfObject *pdfobj = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(pageN)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)], pageN);
        ComAowagieTextPdfPdfArray *annots = nil;
        if (pdfobj == nil || ![pdfobj isArray]) {
          annots = new_ComAowagieTextPdfPdfArray_init();
          [pageN putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS) withComAowagieTextPdfPdfObject:annots];
          [self markUsedWithComAowagieTextPdfPdfObject:pageN];
        }
        else {
          
#line 1157
          annots = (ComAowagieTextPdfPdfArray *) cast_chk(pdfobj, [ComAowagieTextPdfPdfArray class]);
        }
        [annots addWithComAowagieTextPdfPdfObject:[annot getIndirectReference]];
        [self markUsedWithComAowagieTextPdfPdfObject:annots];
        if (![annot isUsed]) {
          ComAowagieTextPdfPdfRectangle *rect = (ComAowagieTextPdfPdfRectangle *) cast_chk([annot getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT)], [ComAowagieTextPdfPdfRectangle class]);
          if (rect != nil && ([rect left] != 0 || [rect right] != 0 || [rect top] != 0 || [rect bottom] != 0)) {
            jint rotation = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageRotationWithComAowagieTextPdfPdfDictionary:pageN];
            ComAowagieTextRectangle *pageSize = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageSizeWithRotationWithComAowagieTextPdfPdfDictionary:pageN];
            switch (rotation) {
              case 90:
              [annot putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithFloat_withFloat_withFloat_withFloat_(
#line 1169
              [((ComAowagieTextRectangle *) nil_chk(pageSize)) getTop] - [rect bottom],
#line 1170
              [rect left],
#line 1171
              [pageSize getTop] - [rect top],
#line 1172
              [rect right])];
              break;
              case 180:
              [annot putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithFloat_withFloat_withFloat_withFloat_(
#line 1176
              [((ComAowagieTextRectangle *) nil_chk(pageSize)) getRight] - [rect left],
#line 1177
              [pageSize getTop] - [rect bottom],
#line 1178
              [pageSize getRight] - [rect right],
#line 1179
              [pageSize getTop] - [rect top])];
              break;
              case 270:
              [annot putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithFloat_withFloat_withFloat_withFloat_(
#line 1183
              [rect bottom],
#line 1184
              [((ComAowagieTextRectangle *) nil_chk(pageSize)) getRight] - [rect left],
#line 1185
              [rect top],
#line 1186
              [pageSize getRight] - [rect right])];
              break;
            }
          }
        }
      }
      if (![annot isUsed]) {
        [annot setUsed];
        (void) [self addToBodyWithComAowagieTextPdfPdfObject:annot withComAowagieTextPdfPdfIndirectReference:[annot getIndirectReference]];
      }
    }
  }
  @catch (JavaIoIOException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 1203
- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot
                                                withInt:(jint)page {
  [((ComAowagieTextPdfPdfAnnotation *) nil_chk(annot)) setPageWithInt:page];
  [self addAnnotationWithComAowagieTextPdfPdfAnnotation:annot withComAowagieTextPdfPdfDictionary:[((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:page]];
}

- (void)outlineTravelWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)outline {
  ComAowagieTextPdfPdfStamperImp_outlineTravelWithComAowagieTextPdfPRIndirectReference_(self, outline);
}


#line 1223
- (void)deleteOutlines {
  ComAowagieTextPdfPdfStamperImp_deleteOutlines(self);
}


#line 1235
- (void)setJavaScript {
  ComAowagieTextPdfPdfStamperImp_setJavaScript(self);
}


#line 1252
- (void)addFileAttachments {
  ComAowagieTextPdfPdfStamperImp_addFileAttachments(self);
}


#line 1283
- (void)setOutlines {
  ComAowagieTextPdfPdfStamperImp_setOutlines(self);
}


#line 1302
- (void)setViewerPreferencesWithInt:(jint)preferences {
  
#line 1304
  self->useVp_ = true;
  [((ComAowagieTextPdfInternalPdfViewerPreferencesImp *) nil_chk(self->viewerPreferences_)) setViewerPreferencesWithInt:preferences];
}


#line 1313
- (void)addViewerPreferenceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                         withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)value {
  self->useVp_ = true;
  [((ComAowagieTextPdfInternalPdfViewerPreferencesImp *) nil_chk(self->viewerPreferences_)) addViewerPreferenceWithComAowagieTextPdfPdfName:key withComAowagieTextPdfPdfObject:value];
}


#line 1323
- (void)setSigFlagsWithInt:(jint)f {
  
#line 1325
  self->sigFlags_ |= f;
}


#line 1333
- (void)setPageActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                   withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Use setPageAction(PdfName actionType, PdfAction action, int page)");
}


#line 1344
- (void)setDurationWithInt:(jint)seconds {
  
#line 1346
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Use setPageAction(PdfName actionType, PdfAction action, int page)");
}


#line 1353
- (void)setTransitionWithComAowagieTextPdfPdfTransition:(ComAowagieTextPdfPdfTransition *)transition {
  
#line 1355
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Use setPageAction(PdfName actionType, PdfAction action, int page)");
}


#line 1362
- (void)markUsedWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj {
  if (self->append_ && obj != nil) {
    ComAowagieTextPdfPRIndirectReference *ref = nil;
    if ([obj type] == ComAowagieTextPdfPdfObject_INDIRECT) {
      ref = (ComAowagieTextPdfPRIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPRIndirectReference class]);
    }
    else {
      
#line 1368
      ref = [obj getIndRef];
    }
    if (ref != nil) {
      [((ComAowagieTextPdfIntHashtable *) nil_chk(self->marked_)) putWithInt:[ref getNumber] withInt:1];
    }
  }
}


#line 1382
- (jboolean)isAppend {
  return self->append_;
}


#line 1396
- (void)setAdditionalActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                         withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action {
  if (!([((ComAowagieTextPdfPdfName *) nil_chk(actionType)) isEqual:JreLoadStatic(ComAowagieTextPdfPdfWriter, DOCUMENT_CLOSE)] ||
#line 1399
  [actionType isEqual:JreLoadStatic(ComAowagieTextPdfPdfWriter, WILL_SAVE)] ||
#line 1400
  [actionType isEqual:JreLoadStatic(ComAowagieTextPdfPdfWriter, DID_SAVE)] ||
#line 1401
  [actionType isEqual:JreLoadStatic(ComAowagieTextPdfPdfWriter, WILL_PRINT)] ||
#line 1402
  [actionType isEqual:JreLoadStatic(ComAowagieTextPdfPdfWriter, DID_PRINT)])) {
    @throw new_ComAowagieTextPdfPdfException_initPackagePrivateWithNSString_(JreStrcat("$$", @"Invalid additional action type: ", [actionType description]));
  }
  ComAowagieTextPdfPdfDictionary *aa = [((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog])) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AA)];
  if (aa == nil) {
    if (action == nil) {
      return;
    }
    aa = new_ComAowagieTextPdfPdfDictionary_init();
    [((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog])) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AA) withComAowagieTextPdfPdfObject:aa];
  }
  [self markUsedWithComAowagieTextPdfPdfObject:aa];
  if (action == nil) {
    [aa removeWithComAowagieTextPdfPdfName:actionType];
  }
  else {
    
#line 1417
    [aa putWithComAowagieTextPdfPdfName:actionType withComAowagieTextPdfPdfObject:action];
  }
}


#line 1424
- (void)setOpenActionWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action {
  
#line 1426
  self->openAction_ = action;
}


#line 1432
- (void)setOpenActionWithNSString:(NSString *)name {
  
#line 1434
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Open actions by name are not supported.");
}


#line 1440
- (void)setThumbnailWithComAowagieTextImage:(ComAowagieTextImage *)image {
  
#line 1442
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Use PdfStamper.setThumbnail().");
}


#line 1447
- (ComAowagieTextPdfPdfContentByte *)getDirectContentUnder {
  
#line 1449
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Use PdfStamper.getUnderContent() or PdfStamper.getOverContent()");
}


#line 1452
- (ComAowagieTextPdfPdfContentByte *)getDirectContent {
  
#line 1454
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Use PdfStamper.getUnderContent() or PdfStamper.getOverContent()");
}


#line 1463
- (void)readOCProperties {
  ComAowagieTextPdfPdfStamperImp_readOCProperties(self);
}


#line 1511
- (void)addOrderWithComAowagieTextPdfPdfLayer:(ComAowagieTextPdfPdfLayer *)parent
                withComAowagieTextPdfPdfArray:(ComAowagieTextPdfPdfArray *)arr
                              withJavaUtilMap:(id<JavaUtilMap>)ocgmap {
  ComAowagieTextPdfPdfStamperImp_addOrderWithComAowagieTextPdfPdfLayer_withComAowagieTextPdfPdfArray_withJavaUtilMap_(self, parent, arr, ocgmap);
}


#line 1560
- (id<JavaUtilMap>)getPdfLayers {
  if ([((JavaUtilHashSet *) nil_chk(self->documentOCG_)) isEmpty]) {
    ComAowagieTextPdfPdfStamperImp_readOCProperties(self);
  }
  JavaUtilHashMap *map = new_JavaUtilLinkedHashMap_init();
  ComAowagieTextPdfPdfLayer *layer;
  NSString *key;
  for (id<JavaUtilIterator> i = [((JavaUtilHashSet *) nil_chk(self->documentOCG_)) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    layer = (ComAowagieTextPdfPdfLayer *) cast_chk([i next], [ComAowagieTextPdfPdfLayer class]);
    if ([((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) getTitle] == nil) {
      key = [((ComAowagieTextPdfPdfString *) nil_chk([layer getAsStringWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAME)])) description];
    }
    else {
      key = [layer getTitle];
    }
    if ([map containsKeyWithId:key]) {
      jint seq = 2;
      NSString *tmp = JreStrcat("$CIC", key, '(', seq, ')');
      while ([map containsKeyWithId:tmp]) {
        seq++;
        tmp = JreStrcat("$CIC", key, '(', seq, ')');
      }
      key = tmp;
    }
    (void) [map putWithId:key withId:layer];
  }
  return map;
}


#line 1605
- (ComAowagieTextPdfPdfObject *)getFileID {
  return self->pdfFileID_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfRandomAccessFileOrArray;", 0x0, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, 4, -1, -1, -1 },
    { NULL, "V", 0xa, 15, 16, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfStamperImp_PageStamp;", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfContentByte;", 0x0, 19, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 20, 18, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 23, 24, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 25, 26, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfAcroFields;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 27, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 28, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 29, 30, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x1, 31, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 34, 35, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 36, 37, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 32, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 32, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 40, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 42, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 43, 44, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 45, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 47, 48, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 50, 51, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 52, 30, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 53, 47, 48, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 55, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 54, 56, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 58, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfContentByte;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfContentByte;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 59, 60, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfPdfReader:withJavaIoOutputStream:withChar:withBoolean:withJavaUtilCalendar:);
  methods[1].selector = @selector(closeWithJavaUtilMap:withJavaUtilCalendar:);
  methods[2].selector = @selector(applyRotationWithComAowagieTextPdfPdfDictionary:withComAowagieTextPdfByteBuffer:);
  methods[3].selector = @selector(alterContents);
  methods[4].selector = @selector(alterResourcesWithComAowagieTextPdfPdfStamperImp_PageStamp:);
  methods[5].selector = @selector(getNewObjectNumberWithComAowagieTextPdfPdfReader:withInt:withInt:);
  methods[6].selector = @selector(getReaderFileWithComAowagieTextPdfPdfReader:);
  methods[7].selector = @selector(registerReaderWithComAowagieTextPdfPdfReader:withBoolean:);
  methods[8].selector = @selector(findAllObjectsWithComAowagieTextPdfPdfReader:withComAowagieTextPdfPdfObject:withComAowagieTextPdfIntHashtable:);
  methods[9].selector = @selector(getPageStampWithInt:);
  methods[10].selector = @selector(getOverContentWithInt:);
  methods[11].selector = @selector(correctAcroFieldPagesWithInt:);
  methods[12].selector = @selector(moveRectangleWithComAowagieTextPdfPdfDictionary:withComAowagieTextPdfPdfReader:withInt:withComAowagieTextPdfPdfName:withNSString:);
  methods[13].selector = @selector(insertPageWithInt:withComAowagieTextRectangle:);
  methods[14].selector = @selector(isRotateContents);
  methods[15].selector = @selector(setRotateContentsWithBoolean:);
  methods[16].selector = @selector(isContentWritten);
  methods[17].selector = @selector(getAcroFields);
  methods[18].selector = @selector(setFormFlatteningWithBoolean:);
  methods[19].selector = @selector(setFreeTextFlatteningWithBoolean:);
  methods[20].selector = @selector(flatFields);
  methods[21].selector = @selector(eliminateAcroformObjects);
  methods[22].selector = @selector(sweepKidsWithComAowagieTextPdfPdfObject:);
  methods[23].selector = @selector(flatFreeTextFields);
  methods[24].selector = @selector(getPageReferenceWithInt:);
  methods[25].selector = @selector(addAnnotationWithComAowagieTextPdfPdfAnnotation:);
  methods[26].selector = @selector(addDocumentFieldWithComAowagieTextPdfPdfIndirectReference:);
  methods[27].selector = @selector(addFieldResources);
  methods[28].selector = @selector(expandFieldsWithComAowagieTextPdfPdfFormField:withJavaUtilArrayList:);
  methods[29].selector = @selector(addAnnotationWithComAowagieTextPdfPdfAnnotation:withComAowagieTextPdfPdfDictionary:);
  methods[30].selector = @selector(addAnnotationWithComAowagieTextPdfPdfAnnotation:withInt:);
  methods[31].selector = @selector(outlineTravelWithComAowagieTextPdfPRIndirectReference:);
  methods[32].selector = @selector(deleteOutlines);
  methods[33].selector = @selector(setJavaScript);
  methods[34].selector = @selector(addFileAttachments);
  methods[35].selector = @selector(setOutlines);
  methods[36].selector = @selector(setViewerPreferencesWithInt:);
  methods[37].selector = @selector(addViewerPreferenceWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfObject:);
  methods[38].selector = @selector(setSigFlagsWithInt:);
  methods[39].selector = @selector(setPageActionWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfAction:);
  methods[40].selector = @selector(setDurationWithInt:);
  methods[41].selector = @selector(setTransitionWithComAowagieTextPdfPdfTransition:);
  methods[42].selector = @selector(markUsedWithComAowagieTextPdfPdfObject:);
  methods[43].selector = @selector(isAppend);
  methods[44].selector = @selector(setAdditionalActionWithComAowagieTextPdfPdfName:withComAowagieTextPdfPdfAction:);
  methods[45].selector = @selector(setOpenActionWithComAowagieTextPdfPdfAction:);
  methods[46].selector = @selector(setOpenActionWithNSString:);
  methods[47].selector = @selector(setThumbnailWithComAowagieTextImage:);
  methods[48].selector = @selector(getDirectContentUnder);
  methods[49].selector = @selector(getDirectContent);
  methods[50].selector = @selector(readOCProperties);
  methods[51].selector = @selector(addOrderWithComAowagieTextPdfPdfLayer:withComAowagieTextPdfPdfArray:withJavaUtilMap:);
  methods[52].selector = @selector(getPdfLayers);
  methods[53].selector = @selector(getFileID);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pdfFileID_", "LComAowagieTextPdfPdfObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "readers2intrefs_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "readers2file_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "file_", "LComAowagieTextPdfRandomAccessFileOrArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reader_", "LComAowagieTextPdfPdfReader;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "myXref_", "LComAowagieTextPdfIntHashtable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pagesToContent_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "closed_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rotateContents_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "acroFields_", "LComAowagieTextPdfAcroFields;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "flat_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "flatFreeText_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "namePtr_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "partialFlattening_", "LJavaUtilHashSet;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "useVp_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "viewerPreferences_", "LComAowagieTextPdfInternalPdfViewerPreferencesImp;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldTemplates_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldsAdded_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sigFlags_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "append_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "marked_", "LComAowagieTextPdfIntHashtable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "initialXrefSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "openAction_", "LComAowagieTextPdfPdfAction;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfReader;LJavaIoOutputStream;CZLJavaUtilCalendar;", "LComAowagieTextDocumentException;LJavaIoIOException;", "close", "LJavaUtilMap;LJavaUtilCalendar;", "LJavaIoIOException;", "applyRotation", "LComAowagieTextPdfPdfDictionary;LComAowagieTextPdfByteBuffer;", "alterResources", "LComAowagieTextPdfPdfStamperImp_PageStamp;", "getNewObjectNumber", "LComAowagieTextPdfPdfReader;II", "getReaderFile", "LComAowagieTextPdfPdfReader;", "registerReader", "LComAowagieTextPdfPdfReader;Z", "findAllObjects", "LComAowagieTextPdfPdfReader;LComAowagieTextPdfPdfObject;LComAowagieTextPdfIntHashtable;", "getPageStamp", "I", "getOverContent", "correctAcroFieldPages", "moveRectangle", "LComAowagieTextPdfPdfDictionary;LComAowagieTextPdfPdfReader;ILComAowagieTextPdfPdfName;LNSString;", "insertPage", "ILComAowagieTextRectangle;", "setRotateContents", "Z", "setFormFlattening", "setFreeTextFlattening", "sweepKids", "LComAowagieTextPdfPdfObject;", "getPageReference", "addAnnotation", "LComAowagieTextPdfPdfAnnotation;", "addDocumentField", "LComAowagieTextPdfPdfIndirectReference;", "expandFields", "LComAowagieTextPdfPdfFormField;LJavaUtilArrayList;", "LComAowagieTextPdfPdfAnnotation;LComAowagieTextPdfPdfDictionary;", "LComAowagieTextPdfPdfAnnotation;I", "outlineTravel", "LComAowagieTextPdfPRIndirectReference;", "setViewerPreferences", "addViewerPreference", "LComAowagieTextPdfPdfName;LComAowagieTextPdfPdfObject;", "setSigFlags", "setPageAction", "LComAowagieTextPdfPdfName;LComAowagieTextPdfPdfAction;", "LComAowagieTextPdfPdfException;", "setDuration", "setTransition", "LComAowagieTextPdfPdfTransition;", "markUsed", "setAdditionalAction", "setOpenAction", "LComAowagieTextPdfPdfAction;", "LNSString;", "setThumbnail", "LComAowagieTextImage;", "addOrder", "LComAowagieTextPdfPdfLayer;LComAowagieTextPdfPdfArray;LJavaUtilMap;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfStamperImp = { "PdfStamperImp", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1, 54, 23, -1, 8, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfStamperImp;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfPdfStamperImp class]) {
    ComAowagieTextPdfPdfStamperImp_super$_open = (void (*)(id, SEL))[ComAowagieTextPdfPdfWriter instanceMethodForSelector:@selector(open)];
    ComAowagieTextPdfPdfStamperImp_super$_setPdfVersionWithChar_ = (void (*)(id, SEL, jchar))[ComAowagieTextPdfPdfWriter instanceMethodForSelector:@selector(setPdfVersionWithChar:)];
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfPdfStamperImp)
  }
}

@end


#line 109
void ComAowagieTextPdfPdfStamperImp_initWithComAowagieTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_withJavaUtilCalendar_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfReader *reader, JavaIoOutputStream *os, jchar pdfVersion, jboolean append, JavaUtilCalendar *globalDate) {
  ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(self, new_ComAowagieTextPdfPdfDocument_initPackagePrivateWithJavaUtilCalendar_(globalDate), os);
  self->pdfFileID_ =
#line 72
  nil;
  self->readers2intrefs_ = new_JavaUtilLinkedHashMap_init();
  self->readers2file_ = new_JavaUtilLinkedHashMap_init();
  self->myXref_ = new_ComAowagieTextPdfIntHashtable_initPackagePrivate();
  self->pagesToContent_ = new_JavaUtilLinkedHashMap_init();
  self->closed_ =
#line 81
  false;
  self->rotateContents_ =
#line 83
  true;
  self->flat_ =
#line 85
  false;
  self->flatFreeText_ = false;
  self->namePtr_ = [IOSIntArray newArrayWithInts:(jint[]){ 0 } count:1];
  self->partialFlattening_ = new_JavaUtilHashSet_init();
  self->useVp_ = false;
  self->viewerPreferences_ = new_ComAowagieTextPdfInternalPdfViewerPreferencesImp_init();
  self->fieldTemplates_ = new_JavaUtilLinkedHashMap_init();
  self->fieldsAdded_ = false;
  self->sigFlags_ = 0;
  
#line 111
  if (![((ComAowagieTextPdfPdfReader *) nil_chk(reader)) isOpenedWithFullPermissions]) {
    @throw new_ComAowagieTextExceptionsBadPasswordException_initWithNSString_(@"PdfReader not opened with owner password");
  }
  if ([reader isTampered]) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(@"The original document was reused. Read it again from file.");
  }
  [reader setTamperedWithBoolean:true];
  self->reader_ = reader;
  self->file_ = [reader getSafeFile];
  self->append_ = append;
  if (append) {
    if ([reader isRebuilt]) {
      @throw new_ComAowagieTextDocumentException_initWithNSString_(@"Append mode requires a document without errors even if recovery was possible.");
    }
    if ([reader isEncrypted]) {
      self->crypto_ = new_ComAowagieTextPdfPdfEncryption_initPackagePrivateWithComAowagieTextPdfPdfEncryption_([reader getDecrypt]);
    }
    [((ComAowagieTextPdfInternalPdfVersionImp *) nil_chk(self->pdf_version_)) setAppendmodeWithBoolean:true];
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->file_)) reOpen];
    IOSByteArray *buf = [IOSByteArray newArrayWithLength:8192];
    jint n;
    while ((n = [self->file_ readWithByteArray:buf]) > 0) {
      [((ComAowagieTextPdfOutputStreamCounter *) nil_chk(self->os_)) writeWithByteArray:buf withInt:0 withInt:n];
    }
    [self->file_ close];
    self->prevxref_ = [reader getLastXref];
    [reader setAppendableWithBoolean:true];
  }
  else {
    if (pdfVersion == 0) {
      ComAowagieTextPdfPdfStamperImp_super$_setPdfVersionWithChar_(self, @selector(setPdfVersionWithChar:), [reader getPdfVersion]);
    }
    else {
      
#line 143
      ComAowagieTextPdfPdfStamperImp_super$_setPdfVersionWithChar_(self, @selector(setPdfVersionWithChar:), pdfVersion);
    }
  }
  ComAowagieTextPdfPdfStamperImp_super$_open(self, @selector(open));
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addWriterWithComAowagieTextPdfPdfWriter:self];
  if (append) {
    [((ComAowagieTextPdfPdfWriter_PdfBody *) nil_chk(self->body_)) setRefnumWithInt:[reader getXrefSize]];
    self->marked_ = new_ComAowagieTextPdfIntHashtable_initPackagePrivate();
    if ([reader isNewXrefType]) {
      self->fullCompression_ = true;
    }
    if ([reader isHybridXref]) {
      self->fullCompression_ = false;
    }
  }
  self->initialXrefSize_ = [reader getXrefSize];
}


#line 109
ComAowagieTextPdfPdfStamperImp *new_ComAowagieTextPdfPdfStamperImp_initWithComAowagieTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_withJavaUtilCalendar_(ComAowagieTextPdfPdfReader *reader, JavaIoOutputStream *os, jchar pdfVersion, jboolean append, JavaUtilCalendar *globalDate) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfStamperImp, initWithComAowagieTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_withJavaUtilCalendar_, reader, os, pdfVersion, append, globalDate)
}


#line 109
ComAowagieTextPdfPdfStamperImp *create_ComAowagieTextPdfPdfStamperImp_initWithComAowagieTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_withJavaUtilCalendar_(ComAowagieTextPdfPdfReader *reader, JavaIoOutputStream *os, jchar pdfVersion, jboolean append, JavaUtilCalendar *globalDate) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfStamperImp, initWithComAowagieTextPdfPdfReader_withJavaIoOutputStream_withChar_withBoolean_withJavaUtilCalendar_, reader, os, pdfVersion, append, globalDate)
}


#line 402
void ComAowagieTextPdfPdfStamperImp_applyRotationWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfByteBuffer_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfDictionary *pageN, ComAowagieTextPdfByteBuffer *outArg) {
  if (!self->rotateContents_) {
    return;
  }
  ComAowagieTextRectangle *page = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageSizeWithRotationWithComAowagieTextPdfPdfDictionary:pageN];
  jint rotation = [((ComAowagieTextRectangle *) nil_chk(page)) getRotation];
  switch (rotation) {
    case 90:
    (void) [((ComAowagieTextPdfByteBuffer *) nil_chk(outArg)) appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, ROTATE90)];
    (void) [outArg appendWithFloat:[page getTop]];
    (void) [((ComAowagieTextPdfByteBuffer *) nil_chk([((ComAowagieTextPdfByteBuffer *) nil_chk([outArg appendWithChar:' '])) appendWithChar:'0'])) appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, ROTATEFINAL)];
    break;
    case 180:
    (void) [((ComAowagieTextPdfByteBuffer *) nil_chk(outArg)) appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, ROTATE180)];
    (void) [outArg appendWithFloat:[page getRight]];
    (void) [outArg appendWithChar:' '];
    (void) [outArg appendWithFloat:[page getTop]];
    (void) [outArg appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, ROTATEFINAL)];
    break;
    case 270:
    (void) [((ComAowagieTextPdfByteBuffer *) nil_chk(outArg)) appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, ROTATE270)];
    (void) [((ComAowagieTextPdfByteBuffer *) nil_chk([outArg appendWithChar:'0'])) appendWithChar:' '];
    (void) [outArg appendWithFloat:[page getRight]];
    (void) [outArg appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, ROTATEFINAL)];
    break;
  }
}

void ComAowagieTextPdfPdfStamperImp_alterContents(ComAowagieTextPdfPdfStamperImp *self) {
  for (id<JavaUtilIterator> i = [((id<JavaUtilCollection>) nil_chk([((JavaUtilHashMap *) nil_chk(self->pagesToContent_)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ComAowagieTextPdfPdfStamperImp_PageStamp *ps = (ComAowagieTextPdfPdfStamperImp_PageStamp *) cast_chk([i next], [ComAowagieTextPdfPdfStamperImp_PageStamp class]);
    ComAowagieTextPdfPdfDictionary *pageN = ((ComAowagieTextPdfPdfStamperImp_PageStamp *) nil_chk(ps))->pageN_;
    [self markUsedWithComAowagieTextPdfPdfObject:pageN];
    ComAowagieTextPdfPdfArray *ar = nil;
    ComAowagieTextPdfPdfObject *content = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(pageN)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CONTENTS)], pageN);
    if (content == nil) {
      ar = new_ComAowagieTextPdfPdfArray_init();
      [pageN putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CONTENTS) withComAowagieTextPdfPdfObject:ar];
    }
    else if ([content isArray]) {
      ar = (ComAowagieTextPdfPdfArray *) cast_chk(content, [ComAowagieTextPdfPdfArray class]);
      [self markUsedWithComAowagieTextPdfPdfObject:ar];
    }
    else if ([content isStream]) {
      ar = new_ComAowagieTextPdfPdfArray_init();
      [ar addWithComAowagieTextPdfPdfObject:[pageN getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CONTENTS)]];
      [pageN putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CONTENTS) withComAowagieTextPdfPdfObject:ar];
    }
    else {
      ar = new_ComAowagieTextPdfPdfArray_init();
      [pageN putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CONTENTS) withComAowagieTextPdfPdfObject:ar];
    }
    ComAowagieTextPdfByteBuffer *out = new_ComAowagieTextPdfByteBuffer_init();
    if (ps->under_ != nil) {
      (void) [out appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, SAVESTATE)];
      ComAowagieTextPdfPdfStamperImp_applyRotationWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfByteBuffer_(self, pageN, out);
      (void) [out appendWithComAowagieTextPdfByteBuffer:[((ComAowagieTextPdfStampContent *) nil_chk(ps->under_)) getInternalBuffer]];
      (void) [out appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, RESTORESTATE)];
    }
    if (ps->over_ != nil) {
      (void) [out appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, SAVESTATE)];
    }
    ComAowagieTextPdfPdfStream *stream = new_ComAowagieTextPdfPdfStream_initWithByteArray_([out toByteArray]);
    [stream flateCompressWithInt:self->compressionLevel_];
    [ar addFirstWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:stream])) getIndirectReference]];
    [out reset];
    if (ps->over_ != nil) {
      (void) [out appendWithChar:' '];
      (void) [out appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, RESTORESTATE)];
      ComAowagieTextPdfByteBuffer *buf = [((ComAowagieTextPdfStampContent *) nil_chk(ps->over_)) getInternalBuffer];
      (void) [out appendWithByteArray:[((ComAowagieTextPdfByteBuffer *) nil_chk(buf)) getBuffer] withInt:0 withInt:ComAowagieTextPdfPdfStamperImp_PageStamp_replacePoint];
      (void) [out appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, SAVESTATE)];
      ComAowagieTextPdfPdfStamperImp_applyRotationWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfByteBuffer_(self, pageN, out);
      (void) [out appendWithByteArray:[buf getBuffer] withInt:ComAowagieTextPdfPdfStamperImp_PageStamp_replacePoint withInt:[buf size] - ComAowagieTextPdfPdfStamperImp_PageStamp_replacePoint];
      (void) [out appendWithByteArray:JreLoadStatic(ComAowagieTextPdfPdfContents, RESTORESTATE)];
      stream = new_ComAowagieTextPdfPdfStream_initWithByteArray_([out toByteArray]);
      [stream flateCompressWithInt:self->compressionLevel_];
      [ar addWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:stream])) getIndirectReference]];
    }
    ComAowagieTextPdfPdfStamperImp_alterResourcesWithComAowagieTextPdfPdfStamperImp_PageStamp_(self, ps);
  }
}

void ComAowagieTextPdfPdfStamperImp_alterResourcesWithComAowagieTextPdfPdfStamperImp_PageStamp_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfStamperImp_PageStamp *ps) {
  [((ComAowagieTextPdfPdfDictionary *) nil_chk(((ComAowagieTextPdfPdfStamperImp_PageStamp *) nil_chk(ps))->pageN_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPageResources *) nil_chk(ps->pageResources_)) getResources]];
}


#line 536
void ComAowagieTextPdfPdfStamperImp_registerReaderWithComAowagieTextPdfPdfReader_withBoolean_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfReader *reader, jboolean openFile) {
  if ([((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) containsKeyWithId:reader]) {
    return;
  }
  (void) [self->readers2intrefs_ putWithId:reader withId:new_ComAowagieTextPdfIntHashtable_initPackagePrivate()];
  if (openFile) {
    ComAowagieTextPdfRandomAccessFileOrArray *raf = [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getSafeFile];
    (void) [((JavaUtilHashMap *) nil_chk(self->readers2file_)) putWithId:reader withId:raf];
    [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(raf)) reOpen];
  }
}


#line 550
void ComAowagieTextPdfPdfStamperImp_findAllObjectsWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfObject_withComAowagieTextPdfIntHashtable_(ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfObject *obj, ComAowagieTextPdfIntHashtable *hits) {
  ComAowagieTextPdfPdfStamperImp_initialize();
  
#line 551
  if (obj == nil) {
    return;
  }
  {
    
#line 556
    ComAowagieTextPdfPRIndirectReference *iref;
    
#line 567
    ComAowagieTextPdfPdfArray *a;
    
#line 574
    ComAowagieTextPdfPdfDictionary *dic;
    
#line 554
    switch ([obj type]) {
      case ComAowagieTextPdfPdfObject_INDIRECT:
      iref = (ComAowagieTextPdfPRIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPRIndirectReference class]);
      if (!JreObjectEqualsEquals(reader, [iref getReader])) {
        return;
      }
      if ([((ComAowagieTextPdfIntHashtable *) nil_chk(hits)) containsKeyWithInt:[iref getNumber]]) {
        return;
      }
      [hits putWithInt:[iref getNumber] withInt:1];
      ComAowagieTextPdfPdfStamperImp_findAllObjectsWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfObject_withComAowagieTextPdfIntHashtable_(reader, ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(obj), hits);
      return;
      case ComAowagieTextPdfPdfObject_ARRAY:
      a = (ComAowagieTextPdfPdfArray *) cast_chk(obj, [ComAowagieTextPdfPdfArray class]);
      for (jint k = 0; k < [a size]; ++k) {
        ComAowagieTextPdfPdfStamperImp_findAllObjectsWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfObject_withComAowagieTextPdfIntHashtable_(reader, [a getPdfObjectWithInt:k], hits);
      }
      return;
      case ComAowagieTextPdfPdfObject_DICTIONARY:
      case ComAowagieTextPdfPdfObject_STREAM:
      dic = (ComAowagieTextPdfPdfDictionary *) cast_chk(obj, [ComAowagieTextPdfPdfDictionary class]);
      for (id __strong element in nil_chk([dic getKeys])) {
        ComAowagieTextPdfPdfName *name = (ComAowagieTextPdfPdfName *) cast_chk(element, [ComAowagieTextPdfPdfName class]);
        ComAowagieTextPdfPdfStamperImp_findAllObjectsWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfObject_withComAowagieTextPdfIntHashtable_(reader, [dic getWithComAowagieTextPdfPdfName:name], hits);
      }
      return;
    }
  }
}


#line 585
ComAowagieTextPdfPdfStamperImp_PageStamp *ComAowagieTextPdfPdfStamperImp_getPageStampWithInt_(ComAowagieTextPdfPdfStamperImp *self, jint pageNum) {
  ComAowagieTextPdfPdfDictionary *pageN = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:pageNum];
  ComAowagieTextPdfPdfStamperImp_PageStamp *ps = (ComAowagieTextPdfPdfStamperImp_PageStamp *) cast_chk([((JavaUtilHashMap *) nil_chk(self->pagesToContent_)) getWithId:pageN], [ComAowagieTextPdfPdfStamperImp_PageStamp class]);
  if (ps == nil) {
    ps = new_ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(self, self->reader_, pageN);
    (void) [self->pagesToContent_ putWithId:pageN withId:ps];
  }
  return ps;
}


#line 608
void ComAowagieTextPdfPdfStamperImp_correctAcroFieldPagesWithInt_(ComAowagieTextPdfPdfStamperImp *self, jint page) {
  if (self->acroFields_ == nil) {
    return;
  }
  if (page > [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getNumberOfPages]) {
    return;
  }
  JavaUtilHashMap *fields = [((ComAowagieTextPdfAcroFields *) nil_chk(self->acroFields_)) getFields];
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilHashMap *) nil_chk(fields)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfAcroFields_Item *item = (ComAowagieTextPdfAcroFields_Item *) cast_chk([it next], [ComAowagieTextPdfAcroFields_Item class]);
    for (jint k = 0; k < [((ComAowagieTextPdfAcroFields_Item *) nil_chk(item)) size]; ++k) {
      jint p = [((JavaLangInteger *) nil_chk([item getPageWithInt:k])) intValue];
      if (p >= page) {
        [item forcePageWithInt:k withInt:p + 1];
      }
    }
  }
}

void ComAowagieTextPdfPdfStamperImp_moveRectangleWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfReader_withInt_withComAowagieTextPdfPdfName_withNSString_(ComAowagieTextPdfPdfDictionary *dic2, ComAowagieTextPdfPdfReader *r, jint pageImported, ComAowagieTextPdfPdfName *key, NSString *name) {
  ComAowagieTextPdfPdfStamperImp_initialize();
  
#line 628
  ComAowagieTextRectangle *m = [((ComAowagieTextPdfPdfReader *) nil_chk(r)) getBoxSizeWithInt:pageImported withNSString:name];
  if (m == nil) {
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(dic2)) removeWithComAowagieTextPdfPdfName:key];
  }
  else {
    
#line 632
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(dic2)) putWithComAowagieTextPdfPdfName:key withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithComAowagieTextRectangle_(m)];
  }
}


#line 737
void ComAowagieTextPdfPdfStamperImp_flatFields(ComAowagieTextPdfPdfStamperImp *self) {
  if (self->append_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Field flattening is not supported in append mode.");
  }
  (void) [self getAcroFields];
  JavaUtilHashMap *fields = [((ComAowagieTextPdfAcroFields *) nil_chk(self->acroFields_)) getFields];
  if (self->fieldsAdded_ && [((JavaUtilHashSet *) nil_chk(self->partialFlattening_)) isEmpty]) {
    for (id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(fields)) keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
      [((JavaUtilHashSet *) nil_chk(self->partialFlattening_)) addWithId:[i next]];
    }
  }
  ComAowagieTextPdfPdfDictionary *acroForm = [((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog])) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)];
  ComAowagieTextPdfPdfArray *acroFds = nil;
  if (acroForm != nil) {
    acroFds = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([acroForm getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIELDS)], acroForm), [ComAowagieTextPdfPdfArray class]);
  }
  for (id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(fields)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([i next], JavaUtilMap_Entry_class_());
    NSString *name = (NSString *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [NSString class]);
    if (![((JavaUtilHashSet *) nil_chk(self->partialFlattening_)) isEmpty] && ![self->partialFlattening_ containsWithId:name]) {
      continue;
    }
    ComAowagieTextPdfAcroFields_Item *item = (ComAowagieTextPdfAcroFields_Item *) cast_chk([entry_ getValue], [ComAowagieTextPdfAcroFields_Item class]);
    for (jint k = 0; k < [((ComAowagieTextPdfAcroFields_Item *) nil_chk(item)) size]; ++k) {
      ComAowagieTextPdfPdfDictionary *merged = [item getMergedWithInt:k];
      ComAowagieTextPdfPdfNumber *ff = [((ComAowagieTextPdfPdfDictionary *) nil_chk(merged)) getAsNumberWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, F)];
      jint flags = 0;
      if (ff != nil) {
        flags = [ff intValue];
      }
      jint page = [((JavaLangInteger *) nil_chk([item getPageWithInt:k])) intValue];
      ComAowagieTextPdfPdfDictionary *appDic = [merged getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AP)];
      if (appDic != nil && (flags & ComAowagieTextPdfPdfAnnotation_FLAGS_PRINT) != 0 && (flags & ComAowagieTextPdfPdfAnnotation_FLAGS_HIDDEN) == 0) {
        ComAowagieTextPdfPdfObject *obj = [appDic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, N)];
        ComAowagieTextPdfPdfAppearance *app = nil;
        if (obj != nil) {
          ComAowagieTextPdfPdfObject *objReal = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(obj);
          if ([obj isKindOfClass:[ComAowagieTextPdfPdfIndirectReference class]] && ![obj isIndirect]) {
            app = new_ComAowagieTextPdfPdfAppearance_initPackagePrivateWithComAowagieTextPdfPdfIndirectReference_((ComAowagieTextPdfPdfIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPdfIndirectReference class]));
          }
          else
#line 776
          if ([objReal isKindOfClass:[ComAowagieTextPdfPdfStream class]]) {
            [((ComAowagieTextPdfPdfDictionary *) nil_chk(((ComAowagieTextPdfPdfDictionary *) objReal))) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, FORM)];
            app = new_ComAowagieTextPdfPdfAppearance_initPackagePrivateWithComAowagieTextPdfPdfIndirectReference_((ComAowagieTextPdfPdfIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPdfIndirectReference class]));
          }
          else {
            if (objReal != nil && [objReal isDictionary]) {
              ComAowagieTextPdfPdfName *as = [merged getAsNameWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AS)];
              if (as != nil) {
                ComAowagieTextPdfPdfIndirectReference *iref = (ComAowagieTextPdfPdfIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) objReal) getWithComAowagieTextPdfPdfName:as], [ComAowagieTextPdfPdfIndirectReference class]);
                if (iref != nil) {
                  app = new_ComAowagieTextPdfPdfAppearance_initPackagePrivateWithComAowagieTextPdfPdfIndirectReference_(iref);
                  if ([iref isIndirect]) {
                    objReal = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(iref);
                    [((ComAowagieTextPdfPdfDictionary *) nil_chk(((ComAowagieTextPdfPdfDictionary *) objReal))) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, FORM)];
                  }
                }
              }
            }
          }
        }
        if (app != nil) {
          ComAowagieTextRectangle *box = ComAowagieTextPdfPdfReader_getNormalizedRectangleWithComAowagieTextPdfPdfArray_([merged getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT)]);
          ComAowagieTextPdfPdfContentByte *cb = [self getOverContentWithInt:page];
          [((ComAowagieTextPdfPdfContentByte *) nil_chk(cb)) setLiteralWithNSString:@"Q "];
          [cb addTemplateWithComAowagieTextPdfPdfTemplate:app withFloat:[((ComAowagieTextRectangle *) nil_chk(box)) getLeft] withFloat:[box getBottom]];
          [cb setLiteralWithNSString:@"q "];
        }
      }
      if ([self->partialFlattening_ isEmpty]) {
        continue;
      }
      ComAowagieTextPdfPdfDictionary *pageDic = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:page];
      ComAowagieTextPdfPdfArray *annots = [((ComAowagieTextPdfPdfDictionary *) nil_chk(pageDic)) getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
      if (annots == nil) {
        continue;
      }
      for (jint idx = 0; idx < [annots size]; ++idx) {
        ComAowagieTextPdfPdfObject *ran = [annots getPdfObjectWithInt:idx];
        if (![((ComAowagieTextPdfPdfObject *) nil_chk(ran)) isIndirect]) {
          continue;
        }
        ComAowagieTextPdfPdfObject *ran2 = [item getWidgetRefWithInt:k];
        if (![((ComAowagieTextPdfPdfObject *) nil_chk(ran2)) isIndirect]) {
          continue;
        }
        if ([((ComAowagieTextPdfPRIndirectReference *) cast_chk(ran, [ComAowagieTextPdfPRIndirectReference class])) getNumber] == [((ComAowagieTextPdfPRIndirectReference *) cast_chk(ran2, [ComAowagieTextPdfPRIndirectReference class])) getNumber]) {
          (void) [annots removeWithInt:idx--];
          ComAowagieTextPdfPRIndirectReference *wdref = (ComAowagieTextPdfPRIndirectReference *) cast_chk(ran2, [ComAowagieTextPdfPRIndirectReference class]);
          while (true) {
            ComAowagieTextPdfPdfDictionary *wd = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(wdref), [ComAowagieTextPdfPdfDictionary class]);
            ComAowagieTextPdfPRIndirectReference *parentRef = (ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(wd)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT)], [ComAowagieTextPdfPRIndirectReference class]);
            (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_(wdref);
            if (parentRef == nil) {
              for (jint fr = 0; fr < [((ComAowagieTextPdfPdfArray *) nil_chk(acroFds)) size]; ++fr) {
                ComAowagieTextPdfPdfObject *h = [acroFds getPdfObjectWithInt:fr];
                if ([((ComAowagieTextPdfPdfObject *) nil_chk(h)) isIndirect] && [((ComAowagieTextPdfPRIndirectReference *) cast_chk(h, [ComAowagieTextPdfPRIndirectReference class])) getNumber] == [wdref getNumber]) {
                  (void) [acroFds removeWithInt:fr];
                  --fr;
                }
              }
              break;
            }
            ComAowagieTextPdfPdfDictionary *parent = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(parentRef), [ComAowagieTextPdfPdfDictionary class]);
            ComAowagieTextPdfPdfArray *kids = [((ComAowagieTextPdfPdfDictionary *) nil_chk(parent)) getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS)];
            for (jint fr = 0; fr < [((ComAowagieTextPdfPdfArray *) nil_chk(kids)) size]; ++fr) {
              ComAowagieTextPdfPdfObject *h = [kids getPdfObjectWithInt:fr];
              if ([((ComAowagieTextPdfPdfObject *) nil_chk(h)) isIndirect] && [((ComAowagieTextPdfPRIndirectReference *) cast_chk(h, [ComAowagieTextPdfPRIndirectReference class])) getNumber] == [wdref getNumber]) {
                (void) [kids removeWithInt:fr];
                --fr;
              }
            }
            if (![kids isEmpty]) {
              break;
            }
            wdref = parentRef;
          }
        }
      }
      if ([annots isEmpty]) {
        (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_([pageDic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)]);
        [pageDic removeWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
      }
    }
  }
  if (!self->fieldsAdded_ && [((JavaUtilHashSet *) nil_chk(self->partialFlattening_)) isEmpty]) {
    for (jint page = 1; page <= [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getNumberOfPages]; ++page) {
      ComAowagieTextPdfPdfDictionary *pageDic = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:page];
      ComAowagieTextPdfPdfArray *annots = [((ComAowagieTextPdfPdfDictionary *) nil_chk(pageDic)) getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
      if (annots == nil) {
        continue;
      }
      for (jint idx = 0; idx < [annots size]; ++idx) {
        ComAowagieTextPdfPdfObject *annoto = [annots getDirectObjectWithInt:idx];
        if ([annoto isKindOfClass:[ComAowagieTextPdfPdfIndirectReference class]] && ![((ComAowagieTextPdfPdfObject *) nil_chk(annoto)) isIndirect]) {
          continue;
        }
        if (![((ComAowagieTextPdfPdfObject *) nil_chk(annoto)) isDictionary] || [((ComAowagieTextPdfPdfName *) nil_chk(JreLoadStatic(ComAowagieTextPdfPdfName, WIDGET))) isEqual:[((ComAowagieTextPdfPdfDictionary *) cast_chk(annoto, [ComAowagieTextPdfPdfDictionary class])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE)]]) {
          (void) [annots removeWithInt:idx];
          --idx;
        }
      }
      if ([annots isEmpty]) {
        (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_([pageDic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)]);
        [pageDic removeWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
      }
    }
    ComAowagieTextPdfPdfStamperImp_eliminateAcroformObjects(self);
  }
}


#line 886
void ComAowagieTextPdfPdfStamperImp_eliminateAcroformObjects(ComAowagieTextPdfPdfStamperImp *self) {
  ComAowagieTextPdfPdfObject *acro = [((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog])) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)];
  if (acro == nil) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *acrodic = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(acro), [ComAowagieTextPdfPdfDictionary class]);
  [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) killXrefWithComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfDictionary *) nil_chk(acrodic)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, XFA)]];
  [acrodic removeWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, XFA)];
  ComAowagieTextPdfPdfObject *iFields = [acrodic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIELDS)];
  if (iFields != nil) {
    ComAowagieTextPdfPdfDictionary *kids = new_ComAowagieTextPdfPdfDictionary_init();
    [kids putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:iFields];
    ComAowagieTextPdfPdfStamperImp_sweepKidsWithComAowagieTextPdfPdfObject_(self, kids);
    (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_(iFields);
    [acrodic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIELDS) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfArray_init()];
  }
}


#line 906
void ComAowagieTextPdfPdfStamperImp_sweepKidsWithComAowagieTextPdfPdfObject_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfObject *obj) {
  ComAowagieTextPdfPdfObject *oo = ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_(obj);
  if (oo == nil || ![oo isDictionary]) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *dic = (ComAowagieTextPdfPdfDictionary *) cast_chk(oo, [ComAowagieTextPdfPdfDictionary class]);
  ComAowagieTextPdfPdfArray *kids = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_([dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS)]), [ComAowagieTextPdfPdfArray class]);
  if (kids == nil) {
    return;
  }
  for (jint k = 0; k < [kids size]; ++k) {
    ComAowagieTextPdfPdfStamperImp_sweepKidsWithComAowagieTextPdfPdfObject_(self, [kids getPdfObjectWithInt:k]);
  }
}

void ComAowagieTextPdfPdfStamperImp_flatFreeTextFields(ComAowagieTextPdfPdfStamperImp *self) {
  
#line 923
  if (self->append_) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"FreeText flattening is not supported in append mode.");
  }
  
#line 927
  for (jint page = 1; page <= [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getNumberOfPages]; ++page) {
    
#line 929
    ComAowagieTextPdfPdfDictionary *pageDic = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getPageNWithInt:page];
    ComAowagieTextPdfPdfArray *annots = [((ComAowagieTextPdfPdfDictionary *) nil_chk(pageDic)) getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
    if (annots == nil) {
      continue;
    }
    for (jint idx = 0; idx < [annots size]; ++idx) {
      
#line 936
      ComAowagieTextPdfPdfObject *annoto = [annots getDirectObjectWithInt:idx];
      if ([annoto isKindOfClass:[ComAowagieTextPdfPdfIndirectReference class]] && ![((ComAowagieTextPdfPdfObject *) nil_chk(annoto)) isIndirect]) {
        continue;
      }
      
#line 941
      ComAowagieTextPdfPdfDictionary *annDic = (ComAowagieTextPdfPdfDictionary *) cast_chk(annoto, [ComAowagieTextPdfPdfDictionary class]);
      if (![((ComAowagieTextPdfPdfName *) nil_chk(((ComAowagieTextPdfPdfName *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(annDic)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE)], [ComAowagieTextPdfPdfName class])))) isEqual:JreLoadStatic(ComAowagieTextPdfPdfName, FREETEXT)]) {
        continue;
      }
      ComAowagieTextPdfPdfNumber *ff = [annDic getAsNumberWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, F)];
      jint flags = ff != nil ? [ff intValue] : 0;
      
#line 948
      if ((flags & ComAowagieTextPdfPdfAnnotation_FLAGS_PRINT) != 0 && (flags & ComAowagieTextPdfPdfAnnotation_FLAGS_HIDDEN) == 0) {
        
#line 950
        ComAowagieTextPdfPdfObject *obj1 = [annDic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AP)];
        if (obj1 == nil) {
          continue;
        }
        ComAowagieTextPdfPdfDictionary *appDic = [obj1 isKindOfClass:[ComAowagieTextPdfPdfIndirectReference class]] ?
#line 955
        (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(obj1), [ComAowagieTextPdfPdfDictionary class]) : (ComAowagieTextPdfPdfDictionary *) cast_chk(obj1, [ComAowagieTextPdfPdfDictionary class]);
        ComAowagieTextPdfPdfObject *obj = [appDic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, N)];
        ComAowagieTextPdfPdfAppearance *app = nil;
        ComAowagieTextPdfPdfObject *objReal = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(obj);
        
#line 960
        if ([obj isKindOfClass:[ComAowagieTextPdfPdfIndirectReference class]] && ![((ComAowagieTextPdfPdfObject *) nil_chk(obj)) isIndirect]) {
          app = new_ComAowagieTextPdfPdfAppearance_initPackagePrivateWithComAowagieTextPdfPdfIndirectReference_((ComAowagieTextPdfPdfIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPdfIndirectReference class]));
        }
        else
#line 962
        if ([objReal isKindOfClass:[ComAowagieTextPdfPdfStream class]]) {
          
#line 964
          [((ComAowagieTextPdfPdfDictionary *) nil_chk(((ComAowagieTextPdfPdfDictionary *) objReal))) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, FORM)];
          app = new_ComAowagieTextPdfPdfAppearance_initPackagePrivateWithComAowagieTextPdfPdfIndirectReference_((ComAowagieTextPdfPdfIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPdfIndirectReference class]));
        }
        else {
          
#line 969
          if ([((ComAowagieTextPdfPdfObject *) nil_chk(objReal)) isDictionary]) {
            
#line 971
            ComAowagieTextPdfPdfName *as_p = [appDic getAsNameWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, AS)];
            if (as_p != nil) {
              
#line 974
              ComAowagieTextPdfPdfIndirectReference *iref = (ComAowagieTextPdfPdfIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) objReal) getWithComAowagieTextPdfPdfName:as_p], [ComAowagieTextPdfPdfIndirectReference class]);
              if (iref != nil) {
                
#line 977
                app = new_ComAowagieTextPdfPdfAppearance_initPackagePrivateWithComAowagieTextPdfPdfIndirectReference_(iref);
                if ([iref isIndirect]) {
                  
#line 980
                  objReal = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(iref);
                  [((ComAowagieTextPdfPdfDictionary *) nil_chk(((ComAowagieTextPdfPdfDictionary *) objReal))) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, FORM)];
                }
              }
            }
          }
        }
        if (app != nil) {
          
#line 989
          ComAowagieTextRectangle *box = ComAowagieTextPdfPdfReader_getNormalizedRectangleWithComAowagieTextPdfPdfArray_([annDic getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT)]);
          ComAowagieTextPdfPdfContentByte *cb = [self getOverContentWithInt:page];
          [((ComAowagieTextPdfPdfContentByte *) nil_chk(cb)) setLiteralWithNSString:@"Q "];
          [cb addTemplateWithComAowagieTextPdfPdfTemplate:app withFloat:[((ComAowagieTextRectangle *) nil_chk(box)) getLeft] withFloat:[box getBottom]];
          [cb setLiteralWithNSString:@"q "];
        }
      }
    }
    for (jint idx = 0; idx < [annots size]; ++idx) {
      
#line 999
      ComAowagieTextPdfPdfDictionary *annot = [annots getAsDictWithInt:idx];
      if (annot != nil) {
        
#line 1002
        if ([((ComAowagieTextPdfPdfName *) nil_chk(JreLoadStatic(ComAowagieTextPdfPdfName, FREETEXT))) isEqual:[annot getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE)]]) {
          
#line 1004
          (void) [annots removeWithInt:idx];
          --idx;
        }
      }
    }
    if ([annots isEmpty]) {
      
#line 1011
      (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_([pageDic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)]);
      [pageDic removeWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
    }
  }
}


#line 1037
void ComAowagieTextPdfPdfStamperImp_addDocumentFieldWithComAowagieTextPdfPdfIndirectReference_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfIndirectReference *ref) {
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog];
  ComAowagieTextPdfPdfDictionary *acroForm = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)], catalog), [ComAowagieTextPdfPdfDictionary class]);
  if (acroForm == nil) {
    acroForm = new_ComAowagieTextPdfPdfDictionary_init();
    [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM) withComAowagieTextPdfPdfObject:acroForm];
    [self markUsedWithComAowagieTextPdfPdfObject:catalog];
  }
  ComAowagieTextPdfPdfArray *fields = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([acroForm getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIELDS)], acroForm), [ComAowagieTextPdfPdfArray class]);
  if (fields == nil) {
    fields = new_ComAowagieTextPdfPdfArray_init();
    [acroForm putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIELDS) withComAowagieTextPdfPdfObject:fields];
    [self markUsedWithComAowagieTextPdfPdfObject:acroForm];
  }
  if (![acroForm containsWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DA)]) {
    [acroForm putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DA) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(@"/Helv 0 Tf 0 g ")];
    [self markUsedWithComAowagieTextPdfPdfObject:acroForm];
  }
  [fields addWithComAowagieTextPdfPdfObject:ref];
  [self markUsedWithComAowagieTextPdfPdfObject:fields];
}

void ComAowagieTextPdfPdfStamperImp_addFieldResources(ComAowagieTextPdfPdfStamperImp *self) {
  if ([((JavaUtilHashMap *) nil_chk(self->fieldTemplates_)) isEmpty]) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog];
  ComAowagieTextPdfPdfDictionary *acroForm = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)], catalog), [ComAowagieTextPdfPdfDictionary class]);
  if (acroForm == nil) {
    acroForm = new_ComAowagieTextPdfPdfDictionary_init();
    [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM) withComAowagieTextPdfPdfObject:acroForm];
    [self markUsedWithComAowagieTextPdfPdfObject:catalog];
  }
  ComAowagieTextPdfPdfDictionary *dr = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([acroForm getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DR)], acroForm), [ComAowagieTextPdfPdfDictionary class]);
  if (dr == nil) {
    dr = new_ComAowagieTextPdfPdfDictionary_init();
    [acroForm putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DR) withComAowagieTextPdfPdfObject:dr];
    [self markUsedWithComAowagieTextPdfPdfObject:acroForm];
  }
  [self markUsedWithComAowagieTextPdfPdfObject:dr];
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([self->fieldTemplates_ keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfPdfTemplate *template_ = (ComAowagieTextPdfPdfTemplate *) cast_chk([it next], [ComAowagieTextPdfPdfTemplate class]);
    ComAowagieTextPdfPdfFormField_mergeResourcesWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfStamperImp_(dr, (ComAowagieTextPdfPdfDictionary *) cast_chk([((ComAowagieTextPdfPdfTemplate *) nil_chk(template_)) getResources], [ComAowagieTextPdfPdfDictionary class]), self);
  }
  
#line 1082
  ComAowagieTextPdfPdfDictionary *fonts = [dr getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FONT)];
  if (fonts == nil) {
    fonts = new_ComAowagieTextPdfPdfDictionary_init();
    [dr putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FONT) withComAowagieTextPdfPdfObject:fonts];
  }
  if (![fonts containsWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, HELV)]) {
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(JreLoadStatic(ComAowagieTextPdfPdfName, FONT));
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, BASEFONT) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, HELVETICA)];
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ENCODING) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, WIN_ANSI_ENCODING)];
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAME) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, HELV)];
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE1)];
    [fonts putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, HELV) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:dic])) getIndirectReference]];
  }
  if (![fonts containsWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ZADB)]) {
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(JreLoadStatic(ComAowagieTextPdfPdfName, FONT));
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, BASEFONT) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, ZAPFDINGBATS)];
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAME) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, ZADB)];
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE1)];
    [fonts putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ZADB) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:dic])) getIndirectReference]];
  }
  if ([acroForm getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DA)] == nil) {
    [acroForm putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DA) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(@"/Helv 0 Tf 0 g ")];
    [self markUsedWithComAowagieTextPdfPdfObject:acroForm];
  }
}


#line 1108
void ComAowagieTextPdfPdfStamperImp_expandFieldsWithComAowagieTextPdfPdfFormField_withJavaUtilArrayList_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfFormField *field, JavaUtilArrayList *allAnnots) {
  [((JavaUtilArrayList *) nil_chk(allAnnots)) addWithId:field];
  JavaUtilArrayList *kids = [((ComAowagieTextPdfPdfFormField *) nil_chk(field)) getKids];
  if (kids != nil) {
    for (jint k = 0; k < [kids size]; ++k) {
      ComAowagieTextPdfPdfStamperImp_expandFieldsWithComAowagieTextPdfPdfFormField_withJavaUtilArrayList_(self, (ComAowagieTextPdfPdfFormField *) cast_chk([kids getWithInt:k], [ComAowagieTextPdfPdfFormField class]), allAnnots);
    }
  }
}


#line 1209
void ComAowagieTextPdfPdfStamperImp_outlineTravelWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPRIndirectReference *outline) {
  while (outline != nil) {
    ComAowagieTextPdfPdfDictionary *outlineR = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_(outline), [ComAowagieTextPdfPdfDictionary class]);
    ComAowagieTextPdfPRIndirectReference *first = (ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(outlineR)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIRST)], [ComAowagieTextPdfPRIndirectReference class]);
    if (first != nil) {
      ComAowagieTextPdfPdfStamperImp_outlineTravelWithComAowagieTextPdfPRIndirectReference_(self, first);
    }
    (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_([outlineR getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DEST)]);
    (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_([outlineR getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, A)]);
    (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_(outline);
    outline = (ComAowagieTextPdfPRIndirectReference *) cast_chk([outlineR getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NEXT)], [ComAowagieTextPdfPRIndirectReference class]);
  }
}

void ComAowagieTextPdfPdfStamperImp_deleteOutlines(ComAowagieTextPdfPdfStamperImp *self) {
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog];
  ComAowagieTextPdfPRIndirectReference *outlines = (ComAowagieTextPdfPRIndirectReference *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OUTLINES)], [ComAowagieTextPdfPRIndirectReference class]);
  if (outlines == nil) {
    return;
  }
  ComAowagieTextPdfPdfStamperImp_outlineTravelWithComAowagieTextPdfPRIndirectReference_(self, outlines);
  (void) ComAowagieTextPdfPdfReader_killIndirectWithComAowagieTextPdfPdfObject_(outlines);
  [catalog removeWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OUTLINES)];
  [self markUsedWithComAowagieTextPdfPdfObject:catalog];
}

void ComAowagieTextPdfPdfStamperImp_setJavaScript(ComAowagieTextPdfPdfStamperImp *self) {
  JavaUtilHashMap *djs = [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getDocumentLevelJS];
  if ([((JavaUtilHashMap *) nil_chk(djs)) isEmpty]) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog];
  ComAowagieTextPdfPdfDictionary *names = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAMES)], catalog), [ComAowagieTextPdfPdfDictionary class]);
  if (names == nil) {
    names = new_ComAowagieTextPdfPdfDictionary_init();
    [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAMES) withComAowagieTextPdfPdfObject:names];
    [self markUsedWithComAowagieTextPdfPdfObject:catalog];
  }
  [self markUsedWithComAowagieTextPdfPdfObject:names];
  ComAowagieTextPdfPdfDictionary *tree = ComAowagieTextPdfPdfNameTree_writeTreeWithJavaUtilHashMap_withComAowagieTextPdfPdfWriter_(djs, self);
  [names putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, JAVASCRIPT) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:tree])) getIndirectReference]];
}

void ComAowagieTextPdfPdfStamperImp_addFileAttachments(ComAowagieTextPdfPdfStamperImp *self) {
  JavaUtilHashMap *fs = [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getDocumentFileAttachment];
  if ([((JavaUtilHashMap *) nil_chk(fs)) isEmpty]) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog];
  ComAowagieTextPdfPdfDictionary *names = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAMES)], catalog), [ComAowagieTextPdfPdfDictionary class]);
  if (names == nil) {
    names = new_ComAowagieTextPdfPdfDictionary_init();
    [catalog putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAMES) withComAowagieTextPdfPdfObject:names];
    [self markUsedWithComAowagieTextPdfPdfObject:catalog];
  }
  [self markUsedWithComAowagieTextPdfPdfObject:names];
  JavaUtilHashMap *old = ComAowagieTextPdfPdfNameTree_readTreeWithComAowagieTextPdfPdfDictionary_((ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([names getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, EMBEDDEDFILES)]), [ComAowagieTextPdfPdfDictionary class]));
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([fs entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([it next], JavaUtilMap_Entry_class_());
    NSString *name = (NSString *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [NSString class]);
    jint k = 0;
    NSString *nn = name;
    while ([((JavaUtilHashMap *) nil_chk(old)) containsKeyWithId:nn]) {
      ++k;
      (void) JreStrAppendStrong(&nn, "CI", ' ', k);
    }
    (void) [old putWithId:nn withId:[entry_ getValue]];
  }
  ComAowagieTextPdfPdfDictionary *tree = ComAowagieTextPdfPdfNameTree_writeTreeWithJavaUtilHashMap_withComAowagieTextPdfPdfWriter_(old, self);
  [names putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, EMBEDDEDFILES) withComAowagieTextPdfPdfObject:[((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:tree])) getIndirectReference]];
}


#line 1283
void ComAowagieTextPdfPdfStamperImp_setOutlines(ComAowagieTextPdfPdfStamperImp *self) {
  if (self->newBookmarks_ == nil) {
    return;
  }
  ComAowagieTextPdfPdfStamperImp_deleteOutlines(self);
  if ([((id<JavaUtilList>) nil_chk(self->newBookmarks_)) isEmpty]) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog];
  jboolean namedAsNames = [((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DESTS)] != nil;
  [self writeOutlinesWithComAowagieTextPdfPdfDictionary:catalog withBoolean:namedAsNames];
  [self markUsedWithComAowagieTextPdfPdfObject:catalog];
}


#line 1463
void ComAowagieTextPdfPdfStamperImp_readOCProperties(ComAowagieTextPdfPdfStamperImp *self) {
  if (![((JavaUtilHashSet *) nil_chk(self->documentOCG_)) isEmpty]) {
    return;
  }
  ComAowagieTextPdfPdfDictionary *dict = [((ComAowagieTextPdfPdfDictionary *) nil_chk([((ComAowagieTextPdfPdfReader *) nil_chk(self->reader_)) getCatalog])) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCPROPERTIES)];
  if (dict == nil) {
    return;
  }
  ComAowagieTextPdfPdfArray *ocgs = [dict getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OCGS)];
  ComAowagieTextPdfPdfIndirectReference *ref;
  ComAowagieTextPdfPdfLayer *layer;
  JavaUtilHashMap *ocgmap = new_JavaUtilLinkedHashMap_init();
  for (id<JavaUtilIterator> i = [((ComAowagieTextPdfPdfArray *) nil_chk(ocgs)) listIterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
    ref = (ComAowagieTextPdfPdfIndirectReference *) cast_chk([i next], [ComAowagieTextPdfPdfIndirectReference class]);
    layer = new_ComAowagieTextPdfPdfLayer_initPackagePrivateWithNSString_(nil);
    [layer setRefWithComAowagieTextPdfPdfIndirectReference:ref];
    [layer setOnPanelWithBoolean:false];
    [layer mergeWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(ref), [ComAowagieTextPdfPdfDictionary class])];
    (void) [ocgmap putWithId:[((ComAowagieTextPdfPdfIndirectReference *) nil_chk(ref)) description] withId:layer];
  }
  ComAowagieTextPdfPdfDictionary *d = [dict getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, D)];
  ComAowagieTextPdfPdfArray *off = [((ComAowagieTextPdfPdfDictionary *) nil_chk(d)) getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, OFF)];
  if (off != nil) {
    for (id<JavaUtilIterator> i = [off listIterator]; [((id<JavaUtilIterator>) nil_chk(i)) hasNext]; ) {
      ref = (ComAowagieTextPdfPdfIndirectReference *) cast_chk([i next], [ComAowagieTextPdfPdfIndirectReference class]);
      layer = (ComAowagieTextPdfPdfLayer *) cast_chk([ocgmap getWithId:[((ComAowagieTextPdfPdfIndirectReference *) nil_chk(ref)) description]], [ComAowagieTextPdfPdfLayer class]);
      [((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) setOnWithBoolean:false];
    }
  }
  ComAowagieTextPdfPdfArray *order = [d getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ORDER)];
  if (order != nil) {
    ComAowagieTextPdfPdfStamperImp_addOrderWithComAowagieTextPdfPdfLayer_withComAowagieTextPdfPdfArray_withJavaUtilMap_(self, nil, order, ocgmap);
  }
  [((JavaUtilHashSet *) nil_chk(self->documentOCG_)) addAllWithJavaUtilCollection:[ocgmap values]];
  self->OCGRadioGroup_ = [d getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RBGROUPS)];
  self->OCGLocked_ = [d getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LOCKED)];
  if (self->OCGLocked_ == nil) {
    self->OCGLocked_ = new_ComAowagieTextPdfPdfArray_init();
  }
}


#line 1511
void ComAowagieTextPdfPdfStamperImp_addOrderWithComAowagieTextPdfPdfLayer_withComAowagieTextPdfPdfArray_withJavaUtilMap_(ComAowagieTextPdfPdfStamperImp *self, ComAowagieTextPdfPdfLayer *parent, ComAowagieTextPdfPdfArray *arr, id<JavaUtilMap> ocgmap) {
  ComAowagieTextPdfPdfObject *obj;
  ComAowagieTextPdfPdfLayer *layer;
  for (jint i = 0; i < [((ComAowagieTextPdfPdfArray *) nil_chk(arr)) size]; i++) {
    obj = [arr getPdfObjectWithInt:i];
    if ([((ComAowagieTextPdfPdfObject *) nil_chk(obj)) isIndirect]) {
      layer = (ComAowagieTextPdfPdfLayer *) cast_chk([((id<JavaUtilMap>) nil_chk(ocgmap)) getWithId:[obj description]], [ComAowagieTextPdfPdfLayer class]);
      [((ComAowagieTextPdfPdfLayer *) nil_chk(layer)) setOnPanelWithBoolean:true];
      [self registerLayerWithComAowagieTextPdfPdfOCG:layer];
      if (parent != nil) {
        [parent addChildWithComAowagieTextPdfPdfLayer:layer];
      }
      if ([arr size] > i + 1 && [((ComAowagieTextPdfPdfObject *) nil_chk([arr getPdfObjectWithInt:i + 1])) isArray]) {
        i++;
        ComAowagieTextPdfPdfStamperImp_addOrderWithComAowagieTextPdfPdfLayer_withComAowagieTextPdfPdfArray_withJavaUtilMap_(self, layer, (ComAowagieTextPdfPdfArray *) cast_chk([arr getPdfObjectWithInt:i], [ComAowagieTextPdfPdfArray class]), ocgmap);
      }
    }
    else if ([obj isArray]) {
      ComAowagieTextPdfPdfArray *sub = (ComAowagieTextPdfPdfArray *) cast_chk(obj, [ComAowagieTextPdfPdfArray class]);
      if ([sub isEmpty]) {
        return;
      }
      obj = [sub getPdfObjectWithInt:0];
      if ([((ComAowagieTextPdfPdfObject *) nil_chk(obj)) isString]) {
        layer = new_ComAowagieTextPdfPdfLayer_initPackagePrivateWithNSString_([obj description]);
        [layer setOnPanelWithBoolean:true];
        [self registerLayerWithComAowagieTextPdfPdfOCG:layer];
        if (parent != nil) {
          [parent addChildWithComAowagieTextPdfPdfLayer:layer];
        }
        ComAowagieTextPdfPdfArray *array = new_ComAowagieTextPdfPdfArray_init();
        for (id<JavaUtilIterator> j = [sub listIterator]; [((id<JavaUtilIterator>) nil_chk(j)) hasNext]; ) {
          [array addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *) cast_chk([j next], [ComAowagieTextPdfPdfObject class])];
        }
        ComAowagieTextPdfPdfStamperImp_addOrderWithComAowagieTextPdfPdfLayer_withComAowagieTextPdfPdfArray_withJavaUtilMap_(self, layer, array, ocgmap);
      }
      else {
        ComAowagieTextPdfPdfStamperImp_addOrderWithComAowagieTextPdfPdfLayer_withComAowagieTextPdfPdfArray_withJavaUtilMap_(self, parent, (ComAowagieTextPdfPdfArray *) cast_chk(obj, [ComAowagieTextPdfPdfArray class]), ocgmap);
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfStamperImp)

#line 1 "/Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/com/aowagie/text/pdf/PdfStamperImp.java"


#line 1589
@implementation ComAowagieTextPdfPdfStamperImp_PageStamp


#line 1597
- (instancetype)initWithComAowagieTextPdfPdfStamperImp:(ComAowagieTextPdfPdfStamperImp *)stamper
                        withComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                    withComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)pageN {
  ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(self, stamper, reader, pageN);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfPdfStamperImp:withComAowagieTextPdfPdfReader:withComAowagieTextPdfPdfDictionary:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pageN_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "under_", "LComAowagieTextPdfStampContent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "over_", "LComAowagieTextPdfStampContent;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pageResources_", "LComAowagieTextPdfPageResources;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "replacePoint", "I", .constantValue.asInt = ComAowagieTextPdfPdfStamperImp_PageStamp_replacePoint, 0x12, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfStamperImp;LComAowagieTextPdfPdfReader;LComAowagieTextPdfPdfDictionary;", "replacePoint", "LComAowagieTextPdfPdfStamperImp;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfStamperImp_PageStamp = { "PageStamp", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x8, 1, 5, 2, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfStamperImp_PageStamp;
}

@end


#line 1597
void ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(ComAowagieTextPdfPdfStamperImp_PageStamp *self, ComAowagieTextPdfPdfStamperImp *stamper, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfDictionary *pageN) {
  NSObject_init(self);
  
#line 1598
  self->pageN_ = pageN;
  self->pageResources_ = new_ComAowagieTextPdfPageResources_initPackagePrivate();
  ComAowagieTextPdfPdfDictionary *resources = [((ComAowagieTextPdfPdfDictionary *) nil_chk(pageN)) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RESOURCES)];
  [((ComAowagieTextPdfPageResources *) nil_chk(self->pageResources_)) setOriginalResourcesWithComAowagieTextPdfPdfDictionary:resources withIntArray:((ComAowagieTextPdfPdfStamperImp *) nil_chk(stamper))->namePtr_];
}


#line 1597
ComAowagieTextPdfPdfStamperImp_PageStamp *new_ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(ComAowagieTextPdfPdfStamperImp *stamper, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfDictionary *pageN) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfStamperImp_PageStamp, initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_, stamper, reader, pageN)
}


#line 1597
ComAowagieTextPdfPdfStamperImp_PageStamp *create_ComAowagieTextPdfPdfStamperImp_PageStamp_initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_(ComAowagieTextPdfPdfStamperImp *stamper, ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPdfDictionary *pageN) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfStamperImp_PageStamp, initWithComAowagieTextPdfPdfStamperImp_withComAowagieTextPdfPdfReader_withComAowagieTextPdfPdfDictionary_, stamper, reader, pageN)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfStamperImp_PageStamp)

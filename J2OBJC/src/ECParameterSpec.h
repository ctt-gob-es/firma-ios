//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/jce/spec/ECParameterSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ECParameterSpec")
#ifdef RESTRICT_ECParameterSpec
#define INCLUDE_ALL_ECParameterSpec 0
#else
#define INCLUDE_ALL_ECParameterSpec 1
#endif
#undef RESTRICT_ECParameterSpec

#if !defined (OrgSpongycastleJceSpecECParameterSpec_) && (INCLUDE_ALL_ECParameterSpec || defined(INCLUDE_OrgSpongycastleJceSpecECParameterSpec))
#define OrgSpongycastleJceSpecECParameterSpec_

#define RESTRICT_JavaSecuritySpecAlgorithmParameterSpec 1
#define INCLUDE_JavaSecuritySpecAlgorithmParameterSpec 1
#include "java/security/spec/AlgorithmParameterSpec.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class OrgSpongycastleMathEcECCurve;
@class OrgSpongycastleMathEcECPoint;

/*!
 @brief basic domain parameters for an Elliptic Curve public or private key.
 */
@interface OrgSpongycastleJceSpecECParameterSpec : NSObject < JavaSecuritySpecAlgorithmParameterSpec >

#pragma mark Public

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (instancetype)initWithOrgSpongycastleMathEcECCurve:(OrgSpongycastleMathEcECCurve *)curve
                    withOrgSpongycastleMathEcECPoint:(OrgSpongycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h
                                       withByteArray:(IOSByteArray *)seed;

- (jboolean)isEqual:(id)o;

/*!
 @brief return the curve along which the base point lies.
 @return the curve
 */
- (OrgSpongycastleMathEcECCurve *)getCurve;

/*!
 @brief return the base point we are using for these domain parameters.
 @return the base point.
 */
- (OrgSpongycastleMathEcECPoint *)getG;

/*!
 @brief return the cofactor H to the order of G.
 @return the cofactor
 */
- (JavaMathBigInteger *)getH;

/*!
 @brief return the order N of G
 @return the order
 */
- (JavaMathBigInteger *)getN;

/*!
 @brief return the seed used to generate this curve (if available).
 @return the random seed
 */
- (IOSByteArray *)getSeed;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJceSpecECParameterSpec)

FOUNDATION_EXPORT void OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleJceSpecECParameterSpec *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT OrgSpongycastleJceSpecECParameterSpec *new_OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceSpecECParameterSpec *create_OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT void OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleJceSpecECParameterSpec *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT OrgSpongycastleJceSpecECParameterSpec *new_OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceSpecECParameterSpec *create_OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgSpongycastleJceSpecECParameterSpec *self, OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT OrgSpongycastleJceSpecECParameterSpec *new_OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceSpecECParameterSpec *create_OrgSpongycastleJceSpecECParameterSpec_initWithOrgSpongycastleMathEcECCurve_withOrgSpongycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgSpongycastleMathEcECCurve *curve, OrgSpongycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJceSpecECParameterSpec)

#endif

#pragma pop_macro("INCLUDE_ALL_ECParameterSpec")

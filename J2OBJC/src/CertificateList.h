//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/org/spongycastle/asn1/x509/CertificateList.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_CertificateList")
#ifdef RESTRICT_CertificateList
#define INCLUDE_ALL_CertificateList 0
#else
#define INCLUDE_ALL_CertificateList 1
#endif
#undef RESTRICT_CertificateList

#if !defined (OrgSpongycastleAsn1X509CertificateList_) && (INCLUDE_ALL_CertificateList || defined(INCLUDE_OrgSpongycastleAsn1X509CertificateList))
#define OrgSpongycastleAsn1X509CertificateList_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class IOSObjectArray;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1DERBitString;
@class OrgSpongycastleAsn1X500X500Name;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;
@class OrgSpongycastleAsn1X509BCTime;
@class OrgSpongycastleAsn1X509TBSCertList;
@protocol JavaUtilEnumeration;

/*!
 @brief PKIX RFC-2459
  The X.509 v2 CRL syntax is as follows.For signature calculation,
  the data that is to be signed is ASN.1 DER encoded.
 @code

  CertificateList  ::=  SEQUENCE  {
       tbsCertList          TBSCertList,
       signatureAlgorithm   AlgorithmIdentifier,
       signatureValue       BIT STRING  } 
  
@endcode
 */
@interface OrgSpongycastleAsn1X509CertificateList : OrgSpongycastleAsn1ASN1Object {
 @public
  OrgSpongycastleAsn1X509TBSCertList *tbsCertList_;
  OrgSpongycastleAsn1X509AlgorithmIdentifier *sigAlgId_;
  OrgSpongycastleAsn1DERBitString *sig_;
  jboolean isHashCodeSet_;
  jint hashCodeValue_;
}

#pragma mark Public

/*!
 @param seq
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

+ (OrgSpongycastleAsn1X509CertificateList *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                   withBoolean:(jboolean)explicit_;

+ (OrgSpongycastleAsn1X509CertificateList *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1X500X500Name *)getIssuer;

- (OrgSpongycastleAsn1X509BCTime *)getNextUpdate;

- (id<JavaUtilEnumeration>)getRevokedCertificateEnumeration;

- (IOSObjectArray *)getRevokedCertificates;

- (OrgSpongycastleAsn1DERBitString *)getSignature;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (OrgSpongycastleAsn1X509TBSCertList *)getTBSCertList;

- (OrgSpongycastleAsn1X509BCTime *)getThisUpdate;

- (jint)getVersionNumber;

- (NSUInteger)hash;

- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1X509CertificateList)

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509CertificateList, tbsCertList_, OrgSpongycastleAsn1X509TBSCertList *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509CertificateList, sigAlgId_, OrgSpongycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509CertificateList, sig_, OrgSpongycastleAsn1DERBitString *)

FOUNDATION_EXPORT OrgSpongycastleAsn1X509CertificateList *OrgSpongycastleAsn1X509CertificateList_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509CertificateList *OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509CertificateList *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1X509CertificateList *new_OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1X509CertificateList *create_OrgSpongycastleAsn1X509CertificateList_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1X509CertificateList)

#endif

#pragma pop_macro("INCLUDE_ALL_CertificateList")

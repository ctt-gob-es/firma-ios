//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/x509/PKIXAttrCertChecker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_PKIXAttrCertChecker")
#ifdef RESTRICT_PKIXAttrCertChecker
#define INCLUDE_ALL_PKIXAttrCertChecker 0
#else
#define INCLUDE_ALL_PKIXAttrCertChecker 1
#endif
#undef RESTRICT_PKIXAttrCertChecker

#if !defined (OrgSpongycastleX509PKIXAttrCertChecker_) && (INCLUDE_ALL_PKIXAttrCertChecker || defined(INCLUDE_OrgSpongycastleX509PKIXAttrCertChecker))
#define OrgSpongycastleX509PKIXAttrCertChecker_

@class JavaSecurityCertCertPath;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;
@protocol OrgSpongycastleX509X509AttributeCertificate;

@interface OrgSpongycastleX509PKIXAttrCertChecker : NSObject < NSCopying >

#pragma mark Public

- (instancetype)init;

/*!
 @brief Performs checks on the specified attribute certificate.Every handled
  extension is rmeoved from the <code>unresolvedCritExts</code>
  collection.
 @param attrCert The attribute certificate to be checked.
 @param certPath The certificate path which belongs to the attribute             certificate issuer public key certificate.
 @param holderCertPath The certificate path which belongs to the holder             certificate.
 @param unresolvedCritExts a  <code> Collection </code>  of OID strings
              representing the current set of unresolved critical extensions
 @throw CertPathValidatorExceptionif the specified attribute certificate
              does not pass the check.
 */
- (void)checkWithOrgSpongycastleX509X509AttributeCertificate:(id<OrgSpongycastleX509X509AttributeCertificate>)attrCert
                                withJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)certPath
                                withJavaSecurityCertCertPath:(JavaSecurityCertCertPath *)holderCertPath
                                      withJavaUtilCollection:(id<JavaUtilCollection>)unresolvedCritExts;

/*!
 @brief Returns a clone of this object.
 @return a copy of this <code>PKIXAttrCertChecker</code>
 */
- (id)java_clone;

/*!
 @brief Returns an immutable <code>Set</code> of X.509 attribute certificate
  extensions that this <code>PKIXAttrCertChecker</code> supports or 
 <code>null</code> if no extensions are supported.
 <p>
  Each element of the set is a <code>String</code> representing the
  Object Identifier (OID) of the X.509 extension that is supported. 
 <p>
  All X.509 attribute certificate extensions that a 
 <code>PKIXAttrCertChecker</code> might possibly be able to process
  should be included in the set.
 @return an immutable <code>Set</code> of X.509 extension OIDs (in
          <code>String</code> format) supported by this
          <code>PKIXAttrCertChecker</code>, or <code>null</code> if no
          extensions are supported
 */
- (id<JavaUtilSet>)getSupportedExtensions;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleX509PKIXAttrCertChecker)

FOUNDATION_EXPORT void OrgSpongycastleX509PKIXAttrCertChecker_init(OrgSpongycastleX509PKIXAttrCertChecker *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleX509PKIXAttrCertChecker)

#endif

#pragma pop_macro("INCLUDE_ALL_PKIXAttrCertChecker")

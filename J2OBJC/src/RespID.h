//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/ocsp/RespID.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_RespID")
#ifdef RESTRICT_RespID
#define INCLUDE_ALL_RespID 0
#else
#define INCLUDE_ALL_RespID 1
#endif
#undef RESTRICT_RespID

#if !defined (OrgSpongycastleCertOcspRespID_) && (INCLUDE_ALL_RespID || defined(INCLUDE_OrgSpongycastleCertOcspRespID))
#define OrgSpongycastleCertOcspRespID_

@class OrgSpongycastleAsn1OcspResponderID;
@class OrgSpongycastleAsn1X500X500Name;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;
@class OrgSpongycastleAsn1X509SubjectPublicKeyInfo;
@protocol OrgSpongycastleOperatorDigestCalculator;

/*!
 @brief Carrier for a ResponderID.
 */
@interface OrgSpongycastleCertOcspRespID : NSObject {
 @public
  OrgSpongycastleAsn1OcspResponderID *id__;
}

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1OcspResponderID:(OrgSpongycastleAsn1OcspResponderID *)id_;

/*!
 @brief Calculate a RespID based on the public key of the responder.
 @param subjectPublicKeyInfo the info structure for the responder public key.
 @param digCalc a SHA-1 digest calculator.
 @throw OCSPExceptionon exception creating ID.
 */
- (instancetype)initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo:(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *)subjectPublicKeyInfo
                        withOrgSpongycastleOperatorDigestCalculator:(id<OrgSpongycastleOperatorDigestCalculator>)digCalc;

- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)name;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (OrgSpongycastleAsn1OcspResponderID *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleCertOcspRespID)

J2OBJC_FIELD_SETTER(OrgSpongycastleCertOcspRespID, id__, OrgSpongycastleAsn1OcspResponderID *)

inline OrgSpongycastleAsn1X509AlgorithmIdentifier *OrgSpongycastleCertOcspRespID_get_HASH_SHA1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleAsn1X509AlgorithmIdentifier *OrgSpongycastleCertOcspRespID_HASH_SHA1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleCertOcspRespID, HASH_SHA1, OrgSpongycastleAsn1X509AlgorithmIdentifier *)

FOUNDATION_EXPORT void OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1OcspResponderID_(OrgSpongycastleCertOcspRespID *self, OrgSpongycastleAsn1OcspResponderID *id_);

FOUNDATION_EXPORT OrgSpongycastleCertOcspRespID *new_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1OcspResponderID_(OrgSpongycastleAsn1OcspResponderID *id_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCertOcspRespID *create_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1OcspResponderID_(OrgSpongycastleAsn1OcspResponderID *id_);

FOUNDATION_EXPORT void OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleCertOcspRespID *self, OrgSpongycastleAsn1X500X500Name *name);

FOUNDATION_EXPORT OrgSpongycastleCertOcspRespID *new_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X500X500Name *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCertOcspRespID *create_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X500X500Name_(OrgSpongycastleAsn1X500X500Name *name);

FOUNDATION_EXPORT void OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_(OrgSpongycastleCertOcspRespID *self, OrgSpongycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo, id<OrgSpongycastleOperatorDigestCalculator> digCalc);

FOUNDATION_EXPORT OrgSpongycastleCertOcspRespID *new_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo, id<OrgSpongycastleOperatorDigestCalculator> digCalc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCertOcspRespID *create_OrgSpongycastleCertOcspRespID_initWithOrgSpongycastleAsn1X509SubjectPublicKeyInfo_withOrgSpongycastleOperatorDigestCalculator_(OrgSpongycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo, id<OrgSpongycastleOperatorDigestCalculator> digCalc);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCertOcspRespID)

#endif

#pragma pop_macro("INCLUDE_ALL_RespID")

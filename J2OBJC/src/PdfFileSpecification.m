//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfFileSpecification.java
//

#include "BaseFont.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "PdfBoolean.h"
#include "PdfDictionary.h"
#include "PdfEFStream.h"
#include "PdfFileSpecification.h"
#include "PdfIndirectObject.h"
#include "PdfIndirectReference.h"
#include "PdfName.h"
#include "PdfNumber.h"
#include "PdfObject.h"
#include "PdfStream.h"
#include "PdfString.h"
#include "PdfWriter.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/net/URL.h"

#if !__has_feature(objc_arc)
#error "PdfFileSpecification must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfFileSpecification () {
 @public
  ComAowagieTextPdfPdfWriter *writer_;
  ComAowagieTextPdfPdfIndirectReference *ref_;
}

/*!
 @brief Creates a file specification with the file embedded.The file may
  come from the file system or from a byte array.
 The data is flate compressed.
 @param writer the  <CODE> PdfWriter </CODE>
 @param filePath the file path
 @param fileDisplay the file information that is presented to the user
 @param fileStore the byte array with the file. If it is not  <CODE> null </CODE>
   it takes precedence over  <CODE> filePath </CODE>
 @param compressionLevel the compression level to be used for compressing the file  it takes precedence over 
  <CODE> filePath </CODE>
 @throw IOExceptionon error
 @return the file specification
 @since 2.1.3
 */
+ (ComAowagieTextPdfPdfFileSpecification *)fileEmbeddedWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                                         withNSString:(NSString *)filePath
                                                                         withNSString:(NSString *)fileDisplay
                                                                        withByteArray:(IOSByteArray *)fileStore
                                                                              withInt:(jint)compressionLevel;

/*!
 @brief Creates a file specification with the file embedded.The file may
  come from the file system or from a byte array.
 @param writer the  <CODE> PdfWriter </CODE>
 @param filePath the file path
 @param fileDisplay the file information that is presented to the user
 @param fileStore the byte array with the file. If it is not  <CODE> null </CODE>
   it takes precedence over  <CODE> filePath </CODE>
 @param mimeType the optional mimeType
 @param fileParameter the optional extra file parameters such as the creation or modification date
 @param compressionLevel the level of compression
 @throw IOExceptionon error
 @return the file specification
 @since 2.1.3
 */
+ (ComAowagieTextPdfPdfFileSpecification *)fileEmbeddedWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                                         withNSString:(NSString *)filePath
                                                                         withNSString:(NSString *)fileDisplay
                                                                        withByteArray:(IOSByteArray *)fileStore
                                                                         withNSString:(NSString *)mimeType
                                                   withComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)fileParameter
                                                                              withInt:(jint)compressionLevel;

/*!
 @brief Adds the unicode file name (the key /UF).This entry was introduced
  in PDF 1.7.
 The filename must have the slash and backslash escaped
  according to the file specification rules.
 @param filename the filename
 @param unicode if true, the filename is UTF-16BE encoded; otherwise PDFDocEncoding is used;
 */
- (void)setUnicodeFileNameWithNSString:(NSString *)filename
                           withBoolean:(jboolean)unicode;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfFileSpecification, writer_, ComAowagieTextPdfPdfWriter *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfFileSpecification, ref_, ComAowagieTextPdfPdfIndirectReference *)

__attribute__((unused)) static ComAowagieTextPdfPdfFileSpecification *ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withInt_(ComAowagieTextPdfPdfWriter *writer, NSString *filePath, NSString *fileDisplay, IOSByteArray *fileStore, jint compressionLevel);

__attribute__((unused)) static ComAowagieTextPdfPdfFileSpecification *ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withNSString_withComAowagieTextPdfPdfDictionary_withInt_(ComAowagieTextPdfPdfWriter *writer, NSString *filePath, NSString *fileDisplay, IOSByteArray *fileStore, NSString *mimeType, ComAowagieTextPdfPdfDictionary *fileParameter, jint compressionLevel);

__attribute__((unused)) static void ComAowagieTextPdfPdfFileSpecification_setUnicodeFileNameWithNSString_withBoolean_(ComAowagieTextPdfPdfFileSpecification *self, NSString *filename, jboolean unicode);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfFileSpecification.java"


#line 59
@implementation ComAowagieTextPdfPdfFileSpecification

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 64
- (instancetype)init {
  ComAowagieTextPdfPdfFileSpecification_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 81
+ (ComAowagieTextPdfPdfFileSpecification *)fileEmbeddedWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                                         withNSString:(NSString *)filePath
                                                                         withNSString:(NSString *)fileDisplay
                                                                        withByteArray:(IOSByteArray *)fileStore {
  return ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_(writer, filePath, fileDisplay, fileStore);
}


#line 99
+ (ComAowagieTextPdfPdfFileSpecification *)fileEmbeddedWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                                         withNSString:(NSString *)filePath
                                                                         withNSString:(NSString *)fileDisplay
                                                                        withByteArray:(IOSByteArray *)fileStore
                                                                              withInt:(jint)compressionLevel {
  return ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withInt_(writer, filePath, fileDisplay, fileStore, compressionLevel);
}


#line 123
+ (ComAowagieTextPdfPdfFileSpecification *)fileEmbeddedWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                                         withNSString:(NSString *)filePath
                                                                         withNSString:(NSString *)fileDisplay
                                                                        withByteArray:(IOSByteArray *)fileStore
                                                                         withNSString:(NSString *)mimeType
                                                   withComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)fileParameter
                                                                              withInt:(jint)compressionLevel {
  return ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withNSString_withComAowagieTextPdfPdfDictionary_withInt_(writer, filePath, fileDisplay, fileStore, mimeType, fileParameter, compressionLevel);
}


#line 189
+ (ComAowagieTextPdfPdfFileSpecification *)fileExternWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                                       withNSString:(NSString *)filePath {
  return ComAowagieTextPdfPdfFileSpecification_fileExternWithComAowagieTextPdfPdfWriter_withNSString_(writer, filePath);
}


#line 203
- (ComAowagieTextPdfPdfIndirectReference *)getReference {
  if (self->ref_ != nil) {
    return self->ref_;
  }
  self->ref_ = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([((ComAowagieTextPdfPdfWriter *) nil_chk(self->writer_)) addToBodyWithComAowagieTextPdfPdfObject:self])) getIndirectReference];
  return self->ref_;
}


#line 217
- (void)setMultiByteFileNameWithByteArray:(IOSByteArray *)fileName {
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, F) withComAowagieTextPdfPdfObject:[new_ComAowagieTextPdfPdfString_initWithByteArray_(fileName) setHexWritingWithBoolean:true]];
}


#line 228
- (void)setUnicodeFileNameWithNSString:(NSString *)filename
                           withBoolean:(jboolean)unicode {
  ComAowagieTextPdfPdfFileSpecification_setUnicodeFileNameWithNSString_withBoolean_(self, filename, unicode);
}


#line 238
- (void)setVolatileWithBoolean:(jboolean)volatile_file {
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, V) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfBoolean_initWithBoolean_(volatile_file)];
}


#line 247
- (void)addDescriptionWithNSString:(NSString *)description_
                       withBoolean:(jboolean)unicode {
  
#line 248
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DESC) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(description_, unicode ? ComAowagieTextPdfPdfObject_TEXT_UNICODE : ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfFileSpecification;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfFileSpecification;", 0xa, 0, 3, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfFileSpecification;", 0xa, 0, 4, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfFileSpecification;", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 13, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(fileEmbeddedWithComAowagieTextPdfPdfWriter:withNSString:withNSString:withByteArray:);
  methods[2].selector = @selector(fileEmbeddedWithComAowagieTextPdfPdfWriter:withNSString:withNSString:withByteArray:withInt:);
  methods[3].selector = @selector(fileEmbeddedWithComAowagieTextPdfPdfWriter:withNSString:withNSString:withByteArray:withNSString:withComAowagieTextPdfPdfDictionary:withInt:);
  methods[4].selector = @selector(fileExternWithComAowagieTextPdfPdfWriter:withNSString:);
  methods[5].selector = @selector(getReference);
  methods[6].selector = @selector(setMultiByteFileNameWithByteArray:);
  methods[7].selector = @selector(setUnicodeFileNameWithNSString:withBoolean:);
  methods[8].selector = @selector(setVolatileWithBoolean:);
  methods[9].selector = @selector(addDescriptionWithNSString:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", "LComAowagieTextPdfPdfWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ref_", "LComAowagieTextPdfPdfIndirectReference;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "fileEmbedded", "LComAowagieTextPdfPdfWriter;LNSString;LNSString;[B", "LJavaIoIOException;", "LComAowagieTextPdfPdfWriter;LNSString;LNSString;[BI", "LComAowagieTextPdfPdfWriter;LNSString;LNSString;[BLNSString;LComAowagieTextPdfPdfDictionary;I", "fileExtern", "LComAowagieTextPdfPdfWriter;LNSString;", "setMultiByteFileName", "[B", "setUnicodeFileName", "LNSString;Z", "setVolatile", "Z", "addDescription" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfFileSpecification = { "PdfFileSpecification", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfFileSpecification;
}

@end


#line 64
void ComAowagieTextPdfPdfFileSpecification_init(ComAowagieTextPdfPdfFileSpecification *self) {
  ComAowagieTextPdfPdfDictionary_initWithComAowagieTextPdfPdfName_(self, JreLoadStatic(ComAowagieTextPdfPdfName, FILESPEC));
}


#line 64
ComAowagieTextPdfPdfFileSpecification *new_ComAowagieTextPdfPdfFileSpecification_init() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfFileSpecification, init)
}


#line 64
ComAowagieTextPdfPdfFileSpecification *create_ComAowagieTextPdfPdfFileSpecification_init() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfFileSpecification, init)
}


#line 81
ComAowagieTextPdfPdfFileSpecification *ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_(ComAowagieTextPdfPdfWriter *writer, NSString *filePath, NSString *fileDisplay, IOSByteArray *fileStore) {
  ComAowagieTextPdfPdfFileSpecification_initialize();
  
#line 82
  return ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withInt_(writer, filePath, fileDisplay, fileStore, ComAowagieTextPdfPdfStream_BEST_COMPRESSION);
}


#line 99
ComAowagieTextPdfPdfFileSpecification *ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withInt_(ComAowagieTextPdfPdfWriter *writer, NSString *filePath, NSString *fileDisplay, IOSByteArray *fileStore, jint compressionLevel) {
  ComAowagieTextPdfPdfFileSpecification_initialize();
  
#line 100
  return ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withNSString_withComAowagieTextPdfPdfDictionary_withInt_(writer, filePath, fileDisplay, fileStore, nil, nil, compressionLevel);
}


#line 123
ComAowagieTextPdfPdfFileSpecification *ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_withNSString_withComAowagieTextPdfPdfDictionary_withInt_(ComAowagieTextPdfPdfWriter *writer, NSString *filePath, NSString *fileDisplay, IOSByteArray *fileStore, NSString *mimeType, ComAowagieTextPdfPdfDictionary *fileParameter, jint compressionLevel) {
  ComAowagieTextPdfPdfFileSpecification_initialize();
  
#line 124
  ComAowagieTextPdfPdfFileSpecification *fs = new_ComAowagieTextPdfPdfFileSpecification_init();
  fs->writer_ = writer;
  [fs putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, F) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(fileDisplay)];
  ComAowagieTextPdfPdfFileSpecification_setUnicodeFileNameWithNSString_withBoolean_(fs, fileDisplay, false);
  ComAowagieTextPdfPdfEFStream *stream;
  JavaIoInputStream *in = nil;
  ComAowagieTextPdfPdfIndirectReference *ref;
  ComAowagieTextPdfPdfIndirectReference *refFileLength;
  @try {
    refFileLength = [((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) getPdfIndirectReference];
    if (fileStore == nil) {
      JavaIoFile *file = new_JavaIoFile_initWithNSString_(filePath);
      if ([file canRead]) {
        in = new_JavaIoFileInputStream_initWithNSString_(filePath);
      }
      else {
        if ([((NSString *) nil_chk(filePath)) java_hasPrefix:@"file:/"] || [filePath java_hasPrefix:@"http://"] || [filePath java_hasPrefix:@"https://"] || [filePath java_hasPrefix:@"jar:"]) {
          in = [new_JavaNetURL_initWithNSString_(filePath) openStream];
        }
        else {
          in = ComAowagieTextPdfBaseFont_getResourceStreamWithNSString_(filePath);
          if (in == nil) {
            @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$", filePath, @" not found as file or resource."));
          }
        }
      }
      stream = new_ComAowagieTextPdfPdfEFStream_initPackagePrivateWithJavaIoInputStream_withComAowagieTextPdfPdfWriter_(in, writer);
    }
    else {
      
#line 152
      stream = new_ComAowagieTextPdfPdfEFStream_initPackagePrivateWithByteArray_(fileStore);
    }
    [stream putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, TYPE) withComAowagieTextPdfPdfObject:JreLoadStatic(ComAowagieTextPdfPdfName, EMBEDDEDFILE)];
    [stream flateCompressWithInt:compressionLevel];
    [stream putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARAMS) withComAowagieTextPdfPdfObject:refFileLength];
    if (mimeType != nil) {
      [stream putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfName_initWithNSString_(mimeType)];
    }
    ref = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([writer addToBodyWithComAowagieTextPdfPdfObject:stream])) getIndirectReference];
    if (fileStore == nil) {
      [stream writeLength];
    }
    ComAowagieTextPdfPdfDictionary *params = new_ComAowagieTextPdfPdfDictionary_init();
    if (fileParameter != nil) {
      [params mergeWithComAowagieTextPdfPdfDictionary:fileParameter];
    }
    [params putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SIZE) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([stream getRawLength])];
    (void) [writer addToBodyWithComAowagieTextPdfPdfObject:params withComAowagieTextPdfPdfIndirectReference:refFileLength];
  }
  @finally {
    if (in != nil) {
      @try {
        
#line 173
        [in close];
      }
      @catch (
#line 173
      JavaLangException *e) {
      }
    }
  }
  
#line 176
  ComAowagieTextPdfPdfDictionary *f = new_ComAowagieTextPdfPdfDictionary_init();
  [f putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, F) withComAowagieTextPdfPdfObject:ref];
  [f putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, UF) withComAowagieTextPdfPdfObject:ref];
  [fs putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, EF) withComAowagieTextPdfPdfObject:f];
  return fs;
}


#line 189
ComAowagieTextPdfPdfFileSpecification *ComAowagieTextPdfPdfFileSpecification_fileExternWithComAowagieTextPdfPdfWriter_withNSString_(ComAowagieTextPdfPdfWriter *writer, NSString *filePath) {
  ComAowagieTextPdfPdfFileSpecification_initialize();
  
#line 190
  ComAowagieTextPdfPdfFileSpecification *fs = new_ComAowagieTextPdfPdfFileSpecification_init();
  fs->writer_ = writer;
  [fs putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, F) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(filePath)];
  ComAowagieTextPdfPdfFileSpecification_setUnicodeFileNameWithNSString_withBoolean_(fs, filePath, false);
  return fs;
}


#line 228
void ComAowagieTextPdfPdfFileSpecification_setUnicodeFileNameWithNSString_withBoolean_(ComAowagieTextPdfPdfFileSpecification *self, NSString *filename, jboolean unicode) {
  [self putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, UF) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(filename, unicode ? ComAowagieTextPdfPdfObject_TEXT_UNICODE : ComAowagieTextPdfPdfObject_TEXT_PDFDOCENCODING)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfFileSpecification)

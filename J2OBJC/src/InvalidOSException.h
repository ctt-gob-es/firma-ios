//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/pades-ios-mini/src/main/java/es/gob/afirma/core/InvalidOSException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_InvalidOSException")
#ifdef RESTRICT_InvalidOSException
#define INCLUDE_ALL_InvalidOSException 0
#else
#define INCLUDE_ALL_InvalidOSException 1
#endif
#undef RESTRICT_InvalidOSException

#if !defined (EsGobAfirmaCoreInvalidOSException_) && (INCLUDE_ALL_InvalidOSException || defined(INCLUDE_EsGobAfirmaCoreInvalidOSException))
#define EsGobAfirmaCoreInvalidOSException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

/*!
 @brief Indica que se necesita un sistema operativo distinto al actual.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s
 */
@interface EsGobAfirmaCoreInvalidOSException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Crea una nueva instancia de la excepci&oacute;n.
 @param expectedOS Sistema operativo esperado
 */
- (instancetype)initWithNSString:(NSString *)expectedOS;

/*!
 @brief Obtiene el sistema operativo esperado.
 @return nombre del sistema operativo esperado
 */
- (NSString *)getExpectedOS;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreInvalidOSException)

FOUNDATION_EXPORT void EsGobAfirmaCoreInvalidOSException_initWithNSString_(EsGobAfirmaCoreInvalidOSException *self, NSString *expectedOS);

FOUNDATION_EXPORT EsGobAfirmaCoreInvalidOSException *new_EsGobAfirmaCoreInvalidOSException_initWithNSString_(NSString *expectedOS) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreInvalidOSException *create_EsGobAfirmaCoreInvalidOSException_initWithNSString_(NSString *expectedOS);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreInvalidOSException)

#endif

#pragma pop_macro("INCLUDE_ALL_InvalidOSException")

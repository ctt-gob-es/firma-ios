//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/SignerId.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "SignerId.h"
#include "SignerInformation.h"
#include "X500Name.h"
#include "X509CertificateHolderSelector.h"
#include "java/math/BigInteger.h"

#if !__has_feature(objc_arc)
#error "SignerId must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCmsSignerId () {
 @public
  OrgSpongycastleCertSelectorX509CertificateHolderSelector *baseSelector_;
}

- (instancetype)initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector:(OrgSpongycastleCertSelectorX509CertificateHolderSelector *)baseSelector;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCmsSignerId, baseSelector_, OrgSpongycastleCertSelectorX509CertificateHolderSelector *)

__attribute__((unused)) static void OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(OrgSpongycastleCmsSignerId *self, OrgSpongycastleCertSelectorX509CertificateHolderSelector *baseSelector);

__attribute__((unused)) static OrgSpongycastleCmsSignerId *new_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(OrgSpongycastleCertSelectorX509CertificateHolderSelector *baseSelector) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleCmsSignerId *create_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(OrgSpongycastleCertSelectorX509CertificateHolderSelector *baseSelector);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/SignerId.java"


#line 12
@implementation OrgSpongycastleCmsSignerId


#line 17
- (instancetype)initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector:(OrgSpongycastleCertSelectorX509CertificateHolderSelector *)baseSelector {
  OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(self, baseSelector);
  return self;
}


#line 27
- (instancetype)initWithByteArray:(IOSByteArray *)subjectKeyId {
  OrgSpongycastleCmsSignerId_initWithByteArray_(self, subjectKeyId);
  return self;
}


#line 39
- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuer, serialNumber);
  return self;
}


#line 52
- (instancetype)initWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber
                                          withByteArray:(IOSByteArray *)subjectKeyId {
  OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self, issuer, serialNumber, subjectKeyId);
  return self;
}


#line 57
- (OrgSpongycastleAsn1X500X500Name *)getIssuer {
  
#line 59
  return [((OrgSpongycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) getIssuer];
}


#line 62
- (JavaMathBigInteger *)getSerialNumber {
  
#line 64
  return [((OrgSpongycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) getSerialNumber];
}


#line 67
- (IOSByteArray *)getSubjectKeyIdentifier {
  
#line 69
  return [((OrgSpongycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) getSubjectKeyIdentifier];
}


#line 72
- (NSUInteger)hash {
  
#line 74
  return ((jint) [((OrgSpongycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) hash]);
}


#line 77
- (jboolean)isEqual:(id)o {
  
#line 80
  if (!([o isKindOfClass:[OrgSpongycastleCmsSignerId class]])) {
    
#line 82
    return false;
  }
  
#line 85
  OrgSpongycastleCmsSignerId *id_ = (OrgSpongycastleCmsSignerId *) cast_chk(o, [OrgSpongycastleCmsSignerId class]);
  
#line 87
  return [((OrgSpongycastleCertSelectorX509CertificateHolderSelector *) nil_chk(self->baseSelector_)) isEqual:((OrgSpongycastleCmsSignerId *) nil_chk(id_))->baseSelector_];
}


#line 90
- (jboolean)matchWithId:(id)obj {
  
#line 92
  if ([obj isKindOfClass:[OrgSpongycastleCmsSignerInformation class]]) {
    
#line 94
    return [((OrgSpongycastleCmsSignerId *) nil_chk([((OrgSpongycastleCmsSignerInformation *) nil_chk(((OrgSpongycastleCmsSignerInformation *) obj))) getSID])) isEqual:self];
  }
  
#line 97
  return [((OrgSpongycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) matchWithId:obj];
}


#line 100
- (id)java_clone {
  
#line 102
  return new_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(self->baseSelector_);
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithOrgSpongycastleAsn1X500X500Name:withJavaMathBigInteger:withByteArray:);
  methods[4].selector = @selector(getIssuer);
  methods[5].selector = @selector(getSerialNumber);
  methods[6].selector = @selector(getSubjectKeyIdentifier);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(matchWithId:);
  methods[10].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseSelector_", "LOrgSpongycastleCertSelectorX509CertificateHolderSelector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleCertSelectorX509CertificateHolderSelector;", "[B", "LOrgSpongycastleAsn1X500X500Name;LJavaMathBigInteger;", "LOrgSpongycastleAsn1X500X500Name;LJavaMathBigInteger;[B", "hashCode", "equals", "LNSObject;", "match", "clone" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsSignerId = { "SignerId", "org.spongycastle.cms", ptrTable, methods, fields, 7, 0x1, 11, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCmsSignerId;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 17
void OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(OrgSpongycastleCmsSignerId *self, OrgSpongycastleCertSelectorX509CertificateHolderSelector *baseSelector) {
  NSObject_init(self);
  self->baseSelector_ = baseSelector;
}


#line 17
OrgSpongycastleCmsSignerId *new_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(OrgSpongycastleCertSelectorX509CertificateHolderSelector *baseSelector) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerId, initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_, baseSelector)
}


#line 17
OrgSpongycastleCmsSignerId *create_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(OrgSpongycastleCertSelectorX509CertificateHolderSelector *baseSelector) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerId, initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_, baseSelector)
}


#line 27
void OrgSpongycastleCmsSignerId_initWithByteArray_(OrgSpongycastleCmsSignerId *self, IOSByteArray *subjectKeyId) {
  OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self,
#line 29
  nil, nil, subjectKeyId);
}


#line 27
OrgSpongycastleCmsSignerId *new_OrgSpongycastleCmsSignerId_initWithByteArray_(IOSByteArray *subjectKeyId) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerId, initWithByteArray_, subjectKeyId)
}


#line 27
OrgSpongycastleCmsSignerId *create_OrgSpongycastleCmsSignerId_initWithByteArray_(IOSByteArray *subjectKeyId) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerId, initWithByteArray_, subjectKeyId)
}


#line 39
void OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleCmsSignerId *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self,
#line 41
  issuer, serialNumber, nil);
}


#line 39
OrgSpongycastleCmsSignerId *new_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerId, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serialNumber)
}


#line 39
OrgSpongycastleCmsSignerId *create_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerId, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serialNumber)
}


#line 52
void OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgSpongycastleCmsSignerId *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  OrgSpongycastleCmsSignerId_initWithOrgSpongycastleCertSelectorX509CertificateHolderSelector_(self, new_OrgSpongycastleCertSelectorX509CertificateHolderSelector_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(
#line 54
  issuer, serialNumber, subjectKeyId));
}


#line 52
OrgSpongycastleCmsSignerId *new_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsSignerId, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_, issuer, serialNumber, subjectKeyId)
}


#line 52
OrgSpongycastleCmsSignerId *create_OrgSpongycastleCmsSignerId_initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsSignerId, initWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_, issuer, serialNumber, subjectKeyId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsSignerId)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/cms/OtherRevocationInfoFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OtherRevocationInfoFormat")
#ifdef RESTRICT_OtherRevocationInfoFormat
#define INCLUDE_ALL_OtherRevocationInfoFormat 0
#else
#define INCLUDE_ALL_OtherRevocationInfoFormat 1
#endif
#undef RESTRICT_OtherRevocationInfoFormat

#if !defined (OrgSpongycastleAsn1CmsOtherRevocationInfoFormat_) && (INCLUDE_ALL_OtherRevocationInfoFormat || defined(INCLUDE_OrgSpongycastleAsn1CmsOtherRevocationInfoFormat))
#define OrgSpongycastleAsn1CmsOtherRevocationInfoFormat_

#define RESTRICT_ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "ASN1Object.h"

@class OrgSpongycastleAsn1ASN1ObjectIdentifier;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@protocol OrgSpongycastleAsn1ASN1Encodable;

/*!
 @brief <a href="http://tools.ietf.org/html/rfc5652#section-10.2.1">RFC 5652</a>: OtherRevocationInfoFormat object.
 <p>
  @code

  OtherRevocationInfoFormat ::= SEQUENCE {
       otherRevInfoFormat OBJECT IDENTIFIER,
       otherRevInfo ANY DEFINED BY otherRevInfoFormat } 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsOtherRevocationInfoFormat : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)otherRevInfoFormat
                           withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)otherRevInfo;

- (id<OrgSpongycastleAsn1ASN1Encodable>)getInfo;

- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getInfoFormat;

/*!
 @brief Return a OtherRevocationInfoFormat object from a tagged object.
 @param obj the tagged object holding the object we want.
 @param explicit_ true if the object is meant to be explicitly               tagged false otherwise.
 @throw IllegalArgumentExceptionif the object held by the
           tagged object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsOtherRevocationInfoFormat *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                            withBoolean:(jboolean)explicit_;

/*!
 @brief Return a OtherRevocationInfoFormat object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>OtherRevocationInfoFormat</code> object 
 <li> <code>ASN1Sequence</code> input formats with OtherRevocationInfoFormat structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsOtherRevocationInfoFormat *)getInstanceWithId:(id)obj;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsOtherRevocationInfoFormat)

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsOtherRevocationInfoFormat_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1CmsOtherRevocationInfoFormat *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *otherRevInfoFormat, id<OrgSpongycastleAsn1ASN1Encodable> otherRevInfo);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRevocationInfoFormat *new_OrgSpongycastleAsn1CmsOtherRevocationInfoFormat_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1ASN1ObjectIdentifier *otherRevInfoFormat, id<OrgSpongycastleAsn1ASN1Encodable> otherRevInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRevocationInfoFormat *create_OrgSpongycastleAsn1CmsOtherRevocationInfoFormat_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1ASN1ObjectIdentifier *otherRevInfoFormat, id<OrgSpongycastleAsn1ASN1Encodable> otherRevInfo);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRevocationInfoFormat *OrgSpongycastleAsn1CmsOtherRevocationInfoFormat_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRevocationInfoFormat *OrgSpongycastleAsn1CmsOtherRevocationInfoFormat_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsOtherRevocationInfoFormat)

#endif

#pragma pop_macro("INCLUDE_ALL_OtherRevocationInfoFormat")

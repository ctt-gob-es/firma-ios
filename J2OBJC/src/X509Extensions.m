//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/X509Extensions.java
//

#include "ASN1Boolean.h"
#include "ASN1Encodable.h"
#include "ASN1EncodableVector.h"
#include "ASN1Object.h"
#include "ASN1ObjectIdentifier.h"
#include "ASN1OctetString.h"
#include "ASN1Primitive.h"
#include "ASN1Sequence.h"
#include "ASN1TaggedObject.h"
#include "DERSequence.h"
#include "Extensions.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "X509Extension.h"
#include "X509Extensions.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"

#if !__has_feature(objc_arc)
#error "X509Extensions must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1X509X509Extensions () {
 @public
  JavaUtilHashtable *extensions_;
  JavaUtilVector *ordering_;
}

- (IOSObjectArray *)getExtensionOIDsWithBoolean:(jboolean)isCritical;

- (IOSObjectArray *)toOidArrayWithJavaUtilVector:(JavaUtilVector *)oidVec;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509X509Extensions, extensions_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgSpongycastleAsn1X509X509Extensions, ordering_, JavaUtilVector *)

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleAsn1X509X509Extensions_getExtensionOIDsWithBoolean_(OrgSpongycastleAsn1X509X509Extensions *self, jboolean isCritical);

__attribute__((unused)) static IOSObjectArray *OrgSpongycastleAsn1X509X509Extensions_toOidArrayWithJavaUtilVector_(OrgSpongycastleAsn1X509X509Extensions *self, JavaUtilVector *oidVec);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/x509/X509Extensions.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleAsn1X509X509Extensions)

OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_SubjectDirectoryAttributes;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_SubjectKeyIdentifier;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_KeyUsage;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_PrivateKeyUsagePeriod;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_SubjectAlternativeName;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_IssuerAlternativeName;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_BasicConstraints;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_CRLNumber;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_ReasonCode;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_InstructionCode;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_InvalidityDate;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_DeltaCRLIndicator;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_IssuingDistributionPoint;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_CertificateIssuer;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_NameConstraints;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_CRLDistributionPoints;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_CertificatePolicies;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_PolicyMappings;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_AuthorityKeyIdentifier;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_PolicyConstraints;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_ExtendedKeyUsage;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_FreshestCRL;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_InhibitAnyPolicy;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_AuthorityInfoAccess;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_SubjectInfoAccess;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_LogoType;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_BiometricInfo;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_QCStatements;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_AuditIdentity;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_NoRevAvail;
OrgSpongycastleAsn1ASN1ObjectIdentifier *OrgSpongycastleAsn1X509X509Extensions_TargetInformation;


#line 20
@implementation OrgSpongycastleAsn1X509X509Extensions


#line 212
+ (OrgSpongycastleAsn1X509X509Extensions *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                  withBoolean:(jboolean)explicit_ {
  return OrgSpongycastleAsn1X509X509Extensions_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 219
+ (OrgSpongycastleAsn1X509X509Extensions *)getInstanceWithId:(id)obj {
  return OrgSpongycastleAsn1X509X509Extensions_getInstanceWithId_(obj);
}


#line 250
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  OrgSpongycastleAsn1X509X509Extensions_initWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 281
- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilHashtable_(self, extensions);
  return self;
}


#line 293
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)extensions {
  OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilHashtable_(self, ordering, extensions);
  return self;
}


#line 331
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)objectIDs
                    withJavaUtilVector:(JavaUtilVector *)values {
  OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilVector_(self, objectIDs, values);
  return self;
}


#line 359
- (id<JavaUtilEnumeration>)oids {
  
#line 361
  return [((JavaUtilVector *) nil_chk(ordering_)) elements];
}


#line 370
- (OrgSpongycastleAsn1X509X509Extension *)getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 373
  return (OrgSpongycastleAsn1X509X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:oid], [OrgSpongycastleAsn1X509X509Extension class]);
}


#line 386
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 388
  OrgSpongycastleAsn1ASN1EncodableVector *vec = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  id<JavaUtilEnumeration> e = [((JavaUtilVector *) nil_chk(ordering_)) elements];
  
#line 391
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 393
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    OrgSpongycastleAsn1X509X509Extension *ext = (OrgSpongycastleAsn1X509X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:oid], [OrgSpongycastleAsn1X509X509Extension class]);
    OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
    
#line 397
    [v addWithOrgSpongycastleAsn1ASN1Encodable:oid];
    
#line 399
    if ([((OrgSpongycastleAsn1X509X509Extension *) nil_chk(ext)) isCritical]) {
      
#line 401
      [v addWithOrgSpongycastleAsn1ASN1Encodable:JreLoadStatic(OrgSpongycastleAsn1ASN1Boolean, TRUE)];
    }
    
#line 404
    [v addWithOrgSpongycastleAsn1ASN1Encodable:[ext getValue]];
    
#line 406
    [vec addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v)];
  }
  
#line 409
  return new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(vec);
}


#line 412
- (jboolean)equivalentWithOrgSpongycastleAsn1X509X509Extensions:(OrgSpongycastleAsn1X509X509Extensions *)other {
  
#line 415
  if ([((JavaUtilHashtable *) nil_chk(extensions_)) size] != [((JavaUtilHashtable *) nil_chk(((OrgSpongycastleAsn1X509X509Extensions *) nil_chk(other))->extensions_)) size]) {
    
#line 417
    return false;
  }
  
#line 420
  id<JavaUtilEnumeration> e1 = [((JavaUtilHashtable *) nil_chk(extensions_)) keys];
  
#line 422
  while ([((id<JavaUtilEnumeration>) nil_chk(e1)) hasMoreElements]) {
    
#line 424
    id key = [e1 nextElement];
    
#line 426
    if (![nil_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:key]) isEqual:[((JavaUtilHashtable *) nil_chk(other->extensions_)) getWithId:key]]) {
      
#line 428
      return false;
    }
  }
  
#line 432
  return true;
}


#line 435
- (IOSObjectArray *)getExtensionOIDs {
  
#line 437
  return OrgSpongycastleAsn1X509X509Extensions_toOidArrayWithJavaUtilVector_(self, ordering_);
}


#line 440
- (IOSObjectArray *)getNonCriticalExtensionOIDs {
  
#line 442
  return OrgSpongycastleAsn1X509X509Extensions_getExtensionOIDsWithBoolean_(self, false);
}


#line 445
- (IOSObjectArray *)getCriticalExtensionOIDs {
  
#line 447
  return OrgSpongycastleAsn1X509X509Extensions_getExtensionOIDsWithBoolean_(self, true);
}


#line 450
- (IOSObjectArray *)getExtensionOIDsWithBoolean:(jboolean)isCritical {
  return OrgSpongycastleAsn1X509X509Extensions_getExtensionOIDsWithBoolean_(self, isCritical);
}


#line 467
- (IOSObjectArray *)toOidArrayWithJavaUtilVector:(JavaUtilVector *)oidVec {
  return OrgSpongycastleAsn1X509X509Extensions_toOidArrayWithJavaUtilVector_(self, oidVec);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgSpongycastleAsn1X509X509Extensions;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509X509Extensions;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509X509Extension;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[LOrgSpongycastleAsn1ASN1ObjectIdentifier;", 0x2, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(initWithJavaUtilHashtable:);
  methods[4].selector = @selector(initWithJavaUtilVector:withJavaUtilHashtable:);
  methods[5].selector = @selector(initWithJavaUtilVector:withJavaUtilVector:);
  methods[6].selector = @selector(oids);
  methods[7].selector = @selector(getExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:);
  methods[8].selector = @selector(toASN1Primitive);
  methods[9].selector = @selector(equivalentWithOrgSpongycastleAsn1X509X509Extensions:);
  methods[10].selector = @selector(getExtensionOIDs);
  methods[11].selector = @selector(getNonCriticalExtensionOIDs);
  methods[12].selector = @selector(getCriticalExtensionOIDs);
  methods[13].selector = @selector(getExtensionOIDsWithBoolean:);
  methods[14].selector = @selector(toOidArrayWithJavaUtilVector:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SubjectDirectoryAttributes", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "SubjectKeyIdentifier", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "KeyUsage", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 17, -1, -1 },
    { "PrivateKeyUsagePeriod", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 18, -1, -1 },
    { "SubjectAlternativeName", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "IssuerAlternativeName", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 20, -1, -1 },
    { "BasicConstraints", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 21, -1, -1 },
    { "CRLNumber", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "ReasonCode", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "InstructionCode", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 24, -1, -1 },
    { "InvalidityDate", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
    { "DeltaCRLIndicator", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 26, -1, -1 },
    { "IssuingDistributionPoint", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 27, -1, -1 },
    { "CertificateIssuer", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 28, -1, -1 },
    { "NameConstraints", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 29, -1, -1 },
    { "CRLDistributionPoints", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 30, -1, -1 },
    { "CertificatePolicies", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 31, -1, -1 },
    { "PolicyMappings", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 32, -1, -1 },
    { "AuthorityKeyIdentifier", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "PolicyConstraints", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "ExtendedKeyUsage", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "FreshestCRL", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 36, -1, -1 },
    { "InhibitAnyPolicy", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 37, -1, -1 },
    { "AuthorityInfoAccess", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 38, -1, -1 },
    { "SubjectInfoAccess", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 39, -1, -1 },
    { "LogoType", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 40, -1, -1 },
    { "BiometricInfo", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 41, -1, -1 },
    { "QCStatements", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 42, -1, -1 },
    { "AuditIdentity", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 43, -1, -1 },
    { "NoRevAvail", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 44, -1, -1 },
    { "TargetInformation", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 45, -1, -1 },
    { "extensions_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ordering_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgSpongycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgSpongycastleAsn1ASN1Sequence;", "LJavaUtilHashtable;", "LJavaUtilVector;LJavaUtilHashtable;", "LJavaUtilVector;LJavaUtilVector;", "getExtension", "LOrgSpongycastleAsn1ASN1ObjectIdentifier;", "equivalent", "LOrgSpongycastleAsn1X509X509Extensions;", "getExtensionOIDs", "Z", "toOidArray", "LJavaUtilVector;", &OrgSpongycastleAsn1X509X509Extensions_SubjectDirectoryAttributes, &OrgSpongycastleAsn1X509X509Extensions_SubjectKeyIdentifier, &OrgSpongycastleAsn1X509X509Extensions_KeyUsage, &OrgSpongycastleAsn1X509X509Extensions_PrivateKeyUsagePeriod, &OrgSpongycastleAsn1X509X509Extensions_SubjectAlternativeName, &OrgSpongycastleAsn1X509X509Extensions_IssuerAlternativeName, &OrgSpongycastleAsn1X509X509Extensions_BasicConstraints, &OrgSpongycastleAsn1X509X509Extensions_CRLNumber, &OrgSpongycastleAsn1X509X509Extensions_ReasonCode, &OrgSpongycastleAsn1X509X509Extensions_InstructionCode, &OrgSpongycastleAsn1X509X509Extensions_InvalidityDate, &OrgSpongycastleAsn1X509X509Extensions_DeltaCRLIndicator, &OrgSpongycastleAsn1X509X509Extensions_IssuingDistributionPoint, &OrgSpongycastleAsn1X509X509Extensions_CertificateIssuer, &OrgSpongycastleAsn1X509X509Extensions_NameConstraints, &OrgSpongycastleAsn1X509X509Extensions_CRLDistributionPoints, &OrgSpongycastleAsn1X509X509Extensions_CertificatePolicies, &OrgSpongycastleAsn1X509X509Extensions_PolicyMappings, &OrgSpongycastleAsn1X509X509Extensions_AuthorityKeyIdentifier, &OrgSpongycastleAsn1X509X509Extensions_PolicyConstraints, &OrgSpongycastleAsn1X509X509Extensions_ExtendedKeyUsage, &OrgSpongycastleAsn1X509X509Extensions_FreshestCRL, &OrgSpongycastleAsn1X509X509Extensions_InhibitAnyPolicy, &OrgSpongycastleAsn1X509X509Extensions_AuthorityInfoAccess, &OrgSpongycastleAsn1X509X509Extensions_SubjectInfoAccess, &OrgSpongycastleAsn1X509X509Extensions_LogoType, &OrgSpongycastleAsn1X509X509Extensions_BiometricInfo, &OrgSpongycastleAsn1X509X509Extensions_QCStatements, &OrgSpongycastleAsn1X509X509Extensions_AuditIdentity, &OrgSpongycastleAsn1X509X509Extensions_NoRevAvail, &OrgSpongycastleAsn1X509X509Extensions_TargetInformation };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1X509X509Extensions = { "X509Extensions", "org.spongycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 15, 33, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1X509X509Extensions;
}

+ (void)initialize {
  if (self == [OrgSpongycastleAsn1X509X509Extensions class]) {
    OrgSpongycastleAsn1X509X509Extensions_SubjectDirectoryAttributes = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 27
    @"2.5.29.9");
    OrgSpongycastleAsn1X509X509Extensions_SubjectKeyIdentifier = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 33
    @"2.5.29.14");
    OrgSpongycastleAsn1X509X509Extensions_KeyUsage = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 39
    @"2.5.29.15");
    OrgSpongycastleAsn1X509X509Extensions_PrivateKeyUsagePeriod = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 45
    @"2.5.29.16");
    OrgSpongycastleAsn1X509X509Extensions_SubjectAlternativeName = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 51
    @"2.5.29.17");
    OrgSpongycastleAsn1X509X509Extensions_IssuerAlternativeName = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 57
    @"2.5.29.18");
    OrgSpongycastleAsn1X509X509Extensions_BasicConstraints = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 63
    @"2.5.29.19");
    OrgSpongycastleAsn1X509X509Extensions_CRLNumber = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 69
    @"2.5.29.20");
    OrgSpongycastleAsn1X509X509Extensions_ReasonCode = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 75
    @"2.5.29.21");
    OrgSpongycastleAsn1X509X509Extensions_InstructionCode = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 81
    @"2.5.29.23");
    OrgSpongycastleAsn1X509X509Extensions_InvalidityDate = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 87
    @"2.5.29.24");
    OrgSpongycastleAsn1X509X509Extensions_DeltaCRLIndicator = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 93
    @"2.5.29.27");
    OrgSpongycastleAsn1X509X509Extensions_IssuingDistributionPoint = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 99
    @"2.5.29.28");
    OrgSpongycastleAsn1X509X509Extensions_CertificateIssuer = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 105
    @"2.5.29.29");
    OrgSpongycastleAsn1X509X509Extensions_NameConstraints = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 111
    @"2.5.29.30");
    OrgSpongycastleAsn1X509X509Extensions_CRLDistributionPoints = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 117
    @"2.5.29.31");
    OrgSpongycastleAsn1X509X509Extensions_CertificatePolicies = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 123
    @"2.5.29.32");
    OrgSpongycastleAsn1X509X509Extensions_PolicyMappings = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 129
    @"2.5.29.33");
    OrgSpongycastleAsn1X509X509Extensions_AuthorityKeyIdentifier = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 135
    @"2.5.29.35");
    OrgSpongycastleAsn1X509X509Extensions_PolicyConstraints = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 141
    @"2.5.29.36");
    OrgSpongycastleAsn1X509X509Extensions_ExtendedKeyUsage = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 147
    @"2.5.29.37");
    OrgSpongycastleAsn1X509X509Extensions_FreshestCRL = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 153
    @"2.5.29.46");
    OrgSpongycastleAsn1X509X509Extensions_InhibitAnyPolicy = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 159
    @"2.5.29.54");
    OrgSpongycastleAsn1X509X509Extensions_AuthorityInfoAccess = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 165
    @"1.3.6.1.5.5.7.1.1");
    OrgSpongycastleAsn1X509X509Extensions_SubjectInfoAccess = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 171
    @"1.3.6.1.5.5.7.1.11");
    OrgSpongycastleAsn1X509X509Extensions_LogoType = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 177
    @"1.3.6.1.5.5.7.1.12");
    OrgSpongycastleAsn1X509X509Extensions_BiometricInfo = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 183
    @"1.3.6.1.5.5.7.1.2");
    OrgSpongycastleAsn1X509X509Extensions_QCStatements = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 189
    @"1.3.6.1.5.5.7.1.3");
    OrgSpongycastleAsn1X509X509Extensions_AuditIdentity = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 195
    @"1.3.6.1.5.5.7.1.4");
    OrgSpongycastleAsn1X509X509Extensions_NoRevAvail = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 201
    @"2.5.29.56");
    OrgSpongycastleAsn1X509X509Extensions_TargetInformation = new_OrgSpongycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 207
    @"2.5.29.55");
    J2OBJC_SET_INITIALIZED(OrgSpongycastleAsn1X509X509Extensions)
  }
}

@end


#line 212
OrgSpongycastleAsn1X509X509Extensions *OrgSpongycastleAsn1X509X509Extensions_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgSpongycastleAsn1X509X509Extensions_initialize();
  
#line 216
  return OrgSpongycastleAsn1X509X509Extensions_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgSpongycastleAsn1X509X509Extensions *OrgSpongycastleAsn1X509X509Extensions_getInstanceWithId_(id obj) {
  OrgSpongycastleAsn1X509X509Extensions_initialize();
  
#line 222
  if (obj == nil || [obj isKindOfClass:[OrgSpongycastleAsn1X509X509Extensions class]]) {
    
#line 224
    return (OrgSpongycastleAsn1X509X509Extensions *) cast_chk(obj, [OrgSpongycastleAsn1X509X509Extensions class]);
  }
  
#line 227
  if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]]) {
    
#line 229
    return new_OrgSpongycastleAsn1X509X509Extensions_initWithOrgSpongycastleAsn1ASN1Sequence_((OrgSpongycastleAsn1ASN1Sequence *) obj);
  }
  
#line 232
  if ([obj isKindOfClass:[OrgSpongycastleAsn1X509Extensions class]]) {
    
#line 234
    return new_OrgSpongycastleAsn1X509X509Extensions_initWithOrgSpongycastleAsn1ASN1Sequence_((OrgSpongycastleAsn1ASN1Sequence *) cast_chk([((OrgSpongycastleAsn1X509Extensions *) obj) toASN1Primitive], [OrgSpongycastleAsn1ASN1Sequence class]));
  }
  
#line 237
  if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1TaggedObject class]]) {
    
#line 239
    return OrgSpongycastleAsn1X509X509Extensions_getInstanceWithId_([((OrgSpongycastleAsn1ASN1TaggedObject *) obj) getObject]);
  }
  
#line 242
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 250
void OrgSpongycastleAsn1X509X509Extensions_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1X509X509Extensions *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->ordering_ = new_JavaUtilVector_init();
  
#line 253
  id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  
#line 255
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 257
    OrgSpongycastleAsn1ASN1Sequence *s = OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([e nextElement]);
    
#line 259
    if ([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(s)) size] == 3) {
      
#line 261
      (void) [((JavaUtilHashtable *) nil_chk(self->extensions_)) putWithId:[s getObjectAtWithInt:0] withId:new_OrgSpongycastleAsn1X509X509Extension_initWithOrgSpongycastleAsn1ASN1Boolean_withOrgSpongycastleAsn1ASN1OctetString_(OrgSpongycastleAsn1ASN1Boolean_getInstanceWithId_([s getObjectAtWithInt:1]), OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([s getObjectAtWithInt:2]))];
    }
    else if ([s size] == 2) {
      
#line 265
      (void) [((JavaUtilHashtable *) nil_chk(self->extensions_)) putWithId:[s getObjectAtWithInt:0] withId:new_OrgSpongycastleAsn1X509X509Extension_initWithBoolean_withOrgSpongycastleAsn1ASN1OctetString_(false, OrgSpongycastleAsn1ASN1OctetString_getInstanceWithId_([s getObjectAtWithInt:1]))];
    }
    else {
      
#line 269
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [s size]));
    }
    
#line 272
    [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[s getObjectAtWithInt:0]];
  }
}


#line 250
OrgSpongycastleAsn1X509X509Extensions *new_OrgSpongycastleAsn1X509X509Extensions_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 250
OrgSpongycastleAsn1X509X509Extensions *create_OrgSpongycastleAsn1X509X509Extensions_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithOrgSpongycastleAsn1ASN1Sequence_, seq)
}


#line 281
void OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilHashtable_(OrgSpongycastleAsn1X509X509Extensions *self, JavaUtilHashtable *extensions) {
  OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilHashtable_(self,
#line 284
  nil, extensions);
}


#line 281
OrgSpongycastleAsn1X509X509Extensions *new_OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithJavaUtilHashtable_, extensions)
}


#line 281
OrgSpongycastleAsn1X509X509Extensions *create_OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilHashtable_(JavaUtilHashtable *extensions) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithJavaUtilHashtable_, extensions)
}


#line 293
void OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilHashtable_(OrgSpongycastleAsn1X509X509Extensions *self, JavaUtilVector *ordering, JavaUtilHashtable *extensions) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->ordering_ = new_JavaUtilVector_init();
  id<JavaUtilEnumeration> e;
  
#line 299
  if (ordering == nil) {
    
#line 301
    e = [((JavaUtilHashtable *) nil_chk(extensions)) keys];
  }
  else {
    
#line 305
    e = [ordering elements];
  }
  
#line 308
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 310
    [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([e nextElement])];
  }
  
#line 313
  e = [((JavaUtilVector *) nil_chk(self->ordering_)) elements];
  
#line 315
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 317
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = OrgSpongycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([e nextElement]);
    OrgSpongycastleAsn1X509X509Extension *ext = (OrgSpongycastleAsn1X509X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions)) getWithId:oid], [OrgSpongycastleAsn1X509X509Extension class]);
    
#line 320
    (void) [((JavaUtilHashtable *) nil_chk(self->extensions_)) putWithId:oid withId:ext];
  }
}


#line 293
OrgSpongycastleAsn1X509X509Extensions *new_OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *extensions) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithJavaUtilVector_withJavaUtilHashtable_, ordering, extensions)
}


#line 293
OrgSpongycastleAsn1X509X509Extensions *create_OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *extensions) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithJavaUtilVector_withJavaUtilHashtable_, ordering, extensions)
}


#line 331
void OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilVector_(OrgSpongycastleAsn1X509X509Extensions *self, JavaUtilVector *objectIDs, JavaUtilVector *values) {
  OrgSpongycastleAsn1ASN1Object_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->ordering_ = new_JavaUtilVector_init();
  id<JavaUtilEnumeration> e = [((JavaUtilVector *) nil_chk(objectIDs)) elements];
  
#line 337
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 339
    [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[e nextElement]];
  }
  
#line 342
  jint count = 0;
  
#line 344
  e = [((JavaUtilVector *) nil_chk(self->ordering_)) elements];
  
#line 346
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 348
    OrgSpongycastleAsn1ASN1ObjectIdentifier *oid = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    OrgSpongycastleAsn1X509X509Extension *ext = (OrgSpongycastleAsn1X509X509Extension *) cast_chk([((JavaUtilVector *) nil_chk(values)) elementAtWithInt:count], [OrgSpongycastleAsn1X509X509Extension class]);
    
#line 351
    (void) [((JavaUtilHashtable *) nil_chk(self->extensions_)) putWithId:oid withId:ext];
    count++;
  }
}


#line 331
OrgSpongycastleAsn1X509X509Extensions *new_OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *objectIDs, JavaUtilVector *values) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithJavaUtilVector_withJavaUtilVector_, objectIDs, values)
}


#line 331
OrgSpongycastleAsn1X509X509Extensions *create_OrgSpongycastleAsn1X509X509Extensions_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *objectIDs, JavaUtilVector *values) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1X509X509Extensions, initWithJavaUtilVector_withJavaUtilVector_, objectIDs, values)
}


#line 450
IOSObjectArray *OrgSpongycastleAsn1X509X509Extensions_getExtensionOIDsWithBoolean_(OrgSpongycastleAsn1X509X509Extensions *self, jboolean isCritical) {
  
#line 452
  JavaUtilVector *oidVec = new_JavaUtilVector_init();
  
#line 454
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(self->ordering_)) size]; i++) {
    
#line 456
    id oid = [((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i];
    
#line 458
    if ([((OrgSpongycastleAsn1X509X509Extension *) nil_chk(((OrgSpongycastleAsn1X509X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(self->extensions_)) getWithId:oid], [OrgSpongycastleAsn1X509X509Extension class])))) isCritical] == isCritical) {
      
#line 460
      [oidVec addElementWithId:oid];
    }
  }
  
#line 464
  return OrgSpongycastleAsn1X509X509Extensions_toOidArrayWithJavaUtilVector_(self, oidVec);
}


#line 467
IOSObjectArray *OrgSpongycastleAsn1X509X509Extensions_toOidArrayWithJavaUtilVector_(OrgSpongycastleAsn1X509X509Extensions *self, JavaUtilVector *oidVec) {
  
#line 469
  IOSObjectArray *oids = [IOSObjectArray newArrayWithLength:[((JavaUtilVector *) nil_chk(oidVec)) size] type:OrgSpongycastleAsn1ASN1ObjectIdentifier_class_()];
  
#line 471
  for (jint i = 0; i != oids->size_; i++) {
    
#line 473
    (void) IOSObjectArray_Set(oids, i, (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([oidVec elementAtWithInt:i], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]));
  }
  return oids;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1X509X509Extensions)

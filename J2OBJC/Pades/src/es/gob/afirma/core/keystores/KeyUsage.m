//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/keystores/KeyUsage.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/afirma/core/keystores/KeyUsage.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/cert/X509Certificate.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/core/keystores/KeyUsage must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreKeystoresKeyUsage () {
 @public
  IOSObjectArray *usage_;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreKeystoresKeyUsage, usage_, IOSObjectArray *)

inline jint EsGobAfirmaCoreKeystoresKeyUsage_get_KEYUSAGE_NBITS(void);
#define EsGobAfirmaCoreKeystoresKeyUsage_KEYUSAGE_NBITS 9
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreKeystoresKeyUsage, KEYUSAGE_NBITS, jint)

/*!
 @brief Uso para firma electr&oacute;nica.
 */
inline EsGobAfirmaCoreKeystoresKeyUsage *EsGobAfirmaCoreKeystoresKeyUsage_get_EMPTY_USAGES(void);
static EsGobAfirmaCoreKeystoresKeyUsage *EsGobAfirmaCoreKeystoresKeyUsage_EMPTY_USAGES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreKeystoresKeyUsage, EMPTY_USAGES, EsGobAfirmaCoreKeystoresKeyUsage *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/keystores/KeyUsage.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreKeystoresKeyUsage)

EsGobAfirmaCoreKeystoresKeyUsage *EsGobAfirmaCoreKeystoresKeyUsage_SIGN;
EsGobAfirmaCoreKeystoresKeyUsage *EsGobAfirmaCoreKeystoresKeyUsage_AUTH;
EsGobAfirmaCoreKeystoresKeyUsage *EsGobAfirmaCoreKeystoresKeyUsage_CYPH;


#line 29
@implementation EsGobAfirmaCoreKeystoresKeyUsage


#line 95
- (jboolean)isEqual:(id)e {
  
#line 97
  if (e == nil || !([e isKindOfClass:[EsGobAfirmaCoreKeystoresKeyUsage class]])) {
    return false;
  }
  EsGobAfirmaCoreKeystoresKeyUsage *ku = (EsGobAfirmaCoreKeystoresKeyUsage *) cast_chk(e, [EsGobAfirmaCoreKeystoresKeyUsage class]);
  IOSObjectArray *other = [ku getUsage];
  if (other == nil) {
    other = [((EsGobAfirmaCoreKeystoresKeyUsage *) nil_chk(EsGobAfirmaCoreKeystoresKeyUsage_EMPTY_USAGES)) getUsage];
  }
  IOSObjectArray *me = [self getUsage];
  if (me == nil) {
    me = [((EsGobAfirmaCoreKeystoresKeyUsage *) nil_chk(EsGobAfirmaCoreKeystoresKeyUsage_EMPTY_USAGES)) getUsage];
  }
  
#line 111
  if (other != nil && me != nil && other->size_ != me->size_) {
    return false;
  }
  if (me != nil && other != nil) {
    for (jint i = 0; i < me->size_; i++) {
      if (!JreObjectEqualsEquals(IOSObjectArray_Get(other, i), IOSObjectArray_Get(me, i))) {
        return false;
      }
    }
  }
  return true;
}


#line 128
- (jboolean)includesWithEsGobAfirmaCoreKeystoresKeyUsage:(EsGobAfirmaCoreKeystoresKeyUsage *)ku {
  if (ku == nil) {
    return false;
  }
  IOSObjectArray *other = [ku getUsage];
  IOSObjectArray *me = [self getUsage];
  if (other == nil || me == nil || other->size_ != me->size_) {
    return false;
  }
  for (jint i = 0; i < me->size_; i++) {
    if (IOSObjectArray_Get(other, i) != nil && !JreObjectEqualsEquals(IOSObjectArray_Get(other, i), IOSObjectArray_Get(me, i))) {
      return false;
    }
  }
  return true;
}

- (NSUInteger)hash {
  
#line 147
  jint ret = 0;
  if (self->usage_ != nil) {
    {
      IOSObjectArray *a__ =
#line 149
      self->usage_;
      JavaLangBoolean * const *b__ = a__->buffer_;
      JavaLangBoolean * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangBoolean *b = *b__++;
        
#line 150
        ret = ret + ((jint) [((JavaLangBoolean *) nil_chk(b)) hash]);
      }
    }
  }
  
#line 153
  return ret;
}


#line 178
- (instancetype)initWithJavaLangBooleanArray:(IOSObjectArray *)keyUsage {
  EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_(self, keyUsage);
  return self;
}


#line 189
- (instancetype)initWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert {
  EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaSecurityCertX509Certificate_(self, cert);
  return self;
}


#line 211
- (IOSObjectArray *)getUsage {
  return self->usage_ == nil ? nil : [self->usage_ java_clone];
}

- (NSString *)description {
  
#line 217
  if (self->usage_ == nil) {
    return @"Desconocido";
  }
  if ([self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_SIGN] && [self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_AUTH] && [self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_CYPH]) {
    return @"Firma, autenticaci\u00f3n y cifrado";
  }
  if ([self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_AUTH] && [self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_CYPH]) {
    return @"Autenticaci\u00f3n y cifrado";
  }
  if ([self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_SIGN] && [self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_AUTH] && [self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_CYPH]) {
    return @"Firma y cifrado";
  }
  if ([self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_SIGN] && [self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_AUTH]) {
    return @"Firma y autenticaci\u00f3n";
  }
  if ([self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_AUTH]) {
    return @"Autenticaci\u00f3n";
  }
  if ([self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_SIGN]) {
    return @"Firma";
  }
  if ([self includesWithEsGobAfirmaCoreKeystoresKeyUsage:EsGobAfirmaCoreKeystoresKeyUsage_CYPH]) {
    return @"Cifrado";
  }
  return @"Otros";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "[LJavaLangBoolean;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isEqual:);
  methods[1].selector = @selector(includesWithEsGobAfirmaCoreKeystoresKeyUsage:);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(initWithJavaLangBooleanArray:);
  methods[4].selector = @selector(initWithJavaSecurityCertX509Certificate:);
  methods[5].selector = @selector(getUsage);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "KEYUSAGE_NBITS", "I", .constantValue.asInt = EsGobAfirmaCoreKeystoresKeyUsage_KEYUSAGE_NBITS, 0x1a, -1, -1, -1, -1 },
    { "usage_", "[LJavaLangBoolean;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "EMPTY_USAGES", "LEsGobAfirmaCoreKeystoresKeyUsage;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "SIGN", "LEsGobAfirmaCoreKeystoresKeyUsage;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "AUTH", "LEsGobAfirmaCoreKeystoresKeyUsage;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "CYPH", "LEsGobAfirmaCoreKeystoresKeyUsage;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "equals", "LNSObject;", "includes", "LEsGobAfirmaCoreKeystoresKeyUsage;", "hashCode", "[LJavaLangBoolean;", "LJavaSecurityCertX509Certificate;", "toString", &EsGobAfirmaCoreKeystoresKeyUsage_EMPTY_USAGES, &EsGobAfirmaCoreKeystoresKeyUsage_SIGN, &EsGobAfirmaCoreKeystoresKeyUsage_AUTH, &EsGobAfirmaCoreKeystoresKeyUsage_CYPH };
  static const J2ObjcClassInfo _EsGobAfirmaCoreKeystoresKeyUsage = { "KeyUsage", "es.gob.afirma.core.keystores", ptrTable, methods, fields, 7, 0x11, 7, 6, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreKeystoresKeyUsage;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreKeystoresKeyUsage class]) {
    EsGobAfirmaCoreKeystoresKeyUsage_EMPTY_USAGES = new_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 38
      nil,
#line 39
      nil,
#line 40
      nil,
#line 41
      nil,
#line 42
      nil,
#line 43
      nil,
#line 44
      nil,
#line 45
      nil,
#line 46
      nil } count:9 type:JavaLangBoolean_class_()]);
      EsGobAfirmaCoreKeystoresKeyUsage_SIGN = new_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 53
        nil, JreLoadStatic(JavaLangBoolean, TRUE),
#line 55
        nil,
#line 56
        nil,
#line 57
        nil,
#line 58
        nil,
#line 59
        nil,
#line 60
        nil,
#line 61
        nil } count:9 type:JavaLangBoolean_class_()]);
        EsGobAfirmaCoreKeystoresKeyUsage_AUTH = new_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_([IOSObjectArray newArrayWithObjects:(id[]){ JreLoadStatic(JavaLangBoolean, TRUE),
#line 69
        nil,
#line 70
        nil,
#line 71
        nil,
#line 72
        nil,
#line 73
        nil,
#line 74
        nil,
#line 75
        nil,
#line 76
        nil } count:9 type:JavaLangBoolean_class_()]);
        EsGobAfirmaCoreKeystoresKeyUsage_CYPH = new_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 83
          nil,
#line 84
          nil,
#line 85
          nil, JreLoadStatic(JavaLangBoolean, TRUE),
#line 87
          nil,
#line 88
          nil,
#line 89
          nil,
#line 90
          nil,
#line 91
          nil } count:9 type:JavaLangBoolean_class_()]);
          J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreKeystoresKeyUsage)
        }
      }

@end


#line 178
void EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_(EsGobAfirmaCoreKeystoresKeyUsage *self, IOSObjectArray *keyUsage) {
  NSObject_init(self);
  
#line 179
  if (keyUsage == nil || keyUsage->size_ != EsGobAfirmaCoreKeystoresKeyUsage_KEYUSAGE_NBITS) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 181
    @"El uso debe proporcionarse como un Boolean[] no nulo de exactamente 9 posiciones");
  }
  
#line 184
  self->usage_ = [keyUsage java_clone];
}


#line 178
EsGobAfirmaCoreKeystoresKeyUsage *new_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_(IOSObjectArray *keyUsage) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreKeystoresKeyUsage, initWithJavaLangBooleanArray_, keyUsage)
}


#line 178
EsGobAfirmaCoreKeystoresKeyUsage *create_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaLangBooleanArray_(IOSObjectArray *keyUsage) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreKeystoresKeyUsage, initWithJavaLangBooleanArray_, keyUsage)
}


#line 189
void EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaSecurityCertX509Certificate_(EsGobAfirmaCoreKeystoresKeyUsage *self, JavaSecurityCertX509Certificate *cert) {
  NSObject_init(self);
  
#line 190
  if (cert == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 192
    @"El certificado de origen no puede ser nulo");
  }
  
#line 195
  IOSBooleanArray *ke = [cert getKeyUsage];
  if (ke == nil) {
    self->usage_ = nil;
    return;
  }
  if (ke->size_ != EsGobAfirmaCoreKeystoresKeyUsage_KEYUSAGE_NBITS) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"El certificado de origen tiene un KeyUsage con un numero de posiciones no soportado: ",
#line 202
    ke->size_));
  }
  
#line 205
  self->usage_ = [IOSObjectArray newArrayWithLength:EsGobAfirmaCoreKeystoresKeyUsage_KEYUSAGE_NBITS type:JavaLangBoolean_class_()];
  for (jint i = 0; i < EsGobAfirmaCoreKeystoresKeyUsage_KEYUSAGE_NBITS; i++) {
    (void) IOSObjectArray_Set(self->usage_, i, JavaLangBoolean_valueOfWithBoolean_(IOSBooleanArray_Get(ke, i)));
  }
}


#line 189
EsGobAfirmaCoreKeystoresKeyUsage *new_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreKeystoresKeyUsage, initWithJavaSecurityCertX509Certificate_, cert)
}


#line 189
EsGobAfirmaCoreKeystoresKeyUsage *create_EsGobAfirmaCoreKeystoresKeyUsage_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreKeystoresKeyUsage, initWithJavaSecurityCertX509Certificate_, cert)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreKeystoresKeyUsage)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/ui/KeyStoreDialogManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobAfirmaCoreUiKeyStoreDialogManager")
#ifdef RESTRICT_EsGobAfirmaCoreUiKeyStoreDialogManager
#define INCLUDE_ALL_EsGobAfirmaCoreUiKeyStoreDialogManager 0
#else
#define INCLUDE_ALL_EsGobAfirmaCoreUiKeyStoreDialogManager 1
#endif
#undef RESTRICT_EsGobAfirmaCoreUiKeyStoreDialogManager

#if !defined (EsGobAfirmaCoreUiKeyStoreDialogManager_) && (INCLUDE_ALL_EsGobAfirmaCoreUiKeyStoreDialogManager || defined(INCLUDE_EsGobAfirmaCoreUiKeyStoreDialogManager))
#define EsGobAfirmaCoreUiKeyStoreDialogManager_

@class EsGobAfirmaCoreKeystoresCertificateContext;
@class IOSIntArray;
@class IOSObjectArray;
@protocol EsGobAfirmaCoreKeystoresKeyStoreManager;

/*!
 @brief Interfaz que implementan los di&aacute;logos de selecci&oacute;n de certificados.
 */
@protocol EsGobAfirmaCoreUiKeyStoreDialogManager < JavaObject >

/*!
 @brief Manda recargar al almac&eacute;n asociado actualmente al di&aacute;logo de
  selecci&oacute;n.
 @throw IOExceptionEn caso de errores de entrada / salida.
 */
- (void)refresh;

/*!
 @brief Obtiene el listado de certificados con alias que deben mostrarse en el
  di&aacute;logo de selecci&oacute;n.
 @return Listado de certificados con alias.
 */
- (IOSObjectArray *)getNameCertificates;

/*!
 @brief Cambia el almac&eacute;n que gestiona internamente el di&aacute;logo.
 @param ksm Almac &eacute; n de certificados.
 */
- (void)setKeyStoreManagerWithEsGobAfirmaCoreKeystoresKeyStoreManager:(id<EsGobAfirmaCoreKeystoresKeyStoreManager>)ksm;

/*!
 @brief Cambia el almac&eacute;n cargado en el di&aacute;logo al correspondiente al que corresponde
  al indicado.Los tipos de almac&eacute;n a los que se puede cambiar se declaran en esta
  misma interfaz.
 @param keyStoreId Identificador de almac &eacute; n.
 @param parent Componente padre sobre el que mostrar cualquier di &aacute; logo gr &aacute; fico.
 @return <code>true</code> si se completa el cambio de almac&eacute;n, <code>false</code> en caso
  contrario.
 */
- (jboolean)changeKeyStoreManagerWithInt:(jint)keyStoreId
                                  withId:(id)parent;

/*!
 @brief Cambia el almac&eacute;n cargado a uno de tipo PKCS#11
 @param parent Componente padre sobre el que mostrar cualquier di &aacute; logo gr &aacute; fico.
 @param ksName Nombre del almac &eacute; n de claves PKCS#11.
 @param ksLibPath Ruta con el controlador del almac &eacute; n de claves PKCS#11.
 @return <code>true</code> si se completa el cambio de almac&eacute;n, <code>false</code> en caso
  contrario.
 */
- (jboolean)changeKeyStoreManagerToPKCS11WithId:(id)parent
                                   withNSString:(NSString *)ksName
                                   withNSString:(NSString *)ksLibPath;

/*!
 @brief Indica entre qu&eacute; tipos de almacenes se permite cambiar desde el di&aacute;logo de selecci&oacute;n.
 @return Listado con el identificador de tipos de almac&eacute;n.
 */
- (IOSIntArray *)getAvailablesKeyStores;

/*!
 @brief Devuelve la clave asociada a un alias.
 @param alias Alias de la clave que se desea recuperar.
 @throw AOExceptionCuando no se puede extraer la clave del almac&eacute;n.
 @return Clave.
 */
- (id)getKeyEntryWithNSString:(NSString *)alias;

/*!
 @brief Muestra el di&aacute;logo con el listado de certificados que se ajusta a los criterios establecidos
  para que el usuario seleccione uno de ellos.
 @return Alias del certifciado seleccionado.
 @throw es.gob.afirma.core.AOCancelledOperationExceptionCuando no se selecciona ning&uacute;n certificado.
 @throw RuntimeExceptionCuando se produce un error en la extracci&oacute;n de la clave del almac&eacute;n.
 @throw AOExceptionCuando no hay certificados en el almac&eacute;n acordes a los criterios establecidos.
 */
- (NSString *)show;

/*!
 @brief Recupera el alias del certificado seleccionado;.Este m&eacute;todo no deber&iacute;a
  usarse cuando se permite la carga de almacenes externos.
 En su lugar, se debe utilizar <code>getSelectedCertificateContext()</code>
 @return Alias de certificado.
 */
- (NSString *)getSelectedAlias;

/*!
 @brief Recupera el contexto del certificado seleccionado.Desde este contexto se puede
  obtener el almac&eacute;n al que pertenece el certificado (que puede no ser el
  utilizado al iniciar el di&aacute;logo, ya que el usuario puede haber cambiado
  de almac&eacute;n) y el alias del certificado para su extracci&oacute;n del
  almac&eacute;n.
 @return Contexto del certificado.
 */
- (EsGobAfirmaCoreKeystoresCertificateContext *)getSelectedCertificateContext;

/*!
 @brief Permite o prohibe la apertura de almacenes externos al principal desde el UI del di&aacute;logo.
 @param showButton <code> true </code>  para mostrar el bot &oacute; n de apertura de almacenes externos,                     <code> false </code>  para ocultarlo.
 */
- (void)allowOpenExternalStoresWithBoolean:(jboolean)showButton;

/*!
 @brief Indica si la apertura de almacenes externos al principal desde el UI del di&aacute;logo est&aacute;
  permitida o prohibida.
 @return <code>true</code> si se permite la apertura de almacenes externos,
          <code>false</code> en caso contrario.
 */
- (jboolean)isExternalStoresOpeningAllowed;

/*!
 @brief Obtiene el nombre del tipo de almac&eacute;n del que se muestran los
  certificados en el di&aacute;logo.
 @return Nombre del tipo de almac&eacute;n o <code>null</code> si no se conoce.
 */
- (NSString *)getKeyStoreName;

/*!
 @brief Obtiene el nombre dde la librer&iacute;a en caso de que se utilice.
 @return Nombre de la librer&iacute;a o <code>null</code> si no se conoce.
 */
- (NSString *)getLibName;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreUiKeyStoreDialogManager)

/*!
 @brief Identificador de almac&eacute;n del sistema.
 */
inline jint EsGobAfirmaCoreUiKeyStoreDialogManager_get_KEYSTORE_ID_SYSTEM(void);
#define EsGobAfirmaCoreUiKeyStoreDialogManager_KEYSTORE_ID_SYSTEM 1
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreUiKeyStoreDialogManager, KEYSTORE_ID_SYSTEM, jint)

/*!
 @brief Identificador de almac&eacute;n de mozilla.
 */
inline jint EsGobAfirmaCoreUiKeyStoreDialogManager_get_KEYSTORE_ID_MOZILLA(void);
#define EsGobAfirmaCoreUiKeyStoreDialogManager_KEYSTORE_ID_MOZILLA 2
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreUiKeyStoreDialogManager, KEYSTORE_ID_MOZILLA, jint)

/*!
 @brief Identificador de almac&eacute;n externo PKCS#12.
 */
inline jint EsGobAfirmaCoreUiKeyStoreDialogManager_get_KEYSTORE_ID_PKCS12(void);
#define EsGobAfirmaCoreUiKeyStoreDialogManager_KEYSTORE_ID_PKCS12 3
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreUiKeyStoreDialogManager, KEYSTORE_ID_PKCS12, jint)

/*!
 @brief Identificador de almac&eacute;n de DNIe.
 */
inline jint EsGobAfirmaCoreUiKeyStoreDialogManager_get_KEYSTORE_ID_DNIE(void);
#define EsGobAfirmaCoreUiKeyStoreDialogManager_KEYSTORE_ID_DNIE 4
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreUiKeyStoreDialogManager, KEYSTORE_ID_DNIE, jint)

/*!
 @brief Identificador de almac&eacute;n externo PKCS#11.
 */
inline jint EsGobAfirmaCoreUiKeyStoreDialogManager_get_KEYSTORE_ID_PKCS11(void);
#define EsGobAfirmaCoreUiKeyStoreDialogManager_KEYSTORE_ID_PKCS11 5
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreUiKeyStoreDialogManager, KEYSTORE_ID_PKCS11, jint)

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreUiKeyStoreDialogManager)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobAfirmaCoreUiKeyStoreDialogManager")

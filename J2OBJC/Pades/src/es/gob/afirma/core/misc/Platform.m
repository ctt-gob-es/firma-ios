//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/Platform.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "es/gob/afirma/core/misc/Platform.h"
#include "java/io/File.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/util/Locale.h"
#include "java/util/logging/Logger.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/core/misc/Platform must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreMiscPlatform ()

/*!
 @brief Constructor bloqueado.
 */
- (instancetype)init;

+ (EsGobAfirmaCoreMiscPlatform_OS *)recoverOsName;

/*!
 @brief Obtiene el directorio de instalaci&oacute;n del entorno de
  ejecuci&oacute;n de Java actualmente en uso.Si no se puede obtener, se
  devolver&aacute; <code>null</code>.
 Copiado de com.sun.deploy.config.Config.
 @return Directorio del entorno de ejecuci&oacute;n de Java.
 */
+ (NSString *)recoverJavaHome;

@end

inline JavaUtilLoggingLogger *EsGobAfirmaCoreMiscPlatform_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaCoreMiscPlatform_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscPlatform, LOGGER, JavaUtilLoggingLogger *)

/*!
 @brief Sistema operativo.
 */
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_get_os(void);
inline EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_set_os(EsGobAfirmaCoreMiscPlatform_OS *value);
static EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_os;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreMiscPlatform, os, EsGobAfirmaCoreMiscPlatform_OS *)

/*!
 @brief Arquitectura de la m&eacute;quina virtual java.
 */
inline NSString *EsGobAfirmaCoreMiscPlatform_get_javaArch(void);
inline NSString *EsGobAfirmaCoreMiscPlatform_set_javaArch(NSString *value);
static NSString *EsGobAfirmaCoreMiscPlatform_javaArch;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreMiscPlatform, javaArch, NSString *)

/*!
 @brief Directorio de Java.
 */
inline NSString *EsGobAfirmaCoreMiscPlatform_get_javaHome(void);
inline NSString *EsGobAfirmaCoreMiscPlatform_set_javaHome(NSString *value);
static NSString *EsGobAfirmaCoreMiscPlatform_javaHome;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreMiscPlatform, javaHome, NSString *)

/*!
 @brief Directorio de bibliotecas de Java.
 */
inline NSString *EsGobAfirmaCoreMiscPlatform_get_javaLibraryPath(void);
inline NSString *EsGobAfirmaCoreMiscPlatform_set_javaLibraryPath(NSString *value);
static NSString *EsGobAfirmaCoreMiscPlatform_javaLibraryPath;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreMiscPlatform, javaLibraryPath, NSString *)

/*!
 @brief Directorio del usuario.
 */
inline NSString *EsGobAfirmaCoreMiscPlatform_get_userHome(void);
inline NSString *EsGobAfirmaCoreMiscPlatform_set_userHome(NSString *value);
static NSString *EsGobAfirmaCoreMiscPlatform_userHome;
J2OBJC_STATIC_FIELD_OBJ(EsGobAfirmaCoreMiscPlatform, userHome, NSString *)

__attribute__((unused)) static void EsGobAfirmaCoreMiscPlatform_init(EsGobAfirmaCoreMiscPlatform *self);

__attribute__((unused)) static EsGobAfirmaCoreMiscPlatform *new_EsGobAfirmaCoreMiscPlatform_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaCoreMiscPlatform *create_EsGobAfirmaCoreMiscPlatform_init(void);

__attribute__((unused)) static EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_recoverOsName(void);

__attribute__((unused)) static NSString *EsGobAfirmaCoreMiscPlatform_recoverJavaHome(void);

__attribute__((unused)) static void EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(EsGobAfirmaCoreMiscPlatform_MACHINE *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobAfirmaCoreMiscPlatform_MACHINE *new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static void EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(EsGobAfirmaCoreMiscPlatform_OS *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobAfirmaCoreMiscPlatform_OS *new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static void EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(EsGobAfirmaCoreMiscPlatform_BROWSER *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobAfirmaCoreMiscPlatform_BROWSER *new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/Platform.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreMiscPlatform)


#line 18
@implementation EsGobAfirmaCoreMiscPlatform

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 88
- (instancetype)init {
  EsGobAfirmaCoreMiscPlatform_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (EsGobAfirmaCoreMiscPlatform_MACHINE *)getMachineType {
  return EsGobAfirmaCoreMiscPlatform_getMachineType();
}


#line 119
+ (EsGobAfirmaCoreMiscPlatform_OS *)recoverOsName {
  return EsGobAfirmaCoreMiscPlatform_recoverOsName();
}


#line 148
+ (EsGobAfirmaCoreMiscPlatform_BROWSER *)getBrowserWithNSString:(NSString *)userAgent {
  return EsGobAfirmaCoreMiscPlatform_getBrowserWithNSString_(userAgent);
}


#line 176
+ (EsGobAfirmaCoreMiscPlatform_OS *)getOS {
  return EsGobAfirmaCoreMiscPlatform_getOS();
}


#line 186
+ (NSString *)getJavaArch {
  return EsGobAfirmaCoreMiscPlatform_getJavaArch();
}


#line 206
+ (NSString *)getJavaHome {
  return EsGobAfirmaCoreMiscPlatform_getJavaHome();
}


#line 215
+ (NSString *)getJavaLibraryPath {
  return EsGobAfirmaCoreMiscPlatform_getJavaLibraryPath();
}


#line 225
+ (NSString *)getUserHome {
  return EsGobAfirmaCoreMiscPlatform_getUserHome();
}


#line 237
+ (jboolean)isUnixSystemWithEsGobAfirmaCoreMiscPlatform_OS:(EsGobAfirmaCoreMiscPlatform_OS *)system {
  return EsGobAfirmaCoreMiscPlatform_isUnixSystemWithEsGobAfirmaCoreMiscPlatform_OS_(system);
}


#line 245
+ (NSString *)recoverJavaHome {
  return EsGobAfirmaCoreMiscPlatform_recoverJavaHome();
}


#line 269
+ (NSString *)getSystemRoot {
  return EsGobAfirmaCoreMiscPlatform_getSystemRoot();
}


#line 292
+ (NSString *)getSystemLibDir {
  return EsGobAfirmaCoreMiscPlatform_getSystemLibDir();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscPlatform_MACHINE;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscPlatform_OS;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscPlatform_BROWSER;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscPlatform_OS;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMachineType);
  methods[2].selector = @selector(recoverOsName);
  methods[3].selector = @selector(getBrowserWithNSString:);
  methods[4].selector = @selector(getOS);
  methods[5].selector = @selector(getJavaArch);
  methods[6].selector = @selector(getJavaHome);
  methods[7].selector = @selector(getJavaLibraryPath);
  methods[8].selector = @selector(getUserHome);
  methods[9].selector = @selector(isUnixSystemWithEsGobAfirmaCoreMiscPlatform_OS:);
  methods[10].selector = @selector(recoverJavaHome);
  methods[11].selector = @selector(getSystemRoot);
  methods[12].selector = @selector(getSystemLibDir);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "os", "LEsGobAfirmaCoreMiscPlatform_OS;", .constantValue.asLong = 0, 0xa, -1, 5, -1, -1 },
    { "javaArch", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
    { "javaHome", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 7, -1, -1 },
    { "javaLibraryPath", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 8, -1, -1 },
    { "userHome", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "getBrowser", "LNSString;", "isUnixSystem", "LEsGobAfirmaCoreMiscPlatform_OS;", &EsGobAfirmaCoreMiscPlatform_LOGGER, &EsGobAfirmaCoreMiscPlatform_os, &EsGobAfirmaCoreMiscPlatform_javaArch, &EsGobAfirmaCoreMiscPlatform_javaHome, &EsGobAfirmaCoreMiscPlatform_javaLibraryPath, &EsGobAfirmaCoreMiscPlatform_userHome, "LEsGobAfirmaCoreMiscPlatform_MACHINE;LEsGobAfirmaCoreMiscPlatform_OS;LEsGobAfirmaCoreMiscPlatform_BROWSER;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscPlatform = { "Platform", "es.gob.afirma.core.misc", ptrTable, methods, fields, 7, 0x11, 13, 6, -1, 10, -1, -1, -1 };
  return &_EsGobAfirmaCoreMiscPlatform;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreMiscPlatform class]) {
    EsGobAfirmaCoreMiscPlatform_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 20
    @"es.gob.afirma");
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreMiscPlatform)
  }
}

@end


#line 88
void EsGobAfirmaCoreMiscPlatform_init(EsGobAfirmaCoreMiscPlatform *self) {
  NSObject_init(self);
}


#line 88
EsGobAfirmaCoreMiscPlatform *new_EsGobAfirmaCoreMiscPlatform_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscPlatform, init)
}


#line 88
EsGobAfirmaCoreMiscPlatform *create_EsGobAfirmaCoreMiscPlatform_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscPlatform, init)
}


#line 94
EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_getMachineType() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 95
  NSString *osArch = JavaLangSystem_getPropertyWithNSString_(@"os.arch");
  if (osArch == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) warningWithNSString:@"No se ha podido determinar el la arquitectura del procesador"];
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, OTHER);
  }
  if ([osArch isEqual:@"aarch64"] || [osArch java_hasPrefix:@"arm64"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, ARM64);
  }
  if ([osArch isEqual:@"mips64"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS64);
  }
  if ([osArch isEqual:@"mips"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS32);
  }
  if ([osArch isEqual:@"x86_64"] || [osArch java_hasPrefix:@"amd64"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, AMD64);
  }
  if ([osArch isEqual:@"x86"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, X86);
  }
  [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) warningWithNSString:JreStrcat("$$", @"No se ha podido determinar el la arquitectura del procesador: ", osArch)];
  return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, OTHER);
}


#line 119
EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_recoverOsName() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  NSString *osName = JavaLangSystem_getPropertyWithNSString_(@"os.name");
  
#line 123
  if ([((NSString *) nil_chk(osName)) java_contains:@"indows"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, WINDOWS);
  }
  else if ([osName java_contains:@"inux"]) {
    if ([@"Dalvik" isEqual:JavaLangSystem_getPropertyWithNSString_(@"java.vm.name")]) {
      return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, ANDROID);
    }
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, LINUX);
  }
  else if ([osName java_contains:@"SunOS"] || [osName java_contains:@"olaris"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, SOLARIS);
  }
  else if ([osName java_hasPrefix:@"Mac OS X"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, MACOSX);
  }
  else {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) warningWithNSString:@"No se ha podido determinar el sistema operativo"];
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, OTHER);
  }
}


#line 148
EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_getBrowserWithNSString_(NSString *userAgent) {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 149
  if (userAgent == nil) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, OTHER);
  }
  else if ([((NSString *) nil_chk([userAgent java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)])) java_contains:@"msie"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, INTERNET_EXPLORER);
  }
  else if ([((NSString *) nil_chk([userAgent java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)])) java_contains:@"firefox"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, FIREFOX);
  }
  else if ([((NSString *) nil_chk([userAgent java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)])) java_contains:@"chrome"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, CHROME);
  }
  else if ([((NSString *) nil_chk([userAgent java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)])) java_contains:@"safari"]) {
    
#line 164
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, SAFARI);
  }
  else if ([((NSString *) nil_chk([userAgent java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)])) java_contains:@"opera"]) {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, OPERA);
  }
  else {
    return JreLoadEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, OTHER);
  }
}


#line 176
EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_getOS() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 177
  if (EsGobAfirmaCoreMiscPlatform_os == nil) {
    EsGobAfirmaCoreMiscPlatform_os = EsGobAfirmaCoreMiscPlatform_recoverOsName();
  }
  return EsGobAfirmaCoreMiscPlatform_os;
}

NSString *EsGobAfirmaCoreMiscPlatform_getJavaArch() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 187
  if (EsGobAfirmaCoreMiscPlatform_javaArch == nil) {
    @try {
      EsGobAfirmaCoreMiscPlatform_javaArch = JavaLangSystem_getPropertyWithNSString_(@"sun.arch.data.model");
      if (EsGobAfirmaCoreMiscPlatform_javaArch == nil) {
        EsGobAfirmaCoreMiscPlatform_javaArch = JavaLangSystem_getPropertyWithNSString_(@"com.ibm.vm.bitmode");
      }
    }
    @catch (JavaLangException *e) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) severeWithNSString:JreStrcat("$@", @"No se ha podido determinar si la JVM es de 32 o 64 bits, se asume que es 64: ",
#line 196
      e)];
      
#line 198
      return @"64";
    }
  }
  return EsGobAfirmaCoreMiscPlatform_javaArch;
}


#line 206
NSString *EsGobAfirmaCoreMiscPlatform_getJavaHome() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 207
  if (EsGobAfirmaCoreMiscPlatform_javaHome == nil) {
    EsGobAfirmaCoreMiscPlatform_javaHome = EsGobAfirmaCoreMiscPlatform_recoverJavaHome();
  }
  return EsGobAfirmaCoreMiscPlatform_javaHome;
}


#line 215
NSString *EsGobAfirmaCoreMiscPlatform_getJavaLibraryPath() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 216
  if (EsGobAfirmaCoreMiscPlatform_javaLibraryPath == nil) {
    EsGobAfirmaCoreMiscPlatform_javaLibraryPath = JavaLangSystem_getPropertyWithNSString_(@"java.library.path");
  }
  return EsGobAfirmaCoreMiscPlatform_javaLibraryPath;
}

NSString *EsGobAfirmaCoreMiscPlatform_getUserHome() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 226
  if (EsGobAfirmaCoreMiscPlatform_userHome == nil) {
    EsGobAfirmaCoreMiscPlatform_userHome = JavaLangSystem_getPropertyWithNSString_(@"user.home");
  }
  return EsGobAfirmaCoreMiscPlatform_userHome;
}


#line 237
jboolean EsGobAfirmaCoreMiscPlatform_isUnixSystemWithEsGobAfirmaCoreMiscPlatform_OS_(EsGobAfirmaCoreMiscPlatform_OS *system) {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 238
  return system == JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, LINUX) || system == JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, MACOSX) || system == JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, SOLARIS);
}


#line 245
NSString *EsGobAfirmaCoreMiscPlatform_recoverJavaHome() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 246
  NSString *ret = nil;
  @try {
    ret = JavaLangSystem_getPropertyWithNSString_(@"jnlpx.home");
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se ha podido leer la variable 'jnlpx.home': ", e)];
  }
  if (ret != nil) {
    return [ret java_substring:0 endIndex:[ret java_lastIndexOfString:JreLoadStatic(JavaIoFile, separator)]];
  }
  
#line 257
  @try {
    return JavaLangSystem_getPropertyWithNSString_(@"java.home");
  }
  @catch (JavaLangException *e) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) warningWithNSString:JreStrcat("$@", @"No se ha podido identificar el directorio de Java: ", e)];
  }
  
#line 264
  return nil;
}


#line 269
NSString *EsGobAfirmaCoreMiscPlatform_getSystemRoot() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 270
  if (![((EsGobAfirmaCoreMiscPlatform_OS *) nil_chk(EsGobAfirmaCoreMiscPlatform_getOS())) isEqual:JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, WINDOWS)]) {
    return JreLoadStatic(JavaIoFile, separator);
  }
  NSString *systemRoot = JavaLangSystem_getPropertyWithNSString_(@"SystemRoot");
  if (systemRoot == nil) {
    NSString *defaultSystemRoot = @"C:\\WINDOWS";
    JavaIoFile *winSys32 = new_JavaIoFile_initWithNSString_(JreStrcat("$$", defaultSystemRoot, @"\\system32"));
    if ([winSys32 isDirectory]) {
      return defaultSystemRoot;
    }
  }
  if (systemRoot == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) warningWithNSString:JreStrcat("$$", @"No se ha encontrado el directorio ra&iacute;z del sistema, se devolver&aacute;: ", JreLoadStatic(JavaIoFile, separator))];
    
#line 284
    return JreLoadStatic(JavaIoFile, separator);
  }
  return systemRoot;
}


#line 292
NSString *EsGobAfirmaCoreMiscPlatform_getSystemLibDir() {
  EsGobAfirmaCoreMiscPlatform_initialize();
  
#line 293
  if ([((EsGobAfirmaCoreMiscPlatform_OS *) nil_chk(EsGobAfirmaCoreMiscPlatform_getOS())) isEqual:JreLoadEnum(EsGobAfirmaCoreMiscPlatform_OS, WINDOWS)]) {
    NSString *systemRoot = EsGobAfirmaCoreMiscPlatform_getSystemRoot();
    if (systemRoot == nil) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaCoreMiscPlatform_LOGGER)) warningWithNSString:@"No se ha podido determinar el directorio de Windows accediendo al registro, se usara 'C:\\WINDOWS\\'"];
      systemRoot = @"c:\\windows\\";
    }
    if (![systemRoot java_hasSuffix:@"\\"]) {
      (void) JreStrAppendStrong(&systemRoot, "$", @"\\");
    }
    if ([@"32" isEqual:EsGobAfirmaCoreMiscPlatform_getJavaArch()]) {
      JavaIoFile *tmpFile = new_JavaIoFile_initWithNSString_(JreStrcat("$$", systemRoot, @"SysWOW64"));
      if ([tmpFile isDirectory]) {
        return [tmpFile getAbsolutePath];
      }
    }
    
#line 309
    return JreStrcat("$$", systemRoot, @"System32");
  }
  
#line 327
  NSString *canonicalLibDir = JreStrcat("$$", @"/usr/lib", EsGobAfirmaCoreMiscPlatform_getJavaArch());
  if ([new_JavaIoFile_initWithNSString_(canonicalLibDir) exists]) {
    return canonicalLibDir;
  }
  return @"/usr/lib";
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscPlatform)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/Platform.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreMiscPlatform_MACHINE)

EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_values_[7];


#line 23
@implementation EsGobAfirmaCoreMiscPlatform_MACHINE

+ (IOSObjectArray *)values {
  return EsGobAfirmaCoreMiscPlatform_MACHINE_values();
}

+ (EsGobAfirmaCoreMiscPlatform_MACHINE *)valueOfWithNSString:(NSString *)name {
  return EsGobAfirmaCoreMiscPlatform_MACHINE_valueOfWithNSString_(name);
}

- (EsGobAfirmaCoreMiscPlatform_MACHINE_Enum)toNSEnum {
  return (EsGobAfirmaCoreMiscPlatform_MACHINE_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEsGobAfirmaCoreMiscPlatform_MACHINE;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscPlatform_MACHINE;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "X86", "LEsGobAfirmaCoreMiscPlatform_MACHINE;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "ARM32", "LEsGobAfirmaCoreMiscPlatform_MACHINE;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "MIPS32", "LEsGobAfirmaCoreMiscPlatform_MACHINE;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "AMD64", "LEsGobAfirmaCoreMiscPlatform_MACHINE;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "ARM64", "LEsGobAfirmaCoreMiscPlatform_MACHINE;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "MIPS64", "LEsGobAfirmaCoreMiscPlatform_MACHINE;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "OTHER", "LEsGobAfirmaCoreMiscPlatform_MACHINE;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, X86), &JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, ARM32), &JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS32), &JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, AMD64), &JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, ARM64), &JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS64), &JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, OTHER), "LEsGobAfirmaCoreMiscPlatform;", "Ljava/lang/Enum<Les/gob/afirma/core/misc/Platform$MACHINE;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscPlatform_MACHINE = { "MACHINE", "es.gob.afirma.core.misc", ptrTable, methods, fields, 7, 0x4019, 2, 7, 9, -1, -1, 10, -1 };
  return &_EsGobAfirmaCoreMiscPlatform_MACHINE;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreMiscPlatform_MACHINE class]) {
    JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, X86) = new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_MACHINE_class_(), 0), 0);
    JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, ARM32) = new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_MACHINE_class_(), 1), 1);
    JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS32) = new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_MACHINE_class_(), 2), 2);
    JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, AMD64) = new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_MACHINE_class_(), 3), 3);
    JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, ARM64) = new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_MACHINE_class_(), 4), 4);
    JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, MIPS64) = new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_MACHINE_class_(), 5), 5);
    JreEnum(EsGobAfirmaCoreMiscPlatform_MACHINE, OTHER) = new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_MACHINE_class_(), 6), 6);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreMiscPlatform_MACHINE)
  }
}

@end


#line 23
void EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(EsGobAfirmaCoreMiscPlatform_MACHINE *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}


#line 23
EsGobAfirmaCoreMiscPlatform_MACHINE *new_EsGobAfirmaCoreMiscPlatform_MACHINE_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscPlatform_MACHINE, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EsGobAfirmaCoreMiscPlatform_MACHINE_values() {
  EsGobAfirmaCoreMiscPlatform_MACHINE_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobAfirmaCoreMiscPlatform_MACHINE_values_ count:7 type:EsGobAfirmaCoreMiscPlatform_MACHINE_class_()];
}

EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_valueOfWithNSString_(NSString *name) {
  EsGobAfirmaCoreMiscPlatform_MACHINE_initialize();
  for (int i = 0; i < 7; i++) {
    EsGobAfirmaCoreMiscPlatform_MACHINE *e = EsGobAfirmaCoreMiscPlatform_MACHINE_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobAfirmaCoreMiscPlatform_MACHINE *EsGobAfirmaCoreMiscPlatform_MACHINE_fromOrdinal(NSUInteger ordinal) {
  EsGobAfirmaCoreMiscPlatform_MACHINE_initialize();
  if (ordinal >= 7) {
    return nil;
  }
  return EsGobAfirmaCoreMiscPlatform_MACHINE_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscPlatform_MACHINE)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/Platform.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreMiscPlatform_OS)

EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_values_[6];


#line 41
@implementation EsGobAfirmaCoreMiscPlatform_OS

+ (IOSObjectArray *)values {
  return EsGobAfirmaCoreMiscPlatform_OS_values();
}

+ (EsGobAfirmaCoreMiscPlatform_OS *)valueOfWithNSString:(NSString *)name {
  return EsGobAfirmaCoreMiscPlatform_OS_valueOfWithNSString_(name);
}

- (EsGobAfirmaCoreMiscPlatform_OS_Enum)toNSEnum {
  return (EsGobAfirmaCoreMiscPlatform_OS_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEsGobAfirmaCoreMiscPlatform_OS;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscPlatform_OS;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "WINDOWS", "LEsGobAfirmaCoreMiscPlatform_OS;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "LINUX", "LEsGobAfirmaCoreMiscPlatform_OS;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "SOLARIS", "LEsGobAfirmaCoreMiscPlatform_OS;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "MACOSX", "LEsGobAfirmaCoreMiscPlatform_OS;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "ANDROID", "LEsGobAfirmaCoreMiscPlatform_OS;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "OTHER", "LEsGobAfirmaCoreMiscPlatform_OS;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EsGobAfirmaCoreMiscPlatform_OS, WINDOWS), &JreEnum(EsGobAfirmaCoreMiscPlatform_OS, LINUX), &JreEnum(EsGobAfirmaCoreMiscPlatform_OS, SOLARIS), &JreEnum(EsGobAfirmaCoreMiscPlatform_OS, MACOSX), &JreEnum(EsGobAfirmaCoreMiscPlatform_OS, ANDROID), &JreEnum(EsGobAfirmaCoreMiscPlatform_OS, OTHER), "LEsGobAfirmaCoreMiscPlatform;", "Ljava/lang/Enum<Les/gob/afirma/core/misc/Platform$OS;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscPlatform_OS = { "OS", "es.gob.afirma.core.misc", ptrTable, methods, fields, 7, 0x4019, 2, 6, 8, -1, -1, 9, -1 };
  return &_EsGobAfirmaCoreMiscPlatform_OS;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreMiscPlatform_OS class]) {
    JreEnum(EsGobAfirmaCoreMiscPlatform_OS, WINDOWS) = new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_OS_class_(), 0), 0);
    JreEnum(EsGobAfirmaCoreMiscPlatform_OS, LINUX) = new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_OS_class_(), 1), 1);
    JreEnum(EsGobAfirmaCoreMiscPlatform_OS, SOLARIS) = new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_OS_class_(), 2), 2);
    JreEnum(EsGobAfirmaCoreMiscPlatform_OS, MACOSX) = new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_OS_class_(), 3), 3);
    JreEnum(EsGobAfirmaCoreMiscPlatform_OS, ANDROID) = new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_OS_class_(), 4), 4);
    JreEnum(EsGobAfirmaCoreMiscPlatform_OS, OTHER) = new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_OS_class_(), 5), 5);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreMiscPlatform_OS)
  }
}

@end


#line 41
void EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(EsGobAfirmaCoreMiscPlatform_OS *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}


#line 41
EsGobAfirmaCoreMiscPlatform_OS *new_EsGobAfirmaCoreMiscPlatform_OS_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscPlatform_OS, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EsGobAfirmaCoreMiscPlatform_OS_values() {
  EsGobAfirmaCoreMiscPlatform_OS_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobAfirmaCoreMiscPlatform_OS_values_ count:6 type:EsGobAfirmaCoreMiscPlatform_OS_class_()];
}

EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_valueOfWithNSString_(NSString *name) {
  EsGobAfirmaCoreMiscPlatform_OS_initialize();
  for (int i = 0; i < 6; i++) {
    EsGobAfirmaCoreMiscPlatform_OS *e = EsGobAfirmaCoreMiscPlatform_OS_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobAfirmaCoreMiscPlatform_OS *EsGobAfirmaCoreMiscPlatform_OS_fromOrdinal(NSUInteger ordinal) {
  EsGobAfirmaCoreMiscPlatform_OS_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return EsGobAfirmaCoreMiscPlatform_OS_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscPlatform_OS)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/Platform.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaCoreMiscPlatform_BROWSER)

EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_values_[6];


#line 57
@implementation EsGobAfirmaCoreMiscPlatform_BROWSER

+ (IOSObjectArray *)values {
  return EsGobAfirmaCoreMiscPlatform_BROWSER_values();
}

+ (EsGobAfirmaCoreMiscPlatform_BROWSER *)valueOfWithNSString:(NSString *)name {
  return EsGobAfirmaCoreMiscPlatform_BROWSER_valueOfWithNSString_(name);
}

- (EsGobAfirmaCoreMiscPlatform_BROWSER_Enum)toNSEnum {
  return (EsGobAfirmaCoreMiscPlatform_BROWSER_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LEsGobAfirmaCoreMiscPlatform_BROWSER;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreMiscPlatform_BROWSER;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INTERNET_EXPLORER", "LEsGobAfirmaCoreMiscPlatform_BROWSER;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "FIREFOX", "LEsGobAfirmaCoreMiscPlatform_BROWSER;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "CHROME", "LEsGobAfirmaCoreMiscPlatform_BROWSER;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "SAFARI", "LEsGobAfirmaCoreMiscPlatform_BROWSER;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "OPERA", "LEsGobAfirmaCoreMiscPlatform_BROWSER;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "OTHER", "LEsGobAfirmaCoreMiscPlatform_BROWSER;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, INTERNET_EXPLORER), &JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, FIREFOX), &JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, CHROME), &JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, SAFARI), &JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, OPERA), &JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, OTHER), "LEsGobAfirmaCoreMiscPlatform;", "Ljava/lang/Enum<Les/gob/afirma/core/misc/Platform$BROWSER;>;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscPlatform_BROWSER = { "BROWSER", "es.gob.afirma.core.misc", ptrTable, methods, fields, 7, 0x4019, 2, 6, 8, -1, -1, 9, -1 };
  return &_EsGobAfirmaCoreMiscPlatform_BROWSER;
}

+ (void)initialize {
  if (self == [EsGobAfirmaCoreMiscPlatform_BROWSER class]) {
    JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, INTERNET_EXPLORER) = new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_BROWSER_class_(), 0), 0);
    JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, FIREFOX) = new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_BROWSER_class_(), 1), 1);
    JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, CHROME) = new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_BROWSER_class_(), 2), 2);
    JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, SAFARI) = new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_BROWSER_class_(), 3), 3);
    JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, OPERA) = new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_BROWSER_class_(), 4), 4);
    JreEnum(EsGobAfirmaCoreMiscPlatform_BROWSER, OTHER) = new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(JreEnumConstantName(EsGobAfirmaCoreMiscPlatform_BROWSER_class_(), 5), 5);
    J2OBJC_SET_INITIALIZED(EsGobAfirmaCoreMiscPlatform_BROWSER)
  }
}

@end


#line 57
void EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(EsGobAfirmaCoreMiscPlatform_BROWSER *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}


#line 57
EsGobAfirmaCoreMiscPlatform_BROWSER *new_EsGobAfirmaCoreMiscPlatform_BROWSER_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscPlatform_BROWSER, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *EsGobAfirmaCoreMiscPlatform_BROWSER_values() {
  EsGobAfirmaCoreMiscPlatform_BROWSER_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobAfirmaCoreMiscPlatform_BROWSER_values_ count:6 type:EsGobAfirmaCoreMiscPlatform_BROWSER_class_()];
}

EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_valueOfWithNSString_(NSString *name) {
  EsGobAfirmaCoreMiscPlatform_BROWSER_initialize();
  for (int i = 0; i < 6; i++) {
    EsGobAfirmaCoreMiscPlatform_BROWSER *e = EsGobAfirmaCoreMiscPlatform_BROWSER_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobAfirmaCoreMiscPlatform_BROWSER *EsGobAfirmaCoreMiscPlatform_BROWSER_fromOrdinal(NSUInteger ordinal) {
  EsGobAfirmaCoreMiscPlatform_BROWSER_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return EsGobAfirmaCoreMiscPlatform_BROWSER_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscPlatform_BROWSER)

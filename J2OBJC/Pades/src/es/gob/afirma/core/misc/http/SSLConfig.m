//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/http/SSLConfig.java
//

#include "J2ObjC_source.h"
#include "es/gob/afirma/core/misc/http/SSLConfig.h"
#include "javax/net/ssl/HostnameVerifier.h"
#include "javax/net/ssl/SSLSocketFactory.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/core/misc/http/SSLConfig must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreMiscHttpSSLConfig () {
 @public
  id<JavaxNetSslHostnameVerifier> hostnameVerifier_;
  JavaxNetSslSSLSocketFactory *socketFactory_;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreMiscHttpSSLConfig, hostnameVerifier_, id<JavaxNetSslHostnameVerifier>)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreMiscHttpSSLConfig, socketFactory_, JavaxNetSslSSLSocketFactory *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/http/SSLConfig.java"


#line 9
@implementation EsGobAfirmaCoreMiscHttpSSLConfig

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 9
- (instancetype)init {
  EsGobAfirmaCoreMiscHttpSSLConfig_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 20
- (id<JavaxNetSslHostnameVerifier>)getHostnameVerifier {
  return self->hostnameVerifier_;
}


#line 29
- (void)setHostnameVerifierWithJavaxNetSslHostnameVerifier:(id<JavaxNetSslHostnameVerifier>)hostnameVerifier {
  self->hostnameVerifier_ = hostnameVerifier;
}


#line 37
- (JavaxNetSslSSLSocketFactory *)getSSLSocketFactory {
  return self->socketFactory_;
}


#line 45
- (void)setSSLSocketFactoryWithJavaxNetSslSSLSocketFactory:(JavaxNetSslSSLSocketFactory *)socketFactory {
  self->socketFactory_ = socketFactory;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxNetSslHostnameVerifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxNetSslSSLSocketFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getHostnameVerifier);
  methods[2].selector = @selector(setHostnameVerifierWithJavaxNetSslHostnameVerifier:);
  methods[3].selector = @selector(getSSLSocketFactory);
  methods[4].selector = @selector(setSSLSocketFactoryWithJavaxNetSslSSLSocketFactory:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hostnameVerifier_", "LJavaxNetSslHostnameVerifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "socketFactory_", "LJavaxNetSslSSLSocketFactory;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setHostnameVerifier", "LJavaxNetSslHostnameVerifier;", "setSSLSocketFactory", "LJavaxNetSslSSLSocketFactory;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscHttpSSLConfig = { "SSLConfig", "es.gob.afirma.core.misc.http", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreMiscHttpSSLConfig;
}

@end


#line 9
void EsGobAfirmaCoreMiscHttpSSLConfig_init(EsGobAfirmaCoreMiscHttpSSLConfig *self) {
  NSObject_init(self);
  self->hostnameVerifier_ = nil;
  self->socketFactory_ =
#line 13
  nil;
}


#line 9
EsGobAfirmaCoreMiscHttpSSLConfig *new_EsGobAfirmaCoreMiscHttpSSLConfig_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscHttpSSLConfig, init)
}


#line 9
EsGobAfirmaCoreMiscHttpSSLConfig *create_EsGobAfirmaCoreMiscHttpSSLConfig_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscHttpSSLConfig, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscHttpSSLConfig)

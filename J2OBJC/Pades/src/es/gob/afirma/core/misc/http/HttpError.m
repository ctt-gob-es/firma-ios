//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/http/HttpError.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/afirma/core/misc/LoggerUtil.h"
#include "es/gob/afirma/core/misc/http/HttpError.h"
#include "java/io/IOException.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/core/misc/http/HttpError must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreMiscHttpHttpError () {
 @public
  /*!
   @brief C&oacute;digo del error.
   */
  jint responseCode_;
  /*!
   @brief Descripci&oacute;n del error.
   */
  NSString *responseDescription_;
  /*!
   @brief Flujo de octetos del error (del contenido del error).
   */
  IOSByteArray *errorStreamBytes_;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreMiscHttpHttpError, responseDescription_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreMiscHttpHttpError, errorStreamBytes_, IOSByteArray *)

inline jlong EsGobAfirmaCoreMiscHttpHttpError_get_serialVersionUID(void);
#define EsGobAfirmaCoreMiscHttpHttpError_serialVersionUID 8997766820804553378LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreMiscHttpHttpError, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/http/HttpError.java"


#line 18
@implementation EsGobAfirmaCoreMiscHttpHttpError


#line 33
- (instancetype)initWithInt:(jint)resCode {
  EsGobAfirmaCoreMiscHttpHttpError_initWithInt_(self, resCode);
  return self;
}


#line 44
- (instancetype)initWithInt:(jint)resCode
               withNSString:(NSString *)resDescription
               withNSString:(NSString *)url {
  EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withNSString_(self, resCode, resDescription, url);
  return self;
}


#line 53
- (instancetype)initWithInt:(jint)resCode
               withNSString:(NSString *)resDescription
              withByteArray:(IOSByteArray *)errorStreamContent
               withNSString:(NSString *)url {
  EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withByteArray_withNSString_(self, resCode, resDescription, errorStreamContent, url);
  return self;
}


#line 67
- (IOSByteArray *)getErrorStreamBytes {
  return self->errorStreamBytes_ != nil ? [self->errorStreamBytes_ java_clone] : nil;
}


#line 73
- (jint)getResponseCode {
  return self->responseCode_;
}


#line 79
- (NSString *)getResponseDescription {
  return self->responseDescription_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithInt:withNSString:withNSString:);
  methods[2].selector = @selector(initWithInt:withNSString:withByteArray:withNSString:);
  methods[3].selector = @selector(getErrorStreamBytes);
  methods[4].selector = @selector(getResponseCode);
  methods[5].selector = @selector(getResponseDescription);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaCoreMiscHttpHttpError_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "responseCode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "responseDescription_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "errorStreamBytes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "ILNSString;LNSString;", "ILNSString;[BLNSString;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreMiscHttpHttpError = { "HttpError", "es.gob.afirma.core.misc.http", ptrTable, methods, fields, 7, 0x11, 6, 4, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreMiscHttpHttpError;
}

@end


#line 33
void EsGobAfirmaCoreMiscHttpHttpError_initWithInt_(EsGobAfirmaCoreMiscHttpHttpError *self, jint resCode) {
  JavaIoIOException_initWithNSString_(self, JreStrcat("$I", @"Error en conexion HTTP con codigo de respuesta ", resCode));
  self->responseCode_ = resCode;
  self->responseDescription_ = nil;
  self->errorStreamBytes_ = nil;
}


#line 33
EsGobAfirmaCoreMiscHttpHttpError *new_EsGobAfirmaCoreMiscHttpHttpError_initWithInt_(jint resCode) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscHttpHttpError, initWithInt_, resCode)
}


#line 33
EsGobAfirmaCoreMiscHttpHttpError *create_EsGobAfirmaCoreMiscHttpHttpError_initWithInt_(jint resCode) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscHttpHttpError, initWithInt_, resCode)
}


#line 44
void EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withNSString_(EsGobAfirmaCoreMiscHttpHttpError *self, jint resCode, NSString *resDescription, NSString *url) {
  EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withByteArray_withNSString_(self, resCode, resDescription, nil, url);
}


#line 44
EsGobAfirmaCoreMiscHttpHttpError *new_EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withNSString_(jint resCode, NSString *resDescription, NSString *url) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscHttpHttpError, initWithInt_withNSString_withNSString_, resCode, resDescription, url)
}


#line 44
EsGobAfirmaCoreMiscHttpHttpError *create_EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withNSString_(jint resCode, NSString *resDescription, NSString *url) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscHttpHttpError, initWithInt_withNSString_withNSString_, resCode, resDescription, url)
}


#line 53
void EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withByteArray_withNSString_(EsGobAfirmaCoreMiscHttpHttpError *self, jint resCode, NSString *resDescription, IOSByteArray *errorStreamContent, NSString *url) {
  JavaIoIOException_initWithNSString_(self, JreStrcat("$I$$$$$", @"Error HTTP con codigo  ",
#line 55
  resCode,
#line 56
  (errorStreamContent != nil && errorStreamContent->size_ > 0 ? JreStrcat("$$C", @", cuerpo '", EsGobAfirmaCoreMiscLoggerUtil_getTrimBytesWithByteArray_(errorStreamContent), '\'') : @""), @" y descripcion '",
#line 57
  resDescription, @"' para la direccion: ", EsGobAfirmaCoreMiscLoggerUtil_getTrimStrWithNSString_(
#line 58
  url)));
  
#line 60
  self->responseCode_ = resCode;
  self->responseDescription_ = resDescription;
  self->errorStreamBytes_ = errorStreamContent != nil ? [errorStreamContent java_clone] : nil;
}


#line 53
EsGobAfirmaCoreMiscHttpHttpError *new_EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withByteArray_withNSString_(jint resCode, NSString *resDescription, IOSByteArray *errorStreamContent, NSString *url) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreMiscHttpHttpError, initWithInt_withNSString_withByteArray_withNSString_, resCode, resDescription, errorStreamContent, url)
}


#line 53
EsGobAfirmaCoreMiscHttpHttpError *create_EsGobAfirmaCoreMiscHttpHttpError_initWithInt_withNSString_withByteArray_withNSString_(jint resCode, NSString *resDescription, IOSByteArray *errorStreamContent, NSString *url) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreMiscHttpHttpError, initWithInt_withNSString_withByteArray_withNSString_, resCode, resDescription, errorStreamContent, url)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreMiscHttpHttpError)

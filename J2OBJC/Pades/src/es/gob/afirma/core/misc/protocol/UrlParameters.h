//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/misc/protocol/UrlParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobAfirmaCoreMiscProtocolUrlParameters")
#ifdef RESTRICT_EsGobAfirmaCoreMiscProtocolUrlParameters
#define INCLUDE_ALL_EsGobAfirmaCoreMiscProtocolUrlParameters 0
#else
#define INCLUDE_ALL_EsGobAfirmaCoreMiscProtocolUrlParameters 1
#endif
#undef RESTRICT_EsGobAfirmaCoreMiscProtocolUrlParameters

#if !defined (EsGobAfirmaCoreMiscProtocolUrlParameters_) && (INCLUDE_ALL_EsGobAfirmaCoreMiscProtocolUrlParameters || defined(INCLUDE_EsGobAfirmaCoreMiscProtocolUrlParameters))
#define EsGobAfirmaCoreMiscProtocolUrlParameters_

@class IOSByteArray;
@class JavaNetURL;
@class JavaUtilLoggingLogger;
@class JavaUtilProperties;
@protocol JavaUtilMap;

/*!
 @brief Par&aacute;metros habitualmente comunes para todas las operaciones.
 */
@interface EsGobAfirmaCoreMiscProtocolUrlParameters : NSObject {
 @public
  IOSByteArray *data_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief Obtiene los datos.
 @return Datos.
 */
- (IOSByteArray *)getData;

/*!
 @brief Obtiene el nombre del almac&eacute;n de claves a usar por defecto.
 @return Nombre del almac&eacute;n de claves a usar por defecto
 */
- (NSString *)getDefaultKeyStore;

/*!
 @brief Obtiene la ruta de la biblioteca del almac&eacute;n de claves a usar por defecto.
 @return Ruta de la biblioteca del almac&eacute;n de claves a usar por defecto
 */
- (NSString *)getDefaultKeyStoreLib;

/*!
 @brief Obtiene la clave DES de cifrado de los datos a subir al servidor intermedio.
 @return Clave DES de cifrado de los datos a subir al servidor intermedio
 */
- (IOSByteArray *)getDesKey;

/*!
 @brief Obtiene los par&aacute;metros adicionales de la firma.
 Se pueden modificar estos parametros a partir del
  objeto devuelto.
 @return Par&aacute;metros adicionales de la firma
 */
- (JavaUtilProperties *)getExtraParams;

/*!
 @brief Obtiene el identificador de los datos en el servidor intermedio.
 @return Identificador de los datos en el servidor intermedio
 */
- (NSString *)getFileId;

/*!
 @brief Obtiene el nombre de fichero propuesto para guardar los datos.
 @return Nombre de fichero propuesto para guardar los datos
 */
- (NSString *)getFileName;

/*!
 @brief Obtiene el identificador de sesi&oacute;n.
 @return Identificador de sesi&oacute;n
 */
- (NSString *)getId;

/*!
 @brief Obtiene la versi&oacute;n m&iacute;nima del cliente exigida por la
  aplicaci&oacute;n.
 @return Versi&oacute;n m&iacute;nima del cliente o <code>null</code> si no
  se estableci&oacute;.
 */
- (NSString *)getMinimumClientVersion;

/*!
 @brief Obtiene la URL de subida al servidor intermedio.
 @return URL de subida al servidor intermedio
 */
- (JavaNetURL *)getRetrieveServletUrl;

/*!
 @brief Obtiene la URL del servlet de almacenamiento temporal en servidor.
 @return URL del servlet de almacenamiento temporal en servidor
 */
- (JavaNetURL *)getStorageServletUrl;

/*!
 @brief Obtiene el indicador de si se ha solicitado que se realice una espera activa
  a la espera del fin de la operaci&oacute;n solicitada.
 @return <code>true</code> si se pide que se emita la solicitud de espera activa, 
 <code>false</code> en caso contrario.
 */
- (jboolean)isActiveWaiting;

/*!
 @brief Establece los datos.
 @param dat Datos.
 */
- (void)setDataWithByteArray:(IOSByteArray *)dat;

#pragma mark Protected

+ (NSString *)getDefaultKeyStoreLibWithJavaUtilMap:(id<JavaUtilMap>)params;

+ (NSString *)getKeyStoreNameWithJavaUtilMap:(id<JavaUtilMap>)params;

/*!
 @brief Establece si debe solicitarse a los clientes la espera activa hasta la obtenci&oacute;n
  del resultado de la operaci&oacute;n.
 @param activeWaiting Espera activa.
 */
- (void)setActiveWaitingWithBoolean:(jboolean)activeWaiting;

/*!
 @brief Establece qu&eacute; versi&oacute;n m&iacute;nima del cliente exige la
  aplicaci&oacute;n.
 @param minimumClientVersion Versi &oacute; n m &iacute; nima del cliente.
 */
- (void)setMinimumClientVersionWithNSString:(NSString *)minimumClientVersion;

- (void)setStorageServletUrlWithJavaNetURL:(JavaNetURL *)url;

/*!
 @brief Valida una URL para asegurar que cumple con los requisitos m&iacute;nimos de seguridad.
 @param url URL que se desea validar.
 @return URL formada y validada.
 @throw ParameterExceptionCuando ocurre alg&uacute;n problema al validar la URL.
 */
+ (JavaNetURL *)validateURLWithNSString:(NSString *)url;

#pragma mark Package-Private

- (void)setCommonParametersWithJavaUtilMap:(id<JavaUtilMap>)params;

/*!
 @brief Establece el nombre del almac&eacute;n de claves a usar por defecto.
 @param storeName Nombre del almac &eacute; n de claves a usar por defecto
 */
- (void)setDefaultKeyStoreWithNSString:(NSString *)storeName;

/*!
 @brief Establece la biblioteca del almac&eacute;n de claves a usar por defecto.
 @param storeLib Ruta de la biblioteca del almac &eacute; n de claves a usar por defecto
 */
- (void)setDefaultKeyStoreLibWithNSString:(NSString *)storeLib;

/*!
 @brief Establece los par&aacute;metros adicionales para la configuraci&oacute;n
  de la operaci&oacute;n de firma.
 @param properties Propiedades adicionales.
 */
- (void)setExtraParamsWithJavaUtilProperties:(JavaUtilProperties *)properties;

/*!
 @brief Establece el identificador de los datos en el servidor intermedio.
 @param fileId Identificador de los datos en el servidor intermedio
 */
- (void)setFileIdWithNSString:(NSString *)fileId;

/*!
 @brief Establece el nombre de fichero propuesto para guardar los datos.
 @param filename Nombre de fichero propuesto para guardar los datos
 */
- (void)setFilenameWithNSString:(NSString *)filename;

/*!
 @brief Establece la URL de subida al servidor intermedio.
 @param retrieveServletUrl URL de subida al servidor intermedio
 */
- (void)setRetrieveServletUrlWithJavaNetURL:(JavaNetURL *)retrieveServletUrl;

- (void)setSessionIdWithNSString:(NSString *)sessionId;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreMiscProtocolUrlParameters)

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreMiscProtocolUrlParameters, data_, IOSByteArray *)

inline JavaUtilLoggingLogger *EsGobAfirmaCoreMiscProtocolUrlParameters_get_LOGGER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilLoggingLogger *EsGobAfirmaCoreMiscProtocolUrlParameters_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, LOGGER, JavaUtilLoggingLogger *)

/*!
 @brief Par&aacute;metro de entrada con las opciones de configuraci&oacute;n de la firma.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_PROPERTIES_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_PROPERTIES_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, PROPERTIES_PARAM, NSString *)

/*!
 @brief Par&aacute;metro de entrada con los datos a firmar.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_DATA_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_DATA_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, DATA_PARAM, NSString *)

/*!
 @brief Par&aacute;metro de entrada que indica si los datos a firmar vienen comrpimidos en GZIP,
  pero hay que firmarlos descomprimidos.
 La compresi&oacute;n en GZIP permite reducir el uso de servidor intermedio haciendo que
  quepan m&aacute;s datos en la URL de invocaci&oacute;n.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_GZIPPED_DATA_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_GZIPPED_DATA_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, GZIPPED_DATA_PARAM, NSString *)

/*!
 @brief Par&aacute;metro de entrada con el servlet remoto de recuperaci&oacute;n de datos.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_RETRIEVE_SERVLET_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_RETRIEVE_SERVLET_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, RETRIEVE_SERVLET_PARAM, NSString *)

/*!
 @brief Par&aacute;metro de entrada con el servlet remoto de guardado de datos.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_STORAGE_SERVLET_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_STORAGE_SERVLET_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, STORAGE_SERVLET_PARAM, NSString *)

/*!
 @brief N&uacute;mero m&aacute;ximo de caracteres permitidos para el identificador
  de sesi&oacute;n de la operaci&oacute;n.
 */
inline jint EsGobAfirmaCoreMiscProtocolUrlParameters_get_MAX_ID_LENGTH(void);
#define EsGobAfirmaCoreMiscProtocolUrlParameters_MAX_ID_LENGTH 20
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreMiscProtocolUrlParameters, MAX_ID_LENGTH, jint)

/*!
 @brief Par&aacute;metro de entrada con la clave para el cifrado del documento.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_KEY_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_KEY_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, KEY_PARAM, NSString *)

/*!
 @brief Par&aacute;metro de entrada con el identificador del fichero remoto de datos.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_FILE_ID_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_FILE_ID_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, FILE_ID_PARAM, NSString *)

/*!
 @brief Viejo par&aacute;metro de entrada con la configuraci&oacute;n del almac&eacute;n de claves.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_KEYSTORE_OLD_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_KEYSTORE_OLD_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, KEYSTORE_OLD_PARAM, NSString *)

/*!
 @brief Par&aacute;metro de entrada con la configuraci&oacute;n del almac&eacute;n de claves en base64.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_KEYSTORE_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_KEYSTORE_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, KEYSTORE_PARAM, NSString *)

/*!
 @brief Par&aacute;metro de entrada con el valor indicativo de si se debe realizar una espera
  activa hasta la devoluci&uacute;on servlet remoto de guardado de datos.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_ACTIVE_WAITING_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_ACTIVE_WAITING_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, ACTIVE_WAITING_PARAM, NSString *)

/*!
 @brief Versi&oacute;n m&iacute;nima de cliente requetida.
 */
inline NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_get_MINIMUM_CLIENT_VERSION_PARAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_MINIMUM_CLIENT_VERSION_PARAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreMiscProtocolUrlParameters, MINIMUM_CLIENT_VERSION_PARAM, NSString *)

FOUNDATION_EXPORT void EsGobAfirmaCoreMiscProtocolUrlParameters_init(EsGobAfirmaCoreMiscProtocolUrlParameters *self);

FOUNDATION_EXPORT JavaNetURL *EsGobAfirmaCoreMiscProtocolUrlParameters_validateURLWithNSString_(NSString *url);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_getKeyStoreNameWithJavaUtilMap_(id<JavaUtilMap> params);

FOUNDATION_EXPORT NSString *EsGobAfirmaCoreMiscProtocolUrlParameters_getDefaultKeyStoreLibWithJavaUtilMap_(id<JavaUtilMap> params);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreMiscProtocolUrlParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobAfirmaCoreMiscProtocolUrlParameters")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/ciphers/AOCipherConfig.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobAfirmaCoreCiphersAOCipherConfig")
#ifdef RESTRICT_EsGobAfirmaCoreCiphersAOCipherConfig
#define INCLUDE_ALL_EsGobAfirmaCoreCiphersAOCipherConfig 0
#else
#define INCLUDE_ALL_EsGobAfirmaCoreCiphersAOCipherConfig 1
#endif
#undef RESTRICT_EsGobAfirmaCoreCiphersAOCipherConfig

#if !defined (EsGobAfirmaCoreCiphersAOCipherConfig_) && (INCLUDE_ALL_EsGobAfirmaCoreCiphersAOCipherConfig || defined(INCLUDE_EsGobAfirmaCoreCiphersAOCipherConfig))
#define EsGobAfirmaCoreCiphersAOCipherConfig_

@class EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm;
@class EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode;
@class EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding;

/*!
 @brief Confuiguraciones de algoritmo / modo de bloque / relleno para cifrado.
 */
@interface EsGobAfirmaCoreCiphersAOCipherConfig : NSObject

#pragma mark Public

/*!
 @brief Construyye una configuraci&oacute;n de cifrado.
 @param algo Algoritmo de cifrado
 @param mode Modo de bloque para el cifrado
 @param padd Relleno (
  <i> padding </i> ) del cifrado
 */
- (instancetype)initWithEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm:(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *)algo
                    withEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode:(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *)mode
                      withEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding:(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *)padd;

- (jboolean)isEqual:(id)obj;

/*!
 @brief Obtiene el algoritmo de cifrado.
 @return Algoritmo de cifrado
 */
- (EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *)getAlgorithm;

/*!
 @brief Obtiene el modo de bloque (<i>block mode</i>) de cifrado.
 @return Modo de bloque de cifrado
 */
- (EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *)getBlockMode;

/*!
 @brief Obtiene el relleno (<i>padding</i>) del cifrado.
 @return Relleno del cifrado
 */
- (EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *)getPadding;

- (NSUInteger)hash;

/*!
 @brief Genera un objeto AOCipherConfig a partir de una cadena que siga uno de
  los siguientes patrones: 
 <ul>
  <li>Algoritmo/ModoBloque/Padding</li>
  <li>Algoritmo</li>
  </ul>
  Si s&oacute;lo se especifica el algoritmo de cifrado, se tomara
  el modo y el padding configurados por defecto para ese algoritmo.
 @return AOCipherConfig con una configuraci&oacute; espec&iacute;fica de
          cifrado
 @param cipherConfig Configuraci
  &oacute; n de cifrado.
 @throw NoSuchAlgorithmException
 Cuando el algoritmo no est&aacute; soportado.
 */
+ (EsGobAfirmaCoreCiphersAOCipherConfig *)parseWithNSString:(NSString *)cipherConfig;

/*!
 @brief Establece el algoritmo de cifrado.
 @param algo Algoritmo.
 */
- (void)setAlgorithmWithEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm:(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *)algo;

/*!
 @brief Establece el modo de bloque para el cifrado.
 @param mode Modo de bloque.
 */
- (void)setBlockModeWithEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode:(EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *)mode;

/*!
 @brief Establece el padding para el cifrado.
 @param padding Padding.
 */
- (void)setPaddingWithEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding:(EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *)padding;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreCiphersAOCipherConfig)

FOUNDATION_EXPORT void EsGobAfirmaCoreCiphersAOCipherConfig_initWithEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_withEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_withEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_(EsGobAfirmaCoreCiphersAOCipherConfig *self, EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *algo, EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *mode, EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *padd);

FOUNDATION_EXPORT EsGobAfirmaCoreCiphersAOCipherConfig *new_EsGobAfirmaCoreCiphersAOCipherConfig_initWithEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_withEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_withEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *algo, EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *mode, EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *padd) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreCiphersAOCipherConfig *create_EsGobAfirmaCoreCiphersAOCipherConfig_initWithEsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm_withEsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode_withEsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding_(EsGobAfirmaCoreCiphersCipherConstants_AOCipherAlgorithm *algo, EsGobAfirmaCoreCiphersCipherConstants_AOCipherBlockMode *mode, EsGobAfirmaCoreCiphersCipherConstants_AOCipherPadding *padd);

FOUNDATION_EXPORT EsGobAfirmaCoreCiphersAOCipherConfig *EsGobAfirmaCoreCiphersAOCipherConfig_parseWithNSString_(NSString *cipherConfig);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreCiphersAOCipherConfig)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobAfirmaCoreCiphersAOCipherConfig")

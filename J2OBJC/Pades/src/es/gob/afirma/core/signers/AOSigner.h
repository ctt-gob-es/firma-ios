//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/AOSigner.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobAfirmaCoreSignersAOSigner")
#ifdef RESTRICT_EsGobAfirmaCoreSignersAOSigner
#define INCLUDE_ALL_EsGobAfirmaCoreSignersAOSigner 0
#else
#define INCLUDE_ALL_EsGobAfirmaCoreSignersAOSigner 1
#endif
#undef RESTRICT_EsGobAfirmaCoreSignersAOSigner

#if !defined (EsGobAfirmaCoreSignersAOSigner_) && (INCLUDE_ALL_EsGobAfirmaCoreSignersAOSigner || defined(INCLUDE_EsGobAfirmaCoreSignersAOSigner))
#define EsGobAfirmaCoreSignersAOSigner_

#define RESTRICT_EsGobAfirmaCoreSignersAOCoSigner 1
#define INCLUDE_EsGobAfirmaCoreSignersAOCoSigner 1
#include "es/gob/afirma/core/signers/AOCoSigner.h"

#define RESTRICT_EsGobAfirmaCoreSignersAOCounterSigner 1
#define INCLUDE_EsGobAfirmaCoreSignersAOCounterSigner 1
#include "es/gob/afirma/core/signers/AOCounterSigner.h"

#define RESTRICT_EsGobAfirmaCoreSignersAOSimpleSigner 1
#define INCLUDE_EsGobAfirmaCoreSignersAOSimpleSigner 1
#include "es/gob/afirma/core/signers/AOSimpleSigner.h"

@class EsGobAfirmaCoreSignersAOSignInfo;
@class EsGobAfirmaCoreUtilTreeAOTreeModel;
@class IOSByteArray;
@class JavaUtilProperties;

/*!
 @brief Define los requerimientos de las clases capaces de efectuar firmas digitales.
 @version 1.0
 */
@protocol EsGobAfirmaCoreSignersAOSigner < EsGobAfirmaCoreSignersAOCoSigner, EsGobAfirmaCoreSignersAOCounterSigner, EsGobAfirmaCoreSignersAOSimpleSigner, JavaObject >

/*!
 @brief Recupera el &aacute;rbol de nodos de firma de una firma electr&oacute;nica.
 Los nodos del &aacute;rbol ser&aacute;n cadena de texto con el <i>CommonName</i> (CN X.500)
  del titular del certificado u objetos de tipo <code>AOSimpleSignInfo</code> con la
  informaci&oacute;n b&aacute;sica de las firmas individuales, seg&uacute;n
  el valor del par&aacute;metro <code>asSimpleSignInfo</code>. Los nodos se
  mostrar&aacute;n en el mismo orden y con la misma estructura con el que
  aparecen en la firma electr&oacute;nica.<br>
  La propia estructura de firma se considera el nodo ra&iacute;z, la firma y cofirmas
  pender&aacute;n directamentede de este.
 @param sign Firma electr &oacute; nica de la que se desea obtener la estructura.
 @param asSimpleSignInfo Si es 
  <code> true </code>  se devuelve un  &aacute; rbol con la         informaci &oacute; n b &aacute; sica de cada firma individual         mediante objetos  <code> AOSimpleSignInfo </code> , si es  <code> false </code>  un  &aacute; rbol con los nombres (CN X.500) de los         titulares de los certificados.
 @return &Aacute;rbol de nodos de firma o <code>null</code> en caso de error.
 @throw AOInvalidFormatException
 Si no se ha introducido un fichero de firma v&aacute;lido del formato correspondiente.
 @throw IOExceptionSi ocurren problemas relacionados con la lectura de la firma
 */
- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                             withBoolean:(jboolean)asSimpleSignInfo;

/*!
 @brief Recupera el &aacute;rbol de nodos de firma de una firma electr&oacute;nica.
 Los nodos del &aacute;rbol ser&aacute;n textos con el <i>CommonName</i> (CN X.500)
  del titular del certificado u objetos de tipo AOSimpleSignInfo con la
  informaci&oacute;n b&aacute;sica de las firmas individuales, seg&uacute;n
  el valor del par&aacute;metro <code>asSimpleSignInfo</code>. Los nodos se
  mostrar&aacute;n en el mismo orden y con la misma estructura con el que
  aparecen en la firma electr&oacute;nica.<br>
  La propia estructura de firma se considera el nodo ra&iacute;z, la firma y cofirmas
  pender&aacute;n directamentede de este.
 @param sign Firma electr &oacute; nica de la que se desea obtener la estructura.
 @param params Par &aacute; metros necesarios para comprobar si una firma es compatible.
 @param asSimpleSignInfo Si es  <code> true </code>  se devuelve un  &aacute; rbol con la                          informaci &oacute; n b &aacute; sica de cada firma individual                          mediante objetos  <code> AOSimpleSignInfo </code> , si es  <code> false </code>                          un  &aacute; rbol con los nombres (CN X.500) de los titulares certificados.
 @return &Aacute;rbol de nodos de firma o <code>null</code> en caso de error.
 @throw AOInvalidFormatException
 Si no se ha introducido un fichero de firma v&aacute;lido del formato correspondiente.
 @throw IOExceptionSi ocurren problemas relacionados con la lectura de la firma
 */
- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                  withJavaUtilProperties:(JavaUtilProperties *)params
                                                             withBoolean:(jboolean)asSimpleSignInfo;

/*!
 @brief Indica si un dato es una firma compatible con la implementaci&oacute;n concreta.
 @param is Dato que deseamos comprobar.
 @return <code>true</code> si el dato es una firma reconocida por
          esta clase, <code>false</code> en caso contrario.
 @throw IOExceptionSi ocurren problemas relacionados con la lectura de los datos
 */
- (jboolean)isSignWithByteArray:(IOSByteArray *)is;

/*!
 @brief Indica si un dato es una firma compatible con la implementaci&oacute;n concreta.
 @param signData Dato que deseamos comprobar.
 @param params Par &aacute; metros necesarios para comprobar si una firma es compatible.
 @return <code>true</code> si el dato es una firma reconocida por
          esta clase, <code>false</code> en caso contrario.
 @throw IOExceptionSi ocurren problemas relacionados con la lectura de los datos
 */
- (jboolean)isSignWithByteArray:(IOSByteArray *)signData
         withJavaUtilProperties:(JavaUtilProperties *)params;

/*!
 @brief Comprueba si el dato introducido es v&aacute;lido para ser firmado por
  este manejador de firma.
 <br>
 @param is Dato que deseamos comprobar.
 @return Devuelve <code>true</code> si el dato es susceptible de ser firmado por la implementaci&oacute;n concreta,
          <code>false</code> en caso contrario.
 @throw IOExceptionCuando ocurre alg&uacute;n error durante la lectura de los datos
 */
- (jboolean)isValidDataFileWithByteArray:(IOSByteArray *)is;

/*!
 @brief Devuelve el nombre de fichero de firma recomendado para el resultado de firmar un fichero
  con el nombre proporcionado.Si se indica una part&iacute;cula intermedia, se a&ntilde;ade esta al
  nombre resultante seg&uacute;n el criterio de la implementaci&oacute;n concreta.
 @param originalName Nombre del fichero original que se firma
 @param inText Part &iacute; cula intermedia que agregar al nombre del fichero de         firma.
 @return Nombre apropiado para el fichero de firma o fichero firmado.
 */
- (NSString *)getSignedNameWithNSString:(NSString *)originalName
                           withNSString:(NSString *)inText;

/*!
 @brief Recupera los datos originalmente firmados de una firma.
 En el caso de que la firma no contenga los datos firmados, se
  devuelve <code>null</code>.
 @param signData Datos de firma o fichero firmado.
 @return Datos originalmente firmados.
 @throw es.gob.afirma.core.AOInvalidFormatException
 Si no se ha introducido un fichero de firma v&aacute;lido o no
          ha podido leerse la firma.
 @throw AOException
 En caso de cualquier error durante la recuperaci&oacute;n de los
          datos.
 @throw IOExceptionSi no se puede leer la firma.
 */
- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)signData;

/*!
 @brief Si la entrada es un documento PDF, devuelve el mismo documento PDF.
 @param sign Documento PDF
 @param params Par &aacute; metros necesarios para comprobar si una firma es compatible.
 @return Mismo documento PDF de entrada, sin modificar en ning&uacute; aspecto.
 @throw AOInvalidFormatExceptionSi los datos de entrada no son un documento PDF.
 @throw IOExceptionsi no se puede leer la firma
 @throw AOExceptionEn caso de cualquier error durante la recuperaci&oacute;n de los datos
 */
- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)sign
                withJavaUtilProperties:(JavaUtilProperties *)params;

/*!
 @brief Obtiene la informaci&oacute;n general de un objeto de firma.Ya que un objeto de
  firma puede contener muchas firmas, se considera informaci&oacute;n
  general la com&uacute;n que aplique a todo el objeto.
 @param signData Firma que se desea analizar.
 @return Informaci&oacute;n sobre la firma electr&oacute;nica
 @throw es.gob.afirma.core.AOInvalidFormatException
 Cuando la firma introducida no es un objeto de firma
          reconocido por este manejador.
 @throw AOException
 Ocurri&oacute; un error durante la recuperaci&oacute;n de los
          datos.
 @throw IOExceptionSi ocurren problemas relacionados con la lectura de la firma.
 */
- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)signData;

/*!
 @brief Si la entrada es un documento PDF, devuelve un objeto <code>AOSignInfo</code>
  con el formato establecido a <code>AOSignConstants.SIGN_FORMAT_PDF</code>.
 @param data Documento PDF.
 @param params Par &aacute; metros necesarios para comprobar si una firma es compatible.
 @return Objeto <code>AOSignInfo</code> con el formato establecido a <code>AOSignConstants.SIGN_FORMAT_PDF</code>.
 @throw AOExceptionSi los datos de entrada no son un documento PDF.
 @throw IOExceptionsi ocurren problemas relacionados con la lectura de la firma.
 */
- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)data
                                        withJavaUtilProperties:(JavaUtilProperties *)params;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreSignersAOSigner)

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreSignersAOSigner)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobAfirmaCoreSignersAOSigner")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/AOPkcs1Signer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobAfirmaCoreSignersAOPkcs1Signer")
#ifdef RESTRICT_EsGobAfirmaCoreSignersAOPkcs1Signer
#define INCLUDE_ALL_EsGobAfirmaCoreSignersAOPkcs1Signer 0
#else
#define INCLUDE_ALL_EsGobAfirmaCoreSignersAOPkcs1Signer 1
#endif
#undef RESTRICT_EsGobAfirmaCoreSignersAOPkcs1Signer

#if !defined (EsGobAfirmaCoreSignersAOPkcs1Signer_) && (INCLUDE_ALL_EsGobAfirmaCoreSignersAOPkcs1Signer || defined(INCLUDE_EsGobAfirmaCoreSignersAOPkcs1Signer))
#define EsGobAfirmaCoreSignersAOPkcs1Signer_

#define RESTRICT_EsGobAfirmaCoreSignersAOSigner 1
#define INCLUDE_EsGobAfirmaCoreSignersAOSigner 1
#include "es/gob/afirma/core/signers/AOSigner.h"

@class EsGobAfirmaCoreSignersAOSignInfo;
@class EsGobAfirmaCoreSignersCounterSignTarget;
@class EsGobAfirmaCoreUtilTreeAOTreeModel;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaUtilProperties;
@protocol JavaSecurityPrivateKey;

/*!
 @brief Firmador simple en formato PKCS#1.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s
 */
@interface EsGobAfirmaCoreSignersAOPkcs1Signer : NSObject < EsGobAfirmaCoreSignersAOSigner >

#pragma mark Public

- (instancetype)init;

- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)data
                        withByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)extraParams;

- (IOSByteArray *)cosignWithByteArray:(IOSByteArray *)sign
                         withNSString:(NSString *)algorithm
           withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
 withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
               withJavaUtilProperties:(JavaUtilProperties *)extraParams;

- (IOSByteArray *)countersignWithByteArray:(IOSByteArray *)sign
                              withNSString:(NSString *)algorithm
withEsGobAfirmaCoreSignersCounterSignTarget:(EsGobAfirmaCoreSignersCounterSignTarget *)targetType
                         withNSObjectArray:(IOSObjectArray *)targets
                withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
      withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
                    withJavaUtilProperties:(JavaUtilProperties *)extraParams;

- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)signData;

- (IOSByteArray *)getDataWithByteArray:(IOSByteArray *)sign
                withJavaUtilProperties:(JavaUtilProperties *)params;

- (NSString *)getSignedNameWithNSString:(NSString *)originalName
                           withNSString:(NSString *)inText;

- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                             withBoolean:(jboolean)asSimpleSignInfo;

- (EsGobAfirmaCoreUtilTreeAOTreeModel *)getSignersStructureWithByteArray:(IOSByteArray *)sign
                                                  withJavaUtilProperties:(JavaUtilProperties *)params
                                                             withBoolean:(jboolean)asSimpleSignInfo;

- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)signData;

- (EsGobAfirmaCoreSignersAOSignInfo *)getSignInfoWithByteArray:(IOSByteArray *)data
                                        withJavaUtilProperties:(JavaUtilProperties *)params;

- (jboolean)isSignWithByteArray:(IOSByteArray *)is;

- (jboolean)isSignWithByteArray:(IOSByteArray *)signData
         withJavaUtilProperties:(JavaUtilProperties *)params;

- (jboolean)isValidDataFileWithByteArray:(IOSByteArray *)is;

/*!
 @brief Realiza una firma electr&oacute;nica PKCS#1 v1.5.
 @param algorithm Algoritmo de firma a utilizar.
 @param key Clave privada a usar para la firma.
 @param certChain Se ignora, esta clase no necesita la cadena de certificados.
 @param data Datos a firmar.
 @param extraParams Es posible indicar como par &aacute; metro un proveedor de seguridad espec &iacute; fico para un                     determinado tipo de clave privada.                     Para ello debe indicarse como clave de propiedad el nombre cualificado de la clase precedido                     de "Provider." y como valor el nombre del proveedor. Posibles ejemplos de este uso ser &iacute; an:                      <p> <code>                     	Provider.com.aet.android.providerPKCS15.SEPrivateKey=AETProvider <br>                       Provider.es.gob.jmulticard.jse.provider.DniePrivateKey=DNIeJCAProvider <br>                       Provider.es.gob.jmulticard.jse.provider.ceres.CeresPrivateKey=CeresJCAProvider                      </code> </p>
 @return Firma PKCS#1 en binario puro no tratado.
 @throw AOExceptionen caso de cualquier problema durante la firma.
 */
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)algorithm
         withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)key
withJavaSecurityCertCertificateArray:(IOSObjectArray *)certChain
             withJavaUtilProperties:(JavaUtilProperties *)extraParams;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreSignersAOPkcs1Signer)

FOUNDATION_EXPORT void EsGobAfirmaCoreSignersAOPkcs1Signer_init(EsGobAfirmaCoreSignersAOPkcs1Signer *self);

FOUNDATION_EXPORT EsGobAfirmaCoreSignersAOPkcs1Signer *new_EsGobAfirmaCoreSignersAOPkcs1Signer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreSignersAOPkcs1Signer *create_EsGobAfirmaCoreSignersAOPkcs1Signer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreSignersAOPkcs1Signer)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobAfirmaCoreSignersAOPkcs1Signer")

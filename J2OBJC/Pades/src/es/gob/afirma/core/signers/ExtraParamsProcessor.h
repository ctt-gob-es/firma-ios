//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/ExtraParamsProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobAfirmaCoreSignersExtraParamsProcessor")
#ifdef RESTRICT_EsGobAfirmaCoreSignersExtraParamsProcessor
#define INCLUDE_ALL_EsGobAfirmaCoreSignersExtraParamsProcessor 0
#else
#define INCLUDE_ALL_EsGobAfirmaCoreSignersExtraParamsProcessor 1
#endif
#undef RESTRICT_EsGobAfirmaCoreSignersExtraParamsProcessor

#if !defined (EsGobAfirmaCoreSignersExtraParamsProcessor_) && (INCLUDE_ALL_EsGobAfirmaCoreSignersExtraParamsProcessor || defined(INCLUDE_EsGobAfirmaCoreSignersExtraParamsProcessor))
#define EsGobAfirmaCoreSignersExtraParamsProcessor_

@class IOSByteArray;
@class JavaUtilProperties;
@protocol EsGobAfirmaCoreSignersAOSigner;

/*!
 @brief Clase de utilidad para el proceso de propiedades enviadas desde JavaScript
  y recogidas desde Java en formato <code>Properties</code>.
 */
@interface EsGobAfirmaCoreSignersExtraParamsProcessor : NSObject

#pragma mark Public

/*!
 @brief Establece propiedades de firma concretas para cuando el formato indicado sea "AUTO".
 Las propiedades dependen del signer que se vaya a usar.
 @param signer Firmador usado.
 @param data Datos a firmar.
 @param params Par &aacute; metros adicionales.
 */
+ (void)configAutoFormatWithEsGobAfirmaCoreSignersAOSigner:(id<EsGobAfirmaCoreSignersAOSigner>)signer
                                             withByteArray:(IOSByteArray *)data
                                    withJavaUtilProperties:(JavaUtilProperties *)params;

/*!
 @brief Transforma la entrada introducida en un <code>Properties</code>.
 Las entradas deben estar separadas por salto de l&iacute;nea y tener la forma 
 <code>CLAVE=VALOR</code> en donde CLAVE es el identificador del par&aacute;metro y
  VALOR el valor asignado a este.
  La CLAVE no puede contener ning&uacute;n signo igual ('=') ni empezar por
  almohadilla ('#') y se ignorar&aacute;n aquellas entradas que no contengan
  el signo igual en una posici&oacute;n la cadena distinta a la primera.
  Si se introduce null se devuelve un Properties vac&iacute;o.
 @param entries Listado de pares CLAVE - VALOR.
 @return Properties con las claves indicadas cargadas como par&aacute;metro.
 */
+ (JavaUtilProperties *)convertToPropertiesWithNSString:(NSString *)entries;

/*!
 @brief Devuelve la colecci&oacute;n de propiedades de entrada con las entradas que correspondan
  expandidos.Se expandiran una serie de claves con valores predefinidos y se les
  asignar&aacute; el valor correspondiente.
 Una vez expandidos, se eliminaran estos par&aacute;metros de la lista. Si el expandir
  los par&aacute;metros implica establer otras propiedades y estas ya est&aacute;n
  definidas en el Properties, prevalecer&aacute;n los valores expandidos.<br>
  Entre los par&aacute;metros clave se encuentran: 
 <ul>
   <li><b>expPolicy</b>: Configuracion de la pol&iacute;tica de firma. Posibles valores:
    <ul><li><b>FirmaAGE</b>:
     Establece los diversions par&aacute;metros para la configuraci&oacute;n de la
     pol&iacute;tica de firma de la AGE.
    </li>
    </ul>
   </li>
  </ul>
 @param params Par &aacute; metros definidos para la operaci &oacute; n.
 @return Propiedades expandidas.
 @throw IncompatiblePolicyExceptionSi el formato de firma es incompatible con la pol&iacute;tica indicada.
 */
+ (JavaUtilProperties *)expandPropertiesWithJavaUtilProperties:(JavaUtilProperties *)params;

/*!
 @brief Devuelve la colecci&oacute;n de propiedades de entrada con las entradas que correspondan
  expandidos.Se expandiran una serie de claves con valores predefinidos y se les
  asignar&aacute; el valor correspondiente.
 Una vez expandidos, se eliminaran estos par&aacute;metros de la lista. Si el expandir
  los par&aacute;metros implica establer otras propiedades y estas ya est&aacute;n
  definidas en el Properties, prevalecer&aacute;n los valores expandidos.<br>
  Entre los par&aacute;metros clave se encuentran: 
 <ul>
   <li><b>expPolicy</b>: Configuracion de la pol&iacute;tica de firma. Posibles valores:
    <ul><li><b>FirmaAGE</b>:
     Establece los diversions par&aacute;metros para la configuraci&oacute;n de la
     pol&iacute;tica de firma de la AGE.
    </li>
    </ul>
   </li>
  </ul>
 @param params Par &aacute; metros definidos para la operaci &oacute; n.
 @param signedData Datos firmados.
 @param format Formato de firma.
 @return Propiedades expandidas.
 @throw IncompatiblePolicyExceptionSi el formato de firma es incompatible con la pol&iacute;tica indicada.
 */
+ (JavaUtilProperties *)expandPropertiesWithJavaUtilProperties:(JavaUtilProperties *)params
                                                 withByteArray:(IOSByteArray *)signedData
                                                  withNSString:(NSString *)format;

/*!
 @brief Carga un binario del Properties de las propiedades de configuraci&oacute;n.Este dato
  debe estar codificado en Base 64 o, si no est&aacute; habilitado el modo seguro,
  podr&iacute;a ser una ruta local desde la que cargar el binario.
 @param extraParams Propiedades de configuraci &oacute; n de las que obtener el binario.
 @param paramName Nombre del par &aacute; metro en el que se encuentra el binario en Base 64  o desde el que se referencia al mismo.
 @param secureMode Indica si se est &aacute;  trabajando en modo seguro (<code>true</code> ) y el  dato debe estar en las propiedades, o si no estamos en modo seguro (<code>false</code> ) y  podr &iacute; amos tener una referencia a un fichero local que cargar.
 @return Datos binarios cargados.
 @throw IOExceptionCuando no se encuentra el dato en la configuraci&oacute;n o cuando
  no se puede cargar.
 */
+ (IOSByteArray *)loadByteArrayFromExtraParamsWithJavaUtilProperties:(JavaUtilProperties *)extraParams
                                                        withNSString:(NSString *)paramName
                                                         withBoolean:(jboolean)secureMode;

@end

J2OBJC_STATIC_INIT(EsGobAfirmaCoreSignersExtraParamsProcessor)

FOUNDATION_EXPORT JavaUtilProperties *EsGobAfirmaCoreSignersExtraParamsProcessor_convertToPropertiesWithNSString_(NSString *entries);

FOUNDATION_EXPORT JavaUtilProperties *EsGobAfirmaCoreSignersExtraParamsProcessor_expandPropertiesWithJavaUtilProperties_(JavaUtilProperties *params);

FOUNDATION_EXPORT JavaUtilProperties *EsGobAfirmaCoreSignersExtraParamsProcessor_expandPropertiesWithJavaUtilProperties_withByteArray_withNSString_(JavaUtilProperties *params, IOSByteArray *signedData, NSString *format);

FOUNDATION_EXPORT void EsGobAfirmaCoreSignersExtraParamsProcessor_configAutoFormatWithEsGobAfirmaCoreSignersAOSigner_withByteArray_withJavaUtilProperties_(id<EsGobAfirmaCoreSignersAOSigner> signer, IOSByteArray *data, JavaUtilProperties *params);

FOUNDATION_EXPORT IOSByteArray *EsGobAfirmaCoreSignersExtraParamsProcessor_loadByteArrayFromExtraParamsWithJavaUtilProperties_withNSString_withBoolean_(JavaUtilProperties *extraParams, NSString *paramName, jboolean secureMode);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreSignersExtraParamsProcessor)

#endif

#if !defined (EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException_) && (INCLUDE_ALL_EsGobAfirmaCoreSignersExtraParamsProcessor || defined(INCLUDE_EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException))
#define EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangThrowable;

/*!
 @brief Pol&iacute;tica de firma incompatible con el formato o la configuraci&oacute;n de firma.
 */
@interface EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException : JavaLangException

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)description_;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException)

FOUNDATION_EXPORT void EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException_initWithNSString_(EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException *self, NSString *description_);

FOUNDATION_EXPORT EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException *new_EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException_initWithNSString_(NSString *description_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException *create_EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException_initWithNSString_(NSString *description_);

J2OBJC_TYPE_LITERAL_HEADER(EsGobAfirmaCoreSignersExtraParamsProcessor_IncompatiblePolicyException)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobAfirmaCoreSignersExtraParamsProcessor")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/AdESPolicy.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/afirma/core/misc/AOUtil.h"
#include "es/gob/afirma/core/misc/Base64.h"
#include "es/gob/afirma/core/signers/AOSignConstants.h"
#include "es/gob/afirma/core/signers/AdESPolicy.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Throwable.h"
#include "java/net/URL.h"
#include "java/security/MessageDigest.h"
#include "java/util/Properties.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/core/signers/AdESPolicy must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreSignersAdESPolicy () {
 @public
  NSString *policyIdentifier_;
  NSString *policyIdentifierHash_;
  NSString *policyIdentifierHashAlgorithm_;
  JavaNetURL *policyQualifier_;
}

- (void)setValuesWithNSString:(NSString *)identifier
                 withNSString:(NSString *)identifierHash
                 withNSString:(NSString *)identifierHashAlgorithm
                 withNSString:(NSString *)qualifier;

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAdESPolicy, policyIdentifier_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAdESPolicy, policyIdentifierHash_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAdESPolicy, policyIdentifierHashAlgorithm_, NSString *)
J2OBJC_FIELD_SETTER(EsGobAfirmaCoreSignersAdESPolicy, policyQualifier_, JavaNetURL *)

inline NSString *EsGobAfirmaCoreSignersAdESPolicy_get_DEFAULT_HASH_ALGORITHM(void);
static NSString *EsGobAfirmaCoreSignersAdESPolicy_DEFAULT_HASH_ALGORITHM = @"SHA-512";
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaCoreSignersAdESPolicy, DEFAULT_HASH_ALGORITHM, NSString *)

__attribute__((unused)) static void EsGobAfirmaCoreSignersAdESPolicy_setValuesWithNSString_withNSString_withNSString_withNSString_(EsGobAfirmaCoreSignersAdESPolicy *self, NSString *identifier, NSString *identifierHash, NSString *identifierHashAlgorithm, NSString *qualifier);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/signers/AdESPolicy.java"


#line 23
@implementation EsGobAfirmaCoreSignersAdESPolicy


#line 42
- (instancetype)initWithNSString:(NSString *)identifier
                    withNSString:(NSString *)identifierHash
                    withNSString:(NSString *)identifierHashAlgorithm
                    withNSString:(NSString *)qualifier {
  EsGobAfirmaCoreSignersAdESPolicy_initWithNSString_withNSString_withNSString_withNSString_(self, identifier, identifierHash, identifierHashAlgorithm, qualifier);
  return self;
}

- (void)setValuesWithNSString:(NSString *)identifier
                 withNSString:(NSString *)identifierHash
                 withNSString:(NSString *)identifierHashAlgorithm
                 withNSString:(NSString *)qualifier {
  EsGobAfirmaCoreSignersAdESPolicy_setValuesWithNSString_withNSString_withNSString_withNSString_(self, identifier, identifierHash, identifierHashAlgorithm, qualifier);
}


#line 106
- (NSString *)getPolicyIdentifier {
  return self->policyIdentifier_;
}


#line 113
- (NSString *)getPolicyIdentifierHash {
  return self->policyIdentifierHash_;
}


#line 120
- (NSString *)getPolicyIdentifierHashAlgorithm {
  return self->policyIdentifierHashAlgorithm_;
}


#line 127
- (JavaNetURL *)getPolicyQualifier {
  return self->policyQualifier_;
}


#line 151
+ (EsGobAfirmaCoreSignersAdESPolicy *)buildAdESPolicyWithJavaUtilProperties:(JavaUtilProperties *)extraParams {
  return EsGobAfirmaCoreSignersAdESPolicy_buildAdESPolicyWithJavaUtilProperties_(extraParams);
}


#line 172
- (JavaUtilProperties *)asExtraParams {
  JavaUtilProperties *p = new_JavaUtilProperties_init();
  (void) [p putWithId:@"policyIdentifier" withId:[self getPolicyIdentifier]];
  if ([self getPolicyIdentifierHash] != nil) {
    (void) [p putWithId:@"policyIdentifierHash" withId:[self getPolicyIdentifierHash]];
  }
  if ([self getPolicyIdentifierHashAlgorithm] != nil) {
    (void) [p putWithId:@"policyIdentifierHashAlgorithm" withId:[self getPolicyIdentifierHashAlgorithm]];
  }
  if ([self getPolicyQualifier] != nil) {
    (void) [p putWithId:@"policyQualifier" withId:[self getPolicyQualifier]];
  }
  return p;
}

- (NSString *)description {
  
#line 189
  return JreStrcat("$$$$$$$@", @"Politica de firma: identificador='",
#line 191
  [self getPolicyIdentifier], @"', huella='",
#line 192
  [self getPolicyIdentifierHash], @"', algoritmo de huella='",
#line 193
  [self getPolicyIdentifierHashAlgorithm], @"', calificador='",
#line 194
  [self getPolicyQualifier]);
}


#line 198
- (jboolean)isEqual:(id)o {
  
#line 201
  if (!([o isKindOfClass:[EsGobAfirmaCoreSignersAdESPolicy class]])) {
    return false;
  }
  EsGobAfirmaCoreSignersAdESPolicy *other = (EsGobAfirmaCoreSignersAdESPolicy *) cast_chk(o, [EsGobAfirmaCoreSignersAdESPolicy class]);
  return [((NSString *) nil_chk([((EsGobAfirmaCoreSignersAdESPolicy *) nil_chk(other)) getPolicyIdentifier])) isEqual:[self getPolicyIdentifier]] &&
#line 206
  [((NSString *) nil_chk([other getPolicyIdentifierHash])) isEqual:[self getPolicyIdentifierHash]] &&
#line 207
  [((NSString *) nil_chk([other getPolicyIdentifierHashAlgorithm])) isEqual:[self getPolicyIdentifierHashAlgorithm]];
}


#line 211
- (NSUInteger)hash {
  
#line 213
  return ((jint) [((NSString *) nil_chk([self getPolicyIdentifier])) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURL;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobAfirmaCoreSignersAdESPolicy;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilProperties;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:withNSString:);
  methods[1].selector = @selector(setValuesWithNSString:withNSString:withNSString:withNSString:);
  methods[2].selector = @selector(getPolicyIdentifier);
  methods[3].selector = @selector(getPolicyIdentifierHash);
  methods[4].selector = @selector(getPolicyIdentifierHashAlgorithm);
  methods[5].selector = @selector(getPolicyQualifier);
  methods[6].selector = @selector(buildAdESPolicyWithJavaUtilProperties:);
  methods[7].selector = @selector(asExtraParams);
  methods[8].selector = @selector(description);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_HASH_ALGORITHM", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "policyIdentifier_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "policyIdentifierHash_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "policyIdentifierHashAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "policyQualifier_", "LJavaNetURL;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;LNSString;", "setValues", "buildAdESPolicy", "LJavaUtilProperties;", "toString", "equals", "LNSObject;", "hashCode", &EsGobAfirmaCoreSignersAdESPolicy_DEFAULT_HASH_ALGORITHM };
  static const J2ObjcClassInfo _EsGobAfirmaCoreSignersAdESPolicy = { "AdESPolicy", "es.gob.afirma.core.signers", ptrTable, methods, fields, 7, 0x11, 11, 5, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreSignersAdESPolicy;
}

@end


#line 42
void EsGobAfirmaCoreSignersAdESPolicy_initWithNSString_withNSString_withNSString_withNSString_(EsGobAfirmaCoreSignersAdESPolicy *self, NSString *identifier, NSString *identifierHash, NSString *identifierHashAlgorithm, NSString *qualifier) {
  NSObject_init(self);
  self->policyIdentifier_ =
#line 27
  nil;
  self->policyIdentifierHash_ = nil;
  self->policyIdentifierHashAlgorithm_ = nil;
  self->policyQualifier_ = nil;
  
#line 46
  EsGobAfirmaCoreSignersAdESPolicy_setValuesWithNSString_withNSString_withNSString_withNSString_(self, identifier, identifierHash, identifierHashAlgorithm, qualifier);
}


#line 42
EsGobAfirmaCoreSignersAdESPolicy *new_EsGobAfirmaCoreSignersAdESPolicy_initWithNSString_withNSString_withNSString_withNSString_(NSString *identifier, NSString *identifierHash, NSString *identifierHashAlgorithm, NSString *qualifier) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreSignersAdESPolicy, initWithNSString_withNSString_withNSString_withNSString_, identifier, identifierHash, identifierHashAlgorithm, qualifier)
}


#line 42
EsGobAfirmaCoreSignersAdESPolicy *create_EsGobAfirmaCoreSignersAdESPolicy_initWithNSString_withNSString_withNSString_withNSString_(NSString *identifier, NSString *identifierHash, NSString *identifierHashAlgorithm, NSString *qualifier) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreSignersAdESPolicy, initWithNSString_withNSString_withNSString_withNSString_, identifier, identifierHash, identifierHashAlgorithm, qualifier)
}


#line 50
void EsGobAfirmaCoreSignersAdESPolicy_setValuesWithNSString_withNSString_withNSString_withNSString_(EsGobAfirmaCoreSignersAdESPolicy *self, NSString *identifier, NSString *identifierHash, NSString *identifierHashAlgorithm, NSString *qualifier) {
  
#line 55
  if (identifier == nil || [identifier java_isEmpty]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"El identificador de politica no puede ser nulo ni vacio");
  }
  
#line 59
  self->policyIdentifier_ = identifier;
  
#line 61
  if (identifierHash == nil || [@"0" isEqual:identifierHash]) {
    
#line 63
    self->policyIdentifierHashAlgorithm_ = identifierHashAlgorithm == nil ? EsGobAfirmaCoreSignersAdESPolicy_DEFAULT_HASH_ALGORITHM : EsGobAfirmaCoreSignersAOSignConstants_getDigestAlgorithmNameWithNSString_(
#line 64
    identifierHashAlgorithm);
    
#line 66
    @try {
      JavaIoInputStream *is = [new_JavaNetURL_initWithNSString_(identifier) openStream];
      JavaLangThrowable *__primaryException1 = nil;
      @try {
        
#line 69
        self->policyIdentifierHash_ = EsGobAfirmaCoreMiscBase64_encodeWithByteArray_(
#line 70
        [((JavaSecurityMessageDigest *) nil_chk(JavaSecurityMessageDigest_getInstanceWithNSString_(self->policyIdentifierHashAlgorithm_))) digestWithByteArray:EsGobAfirmaCoreMiscAOUtil_getDataFromInputStreamWithJavaIoInputStream_(
#line 71
        is)]);
      }
      @catch (JavaLangThrowable *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (is != nil) {
          if (__primaryException1 != nil) {
            @try {
              [is close];
            }
            @catch (JavaLangThrowable *e) {
              [__primaryException1 addSuppressedWithJavaLangThrowable:e];
            }
          }
          else {
            [is close];
          }
        }
      }
    }
    @catch (
#line 75
    JavaLangException *e) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Si no se especifica la huella digital de la politica es necesario que el identificador sea una URL accesible universalmente: ", e), e);
    }
  }
  else {
    
#line 81
    if (identifierHashAlgorithm == nil || [identifierHashAlgorithm java_isEmpty]) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Si se indica la huella digital del identificador de politica es obligatorio indicar tambien el algoritmo");
    }
    
#line 85
    if (!EsGobAfirmaCoreMiscBase64_isBase64WithByteArray_([identifierHash java_getBytes])) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"La huella digital de la politica debe estar en formato Base64");
    }
    
#line 89
    self->policyIdentifierHash_ = identifierHash;
    self->policyIdentifierHashAlgorithm_ = EsGobAfirmaCoreSignersAOSignConstants_getDigestAlgorithmNameWithNSString_(identifierHashAlgorithm);
  }
  
#line 93
  if (qualifier != nil && ![qualifier java_isEmpty]) {
    @try {
      self->policyQualifier_ = new_JavaNetURL_initWithNSString_(qualifier);
    }
    @catch (JavaLangException *e) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_withJavaLangThrowable_(@"El calificador de la politica debe ser una URL valida", e);
    }
  }
}


#line 151
EsGobAfirmaCoreSignersAdESPolicy *EsGobAfirmaCoreSignersAdESPolicy_buildAdESPolicyWithJavaUtilProperties_(JavaUtilProperties *extraParams) {
  EsGobAfirmaCoreSignersAdESPolicy_initialize();
  
#line 152
  if (extraParams == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Es necesario proporciona las propiedades de la politica");
  }
  NSString *policyID = [extraParams getPropertyWithNSString:@"policyIdentifier"];
  if (policyID == nil) {
    return nil;
  }
  
#line 160
  return new_EsGobAfirmaCoreSignersAdESPolicy_initWithNSString_withNSString_withNSString_withNSString_(
#line 161
  policyID,
#line 162
  [extraParams getPropertyWithNSString:@"policyIdentifierHash"],
#line 163
  [extraParams getPropertyWithNSString:@"policyIdentifierHashAlgorithm"],
#line 164
  [extraParams getPropertyWithNSString:@"policyQualifier"]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreSignersAdESPolicy)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/InvalidOSException.java
//

#include "J2ObjC_source.h"
#include "es/gob/afirma/core/InvalidOSException.h"
#include "java/lang/RuntimeException.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/core/InvalidOSException must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaCoreInvalidOSException () {
 @public
  /*!
   @brief Sistema operativo actual.
   */
  NSString *os_;
}

@end

J2OBJC_FIELD_SETTER(EsGobAfirmaCoreInvalidOSException, os_, NSString *)

inline jlong EsGobAfirmaCoreInvalidOSException_get_serialVersionUID(void);
#define EsGobAfirmaCoreInvalidOSException_serialVersionUID -6174267665607129065LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobAfirmaCoreInvalidOSException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/core/InvalidOSException.java"


#line 14
@implementation EsGobAfirmaCoreInvalidOSException


#line 22
- (instancetype)initWithNSString:(NSString *)expectedOS {
  EsGobAfirmaCoreInvalidOSException_initWithNSString_(self, expectedOS);
  return self;
}


#line 29
- (NSString *)getExpectedOS {
  return self->os_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getExpectedOS);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobAfirmaCoreInvalidOSException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "os_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _EsGobAfirmaCoreInvalidOSException = { "InvalidOSException", "es.gob.afirma.core", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaCoreInvalidOSException;
}

@end


#line 22
void EsGobAfirmaCoreInvalidOSException_initWithNSString_(EsGobAfirmaCoreInvalidOSException *self, NSString *expectedOS) {
  JavaLangRuntimeException_initWithNSString_(self, JreStrcat("$$", @"Se esperaba el sistema operativo: ", expectedOS));
  self->os_ = expectedOS;
}


#line 22
EsGobAfirmaCoreInvalidOSException *new_EsGobAfirmaCoreInvalidOSException_initWithNSString_(NSString *expectedOS) {
  J2OBJC_NEW_IMPL(EsGobAfirmaCoreInvalidOSException, initWithNSString_, expectedOS)
}


#line 22
EsGobAfirmaCoreInvalidOSException *create_EsGobAfirmaCoreInvalidOSException_initWithNSString_(NSString *expectedOS) {
  J2OBJC_CREATE_IMPL(EsGobAfirmaCoreInvalidOSException, initWithNSString_, expectedOS)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaCoreInvalidOSException)

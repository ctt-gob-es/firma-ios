//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/CAdESValidator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/afirma/core/signers/AOSignConstants.h"
#include "es/gob/afirma/signers/cades/CAdESValidator.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/util/Enumeration.h"
#include "java/util/logging/Logger.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1InputStream.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1Set.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/DEROctetString.h"
#include "org/spongycastle/asn1/cms/Attribute.h"
#include "org/spongycastle/asn1/cms/SignedData.h"
#include "org/spongycastle/asn1/cms/SignerInfo.h"
#include "org/spongycastle/asn1/pkcs/PKCSObjectIdentifiers.h"

#if !__has_feature(objc_arc)
#error "es/gob/afirma/signers/cades/CAdESValidator must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobAfirmaSignersCadesCAdESValidator ()

- (instancetype)init;

+ (id<JavaUtilEnumeration>)getCAdESObjectsWithByteArray:(IOSByteArray *)data;

/*!
 @brief Verifica que los <code>SignerInfos</code> tengan el par&aacute;metro
  que identifica que los datos son de tipo CAdES.
 @param si <code> SignerInfo </code>  para la verificaci &oacute; n del par &aacute; metro         adecuado.
 @return si contiene el par&aacute;metro.
 */
+ (jboolean)verifySignerInfoWithOrgSpongycastleAsn1CmsSignerInfo:(OrgSpongycastleAsn1CmsSignerInfo *)si;

@end

inline JavaUtilLoggingLogger *EsGobAfirmaSignersCadesCAdESValidator_get_LOGGER(void);
static JavaUtilLoggingLogger *EsGobAfirmaSignersCadesCAdESValidator_LOGGER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobAfirmaSignersCadesCAdESValidator, LOGGER, JavaUtilLoggingLogger *)

__attribute__((unused)) static void EsGobAfirmaSignersCadesCAdESValidator_init(EsGobAfirmaSignersCadesCAdESValidator *self);

__attribute__((unused)) static EsGobAfirmaSignersCadesCAdESValidator *new_EsGobAfirmaSignersCadesCAdESValidator_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobAfirmaSignersCadesCAdESValidator *create_EsGobAfirmaSignersCadesCAdESValidator_init(void);

__attribute__((unused)) static id<JavaUtilEnumeration> EsGobAfirmaSignersCadesCAdESValidator_getCAdESObjectsWithByteArray_(IOSByteArray *data);

__attribute__((unused)) static jboolean EsGobAfirmaSignersCadesCAdESValidator_verifySignerInfoWithOrgSpongycastleAsn1CmsSignerInfo_(OrgSpongycastleAsn1CmsSignerInfo *si);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/es/gob/afirma/signers/cades/CAdESValidator.java"

J2OBJC_INITIALIZED_DEFN(EsGobAfirmaSignersCadesCAdESValidator)


#line 32
@implementation EsGobAfirmaSignersCadesCAdESValidator

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 36
- (instancetype)init {
  EsGobAfirmaSignersCadesCAdESValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 40
+ (id<JavaUtilEnumeration>)getCAdESObjectsWithByteArray:(IOSByteArray *)data {
  return EsGobAfirmaSignersCadesCAdESValidator_getCAdESObjectsWithByteArray_(data);
}


#line 54
+ (jboolean)isCAdESDataWithByteArray:(IOSByteArray *)data {
  return EsGobAfirmaSignersCadesCAdESValidator_isCAdESDataWithByteArray_(data);
}


#line 91
+ (jboolean)isCAdESSignedDataWithByteArray:(IOSByteArray *)data
                               withBoolean:(jboolean)enforceCAdES {
  return EsGobAfirmaSignersCadesCAdESValidator_isCAdESSignedDataWithByteArray_withBoolean_(data, enforceCAdES);
}


#line 137
+ (jboolean)verifySignerInfoWithOrgSpongycastleAsn1CmsSignerInfo:(OrgSpongycastleAsn1CmsSignerInfo *)si {
  return EsGobAfirmaSignersCadesCAdESValidator_verifySignerInfoWithOrgSpongycastleAsn1CmsSignerInfo_(si);
}


#line 185
+ (jboolean)isCAdESValidWithByteArray:(IOSByteArray *)signData
                         withNSString:(NSString *)type
                          withBoolean:(jboolean)enforceCAdESSignedData {
  return EsGobAfirmaSignersCadesCAdESValidator_isCAdESValidWithByteArray_withNSString_withBoolean_(signData, type, enforceCAdESSignedData);
}


#line 214
+ (jboolean)isCAdESValidWithByteArray:(IOSByteArray *)data
                          withBoolean:(jboolean)enforceCAdESSignedData {
  return EsGobAfirmaSignersCadesCAdESValidator_isCAdESValidWithByteArray_withBoolean_(data, enforceCAdESSignedData);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0xa, 0, 1, 2, 3, -1, -1 },
    { NULL, "Z", 0x8, 4, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 9, 10, 2, -1, -1, -1 },
    { NULL, "Z", 0x9, 9, 6, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCAdESObjectsWithByteArray:);
  methods[2].selector = @selector(isCAdESDataWithByteArray:);
  methods[3].selector = @selector(isCAdESSignedDataWithByteArray:withBoolean:);
  methods[4].selector = @selector(verifySignerInfoWithOrgSpongycastleAsn1CmsSignerInfo:);
  methods[5].selector = @selector(isCAdESValidWithByteArray:withNSString:withBoolean:);
  methods[6].selector = @selector(isCAdESValidWithByteArray:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOGGER", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "getCAdESObjects", "[B", "LJavaIoIOException;", "([B)Ljava/util/Enumeration<*>;", "isCAdESData", "isCAdESSignedData", "[BZ", "verifySignerInfo", "LOrgSpongycastleAsn1CmsSignerInfo;", "isCAdESValid", "[BLNSString;Z", &EsGobAfirmaSignersCadesCAdESValidator_LOGGER };
  static const J2ObjcClassInfo _EsGobAfirmaSignersCadesCAdESValidator = { "CAdESValidator", "es.gob.afirma.signers.cades", ptrTable, methods, fields, 7, 0x11, 7, 1, -1, -1, -1, -1, -1 };
  return &_EsGobAfirmaSignersCadesCAdESValidator;
}

+ (void)initialize {
  if (self == [EsGobAfirmaSignersCadesCAdESValidator class]) {
    EsGobAfirmaSignersCadesCAdESValidator_LOGGER = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 34
    @"es.gob.afima");
    J2OBJC_SET_INITIALIZED(EsGobAfirmaSignersCadesCAdESValidator)
  }
}

@end


#line 36
void EsGobAfirmaSignersCadesCAdESValidator_init(EsGobAfirmaSignersCadesCAdESValidator *self) {
  NSObject_init(self);
}


#line 36
EsGobAfirmaSignersCadesCAdESValidator *new_EsGobAfirmaSignersCadesCAdESValidator_init() {
  J2OBJC_NEW_IMPL(EsGobAfirmaSignersCadesCAdESValidator, init)
}


#line 36
EsGobAfirmaSignersCadesCAdESValidator *create_EsGobAfirmaSignersCadesCAdESValidator_init() {
  J2OBJC_CREATE_IMPL(EsGobAfirmaSignersCadesCAdESValidator, init)
}

id<JavaUtilEnumeration> EsGobAfirmaSignersCadesCAdESValidator_getCAdESObjectsWithByteArray_(IOSByteArray *data) {
  EsGobAfirmaSignersCadesCAdESValidator_initialize();
  OrgSpongycastleAsn1ASN1InputStream *is = new_OrgSpongycastleAsn1ASN1InputStream_initWithByteArray_(data);
  JavaLangThrowable *__primaryException1 = nil;
  
#line 41
  @try {
    
#line 44
    OrgSpongycastleAsn1ASN1Sequence *dsq = (OrgSpongycastleAsn1ASN1Sequence *) cast_chk([is readObject], [OrgSpongycastleAsn1ASN1Sequence class]);
    return [((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(dsq)) getObjects];
  }
  @catch (JavaLangThrowable *e) {
    __primaryException1 = e;
    @throw e;
  }
  @finally {
    if (is != nil) {
      if (__primaryException1 != nil) {
        @try {
          [is close];
        }
        @catch (JavaLangThrowable *e) {
          [__primaryException1 addSuppressedWithJavaLangThrowable:e];
        }
      }
      else {
        [is close];
      }
    }
  }
}


#line 54
jboolean EsGobAfirmaSignersCadesCAdESValidator_isCAdESDataWithByteArray_(IOSByteArray *data) {
  EsGobAfirmaSignersCadesCAdESValidator_initialize();
  
#line 58
  __unused id<JavaUtilEnumeration> e = EsGobAfirmaSignersCadesCAdESValidator_getCAdESObjectsWithByteArray_(data);
  
#line 61
  __unused OrgSpongycastleAsn1ASN1ObjectIdentifier *doi = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((id<JavaUtilEnumeration>) nil_chk(e)) nextElement], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
  if (![((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(doi)) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, data)]) {
    return false;
  }
  
#line 67
  __unused OrgSpongycastleAsn1ASN1TaggedObject *doj = (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1TaggedObject class]);
  
#line 69
  @try {
    
#line 73
    (void) new_OrgSpongycastleAsn1DEROctetString_initWithOrgSpongycastleAsn1ASN1Encodable_([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(doj)) getObject]);
  }
  @catch (
#line 76
  JavaLangException *ex) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESValidator_LOGGER)) fineWithNSString:JreStrcat("$@", @"Los datos proporcionados no son de tipo Data: ", ex)];
    return false;
  }
  
#line 81
  return true;
}


#line 91
jboolean EsGobAfirmaSignersCadesCAdESValidator_isCAdESSignedDataWithByteArray_withBoolean_(IOSByteArray *data, jboolean enforceCAdES) {
  EsGobAfirmaSignersCadesCAdESValidator_initialize();
  
#line 92
  @try {
    
#line 94
    id<JavaUtilEnumeration> e = EsGobAfirmaSignersCadesCAdESValidator_getCAdESObjectsWithByteArray_(data);
    
#line 97
    OrgSpongycastleAsn1ASN1ObjectIdentifier *doi = (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((id<JavaUtilEnumeration>) nil_chk(e)) nextElement], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]);
    if (![((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk(doi)) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, signedData)]) {
      [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESValidator_LOGGER)) fineWithNSString:
#line 100
      @"Los datos proporcionados no son de tipo SignedData de CAdES (no esta declarado el OID de SignedData)"];
      
#line 102
      return false;
    }
    
#line 106
    OrgSpongycastleAsn1ASN1TaggedObject *doj = (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1TaggedObject class]);
    OrgSpongycastleAsn1ASN1Sequence *datos = (OrgSpongycastleAsn1ASN1Sequence *) cast_chk([((OrgSpongycastleAsn1ASN1TaggedObject *) nil_chk(doj)) getObject], [OrgSpongycastleAsn1ASN1Sequence class]);
    OrgSpongycastleAsn1CmsSignedData *sd = OrgSpongycastleAsn1CmsSignedData_getInstanceWithId_(datos);
    
#line 110
    OrgSpongycastleAsn1ASN1Set *signerInfosSd = [((OrgSpongycastleAsn1CmsSignedData *) nil_chk(sd)) getSignerInfos];
    
#line 112
    if (enforceCAdES) {
      for (jint i = 0; i < [((OrgSpongycastleAsn1ASN1Set *) nil_chk(signerInfosSd)) size]; i++) {
        if (!EsGobAfirmaSignersCadesCAdESValidator_verifySignerInfoWithOrgSpongycastleAsn1CmsSignerInfo_(OrgSpongycastleAsn1CmsSignerInfo_getInstanceWithId_([signerInfosSd getObjectAtWithInt:i]))) {
          [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESValidator_LOGGER)) fineWithNSString:
#line 116
          @"Los datos proporcionados no son de tipo SignedData de CAdES (al menos un SignerInfo no se ha declarado de tipo CAdES)"];
          
#line 118
          return false;
        }
      }
    }
  }
  @catch (
#line 124
  JavaLangException *ex) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESValidator_LOGGER)) fineWithNSString:JreStrcat("$@", @"Los datos proporcionados no son de tipo SignedData de CAdES: ", ex)];
    return false;
  }
  
#line 129
  return true;
}


#line 137
jboolean EsGobAfirmaSignersCadesCAdESValidator_verifySignerInfoWithOrgSpongycastleAsn1CmsSignerInfo_(OrgSpongycastleAsn1CmsSignerInfo *si) {
  EsGobAfirmaSignersCadesCAdESValidator_initialize();
  
#line 138
  jboolean isSignerValid = false;
  OrgSpongycastleAsn1ASN1Set *attrib = [((OrgSpongycastleAsn1CmsSignerInfo *) nil_chk(si)) getAuthenticatedAttributes];
  id<JavaUtilEnumeration> e = [((OrgSpongycastleAsn1ASN1Set *) nil_chk(attrib)) getObjects];
  OrgSpongycastleAsn1CmsAttribute *atribute;
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    OrgSpongycastleAsn1ASN1Sequence *seq = (OrgSpongycastleAsn1ASN1Sequence *) cast_chk([e nextElement], [OrgSpongycastleAsn1ASN1Sequence class]);
    atribute = new_OrgSpongycastleAsn1CmsAttribute_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Set_(
#line 145
    (OrgSpongycastleAsn1ASN1ObjectIdentifier *) cast_chk([((OrgSpongycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0], [OrgSpongycastleAsn1ASN1ObjectIdentifier class]),
#line 146
    (OrgSpongycastleAsn1ASN1Set *) cast_chk([seq getObjectAtWithInt:1], [OrgSpongycastleAsn1ASN1Set class]));
    
#line 150
    if ([((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([atribute getAttrType])) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, id_aa_signingCertificate)] ||
#line 151
    [((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([atribute getAttrType])) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, id_aa_signingCertificateV2)]) {
      isSignerValid = true;
    }
  }
  return isSignerValid;
}


#line 185
jboolean EsGobAfirmaSignersCadesCAdESValidator_isCAdESValidWithByteArray_withNSString_withBoolean_(IOSByteArray *signData, NSString *type, jboolean enforceCAdESSignedData) {
  EsGobAfirmaSignersCadesCAdESValidator_initialize();
  
#line 186
  if ([((NSString *) nil_chk(type)) isEqual:EsGobAfirmaCoreSignersAOSignConstants_CMS_CONTENTTYPE_DATA]) {
    return EsGobAfirmaSignersCadesCAdESValidator_isCAdESDataWithByteArray_(signData);
  }
  else if ([type isEqual:EsGobAfirmaCoreSignersAOSignConstants_CMS_CONTENTTYPE_SIGNEDDATA]) {
    return EsGobAfirmaSignersCadesCAdESValidator_isCAdESSignedDataWithByteArray_withBoolean_(signData, enforceCAdESSignedData);
  }
  [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESValidator_LOGGER)) fineWithNSString:@"Tipo de contenido CADES no reconocido"];
  return false;
}


#line 214
jboolean EsGobAfirmaSignersCadesCAdESValidator_isCAdESValidWithByteArray_withBoolean_(IOSByteArray *data, jboolean enforceCAdESSignedData) {
  EsGobAfirmaSignersCadesCAdESValidator_initialize();
  
#line 217
  if (data == nil) {
    [((JavaUtilLoggingLogger *) nil_chk(EsGobAfirmaSignersCadesCAdESValidator_LOGGER)) warningWithNSString:@"Se han introducido datos nulos para su comprobacion"];
    return false;
  }
  
#line 223
  jboolean valido = EsGobAfirmaSignersCadesCAdESValidator_isCAdESDataWithByteArray_(data);
  
#line 225
  if (!valido) {
    valido = EsGobAfirmaSignersCadesCAdESValidator_isCAdESSignedDataWithByteArray_withBoolean_(data, enforceCAdESSignedData);
  }
  return valido;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobAfirmaSignersCadesCAdESValidator)

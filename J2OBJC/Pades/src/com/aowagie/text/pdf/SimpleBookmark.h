//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/SimpleBookmark.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfSimpleBookmark")
#ifdef RESTRICT_ComAowagieTextPdfSimpleBookmark
#define INCLUDE_ALL_ComAowagieTextPdfSimpleBookmark 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfSimpleBookmark 1
#endif
#undef RESTRICT_ComAowagieTextPdfSimpleBookmark

#if !defined (ComAowagieTextPdfSimpleBookmark_) && (INCLUDE_ALL_ComAowagieTextPdfSimpleBookmark || defined(INCLUDE_ComAowagieTextPdfSimpleBookmark))
#define ComAowagieTextPdfSimpleBookmark_

#define RESTRICT_ComAowagieTextXmlSimpleparserSimpleXMLDocHandler 1
#define INCLUDE_ComAowagieTextXmlSimpleparserSimpleXMLDocHandler 1
#include "com/aowagie/text/xml/simpleparser/SimpleXMLDocHandler.h"

@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfWriter;
@class IOSObjectArray;
@class JavaUtilHashMap;
@protocol JavaUtilList;

/*!
 @brief Bookmark processing in a simple way.It has some limitations, mainly the only
  action types supported are GoTo, GoToR, URI and Launch.
 <p>
  The list structure is composed by a number of HashMap, keyed by strings, one HashMap
  for each bookmark.
  The element values are all strings with the exception of the key "Kids" that has
  another list for the child bookmarks. 
 <p>
  All the bookmarks have a "Title" with the
  bookmark title and optionally a "Style" that can be "bold", "italic" or a
  combination of both. They can also have a "Color" key with a value of three
  floats separated by spaces. The key "Open" can have the values "true" or "false" and
  signals the open status of the children. It's "true" by default. 
 <p>
  The actions and the parameters can be: 
 <ul>
  <li>"Action" = "GoTo" - "Page" | "Named" 
 <ul>
  <li>"Page" = "3 XYZ 70 400 null" - page number followed by a destination (/XYZ is also accepted) 
 <li>"Named" = "named_destination" 
 </ul>
  <li>"Action" = "GoToR" - "Page" | "Named" | "NamedN", "File", ["NewWindow"] 
 <ul>
  <li>"Page" = "3 XYZ 70 400 null" - page number followed by a destination (/XYZ is also accepted) 
 <li>"Named" = "named_destination_as_a_string" 
 <li>"NamedN" = "named_destination_as_a_name" 
 <li>"File" - "the_file_to_open" 
 <li>"NewWindow" - "true" or "false" 
 </ul>
  <li>"Action" = "URI" - "URI" 
 <ul>
  <li>"URI" = "http://sf.net" - URI to jump to 
 </ul>
  <li>"Action" = "Launch" - "File" 
 <ul>
  <li>"File" - "the_file_to_open_or_execute" 
 </ul>
  </ul>
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfSimpleBookmark : NSObject < ComAowagieTextXmlSimpleparserSimpleXMLDocHandler >

#pragma mark Public

- (void)endDocument;

- (void)endElementWithNSString:(NSString *)tag;

- (void)startDocument;

- (void)startElementWithNSString:(NSString *)tag
             withJavaUtilHashMap:(JavaUtilHashMap *)h;

- (void)textWithNSString:(NSString *)str;

#pragma mark Package-Private

+ (IOSObjectArray *)iterateOutlinesWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                        withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)parent
                                                 withJavaUtilList:(id<JavaUtilList>)kids
                                                      withBoolean:(jboolean)namedAsNames;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfSimpleBookmark)

FOUNDATION_EXPORT IOSObjectArray *ComAowagieTextPdfSimpleBookmark_iterateOutlinesWithComAowagieTextPdfPdfWriter_withComAowagieTextPdfPdfIndirectReference_withJavaUtilList_withBoolean_(ComAowagieTextPdfPdfWriter *writer, ComAowagieTextPdfPdfIndirectReference *parent, id<JavaUtilList> kids, jboolean namedAsNames);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfSimpleBookmark)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfSimpleBookmark")

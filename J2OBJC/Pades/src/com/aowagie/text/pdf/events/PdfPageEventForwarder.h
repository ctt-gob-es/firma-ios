//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/events/PdfPageEventForwarder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfEventsPdfPageEventForwarder")
#ifdef RESTRICT_ComAowagieTextPdfEventsPdfPageEventForwarder
#define INCLUDE_ALL_ComAowagieTextPdfEventsPdfPageEventForwarder 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfEventsPdfPageEventForwarder 1
#endif
#undef RESTRICT_ComAowagieTextPdfEventsPdfPageEventForwarder

#if !defined (ComAowagieTextPdfEventsPdfPageEventForwarder_) && (INCLUDE_ALL_ComAowagieTextPdfEventsPdfPageEventForwarder || defined(INCLUDE_ComAowagieTextPdfEventsPdfPageEventForwarder))
#define ComAowagieTextPdfEventsPdfPageEventForwarder_

#define RESTRICT_ComAowagieTextPdfPdfPageEvent 1
#define INCLUDE_ComAowagieTextPdfPdfPageEvent 1
#include "com/aowagie/text/pdf/PdfPageEvent.h"

@class ComAowagieTextDocument;
@class ComAowagieTextParagraph;
@class ComAowagieTextPdfPdfWriter;
@class ComAowagieTextRectangle;

/*!
 @brief If you want to add more than one page event to a PdfWriter,
  you have to construct a PdfPageEventForwarder, add the
  different events to this object and add the forwarder to
  the PdfWriter.
 */
@interface ComAowagieTextPdfEventsPdfPageEventForwarder : NSObject < ComAowagieTextPdfPdfPageEvent >

#pragma mark Public

- (instancetype)init;

/*!
 @brief Add a page event to the forwarder.
 @param event an event that has to be added to the forwarder.
 */
- (void)addPageEventWithComAowagieTextPdfPdfPageEvent:(id<ComAowagieTextPdfPdfPageEvent>)event;

/*!
 @brief Called when a Chapter is written.
 <P>
  <CODE>position</CODE> will hold the height at which the chapter will be
  written to.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 @param paragraphPosition the position the chapter will be written to
 @param title the title of the Chapter
 */
- (void)onChapterWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withComAowagieTextDocument:(ComAowagieTextDocument *)document
                                      withFloat:(jfloat)paragraphPosition
                    withComAowagieTextParagraph:(ComAowagieTextParagraph *)title;

/*!
 @brief Called when the end of a Chapter is reached.
 <P>
  <CODE>position</CODE> will hold the height of the end of the chapter.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 @param position the position of the end of the chapter.
 */
- (void)onChapterEndWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                        withComAowagieTextDocument:(ComAowagieTextDocument *)document
                                         withFloat:(jfloat)position;

/*!
 @brief Called when the document is closed.
 <P>
  Note that this method is called with the page number equal to the last
  page plus one.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 */
- (void)onCloseDocumentWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                           withComAowagieTextDocument:(ComAowagieTextDocument *)document;

/*!
 @brief Called when a page is finished, just before being written to the
  document.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 */
- (void)onEndPageWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withComAowagieTextDocument:(ComAowagieTextDocument *)document;

/*!
 @brief Called when a <CODE>Chunk</CODE> with a generic tag is written.
 <P>
  It is useful to pinpoint the <CODE>Chunk</CODE> location to generate
  bookmarks, for example.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 @param rect the 
  <CODE> Rectangle </CODE>  containing the  <CODE> Chunk             
  </CODE>
 @param text the text of the tag
 */
- (void)onGenericTagWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                        withComAowagieTextDocument:(ComAowagieTextDocument *)document
                       withComAowagieTextRectangle:(ComAowagieTextRectangle *)rect
                                      withNSString:(NSString *)text;

/*!
 @brief Called when the document is opened.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 */
- (void)onOpenDocumentWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                          withComAowagieTextDocument:(ComAowagieTextDocument *)document;

/*!
 @brief Called when a Paragraph is written.
 <P>
  <CODE>paragraphPosition</CODE> will hold the height at which the
  paragraph will be written to. This is useful to insert bookmarks with
  more control.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 @param paragraphPosition the position the paragraph will be written to
 */
- (void)onParagraphWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                       withComAowagieTextDocument:(ComAowagieTextDocument *)document
                                        withFloat:(jfloat)paragraphPosition;

/*!
 @brief Called when a Paragraph is written.
 <P>
  <CODE>paragraphPosition</CODE> will hold the height of the end of the
  paragraph.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 @param paragraphPosition the position of the end of the paragraph
 */
- (void)onParagraphEndWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                          withComAowagieTextDocument:(ComAowagieTextDocument *)document
                                           withFloat:(jfloat)paragraphPosition;

/*!
 @brief Called when a Section is written.
 <P>
  <CODE>position</CODE> will hold the height at which the section will be
  written to.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 @param paragraphPosition the position the section will be written to
 @param depth the number depth of the Section
 @param title the title of the section
 */
- (void)onSectionWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                     withComAowagieTextDocument:(ComAowagieTextDocument *)document
                                      withFloat:(jfloat)paragraphPosition
                                        withInt:(jint)depth
                    withComAowagieTextParagraph:(ComAowagieTextParagraph *)title;

/*!
 @brief Called when the end of a Section is reached.
 <P>
  <CODE>position</CODE> will hold the height of the section end.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 @param position the position of the end of the section
 */
- (void)onSectionEndWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                        withComAowagieTextDocument:(ComAowagieTextDocument *)document
                                         withFloat:(jfloat)position;

/*!
 @brief Called when a page is initialized.
 <P>
  Note that if even if a page is not written this method is still called.
  It is preferable to use <CODE>onEndPage</CODE> to avoid infinite loops.
 @param writer the 
  <CODE> PdfWriter </CODE>  for this document
 @param document the document
 */
- (void)onStartPageWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                       withComAowagieTextDocument:(ComAowagieTextDocument *)document;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfEventsPdfPageEventForwarder)

FOUNDATION_EXPORT void ComAowagieTextPdfEventsPdfPageEventForwarder_init(ComAowagieTextPdfEventsPdfPageEventForwarder *self);

FOUNDATION_EXPORT ComAowagieTextPdfEventsPdfPageEventForwarder *new_ComAowagieTextPdfEventsPdfPageEventForwarder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfEventsPdfPageEventForwarder *create_ComAowagieTextPdfEventsPdfPageEventForwarder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfEventsPdfPageEventForwarder)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfEventsPdfPageEventForwarder")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfCopyFieldsImp.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/Document.h"
#include "com/aowagie/text/DocumentException.h"
#include "com/aowagie/text/ExceptionConverter.h"
#include "com/aowagie/text/exceptions/BadPasswordException.h"
#include "com/aowagie/text/pdf/AcroFields.h"
#include "com/aowagie/text/pdf/IntHashtable.h"
#include "com/aowagie/text/pdf/PRIndirectReference.h"
#include "com/aowagie/text/pdf/PdfArray.h"
#include "com/aowagie/text/pdf/PdfCopyFieldsImp.h"
#include "com/aowagie/text/pdf/PdfDictionary.h"
#include "com/aowagie/text/pdf/PdfDocument.h"
#include "com/aowagie/text/pdf/PdfFormField.h"
#include "com/aowagie/text/pdf/PdfIndirectObject.h"
#include "com/aowagie/text/pdf/PdfIndirectReference.h"
#include "com/aowagie/text/pdf/PdfName.h"
#include "com/aowagie/text/pdf/PdfNumber.h"
#include "com/aowagie/text/pdf/PdfObject.h"
#include "com/aowagie/text/pdf/PdfPages.h"
#include "com/aowagie/text/pdf/PdfReader.h"
#include "com/aowagie/text/pdf/PdfString.h"
#include "com/aowagie/text/pdf/PdfWriter.h"
#include "com/aowagie/text/pdf/RandomAccessFileOrArray.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Calendar.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/ListIterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/StringTokenizer.h"

static void (*ComAowagieTextPdfPdfCopyFieldsImp_super$_setPdfVersionWithChar_)(id, SEL, jchar);

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/PdfCopyFieldsImp must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfCopyFieldsImp () {
 @public
  JavaUtilArrayList *readers_;
  JavaUtilHashMap *pages2intrefs_;
  JavaUtilHashMap *visited_;
  ComAowagieTextPdfRandomAccessFileOrArray *file_;
  JavaUtilHashMap *fieldTree_;
  JavaUtilArrayList *pageRefs_;
  JavaUtilArrayList *pageDics_;
  ComAowagieTextPdfPdfDictionary *resources_;
  ComAowagieTextPdfPdfDictionary *form_;
  jboolean closing_;
  ComAowagieTextDocument *nd_;
  JavaUtilHashMap *tabOrder_;
  JavaUtilArrayList *calculationOrder_;
  JavaUtilArrayList *calculationOrderRefs_;
  jboolean hasSignature_;
}

- (instancetype)initPackagePrivateWithJavaIoOutputStream:(JavaIoOutputStream *)os
                                                withChar:(jchar)pdfVersion
                                    withJavaUtilCalendar:(JavaUtilCalendar *)globalDate;

+ (NSString *)getCONameWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
             withComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref;

- (void)propagateWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj
      withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)refo
                                    withBoolean:(jboolean)restricted;

- (void)adjustTabOrderWithComAowagieTextPdfPdfArray:(ComAowagieTextPdfPdfArray *)annots
          withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ind
                     withComAowagieTextPdfPdfNumber:(ComAowagieTextPdfPdfNumber *)nn;

- (ComAowagieTextPdfPdfArray *)branchFormWithJavaUtilHashMap:(JavaUtilHashMap *)level
                   withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)parent
                                                withNSString:(NSString *)fname;

- (void)createAcroForms;

/*!
 @brief Creates the new PDF by merging the fields and forms.
 @throw IOExceptionon error
 */
- (void)closeIt;

- (void)addPageOffsetToFieldWithJavaUtilHashMap:(JavaUtilHashMap *)fd
                                        withInt:(jint)pageOffset;

- (void)createWidgetsWithJavaUtilArrayList:(JavaUtilArrayList *)list
      withComAowagieTextPdfAcroFields_Item:(ComAowagieTextPdfAcroFields_Item *)item;

- (void)mergeFieldWithNSString:(NSString *)name
withComAowagieTextPdfAcroFields_Item:(ComAowagieTextPdfAcroFields_Item *)item;

- (ComAowagieTextPdfPdfIndirectReference *)getNewReferenceWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref;

/*!
 @brief Sets a reference to "visited" in the copy process.
 @param ref the reference that needs to be set to "visited"
 @return true if the reference was set to visited
 */
- (jboolean)setVisitedWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref;

/*!
 @brief Checks if a reference has already been "visited" in the copy process.
 @param ref the reference that needs to be checked
 @return true if the reference was already visited
 */
- (jboolean)isVisitedWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref;

/*!
 @brief Checks if a reference refers to a page object.
 @param ref the reference that needs to be checked
 @return true is the reference refers to a page object.
 */
- (jboolean)isPageWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, readers_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, pages2intrefs_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, visited_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, file_, ComAowagieTextPdfRandomAccessFileOrArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, fieldTree_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, pageRefs_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, pageDics_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, resources_, ComAowagieTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, form_, ComAowagieTextPdfPdfDictionary *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, nd_, ComAowagieTextDocument *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, tabOrder_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, calculationOrder_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfCopyFieldsImp, calculationOrderRefs_, JavaUtilArrayList *)

inline ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfCopyFieldsImp_get_iTextTag(void);
static ComAowagieTextPdfPdfName *ComAowagieTextPdfPdfCopyFieldsImp_iTextTag;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfCopyFieldsImp, iTextTag, ComAowagieTextPdfPdfName *)

inline JavaLangInteger *ComAowagieTextPdfPdfCopyFieldsImp_get_zero(void);
static JavaLangInteger *ComAowagieTextPdfPdfCopyFieldsImp_zero;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfCopyFieldsImp, zero, JavaLangInteger *)

inline JavaUtilHashMap *ComAowagieTextPdfPdfCopyFieldsImp_get_widgetKeys(void);
static JavaUtilHashMap *ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfPdfCopyFieldsImp, widgetKeys, JavaUtilHashMap *)

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaIoOutputStream *os, jchar pdfVersion, JavaUtilCalendar *globalDate);

__attribute__((unused)) static ComAowagieTextPdfPdfCopyFieldsImp *new_ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(JavaIoOutputStream *os, jchar pdfVersion, JavaUtilCalendar *globalDate) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComAowagieTextPdfPdfCopyFieldsImp *create_ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(JavaIoOutputStream *os, jchar pdfVersion, JavaUtilCalendar *globalDate);

__attribute__((unused)) static NSString *ComAowagieTextPdfPdfCopyFieldsImp_getCONameWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPRIndirectReference *ref);

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPdfObject *obj, ComAowagieTextPdfPdfIndirectReference *refo, jboolean restricted);

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_adjustTabOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfNumber_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPdfArray *annots, ComAowagieTextPdfPdfIndirectReference *ind, ComAowagieTextPdfPdfNumber *nn);

__attribute__((unused)) static ComAowagieTextPdfPdfArray *ComAowagieTextPdfPdfCopyFieldsImp_branchFormWithJavaUtilHashMap_withComAowagieTextPdfPdfIndirectReference_withNSString_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaUtilHashMap *level, ComAowagieTextPdfPdfIndirectReference *parent, NSString *fname);

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_createAcroForms(ComAowagieTextPdfPdfCopyFieldsImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_closeIt(ComAowagieTextPdfPdfCopyFieldsImp *self);

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_addPageOffsetToFieldWithJavaUtilHashMap_withInt_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaUtilHashMap *fd, jint pageOffset);

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_createWidgetsWithJavaUtilArrayList_withComAowagieTextPdfAcroFields_Item_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaUtilArrayList *list, ComAowagieTextPdfAcroFields_Item *item);

__attribute__((unused)) static void ComAowagieTextPdfPdfCopyFieldsImp_mergeFieldWithNSString_withComAowagieTextPdfAcroFields_Item_(ComAowagieTextPdfPdfCopyFieldsImp *self, NSString *name, ComAowagieTextPdfAcroFields_Item *item);

__attribute__((unused)) static ComAowagieTextPdfPdfIndirectReference *ComAowagieTextPdfPdfCopyFieldsImp_getNewReferenceWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref);

__attribute__((unused)) static jboolean ComAowagieTextPdfPdfCopyFieldsImp_setVisitedWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref);

__attribute__((unused)) static jboolean ComAowagieTextPdfPdfCopyFieldsImp_isVisitedWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref);

__attribute__((unused)) static jboolean ComAowagieTextPdfPdfCopyFieldsImp_isPageWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfCopyFieldsImp.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfPdfCopyFieldsImp)

JavaUtilHashMap *ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys;


#line 70
@implementation ComAowagieTextPdfPdfCopyFieldsImp


#line 92
- (instancetype)initPackagePrivateWithJavaIoOutputStream:(JavaIoOutputStream *)os
                                    withJavaUtilCalendar:(JavaUtilCalendar *)globalDate {
  ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withJavaUtilCalendar_(self, os, globalDate);
  return self;
}


#line 96
- (instancetype)initPackagePrivateWithJavaIoOutputStream:(JavaIoOutputStream *)os
                                                withChar:(jchar)pdfVersion
                                    withJavaUtilCalendar:(JavaUtilCalendar *)globalDate {
  ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(self, os, pdfVersion, globalDate);
  return self;
}


#line 106
- (void)addDocumentWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                 withJavaUtilList:(id<JavaUtilList>)pagesToKeep {
  
#line 107
  if (![((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) containsKeyWithId:reader] && [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) isTampered]) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(@"The document was reused.");
  }
  reader = new_ComAowagieTextPdfPdfReader_initWithComAowagieTextPdfPdfReader_(reader);
  [reader selectPagesWithJavaUtilList:pagesToKeep];
  if ([reader getNumberOfPages] == 0) {
    return;
  }
  [reader setTamperedWithBoolean:false];
  [self addDocumentWithComAowagieTextPdfPdfReader:reader];
}


#line 119
- (void)addDocumentWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  if (![((ComAowagieTextPdfPdfReader *) nil_chk(reader)) isOpenedWithFullPermissions]) {
    @throw new_ComAowagieTextExceptionsBadPasswordException_initWithNSString_(@"PdfReader not opened with owner password");
  }
  [self openDoc];
  if ([((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) containsKeyWithId:reader]) {
    reader = new_ComAowagieTextPdfPdfReader_initWithComAowagieTextPdfPdfReader_(reader);
  }
  else {
    if ([reader isTampered]) {
      @throw new_ComAowagieTextDocumentException_initWithNSString_(@"The document was reused.");
    }
    [reader consolidateNamedDestinations];
    [reader setTamperedWithBoolean:true];
  }
  [reader shuffleSubsetNames];
  (void) [((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) putWithId:reader withId:new_ComAowagieTextPdfIntHashtable_initPackagePrivate()];
  [((JavaUtilArrayList *) nil_chk(self->readers_)) addWithId:reader];
  jint len = [reader getNumberOfPages];
  ComAowagieTextPdfIntHashtable *refs = new_ComAowagieTextPdfIntHashtable_initPackagePrivate();
  for (jint p = 1; p <= len; ++p) {
    [refs putWithInt:[((ComAowagieTextPdfPRIndirectReference *) nil_chk([reader getPageOrigRefWithInt:p])) getNumber] withInt:1];
    [reader releasePageWithInt:p];
  }
  (void) [((JavaUtilHashMap *) nil_chk(self->pages2intrefs_)) putWithId:reader withId:refs];
  (void) [((JavaUtilHashMap *) nil_chk(self->visited_)) putWithId:reader withId:new_ComAowagieTextPdfIntHashtable_initPackagePrivate()];
  [((JavaUtilArrayList *) nil_chk(self->fields_)) addWithId:[reader getAcroFields]];
  [self updateCalculationOrderWithComAowagieTextPdfPdfReader:reader];
}

+ (NSString *)getCONameWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
             withComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref {
  return ComAowagieTextPdfPdfCopyFieldsImp_getCONameWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPRIndirectReference_(reader, ref);
}


#line 173
- (void)updateCalculationOrderWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  ComAowagieTextPdfPdfDictionary *catalog = [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getCatalog];
  ComAowagieTextPdfPdfDictionary *acro = [((ComAowagieTextPdfPdfDictionary *) nil_chk(catalog)) getAsDictWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM)];
  if (acro == nil) {
    return;
  }
  ComAowagieTextPdfPdfArray *co = [acro getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CO)];
  if (co == nil || [co size] == 0) {
    return;
  }
  ComAowagieTextPdfAcroFields *af = [reader getAcroFields];
  for (jint k = 0; k < [co size]; ++k) {
    ComAowagieTextPdfPdfObject *obj = [co getPdfObjectWithInt:k];
    if (obj == nil || ![obj isIndirect]) {
      continue;
    }
    NSString *name = ComAowagieTextPdfPdfCopyFieldsImp_getCONameWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPRIndirectReference_(reader, (ComAowagieTextPdfPRIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPRIndirectReference class]));
    if ([((ComAowagieTextPdfAcroFields *) nil_chk(af)) getFieldItemWithNSString:name] == nil) {
      continue;
    }
    name = JreStrcat("C$", '.', name);
    if ([((JavaUtilArrayList *) nil_chk(self->calculationOrder_)) containsWithId:name]) {
      continue;
    }
    [self->calculationOrder_ addWithId:name];
  }
}

- (void)propagateWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)obj
      withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)refo
                                    withBoolean:(jboolean)restricted {
  ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, obj, refo, restricted);
}


#line 254
- (void)adjustTabOrderWithComAowagieTextPdfPdfArray:(ComAowagieTextPdfPdfArray *)annots
          withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)ind
                     withComAowagieTextPdfPdfNumber:(ComAowagieTextPdfPdfNumber *)nn {
  ComAowagieTextPdfPdfCopyFieldsImp_adjustTabOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfNumber_(self, annots, ind, nn);
}


#line 284
- (ComAowagieTextPdfPdfArray *)branchFormWithJavaUtilHashMap:(JavaUtilHashMap *)level
                   withComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)parent
                                                withNSString:(NSString *)fname {
  return ComAowagieTextPdfPdfCopyFieldsImp_branchFormWithJavaUtilHashMap_withComAowagieTextPdfPdfIndirectReference_withNSString_(self, level, parent, fname);
}


#line 352
- (void)createAcroForms {
  ComAowagieTextPdfPdfCopyFieldsImp_createAcroForms(self);
}


#line 378
- (void)close {
  
#line 380
  if (self->closing_) {
    [super close];
    return;
  }
  self->closing_ = true;
  @try {
    ComAowagieTextPdfPdfCopyFieldsImp_closeIt(self);
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 397
- (void)closeIt {
  ComAowagieTextPdfPdfCopyFieldsImp_closeIt(self);
}


#line 446
- (void)addPageOffsetToFieldWithJavaUtilHashMap:(JavaUtilHashMap *)fd
                                        withInt:(jint)pageOffset {
  ComAowagieTextPdfPdfCopyFieldsImp_addPageOffsetToFieldWithJavaUtilHashMap_withInt_(self, fd, pageOffset);
}


#line 459
- (void)createWidgetsWithJavaUtilArrayList:(JavaUtilArrayList *)list
      withComAowagieTextPdfAcroFields_Item:(ComAowagieTextPdfAcroFields_Item *)item {
  ComAowagieTextPdfPdfCopyFieldsImp_createWidgetsWithJavaUtilArrayList_withComAowagieTextPdfAcroFields_Item_(self, list, item);
}


#line 479
- (void)mergeFieldWithNSString:(NSString *)name
withComAowagieTextPdfAcroFields_Item:(ComAowagieTextPdfAcroFields_Item *)item {
  ComAowagieTextPdfPdfCopyFieldsImp_mergeFieldWithNSString_withComAowagieTextPdfAcroFields_Item_(self, name, item);
}


#line 560
- (void)mergeWithMasterWithJavaUtilHashMap:(JavaUtilHashMap *)fd {
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(fd)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([it next], JavaUtilMap_Entry_class_());
    NSString *name = (NSString *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [NSString class]);
    ComAowagieTextPdfPdfCopyFieldsImp_mergeFieldWithNSString_withComAowagieTextPdfAcroFields_Item_(self, name, (ComAowagieTextPdfAcroFields_Item *) cast_chk([entry_ getValue], [ComAowagieTextPdfAcroFields_Item class]));
  }
}

- (void)mergeFields {
  jint pageOffset = 0;
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(self->fields_)) size]; ++k) {
    JavaUtilHashMap *fd = [((ComAowagieTextPdfAcroFields *) nil_chk(((ComAowagieTextPdfAcroFields *) cast_chk([((JavaUtilArrayList *) nil_chk(self->fields_)) getWithInt:k], [ComAowagieTextPdfAcroFields class])))) getFields];
    ComAowagieTextPdfPdfCopyFieldsImp_addPageOffsetToFieldWithJavaUtilHashMap_withInt_(self, fd, pageOffset);
    [self mergeWithMasterWithJavaUtilHashMap:fd];
    pageOffset += [((ComAowagieTextPdfPdfReader *) nil_chk(((ComAowagieTextPdfPdfReader *) cast_chk([((JavaUtilArrayList *) nil_chk(self->readers_)) getWithInt:k], [ComAowagieTextPdfPdfReader class])))) getNumberOfPages];
  }
}

- (ComAowagieTextPdfPdfIndirectReference *)getPageReferenceWithInt:(jint)page {
  
#line 580
  return (ComAowagieTextPdfPdfIndirectReference *) cast_chk([((JavaUtilArrayList *) nil_chk(self->pageRefs_)) getWithInt:page - 1], [ComAowagieTextPdfPdfIndirectReference class]);
}


#line 583
- (ComAowagieTextPdfPdfDictionary *)getCatalogWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)rootObj {
  
#line 585
  @try {
    ComAowagieTextPdfPdfDictionary *cat = [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) getCatalogWithComAowagieTextPdfPdfIndirectReference:rootObj];
    if (self->form_ != nil) {
      ComAowagieTextPdfPdfIndirectReference *ref = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:self->form_])) getIndirectReference];
      [((ComAowagieTextPdfPdfDictionary *) nil_chk(cat)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ACROFORM) withComAowagieTextPdfPdfObject:ref];
    }
    return cat;
  }
  @catch (JavaIoIOException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
}


#line 598
- (ComAowagieTextPdfPdfIndirectReference *)getNewReferenceWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref {
  return ComAowagieTextPdfPdfCopyFieldsImp_getNewReferenceWithComAowagieTextPdfPRIndirectReference_(self, ref);
}

- (jint)getNewObjectNumberWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader
                                                 withInt:(jint)number
                                                 withInt:(jint)generation {
  
#line 604
  ComAowagieTextPdfIntHashtable *refs = (ComAowagieTextPdfIntHashtable *) cast_chk([((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) getWithId:reader], [ComAowagieTextPdfIntHashtable class]);
  jint n = [((ComAowagieTextPdfIntHashtable *) nil_chk(refs)) getWithInt:number];
  if (n == 0) {
    n = [self getIndirectReferenceNumber];
    [refs putWithInt:number withInt:n];
  }
  return n;
}


#line 619
- (jboolean)setVisitedWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref {
  return ComAowagieTextPdfPdfCopyFieldsImp_setVisitedWithComAowagieTextPdfPRIndirectReference_(self, ref);
}


#line 633
- (jboolean)isVisitedWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref {
  return ComAowagieTextPdfPdfCopyFieldsImp_isVisitedWithComAowagieTextPdfPRIndirectReference_(self, ref);
}


#line 649
- (jboolean)isPageWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref {
  return ComAowagieTextPdfPdfCopyFieldsImp_isPageWithComAowagieTextPdfPRIndirectReference_(self, ref);
}


#line 658
- (ComAowagieTextPdfRandomAccessFileOrArray *)getReaderFileWithComAowagieTextPdfPdfReader:(ComAowagieTextPdfPdfReader *)reader {
  
#line 660
  return self->file_;
}


#line 663
- (void)openDoc {
  if (![((ComAowagieTextDocument *) nil_chk(self->nd_)) isOpen]) {
    [self->nd_ open];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 2, 1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 6, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 9, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 12, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfArray;", 0x2, 15, 16, 12, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 12, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 12, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x1, 25, 26, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x4, 27, 28, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x2, 29, 30, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 31, 32, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 33, 30, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 34, 30, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 35, 30, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfRandomAccessFileOrArray;", 0x0, 36, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithJavaIoOutputStream:withJavaUtilCalendar:);
  methods[1].selector = @selector(initPackagePrivateWithJavaIoOutputStream:withChar:withJavaUtilCalendar:);
  methods[2].selector = @selector(addDocumentWithComAowagieTextPdfPdfReader:withJavaUtilList:);
  methods[3].selector = @selector(addDocumentWithComAowagieTextPdfPdfReader:);
  methods[4].selector = @selector(getCONameWithComAowagieTextPdfPdfReader:withComAowagieTextPdfPRIndirectReference:);
  methods[5].selector = @selector(updateCalculationOrderWithComAowagieTextPdfPdfReader:);
  methods[6].selector = @selector(propagateWithComAowagieTextPdfPdfObject:withComAowagieTextPdfPdfIndirectReference:withBoolean:);
  methods[7].selector = @selector(adjustTabOrderWithComAowagieTextPdfPdfArray:withComAowagieTextPdfPdfIndirectReference:withComAowagieTextPdfPdfNumber:);
  methods[8].selector = @selector(branchFormWithJavaUtilHashMap:withComAowagieTextPdfPdfIndirectReference:withNSString:);
  methods[9].selector = @selector(createAcroForms);
  methods[10].selector = @selector(close);
  methods[11].selector = @selector(closeIt);
  methods[12].selector = @selector(addPageOffsetToFieldWithJavaUtilHashMap:withInt:);
  methods[13].selector = @selector(createWidgetsWithJavaUtilArrayList:withComAowagieTextPdfAcroFields_Item:);
  methods[14].selector = @selector(mergeFieldWithNSString:withComAowagieTextPdfAcroFields_Item:);
  methods[15].selector = @selector(mergeWithMasterWithJavaUtilHashMap:);
  methods[16].selector = @selector(mergeFields);
  methods[17].selector = @selector(getPageReferenceWithInt:);
  methods[18].selector = @selector(getCatalogWithComAowagieTextPdfPdfIndirectReference:);
  methods[19].selector = @selector(getNewReferenceWithComAowagieTextPdfPRIndirectReference:);
  methods[20].selector = @selector(getNewObjectNumberWithComAowagieTextPdfPdfReader:withInt:withInt:);
  methods[21].selector = @selector(setVisitedWithComAowagieTextPdfPRIndirectReference:);
  methods[22].selector = @selector(isVisitedWithComAowagieTextPdfPRIndirectReference:);
  methods[23].selector = @selector(isPageWithComAowagieTextPdfPRIndirectReference:);
  methods[24].selector = @selector(getReaderFileWithComAowagieTextPdfPdfReader:);
  methods[25].selector = @selector(openDoc);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iTextTag", "LComAowagieTextPdfPdfName;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "zero", "LJavaLangInteger;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
    { "readers_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "readers2intrefs_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "pages2intrefs_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "visited_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fields_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "file_", "LComAowagieTextPdfRandomAccessFileOrArray;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldTree_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pageRefs_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pageDics_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "resources_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "form_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "closing_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nd_", "LComAowagieTextDocument;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tabOrder_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "calculationOrder_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "calculationOrderRefs_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hasSignature_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "widgetKeys", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1a, -1, 39, -1, -1 },
    { "fieldKeys", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1c, -1, 40, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;LJavaUtilCalendar;", "LComAowagieTextDocumentException;", "LJavaIoOutputStream;CLJavaUtilCalendar;", "addDocument", "LComAowagieTextPdfPdfReader;LJavaUtilList;", "LComAowagieTextDocumentException;LJavaIoIOException;", "LComAowagieTextPdfPdfReader;", "getCOName", "LComAowagieTextPdfPdfReader;LComAowagieTextPdfPRIndirectReference;", "updateCalculationOrder", "propagate", "LComAowagieTextPdfPdfObject;LComAowagieTextPdfPdfIndirectReference;Z", "LJavaIoIOException;", "adjustTabOrder", "LComAowagieTextPdfPdfArray;LComAowagieTextPdfPdfIndirectReference;LComAowagieTextPdfPdfNumber;", "branchForm", "LJavaUtilHashMap;LComAowagieTextPdfPdfIndirectReference;LNSString;", "addPageOffsetToField", "LJavaUtilHashMap;I", "createWidgets", "LJavaUtilArrayList;LComAowagieTextPdfAcroFields_Item;", "mergeField", "LNSString;LComAowagieTextPdfAcroFields_Item;", "mergeWithMaster", "LJavaUtilHashMap;", "getPageReference", "I", "getCatalog", "LComAowagieTextPdfPdfIndirectReference;", "getNewReference", "LComAowagieTextPdfPRIndirectReference;", "getNewObjectNumber", "LComAowagieTextPdfPdfReader;II", "setVisited", "isVisited", "isPage", "getReaderFile", &ComAowagieTextPdfPdfCopyFieldsImp_iTextTag, &ComAowagieTextPdfPdfCopyFieldsImp_zero, &ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys, &ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfCopyFieldsImp = { "PdfCopyFieldsImp", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 26, 21, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfCopyFieldsImp;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfPdfCopyFieldsImp class]) {
    ComAowagieTextPdfPdfCopyFieldsImp_super$_setPdfVersionWithChar_ = (void (*)(id, SEL, jchar))[ComAowagieTextPdfPdfWriter instanceMethodForSelector:@selector(setPdfVersionWithChar:)];
    ComAowagieTextPdfPdfCopyFieldsImp_iTextTag = new_ComAowagieTextPdfPdfName_initWithNSString_(
#line 72
    @"_iTextTag_");
    ComAowagieTextPdfPdfCopyFieldsImp_zero = new_JavaLangInteger_initWithInt_(
#line 73
    0);
    ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys = new_JavaUtilLinkedHashMap_init();
    ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys = new_JavaUtilLinkedHashMap_init();
    {
      
#line 672
      JavaLangInteger *one = new_JavaLangInteger_initWithInt_(1);
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, SUBTYPE) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, CONTENTS) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, RECT) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, NM) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, M) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, F) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, BS) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, BORDER) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, AP) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, AS) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, C) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, A) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, STRUCTPARENT) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, OC) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, H) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, MK) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, DA) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, Q) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, AA) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, FT) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, TU) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, TM) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, FF) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, V) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, DV) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, DS) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, RV) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, OPT) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, MAXLEN) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, TI) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, I) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, LOCK) withId:one];
      (void) [ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys putWithId:JreLoadStatic(ComAowagieTextPdfPdfName, SV) withId:one];
    }
    J2OBJC_SET_INITIALIZED(ComAowagieTextPdfPdfCopyFieldsImp)
  }
}

@end


#line 92
void ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withJavaUtilCalendar_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaIoOutputStream *os, JavaUtilCalendar *globalDate) {
  ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(self, os, 0x0000, globalDate);
}


#line 92
ComAowagieTextPdfPdfCopyFieldsImp *new_ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withJavaUtilCalendar_(JavaIoOutputStream *os, JavaUtilCalendar *globalDate) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfCopyFieldsImp, initPackagePrivateWithJavaIoOutputStream_withJavaUtilCalendar_, os, globalDate)
}


#line 92
ComAowagieTextPdfPdfCopyFieldsImp *create_ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withJavaUtilCalendar_(JavaIoOutputStream *os, JavaUtilCalendar *globalDate) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfCopyFieldsImp, initPackagePrivateWithJavaIoOutputStream_withJavaUtilCalendar_, os, globalDate)
}

void ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaIoOutputStream *os, jchar pdfVersion, JavaUtilCalendar *globalDate) {
  ComAowagieTextPdfPdfWriter_initWithComAowagieTextPdfPdfDocument_withJavaIoOutputStream_(self, new_ComAowagieTextPdfPdfDocument_initPackagePrivateWithJavaUtilCalendar_(globalDate), os);
  self->readers_ = new_JavaUtilArrayList_init();
  self->readers2intrefs_ = new_JavaUtilLinkedHashMap_init();
  self->pages2intrefs_ = new_JavaUtilLinkedHashMap_init();
  self->visited_ = new_JavaUtilLinkedHashMap_init();
  self->fields_ = new_JavaUtilArrayList_init();
  self->fieldTree_ = new_JavaUtilLinkedHashMap_init();
  self->pageRefs_ = new_JavaUtilArrayList_init();
  self->pageDics_ = new_JavaUtilArrayList_init();
  self->resources_ = new_ComAowagieTextPdfPdfDictionary_init();
  self->closing_ =
#line 85
  false;
  self->calculationOrder_ = new_JavaUtilArrayList_init();
  
#line 98
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) addWriterWithComAowagieTextPdfPdfWriter:self];
  if (pdfVersion != 0) {
    ComAowagieTextPdfPdfCopyFieldsImp_super$_setPdfVersionWithChar_(self, @selector(setPdfVersionWithChar:), pdfVersion);
  }
  self->nd_ = new_ComAowagieTextDocument_init();
  [self->nd_ addDocListenerWithComAowagieTextDocListener:self->pdf_];
}


#line 96
ComAowagieTextPdfPdfCopyFieldsImp *new_ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(JavaIoOutputStream *os, jchar pdfVersion, JavaUtilCalendar *globalDate) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfCopyFieldsImp, initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_, os, pdfVersion, globalDate)
}


#line 96
ComAowagieTextPdfPdfCopyFieldsImp *create_ComAowagieTextPdfPdfCopyFieldsImp_initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_(JavaIoOutputStream *os, jchar pdfVersion, JavaUtilCalendar *globalDate) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfCopyFieldsImp, initPackagePrivateWithJavaIoOutputStream_withChar_withJavaUtilCalendar_, os, pdfVersion, globalDate)
}


#line 149
NSString *ComAowagieTextPdfPdfCopyFieldsImp_getCONameWithComAowagieTextPdfPdfReader_withComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfReader *reader, ComAowagieTextPdfPRIndirectReference *ref) {
  ComAowagieTextPdfPdfCopyFieldsImp_initialize();
  
#line 150
  NSString *name = @"";
  while (ref != nil) {
    ComAowagieTextPdfPdfObject *obj = ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(ref);
    if (obj == nil || [obj type] != ComAowagieTextPdfPdfObject_DICTIONARY) {
      break;
    }
    ComAowagieTextPdfPdfDictionary *dic = (ComAowagieTextPdfPdfDictionary *) cast_chk(obj, [ComAowagieTextPdfPdfDictionary class]);
    ComAowagieTextPdfPdfString *t = [dic getAsStringWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, T)];
    if (t != nil) {
      name = JreStrcat("$C$", [t toUnicodeString], '.', name);
    }
    ref = (ComAowagieTextPdfPRIndirectReference *) cast_chk([dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT)], [ComAowagieTextPdfPRIndirectReference class]);
  }
  if ([name java_hasSuffix:@"."]) {
    name = [name java_substring:0 endIndex:[name java_length] - 1];
  }
  return name;
}


#line 201
void ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPdfObject *obj, ComAowagieTextPdfPdfIndirectReference *refo, jboolean restricted) {
  if (obj == nil) {
    return;
  }
  
#line 207
  if ([obj isKindOfClass:[ComAowagieTextPdfPdfIndirectReference class]]) {
    return;
  }
  switch ([obj type]) {
    case ComAowagieTextPdfPdfObject_DICTIONARY:
    case ComAowagieTextPdfPdfObject_STREAM:
    {
      
#line 213
      ComAowagieTextPdfPdfDictionary *dic = (ComAowagieTextPdfPdfDictionary *) cast_chk(obj, [ComAowagieTextPdfPdfDictionary class]);
      for (id __strong element in nil_chk([dic getKeys])) {
        ComAowagieTextPdfPdfName *key = (ComAowagieTextPdfPdfName *) cast_chk(element, [ComAowagieTextPdfPdfName class]);
        if (restricted && ([((ComAowagieTextPdfPdfName *) nil_chk(key)) isEqual:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT)] || [key isEqual:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS)])) {
          continue;
        }
        ComAowagieTextPdfPdfObject *ob = [dic getWithComAowagieTextPdfPdfName:key];
        if (ob != nil && [ob isIndirect]) {
          ComAowagieTextPdfPRIndirectReference *ind = (ComAowagieTextPdfPRIndirectReference *) cast_chk(ob, [ComAowagieTextPdfPRIndirectReference class]);
          if (!ComAowagieTextPdfPdfCopyFieldsImp_setVisitedWithComAowagieTextPdfPRIndirectReference_(self, ind) && !ComAowagieTextPdfPdfCopyFieldsImp_isPageWithComAowagieTextPdfPRIndirectReference_(self, ind)) {
            ComAowagieTextPdfPdfIndirectReference *ref = ComAowagieTextPdfPdfCopyFieldsImp_getNewReferenceWithComAowagieTextPdfPRIndirectReference_(self, ind);
            ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_(ind), ref, restricted);
          }
        }
        else {
          
#line 227
          ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, ob, nil, restricted);
        }
      }
      break;
    }
    case ComAowagieTextPdfPdfObject_ARRAY:
    {
      for (id<JavaUtilIterator> it = [((ComAowagieTextPdfPdfArray *) cast_chk(obj, [ComAowagieTextPdfPdfArray class])) listIterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
        ComAowagieTextPdfPdfObject *ob = (ComAowagieTextPdfPdfObject *) cast_chk([it next], [ComAowagieTextPdfPdfObject class]);
        if (ob != nil && [ob isIndirect]) {
          ComAowagieTextPdfPRIndirectReference *ind = (ComAowagieTextPdfPRIndirectReference *) cast_chk(ob, [ComAowagieTextPdfPRIndirectReference class]);
          if (!ComAowagieTextPdfPdfCopyFieldsImp_isVisitedWithComAowagieTextPdfPRIndirectReference_(self, ind) && !ComAowagieTextPdfPdfCopyFieldsImp_isPageWithComAowagieTextPdfPRIndirectReference_(self, ind)) {
            ComAowagieTextPdfPdfIndirectReference *ref = ComAowagieTextPdfPdfCopyFieldsImp_getNewReferenceWithComAowagieTextPdfPRIndirectReference_(self, ind);
            ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_(ind), ref, restricted);
          }
        }
        else {
          
#line 243
          ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, ob, nil, restricted);
        }
      }
      break;
    }
    case ComAowagieTextPdfPdfObject_INDIRECT:
    {
      
#line 249
      @throw new_JavaLangRuntimeException_initWithNSString_(@"Reference pointing to reference.");
    }
  }
}


#line 254
void ComAowagieTextPdfPdfCopyFieldsImp_adjustTabOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfNumber_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPdfArray *annots, ComAowagieTextPdfPdfIndirectReference *ind, ComAowagieTextPdfPdfNumber *nn) {
  jint v = [((ComAowagieTextPdfPdfNumber *) nil_chk(nn)) intValue];
  JavaUtilArrayList *t = (JavaUtilArrayList *) cast_chk([((JavaUtilHashMap *) nil_chk(self->tabOrder_)) getWithId:annots], [JavaUtilArrayList class]);
  if (t == nil) {
    t = new_JavaUtilArrayList_init();
    jint size = [((ComAowagieTextPdfPdfArray *) nil_chk(annots)) size] - 1;
    for (jint k = 0; k < size; ++k) {
      [t addWithId:ComAowagieTextPdfPdfCopyFieldsImp_zero];
    }
    [t addWithId:new_JavaLangInteger_initWithInt_(v)];
    (void) [((JavaUtilHashMap *) nil_chk(self->tabOrder_)) putWithId:annots withId:t];
    [annots addWithComAowagieTextPdfPdfObject:ind];
  }
  else {
    jint size = [t size] - 1;
    for (jint k = size; k >= 0; --k) {
      if ([((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([t getWithInt:k], [JavaLangInteger class])))) intValue] <= v) {
        [t addWithInt:k + 1 withId:new_JavaLangInteger_initWithInt_(v)];
        [((ComAowagieTextPdfPdfArray *) nil_chk(annots)) addWithInt:k + 1 withComAowagieTextPdfPdfObject:ind];
        size = -2;
        break;
      }
    }
    if (size != -2) {
      [t addWithInt:0 withId:new_JavaLangInteger_initWithInt_(v)];
      [((ComAowagieTextPdfPdfArray *) nil_chk(annots)) addWithInt:0 withComAowagieTextPdfPdfObject:ind];
    }
  }
}

ComAowagieTextPdfPdfArray *ComAowagieTextPdfPdfCopyFieldsImp_branchFormWithJavaUtilHashMap_withComAowagieTextPdfPdfIndirectReference_withNSString_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaUtilHashMap *level, ComAowagieTextPdfPdfIndirectReference *parent, NSString *fname) {
  ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(level)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([it next], JavaUtilMap_Entry_class_());
    NSString *name = (NSString *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [NSString class]);
    id obj = [entry_ getValue];
    ComAowagieTextPdfPdfIndirectReference *ind = [self getPdfIndirectReference];
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
    if (parent != nil) {
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT) withComAowagieTextPdfPdfObject:parent];
    }
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, T) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(name, ComAowagieTextPdfPdfObject_TEXT_UNICODE)];
    NSString *fname2 = JreStrcat("$C$", fname, '.', name);
    jint coidx = [((JavaUtilArrayList *) nil_chk(self->calculationOrder_)) indexOfWithId:fname2];
    if (coidx >= 0) {
      (void) [((JavaUtilArrayList *) nil_chk(self->calculationOrderRefs_)) setWithInt:coidx withId:ind];
    }
    if ([obj isKindOfClass:[JavaUtilHashMap class]]) {
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:ComAowagieTextPdfPdfCopyFieldsImp_branchFormWithJavaUtilHashMap_withComAowagieTextPdfPdfIndirectReference_withNSString_(self, (JavaUtilHashMap *) obj, ind, fname2)];
      [arr addWithComAowagieTextPdfPdfObject:ind];
      (void) [self addToBodyWithComAowagieTextPdfPdfObject:dic withComAowagieTextPdfPdfIndirectReference:ind];
    }
    else {
      JavaUtilArrayList *list = (JavaUtilArrayList *) cast_chk(obj, [JavaUtilArrayList class]);
      [dic mergeDifferentWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *) cast_chk([((JavaUtilArrayList *) nil_chk(list)) getWithInt:0], [ComAowagieTextPdfPdfDictionary class])];
      if ([list size] == 3) {
        [dic mergeDifferentWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *) cast_chk([list getWithInt:2], [ComAowagieTextPdfPdfDictionary class])];
        jint page = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([list getWithInt:1], [JavaLangInteger class])))) intValue];
        ComAowagieTextPdfPdfDictionary *pageDic = (ComAowagieTextPdfPdfDictionary *) cast_chk([((JavaUtilArrayList *) nil_chk(self->pageDics_)) getWithInt:page - 1], [ComAowagieTextPdfPdfDictionary class]);
        ComAowagieTextPdfPdfArray *annots = [((ComAowagieTextPdfPdfDictionary *) nil_chk(pageDic)) getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
        if (annots == nil) {
          annots = new_ComAowagieTextPdfPdfArray_init();
          [pageDic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS) withComAowagieTextPdfPdfObject:annots];
        }
        ComAowagieTextPdfPdfNumber *nn = (ComAowagieTextPdfPdfNumber *) cast_chk([dic getWithComAowagieTextPdfPdfName:ComAowagieTextPdfPdfCopyFieldsImp_iTextTag], [ComAowagieTextPdfPdfNumber class]);
        [dic removeWithComAowagieTextPdfPdfName:ComAowagieTextPdfPdfCopyFieldsImp_iTextTag];
        ComAowagieTextPdfPdfCopyFieldsImp_adjustTabOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfNumber_(self, annots, ind, nn);
      }
      else {
        ComAowagieTextPdfPdfArray *kids = new_ComAowagieTextPdfPdfArray_init();
        for (jint k = 1; k < [list size]; k += 2) {
          jint page = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([list getWithInt:k], [JavaLangInteger class])))) intValue];
          ComAowagieTextPdfPdfDictionary *pageDic = (ComAowagieTextPdfPdfDictionary *) cast_chk([((JavaUtilArrayList *) nil_chk(self->pageDics_)) getWithInt:page - 1], [ComAowagieTextPdfPdfDictionary class]);
          ComAowagieTextPdfPdfArray *annots = [((ComAowagieTextPdfPdfDictionary *) nil_chk(pageDic)) getAsArrayWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS)];
          if (annots == nil) {
            annots = new_ComAowagieTextPdfPdfArray_init();
            [pageDic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, ANNOTS) withComAowagieTextPdfPdfObject:annots];
          }
          ComAowagieTextPdfPdfDictionary *widget = new_ComAowagieTextPdfPdfDictionary_init();
          [widget mergeWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *) cast_chk([list getWithInt:k + 1], [ComAowagieTextPdfPdfDictionary class])];
          [widget putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT) withComAowagieTextPdfPdfObject:ind];
          ComAowagieTextPdfPdfNumber *nn = (ComAowagieTextPdfPdfNumber *) cast_chk([widget getWithComAowagieTextPdfPdfName:ComAowagieTextPdfPdfCopyFieldsImp_iTextTag], [ComAowagieTextPdfPdfNumber class]);
          [widget removeWithComAowagieTextPdfPdfName:ComAowagieTextPdfPdfCopyFieldsImp_iTextTag];
          ComAowagieTextPdfPdfIndirectReference *wref = [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([self addToBodyWithComAowagieTextPdfPdfObject:widget])) getIndirectReference];
          ComAowagieTextPdfPdfCopyFieldsImp_adjustTabOrderWithComAowagieTextPdfPdfArray_withComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfNumber_(self, annots, wref, nn);
          [kids addWithComAowagieTextPdfPdfObject:wref];
          ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, widget, nil, false);
        }
        [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:kids];
      }
      [arr addWithComAowagieTextPdfPdfObject:ind];
      (void) [self addToBodyWithComAowagieTextPdfPdfObject:dic withComAowagieTextPdfPdfIndirectReference:ind];
      ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, dic, nil, false);
    }
  }
  return arr;
}

void ComAowagieTextPdfPdfCopyFieldsImp_createAcroForms(ComAowagieTextPdfPdfCopyFieldsImp *self) {
  if ([((JavaUtilHashMap *) nil_chk(self->fieldTree_)) isEmpty]) {
    return;
  }
  self->form_ = new_ComAowagieTextPdfPdfDictionary_init();
  [self->form_ putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DR) withComAowagieTextPdfPdfObject:self->resources_];
  ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, self->resources_, nil, false);
  [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->form_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DA) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_(@"/Helv 0 Tf 0 g ")];
  self->tabOrder_ = new_JavaUtilLinkedHashMap_init();
  self->calculationOrderRefs_ = new_JavaUtilArrayList_initWithJavaUtilCollection_(self->calculationOrder_);
  [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->form_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FIELDS) withComAowagieTextPdfPdfObject:ComAowagieTextPdfPdfCopyFieldsImp_branchFormWithJavaUtilHashMap_withComAowagieTextPdfPdfIndirectReference_withNSString_(self, self->fieldTree_, nil, @"")];
  if (self->hasSignature_) {
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->form_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SIGFLAGS) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_(3)];
  }
  ComAowagieTextPdfPdfArray *co = new_ComAowagieTextPdfPdfArray_init();
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(self->calculationOrderRefs_)) size]; ++k) {
    id obj = [((JavaUtilArrayList *) nil_chk(self->calculationOrderRefs_)) getWithInt:k];
    if ([obj isKindOfClass:[ComAowagieTextPdfPdfIndirectReference class]]) {
      [co addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfIndirectReference *) obj];
    }
  }
  if ([co size] > 0) {
    [((ComAowagieTextPdfPdfDictionary *) nil_chk(self->form_)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, CO) withComAowagieTextPdfPdfObject:co];
  }
}


#line 397
void ComAowagieTextPdfPdfCopyFieldsImp_closeIt(ComAowagieTextPdfPdfCopyFieldsImp *self) {
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(self->readers_)) size]; ++k) {
    [((ComAowagieTextPdfPdfReader *) nil_chk(((ComAowagieTextPdfPdfReader *) cast_chk([self->readers_ getWithInt:k], [ComAowagieTextPdfPdfReader class])))) removeFields];
  }
  for (jint r = 0; r < [self->readers_ size]; ++r) {
    ComAowagieTextPdfPdfReader *reader = (ComAowagieTextPdfPdfReader *) cast_chk([self->readers_ getWithInt:r], [ComAowagieTextPdfPdfReader class]);
    for (jint page = 1; page <= [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getNumberOfPages]; ++page) {
      [((JavaUtilArrayList *) nil_chk(self->pageRefs_)) addWithId:ComAowagieTextPdfPdfCopyFieldsImp_getNewReferenceWithComAowagieTextPdfPRIndirectReference_(self, [reader getPageOrigRefWithInt:page])];
      [((JavaUtilArrayList *) nil_chk(self->pageDics_)) addWithId:[reader getPageNWithInt:page]];
    }
  }
  [self mergeFields];
  ComAowagieTextPdfPdfCopyFieldsImp_createAcroForms(self);
  for (jint r = 0; r < [self->readers_ size]; ++r) {
    ComAowagieTextPdfPdfReader *reader = (ComAowagieTextPdfPdfReader *) cast_chk([self->readers_ getWithInt:r], [ComAowagieTextPdfPdfReader class]);
    for (jint page = 1; page <= [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getNumberOfPages]; ++page) {
      ComAowagieTextPdfPdfDictionary *dic = [reader getPageNWithInt:page];
      ComAowagieTextPdfPdfIndirectReference *pageRef = ComAowagieTextPdfPdfCopyFieldsImp_getNewReferenceWithComAowagieTextPdfPRIndirectReference_(self, [reader getPageOrigRefWithInt:page]);
      ComAowagieTextPdfPdfIndirectReference *parent = [((ComAowagieTextPdfPdfPages *) nil_chk(self->root_)) addPageRefWithComAowagieTextPdfPdfIndirectReference:pageRef];
      [((ComAowagieTextPdfPdfDictionary *) nil_chk(dic)) putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, PARENT) withComAowagieTextPdfPdfObject:parent];
      ComAowagieTextPdfPdfCopyFieldsImp_propagateWithComAowagieTextPdfPdfObject_withComAowagieTextPdfPdfIndirectReference_withBoolean_(self, dic, pageRef, false);
    }
  }
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([((JavaUtilHashMap *) nil_chk(self->readers2intrefs_)) entrySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    id<JavaUtilMap_Entry> entry_ = (id<JavaUtilMap_Entry>) cast_check([it next], JavaUtilMap_Entry_class_());
    ComAowagieTextPdfPdfReader *reader = (ComAowagieTextPdfPdfReader *) cast_chk([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey], [ComAowagieTextPdfPdfReader class]);
    @try {
      self->file_ = [((ComAowagieTextPdfPdfReader *) nil_chk(reader)) getSafeFile];
      [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->file_)) reOpen];
      ComAowagieTextPdfIntHashtable *t = (ComAowagieTextPdfIntHashtable *) cast_chk([entry_ getValue], [ComAowagieTextPdfIntHashtable class]);
      IOSIntArray *keys = [((ComAowagieTextPdfIntHashtable *) nil_chk(t)) toOrderedKeys];
      {
        IOSIntArray *a__ =
#line 428
        keys;
        jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
        jint const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          jint key = *b__++;
          
#line 429
          ComAowagieTextPdfPRIndirectReference *ref = new_ComAowagieTextPdfPRIndirectReference_initWithComAowagieTextPdfPdfReader_withInt_(reader, key);
          (void) [self addToBodyWithComAowagieTextPdfPdfObject:ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_(ref) withInt:[t getWithInt:key]];
        }
      }
    }
    @finally {
      
#line 434
      @try {
        [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(self->file_)) close];
        [reader close];
      }
      @catch (JavaLangException *e) {
      }
    }
  }
  
#line 443
  [((ComAowagieTextPdfPdfDocument *) nil_chk(self->pdf_)) close];
}


#line 446
void ComAowagieTextPdfPdfCopyFieldsImp_addPageOffsetToFieldWithJavaUtilHashMap_withInt_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaUtilHashMap *fd, jint pageOffset) {
  if (pageOffset == 0) {
    return;
  }
  for (id<JavaUtilIterator> it = [((id<JavaUtilCollection>) nil_chk([((JavaUtilHashMap *) nil_chk(fd)) values])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    ComAowagieTextPdfAcroFields_Item *item = (ComAowagieTextPdfAcroFields_Item *) cast_chk([it next], [ComAowagieTextPdfAcroFields_Item class]);
    for (jint k = 0; k < [((ComAowagieTextPdfAcroFields_Item *) nil_chk(item)) size]; ++k) {
      jint p = [((JavaLangInteger *) nil_chk([item getPageWithInt:k])) intValue];
      [item forcePageWithInt:k withInt:p + pageOffset];
    }
  }
}

void ComAowagieTextPdfPdfCopyFieldsImp_createWidgetsWithJavaUtilArrayList_withComAowagieTextPdfAcroFields_Item_(ComAowagieTextPdfPdfCopyFieldsImp *self, JavaUtilArrayList *list, ComAowagieTextPdfAcroFields_Item *item) {
  for (jint k = 0; k < [((ComAowagieTextPdfAcroFields_Item *) nil_chk(item)) size]; ++k) {
    [((JavaUtilArrayList *) nil_chk(list)) addWithId:[item getPageWithInt:k]];
    ComAowagieTextPdfPdfDictionary *merged = [item getMergedWithInt:k];
    ComAowagieTextPdfPdfObject *dr = [((ComAowagieTextPdfPdfDictionary *) nil_chk(merged)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, DR)];
    if (dr != nil) {
      ComAowagieTextPdfPdfFormField_mergeResourcesWithComAowagieTextPdfPdfDictionary_withComAowagieTextPdfPdfDictionary_(self->resources_, (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectWithComAowagieTextPdfPdfObject_(dr), [ComAowagieTextPdfPdfDictionary class]));
    }
    ComAowagieTextPdfPdfDictionary *widget = new_ComAowagieTextPdfPdfDictionary_init();
    for (id __strong element in nil_chk([merged getKeys])) {
      ComAowagieTextPdfPdfName *key = (ComAowagieTextPdfPdfName *) cast_chk(element, [ComAowagieTextPdfPdfName class]);
      if ([((JavaUtilHashMap *) nil_chk(ComAowagieTextPdfPdfCopyFieldsImp_widgetKeys)) containsKeyWithId:key]) {
        [widget putWithComAowagieTextPdfPdfName:key withComAowagieTextPdfPdfObject:[merged getWithComAowagieTextPdfPdfName:key]];
      }
    }
    [widget putWithComAowagieTextPdfPdfName:ComAowagieTextPdfPdfCopyFieldsImp_iTextTag withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfNumber_initWithInt_([((JavaLangInteger *) nil_chk([item getTabOrderWithInt:k])) intValue] + 1)];
    [list addWithId:widget];
  }
}

void ComAowagieTextPdfPdfCopyFieldsImp_mergeFieldWithNSString_withComAowagieTextPdfAcroFields_Item_(ComAowagieTextPdfPdfCopyFieldsImp *self, NSString *name, ComAowagieTextPdfAcroFields_Item *item) {
  JavaUtilHashMap *map = self->fieldTree_;
  JavaUtilStringTokenizer *tk = new_JavaUtilStringTokenizer_initWithNSString_withNSString_(name, @".");
  if (![tk hasMoreTokens]) {
    return;
  }
  while (true) {
    NSString *s = [tk nextToken];
    id obj = [((JavaUtilHashMap *) nil_chk(map)) getWithId:s];
    if ([tk hasMoreTokens]) {
      if (obj == nil) {
        obj = new_JavaUtilLinkedHashMap_init();
        (void) [map putWithId:s withId:obj];
        map = (JavaUtilHashMap *) cast_chk(obj, [JavaUtilHashMap class]);
        continue;
      }
      else if ([obj isKindOfClass:[JavaUtilHashMap class]]) {
        map = (JavaUtilHashMap *) obj;
      }
      else {
        
#line 498
        return;
      }
    }
    else {
      if ([obj isKindOfClass:[JavaUtilHashMap class]]) {
        return;
      }
      ComAowagieTextPdfPdfDictionary *merged = [((ComAowagieTextPdfAcroFields_Item *) nil_chk(item)) getMergedWithInt:0];
      if (obj == nil) {
        ComAowagieTextPdfPdfDictionary *field = new_ComAowagieTextPdfPdfDictionary_init();
        if ([((ComAowagieTextPdfPdfName *) nil_chk(JreLoadStatic(ComAowagieTextPdfPdfName, SIG))) isEqual:[((ComAowagieTextPdfPdfDictionary *) nil_chk(merged)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FT)]]) {
          self->hasSignature_ = true;
        }
        for (id __strong element in nil_chk([merged getKeys])) {
          ComAowagieTextPdfPdfName *key = (ComAowagieTextPdfPdfName *) cast_chk(element, [ComAowagieTextPdfPdfName class]);
          if ([((JavaUtilHashMap *) nil_chk(ComAowagieTextPdfPdfCopyFieldsImp_fieldKeys)) containsKeyWithId:key]) {
            [field putWithComAowagieTextPdfPdfName:key withComAowagieTextPdfPdfObject:[merged getWithComAowagieTextPdfPdfName:key]];
          }
        }
        JavaUtilArrayList *list = new_JavaUtilArrayList_init();
        [list addWithId:field];
        ComAowagieTextPdfPdfCopyFieldsImp_createWidgetsWithJavaUtilArrayList_withComAowagieTextPdfAcroFields_Item_(self, list, item);
        (void) [map putWithId:s withId:list];
      }
      else {
        JavaUtilArrayList *list = (JavaUtilArrayList *) cast_chk(obj, [JavaUtilArrayList class]);
        ComAowagieTextPdfPdfDictionary *field = (ComAowagieTextPdfPdfDictionary *) cast_chk([list getWithInt:0], [ComAowagieTextPdfPdfDictionary class]);
        ComAowagieTextPdfPdfName *type1 = (ComAowagieTextPdfPdfName *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(field)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FT)], [ComAowagieTextPdfPdfName class]);
        ComAowagieTextPdfPdfName *type2 = (ComAowagieTextPdfPdfName *) cast_chk([((ComAowagieTextPdfPdfDictionary *) nil_chk(merged)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FT)], [ComAowagieTextPdfPdfName class]);
        if (type1 == nil || ![type1 isEqual:type2]) {
          return;
        }
        jint flag1 = 0;
        ComAowagieTextPdfPdfObject *f1 = [field getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FF)];
        if (f1 != nil && [f1 isNumber]) {
          flag1 = [((ComAowagieTextPdfPdfNumber *) cast_chk(f1, [ComAowagieTextPdfPdfNumber class])) intValue];
        }
        jint flag2 = 0;
        ComAowagieTextPdfPdfObject *f2 = [merged getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, FF)];
        if (f2 != nil && [f2 isNumber]) {
          flag2 = [((ComAowagieTextPdfPdfNumber *) cast_chk(f2, [ComAowagieTextPdfPdfNumber class])) intValue];
        }
        if ([type1 isEqual:JreLoadStatic(ComAowagieTextPdfPdfName, BTN)]) {
          if (((flag1 ^ flag2) & ComAowagieTextPdfPdfFormField_FF_PUSHBUTTON) != 0) {
            return;
          }
          if ((flag1 & ComAowagieTextPdfPdfFormField_FF_PUSHBUTTON) == 0 && ((flag1 ^ flag2) & ComAowagieTextPdfPdfFormField_FF_RADIO) != 0) {
            return;
          }
        }
        else if ([type1 isEqual:JreLoadStatic(ComAowagieTextPdfPdfName, CH)]) {
          if (((flag1 ^ flag2) & ComAowagieTextPdfPdfFormField_FF_COMBO) != 0) {
            return;
          }
        }
        ComAowagieTextPdfPdfCopyFieldsImp_createWidgetsWithJavaUtilArrayList_withComAowagieTextPdfAcroFields_Item_(self, list, item);
      }
      return;
    }
  }
}


#line 598
ComAowagieTextPdfPdfIndirectReference *ComAowagieTextPdfPdfCopyFieldsImp_getNewReferenceWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref) {
  return new_ComAowagieTextPdfPdfIndirectReference_initWithInt_withInt_(0, [self getNewObjectNumberWithComAowagieTextPdfPdfReader:[((ComAowagieTextPdfPRIndirectReference *) nil_chk(ref)) getReader] withInt:[ref getNumber] withInt:0]);
}


#line 619
jboolean ComAowagieTextPdfPdfCopyFieldsImp_setVisitedWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref) {
  ComAowagieTextPdfIntHashtable *refs = (ComAowagieTextPdfIntHashtable *) cast_chk([((JavaUtilHashMap *) nil_chk(self->visited_)) getWithId:[((ComAowagieTextPdfPRIndirectReference *) nil_chk(ref)) getReader]], [ComAowagieTextPdfIntHashtable class]);
  if (refs != nil) {
    return [refs putWithInt:[ref getNumber] withInt:1] != 0;
  }
  else {
    
#line 624
    return false;
  }
}


#line 633
jboolean ComAowagieTextPdfPdfCopyFieldsImp_isVisitedWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref) {
  ComAowagieTextPdfIntHashtable *refs = (ComAowagieTextPdfIntHashtable *) cast_chk([((JavaUtilHashMap *) nil_chk(self->visited_)) getWithId:[((ComAowagieTextPdfPRIndirectReference *) nil_chk(ref)) getReader]], [ComAowagieTextPdfIntHashtable class]);
  if (refs != nil) {
    return [refs containsKeyWithInt:[ref getNumber]];
  }
  else {
    
#line 638
    return false;
  }
}


#line 649
jboolean ComAowagieTextPdfPdfCopyFieldsImp_isPageWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPdfCopyFieldsImp *self, ComAowagieTextPdfPRIndirectReference *ref) {
  ComAowagieTextPdfIntHashtable *refs = (ComAowagieTextPdfIntHashtable *) cast_chk([((JavaUtilHashMap *) nil_chk(self->pages2intrefs_)) getWithId:[((ComAowagieTextPdfPRIndirectReference *) nil_chk(ref)) getReader]], [ComAowagieTextPdfIntHashtable class]);
  if (refs != nil) {
    return [refs containsKeyWithInt:[ref getNumber]];
  }
  else {
    
#line 654
    return false;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfCopyFieldsImp)

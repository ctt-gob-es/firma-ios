//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/OutputStreamCounter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/pdf/OutputStreamCounter.h"
#include "java/io/OutputStream.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/OutputStreamCounter must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfOutputStreamCounter () {
 @public
  JavaIoOutputStream *out_;
  jint counter_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfOutputStreamCounter, out_, JavaIoOutputStream *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/OutputStreamCounter.java"


#line 55
@implementation ComAowagieTextPdfOutputStreamCounter


#line 62
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  ComAowagieTextPdfOutputStreamCounter_initWithJavaIoOutputStream_(self, outArg);
  return self;
}


#line 76
- (void)close {
  
#line 78
  [((JavaIoOutputStream *) nil_chk(self->out_)) close];
}


#line 93
- (void)flush {
  
#line 95
  [((JavaIoOutputStream *) nil_chk(self->out_)) flush];
}


#line 108
- (void)writeWithByteArray:(IOSByteArray *)b {
  
#line 110
  self->counter_ += ((IOSByteArray *) nil_chk(b))->size_;
  [((JavaIoOutputStream *) nil_chk(self->out_)) writeWithByteArray:b];
}


#line 129
- (void)writeWithInt:(jint)b {
  
#line 131
  ++self->counter_;
  [((JavaIoOutputStream *) nil_chk(self->out_)) writeWithInt:b];
}


#line 163
- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)off
                   withInt:(jint)len {
  
#line 165
  self->counter_ += len;
  [((JavaIoOutputStream *) nil_chk(self->out_)) writeWithByteArray:b withInt:off withInt:len];
}


#line 169
- (jint)getCounter {
  return self->counter_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 5, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:);
  methods[1].selector = @selector(close);
  methods[2].selector = @selector(flush);
  methods[3].selector = @selector(writeWithByteArray:);
  methods[4].selector = @selector(writeWithInt:);
  methods[5].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(getCounter);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "out_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "counter_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;", "LJavaIoIOException;", "write", "[B", "I", "[BII" };
  static const J2ObjcClassInfo _ComAowagieTextPdfOutputStreamCounter = { "OutputStreamCounter", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfOutputStreamCounter;
}

@end


#line 62
void ComAowagieTextPdfOutputStreamCounter_initWithJavaIoOutputStream_(ComAowagieTextPdfOutputStreamCounter *self, JavaIoOutputStream *outArg) {
  JavaIoOutputStream_init(self);
  self->counter_ =
#line 58
  0;
  
#line 63
  self->out_ = outArg;
}


#line 62
ComAowagieTextPdfOutputStreamCounter *new_ComAowagieTextPdfOutputStreamCounter_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfOutputStreamCounter, initWithJavaIoOutputStream_, outArg)
}


#line 62
ComAowagieTextPdfOutputStreamCounter *create_ComAowagieTextPdfOutputStreamCounter_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfOutputStreamCounter, initWithJavaIoOutputStream_, outArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfOutputStreamCounter)

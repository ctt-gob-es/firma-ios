//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/DefaultFontMapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfDefaultFontMapper")
#ifdef RESTRICT_ComAowagieTextPdfDefaultFontMapper
#define INCLUDE_ALL_ComAowagieTextPdfDefaultFontMapper 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfDefaultFontMapper 1
#endif
#undef RESTRICT_ComAowagieTextPdfDefaultFontMapper

#if !defined (ComAowagieTextPdfDefaultFontMapper_) && (INCLUDE_ALL_ComAowagieTextPdfDefaultFontMapper || defined(INCLUDE_ComAowagieTextPdfDefaultFontMapper))
#define ComAowagieTextPdfDefaultFontMapper_

#define RESTRICT_ComAowagieTextPdfFontMapper 1
#define INCLUDE_ComAowagieTextPdfFontMapper 1
#include "com/aowagie/text/pdf/FontMapper.h"

@class ComAowagieTextPdfBaseFont;
@class ComAowagieTextPdfDefaultFontMapper_BaseFontParameters;
@class HarmonyJavaAwtAWTFont;
@class JavaUtilHashMap;

/*!
 @brief Default class to map awt fonts to BaseFont.
 @author Paulo Soares (psoares@@consiste.pt)
 */
@interface ComAowagieTextPdfDefaultFontMapper : NSObject < ComAowagieTextPdfFontMapper >

#pragma mark Public

/*!
 @brief Returns a BaseFont which can be used to represent the given AWT Font
 @param font the font to be converted
 @return a BaseFont which has similar properties to the provided Font
 */
- (ComAowagieTextPdfBaseFont *)awtToPdfWithHarmonyJavaAwtAWTFont:(HarmonyJavaAwtAWTFont *)font;

- (JavaUtilHashMap *)getAliases;

- (JavaUtilHashMap *)getMapper;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

/*!
 @brief Looks for a BaseFont parameter associated with a name.
 @param name the name
 @return the BaseFont parameter or <CODE>null</CODE> if not found.
 */
- (ComAowagieTextPdfDefaultFontMapper_BaseFontParameters *)getBaseFontParametersWithNSString:(NSString *)name;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfDefaultFontMapper)

FOUNDATION_EXPORT void ComAowagieTextPdfDefaultFontMapper_initPackagePrivate(ComAowagieTextPdfDefaultFontMapper *self);

FOUNDATION_EXPORT ComAowagieTextPdfDefaultFontMapper *new_ComAowagieTextPdfDefaultFontMapper_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfDefaultFontMapper *create_ComAowagieTextPdfDefaultFontMapper_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfDefaultFontMapper)

#endif

#if !defined (ComAowagieTextPdfDefaultFontMapper_BaseFontParameters_) && (INCLUDE_ALL_ComAowagieTextPdfDefaultFontMapper || defined(INCLUDE_ComAowagieTextPdfDefaultFontMapper_BaseFontParameters))
#define ComAowagieTextPdfDefaultFontMapper_BaseFontParameters_

@class IOSByteArray;

/*!
 @brief A representation of BaseFont parameters.
 */
@interface ComAowagieTextPdfDefaultFontMapper_BaseFontParameters : NSObject {
 @public
  /*!
   @brief The font name.
   */
  NSString *fontName_;
  /*!
   @brief The encoding for that font.
   */
  NSString *encoding_;
  /*!
   @brief The embedding for that font.
   */
  jboolean embedded_;
  /*!
   @brief Whether the font is cached of not.
   */
  jboolean cached_;
  /*!
   @brief The font bytes for ttf and afm.
   */
  IOSByteArray *ttfAfm_;
  /*!
   @brief The font bytes for pfb.
   */
  IOSByteArray *pfb_;
}

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfDefaultFontMapper_BaseFontParameters)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfDefaultFontMapper_BaseFontParameters, fontName_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfDefaultFontMapper_BaseFontParameters, encoding_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfDefaultFontMapper_BaseFontParameters, ttfAfm_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfDefaultFontMapper_BaseFontParameters, pfb_, IOSByteArray *)

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfDefaultFontMapper_BaseFontParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfDefaultFontMapper")

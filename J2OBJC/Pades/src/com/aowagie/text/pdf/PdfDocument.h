//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfDocument.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfPdfDocument")
#ifdef RESTRICT_ComAowagieTextPdfPdfDocument
#define INCLUDE_ALL_ComAowagieTextPdfPdfDocument 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfPdfDocument 1
#endif
#undef RESTRICT_ComAowagieTextPdfPdfDocument

#if !defined (ComAowagieTextPdfPdfDocument_) && (INCLUDE_ALL_ComAowagieTextPdfPdfDocument || defined(INCLUDE_ComAowagieTextPdfPdfDocument))
#define ComAowagieTextPdfPdfDocument_

#define RESTRICT_ComAowagieTextDocument 1
#define INCLUDE_ComAowagieTextDocument 1
#include "com/aowagie/text/Document.h"

@class ComAowagieTextHeaderFooter;
@class ComAowagieTextImage;
@class ComAowagieTextPdfCollectionPdfCollection;
@class ComAowagieTextPdfPageResources;
@class ComAowagieTextPdfPdfAcroForm;
@class ComAowagieTextPdfPdfAction;
@class ComAowagieTextPdfPdfAnnotation;
@class ComAowagieTextPdfPdfContentByte;
@class ComAowagieTextPdfPdfDocument_PdfCatalog;
@class ComAowagieTextPdfPdfDocument_PdfInfo;
@class ComAowagieTextPdfPdfFileSpecification;
@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfLine;
@class ComAowagieTextPdfPdfName;
@class ComAowagieTextPdfPdfObject;
@class ComAowagieTextPdfPdfOutline;
@class ComAowagieTextPdfPdfPageLabels;
@class ComAowagieTextPdfPdfTransition;
@class ComAowagieTextPdfPdfWriter;
@class ComAowagieTextRectangle;
@class ComAowagieTextTable;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaUtilCalendar;
@class JavaUtilHashMap;

/*!
 @brief <CODE>PdfDocument</CODE> is the class that is used by <CODE>PdfWriter</CODE>
  to translate a <CODE>Document</CODE> into a PDF with different pages.
 <P>
  A <CODE>PdfDocument</CODE> always listens to a <CODE>Document</CODE>
  and adds the Pdf representation of every <CODE>Element</CODE> that is
  added to the <CODE>Document</CODE>.
 - seealso: com.aowagie.text.Document
 - seealso: com.aowagie.text.DocListener
 - seealso: PdfWriter
 @since 2.0.8 (class was package-private before)
 */
@interface ComAowagieTextPdfPdfDocument : ComAowagieTextDocument {
 @public
  ComAowagieTextPdfPdfPageLabels *pageLabels_;
}

#pragma mark Public

/*!
 @brief Closes the document.
 Once all the content has been written in the body, you have to close
  the body. After that nothing can be written to the body anymore.
 */
- (void)close;

/*!
 @brief Getter for the current leading.
 @return the current leading
 @since 2.1.2
 */
- (jfloat)getLeading;

/*!
 @brief Gets the root outline.All the outlines must be created with a parent.
 The first level is created with this outline.
 @return the root outline
 */
- (ComAowagieTextPdfPdfOutline *)getRootOutline;

/*!
 @brief Makes a new page and sends it to the <CODE>PdfWriter</CODE>.
 @return a <CODE>boolean</CODE>
 */
- (jboolean)newPage OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Opens the document.
 <P>
  You have to open the document before you can begin to add content
  to the body of the document.
 */
- (void)open;

/*!
 @brief Resets the footer of this document.
 */
- (void)resetFooter;

/*!
 @brief Resets the header of this document.
 */
- (void)resetHeader;

/*!
 @brief Sets the page number to 0.
 */
- (void)resetPageCount;

/*!
 @brief Sets the collection dictionary.
 @param collection a dictionary of type PdfCollection
 */
- (void)setCollectionWithComAowagieTextPdfCollectionPdfCollection:(ComAowagieTextPdfCollectionPdfCollection *)collection;

/*!
 @brief Changes the footer of this document.
 @param footer the new footer
 */
- (void)setFooterWithComAowagieTextHeaderFooter:(ComAowagieTextHeaderFooter *)footer;

/*!
 @brief Changes the header of this document.
 @param header the new header
 */
- (void)setHeaderWithComAowagieTextHeaderFooter:(ComAowagieTextHeaderFooter *)header;

/*!
 - seealso: com.aowagie.text.DocListener#setMarginMirroring(boolean)
 */
- (jboolean)setMarginMirroringWithBoolean:(jboolean)MarginMirroring;

/*!
 - seealso: com.aowagie.text.DocListener#setMarginMirroring(boolean)
 @since 2.1.6
 */
- (jboolean)setMarginMirroringTopBottomWithBoolean:(jboolean)MarginMirroringTopBottom;

/*!
 @brief Sets the margins.
 @param marginLeft the margin on the left
 @param marginRight the margin on the right
 @param marginTop the margin on the top
 @param marginBottom the margin on the bottom
 @return a <CODE>boolean</CODE>
 */
- (jboolean)setMarginsWithFloat:(jfloat)marginLeft
                      withFloat:(jfloat)marginRight
                      withFloat:(jfloat)marginTop
                      withFloat:(jfloat)marginBottom;

/*!
 @brief Sets the page number.
 @param pageN the new page number
 */
- (void)setPageCountWithInt:(jint)pageN;

/*!
 @brief Sets the pagesize.
 @param pageSize the new pagesize
 @return <CODE>true</CODE> if the page size was set
 */
- (jboolean)setPageSizeWithComAowagieTextRectangle:(ComAowagieTextRectangle *)pageSize;

/*!
 @brief Use this method to set the XMP Metadata.
 @param xmpMetadata The xmpMetadata to set.
 */
- (void)setXmpMetadataWithByteArray:(IOSByteArray *)xmpMetadata;

#pragma mark Package-Private

/*!
 @brief Constructs a new PDF document.
 @param globalDate Date
 */
- (instancetype)initPackagePrivateWithJavaUtilCalendar:(JavaUtilCalendar *)globalDate;

- (void)addAdditionalActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                         withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action;

- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot;

- (void)addFileAttachmentWithNSString:(NSString *)description_
withComAowagieTextPdfPdfFileSpecification:(ComAowagieTextPdfPdfFileSpecification *)fs;

- (void)addJavaScriptWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)js;

- (void)addJavaScriptWithNSString:(NSString *)name
   withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)js;

/*!
 @param key Key
 @param value Value
 - seealso: com.aowagie.text.pdf.interfaces.PdfViewerPreferences#addViewerPreference(com.aowagie.text.pdf.PdfName, com.aowagie.text.pdf.PdfObject)
 */
- (void)addViewerPreferenceWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)key
                         withComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *)value;

/*!
 @brief Adds a <CODE>PdfWriter</CODE> to the <CODE>PdfDocument</CODE>.
 @param writer the  <CODE> PdfWriter </CODE>  that writes everything
                       what is added to this document to an outputstream.
 @throw DocumentExceptionon error
 */
- (void)addWriterWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer;

/*!
 @brief Returns the bottomvalue of a <CODE>Table</CODE> if it were added to this document.
 @param table the table that may or may not be added to this document
 @return a bottom value
 */
- (jfloat)bottomWithComAowagieTextTable:(ComAowagieTextTable *)table;

/*!
 @brief Gets the AcroForm object.
 @return the PdfAcroform object of the PdfDocument
 */
- (ComAowagieTextPdfPdfAcroForm *)getAcroForm;

/*!
 @brief Gets the <CODE>PdfCatalog</CODE>-object.
 @param pages an indirect reference to this document pages
 @return <CODE>PdfCatalog</CODE>
 */
- (ComAowagieTextPdfPdfDocument_PdfCatalog *)getCatalogWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)pages;

- (JavaUtilHashMap *)getDocumentFileAttachment;

- (JavaUtilHashMap *)getDocumentLevelJS;

/*!
 @brief Gets the <CODE>PdfInfo</CODE>-object.
 @return <CODE>PdfInfo</CODE>
 */
- (ComAowagieTextPdfPdfDocument_PdfInfo *)getInfo;

- (ComAowagieTextPdfPageResources *)getPageResources;

/*!
 @brief Gets the indentation on the bottom side.
 @return a margin
 */
- (jfloat)indentBottom;

/*!
 @brief Getter for property strictImageSequence.
 @return Value of property strictImageSequence.
 */
- (jboolean)isStrictImageSequence;

/*!
 @brief Implements an action in an area.
 @param action the  <CODE> PdfAction </CODE>
 @param llx the lower left x corner of the activation area
 @param lly the lower left y corner of the activation area
 @param urx the upper right x corner of the activation area
 @param ury the upper right y corner of the activation area
 */
- (void)setActionWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action
                                      withFloat:(jfloat)llx
                                      withFloat:(jfloat)lly
                                      withFloat:(jfloat)urx
                                      withFloat:(jfloat)ury;

- (void)setCropBoxSizeWithComAowagieTextRectangle:(ComAowagieTextRectangle *)crop;

/*!
 @brief Sets the display duration for the page (for presentations)
 @param seconds the number of seconds to display the page
 */
- (void)setDurationWithInt:(jint)seconds;

/*!
 @brief Setter for the current leading.
 @param leading the current leading
 @since 2.1.6
 */
- (void)setLeadingWithFloat:(jfloat)leading;

- (void)setOpenActionWithComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action;

- (void)setOpenActionWithNSString:(NSString *)name;

- (void)setPageActionWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)actionType
                   withComAowagieTextPdfPdfAction:(ComAowagieTextPdfPdfAction *)action;

- (void)setPageEmptyWithBoolean:(jboolean)pageEmpty;

/*!
 @brief Sets the page labels
 @param pageLabels the page labels
 */
- (void)setPageLabelsWithComAowagieTextPdfPdfPageLabels:(ComAowagieTextPdfPdfPageLabels *)pageLabels;

- (void)setSigFlagsWithInt:(jint)f;

/*!
 @brief Setter for property strictImageSequence.
 @param strictImageSequence New value of property strictImageSequence.
 */
- (void)setStrictImageSequenceWithBoolean:(jboolean)strictImageSequence;

- (void)setThumbnailWithComAowagieTextImage:(ComAowagieTextImage *)image;

/*!
 @brief Sets the transition for the page
 @param transition the PdfTransition object
 */
- (void)setTransitionWithComAowagieTextPdfPdfTransition:(ComAowagieTextPdfPdfTransition *)transition;

/*!
 @param preferences Preferences
 - seealso: com.aowagie.text.pdf.interfaces.PdfViewerPreferences#setViewerPreferences(int)
 */
- (void)setViewerPreferencesWithInt:(jint)preferences;

/*!
 @brief Writes a text line to the document.It takes care of all the attributes.
 <P>
  Before entering the line position must have been established and the 
 <CODE>text</CODE> argument must be in text object scope (<CODE>beginText()</CODE>).
 @param line the line to be written
 @param text the  <CODE> PdfContentByte </CODE>  where the text will be written to
 @param graphics the  <CODE> PdfContentByte </CODE>  where the graphics will be written to
 @param currentValues the current font and extra spacing values
 @param ratio ratio
 @throw DocumentExceptionon error
 */
- (void)writeLineToContentWithComAowagieTextPdfPdfLine:(ComAowagieTextPdfPdfLine *)line
                   withComAowagieTextPdfPdfContentByte:(ComAowagieTextPdfPdfContentByte *)text
                   withComAowagieTextPdfPdfContentByte:(ComAowagieTextPdfPdfContentByte *)graphics
                                     withNSObjectArray:(IOSObjectArray *)currentValues
                                             withFloat:(jfloat)ratio;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithComAowagieTextRectangle:(ComAowagieTextRectangle *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithComAowagieTextRectangle:(ComAowagieTextRectangle *)arg0
                                      withFloat:(jfloat)arg1
                                      withFloat:(jfloat)arg2
                                      withFloat:(jfloat)arg3
                                      withFloat:(jfloat)arg4 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComAowagieTextPdfPdfDocument)

J2OBJC_FIELD_SETTER(ComAowagieTextPdfPdfDocument, pageLabels_, ComAowagieTextPdfPdfPageLabels *)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfDocument_initPackagePrivateWithJavaUtilCalendar_(ComAowagieTextPdfPdfDocument *self, JavaUtilCalendar *globalDate);

FOUNDATION_EXPORT ComAowagieTextPdfPdfDocument *new_ComAowagieTextPdfPdfDocument_initPackagePrivateWithJavaUtilCalendar_(JavaUtilCalendar *globalDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfDocument *create_ComAowagieTextPdfPdfDocument_initPackagePrivateWithJavaUtilCalendar_(JavaUtilCalendar *globalDate);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfDocument)

#endif

#if !defined (ComAowagieTextPdfPdfDocument_PdfInfo_) && (INCLUDE_ALL_ComAowagieTextPdfPdfDocument || defined(INCLUDE_ComAowagieTextPdfPdfDocument_PdfInfo))
#define ComAowagieTextPdfPdfDocument_PdfInfo_

#define RESTRICT_ComAowagieTextPdfPdfDictionary 1
#define INCLUDE_ComAowagieTextPdfPdfDictionary 1
#include "com/aowagie/text/pdf/PdfDictionary.h"

/*!
 @brief <CODE>PdfInfo</CODE> is the PDF InfoDictionary.
 <P>
  A document's trailer may contain a reference to an Info dictionary that provides information
  about the document. This optional dictionary may contain one or more keys, whose values
  should be strings.<BR>
  This object is described in the 'Portable Document Format Reference Manual version 1.3'
  section 6.10 (page 120-121)
 @since 2.0.8 (PdfDocument was package-private before)
 */
@interface ComAowagieTextPdfPdfDocument_PdfInfo : ComAowagieTextPdfPdfDictionary

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfDocument_PdfInfo)

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfDocument_PdfInfo)

#endif

#if !defined (ComAowagieTextPdfPdfDocument_PdfCatalog_) && (INCLUDE_ALL_ComAowagieTextPdfPdfDocument || defined(INCLUDE_ComAowagieTextPdfPdfDocument_PdfCatalog))
#define ComAowagieTextPdfPdfDocument_PdfCatalog_

#define RESTRICT_ComAowagieTextPdfPdfDictionary 1
#define INCLUDE_ComAowagieTextPdfPdfDictionary 1
#include "com/aowagie/text/pdf/PdfDictionary.h"

@class ComAowagieTextPdfPdfIndirectReference;
@class ComAowagieTextPdfPdfWriter;

/*!
 @brief <CODE>PdfCatalog</CODE> is the PDF Catalog-object.
 <P>
  The Catalog is a dictionary that is the root node of the document. It contains a reference
  to the tree of pages contained in the document, a reference to the tree of objects representing
  the document's outline, a reference to the document's article threads, and the list of named
  destinations. In addition, the Catalog indicates whether the document's outline or thumbnail
  page images should be displayed automatically when the document is viewed and whether some location
  other than the first page should be shown when the document is opened.<BR>
  In this class however, only the reference to the tree of pages is implemented.<BR>
  This object is described in the 'Portable Document Format Reference Manual version 1.3'
  section 6.2 (page 67-71)
 */
@interface ComAowagieTextPdfPdfDocument_PdfCatalog : ComAowagieTextPdfPdfDictionary

#pragma mark Package-Private

/*!
 @brief Constructs a <CODE>PdfCatalog</CODE>.
 @param pages an indirect reference to the root of the document's Pages tree.
 @param writer the writer the catalog applies to
 */
- (instancetype)initWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)pages
                               withComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfDocument_PdfCatalog)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfDocument_PdfCatalog_initWithComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfDocument_PdfCatalog *self, ComAowagieTextPdfPdfIndirectReference *pages, ComAowagieTextPdfPdfWriter *writer);

FOUNDATION_EXPORT ComAowagieTextPdfPdfDocument_PdfCatalog *new_ComAowagieTextPdfPdfDocument_PdfCatalog_initWithComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfIndirectReference *pages, ComAowagieTextPdfPdfWriter *writer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfDocument_PdfCatalog *create_ComAowagieTextPdfPdfDocument_PdfCatalog_initWithComAowagieTextPdfPdfIndirectReference_withComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfIndirectReference *pages, ComAowagieTextPdfPdfWriter *writer);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfDocument_PdfCatalog)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfPdfDocument")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/wmf/MetaFont.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/Document.h"
#include "com/aowagie/text/ExceptionConverter.h"
#include "com/aowagie/text/Font.h"
#include "com/aowagie/text/FontFactory.h"
#include "com/aowagie/text/pdf/BaseFont.h"
#include "com/aowagie/text/pdf/codec/wmf/InputMeta.h"
#include "com/aowagie/text/pdf/codec/wmf/MetaFont.h"
#include "com/aowagie/text/pdf/codec/wmf/MetaObject.h"
#include "com/aowagie/text/pdf/codec/wmf/MetaState.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Exception.h"
#include "java/lang/Math.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/codec/wmf/MetaFont must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCodecWmfMetaFont () {
 @public
  jint height_;
  jfloat angle_;
  jint bold_;
  jint italic_;
  jboolean underline_;
  jboolean strikeout_;
  jint charset_;
  jint pitchAndFamily_;
  NSString *faceName_;
  ComAowagieTextPdfBaseFont *font_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecWmfMetaFont, faceName_, NSString *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecWmfMetaFont, font_, ComAowagieTextPdfBaseFont *)

inline IOSObjectArray *ComAowagieTextPdfCodecWmfMetaFont_get_fontNames(void);
static IOSObjectArray *ComAowagieTextPdfCodecWmfMetaFont_fontNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecWmfMetaFont, fontNames, IOSObjectArray *)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_MARKER_BOLD(void);
#define ComAowagieTextPdfCodecWmfMetaFont_MARKER_BOLD 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, MARKER_BOLD, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_MARKER_ITALIC(void);
#define ComAowagieTextPdfCodecWmfMetaFont_MARKER_ITALIC 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, MARKER_ITALIC, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_MARKER_COURIER(void);
#define ComAowagieTextPdfCodecWmfMetaFont_MARKER_COURIER 0
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, MARKER_COURIER, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_MARKER_HELVETICA(void);
#define ComAowagieTextPdfCodecWmfMetaFont_MARKER_HELVETICA 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, MARKER_HELVETICA, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_MARKER_TIMES(void);
#define ComAowagieTextPdfCodecWmfMetaFont_MARKER_TIMES 8
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, MARKER_TIMES, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_MARKER_SYMBOL(void);
#define ComAowagieTextPdfCodecWmfMetaFont_MARKER_SYMBOL 12
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, MARKER_SYMBOL, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_FIXED_PITCH(void);
#define ComAowagieTextPdfCodecWmfMetaFont_FIXED_PITCH 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, FIXED_PITCH, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_FF_ROMAN(void);
#define ComAowagieTextPdfCodecWmfMetaFont_FF_ROMAN 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, FF_ROMAN, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_FF_SWISS(void);
#define ComAowagieTextPdfCodecWmfMetaFont_FF_SWISS 2
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, FF_SWISS, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_FF_MODERN(void);
#define ComAowagieTextPdfCodecWmfMetaFont_FF_MODERN 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, FF_MODERN, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_FF_SCRIPT(void);
#define ComAowagieTextPdfCodecWmfMetaFont_FF_SCRIPT 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, FF_SCRIPT, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_FF_DECORATIVE(void);
#define ComAowagieTextPdfCodecWmfMetaFont_FF_DECORATIVE 5
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, FF_DECORATIVE, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_BOLDTHRESHOLD(void);
#define ComAowagieTextPdfCodecWmfMetaFont_BOLDTHRESHOLD 600
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, BOLDTHRESHOLD, jint)

inline jint ComAowagieTextPdfCodecWmfMetaFont_get_nameSize(void);
#define ComAowagieTextPdfCodecWmfMetaFont_nameSize 32
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecWmfMetaFont, nameSize, jint)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/wmf/MetaFont.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfCodecWmfMetaFont)


#line 60
@implementation ComAowagieTextPdfCodecWmfMetaFont


#line 99
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfCodecWmfMetaFont_initPackagePrivate(self);
  return self;
}


#line 103
- (void)init__WithComAowagieTextPdfCodecWmfInputMeta:(ComAowagieTextPdfCodecWmfInputMeta *)inArg {
  self->height_ = JavaLangMath_absWithInt_([((ComAowagieTextPdfCodecWmfInputMeta *) nil_chk(inArg)) readShort]);
  [inArg skipWithInt:2];
  self->angle_ = (jfloat) ([inArg readShort] / 1800.0 * JavaLangMath_PI);
  [inArg skipWithInt:2];
  self->bold_ = [inArg readShort] >= ComAowagieTextPdfCodecWmfMetaFont_BOLDTHRESHOLD ? ComAowagieTextPdfCodecWmfMetaFont_MARKER_BOLD : 0;
  self->italic_ = [inArg readByte] != 0 ? ComAowagieTextPdfCodecWmfMetaFont_MARKER_ITALIC : 0;
  self->underline_ = ([inArg readByte] != 0);
  self->strikeout_ = ([inArg readByte] != 0);
  self->charset_ = [inArg readByte];
  [inArg skipWithInt:3];
  self->pitchAndFamily_ = [inArg readByte];
  IOSByteArray *name = [IOSByteArray newArrayWithLength:ComAowagieTextPdfCodecWmfMetaFont_nameSize];
  jint k;
  for (k = 0; k < ComAowagieTextPdfCodecWmfMetaFont_nameSize; ++k) {
    jint c = [inArg readByte];
    if (c == 0) {
      break;
    }
    *IOSByteArray_GetRef(name, k) = (jbyte) c;
  }
  @try {
    self->faceName_ = [NSString java_stringWithBytes:name offset:0 length:k charsetName:@"Cp1252"];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    self->faceName_ = [NSString java_stringWithBytes:name offset:0 length:k];
  }
  self->faceName_ = [((NSString *) nil_chk(self->faceName_)) lowercaseString];
}

- (ComAowagieTextPdfBaseFont *)getFont {
  if (self->font_ != nil) {
    return self->font_;
  }
  ComAowagieTextFont *ff2 = ComAowagieTextFontFactory_getFontWithNSString_withNSString_withBoolean_withFloat_withInt_(self->faceName_, ComAowagieTextPdfBaseFont_CP1252, true, 10, (self->italic_ != 0 ? ComAowagieTextFont_ITALIC : 0) | (self->bold_ != 0 ? ComAowagieTextFont_BOLD : 0));
  self->font_ = [((ComAowagieTextFont *) nil_chk(ff2)) getBaseFont];
  if (self->font_ != nil) {
    return self->font_;
  }
  NSString *fontName;
  if ([((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"courier"] != -1 || [((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"terminal"] != -1 ||
#line 144
  [((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"fixedsys"] != -1) {
    fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_COURIER + self->italic_ + self->bold_);
  }
  else if ([((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"ms sans serif"] != -1 || [((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"arial"] != -1 ||
#line 148
  [((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"system"] != -1) {
    fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_HELVETICA + self->italic_ + self->bold_);
  }
  else if ([((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"arial black"] != -1) {
    fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_HELVETICA + self->italic_ + ComAowagieTextPdfCodecWmfMetaFont_MARKER_BOLD);
  }
  else if ([((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"times"] != -1 || [((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"ms serif"] != -1 ||
#line 155
  [((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"roman"] != -1) {
    fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_TIMES + self->italic_ + self->bold_);
  }
  else if ([((NSString *) nil_chk(self->faceName_)) java_indexOfString:@"symbol"] != -1) {
    fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_SYMBOL);
  }
  else {
    jint pitch = self->pitchAndFamily_ & 3;
    jint family = (JreRShift32(self->pitchAndFamily_, 4)) & 7;
    switch (family) {
      case ComAowagieTextPdfCodecWmfMetaFont_FF_MODERN:
      fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_COURIER + self->italic_ + self->bold_);
      break;
      case ComAowagieTextPdfCodecWmfMetaFont_FF_ROMAN:
      fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_TIMES + self->italic_ + self->bold_);
      break;
      case ComAowagieTextPdfCodecWmfMetaFont_FF_SWISS:
      case ComAowagieTextPdfCodecWmfMetaFont_FF_SCRIPT:
      case ComAowagieTextPdfCodecWmfMetaFont_FF_DECORATIVE:
      fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_HELVETICA + self->italic_ + self->bold_);
      break;
      default:
      {
        switch (pitch) {
          case ComAowagieTextPdfCodecWmfMetaFont_FIXED_PITCH:
          fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_COURIER + self->italic_ + self->bold_);
          break;
          default:
          fontName = IOSObjectArray_Get(nil_chk(ComAowagieTextPdfCodecWmfMetaFont_fontNames), ComAowagieTextPdfCodecWmfMetaFont_MARKER_HELVETICA + self->italic_ + self->bold_);
          break;
        }
      }
    }
  }
  @try {
    self->font_ = ComAowagieTextPdfBaseFont_createFontWithNSString_withNSString_withBoolean_(fontName, @"Cp1252", false);
  }
  @catch (JavaLangException *e) {
    @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
  }
  
#line 196
  return self->font_;
}


#line 199
- (jfloat)getAngle {
  return self->angle_;
}

- (jboolean)isUnderline {
  return self->underline_;
}

- (jboolean)isStrikeout {
  return self->strikeout_;
}

- (jfloat)getFontSizeWithComAowagieTextPdfCodecWmfMetaState:(ComAowagieTextPdfCodecWmfMetaState *)state {
  return JavaLangMath_absWithFloat_([((ComAowagieTextPdfCodecWmfMetaState *) nil_chk(state)) transformYWithInt:self->height_] - [state transformYWithInt:0]) * JreLoadStatic(ComAowagieTextDocument, wmfFontCorrection);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfBaseFont;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(init__WithComAowagieTextPdfCodecWmfInputMeta:);
  methods[2].selector = @selector(getFont);
  methods[3].selector = @selector(getAngle);
  methods[4].selector = @selector(isUnderline);
  methods[5].selector = @selector(isStrikeout);
  methods[6].selector = @selector(getFontSizeWithComAowagieTextPdfCodecWmfMetaState:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fontNames", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "MARKER_BOLD", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_MARKER_BOLD, 0x1a, -1, -1, -1, -1 },
    { "MARKER_ITALIC", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_MARKER_ITALIC, 0x1a, -1, -1, -1, -1 },
    { "MARKER_COURIER", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_MARKER_COURIER, 0x1a, -1, -1, -1, -1 },
    { "MARKER_HELVETICA", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_MARKER_HELVETICA, 0x1a, -1, -1, -1, -1 },
    { "MARKER_TIMES", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_MARKER_TIMES, 0x1a, -1, -1, -1, -1 },
    { "MARKER_SYMBOL", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_MARKER_SYMBOL, 0x1a, -1, -1, -1, -1 },
    { "FIXED_PITCH", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_FIXED_PITCH, 0x1a, -1, -1, -1, -1 },
    { "FF_ROMAN", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_FF_ROMAN, 0x1a, -1, -1, -1, -1 },
    { "FF_SWISS", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_FF_SWISS, 0x1a, -1, -1, -1, -1 },
    { "FF_MODERN", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_FF_MODERN, 0x1a, -1, -1, -1, -1 },
    { "FF_SCRIPT", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_FF_SCRIPT, 0x1a, -1, -1, -1, -1 },
    { "FF_DECORATIVE", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_FF_DECORATIVE, 0x1a, -1, -1, -1, -1 },
    { "BOLDTHRESHOLD", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_BOLDTHRESHOLD, 0x1a, -1, -1, -1, -1 },
    { "nameSize", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_nameSize, 0x1a, -1, -1, -1, -1 },
    { "ETO_OPAQUE", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_ETO_OPAQUE, 0x18, -1, -1, -1, -1 },
    { "ETO_CLIPPED", "I", .constantValue.asInt = ComAowagieTextPdfCodecWmfMetaFont_ETO_CLIPPED, 0x18, -1, -1, -1, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "angle_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bold_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "italic_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "underline_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "strikeout_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "charset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pitchAndFamily_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "faceName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "font_", "LComAowagieTextPdfBaseFont;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LComAowagieTextPdfCodecWmfInputMeta;", "LJavaIoIOException;", "getFontSize", "LComAowagieTextPdfCodecWmfMetaState;", &ComAowagieTextPdfCodecWmfMetaFont_fontNames };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecWmfMetaFont = { "MetaFont", "com.aowagie.text.pdf.codec.wmf", ptrTable, methods, fields, 7, 0x0, 7, 27, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecWmfMetaFont;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfCodecWmfMetaFont class]) {
    ComAowagieTextPdfCodecWmfMetaFont_fontNames = [IOSObjectArray newArrayWithObjects:(id[]){
#line 62
      @"Courier", @"Courier-Bold", @"Courier-Oblique", @"Courier-BoldOblique",
#line 63
      @"Helvetica", @"Helvetica-Bold", @"Helvetica-Oblique", @"Helvetica-BoldOblique",
#line 64
      @"Times-Roman", @"Times-Bold", @"Times-Italic", @"Times-BoldItalic",
#line 65
      @"Symbol", @"ZapfDingbats" } count:14 type:NSString_class_()];
      J2OBJC_SET_INITIALIZED(ComAowagieTextPdfCodecWmfMetaFont)
    }
  }

@end


#line 99
void ComAowagieTextPdfCodecWmfMetaFont_initPackagePrivate(ComAowagieTextPdfCodecWmfMetaFont *self) {
  ComAowagieTextPdfCodecWmfMetaObject_initPackagePrivate(self);
  self->faceName_ =
#line 96
  @"arial";
  self->font_ = nil;
  
#line 100
  self->type_ = ComAowagieTextPdfCodecWmfMetaObject_META_FONT;
}


#line 99
ComAowagieTextPdfCodecWmfMetaFont *new_ComAowagieTextPdfCodecWmfMetaFont_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecWmfMetaFont, initPackagePrivate)
}


#line 99
ComAowagieTextPdfCodecWmfMetaFont *create_ComAowagieTextPdfCodecWmfMetaFont_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecWmfMetaFont, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecWmfMetaFont)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/TIFFDirectory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/pdf/RandomAccessFileOrArray.h"
#include "com/aowagie/text/pdf/codec/TIFFDirectory.h"
#include "com/aowagie/text/pdf/codec/TIFFField.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/ArrayList.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/codec/TIFFDirectory must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfCodecTIFFDirectory () {
 @public
  /*!
   @brief A boolean storing the endianness of the stream.
   */
  jboolean isBigEndian_;
  /*!
   @brief The number of entries in the IFD.
   */
  jint numEntries_;
  /*!
   @brief An array of TIFFFields.
   */
  IOSObjectArray *fields_;
  /*!
   @brief A Hashtable indexing the fields by tag number.
   */
  JavaUtilHashtable *fieldIndex_;
  /*!
   @brief The offset of this IFD.
   */
  jlong IFDOffset_;
  /*!
   @brief The offset of the next IFD.
   */
  jlong nextIFDOffset_;
}

+ (jboolean)isValidEndianTagWithInt:(jint)endian;

- (void)initialize__WithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Returns the value of a particular index of a given tag as a
  byte.The caller is responsible for ensuring that the tag is
  present and has type TIFFField.TIFF_SBYTE, TIFF_BYTE, or
  TIFF_UNDEFINED.
 @param tag Tag
 @param index Index
 @return Field
 */
- (jbyte)getFieldAsByteWithInt:(jint)tag
                       withInt:(jint)index;

/*!
 @brief Returns the value of a particular index of a given tag as a
  long.The caller is responsible for ensuring that the tag is
  present and has type TIFF_BYTE, TIFF_SBYTE, TIFF_UNDEFINED,
  TIFF_SHORT, TIFF_SSHORT, TIFF_SLONG or TIFF_LONG.
 @param tag Tag
 @param index Index
 @return Field
 */
- (jlong)getFieldAsLongWithInt:(jint)tag
                       withInt:(jint)index;

/*!
 @brief Returns the value of a particular index of a given tag as a
  float.The caller is responsible for ensuring that the tag is
  present and has numeric type (all but TIFF_UNDEFINED and
  TIFF_ASCII).
 @param tag Tag
 @param index Index
 @return Field
 */
- (jfloat)getFieldAsFloatWithInt:(jint)tag
                         withInt:(jint)index;

/*!
 @brief Returns the value of a particular index of a given tag as a
  double.The caller is responsible for ensuring that the tag is
  present and has numeric type (all but TIFF_UNDEFINED and
  TIFF_ASCII).
 @param tag Tag
 @param index Index
 @return Field
 */
- (jdouble)getFieldAsDoubleWithInt:(jint)tag
                           withInt:(jint)index;

- (jshort)readShortWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream;

- (jint)readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream;

- (jint)readIntWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream;

- (jlong)readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream;

- (jlong)readLongWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream;

- (jfloat)readFloatWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream;

- (jdouble)readDoubleWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream;

+ (jint)readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream
                                                          withBoolean:(jboolean)isBigEndian;

+ (jlong)readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream
                                                         withBoolean:(jboolean)isBigEndian;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecTIFFDirectory, fields_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfCodecTIFFDirectory, fieldIndex_, JavaUtilHashtable *)

inline jlong ComAowagieTextPdfCodecTIFFDirectory_get_serialVersionUID(void);
#define ComAowagieTextPdfCodecTIFFDirectory_serialVersionUID -168636766193675380LL
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfCodecTIFFDirectory, serialVersionUID, jlong)

inline IOSIntArray *ComAowagieTextPdfCodecTIFFDirectory_get_sizeOfType(void);
static IOSIntArray *ComAowagieTextPdfCodecTIFFDirectory_sizeOfType;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComAowagieTextPdfCodecTIFFDirectory, sizeOfType, IOSIntArray *)

__attribute__((unused)) static jboolean ComAowagieTextPdfCodecTIFFDirectory_isValidEndianTagWithInt_(jint endian);

__attribute__((unused)) static void ComAowagieTextPdfCodecTIFFDirectory_initialize__WithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jbyte ComAowagieTextPdfCodecTIFFDirectory_getFieldAsByteWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index);

__attribute__((unused)) static jlong ComAowagieTextPdfCodecTIFFDirectory_getFieldAsLongWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index);

__attribute__((unused)) static jfloat ComAowagieTextPdfCodecTIFFDirectory_getFieldAsFloatWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index);

__attribute__((unused)) static jdouble ComAowagieTextPdfCodecTIFFDirectory_getFieldAsDoubleWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index);

__attribute__((unused)) static jshort ComAowagieTextPdfCodecTIFFDirectory_readShortWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jint ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jint ComAowagieTextPdfCodecTIFFDirectory_readIntWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jlong ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jlong ComAowagieTextPdfCodecTIFFDirectory_readLongWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jfloat ComAowagieTextPdfCodecTIFFDirectory_readFloatWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jdouble ComAowagieTextPdfCodecTIFFDirectory_readDoubleWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream);

__attribute__((unused)) static jint ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_withBoolean_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jboolean isBigEndian);

__attribute__((unused)) static jlong ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_withBoolean_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jboolean isBigEndian);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/codec/TIFFDirectory.java"

J2OBJC_INITIALIZED_DEFN(ComAowagieTextPdfCodecTIFFDirectory)


#line 76
@implementation ComAowagieTextPdfCodecTIFFDirectory


#line 99
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivate(self);
  return self;
}


#line 101
+ (jboolean)isValidEndianTagWithInt:(jint)endian {
  return ComAowagieTextPdfCodecTIFFDirectory_isValidEndianTagWithInt_(endian);
}


#line 116
- (instancetype)initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream
                                                                       withInt:(jint)directory {
  ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(self, stream, directory);
  return self;
}


#line 176
- (void)initialize__WithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  ComAowagieTextPdfCodecTIFFDirectory_initialize__WithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 346
- (jint)getNumEntries {
  return self->numEntries_;
}


#line 356
- (ComAowagieTextPdfCodecTIFFField *)getFieldWithInt:(jint)tag {
  JavaLangInteger *i = (JavaLangInteger *) cast_chk([((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) getWithId:new_JavaLangInteger_initWithInt_(tag)], [JavaLangInteger class]);
  if (i == nil) {
    return nil;
  }
  else {
    
#line 361
    return IOSObjectArray_Get(nil_chk(self->fields_), [i intValue]);
  }
}


#line 370
- (jboolean)isTagPresentWithInt:(jint)tag {
  return [((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) containsKeyWithId:new_JavaLangInteger_initWithInt_(tag)];
}


#line 379
- (IOSIntArray *)getTags {
  IOSIntArray *tags = [IOSIntArray newArrayWithLength:[((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) size]];
  id<JavaUtilEnumeration> e = [self->fieldIndex_ keys];
  jint i = 0;
  
#line 384
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    *IOSIntArray_GetRef(tags, i++) = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([e nextElement], [JavaLangInteger class])))) intValue];
  }
  
#line 388
  return tags;
}


#line 396
- (IOSObjectArray *)getFields {
  return self->fields_;
}


#line 409
- (jbyte)getFieldAsByteWithInt:(jint)tag
                       withInt:(jint)index {
  return ComAowagieTextPdfCodecTIFFDirectory_getFieldAsByteWithInt_withInt_(self, tag, index);
}


#line 427
- (jlong)getFieldAsLongWithInt:(jint)tag
                       withInt:(jint)index {
  return ComAowagieTextPdfCodecTIFFDirectory_getFieldAsLongWithInt_withInt_(self, tag, index);
}


#line 440
- (jlong)getFieldAsLongWithInt:(jint)tag {
  return ComAowagieTextPdfCodecTIFFDirectory_getFieldAsLongWithInt_withInt_(self, tag, 0);
}


#line 453
- (jfloat)getFieldAsFloatWithInt:(jint)tag
                         withInt:(jint)index {
  return ComAowagieTextPdfCodecTIFFDirectory_getFieldAsFloatWithInt_withInt_(self, tag, index);
}


#line 469
- (jdouble)getFieldAsDoubleWithInt:(jint)tag
                           withInt:(jint)index {
  return ComAowagieTextPdfCodecTIFFDirectory_getFieldAsDoubleWithInt_withInt_(self, tag, index);
}


#line 478
- (jshort)readShortWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  return ComAowagieTextPdfCodecTIFFDirectory_readShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 487
- (jint)readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  return ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 496
- (jint)readIntWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  return ComAowagieTextPdfCodecTIFFDirectory_readIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 505
- (jlong)readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  return ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 514
- (jlong)readLongWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  return ComAowagieTextPdfCodecTIFFDirectory_readLongWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 523
- (jfloat)readFloatWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  return ComAowagieTextPdfCodecTIFFDirectory_readFloatWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 532
- (jdouble)readDoubleWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream {
  return ComAowagieTextPdfCodecTIFFDirectory_readDoubleWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
}


#line 541
+ (jint)readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream
                                                          withBoolean:(jboolean)isBigEndian {
  return ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_withBoolean_(stream, isBigEndian);
}


#line 551
+ (jlong)readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray:(ComAowagieTextPdfRandomAccessFileOrArray *)stream
                                                         withBoolean:(jboolean)isBigEndian {
  return ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_withBoolean_(stream, isBigEndian);
}


#line 571
- (jboolean)isBigEndian {
  return self->isBigEndian_;
}


#line 580
- (jlong)getIFDOffset {
  return self->IFDOffset_;
}


#line 589
- (jlong)getNextIFDOffset {
  return self->nextIFDOffset_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfCodecTIFFField;", 0x0, 6, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 7, 1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LComAowagieTextPdfCodecTIFFField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 10, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x0, 10, 1, -1, -1, -1, -1 },
    { NULL, "F", 0x2, 11, 9, -1, -1, -1, -1 },
    { NULL, "D", 0x2, 12, 9, -1, -1, -1, -1 },
    { NULL, "S", 0x2, 13, 5, 3, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 5, 3, -1, -1, -1 },
    { NULL, "I", 0x2, 15, 5, 3, -1, -1, -1 },
    { NULL, "J", 0x2, 16, 5, 3, -1, -1, -1 },
    { NULL, "J", 0x2, 17, 5, 3, -1, -1, -1 },
    { NULL, "F", 0x2, 18, 5, 3, -1, -1, -1 },
    { NULL, "D", 0x2, 19, 5, 3, -1, -1, -1 },
    { NULL, "I", 0xa, 14, 20, 3, -1, -1, -1 },
    { NULL, "J", 0xa, 16, 20, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(isValidEndianTagWithInt:);
  methods[2].selector = @selector(initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray:withInt:);
  methods[3].selector = @selector(initialize__WithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[4].selector = @selector(getNumEntries);
  methods[5].selector = @selector(getFieldWithInt:);
  methods[6].selector = @selector(isTagPresentWithInt:);
  methods[7].selector = @selector(getTags);
  methods[8].selector = @selector(getFields);
  methods[9].selector = @selector(getFieldAsByteWithInt:withInt:);
  methods[10].selector = @selector(getFieldAsLongWithInt:withInt:);
  methods[11].selector = @selector(getFieldAsLongWithInt:);
  methods[12].selector = @selector(getFieldAsFloatWithInt:withInt:);
  methods[13].selector = @selector(getFieldAsDoubleWithInt:withInt:);
  methods[14].selector = @selector(readShortWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[15].selector = @selector(readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[16].selector = @selector(readIntWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[17].selector = @selector(readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[18].selector = @selector(readLongWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[19].selector = @selector(readFloatWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[20].selector = @selector(readDoubleWithComAowagieTextPdfRandomAccessFileOrArray:);
  methods[21].selector = @selector(readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray:withBoolean:);
  methods[22].selector = @selector(readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray:withBoolean:);
  methods[23].selector = @selector(isBigEndian);
  methods[24].selector = @selector(getIFDOffset);
  methods[25].selector = @selector(getNextIFDOffset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComAowagieTextPdfCodecTIFFDirectory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "isBigEndian_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numEntries_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fields_", "[LComAowagieTextPdfCodecTIFFField;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldIndex_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "IFDOffset_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextIFDOffset_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sizeOfType", "[I", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
  };
  static const void *ptrTable[] = { "isValidEndianTag", "I", "LComAowagieTextPdfRandomAccessFileOrArray;I", "LJavaIoIOException;", "initialize", "LComAowagieTextPdfRandomAccessFileOrArray;", "getField", "isTagPresent", "getFieldAsByte", "II", "getFieldAsLong", "getFieldAsFloat", "getFieldAsDouble", "readShort", "readUnsignedShort", "readInt", "readUnsignedInt", "readLong", "readFloat", "readDouble", "LComAowagieTextPdfRandomAccessFileOrArray;Z", &ComAowagieTextPdfCodecTIFFDirectory_sizeOfType };
  static const J2ObjcClassInfo _ComAowagieTextPdfCodecTIFFDirectory = { "TIFFDirectory", "com.aowagie.text.pdf.codec", ptrTable, methods, fields, 7, 0x0, 26, 8, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfCodecTIFFDirectory;
}

+ (void)initialize {
  if (self == [ComAowagieTextPdfCodecTIFFDirectory class]) {
    ComAowagieTextPdfCodecTIFFDirectory_sizeOfType = [IOSIntArray newArrayWithInts:(jint[]){
#line 161
      0,
#line 162
      1,
#line 163
      1,
#line 164
      2,
#line 165
      4,
#line 166
      8,
#line 167
      1,
#line 168
      1,
#line 169
      2,
#line 170
      4,
#line 171
      8,
#line 172
      4,
#line 173
      8 } count:13];
      J2OBJC_SET_INITIALIZED(ComAowagieTextPdfCodecTIFFDirectory)
    }
  }

@end


#line 99
void ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivate(ComAowagieTextPdfCodecTIFFDirectory *self) {
  NSObject_init(self);
  self->fieldIndex_ = new_JavaUtilHashtable_init();
  self->IFDOffset_ =
#line 93
  8;
  self->nextIFDOffset_ =
#line 96
  0;
}


#line 99
ComAowagieTextPdfCodecTIFFDirectory *new_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecTIFFDirectory, initPackagePrivate)
}


#line 99
ComAowagieTextPdfCodecTIFFDirectory *create_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecTIFFDirectory, initPackagePrivate)
}


#line 101
jboolean ComAowagieTextPdfCodecTIFFDirectory_isValidEndianTagWithInt_(jint endian) {
  ComAowagieTextPdfCodecTIFFDirectory_initialize();
  
#line 102
  return endian == (jint) 0x4949 || endian == (jint) 0x4d4d;
}


#line 116
void ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream, jint directory) {
  NSObject_init(self);
  self->fieldIndex_ = new_JavaUtilHashtable_init();
  self->IFDOffset_ =
#line 93
  8;
  self->nextIFDOffset_ =
#line 96
  0;
  
#line 119
  jlong global_save_offset = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) getFilePointer];
  jlong ifd_offset;
  
#line 123
  [stream seekWithLong:0LL];
  jint endian = [stream readUnsignedShort];
  if (!ComAowagieTextPdfCodecTIFFDirectory_isValidEndianTagWithInt_(endian)) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 127
    @"Bad endianness tag (not 0x4949 or 0x4d4d).");
  }
  self->isBigEndian_ = (endian == (jint) 0x4d4d);
  
#line 131
  jint magic = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
  if (magic != 42) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 134
    @"Bad magic number, should be 42.");
  }
  
#line 138
  ifd_offset = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
  
#line 140
  for (jint i = 0; i < directory; i++) {
    if (ifd_offset == 0LL) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 143
      @"Directory number too large.");
    }
    
#line 146
    [stream seekWithLong:ifd_offset];
    jint entries = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
    [stream skipWithLong:12 * entries];
    
#line 150
    ifd_offset = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
  }
  
#line 153
  [stream seekWithLong:ifd_offset];
  ComAowagieTextPdfCodecTIFFDirectory_initialize__WithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
  [stream seekWithLong:global_save_offset];
}


#line 116
ComAowagieTextPdfCodecTIFFDirectory *new_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jint directory) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfCodecTIFFDirectory, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_, stream, directory)
}


#line 116
ComAowagieTextPdfCodecTIFFDirectory *create_ComAowagieTextPdfCodecTIFFDirectory_initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jint directory) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfCodecTIFFDirectory, initPackagePrivateWithComAowagieTextPdfRandomAccessFileOrArray_withInt_, stream, directory)
}


#line 176
void ComAowagieTextPdfCodecTIFFDirectory_initialize__WithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  jlong nextTagOffset = 0LL;
  jlong maxOffset = [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) length];
  jint i;
  
#line 179
  jint j;
  
#line 181
  self->IFDOffset_ = [stream getFilePointer];
  
#line 183
  self->numEntries_ = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
  self->fields_ = [IOSObjectArray newArrayWithLength:self->numEntries_ type:ComAowagieTextPdfCodecTIFFField_class_()];
  
#line 186
  for (i = 0; i < self->numEntries_ && nextTagOffset < maxOffset; i++) {
    jint tag = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
    jint type = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
    jint count = (jint) ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
    jboolean processTag = true;
    
#line 193
    nextTagOffset = [stream getFilePointer] + 4;
    
#line 195
    @try {
      
#line 198
      if (count * IOSIntArray_Get(nil_chk(ComAowagieTextPdfCodecTIFFDirectory_sizeOfType), type) > 4) {
        jlong valueOffset = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
        
#line 202
        if (valueOffset < maxOffset) {
          [stream seekWithLong:valueOffset];
        }
        else {
          
#line 207
          processTag = false;
        }
      }
    }
    @catch (
#line 210
    JavaLangArrayIndexOutOfBoundsException *ae) {
      
#line 212
      processTag = false;
    }
    
#line 215
    if (processTag) {
      (void) [((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) putWithId:new_JavaLangInteger_initWithInt_(tag) withId:new_JavaLangInteger_initWithInt_(i)];
      id obj = nil;
      {
        
#line 224
        IOSByteArray *bvalues;
        
#line 259
        IOSCharArray *cvalues;
        
#line 267
        IOSLongArray *lvalues;
        
#line 275
        IOSObjectArray *llvalues;
        
#line 284
        IOSShortArray *svalues;
        
#line 292
        IOSIntArray *ivalues;
        
#line 300
        IOSObjectArray *iivalues;
        
#line 309
        IOSFloatArray *fvalues;
        
#line 317
        IOSDoubleArray *dvalues;
        
#line 219
        switch (type) {
          case ComAowagieTextPdfCodecTIFFField_TIFF_BYTE:
          case ComAowagieTextPdfCodecTIFFField_TIFF_SBYTE:
          case ComAowagieTextPdfCodecTIFFField_TIFF_UNDEFINED:
          case ComAowagieTextPdfCodecTIFFField_TIFF_ASCII:
          bvalues = [IOSByteArray newArrayWithLength:count];
          [stream readFullyWithByteArray:bvalues withInt:0 withInt:count];
          
#line 227
          if (type == ComAowagieTextPdfCodecTIFFField_TIFF_ASCII) {
            
#line 230
            jint index = 0;
            
#line 230
            jint prevIndex = 0;
            JavaUtilArrayList *v = new_JavaUtilArrayList_init();
            
#line 233
            while (index < count) {
              
#line 235
              while (index < count && IOSByteArray_Get(bvalues, index++) != 0) {
              }
              
#line 240
              [v addWithId:[NSString java_stringWithBytes:bvalues offset:prevIndex length:
#line 241
              index - prevIndex]];
              prevIndex = index;
            }
            
#line 245
            count = [v size];
            IOSObjectArray *strings = [IOSObjectArray newArrayWithLength:count type:NSString_class_()];
            for (jint c = 0; c < count; c++) {
              (void) IOSObjectArray_Set(strings, c, (NSString *) cast_chk([v getWithInt:c], [NSString class]));
            }
            
#line 251
            obj = strings;
          }
          else {
            
#line 253
            obj = bvalues;
          }
          
#line 256
          break;
          
#line 258
          case ComAowagieTextPdfCodecTIFFField_TIFF_SHORT:
          cvalues = [IOSCharArray newArrayWithLength:count];
          for (j = 0; j < count; j++) {
            *IOSCharArray_GetRef(cvalues, j) = (jchar) ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = cvalues;
          break;
          
#line 266
          case ComAowagieTextPdfCodecTIFFField_TIFF_LONG:
          lvalues = [IOSLongArray newArrayWithLength:count];
          for (j = 0; j < count; j++) {
            *IOSLongArray_GetRef(lvalues, j) = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = lvalues;
          break;
          
#line 274
          case ComAowagieTextPdfCodecTIFFField_TIFF_RATIONAL:
          llvalues = [IOSLongArray newArrayWithDimensions:2 lengths:(jint[]){ count, 2 }];
          for (j = 0; j < count; j++) {
            *IOSLongArray_GetRef(nil_chk(IOSObjectArray_Get(llvalues, j)), 0) = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
            *IOSLongArray_GetRef(nil_chk(IOSObjectArray_Get(llvalues, j)), 1) = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = llvalues;
          break;
          
#line 283
          case ComAowagieTextPdfCodecTIFFField_TIFF_SSHORT:
          svalues = [IOSShortArray newArrayWithLength:count];
          for (j = 0; j < count; j++) {
            *IOSShortArray_GetRef(svalues, j) = ComAowagieTextPdfCodecTIFFDirectory_readShortWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = svalues;
          break;
          
#line 291
          case ComAowagieTextPdfCodecTIFFField_TIFF_SLONG:
          ivalues = [IOSIntArray newArrayWithLength:count];
          for (j = 0; j < count; j++) {
            *IOSIntArray_GetRef(ivalues, j) = ComAowagieTextPdfCodecTIFFDirectory_readIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = ivalues;
          break;
          
#line 299
          case ComAowagieTextPdfCodecTIFFField_TIFF_SRATIONAL:
          iivalues = [IOSIntArray newArrayWithDimensions:2 lengths:(jint[]){ count, 2 }];
          for (j = 0; j < count; j++) {
            *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(iivalues, j)), 0) = ComAowagieTextPdfCodecTIFFDirectory_readIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
            *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(iivalues, j)), 1) = ComAowagieTextPdfCodecTIFFDirectory_readIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = iivalues;
          break;
          
#line 308
          case ComAowagieTextPdfCodecTIFFField_TIFF_FLOAT:
          fvalues = [IOSFloatArray newArrayWithLength:count];
          for (j = 0; j < count; j++) {
            *IOSFloatArray_GetRef(fvalues, j) = ComAowagieTextPdfCodecTIFFDirectory_readFloatWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = fvalues;
          break;
          
#line 316
          case ComAowagieTextPdfCodecTIFFField_TIFF_DOUBLE:
          dvalues = [IOSDoubleArray newArrayWithLength:count];
          for (j = 0; j < count; j++) {
            *IOSDoubleArray_GetRef(dvalues, j) = ComAowagieTextPdfCodecTIFFDirectory_readDoubleWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
          }
          obj = dvalues;
          break;
          
#line 324
          default:
          break;
        }
      }
      (void) IOSObjectArray_SetAndConsume(nil_chk(self->fields_), i, new_ComAowagieTextPdfCodecTIFFField_initPackagePrivateWithInt_withInt_withInt_withId_(tag, type, count, obj));
    }
    
#line 331
    [stream seekWithLong:nextTagOffset];
  }
  
#line 335
  @try {
    self->nextIFDOffset_ = ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(self, stream);
  }
  @catch (JavaLangException *e) {
    
#line 340
    self->nextIFDOffset_ = 0;
  }
}

jbyte ComAowagieTextPdfCodecTIFFDirectory_getFieldAsByteWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index) {
  JavaLangInteger *i = (JavaLangInteger *) cast_chk([((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) getWithId:new_JavaLangInteger_initWithInt_(tag)], [JavaLangInteger class]);
  IOSByteArray *b = [((ComAowagieTextPdfCodecTIFFField *) nil_chk(IOSObjectArray_Get(nil_chk(self->fields_), [((JavaLangInteger *) nil_chk(i)) intValue]))) getAsBytes];
  return IOSByteArray_Get(nil_chk(b), index);
}


#line 427
jlong ComAowagieTextPdfCodecTIFFDirectory_getFieldAsLongWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index) {
  JavaLangInteger *i = (JavaLangInteger *) cast_chk([((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) getWithId:new_JavaLangInteger_initWithInt_(tag)], [JavaLangInteger class]);
  return [((ComAowagieTextPdfCodecTIFFField *) nil_chk(IOSObjectArray_Get(nil_chk(self->fields_), [((JavaLangInteger *) nil_chk(i)) intValue]))) getAsLongWithInt:index];
}


#line 453
jfloat ComAowagieTextPdfCodecTIFFDirectory_getFieldAsFloatWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index) {
  JavaLangInteger *i = (JavaLangInteger *) cast_chk([((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) getWithId:new_JavaLangInteger_initWithInt_(tag)], [JavaLangInteger class]);
  return [((ComAowagieTextPdfCodecTIFFField *) nil_chk(IOSObjectArray_Get(nil_chk(self->fields_), [((JavaLangInteger *) nil_chk(i)) intValue]))) getAsFloatWithInt:index];
}


#line 469
jdouble ComAowagieTextPdfCodecTIFFDirectory_getFieldAsDoubleWithInt_withInt_(ComAowagieTextPdfCodecTIFFDirectory *self, jint tag, jint index) {
  JavaLangInteger *i = (JavaLangInteger *) cast_chk([((JavaUtilHashtable *) nil_chk(self->fieldIndex_)) getWithId:new_JavaLangInteger_initWithInt_(tag)], [JavaLangInteger class]);
  return [((ComAowagieTextPdfCodecTIFFField *) nil_chk(IOSObjectArray_Get(nil_chk(self->fields_), [((JavaLangInteger *) nil_chk(i)) intValue]))) getAsDoubleWithInt:index];
}


#line 478
jshort ComAowagieTextPdfCodecTIFFDirectory_readShortWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  
#line 480
  if (self->isBigEndian_) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readShort];
  }
  else {
    
#line 483
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readShortLE];
  }
}


#line 487
jint ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  
#line 489
  if (self->isBigEndian_) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedShort];
  }
  else {
    
#line 492
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedShortLE];
  }
}


#line 496
jint ComAowagieTextPdfCodecTIFFDirectory_readIntWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  
#line 498
  if (self->isBigEndian_) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readInt];
  }
  else {
    
#line 501
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readIntLE];
  }
}


#line 505
jlong ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  
#line 507
  if (self->isBigEndian_) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedInt];
  }
  else {
    
#line 510
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedIntLE];
  }
}


#line 514
jlong ComAowagieTextPdfCodecTIFFDirectory_readLongWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  
#line 516
  if (self->isBigEndian_) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readLong];
  }
  else {
    
#line 519
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readLongLE];
  }
}


#line 523
jfloat ComAowagieTextPdfCodecTIFFDirectory_readFloatWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  
#line 525
  if (self->isBigEndian_) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readFloat];
  }
  else {
    
#line 528
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readFloatLE];
  }
}


#line 532
jdouble ComAowagieTextPdfCodecTIFFDirectory_readDoubleWithComAowagieTextPdfRandomAccessFileOrArray_(ComAowagieTextPdfCodecTIFFDirectory *self, ComAowagieTextPdfRandomAccessFileOrArray *stream) {
  
#line 534
  if (self->isBigEndian_) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readDouble];
  }
  else {
    
#line 537
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readDoubleLE];
  }
}


#line 541
jint ComAowagieTextPdfCodecTIFFDirectory_readUnsignedShortWithComAowagieTextPdfRandomAccessFileOrArray_withBoolean_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jboolean isBigEndian) {
  ComAowagieTextPdfCodecTIFFDirectory_initialize();
  
#line 544
  if (isBigEndian) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedShort];
  }
  else {
    
#line 547
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedShortLE];
  }
}


#line 551
jlong ComAowagieTextPdfCodecTIFFDirectory_readUnsignedIntWithComAowagieTextPdfRandomAccessFileOrArray_withBoolean_(ComAowagieTextPdfRandomAccessFileOrArray *stream, jboolean isBigEndian) {
  ComAowagieTextPdfCodecTIFFDirectory_initialize();
  
#line 554
  if (isBigEndian) {
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedInt];
  }
  else {
    
#line 557
    return [((ComAowagieTextPdfRandomAccessFileOrArray *) nil_chk(stream)) readUnsignedIntLE];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfCodecTIFFDirectory)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfNameTree.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/pdf/PdfArray.h"
#include "com/aowagie/text/pdf/PdfDictionary.h"
#include "com/aowagie/text/pdf/PdfEncodings.h"
#include "com/aowagie/text/pdf/PdfIndirectObject.h"
#include "com/aowagie/text/pdf/PdfIndirectReference.h"
#include "com/aowagie/text/pdf/PdfName.h"
#include "com/aowagie/text/pdf/PdfNameTree.h"
#include "com/aowagie/text/pdf/PdfObject.h"
#include "com/aowagie/text/pdf/PdfReader.h"
#include "com/aowagie/text/pdf/PdfString.h"
#include "com/aowagie/text/pdf/PdfWriter.h"
#include "java/lang/Math.h"
#include "java/util/Arrays.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Set.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/PdfNameTree must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfPdfNameTree ()

+ (void)iterateItemsWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic
                                   withJavaUtilHashMap:(JavaUtilHashMap *)items;

@end

inline jint ComAowagieTextPdfPdfNameTree_get_leafSize(void);
#define ComAowagieTextPdfPdfNameTree_leafSize 64
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfPdfNameTree, leafSize, jint)

__attribute__((unused)) static void ComAowagieTextPdfPdfNameTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(ComAowagieTextPdfPdfDictionary *dic, JavaUtilHashMap *items);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfNameTree.java"


#line 58
@implementation ComAowagieTextPdfPdfNameTree


#line 58
- (instancetype)initPackagePrivate {
  ComAowagieTextPdfPdfNameTree_initPackagePrivate(self);
  return self;
}


#line 74
+ (ComAowagieTextPdfPdfDictionary *)writeTreeWithJavaUtilHashMap:(JavaUtilHashMap *)items
                                  withComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  return ComAowagieTextPdfPdfNameTree_writeTreeWithJavaUtilHashMap_withComAowagieTextPdfPdfWriter_(items, writer);
}


#line 141
+ (void)iterateItemsWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic
                                   withJavaUtilHashMap:(JavaUtilHashMap *)items {
  ComAowagieTextPdfPdfNameTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(dic, items);
}


#line 157
+ (JavaUtilHashMap *)readTreeWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)dic {
  return ComAowagieTextPdfPdfNameTree_readTreeWithComAowagieTextPdfPdfDictionary_(dic);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0xa, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashMap;", 0x9, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(writeTreeWithJavaUtilHashMap:withComAowagieTextPdfPdfWriter:);
  methods[2].selector = @selector(iterateItemsWithComAowagieTextPdfPdfDictionary:withJavaUtilHashMap:);
  methods[3].selector = @selector(readTreeWithComAowagieTextPdfPdfDictionary:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "leafSize", "I", .constantValue.asInt = ComAowagieTextPdfPdfNameTree_leafSize, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "writeTree", "LJavaUtilHashMap;LComAowagieTextPdfPdfWriter;", "LJavaIoIOException;", "iterateItems", "LComAowagieTextPdfPdfDictionary;LJavaUtilHashMap;", "readTree", "LComAowagieTextPdfPdfDictionary;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfPdfNameTree = { "PdfNameTree", "com.aowagie.text.pdf", ptrTable, methods, fields, 7, 0x0, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfPdfNameTree;
}

@end


#line 58
void ComAowagieTextPdfPdfNameTree_initPackagePrivate(ComAowagieTextPdfPdfNameTree *self) {
  NSObject_init(self);
}


#line 58
ComAowagieTextPdfPdfNameTree *new_ComAowagieTextPdfPdfNameTree_initPackagePrivate() {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfPdfNameTree, initPackagePrivate)
}


#line 58
ComAowagieTextPdfPdfNameTree *create_ComAowagieTextPdfPdfNameTree_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfPdfNameTree, initPackagePrivate)
}


#line 74
ComAowagieTextPdfPdfDictionary *ComAowagieTextPdfPdfNameTree_writeTreeWithJavaUtilHashMap_withComAowagieTextPdfPdfWriter_(JavaUtilHashMap *items, ComAowagieTextPdfPdfWriter *writer) {
  ComAowagieTextPdfPdfNameTree_initialize();
  
#line 75
  if ([((JavaUtilHashMap *) nil_chk(items)) isEmpty]) {
    return nil;
  }
  IOSObjectArray *names = [IOSObjectArray newArrayWithLength:[items size] type:NSString_class_()];
  names = (IOSObjectArray *) cast_check([((id<JavaUtilSet>) nil_chk([items keySet])) toArrayWithNSObjectArray:names], IOSClass_arrayType(NSString_class_(), 1));
  JavaUtilArrays_sortWithNSObjectArray_(names);
  if (((IOSObjectArray *) nil_chk(names))->size_ <= ComAowagieTextPdfPdfNameTree_leafSize) {
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
    ComAowagieTextPdfPdfArray *ar = new_ComAowagieTextPdfPdfArray_init();
    {
      IOSObjectArray *a__ =
#line 84
      names;
      NSString * const *b__ = a__->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *name = *b__++;
        
#line 85
        [ar addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(name, nil)];
        [ar addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *) cast_chk([items getWithId:name], [ComAowagieTextPdfPdfObject class])];
      }
    }
    
#line 88
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAMES) withComAowagieTextPdfPdfObject:ar];
    return dic;
  }
  jint skip = ComAowagieTextPdfPdfNameTree_leafSize;
  IOSObjectArray *kids = [IOSObjectArray newArrayWithLength:JreIntDiv((names->size_ + ComAowagieTextPdfPdfNameTree_leafSize - 1), ComAowagieTextPdfPdfNameTree_leafSize) type:ComAowagieTextPdfPdfIndirectReference_class_()];
  for (jint k = 0; k < kids->size_; ++k) {
    jint offset = k * ComAowagieTextPdfPdfNameTree_leafSize;
    jint end = JavaLangMath_minWithInt_withInt_(offset + ComAowagieTextPdfPdfNameTree_leafSize, names->size_);
    ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
    ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
    [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(IOSObjectArray_Get(names, offset), nil)];
    [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(IOSObjectArray_Get(names, end - 1), nil)];
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LIMITS) withComAowagieTextPdfPdfObject:arr];
    arr = new_ComAowagieTextPdfPdfArray_init();
    for (; offset < end; ++offset) {
      [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(IOSObjectArray_Get(names, offset), nil)];
      [arr addWithComAowagieTextPdfPdfObject:(ComAowagieTextPdfPdfObject *) cast_chk([items getWithId:IOSObjectArray_Get(names, offset)], [ComAowagieTextPdfPdfObject class])];
    }
    [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAMES) withComAowagieTextPdfPdfObject:arr];
    (void) IOSObjectArray_Set(kids, k, [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) addToBodyWithComAowagieTextPdfPdfObject:dic])) getIndirectReference]);
  }
  jint top = kids->size_;
  while (true) {
    if (top <= ComAowagieTextPdfPdfNameTree_leafSize) {
      ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
      for (jint k = 0; k < top; ++k) {
        [arr addWithComAowagieTextPdfPdfObject:IOSObjectArray_Get(kids, k)];
      }
      ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:arr];
      return dic;
    }
    skip *= ComAowagieTextPdfPdfNameTree_leafSize;
    jint tt = JreIntDiv((names->size_ + skip - 1), skip);
    for (jint k = 0; k < tt; ++k) {
      jint offset = k * ComAowagieTextPdfPdfNameTree_leafSize;
      jint end = JavaLangMath_minWithInt_withInt_(offset + ComAowagieTextPdfPdfNameTree_leafSize, top);
      ComAowagieTextPdfPdfDictionary *dic = new_ComAowagieTextPdfPdfDictionary_init();
      ComAowagieTextPdfPdfArray *arr = new_ComAowagieTextPdfPdfArray_init();
      [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(IOSObjectArray_Get(names, k * skip), nil)];
      [arr addWithComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_(IOSObjectArray_Get(names, JavaLangMath_minWithInt_withInt_((k + 1) * skip, names->size_) - 1), nil)];
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, LIMITS) withComAowagieTextPdfPdfObject:arr];
      arr = new_ComAowagieTextPdfPdfArray_init();
      for (; offset < end; ++offset) {
        [arr addWithComAowagieTextPdfPdfObject:IOSObjectArray_Get(kids, offset)];
      }
      [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS) withComAowagieTextPdfPdfObject:arr];
      (void) IOSObjectArray_Set(kids, k, [((ComAowagieTextPdfPdfIndirectObject *) nil_chk([((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) addToBodyWithComAowagieTextPdfPdfObject:dic])) getIndirectReference]);
    }
    top = tt;
  }
}


#line 141
void ComAowagieTextPdfPdfNameTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(ComAowagieTextPdfPdfDictionary *dic, JavaUtilHashMap *items) {
  ComAowagieTextPdfPdfNameTree_initialize();
  
#line 142
  ComAowagieTextPdfPdfArray *nn = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(dic)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, NAMES)]), [ComAowagieTextPdfPdfArray class]);
  if (nn != nil) {
    for (jint k = 0; k < [nn size]; ++k) {
      ComAowagieTextPdfPdfString *s = (ComAowagieTextPdfPdfString *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([nn getPdfObjectWithInt:k++]), [ComAowagieTextPdfPdfString class]);
      (void) [((JavaUtilHashMap *) nil_chk(items)) putWithId:ComAowagieTextPdfPdfEncodings_convertToStringWithByteArray_withNSString_([((ComAowagieTextPdfPdfString *) nil_chk(s)) getBytes], nil) withId:[nn getPdfObjectWithInt:k]];
    }
  }
  else if ((nn = (ComAowagieTextPdfPdfArray *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, KIDS)]), [ComAowagieTextPdfPdfArray class])) != nil) {
    for (jint k = 0; k < [((ComAowagieTextPdfPdfArray *) nil_chk(nn)) size]; ++k) {
      ComAowagieTextPdfPdfDictionary *kid = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([nn getPdfObjectWithInt:k]), [ComAowagieTextPdfPdfDictionary class]);
      ComAowagieTextPdfPdfNameTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(kid, items);
    }
  }
}


#line 157
JavaUtilHashMap *ComAowagieTextPdfPdfNameTree_readTreeWithComAowagieTextPdfPdfDictionary_(ComAowagieTextPdfPdfDictionary *dic) {
  ComAowagieTextPdfPdfNameTree_initialize();
  
#line 158
  JavaUtilHashMap *items = new_JavaUtilLinkedHashMap_init();
  if (dic != nil) {
    ComAowagieTextPdfPdfNameTree_iterateItemsWithComAowagieTextPdfPdfDictionary_withJavaUtilHashMap_(dic, items);
  }
  return items;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfPdfNameTree)

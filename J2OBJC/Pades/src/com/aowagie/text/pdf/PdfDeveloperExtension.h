//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/PdfDeveloperExtension.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfPdfDeveloperExtension")
#ifdef RESTRICT_ComAowagieTextPdfPdfDeveloperExtension
#define INCLUDE_ALL_ComAowagieTextPdfPdfDeveloperExtension 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfPdfDeveloperExtension 1
#endif
#undef RESTRICT_ComAowagieTextPdfPdfDeveloperExtension

#if !defined (ComAowagieTextPdfPdfDeveloperExtension_) && (INCLUDE_ALL_ComAowagieTextPdfPdfDeveloperExtension || defined(INCLUDE_ComAowagieTextPdfPdfDeveloperExtension))
#define ComAowagieTextPdfPdfDeveloperExtension_

@class ComAowagieTextPdfPdfDictionary;
@class ComAowagieTextPdfPdfName;

/*!
 @brief Beginning with BaseVersion 1.7, the extensions dictionary lets developers
  designate that a given document contains extensions to PDF.The presence
  of the extension dictionary in a document indicates that it may contain
  developer-specific PDF properties that extend a particular base version
  of the PDF specification.
 The extensions dictionary enables developers to identify their own extensions
  relative to a base version of PDF. Additionally, the convention identifies
  extension levels relative to that base version. The intent of this dictionary
  is to enable developers of PDF-producing applications to identify company-specific
  specifications (such as this one) that PDF-consuming applications use to
  interpret the extensions.
 @since 2.1.6
 */
@interface ComAowagieTextPdfPdfDeveloperExtension : NSObject

#pragma mark Public

/*!
 @brief Creates a PdfDeveloperExtension object.
 @param prefix the prefix referring to the developer
 @param baseversion the number of the base version
 @param extensionLevel the extension level within the baseverion.
 */
- (instancetype)initWithComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)prefix
                    withComAowagieTextPdfPdfName:(ComAowagieTextPdfPdfName *)baseversion
                                         withInt:(jint)extensionLevel;

/*!
 @brief Gets the baseversion name.
 @return a PdfName
 */
- (ComAowagieTextPdfPdfName *)getBaseversion;

/*!
 @brief Generations the developer extension dictionary corresponding
  with the prefix.
 @return a PdfDictionary
 */
- (ComAowagieTextPdfPdfDictionary *)getDeveloperExtensions;

/*!
 @brief Gets the extension level within the baseversion.
 @return an integer
 */
- (jint)getExtensionLevel;

/*!
 @brief Gets the prefix name.
 @return a PdfName
 */
- (ComAowagieTextPdfPdfName *)getPrefix;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfPdfDeveloperExtension)

FOUNDATION_EXPORT void ComAowagieTextPdfPdfDeveloperExtension_initWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_withInt_(ComAowagieTextPdfPdfDeveloperExtension *self, ComAowagieTextPdfPdfName *prefix, ComAowagieTextPdfPdfName *baseversion, jint extensionLevel);

FOUNDATION_EXPORT ComAowagieTextPdfPdfDeveloperExtension *new_ComAowagieTextPdfPdfDeveloperExtension_initWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_withInt_(ComAowagieTextPdfPdfName *prefix, ComAowagieTextPdfPdfName *baseversion, jint extensionLevel) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfPdfDeveloperExtension *create_ComAowagieTextPdfPdfDeveloperExtension_initWithComAowagieTextPdfPdfName_withComAowagieTextPdfPdfName_withInt_(ComAowagieTextPdfPdfName *prefix, ComAowagieTextPdfPdfName *baseversion, jint extensionLevel);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfPdfDeveloperExtension)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfPdfDeveloperExtension")

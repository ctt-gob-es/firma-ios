//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/internal/PdfXConformanceImp.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComAowagieTextPdfInternalPdfXConformanceImp")
#ifdef RESTRICT_ComAowagieTextPdfInternalPdfXConformanceImp
#define INCLUDE_ALL_ComAowagieTextPdfInternalPdfXConformanceImp 0
#else
#define INCLUDE_ALL_ComAowagieTextPdfInternalPdfXConformanceImp 1
#endif
#undef RESTRICT_ComAowagieTextPdfInternalPdfXConformanceImp

#if !defined (ComAowagieTextPdfInternalPdfXConformanceImp_) && (INCLUDE_ALL_ComAowagieTextPdfInternalPdfXConformanceImp || defined(INCLUDE_ComAowagieTextPdfInternalPdfXConformanceImp))
#define ComAowagieTextPdfInternalPdfXConformanceImp_

#define RESTRICT_ComAowagieTextPdfInterfacesPdfXConformance 1
#define INCLUDE_ComAowagieTextPdfInterfacesPdfXConformance 1
#include "com/aowagie/text/pdf/interfaces/PdfXConformance.h"

@class ComAowagieTextPdfPdfDictionary;
@class ComAowagieTextPdfPdfWriter;

@interface ComAowagieTextPdfInternalPdfXConformanceImp : NSObject < ComAowagieTextPdfInterfacesPdfXConformance >

#pragma mark Public

- (instancetype)init;

/*!
 @brief Business logic that checks if a certain object is in conformance with PDF/X.
 @param writer the writer that is supposed to write the PDF/X file
 @param key the type of PDF/X conformance that has to be checked
 @param obj1 the object that is checked for conformance
 */
+ (void)checkPDFXConformanceWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                   withInt:(jint)key
                                                    withId:(id)obj1;

- (void)completeExtraCatalogWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)extraCatalog;

- (void)completeInfoDictionaryWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)info;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfXConformance#getPDFXConformance()
 */
- (jint)getPDFXConformance;

/*!
 @brief Checks if the PDF has to be in conformance with PDFA1
 @return true of the PDF has to be in conformance with PDFA1
 */
- (jboolean)isPdfA1;

/*!
 @brief Checks if the PDF has to be in conformance with PDFA1A
 @return true of the PDF has to be in conformance with PDFA1A
 */
- (jboolean)isPdfA1A;

/*!
 @brief Checks if the PDF/X Conformance is necessary.
 @return true if the PDF has to be in conformance with any of the PDF/X specifications
 */
- (jboolean)isPdfX;

/*!
 @brief Checks if the PDF has to be in conformance with PDF/X-1a:2001
 @return true of the PDF has to be in conformance with PDF/X-1a:2001
 */
- (jboolean)isPdfX1A2001;

/*!
 @brief Checks if the PDF has to be in conformance with PDF/X-3:2002
 @return true of the PDF has to be in conformance with PDF/X-3:2002
 */
- (jboolean)isPdfX32002;

/*!
 - seealso: com.aowagie.text.pdf.interfaces.PdfXConformance#setPDFXConformance(int)
 */
- (void)setPDFXConformanceWithInt:(jint)pdfxConformance;

@end

J2OBJC_EMPTY_STATIC_INIT(ComAowagieTextPdfInternalPdfXConformanceImp)

/*!
 @brief A key for an aspect that can be checked for PDF/X Conformance.
 */
inline jint ComAowagieTextPdfInternalPdfXConformanceImp_get_PDFXKEY_COLOR(void);
#define ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_COLOR 1
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfInternalPdfXConformanceImp, PDFXKEY_COLOR, jint)

/*!
 @brief A key for an aspect that can be checked for PDF/X Conformance.
 */
inline jint ComAowagieTextPdfInternalPdfXConformanceImp_get_PDFXKEY_RGB(void);
#define ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_RGB 3
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfInternalPdfXConformanceImp, PDFXKEY_RGB, jint)

/*!
 @brief A key for an aspect that can be checked for PDF/X Conformance.
 */
inline jint ComAowagieTextPdfInternalPdfXConformanceImp_get_PDFXKEY_FONT(void);
#define ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_FONT 4
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfInternalPdfXConformanceImp, PDFXKEY_FONT, jint)

/*!
 @brief A key for an aspect that can be checked for PDF/X Conformance.
 */
inline jint ComAowagieTextPdfInternalPdfXConformanceImp_get_PDFXKEY_IMAGE(void);
#define ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_IMAGE 5
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfInternalPdfXConformanceImp, PDFXKEY_IMAGE, jint)

/*!
 @brief A key for an aspect that can be checked for PDF/X Conformance.
 */
inline jint ComAowagieTextPdfInternalPdfXConformanceImp_get_PDFXKEY_GSTATE(void);
#define ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_GSTATE 6
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfInternalPdfXConformanceImp, PDFXKEY_GSTATE, jint)

/*!
 @brief A key for an aspect that can be checked for PDF/X Conformance.
 */
inline jint ComAowagieTextPdfInternalPdfXConformanceImp_get_PDFXKEY_LAYER(void);
#define ComAowagieTextPdfInternalPdfXConformanceImp_PDFXKEY_LAYER 7
J2OBJC_STATIC_FIELD_CONSTANT(ComAowagieTextPdfInternalPdfXConformanceImp, PDFXKEY_LAYER, jint)

FOUNDATION_EXPORT void ComAowagieTextPdfInternalPdfXConformanceImp_init(ComAowagieTextPdfInternalPdfXConformanceImp *self);

FOUNDATION_EXPORT ComAowagieTextPdfInternalPdfXConformanceImp *new_ComAowagieTextPdfInternalPdfXConformanceImp_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComAowagieTextPdfInternalPdfXConformanceImp *create_ComAowagieTextPdfInternalPdfXConformanceImp_init(void);

FOUNDATION_EXPORT void ComAowagieTextPdfInternalPdfXConformanceImp_checkPDFXConformanceWithComAowagieTextPdfPdfWriter_withInt_withId_(ComAowagieTextPdfPdfWriter *writer, jint key, id obj1);

J2OBJC_TYPE_LITERAL_HEADER(ComAowagieTextPdfInternalPdfXConformanceImp)

#endif

#pragma pop_macro("INCLUDE_ALL_ComAowagieTextPdfInternalPdfXConformanceImp")

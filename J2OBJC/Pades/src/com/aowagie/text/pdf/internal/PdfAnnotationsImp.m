//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/internal/PdfAnnotationsImp.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/Annotation.h"
#include "com/aowagie/text/ExceptionConverter.h"
#include "com/aowagie/text/Rectangle.h"
#include "com/aowagie/text/pdf/PdfAcroForm.h"
#include "com/aowagie/text/pdf/PdfAction.h"
#include "com/aowagie/text/pdf/PdfAnnotation.h"
#include "com/aowagie/text/pdf/PdfArray.h"
#include "com/aowagie/text/pdf/PdfFileSpecification.h"
#include "com/aowagie/text/pdf/PdfFormField.h"
#include "com/aowagie/text/pdf/PdfIndirectObject.h"
#include "com/aowagie/text/pdf/PdfIndirectReference.h"
#include "com/aowagie/text/pdf/PdfName.h"
#include "com/aowagie/text/pdf/PdfObject.h"
#include "com/aowagie/text/pdf/PdfRectangle.h"
#include "com/aowagie/text/pdf/PdfString.h"
#include "com/aowagie/text/pdf/PdfWriter.h"
#include "com/aowagie/text/pdf/internal/PdfAnnotationsImp.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/net/URL.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/internal/PdfAnnotationsImp must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfInternalPdfAnnotationsImp () {
 @public
  /*!
   @brief This is the AcroForm object for the complete document.
   */
  ComAowagieTextPdfPdfAcroForm *acroForm_;
  /*!
   @brief This is the array containing the references to annotations
  that were added to the document.
   */
  JavaUtilArrayList *annotations_;
  /*!
   @brief This is an array containing references to some delayed annotations
  (that were added for a page that doesn't exist yet).
   */
  JavaUtilArrayList *delayedAnnotations_;
}

- (void)addFormFieldRawWithComAowagieTextPdfPdfFormField:(ComAowagieTextPdfPdfFormField *)field;

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfInternalPdfAnnotationsImp, acroForm_, ComAowagieTextPdfPdfAcroForm *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfInternalPdfAnnotationsImp, annotations_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfInternalPdfAnnotationsImp, delayedAnnotations_, JavaUtilArrayList *)

__attribute__((unused)) static void ComAowagieTextPdfInternalPdfAnnotationsImp_addFormFieldRawWithComAowagieTextPdfPdfFormField_(ComAowagieTextPdfInternalPdfAnnotationsImp *self, ComAowagieTextPdfPdfFormField *field);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/internal/PdfAnnotationsImp.java"


#line 72
@implementation ComAowagieTextPdfInternalPdfAnnotationsImp


#line 92
- (instancetype)initWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer {
  ComAowagieTextPdfInternalPdfAnnotationsImp_initWithComAowagieTextPdfPdfWriter_(self, writer);
  return self;
}


#line 100
- (jboolean)hasValidAcroForm {
  return [((ComAowagieTextPdfPdfAcroForm *) nil_chk(self->acroForm_)) isValid];
}


#line 108
- (ComAowagieTextPdfPdfAcroForm *)getAcroForm {
  return self->acroForm_;
}

- (void)setSigFlagsWithInt:(jint)f {
  [((ComAowagieTextPdfPdfAcroForm *) nil_chk(self->acroForm_)) setSigFlagsWithInt:f];
}

- (void)addCalculationOrderWithComAowagieTextPdfPdfFormField:(ComAowagieTextPdfPdfFormField *)formField {
  [((ComAowagieTextPdfPdfAcroForm *) nil_chk(self->acroForm_)) addCalculationOrderWithComAowagieTextPdfPdfFormField:formField];
}

- (void)addAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot {
  if ([((ComAowagieTextPdfPdfAnnotation *) nil_chk(annot)) isForm]) {
    ComAowagieTextPdfPdfFormField *field = (ComAowagieTextPdfPdfFormField *) cast_chk(annot, [ComAowagieTextPdfPdfFormField class]);
    if ([field getParent] == nil) {
      ComAowagieTextPdfInternalPdfAnnotationsImp_addFormFieldRawWithComAowagieTextPdfPdfFormField_(self, field);
    }
  }
  else {
    
#line 127
    [((JavaUtilArrayList *) nil_chk(self->annotations_)) addWithId:annot];
  }
}


#line 131
- (void)addPlainAnnotationWithComAowagieTextPdfPdfAnnotation:(ComAowagieTextPdfPdfAnnotation *)annot {
  [((JavaUtilArrayList *) nil_chk(self->annotations_)) addWithId:annot];
}

- (void)addFormFieldRawWithComAowagieTextPdfPdfFormField:(ComAowagieTextPdfPdfFormField *)field {
  ComAowagieTextPdfInternalPdfAnnotationsImp_addFormFieldRawWithComAowagieTextPdfPdfFormField_(self, field);
}


#line 145
- (jboolean)hasUnusedAnnotations {
  return ![((JavaUtilArrayList *) nil_chk(self->annotations_)) isEmpty];
}

- (void)resetAnnotations {
  self->annotations_ = self->delayedAnnotations_;
  self->delayedAnnotations_ = new_JavaUtilArrayList_init();
}

- (ComAowagieTextPdfPdfArray *)rotateAnnotationsWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                   withComAowagieTextRectangle:(ComAowagieTextRectangle *)pageSize {
  
#line 155
  ComAowagieTextPdfPdfArray *array = new_ComAowagieTextPdfPdfArray_init();
  jint rotation = JreIntMod([((ComAowagieTextRectangle *) nil_chk(pageSize)) getRotation], 360);
  jint currentPage = [((ComAowagieTextPdfPdfWriter *) nil_chk(writer)) getCurrentPageNumber];
  for (jint k = 0; k < [((JavaUtilArrayList *) nil_chk(self->annotations_)) size]; ++k) {
    ComAowagieTextPdfPdfAnnotation *dic = (ComAowagieTextPdfPdfAnnotation *) cast_chk([((JavaUtilArrayList *) nil_chk(self->annotations_)) getWithInt:k], [ComAowagieTextPdfPdfAnnotation class]);
    jint page = [((ComAowagieTextPdfPdfAnnotation *) nil_chk(dic)) getPlaceInPage];
    if (page > currentPage) {
      [((JavaUtilArrayList *) nil_chk(self->delayedAnnotations_)) addWithId:dic];
      continue;
    }
    if ([dic isForm]) {
      if (![dic isUsed]) {
        JavaUtilHashMap *templates = [dic getTemplates];
        if (templates != nil) {
          [((ComAowagieTextPdfPdfAcroForm *) nil_chk(self->acroForm_)) addFieldTemplatesWithJavaUtilHashMap:templates];
        }
      }
      ComAowagieTextPdfPdfFormField *field = (ComAowagieTextPdfPdfFormField *) cast_chk(dic, [ComAowagieTextPdfPdfFormField class]);
      if ([field getParent] == nil) {
        [((ComAowagieTextPdfPdfAcroForm *) nil_chk(self->acroForm_)) addDocumentFieldWithComAowagieTextPdfPdfIndirectReference:[field getIndirectReference]];
      }
    }
    if ([dic isAnnotation]) {
      [array addWithComAowagieTextPdfPdfObject:[dic getIndirectReference]];
      if (![dic isUsed]) {
        ComAowagieTextPdfPdfRectangle *rect = (ComAowagieTextPdfPdfRectangle *) cast_chk([dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT)], [ComAowagieTextPdfPdfRectangle class]);
        if (rect != nil) {
          switch (rotation) {
            case 90:
            [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithFloat_withFloat_withFloat_withFloat_(
#line 185
            [pageSize getTop] - [rect bottom],
#line 186
            [rect left],
#line 187
            [pageSize getTop] - [rect top],
#line 188
            [rect right])];
            break;
            case 180:
            [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithFloat_withFloat_withFloat_withFloat_(
#line 192
            [pageSize getRight] - [rect left],
#line 193
            [pageSize getTop] - [rect bottom],
#line 194
            [pageSize getRight] - [rect right],
#line 195
            [pageSize getTop] - [rect top])];
            break;
            case 270:
            [dic putWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, RECT) withComAowagieTextPdfPdfObject:new_ComAowagieTextPdfPdfRectangle_initWithFloat_withFloat_withFloat_withFloat_(
#line 199
            [rect bottom],
#line 200
            [pageSize getRight] - [rect left],
#line 201
            [rect top],
#line 202
            [pageSize getRight] - [rect right])];
            break;
          }
        }
      }
    }
    if (![dic isUsed]) {
      [dic setUsed];
      @try {
        (void) [writer addToBodyWithComAowagieTextPdfPdfObject:dic withComAowagieTextPdfPdfIndirectReference:[dic getIndirectReference]];
      }
      @catch (JavaIoIOException *e) {
        @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
      }
    }
  }
  return array;
}


#line 221
+ (ComAowagieTextPdfPdfAnnotation *)convertAnnotationWithComAowagieTextPdfPdfWriter:(ComAowagieTextPdfPdfWriter *)writer
                                                       withComAowagieTextAnnotation:(ComAowagieTextAnnotation *)annot
                                                        withComAowagieTextRectangle:(ComAowagieTextRectangle *)defaultRect {
  return ComAowagieTextPdfInternalPdfAnnotationsImp_convertAnnotationWithComAowagieTextPdfPdfWriter_withComAowagieTextAnnotation_withComAowagieTextRectangle_(writer, annot, defaultRect);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfAcroForm;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfArray;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfAnnotation;", 0x9, 11, 12, 13, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextPdfPdfWriter:);
  methods[1].selector = @selector(hasValidAcroForm);
  methods[2].selector = @selector(getAcroForm);
  methods[3].selector = @selector(setSigFlagsWithInt:);
  methods[4].selector = @selector(addCalculationOrderWithComAowagieTextPdfPdfFormField:);
  methods[5].selector = @selector(addAnnotationWithComAowagieTextPdfPdfAnnotation:);
  methods[6].selector = @selector(addPlainAnnotationWithComAowagieTextPdfPdfAnnotation:);
  methods[7].selector = @selector(addFormFieldRawWithComAowagieTextPdfPdfFormField:);
  methods[8].selector = @selector(hasUnusedAnnotations);
  methods[9].selector = @selector(resetAnnotations);
  methods[10].selector = @selector(rotateAnnotationsWithComAowagieTextPdfPdfWriter:withComAowagieTextRectangle:);
  methods[11].selector = @selector(convertAnnotationWithComAowagieTextPdfPdfWriter:withComAowagieTextAnnotation:withComAowagieTextRectangle:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "acroForm_", "LComAowagieTextPdfPdfAcroForm;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "annotations_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "delayedAnnotations_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComAowagieTextPdfPdfWriter;", "setSigFlags", "I", "addCalculationOrder", "LComAowagieTextPdfPdfFormField;", "addAnnotation", "LComAowagieTextPdfPdfAnnotation;", "addPlainAnnotation", "addFormFieldRaw", "rotateAnnotations", "LComAowagieTextPdfPdfWriter;LComAowagieTextRectangle;", "convertAnnotation", "LComAowagieTextPdfPdfWriter;LComAowagieTextAnnotation;LComAowagieTextRectangle;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _ComAowagieTextPdfInternalPdfAnnotationsImp = { "PdfAnnotationsImp", "com.aowagie.text.pdf.internal", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfInternalPdfAnnotationsImp;
}

@end


#line 92
void ComAowagieTextPdfInternalPdfAnnotationsImp_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfInternalPdfAnnotationsImp *self, ComAowagieTextPdfPdfWriter *writer) {
  NSObject_init(self);
  self->delayedAnnotations_ = new_JavaUtilArrayList_init();
  
#line 93
  self->acroForm_ = new_ComAowagieTextPdfPdfAcroForm_initWithComAowagieTextPdfPdfWriter_(writer);
}


#line 92
ComAowagieTextPdfInternalPdfAnnotationsImp *new_ComAowagieTextPdfInternalPdfAnnotationsImp_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfInternalPdfAnnotationsImp, initWithComAowagieTextPdfPdfWriter_, writer)
}


#line 92
ComAowagieTextPdfInternalPdfAnnotationsImp *create_ComAowagieTextPdfInternalPdfAnnotationsImp_initWithComAowagieTextPdfPdfWriter_(ComAowagieTextPdfPdfWriter *writer) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfInternalPdfAnnotationsImp, initWithComAowagieTextPdfPdfWriter_, writer)
}


#line 135
void ComAowagieTextPdfInternalPdfAnnotationsImp_addFormFieldRawWithComAowagieTextPdfPdfFormField_(ComAowagieTextPdfInternalPdfAnnotationsImp *self, ComAowagieTextPdfPdfFormField *field) {
  [((JavaUtilArrayList *) nil_chk(self->annotations_)) addWithId:field];
  JavaUtilArrayList *kids = [((ComAowagieTextPdfPdfFormField *) nil_chk(field)) getKids];
  if (kids != nil) {
    for (jint k = 0; k < [kids size]; ++k) {
      ComAowagieTextPdfInternalPdfAnnotationsImp_addFormFieldRawWithComAowagieTextPdfPdfFormField_(self, (ComAowagieTextPdfPdfFormField *) cast_chk([kids getWithInt:k], [ComAowagieTextPdfPdfFormField class]));
    }
  }
}


#line 221
ComAowagieTextPdfPdfAnnotation *ComAowagieTextPdfInternalPdfAnnotationsImp_convertAnnotationWithComAowagieTextPdfPdfWriter_withComAowagieTextAnnotation_withComAowagieTextRectangle_(ComAowagieTextPdfPdfWriter *writer, ComAowagieTextAnnotation *annot, ComAowagieTextRectangle *defaultRect) {
  ComAowagieTextPdfInternalPdfAnnotationsImp_initialize();
  {
    
#line 230
    IOSBooleanArray *sparams;
    NSString *fname;
    NSString *mimetype;
    ComAowagieTextPdfPdfFileSpecification *fs;
    
#line 239
    ComAowagieTextPdfPdfAnnotation *ann;
    
#line 222
    switch ([((ComAowagieTextAnnotation *) nil_chk(annot)) annotationType]) {
      case ComAowagieTextAnnotation_URL_NET:
      return new_ComAowagieTextPdfPdfAnnotation_initWithComAowagieTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComAowagieTextPdfPdfAction_(writer, [annot llx], [annot lly], [annot urx], [annot ury], new_ComAowagieTextPdfPdfAction_initWithJavaNetURL_((JavaNetURL *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_URL], [JavaNetURL class])));
      case ComAowagieTextAnnotation_URL_AS_STRING:
      return new_ComAowagieTextPdfPdfAnnotation_initWithComAowagieTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComAowagieTextPdfPdfAction_(writer, [annot llx], [annot lly], [annot urx], [annot ury], new_ComAowagieTextPdfPdfAction_initWithNSString_((NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_FILE], [NSString class])));
      case ComAowagieTextAnnotation_FILE_DEST:
      return new_ComAowagieTextPdfPdfAnnotation_initWithComAowagieTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComAowagieTextPdfPdfAction_(writer, [annot llx], [annot lly], [annot urx], [annot ury], new_ComAowagieTextPdfPdfAction_initWithNSString_withNSString_((NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_FILE], [NSString class]), (NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_DESTINATION], [NSString class])));
      case ComAowagieTextAnnotation_SCREEN:
      sparams = (IOSBooleanArray *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_PARAMETERS], [IOSBooleanArray class]);
      fname = (NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_FILE], [NSString class]);
      mimetype = (NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_MIMETYPE], [NSString class]);
      
#line 234
      if (IOSBooleanArray_Get(nil_chk(sparams), 0)) {
        fs = ComAowagieTextPdfPdfFileSpecification_fileEmbeddedWithComAowagieTextPdfPdfWriter_withNSString_withNSString_withByteArray_(writer, fname, fname, nil);
      }
      else {
        
#line 237
        fs = ComAowagieTextPdfPdfFileSpecification_fileExternWithComAowagieTextPdfPdfWriter_withNSString_(writer, fname);
      }
      ann = ComAowagieTextPdfPdfAnnotation_createScreenWithComAowagieTextPdfPdfWriter_withComAowagieTextRectangle_withNSString_withComAowagieTextPdfPdfFileSpecification_withNSString_withBoolean_(writer, new_ComAowagieTextRectangle_initWithFloat_withFloat_withFloat_withFloat_([annot llx], [annot lly], [annot urx], [annot ury]),
#line 240
      fname, fs, mimetype, IOSBooleanArray_Get(sparams, 1));
      return ann;
      case ComAowagieTextAnnotation_FILE_PAGE:
      return new_ComAowagieTextPdfPdfAnnotation_initWithComAowagieTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComAowagieTextPdfPdfAction_(writer, [annot llx], [annot lly], [annot urx], [annot ury], new_ComAowagieTextPdfPdfAction_initWithNSString_withInt_((NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_FILE], [NSString class]), [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_PAGE], [JavaLangInteger class])))) intValue]));
      case ComAowagieTextAnnotation_NAMED_DEST:
      return new_ComAowagieTextPdfPdfAnnotation_initWithComAowagieTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComAowagieTextPdfPdfAction_(writer, [annot llx], [annot lly], [annot urx], [annot ury], new_ComAowagieTextPdfPdfAction_initWithInt_([((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_NAMED], [JavaLangInteger class])))) intValue]));
      case ComAowagieTextAnnotation_LAUNCH:
      return new_ComAowagieTextPdfPdfAnnotation_initWithComAowagieTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComAowagieTextPdfPdfAction_(writer, [annot llx], [annot lly], [annot urx], [annot ury], new_ComAowagieTextPdfPdfAction_initWithNSString_withNSString_withNSString_withNSString_((NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_APPLICATION], [NSString class]), (NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_PARAMETERS], [NSString class]), (NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_OPERATION], [NSString class]), (NSString *) cast_chk([((JavaUtilHashMap *) nil_chk([annot attributes])) getWithId:ComAowagieTextAnnotation_DEFAULTDIR], [NSString class])));
      default:
      return new_ComAowagieTextPdfPdfAnnotation_initWithComAowagieTextPdfPdfWriter_withFloat_withFloat_withFloat_withFloat_withComAowagieTextPdfPdfString_withComAowagieTextPdfPdfString_(writer, [((ComAowagieTextRectangle *) nil_chk(defaultRect)) getLeft], [defaultRect getBottom], [defaultRect getRight], [defaultRect getTop], new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_([annot title], ComAowagieTextPdfPdfObject_TEXT_UNICODE), new_ComAowagieTextPdfPdfString_initWithNSString_withNSString_([annot content], ComAowagieTextPdfPdfObject_TEXT_UNICODE));
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfInternalPdfAnnotationsImp)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/hyphenation/Hyphenation.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/pdf/hyphenation/Hyphenation.h"
#include "java/lang/StringBuffer.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/pdf/hyphenation/Hyphenation must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextPdfHyphenationHyphenation () {
 @public
  IOSIntArray *hyphenPoints_;
  NSString *word_;
  /*!
   @brief number of hyphenation points in word
   */
  jint len_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextPdfHyphenationHyphenation, hyphenPoints_, IOSIntArray *)
J2OBJC_FIELD_SETTER(ComAowagieTextPdfHyphenationHyphenation, word_, NSString *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/pdf/hyphenation/Hyphenation.java"


#line 24
@implementation ComAowagieTextPdfHyphenationHyphenation


#line 40
- (instancetype)initWithNSString:(NSString *)word
                    withIntArray:(IOSIntArray *)points {
  ComAowagieTextPdfHyphenationHyphenation_initWithNSString_withIntArray_(self, word, points);
  return self;
}


#line 49
- (jint)length {
  return self->len_;
}


#line 57
- (NSString *)getPreHyphenTextWithInt:(jint)index {
  return [((NSString *) nil_chk(self->word_)) java_substring:0 endIndex:IOSIntArray_Get(nil_chk(self->hyphenPoints_), index)];
}


#line 65
- (NSString *)getPostHyphenTextWithInt:(jint)index {
  return [((NSString *) nil_chk(self->word_)) java_substring:IOSIntArray_Get(nil_chk(self->hyphenPoints_), index)];
}


#line 72
- (IOSIntArray *)getHyphenationPoints {
  return self->hyphenPoints_;
}

- (NSString *)description {
  
#line 78
  JavaLangStringBuffer *str = new_JavaLangStringBuffer_init();
  jint start = 0;
  for (jint i = 0; i < self->len_; i++) {
    (void) [((JavaLangStringBuffer *) nil_chk([str appendWithNSString:[((NSString *) nil_chk(self->word_)) java_substring:start endIndex:IOSIntArray_Get(nil_chk(self->hyphenPoints_), i)]])) appendWithChar:'-'];
    start = IOSIntArray_Get(self->hyphenPoints_, i);
  }
  (void) [str appendWithNSString:[((NSString *) nil_chk(self->word_)) java_substring:start]];
  return [str description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withIntArray:);
  methods[1].selector = @selector(length);
  methods[2].selector = @selector(getPreHyphenTextWithInt:);
  methods[3].selector = @selector(getPostHyphenTextWithInt:);
  methods[4].selector = @selector(getHyphenationPoints);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hyphenPoints_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "word_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "len_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[I", "getPreHyphenText", "I", "getPostHyphenText", "toString" };
  static const J2ObjcClassInfo _ComAowagieTextPdfHyphenationHyphenation = { "Hyphenation", "com.aowagie.text.pdf.hyphenation", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextPdfHyphenationHyphenation;
}

@end


#line 40
void ComAowagieTextPdfHyphenationHyphenation_initWithNSString_withIntArray_(ComAowagieTextPdfHyphenationHyphenation *self, NSString *word, IOSIntArray *points) {
  NSObject_init(self);
  
#line 41
  self->word_ = word;
  self->hyphenPoints_ = points;
  self->len_ = ((IOSIntArray *) nil_chk(points))->size_;
}


#line 40
ComAowagieTextPdfHyphenationHyphenation *new_ComAowagieTextPdfHyphenationHyphenation_initWithNSString_withIntArray_(NSString *word, IOSIntArray *points) {
  J2OBJC_NEW_IMPL(ComAowagieTextPdfHyphenationHyphenation, initWithNSString_withIntArray_, word, points)
}


#line 40
ComAowagieTextPdfHyphenationHyphenation *create_ComAowagieTextPdfHyphenationHyphenation_initWithNSString_withIntArray_(NSString *word, IOSIntArray *points) {
  J2OBJC_CREATE_IMPL(ComAowagieTextPdfHyphenationHyphenation, initWithNSString_withIntArray_, word, points)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextPdfHyphenationHyphenation)

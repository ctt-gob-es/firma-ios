//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/ImgWMF.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/BadElementException.h"
#include "com/aowagie/text/Element.h"
#include "com/aowagie/text/Image.h"
#include "com/aowagie/text/ImgWMF.h"
#include "com/aowagie/text/pdf/PdfTemplate.h"
#include "com/aowagie/text/pdf/codec/wmf/InputMeta.h"
#include "com/aowagie/text/pdf/codec/wmf/MetaDo.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/InputStream.h"
#include "java/net/URL.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/ImgWMF must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextImgWMF ()

/*!
 @brief This method checks if the image is a valid WMF and processes some parameters.
 @throw BadElementExceptionon error
 @throw IOExceptionon error
 */
- (void)processParameters;

@end

__attribute__((unused)) static void ComAowagieTextImgWMF_processParameters(ComAowagieTextImgWMF *self);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/ImgWMF.java"


#line 68
@implementation ComAowagieTextImgWMF


#line 72
- (instancetype)initWithComAowagieTextImage:(ComAowagieTextImage *)image {
  ComAowagieTextImgWMF_initWithComAowagieTextImage_(self, image);
  return self;
}


#line 84
- (instancetype)initWithJavaNetURL:(JavaNetURL *)url {
  ComAowagieTextImgWMF_initWithJavaNetURL_(self, url);
  return self;
}


#line 97
- (instancetype)initWithByteArray:(IOSByteArray *)img {
  ComAowagieTextImgWMF_initWithByteArray_(self, img);
  return self;
}


#line 110
- (void)processParameters {
  ComAowagieTextImgWMF_processParameters(self);
}


#line 155
- (void)readWMFWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)template_ {
  [self setTemplateDataWithComAowagieTextPdfPdfTemplate:template_];
  [((ComAowagieTextPdfPdfTemplate *) nil_chk(template_)) setWidthWithFloat:[self getWidth]];
  [template_ setHeightWithFloat:[self getHeight]];
  JavaIoInputStream *is = nil;
  @try {
    if (self->rawData_ == nil) {
      is = [((JavaNetURL *) nil_chk(self->url_)) openStream];
    }
    else {
      is = new_JavaIoByteArrayInputStream_initWithByteArray_(self->rawData_);
    }
    ComAowagieTextPdfCodecWmfMetaDo *meta = new_ComAowagieTextPdfCodecWmfMetaDo_initWithJavaIoInputStream_withComAowagieTextPdfPdfContentByte_(is, template_);
    [meta readAll];
  }
  @finally {
    if (is != nil) {
      [is close];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, 2, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComAowagieTextImage:);
  methods[1].selector = @selector(initWithJavaNetURL:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(processParameters);
  methods[4].selector = @selector(readWMFWithComAowagieTextPdfPdfTemplate:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComAowagieTextImage;", "LJavaNetURL;", "LComAowagieTextBadElementException;LJavaIoIOException;", "[B", "readWMF", "LComAowagieTextPdfPdfTemplate;", "LJavaIoIOException;LComAowagieTextDocumentException;" };
  static const J2ObjcClassInfo _ComAowagieTextImgWMF = { "ImgWMF", "com.aowagie.text", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextImgWMF;
}

@end


#line 72
void ComAowagieTextImgWMF_initWithComAowagieTextImage_(ComAowagieTextImgWMF *self, ComAowagieTextImage *image) {
  ComAowagieTextImage_initWithComAowagieTextImage_(self, image);
}


#line 72
ComAowagieTextImgWMF *new_ComAowagieTextImgWMF_initWithComAowagieTextImage_(ComAowagieTextImage *image) {
  J2OBJC_NEW_IMPL(ComAowagieTextImgWMF, initWithComAowagieTextImage_, image)
}


#line 72
ComAowagieTextImgWMF *create_ComAowagieTextImgWMF_initWithComAowagieTextImage_(ComAowagieTextImage *image) {
  J2OBJC_CREATE_IMPL(ComAowagieTextImgWMF, initWithComAowagieTextImage_, image)
}


#line 84
void ComAowagieTextImgWMF_initWithJavaNetURL_(ComAowagieTextImgWMF *self, JavaNetURL *url) {
  ComAowagieTextImage_initWithJavaNetURL_(self, url);
  ComAowagieTextImgWMF_processParameters(self);
}


#line 84
ComAowagieTextImgWMF *new_ComAowagieTextImgWMF_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_NEW_IMPL(ComAowagieTextImgWMF, initWithJavaNetURL_, url)
}


#line 84
ComAowagieTextImgWMF *create_ComAowagieTextImgWMF_initWithJavaNetURL_(JavaNetURL *url) {
  J2OBJC_CREATE_IMPL(ComAowagieTextImgWMF, initWithJavaNetURL_, url)
}


#line 97
void ComAowagieTextImgWMF_initWithByteArray_(ComAowagieTextImgWMF *self, IOSByteArray *img) {
  ComAowagieTextImage_initWithJavaNetURL_(self, nil);
  self->rawData_ = img;
  self->originalData_ = img;
  ComAowagieTextImgWMF_processParameters(self);
}


#line 97
ComAowagieTextImgWMF *new_ComAowagieTextImgWMF_initWithByteArray_(IOSByteArray *img) {
  J2OBJC_NEW_IMPL(ComAowagieTextImgWMF, initWithByteArray_, img)
}


#line 97
ComAowagieTextImgWMF *create_ComAowagieTextImgWMF_initWithByteArray_(IOSByteArray *img) {
  J2OBJC_CREATE_IMPL(ComAowagieTextImgWMF, initWithByteArray_, img)
}


#line 110
void ComAowagieTextImgWMF_processParameters(ComAowagieTextImgWMF *self) {
  self->type_ = ComAowagieTextElement_IMGTEMPLATE;
  self->originalType_ = ComAowagieTextImage_ORIGINAL_WMF;
  JavaIoInputStream *is = nil;
  @try {
    NSString *errorID;
    if (self->rawData_ == nil) {
      is = [((JavaNetURL *) nil_chk(self->url_)) openStream];
      errorID = [((JavaNetURL *) nil_chk(self->url_)) description];
    }
    else {
      is = new_JavaIoByteArrayInputStream_initWithByteArray_(self->rawData_);
      errorID = @"Byte array";
    }
    ComAowagieTextPdfCodecWmfInputMeta *in = new_ComAowagieTextPdfCodecWmfInputMeta_initWithJavaIoInputStream_(is);
    if ([in readInt] != (jint) 0x9AC6CDD7) {
      @throw new_ComAowagieTextBadElementException_initWithNSString_(JreStrcat("$$", errorID, @" is not a valid placeable windows metafile."));
    }
    [in readWord];
    jint left = [in readShort];
    jint top = [in readShort];
    jint right = [in readShort];
    jint bottom = [in readShort];
    jint inch = [in readWord];
    self->dpiX_ = 72;
    self->dpiY_ = 72;
    self->scaledHeight_ = (jfloat) (bottom - top) / inch * 72.0f;
    [self setTopWithFloat:self->scaledHeight_];
    self->scaledWidth_ = (jfloat) (right - left) / inch * 72.0f;
    [self setRightWithFloat:self->scaledWidth_];
  }
  @finally {
    if (is != nil) {
      [is close];
    }
    self->plainWidth_ = [self getWidth];
    self->plainHeight_ = [self getHeight];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextImgWMF)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Image.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/aowagie/text/Annotation.h"
#include "com/aowagie/text/BadElementException.h"
#include "com/aowagie/text/DocumentException.h"
#include "com/aowagie/text/Element.h"
#include "com/aowagie/text/ExceptionConverter.h"
#include "com/aowagie/text/Image.h"
#include "com/aowagie/text/ImgCCITT.h"
#include "com/aowagie/text/ImgJBIG2.h"
#include "com/aowagie/text/ImgRaw.h"
#include "com/aowagie/text/ImgTemplate.h"
#include "com/aowagie/text/ImgWMF.h"
#include "com/aowagie/text/Jpeg.h"
#include "com/aowagie/text/Jpeg2000.h"
#include "com/aowagie/text/Rectangle.h"
#include "com/aowagie/text/Utilities.h"
#include "com/aowagie/text/pdf/PRIndirectReference.h"
#include "com/aowagie/text/pdf/PdfDictionary.h"
#include "com/aowagie/text/pdf/PdfIndirectReference.h"
#include "com/aowagie/text/pdf/PdfName.h"
#include "com/aowagie/text/pdf/PdfNumber.h"
#include "com/aowagie/text/pdf/PdfOCG.h"
#include "com/aowagie/text/pdf/PdfObject.h"
#include "com/aowagie/text/pdf/PdfReader.h"
#include "com/aowagie/text/pdf/PdfStream.h"
#include "com/aowagie/text/pdf/PdfTemplate.h"
#include "com/aowagie/text/pdf/RandomAccessFileOrArray.h"
#include "com/aowagie/text/pdf/codec/BmpImage.h"
#include "com/aowagie/text/pdf/codec/CCITTG4Encoder.h"
#include "com/aowagie/text/pdf/codec/GifImage.h"
#include "com/aowagie/text/pdf/codec/JBIG2Image.h"
#include "com/aowagie/text/pdf/codec/PngImage.h"
#include "com/aowagie/text/pdf/codec/TiffImage.h"
#include "harmony/java/awt/color/ICC_Profile.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/reflect/Constructor.h"
#include "java/net/URL.h"

#if !__has_feature(objc_arc)
#error "com/aowagie/text/Image must be compiled with ARC (-fobjc-arc)"
#endif

@interface ComAowagieTextImage () {
 @public
  /*!
   @brief Holds value of property directReference.
   An image is embedded into a PDF as an Image XObject.
  This object is referenced by a PdfIndirectReference object.
   */
  ComAowagieTextPdfPdfIndirectReference *directReference_;
  /*!
   @brief Holds value of property initialRotation.
   */
  jfloat initialRotation_;
  /*!
   @brief Holds value of property widthPercentage.
   */
  jfloat widthPercentage_;
  /*!
   @brief Holds value of property XYRatio.
   */
  jfloat XYRatio_;
  /*!
   @brief a dictionary with additional information
   */
  ComAowagieTextPdfPdfDictionary *additional_;
  /*!
   @brief Holds value of property smask.
   */
  jboolean smask_;
}

@end

J2OBJC_FIELD_SETTER(ComAowagieTextImage, directReference_, ComAowagieTextPdfPdfIndirectReference *)
J2OBJC_FIELD_SETTER(ComAowagieTextImage, additional_, ComAowagieTextPdfPdfDictionary *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/com/aowagie/text/Image.java"

jlong ComAowagieTextImage_serialId = 0;


#line 87
@implementation ComAowagieTextImage


#line 224
- (instancetype)initWithJavaNetURL:(JavaNetURL *)url {
  ComAowagieTextImage_initWithJavaNetURL_(self, url);
  return self;
}


#line 241
+ (ComAowagieTextImage *)getInstanceWithJavaNetURL:(JavaNetURL *)url {
  return ComAowagieTextImage_getInstanceWithJavaNetURL_(url);
}


#line 343
+ (ComAowagieTextImage *)getInstanceWithNSString:(NSString *)filename {
  return ComAowagieTextImage_getInstanceWithNSString_(filename);
}


#line 358
+ (ComAowagieTextImage *)getInstanceWithByteArray:(IOSByteArray *)imgb {
  return ComAowagieTextImage_getInstanceWithByteArray_(imgb);
}


#line 468
+ (ComAowagieTextImage *)getInstanceWithInt:(jint)width
                                    withInt:(jint)height
                                    withInt:(jint)components
                                    withInt:(jint)bpc
                              withByteArray:(IOSByteArray *)data {
  return ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_(width, height, components, bpc, data);
}


#line 482
+ (ComAowagieTextImage *)getInstanceWithInt:(jint)width
                                    withInt:(jint)height
                              withByteArray:(IOSByteArray *)data
                              withByteArray:(IOSByteArray *)globals {
  return ComAowagieTextImage_getInstanceWithInt_withInt_withByteArray_withByteArray_(width, height, data, globals);
}


#line 511
+ (ComAowagieTextImage *)getInstanceWithInt:(jint)width
                                    withInt:(jint)height
                                withBoolean:(jboolean)reverseBits
                                    withInt:(jint)typeCCITT
                                    withInt:(jint)parameters
                              withByteArray:(IOSByteArray *)data {
  return ComAowagieTextImage_getInstanceWithInt_withInt_withBoolean_withInt_withInt_withByteArray_(width, height, reverseBits, typeCCITT, parameters, data);
}


#line 545
+ (ComAowagieTextImage *)getInstanceWithInt:(jint)width
                                    withInt:(jint)height
                                withBoolean:(jboolean)reverseBits
                                    withInt:(jint)typeCCITT
                                    withInt:(jint)parameters
                              withByteArray:(IOSByteArray *)data
                               withIntArray:(IOSIntArray *)transparency {
  return ComAowagieTextImage_getInstanceWithInt_withInt_withBoolean_withInt_withInt_withByteArray_withIntArray_(width, height, reverseBits, typeCCITT, parameters, data, transparency);
}


#line 578
+ (ComAowagieTextImage *)getInstanceWithInt:(jint)width
                                    withInt:(jint)height
                                    withInt:(jint)components
                                    withInt:(jint)bpc
                              withByteArray:(IOSByteArray *)data
                               withIntArray:(IOSIntArray *)transparency {
  return ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_withIntArray_(width, height, components, bpc, data, transparency);
}


#line 605
+ (ComAowagieTextImage *)getInstanceWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)template_ {
  return ComAowagieTextImage_getInstanceWithComAowagieTextPdfPdfTemplate_(template_);
}


#line 871
- (ComAowagieTextPdfPdfIndirectReference *)getDirectReference {
  return self->directReference_;
}


#line 879
- (void)setDirectReferenceWithComAowagieTextPdfPdfIndirectReference:(ComAowagieTextPdfPdfIndirectReference *)directReference {
  self->directReference_ = directReference;
}


#line 889
+ (ComAowagieTextImage *)getInstanceWithComAowagieTextPdfPRIndirectReference:(ComAowagieTextPdfPRIndirectReference *)ref {
  return ComAowagieTextImage_getInstanceWithComAowagieTextPdfPRIndirectReference_(ref);
}


#line 921
- (instancetype)initWithComAowagieTextImage:(ComAowagieTextImage *)image {
  ComAowagieTextImage_initWithComAowagieTextImage_(self, image);
  return self;
}


#line 975
+ (ComAowagieTextImage *)getInstanceWithComAowagieTextImage:(ComAowagieTextImage *)image {
  return ComAowagieTextImage_getInstanceWithComAowagieTextImage_(image);
}


#line 997
- (jint)type {
  
#line 999
  return self->type_;
}


#line 1006
- (jboolean)isNestable {
  
#line 1008
  return true;
}


#line 1020
- (jboolean)isJpeg {
  return self->type_ == ComAowagieTextElement_JPEG;
}


#line 1031
- (jboolean)isImgRaw {
  return self->type_ == ComAowagieTextElement_IMGRAW;
}


#line 1042
- (jboolean)isImgTemplate {
  return self->type_ == ComAowagieTextElement_IMGTEMPLATE;
}


#line 1055
- (JavaNetURL *)getUrl {
  return self->url_;
}


#line 1065
- (void)setUrlWithJavaNetURL:(JavaNetURL *)url {
  self->url_ = url;
}


#line 1077
- (IOSByteArray *)getRawData {
  return self->rawData_;
}


#line 1089
- (jint)getBpc {
  return self->bpc_;
}


#line 1101
- (ComAowagieTextPdfPdfTemplate *)getTemplateData {
  return IOSObjectArray_Get(nil_chk(self->template__), 0);
}


#line 1111
- (void)setTemplateDataWithComAowagieTextPdfPdfTemplate:(ComAowagieTextPdfPdfTemplate *)template_ {
  (void) IOSObjectArray_Set(nil_chk(self->template__), 0, template_);
}


#line 1120
- (jint)getAlignment {
  return self->alignment_;
}


#line 1131
- (void)setAlignmentWithInt:(jint)alignment {
  self->alignment_ = alignment;
}


#line 1141
- (NSString *)getAlt {
  return self->alt_;
}


#line 1152
- (void)setAltWithNSString:(NSString *)alt {
  self->alt_ = alt;
}


#line 1163
- (void)setAbsolutePositionWithFloat:(jfloat)absoluteX
                           withFloat:(jfloat)absoluteY {
  
#line 1164
  self->absoluteX_ = absoluteX;
  self->absoluteY_ = absoluteY;
}


#line 1174
- (jboolean)hasAbsoluteX {
  return !JavaLangFloat_isNaNWithFloat_(self->absoluteX_);
}


#line 1183
- (jfloat)getAbsoluteX {
  return self->absoluteX_;
}


#line 1193
- (jboolean)hasAbsoluteY {
  return !JavaLangFloat_isNaNWithFloat_(self->absoluteY_);
}


#line 1202
- (jfloat)getAbsoluteY {
  return self->absoluteY_;
}


#line 1213
- (jfloat)getScaledWidth {
  return self->scaledWidth_;
}


#line 1222
- (jfloat)getScaledHeight {
  return self->scaledHeight_;
}


#line 1231
- (jfloat)getPlainWidth {
  return self->plainWidth_;
}


#line 1240
- (jfloat)getPlainHeight {
  return self->plainHeight_;
}


#line 1252
- (void)scaleAbsoluteWithFloat:(jfloat)newWidth
                     withFloat:(jfloat)newHeight {
  
#line 1253
  self->plainWidth_ = newWidth;
  self->plainHeight_ = newHeight;
  IOSFloatArray *matrix = [self matrix];
  self->scaledWidth_ = IOSFloatArray_Get(nil_chk(matrix), ComAowagieTextImage_DX) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CX);
  self->scaledHeight_ = IOSFloatArray_Get(matrix, ComAowagieTextImage_DY) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CY);
  [self setWidthPercentageWithFloat:0];
}


#line 1267
- (void)scaleAbsoluteWidthWithFloat:(jfloat)newWidth {
  self->plainWidth_ = newWidth;
  IOSFloatArray *matrix = [self matrix];
  self->scaledWidth_ = IOSFloatArray_Get(nil_chk(matrix), ComAowagieTextImage_DX) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CX);
  self->scaledHeight_ = IOSFloatArray_Get(matrix, ComAowagieTextImage_DY) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CY);
  [self setWidthPercentageWithFloat:0];
}


#line 1281
- (void)scaleAbsoluteHeightWithFloat:(jfloat)newHeight {
  self->plainHeight_ = newHeight;
  IOSFloatArray *matrix = [self matrix];
  self->scaledWidth_ = IOSFloatArray_Get(nil_chk(matrix), ComAowagieTextImage_DX) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CX);
  self->scaledHeight_ = IOSFloatArray_Get(matrix, ComAowagieTextImage_DY) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CY);
  [self setWidthPercentageWithFloat:0];
}


#line 1295
- (void)scalePercentWithFloat:(jfloat)percent {
  [self scalePercentWithFloat:percent withFloat:percent];
}


#line 1307
- (void)scalePercentWithFloat:(jfloat)percentX
                    withFloat:(jfloat)percentY {
  
#line 1308
  self->plainWidth_ = [self getWidth] * percentX / 100.0f;
  self->plainHeight_ = [self getHeight] * percentY / 100.0f;
  IOSFloatArray *matrix = [self matrix];
  self->scaledWidth_ = IOSFloatArray_Get(nil_chk(matrix), ComAowagieTextImage_DX) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CX);
  self->scaledHeight_ = IOSFloatArray_Get(matrix, ComAowagieTextImage_DY) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CY);
  [self setWidthPercentageWithFloat:0];
}


#line 1324
- (void)scaleToFitWithFloat:(jfloat)fitWidth
                  withFloat:(jfloat)fitHeight {
  
#line 1325
  [self scalePercentWithFloat:100];
  jfloat percentX = fitWidth * 100 / [self getScaledWidth];
  jfloat percentY = fitHeight * 100 / [self getScaledHeight];
  [self scalePercentWithFloat:percentX < percentY ? percentX : percentY];
  [self setWidthPercentageWithFloat:0];
}


#line 1337
- (IOSFloatArray *)matrix {
  IOSFloatArray *matrix = [IOSFloatArray newArrayWithLength:8];
  jfloat cosX = (jfloat) JavaLangMath_cosWithDouble_(self->rotationRadians_);
  jfloat sinX = (jfloat) JavaLangMath_sinWithDouble_(self->rotationRadians_);
  *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_AX) = self->plainWidth_ * cosX;
  *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_AY) = self->plainWidth_ * sinX;
  *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_BX) = -self->plainHeight_ * sinX;
  *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_BY) = self->plainHeight_ * cosX;
  if (self->rotationRadians_ < JavaLangMath_PI / 2.0f) {
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CX) = IOSFloatArray_Get(matrix, ComAowagieTextImage_BX);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CY) = 0;
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DX) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AX);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DY) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AY) + IOSFloatArray_Get(matrix, ComAowagieTextImage_BY);
  }
  else
#line 1350
  if (self->rotationRadians_ < JavaLangMath_PI) {
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CX) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AX) + IOSFloatArray_Get(matrix, ComAowagieTextImage_BX);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CY) = IOSFloatArray_Get(matrix, ComAowagieTextImage_BY);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DX) = 0;
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DY) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AY);
  }
  else
#line 1355
  if (self->rotationRadians_ < JavaLangMath_PI * 1.5f) {
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CX) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AX);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CY) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AY) + IOSFloatArray_Get(matrix, ComAowagieTextImage_BY);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DX) = IOSFloatArray_Get(matrix, ComAowagieTextImage_BX);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DY) = 0;
  }
  else {
    
#line 1361
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CX) = 0;
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_CY) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AY);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DX) = IOSFloatArray_Get(matrix, ComAowagieTextImage_AX) + IOSFloatArray_Get(matrix, ComAowagieTextImage_BX);
    *IOSFloatArray_GetRef(matrix, ComAowagieTextImage_DY) = IOSFloatArray_Get(matrix, ComAowagieTextImage_BY);
  }
  return matrix;
}


#line 1376
+ (JavaLangLong *)getSerialId {
  return ComAowagieTextImage_getSerialId();
}


#line 1386
- (JavaLangLong *)getMySerialId {
  return self->mySerialId_;
}


#line 1402
- (jfloat)getImageRotation {
  jdouble d = 2.0 * JavaLangMath_PI;
  jfloat rot = (jfloat) (fmod((self->rotationRadians_ - self->initialRotation_), d));
  if (rot < 0) {
    JrePlusAssignFloatD(&rot, d);
  }
  return rot;
}


#line 1417
- (void)setRotationWithFloat:(jfloat)r {
  jdouble d = 2.0 * JavaLangMath_PI;
  self->rotationRadians_ = (jfloat) (fmod((r + self->initialRotation_), d));
  if (self->rotationRadians_ < 0) {
    JrePlusAssignFloatD(&self->rotationRadians_, d);
  }
  IOSFloatArray *matrix = [self matrix];
  self->scaledWidth_ = IOSFloatArray_Get(nil_chk(matrix), ComAowagieTextImage_DX) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CX);
  self->scaledHeight_ = IOSFloatArray_Get(matrix, ComAowagieTextImage_DY) - IOSFloatArray_Get(matrix, ComAowagieTextImage_CY);
}


#line 1434
- (void)setRotationDegreesWithFloat:(jfloat)deg {
  jdouble d = JavaLangMath_PI;
  [self setRotationWithFloat:deg / 180 * (jfloat) d];
}


#line 1443
- (jfloat)getInitialRotation {
  return self->initialRotation_;
}


#line 1452
- (void)setInitialRotationWithFloat:(jfloat)initialRotation {
  jfloat old_rot = self->rotationRadians_ - self->initialRotation_;
  self->initialRotation_ = initialRotation;
  [self setRotationWithFloat:old_rot];
}


#line 1477
- (jfloat)getIndentationLeft {
  return self->indentationLeft_;
}


#line 1486
- (void)setIndentationLeftWithFloat:(jfloat)f {
  self->indentationLeft_ = f;
}


#line 1495
- (jfloat)getIndentationRight {
  return self->indentationRight_;
}


#line 1504
- (void)setIndentationRightWithFloat:(jfloat)f {
  self->indentationRight_ = f;
}


#line 1513
- (jfloat)getSpacingBefore {
  return self->spacingBefore_;
}


#line 1524
- (void)setSpacingBeforeWithFloat:(jfloat)spacing {
  self->spacingBefore_ = spacing;
}


#line 1533
- (jfloat)getSpacingAfter {
  return self->spacingAfter_;
}


#line 1544
- (void)setSpacingAfterWithFloat:(jfloat)spacing {
  self->spacingAfter_ = spacing;
}


#line 1560
- (jfloat)getWidthPercentage {
  return self->widthPercentage_;
}


#line 1570
- (void)setWidthPercentageWithFloat:(jfloat)widthPercentage {
  self->widthPercentage_ = widthPercentage;
}


#line 1585
- (void)setAnnotationWithComAowagieTextAnnotation:(ComAowagieTextAnnotation *)annotation {
  self->annotation_ = annotation;
}


#line 1594
- (ComAowagieTextAnnotation *)getAnnotation {
  return self->annotation_;
}


#line 1609
- (id<ComAowagieTextPdfPdfOCG>)getLayer {
  return self->layer_;
}


#line 1619
- (void)setLayerWithComAowagieTextPdfPdfOCG:(id<ComAowagieTextPdfPdfOCG>)layer {
  self->layer_ = layer;
}


#line 1633
- (jboolean)isInterpolation {
  return self->interpolation_;
}


#line 1644
- (void)setInterpolationWithBoolean:(jboolean)interpolation {
  self->interpolation_ = interpolation;
}


#line 1662
- (jint)getOriginalType {
  return self->originalType_;
}


#line 1673
- (void)setOriginalTypeWithInt:(jint)originalType {
  self->originalType_ = originalType;
}


#line 1683
- (IOSByteArray *)getOriginalData {
  return self->originalData_;
}


#line 1694
- (void)setOriginalDataWithByteArray:(IOSByteArray *)originalData {
  self->originalData_ = originalData;
}


#line 1709
- (jboolean)isDeflated {
  return self->deflated_;
}


#line 1719
- (void)setDeflatedWithBoolean:(jboolean)deflated {
  self->deflated_ = deflated;
}


#line 1736
- (jint)getDpiX {
  return self->dpiX_;
}


#line 1745
- (jint)getDpiY {
  return self->dpiY_;
}


#line 1757
- (void)setDpiWithInt:(jint)dpiX
              withInt:(jint)dpiY {
  
#line 1758
  self->dpiX_ = dpiX;
  self->dpiY_ = dpiY;
}


#line 1772
- (jfloat)getXYRatio {
  return self->XYRatio_;
}


#line 1782
- (void)setXYRatioWithFloat:(jfloat)XYRatio {
  self->XYRatio_ = XYRatio;
}


#line 1798
- (jint)getColorspace {
  return self->colorspace_;
}


#line 1810
- (jboolean)isInverted {
  return self->invert_;
}


#line 1820
- (void)setInvertedWithBoolean:(jboolean)invert {
  self->invert_ = invert;
}


#line 1833
- (void)tagICCWithHarmonyJavaAwtColorICC_Profile:(HarmonyJavaAwtColorICC_Profile *)profile {
  self->profile_ = profile;
}


#line 1842
- (jboolean)hasICCProfile {
  return self->profile_ != nil;
}


#line 1851
- (HarmonyJavaAwtColorICC_Profile *)getICCProfile {
  return self->profile_;
}


#line 1863
- (ComAowagieTextPdfPdfDictionary *)getAdditional {
  return self->additional_;
}


#line 1873
- (void)setAdditionalWithComAowagieTextPdfPdfDictionary:(ComAowagieTextPdfPdfDictionary *)additional {
  self->additional_ = additional;
}


#line 1891
- (jboolean)isMask {
  return self->mask_;
}


#line 1901
- (void)makeMask {
  if (![self isMaskCandidate]) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(@"This image can not be an image mask.");
  }
  self->mask_ = true;
}


#line 1914
- (jboolean)isMaskCandidate {
  if (self->type_ == ComAowagieTextElement_IMGRAW) {
    if (self->bpc_ > (jint) 0xff) {
      return true;
    }
  }
  return self->colorspace_ == 1;
}


#line 1928
- (ComAowagieTextImage *)getImageMask {
  return self->imageMask_;
}


#line 1940
- (void)setImageMaskWithComAowagieTextImage:(ComAowagieTextImage *)mask {
  if (self->mask_) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(
#line 1943
    @"An image mask cannot contain another image mask.");
  }
  if (!((ComAowagieTextImage *) nil_chk(mask))->mask_) {
    @throw new_ComAowagieTextDocumentException_initWithNSString_(
#line 1947
    @"The image mask is not a mask. Did you do makeMask()?");
  }
  self->imageMask_ = mask;
  self->smask_ = (mask->bpc_ > 1 && mask->bpc_ <= 8);
}


#line 1959
- (jboolean)isSmask {
  return self->smask_;
}


#line 1969
- (void)setSmaskWithBoolean:(jboolean)smask {
  self->smask_ = smask;
}


#line 1982
- (IOSIntArray *)getTransparency {
  return self->transparency_;
}


#line 1992
- (void)setTransparencyWithIntArray:(IOSIntArray *)transparency {
  self->transparency_ = transparency;
}


#line 2002
- (jint)getCompressionLevel {
  return self->compressionLevel_;
}


#line 2011
- (void)setCompressionLevelWithInt:(jint)compressionLevel {
  if (compressionLevel < ComAowagieTextPdfPdfStream_NO_COMPRESSION || compressionLevel > ComAowagieTextPdfPdfStream_BEST_COMPRESSION) {
    self->compressionLevel_ = ComAowagieTextPdfPdfStream_DEFAULT_COMPRESSION;
  }
  else {
    
#line 2015
    self->compressionLevel_ = compressionLevel;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 0, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 3, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 4, 2, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 5, 6, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 7, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 8, 6, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 9, 6, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 10, 6, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 11, 6, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfIndirectReference;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 14, 6, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 15, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x9, 1, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNetURL;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfTemplate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 23, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 22, -1, -1, -1, -1 },
    { NULL, "[F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x2c, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 25, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 25, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 25, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 33, 25, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 34, 25, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 25, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 36, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 38, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextAnnotation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfOCG;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 40, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 41, 42, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 43, 19, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 45, 42, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 46, 47, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 48, 25, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 49, 42, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 50, 51, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextPdfPdfDictionary;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 52, 53, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 54, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComAowagieTextImage;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 55, 15, 54, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 56, 42, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 57, 58, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaNetURL:);
  methods[1].selector = @selector(getInstanceWithJavaNetURL:);
  methods[2].selector = @selector(getInstanceWithNSString:);
  methods[3].selector = @selector(getInstanceWithByteArray:);
  methods[4].selector = @selector(getInstanceWithInt:withInt:withInt:withInt:withByteArray:);
  methods[5].selector = @selector(getInstanceWithInt:withInt:withByteArray:withByteArray:);
  methods[6].selector = @selector(getInstanceWithInt:withInt:withBoolean:withInt:withInt:withByteArray:);
  methods[7].selector = @selector(getInstanceWithInt:withInt:withBoolean:withInt:withInt:withByteArray:withIntArray:);
  methods[8].selector = @selector(getInstanceWithInt:withInt:withInt:withInt:withByteArray:withIntArray:);
  methods[9].selector = @selector(getInstanceWithComAowagieTextPdfPdfTemplate:);
  methods[10].selector = @selector(getDirectReference);
  methods[11].selector = @selector(setDirectReferenceWithComAowagieTextPdfPdfIndirectReference:);
  methods[12].selector = @selector(getInstanceWithComAowagieTextPdfPRIndirectReference:);
  methods[13].selector = @selector(initWithComAowagieTextImage:);
  methods[14].selector = @selector(getInstanceWithComAowagieTextImage:);
  methods[15].selector = @selector(type);
  methods[16].selector = @selector(isNestable);
  methods[17].selector = @selector(isJpeg);
  methods[18].selector = @selector(isImgRaw);
  methods[19].selector = @selector(isImgTemplate);
  methods[20].selector = @selector(getUrl);
  methods[21].selector = @selector(setUrlWithJavaNetURL:);
  methods[22].selector = @selector(getRawData);
  methods[23].selector = @selector(getBpc);
  methods[24].selector = @selector(getTemplateData);
  methods[25].selector = @selector(setTemplateDataWithComAowagieTextPdfPdfTemplate:);
  methods[26].selector = @selector(getAlignment);
  methods[27].selector = @selector(setAlignmentWithInt:);
  methods[28].selector = @selector(getAlt);
  methods[29].selector = @selector(setAltWithNSString:);
  methods[30].selector = @selector(setAbsolutePositionWithFloat:withFloat:);
  methods[31].selector = @selector(hasAbsoluteX);
  methods[32].selector = @selector(getAbsoluteX);
  methods[33].selector = @selector(hasAbsoluteY);
  methods[34].selector = @selector(getAbsoluteY);
  methods[35].selector = @selector(getScaledWidth);
  methods[36].selector = @selector(getScaledHeight);
  methods[37].selector = @selector(getPlainWidth);
  methods[38].selector = @selector(getPlainHeight);
  methods[39].selector = @selector(scaleAbsoluteWithFloat:withFloat:);
  methods[40].selector = @selector(scaleAbsoluteWidthWithFloat:);
  methods[41].selector = @selector(scaleAbsoluteHeightWithFloat:);
  methods[42].selector = @selector(scalePercentWithFloat:);
  methods[43].selector = @selector(scalePercentWithFloat:withFloat:);
  methods[44].selector = @selector(scaleToFitWithFloat:withFloat:);
  methods[45].selector = @selector(matrix);
  methods[46].selector = @selector(getSerialId);
  methods[47].selector = @selector(getMySerialId);
  methods[48].selector = @selector(getImageRotation);
  methods[49].selector = @selector(setRotationWithFloat:);
  methods[50].selector = @selector(setRotationDegreesWithFloat:);
  methods[51].selector = @selector(getInitialRotation);
  methods[52].selector = @selector(setInitialRotationWithFloat:);
  methods[53].selector = @selector(getIndentationLeft);
  methods[54].selector = @selector(setIndentationLeftWithFloat:);
  methods[55].selector = @selector(getIndentationRight);
  methods[56].selector = @selector(setIndentationRightWithFloat:);
  methods[57].selector = @selector(getSpacingBefore);
  methods[58].selector = @selector(setSpacingBeforeWithFloat:);
  methods[59].selector = @selector(getSpacingAfter);
  methods[60].selector = @selector(setSpacingAfterWithFloat:);
  methods[61].selector = @selector(getWidthPercentage);
  methods[62].selector = @selector(setWidthPercentageWithFloat:);
  methods[63].selector = @selector(setAnnotationWithComAowagieTextAnnotation:);
  methods[64].selector = @selector(getAnnotation);
  methods[65].selector = @selector(getLayer);
  methods[66].selector = @selector(setLayerWithComAowagieTextPdfPdfOCG:);
  methods[67].selector = @selector(isInterpolation);
  methods[68].selector = @selector(setInterpolationWithBoolean:);
  methods[69].selector = @selector(getOriginalType);
  methods[70].selector = @selector(setOriginalTypeWithInt:);
  methods[71].selector = @selector(getOriginalData);
  methods[72].selector = @selector(setOriginalDataWithByteArray:);
  methods[73].selector = @selector(isDeflated);
  methods[74].selector = @selector(setDeflatedWithBoolean:);
  methods[75].selector = @selector(getDpiX);
  methods[76].selector = @selector(getDpiY);
  methods[77].selector = @selector(setDpiWithInt:withInt:);
  methods[78].selector = @selector(getXYRatio);
  methods[79].selector = @selector(setXYRatioWithFloat:);
  methods[80].selector = @selector(getColorspace);
  methods[81].selector = @selector(isInverted);
  methods[82].selector = @selector(setInvertedWithBoolean:);
  methods[83].selector = @selector(tagICCWithHarmonyJavaAwtColorICC_Profile:);
  methods[84].selector = @selector(hasICCProfile);
  methods[85].selector = @selector(getICCProfile);
  methods[86].selector = @selector(getAdditional);
  methods[87].selector = @selector(setAdditionalWithComAowagieTextPdfPdfDictionary:);
  methods[88].selector = @selector(isMask);
  methods[89].selector = @selector(makeMask);
  methods[90].selector = @selector(isMaskCandidate);
  methods[91].selector = @selector(getImageMask);
  methods[92].selector = @selector(setImageMaskWithComAowagieTextImage:);
  methods[93].selector = @selector(isSmask);
  methods[94].selector = @selector(setSmaskWithBoolean:);
  methods[95].selector = @selector(getTransparency);
  methods[96].selector = @selector(setTransparencyWithIntArray:);
  methods[97].selector = @selector(getCompressionLevel);
  methods[98].selector = @selector(setCompressionLevelWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT", "I", .constantValue.asInt = ComAowagieTextImage_DEFAULT, 0x19, -1, -1, -1, -1 },
    { "RIGHT", "I", .constantValue.asInt = ComAowagieTextImage_RIGHT, 0x19, -1, -1, -1, -1 },
    { "LEFT", "I", .constantValue.asInt = ComAowagieTextImage_LEFT, 0x19, -1, -1, -1, -1 },
    { "MIDDLE", "I", .constantValue.asInt = ComAowagieTextImage_MIDDLE, 0x19, -1, -1, -1, -1 },
    { "TEXTWRAP", "I", .constantValue.asInt = ComAowagieTextImage_TEXTWRAP, 0x19, -1, -1, -1, -1 },
    { "UNDERLYING", "I", .constantValue.asInt = ComAowagieTextImage_UNDERLYING, 0x19, -1, -1, -1, -1 },
    { "AX", "I", .constantValue.asInt = ComAowagieTextImage_AX, 0x19, -1, -1, -1, -1 },
    { "AY", "I", .constantValue.asInt = ComAowagieTextImage_AY, 0x19, -1, -1, -1, -1 },
    { "BX", "I", .constantValue.asInt = ComAowagieTextImage_BX, 0x19, -1, -1, -1, -1 },
    { "BY", "I", .constantValue.asInt = ComAowagieTextImage_BY, 0x19, -1, -1, -1, -1 },
    { "CX", "I", .constantValue.asInt = ComAowagieTextImage_CX, 0x19, -1, -1, -1, -1 },
    { "CY", "I", .constantValue.asInt = ComAowagieTextImage_CY, 0x19, -1, -1, -1, -1 },
    { "DX", "I", .constantValue.asInt = ComAowagieTextImage_DX, 0x19, -1, -1, -1, -1 },
    { "DY", "I", .constantValue.asInt = ComAowagieTextImage_DY, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_NONE", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_NONE, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_JPEG", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_JPEG, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_PNG", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_PNG, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_GIF", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_GIF, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_BMP", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_BMP, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_TIFF", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_TIFF, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_WMF", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_WMF, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_PS", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_PS, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_JPEG2000", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_JPEG2000, 0x19, -1, -1, -1, -1 },
    { "ORIGINAL_JBIG2", "I", .constantValue.asInt = ComAowagieTextImage_ORIGINAL_JBIG2, 0x19, -1, -1, -1, -1 },
    { "type_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "url_", "LJavaNetURL;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "rawData_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "bpc_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "template__", "[LComAowagieTextPdfPdfTemplate;", .constantValue.asLong = 0, 0x4, 60, -1, -1, -1 },
    { "alignment_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "alt_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "absoluteX_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "absoluteY_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "plainWidth_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "plainHeight_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "scaledWidth_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "scaledHeight_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "compressionLevel_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mySerialId_", "LJavaLangLong;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "directReference_", "LComAowagieTextPdfPdfIndirectReference;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialId", "J", .constantValue.asLong = 0, 0x8, -1, 61, -1, -1 },
    { "rotationRadians_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "initialRotation_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "indentationLeft_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "indentationRight_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "spacingBefore_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "spacingAfter_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "widthPercentage_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "annotation_", "LComAowagieTextAnnotation;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "layer_", "LComAowagieTextPdfPdfOCG;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "interpolation_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "originalType_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "originalData_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "deflated_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "dpiX_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "dpiY_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "XYRatio_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "colorspace_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "invert_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "profile_", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "additional_", "LComAowagieTextPdfPdfDictionary;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mask_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "imageMask_", "LComAowagieTextImage;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "smask_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "transparency_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNetURL;", "getInstance", "LComAowagieTextBadElementException;LJavaNetMalformedURLException;LJavaIoIOException;", "LNSString;", "[B", "IIII[B", "LComAowagieTextBadElementException;", "II[B[B", "IIZII[B", "IIZII[B[I", "IIII[B[I", "LComAowagieTextPdfPdfTemplate;", "setDirectReference", "LComAowagieTextPdfPdfIndirectReference;", "LComAowagieTextPdfPRIndirectReference;", "LComAowagieTextImage;", "setUrl", "setTemplateData", "setAlignment", "I", "setAlt", "setAbsolutePosition", "FF", "scaleAbsolute", "scaleAbsoluteWidth", "F", "scaleAbsoluteHeight", "scalePercent", "scaleToFit", "setRotation", "setRotationDegrees", "setInitialRotation", "setIndentationLeft", "setIndentationRight", "setSpacingBefore", "setSpacingAfter", "setWidthPercentage", "setAnnotation", "LComAowagieTextAnnotation;", "setLayer", "LComAowagieTextPdfPdfOCG;", "setInterpolation", "Z", "setOriginalType", "setOriginalData", "setDeflated", "setDpi", "II", "setXYRatio", "setInverted", "tagICC", "LHarmonyJavaAwtColorICC_Profile;", "setAdditional", "LComAowagieTextPdfPdfDictionary;", "LComAowagieTextDocumentException;", "setImageMask", "setSmask", "setTransparency", "[I", "setCompressionLevel", "template", &ComAowagieTextImage_serialId };
  static const J2ObjcClassInfo _ComAowagieTextImage = { "Image", "com.aowagie.text", ptrTable, methods, fields, 7, 0x401, 99, 65, -1, -1, -1, -1, -1 };
  return &_ComAowagieTextImage;
}

@end


#line 224
void ComAowagieTextImage_initWithJavaNetURL_(ComAowagieTextImage *self, JavaNetURL *url) {
  ComAowagieTextRectangle_initWithFloat_withFloat_(self, 0, 0);
  self->bpc_ =
#line 178
  1;
  self->template__ = [IOSObjectArray newArrayWithLength:
#line 181
  1 type:ComAowagieTextPdfPdfTemplate_class_()];
  self->absoluteX_ =
#line 190
  JavaLangFloat_NaN;
  self->absoluteY_ =
#line 193
  JavaLangFloat_NaN;
  self->compressionLevel_ =
#line 211
  ComAowagieTextPdfPdfStream_DEFAULT_COMPRESSION;
  self->mySerialId_ = ComAowagieTextImage_getSerialId();
  self->indentationLeft_ =
#line 1461
  0;
  self->indentationRight_ =
#line 1464
  0;
  self->widthPercentage_ =
#line 1553
  100;
  self->annotation_ =
#line 1577
  nil;
  self->originalType_ = ComAowagieTextImage_ORIGINAL_NONE;
  self->deflated_ =
#line 1701
  false;
  self->dpiX_ =
#line 1726
  0;
  self->dpiY_ =
#line 1729
  0;
  self->XYRatio_ =
#line 1765
  0;
  self->colorspace_ =
#line 1789
  -1;
  self->invert_ =
#line 1803
  false;
  self->profile_ =
#line 1825
  nil;
  self->additional_ =
#line 1856
  nil;
  self->mask_ =
#line 1878
  false;
  
#line 226
  self->url_ = url;
  self->alignment_ = ComAowagieTextImage_DEFAULT;
  self->rotationRadians_ = 0;
}


#line 241
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithJavaNetURL_(JavaNetURL *url) {
  ComAowagieTextImage_initialize();
  JavaIoInputStream *is = nil;
  @try {
    is = [((JavaNetURL *) nil_chk(url)) openStream];
    jint c1 = [((JavaIoInputStream *) nil_chk(is)) read];
    jint c2 = [is read];
    jint c3 = [is read];
    jint c4 = [is read];
    
#line 251
    jint c5 = [is read];
    jint c6 = [is read];
    jint c7 = [is read];
    jint c8 = [is read];
    [is close];
    
#line 257
    is = nil;
    if (c1 == 'G' && c2 == 'I' && c3 == 'F') {
      ComAowagieTextPdfCodecGifImage *gif = new_ComAowagieTextPdfCodecGifImage_initWithJavaNetURL_(url);
      ComAowagieTextImage *img = [gif getImageWithInt:1];
      return img;
    }
    if (c1 == (jint) 0xFF && c2 == (jint) 0xD8) {
      return new_ComAowagieTextJpeg_initWithJavaNetURL_(url);
    }
    if (c1 == (jint) 0x00 && c2 == (jint) 0x00 && c3 == (jint) 0x00 && c4 == (jint) 0x0c) {
      return new_ComAowagieTextJpeg2000_initWithJavaNetURL_(url);
    }
    if (c1 == (jint) 0xff && c2 == (jint) 0x4f && c3 == (jint) 0xff && c4 == (jint) 0x51) {
      return new_ComAowagieTextJpeg2000_initWithJavaNetURL_(url);
    }
    if (c1 == IOSIntArray_Get(nil_chk(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID)), 0) && c2 == IOSIntArray_Get(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID), 1) &&
#line 273
    c3 == IOSIntArray_Get(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID), 2) && c4 == IOSIntArray_Get(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID), 3)) {
      return ComAowagieTextPdfCodecPngImage_getImageWithJavaNetURL_(url);
    }
    if (c1 == (jint) 0xD7 && c2 == (jint) 0xCD) {
      return new_ComAowagieTextImgWMF_initWithJavaNetURL_(url);
    }
    if (c1 == 'B' && c2 == 'M') {
      return ComAowagieTextPdfCodecBmpImage_getImageWithJavaNetURL_(url);
    }
    if ((c1 == 'M' && c2 == 'M' && c3 == 0 && c4 == 42) || (
#line 283
    c1 == 'I' && c2 == 'I' && c3 == 42 && c4 == 0)) {
      ComAowagieTextPdfRandomAccessFileOrArray *ra = nil;
      @try {
        if ([((NSString *) nil_chk([url getProtocol])) isEqual:@"file"]) {
          NSString *file = [url getFile];
          file = ComAowagieTextUtilities_unEscapeURLWithNSString_(file);
          ra = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithNSString_(file);
        }
        else {
          
#line 291
          ra = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithJavaNetURL_(url);
        }
        ComAowagieTextImage *img = ComAowagieTextPdfCodecTiffImage_getTiffImageWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ra, 1);
        ((ComAowagieTextImage *) nil_chk(img))->url_ = url;
        return img;
      }
      @finally {
        
#line 297
        if (ra != nil) {
          [ra close];
        }
      }
    }
    
#line 303
    if (c1 == (jint) 0x97 && c2 == 'J' && c3 == 'B' && c4 == '2' &&
#line 304
    c5 == 0x000d && c6 == 0x000a && c7 == (jint) 0x1a && c8 == 0x000a) {
      ComAowagieTextPdfRandomAccessFileOrArray *ra = nil;
      @try {
        if ([((NSString *) nil_chk([url getProtocol])) isEqual:@"file"]) {
          NSString *file = [url getFile];
          file = ComAowagieTextUtilities_unEscapeURLWithNSString_(file);
          ra = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithNSString_(file);
        }
        else {
          
#line 312
          ra = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithJavaNetURL_(url);
        }
        ComAowagieTextImage *img = ComAowagieTextPdfCodecJBIG2Image_getJbig2ImageWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ra, 1);
        ((ComAowagieTextImage *) nil_chk(img))->url_ = url;
        return img;
      }
      @finally {
        
#line 318
        if (ra != nil) {
          [ra close];
        }
      }
    }
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$", [url description], @" is not a recognized imageformat."));
  }
  @finally {
    if (is != nil) {
      [is close];
    }
  }
}


#line 343
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithNSString_(NSString *filename) {
  ComAowagieTextImage_initialize();
  return ComAowagieTextImage_getInstanceWithJavaNetURL_(ComAowagieTextUtilities_toURLWithNSString_(filename));
}


#line 358
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithByteArray_(IOSByteArray *imgb) {
  ComAowagieTextImage_initialize();
  JavaIoInputStream *is = nil;
  @try {
    is = new_JavaIoByteArrayInputStream_initWithByteArray_(imgb);
    jint c1 = [is read];
    jint c2 = [is read];
    jint c3 = [is read];
    jint c4 = [is read];
    [is close];
    
#line 369
    is = nil;
    if (c1 == 'G' && c2 == 'I' && c3 == 'F') {
      ComAowagieTextPdfCodecGifImage *gif = new_ComAowagieTextPdfCodecGifImage_initWithByteArray_(imgb);
      return [gif getImageWithInt:1];
    }
    if (c1 == (jint) 0xFF && c2 == (jint) 0xD8) {
      return new_ComAowagieTextJpeg_initWithByteArray_(imgb);
    }
    if (c1 == (jint) 0x00 && c2 == (jint) 0x00 && c3 == (jint) 0x00 && c4 == (jint) 0x0c) {
      return new_ComAowagieTextJpeg2000_initWithByteArray_(imgb);
    }
    if (c1 == (jint) 0xff && c2 == (jint) 0x4f && c3 == (jint) 0xff && c4 == (jint) 0x51) {
      return new_ComAowagieTextJpeg2000_initWithByteArray_(imgb);
    }
    if (c1 == IOSIntArray_Get(nil_chk(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID)), 0) && c2 == IOSIntArray_Get(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID), 1) &&
#line 384
    c3 == IOSIntArray_Get(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID), 2) && c4 == IOSIntArray_Get(JreLoadStatic(ComAowagieTextPdfCodecPngImage, PNGID), 3)) {
      return ComAowagieTextPdfCodecPngImage_getImageWithByteArray_(imgb);
    }
    if (c1 == (jint) 0xD7 && c2 == (jint) 0xCD) {
      return new_ComAowagieTextImgWMF_initWithByteArray_(imgb);
    }
    if (c1 == 'B' && c2 == 'M') {
      return ComAowagieTextPdfCodecBmpImage_getImageWithByteArray_(imgb);
    }
    if ((c1 == 'M' && c2 == 'M' && c3 == 0 && c4 == 42) || (
#line 394
    c1 == 'I' && c2 == 'I' && c3 == 42 && c4 == 0)) {
      ComAowagieTextPdfRandomAccessFileOrArray *ra = nil;
      @try {
        ra = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithByteArray_(imgb);
        ComAowagieTextImage *img = ComAowagieTextPdfCodecTiffImage_getTiffImageWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ra, 1);
        if ([((ComAowagieTextImage *) nil_chk(img)) getOriginalData] == nil) {
          [img setOriginalDataWithByteArray:imgb];
        }
        return img;
      }
      @finally {
        
#line 404
        if (ra != nil) {
          [ra close];
        }
      }
    }
    
#line 410
    if (c1 == (jint) 0x97 && c2 == 'J' && c3 == 'B' && c4 == '2') {
      is = new_JavaIoByteArrayInputStream_initWithByteArray_(imgb);
      [is skipWithLong:4];
      jint c5 = [is read];
      jint c6 = [is read];
      jint c7 = [is read];
      jint c8 = [is read];
      if (c5 == 0x000d && c6 == 0x000a && c7 == (jint) 0x1a && c8 == 0x000a) {
        jint file_header_flags = [is read];
        jint number_of_pages = -1;
        if ((file_header_flags & (jint) 0x2) == (jint) 0x2) {
          number_of_pages = (JreLShift32([is read], 24)) | (JreLShift32([is read], 16)) | (JreLShift32([is read], 8)) | [is read];
        }
        [is close];
        
#line 427
        ComAowagieTextPdfRandomAccessFileOrArray *ra = nil;
        @try {
          ra = new_ComAowagieTextPdfRandomAccessFileOrArray_initWithByteArray_(imgb);
          ComAowagieTextImage *img = ComAowagieTextPdfCodecJBIG2Image_getJbig2ImageWithComAowagieTextPdfRandomAccessFileOrArray_withInt_(ra, 1);
          if ([((ComAowagieTextImage *) nil_chk(img)) getOriginalData] == nil) {
            [img setOriginalDataWithByteArray:imgb];
          }
          return img;
        }
        @finally {
          
#line 436
          if (ra != nil) {
            [ra close];
          }
        }
      }
    }
    @throw new_JavaIoIOException_initWithNSString_(
#line 443
    @"The byte array is not a recognized imageformat.");
  }
  @finally {
    
#line 445
    if (is != nil) {
      [is close];
    }
  }
}


#line 468
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_(jint width, jint height, jint components, jint bpc, IOSByteArray *data) {
  ComAowagieTextImage_initialize();
  return ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_withIntArray_(width, height, components, bpc, data, nil);
}


#line 482
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithInt_withInt_withByteArray_withByteArray_(jint width, jint height, IOSByteArray *data, IOSByteArray *globals) {
  ComAowagieTextImage_initialize();
  
#line 483
  ComAowagieTextImage *img = new_ComAowagieTextImgJBIG2_initWithInt_withInt_withByteArray_withByteArray_(width, height, data, globals);
  return img;
}


#line 511
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithInt_withInt_withBoolean_withInt_withInt_withByteArray_(jint width, jint height, jboolean reverseBits, jint typeCCITT, jint parameters, IOSByteArray *data) {
  ComAowagieTextImage_initialize();
  
#line 514
  return ComAowagieTextImage_getInstanceWithInt_withInt_withBoolean_withInt_withInt_withByteArray_withIntArray_(width, height, reverseBits, typeCCITT,
#line 515
  parameters, data, nil);
}


#line 545
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithInt_withInt_withBoolean_withInt_withInt_withByteArray_withIntArray_(jint width, jint height, jboolean reverseBits, jint typeCCITT, jint parameters, IOSByteArray *data, IOSIntArray *transparency) {
  ComAowagieTextImage_initialize();
  
#line 548
  if (transparency != nil && transparency->size_ != 2) {
    @throw new_ComAowagieTextBadElementException_initWithNSString_(
#line 550
    @"Transparency length must be equal to 2 with CCITT images");
  }
  ComAowagieTextImage *img = new_ComAowagieTextImgCCITT_initWithInt_withInt_withBoolean_withInt_withInt_withByteArray_(width, height, reverseBits, typeCCITT,
#line 553
  parameters, data);
  img->transparency_ = transparency;
  return img;
}


#line 578
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithInt_withInt_withInt_withInt_withByteArray_withIntArray_(jint width, jint height, jint components, jint bpc, IOSByteArray *data, IOSIntArray *transparency) {
  ComAowagieTextImage_initialize();
  
#line 581
  if (transparency != nil && transparency->size_ != components * 2) {
    @throw new_ComAowagieTextBadElementException_initWithNSString_(
#line 583
    @"Transparency length must be equal to (componentes * 2)");
  }
  if (components == 1 && bpc == 1) {
    IOSByteArray *g4 = ComAowagieTextPdfCodecCCITTG4Encoder_compressWithByteArray_withInt_withInt_(data, width, height);
    return ComAowagieTextImage_getInstanceWithInt_withInt_withBoolean_withInt_withInt_withByteArray_withIntArray_(width, height, false, ComAowagieTextElement_CCITTG4,
#line 588
    ComAowagieTextElement_CCITT_BLACKIS1, g4, transparency);
  }
  ComAowagieTextImage *img = new_ComAowagieTextImgRaw_initWithInt_withInt_withInt_withInt_withByteArray_(width, height, components, bpc, data);
  img->transparency_ = transparency;
  return img;
}


#line 605
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithComAowagieTextPdfPdfTemplate_(ComAowagieTextPdfPdfTemplate *template_) {
  ComAowagieTextImage_initialize();
  return new_ComAowagieTextImgTemplate_initWithComAowagieTextPdfPdfTemplate_(template_);
}


#line 889
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithComAowagieTextPdfPRIndirectReference_(ComAowagieTextPdfPRIndirectReference *ref) {
  ComAowagieTextImage_initialize();
  
#line 890
  ComAowagieTextPdfPdfDictionary *dic = (ComAowagieTextPdfPdfDictionary *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_(ref), [ComAowagieTextPdfPdfDictionary class]);
  jint width = [((ComAowagieTextPdfPdfNumber *) nil_chk(((ComAowagieTextPdfPdfNumber *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([((ComAowagieTextPdfPdfDictionary *) nil_chk(dic)) getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, WIDTH)]), [ComAowagieTextPdfPdfNumber class])))) intValue];
  jint height = [((ComAowagieTextPdfPdfNumber *) nil_chk(((ComAowagieTextPdfPdfNumber *) cast_chk(ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_([dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, HEIGHT)]), [ComAowagieTextPdfPdfNumber class])))) intValue];
  ComAowagieTextImage *imask = nil;
  ComAowagieTextPdfPdfObject *obj = [dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, SMASK)];
  if (obj != nil && [obj isIndirect]) {
    imask = ComAowagieTextImage_getInstanceWithComAowagieTextPdfPRIndirectReference_((ComAowagieTextPdfPRIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPRIndirectReference class]));
  }
  else {
    obj = [dic getWithComAowagieTextPdfPdfName:JreLoadStatic(ComAowagieTextPdfPdfName, MASK)];
    if (obj != nil && [obj isIndirect]) {
      ComAowagieTextPdfPdfObject *obj2 = ComAowagieTextPdfPdfReader_getPdfObjectReleaseWithComAowagieTextPdfPdfObject_(obj);
      if ([obj2 isKindOfClass:[ComAowagieTextPdfPdfDictionary class]]) {
        imask = ComAowagieTextImage_getInstanceWithComAowagieTextPdfPRIndirectReference_((ComAowagieTextPdfPRIndirectReference *) cast_chk(obj, [ComAowagieTextPdfPRIndirectReference class]));
      }
    }
  }
  ComAowagieTextImage *img = new_ComAowagieTextImgRaw_initWithInt_withInt_withInt_withInt_withByteArray_(width, height, 1, 1, nil);
  img->imageMask_ = imask;
  img->directReference_ = ref;
  return img;
}


#line 921
void ComAowagieTextImage_initWithComAowagieTextImage_(ComAowagieTextImage *self, ComAowagieTextImage *image) {
  ComAowagieTextRectangle_initWithComAowagieTextRectangle_(self, image);
  self->bpc_ =
#line 178
  1;
  self->template__ = [IOSObjectArray newArrayWithLength:
#line 181
  1 type:ComAowagieTextPdfPdfTemplate_class_()];
  self->absoluteX_ =
#line 190
  JavaLangFloat_NaN;
  self->absoluteY_ =
#line 193
  JavaLangFloat_NaN;
  self->compressionLevel_ =
#line 211
  ComAowagieTextPdfPdfStream_DEFAULT_COMPRESSION;
  self->mySerialId_ = ComAowagieTextImage_getSerialId();
  self->indentationLeft_ =
#line 1461
  0;
  self->indentationRight_ =
#line 1464
  0;
  self->widthPercentage_ =
#line 1553
  100;
  self->annotation_ =
#line 1577
  nil;
  self->originalType_ = ComAowagieTextImage_ORIGINAL_NONE;
  self->deflated_ =
#line 1701
  false;
  self->dpiX_ =
#line 1726
  0;
  self->dpiY_ =
#line 1729
  0;
  self->XYRatio_ =
#line 1765
  0;
  self->colorspace_ =
#line 1789
  -1;
  self->invert_ =
#line 1803
  false;
  self->profile_ =
#line 1825
  nil;
  self->additional_ =
#line 1856
  nil;
  self->mask_ =
#line 1878
  false;
  
#line 923
  self->type_ = ((ComAowagieTextImage *) nil_chk(image))->type_;
  self->url_ = image->url_;
  self->rawData_ = image->rawData_;
  self->bpc_ = image->bpc_;
  self->template__ = image->template__;
  self->alignment_ = image->alignment_;
  self->alt_ = image->alt_;
  self->absoluteX_ = image->absoluteX_;
  self->absoluteY_ = image->absoluteY_;
  self->plainWidth_ = image->plainWidth_;
  self->plainHeight_ = image->plainHeight_;
  self->scaledWidth_ = image->scaledWidth_;
  self->scaledHeight_ = image->scaledHeight_;
  self->mySerialId_ = image->mySerialId_;
  
#line 938
  self->directReference_ = image->directReference_;
  
#line 940
  self->rotationRadians_ = image->rotationRadians_;
  self->initialRotation_ = image->initialRotation_;
  self->indentationLeft_ = image->indentationLeft_;
  self->indentationRight_ = image->indentationRight_;
  self->spacingBefore_ = image->spacingBefore_;
  self->spacingAfter_ = image->spacingAfter_;
  
#line 947
  self->widthPercentage_ = image->widthPercentage_;
  self->annotation_ = image->annotation_;
  self->layer_ = image->layer_;
  self->interpolation_ = image->interpolation_;
  self->originalType_ = image->originalType_;
  self->originalData_ = image->originalData_;
  self->deflated_ = image->deflated_;
  self->dpiX_ = image->dpiX_;
  self->dpiY_ = image->dpiY_;
  self->XYRatio_ = image->XYRatio_;
  
#line 958
  self->colorspace_ = image->colorspace_;
  self->invert_ = image->invert_;
  self->profile_ = image->profile_;
  self->additional_ = image->additional_;
  self->mask_ = image->mask_;
  self->imageMask_ = image->imageMask_;
  self->smask_ = image->smask_;
  self->transparency_ = image->transparency_;
}


#line 975
ComAowagieTextImage *ComAowagieTextImage_getInstanceWithComAowagieTextImage_(ComAowagieTextImage *image) {
  ComAowagieTextImage_initialize();
  
#line 976
  if (image == nil) {
    return nil;
  }
  @try {
    IOSClass *cs = [image java_getClass];
    JavaLangReflectConstructor *constructor = [cs getDeclaredConstructor:[IOSObjectArray newArrayWithObjects:(id[]){
#line 982
      ComAowagieTextImage_class_() } count:1 type:IOSClass_class_()]];
      return (ComAowagieTextImage *) cast_chk([((JavaLangReflectConstructor *) nil_chk(constructor)) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ image } count:1 type:NSObject_class_()]], [ComAowagieTextImage class]);
    }
    @catch (
#line 984
    JavaLangException *e) {
      @throw new_ComAowagieTextExceptionConverter_initWithJavaLangException_(e);
    }
  }


#line 1376
JavaLangLong *ComAowagieTextImage_getSerialId() {
  ComAowagieTextImage_initialize();
  @synchronized(ComAowagieTextImage_class_()) {
    
#line 1377
    ++ComAowagieTextImage_serialId;
    return new_JavaLangLong_initWithLong_(ComAowagieTextImage_serialId);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComAowagieTextImage)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/gl/color/ICC_Transform.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "harmony/java/awt/color/ICC_Profile.h"
#include "org/apache/harmony/awt/gl/color/ICC_ProfileHelper.h"
#include "org/apache/harmony/awt/gl/color/ICC_Transform.h"
#include "org/apache/harmony/awt/gl/color/NativeCMM.h"
#include "org/apache/harmony/awt/gl/color/NativeImageFormat.h"

#if !__has_feature(objc_arc)
#error "org/apache/harmony/awt/gl/color/ICC_Transform must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheHarmonyAwtGlColorICC_Transform () {
 @public
  jlong transformHandle_;
  jint numInputChannels_;
  jint numOutputChannels_;
  HarmonyJavaAwtColorICC_Profile *src_;
  HarmonyJavaAwtColorICC_Profile *dst_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheHarmonyAwtGlColorICC_Transform, src_, HarmonyJavaAwtColorICC_Profile *)
J2OBJC_FIELD_SETTER(OrgApacheHarmonyAwtGlColorICC_Transform, dst_, HarmonyJavaAwtColorICC_Profile *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/gl/color/ICC_Transform.java"


#line 30
@implementation OrgApacheHarmonyAwtGlColorICC_Transform


#line 40
- (jint)getNumInputChannels {
  return numInputChannels_;
}


#line 47
- (jint)getNumOutputChannels {
  return numOutputChannels_;
}


#line 54
- (HarmonyJavaAwtColorICC_Profile *)getDst {
  return dst_;
}


#line 61
- (HarmonyJavaAwtColorICC_Profile *)getSrc {
  return src_;
}


#line 73
- (instancetype)initWithHarmonyJavaAwtColorICC_ProfileArray:(IOSObjectArray *)profiles
                                               withIntArray:(IOSIntArray *)renderIntents {
  OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(self, profiles, renderIntents);
  return self;
}


#line 95
- (instancetype)initWithHarmonyJavaAwtColorICC_ProfileArray:(IOSObjectArray *)profiles {
  OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(self, profiles);
  return self;
}


#line 136
- (void)java_finalize {
  
#line 138
  if (transformHandle_ != 0) {
    OrgApacheHarmonyAwtGlColorNativeCMM_cmmDeleteTransformWithLong_(transformHandle_);
  }
}


#line 151
- (void)translateColorsWithOrgApacheHarmonyAwtGlColorNativeImageFormat:(OrgApacheHarmonyAwtGlColorNativeImageFormat *)src
                       withOrgApacheHarmonyAwtGlColorNativeImageFormat:(OrgApacheHarmonyAwtGlColorNativeImageFormat *)dst {
  
#line 152
  OrgApacheHarmonyAwtGlColorNativeCMM_cmmTranslateColorsWithLong_withOrgApacheHarmonyAwtGlColorNativeImageFormat_withOrgApacheHarmonyAwtGlColorNativeImageFormat_(transformHandle_, src, dst);
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheHarmonyAwtGlColorICC_Transform class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtColorICC_Profile;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getNumInputChannels);
  methods[1].selector = @selector(getNumOutputChannels);
  methods[2].selector = @selector(getDst);
  methods[3].selector = @selector(getSrc);
  methods[4].selector = @selector(initWithHarmonyJavaAwtColorICC_ProfileArray:withIntArray:);
  methods[5].selector = @selector(initWithHarmonyJavaAwtColorICC_ProfileArray:);
  methods[6].selector = @selector(java_finalize);
  methods[7].selector = @selector(translateColorsWithOrgApacheHarmonyAwtGlColorNativeImageFormat:withOrgApacheHarmonyAwtGlColorNativeImageFormat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "transformHandle_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numInputChannels_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numOutputChannels_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "src_", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dst_", "LHarmonyJavaAwtColorICC_Profile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LHarmonyJavaAwtColorICC_Profile;[I", "[LHarmonyJavaAwtColorICC_Profile;", "finalize", "translateColors", "LOrgApacheHarmonyAwtGlColorNativeImageFormat;LOrgApacheHarmonyAwtGlColorNativeImageFormat;" };
  static const J2ObjcClassInfo _OrgApacheHarmonyAwtGlColorICC_Transform = { "ICC_Transform", "org.apache.harmony.awt.gl.color", ptrTable, methods, fields, 7, 0x1, 8, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheHarmonyAwtGlColorICC_Transform;
}

@end


#line 73
void OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(OrgApacheHarmonyAwtGlColorICC_Transform *self, IOSObjectArray *profiles, IOSIntArray *renderIntents) {
  NSObject_init(self);
  
#line 74
  jint numProfiles = ((IOSObjectArray *) nil_chk(profiles))->size_;
  
#line 76
  IOSLongArray *profileHandles = [IOSLongArray newArrayWithLength:numProfiles];
  for (jint i = 0; i < numProfiles; i++) {
    *IOSLongArray_GetRef(profileHandles, i) = OrgApacheHarmonyAwtGlColorNativeCMM_getHandleWithHarmonyJavaAwtColorICC_Profile_(IOSObjectArray_Get(profiles, i));
  }
  
#line 81
  self->transformHandle_ = OrgApacheHarmonyAwtGlColorNativeCMM_cmmCreateMultiprofileTransformWithLongArray_withIntArray_(profileHandles, renderIntents);
  
#line 83
  self->src_ = IOSObjectArray_Get(profiles, 0);
  self->dst_ = IOSObjectArray_Get(profiles, numProfiles - 1);
  self->numInputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->src_)) getNumComponents];
  self->numOutputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->dst_)) getNumComponents];
}


#line 73
OrgApacheHarmonyAwtGlColorICC_Transform *new_OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(IOSObjectArray *profiles, IOSIntArray *renderIntents) {
  J2OBJC_NEW_IMPL(OrgApacheHarmonyAwtGlColorICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_, profiles, renderIntents)
}


#line 73
OrgApacheHarmonyAwtGlColorICC_Transform *create_OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_(IOSObjectArray *profiles, IOSIntArray *renderIntents) {
  J2OBJC_CREATE_IMPL(OrgApacheHarmonyAwtGlColorICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_withIntArray_, profiles, renderIntents)
}


#line 95
void OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(OrgApacheHarmonyAwtGlColorICC_Transform *self, IOSObjectArray *profiles) {
  NSObject_init(self);
  
#line 96
  jint numProfiles = ((IOSObjectArray *) nil_chk(profiles))->size_;
  IOSIntArray *renderingIntents = [IOSIntArray newArrayWithLength:numProfiles];
  
#line 100
  jint currRenderingIntent = HarmonyJavaAwtColorICC_Profile_icPerceptual;
  
#line 103
  if ([((HarmonyJavaAwtColorICC_Profile *) nil_chk(IOSObjectArray_Get(profiles, 0))) getProfileClass] == HarmonyJavaAwtColorICC_Profile_CLASS_OUTPUT) {
    currRenderingIntent = HarmonyJavaAwtColorICC_Profile_icRelativeColorimetric;
  }
  
#line 108
  for (jint i = 0; i < numProfiles; i++) {
    
#line 112
    if (i != 0 && i != numProfiles - 1 && [((HarmonyJavaAwtColorICC_Profile *) nil_chk(IOSObjectArray_Get(profiles, i))) getProfileClass] == HarmonyJavaAwtColorICC_Profile_CLASS_ABSTRACT) {
      currRenderingIntent = HarmonyJavaAwtColorICC_Profile_icPerceptual;
    }
    
#line 116
    *IOSIntArray_GetRef(renderingIntents, i) = currRenderingIntent;
    
#line 119
    currRenderingIntent = OrgApacheHarmonyAwtGlColorICC_ProfileHelper_getRenderingIntentWithHarmonyJavaAwtColorICC_Profile_(IOSObjectArray_Get(profiles, i));
  }
  
#line 123
  IOSLongArray *profileHandles = [IOSLongArray newArrayWithLength:numProfiles];
  for (jint i = 0; i < numProfiles; i++) {
    *IOSLongArray_GetRef(profileHandles, i) = OrgApacheHarmonyAwtGlColorNativeCMM_getHandleWithHarmonyJavaAwtColorICC_Profile_(IOSObjectArray_Get(profiles, i));
  }
  
#line 128
  self->transformHandle_ = OrgApacheHarmonyAwtGlColorNativeCMM_cmmCreateMultiprofileTransformWithLongArray_withIntArray_(profileHandles, renderingIntents);
  
#line 130
  self->src_ = IOSObjectArray_Get(profiles, 0);
  self->dst_ = IOSObjectArray_Get(profiles, numProfiles - 1);
  self->numInputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->src_)) getNumComponents];
  self->numOutputChannels_ = [((HarmonyJavaAwtColorICC_Profile *) nil_chk(self->dst_)) getNumComponents];
}


#line 95
OrgApacheHarmonyAwtGlColorICC_Transform *new_OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(IOSObjectArray *profiles) {
  J2OBJC_NEW_IMPL(OrgApacheHarmonyAwtGlColorICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_, profiles)
}


#line 95
OrgApacheHarmonyAwtGlColorICC_Transform *create_OrgApacheHarmonyAwtGlColorICC_Transform_initWithHarmonyJavaAwtColorICC_ProfileArray_(IOSObjectArray *profiles) {
  J2OBJC_CREATE_IMPL(OrgApacheHarmonyAwtGlColorICC_Transform, initWithHarmonyJavaAwtColorICC_ProfileArray_, profiles)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheHarmonyAwtGlColorICC_Transform)

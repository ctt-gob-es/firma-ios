//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/gl/color/ColorConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorConverter")
#ifdef RESTRICT_OrgApacheHarmonyAwtGlColorColorConverter
#define INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorConverter 0
#else
#define INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorConverter 1
#endif
#undef RESTRICT_OrgApacheHarmonyAwtGlColorColorConverter

#if !defined (OrgApacheHarmonyAwtGlColorColorConverter_) && (INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorConverter || defined(INCLUDE_OrgApacheHarmonyAwtGlColorColorConverter))
#define OrgApacheHarmonyAwtGlColorColorConverter_

@class HarmonyJavaAwtColorColorSpace;
@class IOSObjectArray;
@class IOSShortArray;
@class OrgApacheHarmonyAwtGlColorICC_Transform;

/*!
 @brief This class combines ColorScaler, ICC_Transform and NativeImageFormat
  functionality in the workflows for different types of input/output pixel
  data.
 */
@interface OrgApacheHarmonyAwtGlColorColorConverter : NSObject

#pragma mark Public

- (instancetype)init;

- (void)loadScalingDataWithHarmonyJavaAwtColorColorSpace:(HarmonyJavaAwtColorColorSpace *)cs;

/*!
 @brief Translates pixels, stored in the float data buffer.Each pixel occupies
  separate array.
 Input pixels passed in the buffer are replaced by output
  pixels and then the buffer is returned
 @param t - ICC transform
 @param buffer - data buffer
 @param srcCS - source color space
 @param dstCS - destination color space
 @param nPixels - number of pixels
 @return translated pixels
 */
- (IOSObjectArray *)translateColorWithOrgApacheHarmonyAwtGlColorICC_Transform:(OrgApacheHarmonyAwtGlColorICC_Transform *)t
                                                              withFloatArray2:(IOSObjectArray *)buffer
                                            withHarmonyJavaAwtColorColorSpace:(HarmonyJavaAwtColorColorSpace *)srcCS
                                            withHarmonyJavaAwtColorColorSpace:(HarmonyJavaAwtColorColorSpace *)dstCS
                                                                      withInt:(jint)nPixels;

/*!
 @brief Translates pixels stored in an array of shorts.Samples are stored
  one-by-one, i.e. array structure is like following: RGBRGBRGB...
 The
  number of pixels is (size of the array) / (number of components).
 @param t - ICC transform
 @param src - source pixels
 @param dst - destination pixels
 @return destination pixels, stored in the array, passed in dst
 */
- (IOSShortArray *)translateColorWithOrgApacheHarmonyAwtGlColorICC_Transform:(OrgApacheHarmonyAwtGlColorICC_Transform *)t
                                                              withShortArray:(IOSShortArray *)src
                                                              withShortArray:(IOSShortArray *)dst;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheHarmonyAwtGlColorColorConverter)

FOUNDATION_EXPORT void OrgApacheHarmonyAwtGlColorColorConverter_init(OrgApacheHarmonyAwtGlColorColorConverter *self);

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorColorConverter *new_OrgApacheHarmonyAwtGlColorColorConverter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorColorConverter *create_OrgApacheHarmonyAwtGlColorColorConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonyAwtGlColorColorConverter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheHarmonyAwtGlColorColorConverter")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/gl/color/NativeImageFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheHarmonyAwtGlColorNativeImageFormat")
#ifdef RESTRICT_OrgApacheHarmonyAwtGlColorNativeImageFormat
#define INCLUDE_ALL_OrgApacheHarmonyAwtGlColorNativeImageFormat 0
#else
#define INCLUDE_ALL_OrgApacheHarmonyAwtGlColorNativeImageFormat 1
#endif
#undef RESTRICT_OrgApacheHarmonyAwtGlColorNativeImageFormat

#if !defined (OrgApacheHarmonyAwtGlColorNativeImageFormat_) && (INCLUDE_ALL_OrgApacheHarmonyAwtGlColorNativeImageFormat || defined(INCLUDE_OrgApacheHarmonyAwtGlColorNativeImageFormat))
#define OrgApacheHarmonyAwtGlColorNativeImageFormat_

/*!
 @brief This class converts java color/sample models to the LCMS pixel formats.It
  also encapsulates all the information about the image format, which native
  CMM needs to have in order to read/write data.
 At present planar formats (multiple bands) are not supported and they are
  handled as a common (custom) case. Samples other than 1 - 7 bytes and
  multiple of 8 bits are also handled as custom (and won't be supported in the
  nearest future).
 */
@interface OrgApacheHarmonyAwtGlColorNativeImageFormat : NSObject

#pragma mark Public

- (instancetype)initPackagePrivate;

/*!
 @brief Simple image layout for common case with not optimized workflow.
 For hifi colorspaces with 5+ color channels imgData should be 
 <code>byte</code> array.
  For common colorspaces with up to 4 color channels it should be 
 <code>short</code> array.
  Alpha channel is handled by caller, not by CMS.
  Color channels are in their natural order (not BGR but RGB).
 @param imgData - array of 
  <code> byte </code>  or  <code> short </code>
 @param nChannels - number of channels
 @param nRows - number of scanlines in the image
 @param nCols - number of pixels in one row of the image
 */
- (instancetype)initPackagePrivateWithId:(id)imgData
                                 withInt:(jint)nChannels
                                 withInt:(jint)nRows
                                 withInt:(jint)nCols;

#pragma mark Package-Private

- (id)getChannelData;

- (jint)getNumCols;

- (jint)getNumRows;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheHarmonyAwtGlColorNativeImageFormat)

FOUNDATION_EXPORT void OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivate(OrgApacheHarmonyAwtGlColorNativeImageFormat *self);

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorNativeImageFormat *new_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorNativeImageFormat *create_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivate(void);

FOUNDATION_EXPORT void OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(OrgApacheHarmonyAwtGlColorNativeImageFormat *self, id imgData, jint nChannels, jint nRows, jint nCols);

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorNativeImageFormat *new_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(id imgData, jint nChannels, jint nRows, jint nCols) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheHarmonyAwtGlColorNativeImageFormat *create_OrgApacheHarmonyAwtGlColorNativeImageFormat_initPackagePrivateWithId_withInt_withInt_withInt_(id imgData, jint nChannels, jint nRows, jint nCols);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheHarmonyAwtGlColorNativeImageFormat)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheHarmonyAwtGlColorNativeImageFormat")

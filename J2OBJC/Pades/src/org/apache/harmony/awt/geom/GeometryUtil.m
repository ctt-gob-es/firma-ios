//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/geom/GeometryUtil.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "org/apache/harmony/awt/geom/GeometryUtil.h"
#include "org/apache/harmony/awt/gl/Crossing.h"

#if !__has_feature(objc_arc)
#error "org/apache/harmony/awt/geom/GeometryUtil must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheHarmonyAwtGeomGeometryUtil ()

+ (void)cubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                   withDoubleArray:(IOSDoubleArray *)yCoefs1
                   withDoubleArray:(IOSDoubleArray *)xCoefs2
                   withDoubleArray:(IOSDoubleArray *)yCoefs2
                   withDoubleArray:(IOSDoubleArray *)params;

+ (void)quadAndCubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                          withDoubleArray:(IOSDoubleArray *)yCoefs1
                          withDoubleArray:(IOSDoubleArray *)xCoefs2
                          withDoubleArray:(IOSDoubleArray *)yCoefs2
                          withDoubleArray:(IOSDoubleArray *)params;

+ (void)quadNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                  withDoubleArray:(IOSDoubleArray *)yCoefs1
                  withDoubleArray:(IOSDoubleArray *)xCoefs2
                  withDoubleArray:(IOSDoubleArray *)yCoefs2
                  withDoubleArray:(IOSDoubleArray *)params;

@end

__attribute__((unused)) static void OrgApacheHarmonyAwtGeomGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params);

__attribute__((unused)) static void OrgApacheHarmonyAwtGeomGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params);

__attribute__((unused)) static void OrgApacheHarmonyAwtGeomGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/apache/harmony/awt/geom/GeometryUtil.java"

J2OBJC_INITIALIZED_DEFN(OrgApacheHarmonyAwtGeomGeometryUtil)

jdouble OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON;


#line 21
@implementation OrgApacheHarmonyAwtGeomGeometryUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 21
- (instancetype)init {
  OrgApacheHarmonyAwtGeomGeometryUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 24
+ (jint)intersectLinesWithParamsWithDouble:(jdouble)x1
                                withDouble:(jdouble)y1
                                withDouble:(jdouble)x2
                                withDouble:(jdouble)y2
                                withDouble:(jdouble)x3
                                withDouble:(jdouble)y3
                                withDouble:(jdouble)x4
                                withDouble:(jdouble)y4
                           withDoubleArray:(IOSDoubleArray *)params {
  return OrgApacheHarmonyAwtGeomGeometryUtil_intersectLinesWithParamsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, x4, y4, params);
}


#line 67
+ (jint)intersectLinesWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2
                      withDouble:(jdouble)x3
                      withDouble:(jdouble)y3
                      withDouble:(jdouble)x4
                      withDouble:(jdouble)y4
                 withDoubleArray:(IOSDoubleArray *)point {
  return OrgApacheHarmonyAwtGeomGeometryUtil_intersectLinesWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, x4, y4, point);
}


#line 113
+ (jint)intersectLineAndQuadWithDouble:(jdouble)x1
                            withDouble:(jdouble)y1
                            withDouble:(jdouble)x2
                            withDouble:(jdouble)y2
                            withDouble:(jdouble)qx1
                            withDouble:(jdouble)qy1
                            withDouble:(jdouble)qx2
                            withDouble:(jdouble)qy2
                            withDouble:(jdouble)qx3
                            withDouble:(jdouble)qy3
                       withDoubleArray:(IOSDoubleArray *)params {
  return OrgApacheHarmonyAwtGeomGeometryUtil_intersectLineAndQuadWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, qx1, qy1, qx2, qy2, qx3, qy3, params);
}


#line 170
+ (jint)intersectLineAndCubicWithDouble:(jdouble)x1
                             withDouble:(jdouble)y1
                             withDouble:(jdouble)x2
                             withDouble:(jdouble)y2
                             withDouble:(jdouble)cx1
                             withDouble:(jdouble)cy1
                             withDouble:(jdouble)cx2
                             withDouble:(jdouble)cy2
                             withDouble:(jdouble)cx3
                             withDouble:(jdouble)cy3
                             withDouble:(jdouble)cx4
                             withDouble:(jdouble)cy4
                        withDoubleArray:(IOSDoubleArray *)params {
  return OrgApacheHarmonyAwtGeomGeometryUtil_intersectLineAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, cx1, cy1, cx2, cy2, cx3, cy3, cx4, cy4, params);
}


#line 226
+ (jint)intersectQuadsWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2
                      withDouble:(jdouble)x3
                      withDouble:(jdouble)y3
                      withDouble:(jdouble)qx1
                      withDouble:(jdouble)qy1
                      withDouble:(jdouble)qx2
                      withDouble:(jdouble)qy2
                      withDouble:(jdouble)qx3
                      withDouble:(jdouble)qy3
                 withDoubleArray:(IOSDoubleArray *)params {
  return OrgApacheHarmonyAwtGeomGeometryUtil_intersectQuadsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, qx1, qy1, qx2, qy2, qx3, qy3, params);
}


#line 295
+ (jint)intersectQuadAndCubicWithDouble:(jdouble)qx1
                             withDouble:(jdouble)qy1
                             withDouble:(jdouble)qx2
                             withDouble:(jdouble)qy2
                             withDouble:(jdouble)qx3
                             withDouble:(jdouble)qy3
                             withDouble:(jdouble)cx1
                             withDouble:(jdouble)cy1
                             withDouble:(jdouble)cx2
                             withDouble:(jdouble)cy2
                             withDouble:(jdouble)cx3
                             withDouble:(jdouble)cy3
                             withDouble:(jdouble)cx4
                             withDouble:(jdouble)cy4
                        withDoubleArray:(IOSDoubleArray *)params {
  return OrgApacheHarmonyAwtGeomGeometryUtil_intersectQuadAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(qx1, qy1, qx2, qy2, qx3, qy3, cx1, cy1, cx2, cy2, cx3, cy3, cx4, cy4, params);
}


#line 373
+ (jint)intersectCubicsWithDouble:(jdouble)x1
                       withDouble:(jdouble)y1
                       withDouble:(jdouble)x2
                       withDouble:(jdouble)y2
                       withDouble:(jdouble)x3
                       withDouble:(jdouble)y3
                       withDouble:(jdouble)x4
                       withDouble:(jdouble)y4
                       withDouble:(jdouble)cx1
                       withDouble:(jdouble)cy1
                       withDouble:(jdouble)cx2
                       withDouble:(jdouble)cy2
                       withDouble:(jdouble)cx3
                       withDouble:(jdouble)cy3
                       withDouble:(jdouble)cx4
                       withDouble:(jdouble)cy4
                  withDoubleArray:(IOSDoubleArray *)params {
  return OrgApacheHarmonyAwtGeomGeometryUtil_intersectCubicsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(x1, y1, x2, y2, x3, y3, x4, y4, cx1, cy1, cx2, cy2, cx3, cy3, cx4, cy4, params);
}


#line 430
+ (jdouble)lineWithDouble:(jdouble)t
               withDouble:(jdouble)x1
               withDouble:(jdouble)x2 {
  return OrgApacheHarmonyAwtGeomGeometryUtil_lineWithDouble_withDouble_withDouble_(t, x1, x2);
}


#line 434
+ (jdouble)quadWithDouble:(jdouble)t
               withDouble:(jdouble)x1
               withDouble:(jdouble)x2
               withDouble:(jdouble)x3 {
  return OrgApacheHarmonyAwtGeomGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(t, x1, x2, x3);
}


#line 438
+ (jdouble)cubicWithDouble:(jdouble)t
                withDouble:(jdouble)x1
                withDouble:(jdouble)x2
                withDouble:(jdouble)x3
                withDouble:(jdouble)x4 {
  return OrgApacheHarmonyAwtGeomGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(t, x1, x2, x3, x4);
}


#line 445
+ (void)subQuadWithDoubleArray:(IOSDoubleArray *)coef
                    withDouble:(jdouble)t0
                   withBoolean:(jboolean)left {
  OrgApacheHarmonyAwtGeomGeometryUtil_subQuadWithDoubleArray_withDouble_withBoolean_(coef, t0, left);
}


#line 455
+ (void)subCubicWithDoubleArray:(IOSDoubleArray *)coef
                     withDouble:(jdouble)t0
                    withBoolean:(jboolean)left {
  OrgApacheHarmonyAwtGeomGeometryUtil_subCubicWithDoubleArray_withDouble_withBoolean_(coef, t0, left);
}


#line 465
+ (void)cubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                   withDoubleArray:(IOSDoubleArray *)yCoefs1
                   withDoubleArray:(IOSDoubleArray *)xCoefs2
                   withDoubleArray:(IOSDoubleArray *)yCoefs2
                   withDoubleArray:(IOSDoubleArray *)params {
  OrgApacheHarmonyAwtGeomGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
}


#line 499
+ (void)quadAndCubicNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                          withDoubleArray:(IOSDoubleArray *)yCoefs1
                          withDoubleArray:(IOSDoubleArray *)xCoefs2
                          withDoubleArray:(IOSDoubleArray *)yCoefs2
                          withDoubleArray:(IOSDoubleArray *)params {
  OrgApacheHarmonyAwtGeomGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
}


#line 530
+ (void)quadNewtonWithDoubleArray:(IOSDoubleArray *)xCoefs1
                  withDoubleArray:(IOSDoubleArray *)yCoefs1
                  withDoubleArray:(IOSDoubleArray *)xCoefs2
                  withDoubleArray:(IOSDoubleArray *)yCoefs2
                  withDoubleArray:(IOSDoubleArray *)params {
  OrgApacheHarmonyAwtGeomGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 19, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 23, 22, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 24, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(intersectLinesWithParamsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[2].selector = @selector(intersectLinesWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[3].selector = @selector(intersectLineAndQuadWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[4].selector = @selector(intersectLineAndCubicWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[5].selector = @selector(intersectQuadsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[6].selector = @selector(intersectQuadAndCubicWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[7].selector = @selector(intersectCubicsWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDoubleArray:);
  methods[8].selector = @selector(lineWithDouble:withDouble:withDouble:);
  methods[9].selector = @selector(quadWithDouble:withDouble:withDouble:withDouble:);
  methods[10].selector = @selector(cubicWithDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[11].selector = @selector(subQuadWithDoubleArray:withDouble:withBoolean:);
  methods[12].selector = @selector(subCubicWithDoubleArray:withDouble:withBoolean:);
  methods[13].selector = @selector(cubicNewtonWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:);
  methods[14].selector = @selector(quadAndCubicNewtonWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:);
  methods[15].selector = @selector(quadNewtonWithDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:withDoubleArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EPSILON", "D", .constantValue.asLong = 0, 0x19, -1, 25, -1, -1 },
  };
  static const void *ptrTable[] = { "intersectLinesWithParams", "DDDDDDDD[D", "intersectLines", "intersectLineAndQuad", "DDDDDDDDDD[D", "intersectLineAndCubic", "DDDDDDDDDDDD[D", "intersectQuads", "intersectQuadAndCubic", "DDDDDDDDDDDDDD[D", "intersectCubics", "DDDDDDDDDDDDDDDD[D", "line", "DDD", "quad", "DDDD", "cubic", "DDDDD", "subQuad", "[DDZ", "subCubic", "cubicNewton", "[D[D[D[D[D", "quadAndCubicNewton", "quadNewton", &OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON };
  static const J2ObjcClassInfo _OrgApacheHarmonyAwtGeomGeometryUtil = { "GeometryUtil", "org.apache.harmony.awt.geom", ptrTable, methods, fields, 7, 0x1, 16, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheHarmonyAwtGeomGeometryUtil;
}

+ (void)initialize {
  if (self == [OrgApacheHarmonyAwtGeomGeometryUtil class]) {
    OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON = JavaLangMath_powWithDouble_withDouble_(
#line 22
    10, -14);
    J2OBJC_SET_INITIALIZED(OrgApacheHarmonyAwtGeomGeometryUtil)
  }
}

@end


#line 21
void OrgApacheHarmonyAwtGeomGeometryUtil_init(OrgApacheHarmonyAwtGeomGeometryUtil *self) {
  NSObject_init(self);
}


#line 21
OrgApacheHarmonyAwtGeomGeometryUtil *new_OrgApacheHarmonyAwtGeomGeometryUtil_init() {
  J2OBJC_NEW_IMPL(OrgApacheHarmonyAwtGeomGeometryUtil, init)
}


#line 21
OrgApacheHarmonyAwtGeomGeometryUtil *create_OrgApacheHarmonyAwtGeomGeometryUtil_init() {
  J2OBJC_CREATE_IMPL(OrgApacheHarmonyAwtGeomGeometryUtil, init)
}


#line 24
jint OrgApacheHarmonyAwtGeomGeometryUtil_intersectLinesWithParamsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble x4, jdouble y4, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  jdouble dx = x4 - x3;
  jdouble dy = y4 - y3;
  jdouble d = dx * (y2 - y1) - dy * (x2 - x1);
  
#line 30
  if (JavaLangMath_absWithDouble_(d) < OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON) {
    return 0;
  }
  
#line 34
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = (-dx * (y1 - y3) + dy * (x1 - x3)) / d;
  
#line 36
  if (dx != 0) {
    *IOSDoubleArray_GetRef(params, 1) = (OrgApacheHarmonyAwtGeomGeometryUtil_lineWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(params, 0), x1, x2) - x3) / dx;
  }
  else
#line 38
  if (dy != 0) {
    *IOSDoubleArray_GetRef(params, 1) = (OrgApacheHarmonyAwtGeomGeometryUtil_lineWithDouble_withDouble_withDouble_(IOSDoubleArray_Get(params, 0), y1, y2) - y3) / dy;
  }
  else {
    
#line 41
    *IOSDoubleArray_GetRef(params, 1) = 0.0;
  }
  
#line 44
  if (IOSDoubleArray_Get(params, 0) >= 0 && IOSDoubleArray_Get(params, 0) <= 1 && IOSDoubleArray_Get(params, 1) >= 0 && IOSDoubleArray_Get(params, 1) <= 1) {
    return 1;
  }
  
#line 48
  return 0;
}


#line 67
jint OrgApacheHarmonyAwtGeomGeometryUtil_intersectLinesWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble x4, jdouble y4, IOSDoubleArray *point) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  jdouble A1 = -(y2 - y1);
  jdouble B1 = (x2 - x1);
  jdouble C1 = x1 * y2 - x2 * y1;
  jdouble A2 = -(y4 - y3);
  jdouble B2 = (x4 - x3);
  jdouble C2 = x3 * y4 - x4 * y3;
  jdouble coefParallel = A1 * B2 - A2 * B1;
  
#line 77
  if (x3 == x4 && y3 == y4 && (A1 * x3 + B1 * y3 + C1 == 0) && (x3 >= JavaLangMath_minWithDouble_withDouble_(x1, x2)) &&
#line 78
  (x3 <= JavaLangMath_maxWithDouble_withDouble_(x1, x2)) && (y3 >= JavaLangMath_minWithDouble_withDouble_(y1, y2)) && (y3 <= JavaLangMath_maxWithDouble_withDouble_(y1, y2))) {
    return 1;
  }
  if (JavaLangMath_absWithDouble_(coefParallel) < OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON) {
    return 0;
  }
  *IOSDoubleArray_GetRef(nil_chk(point), 0) = (B1 * C2 - B2 * C1) / coefParallel;
  *IOSDoubleArray_GetRef(point, 1) = (A2 * C1 - A1 * C2) / coefParallel;
  if (IOSDoubleArray_Get(point, 0) >= JavaLangMath_minWithDouble_withDouble_(x1, x2) && IOSDoubleArray_Get(point, 0) >= JavaLangMath_minWithDouble_withDouble_(x3, x4) && IOSDoubleArray_Get(point, 0) <= JavaLangMath_maxWithDouble_withDouble_(x1, x2) &&
#line 87
  IOSDoubleArray_Get(point, 0) <= JavaLangMath_maxWithDouble_withDouble_(x3, x4) && IOSDoubleArray_Get(point, 1) >= JavaLangMath_minWithDouble_withDouble_(y1, y2) && IOSDoubleArray_Get(point, 1) >= JavaLangMath_minWithDouble_withDouble_(y3, y4) &&
#line 88
  IOSDoubleArray_Get(point, 1) <= JavaLangMath_maxWithDouble_withDouble_(y1, y2) && IOSDoubleArray_Get(point, 1) <= JavaLangMath_maxWithDouble_withDouble_(y3, y4)) {
    return 1;
  }
  return 0;
}


#line 113
jint OrgApacheHarmonyAwtGeomGeometryUtil_intersectLineAndQuadWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble qx1, jdouble qy1, jdouble qx2, jdouble qy2, jdouble qx3, jdouble qy3, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  IOSDoubleArray *eqn = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *t = [IOSDoubleArray newArrayWithLength:2];
  IOSDoubleArray *s = [IOSDoubleArray newArrayWithLength:2];
  jdouble dy = y2 - y1;
  jdouble dx = x2 - x1;
  jint quantity = 0;
  jint count = 0;
  
#line 123
  *IOSDoubleArray_GetRef(eqn, 0) = dy * (qx1 - x1) - dx * (qy1 - y1);
  *IOSDoubleArray_GetRef(eqn, 1) = 2 * dy * (qx2 - qx1) - 2 * dx * (qy2 - qy1);
  *IOSDoubleArray_GetRef(eqn, 2) = dy * (qx1 - 2 * qx2 + qx3) - dx * (qy1 - 2 * qy2 + qy3);
  
#line 127
  if ((count = OrgApacheHarmonyAwtGlCrossing_solveQuadWithDoubleArray_withDoubleArray_(eqn, t)) == 0) {
    return 0;
  }
  
#line 131
  for (jint i = 0; i < count; i++) {
    if (dx != 0) {
      *IOSDoubleArray_GetRef(s, i) = (OrgApacheHarmonyAwtGeomGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), qx1, qx2, qx3) - x1) / dx;
    }
    else
#line 134
    if (dy != 0) {
      *IOSDoubleArray_GetRef(s, i) = (OrgApacheHarmonyAwtGeomGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), qy1, qy2, qy3) - y1) / dy;
    }
    else {
      
#line 137
      *IOSDoubleArray_GetRef(s, i) = 0.0;
    }
    if (IOSDoubleArray_Get(t, i) >= 0 && IOSDoubleArray_Get(t, i) <= 1 && IOSDoubleArray_Get(s, i) >= 0 && IOSDoubleArray_Get(s, i) <= 1) {
      *IOSDoubleArray_GetRef(nil_chk(params), 2 * quantity) = IOSDoubleArray_Get(t, i);
      *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(s, i);
      ++quantity;
    }
  }
  
#line 146
  return quantity;
}


#line 170
jint OrgApacheHarmonyAwtGeomGeometryUtil_intersectLineAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cx3, jdouble cy3, jdouble cx4, jdouble cy4, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  IOSDoubleArray *eqn = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *t = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *s = [IOSDoubleArray newArrayWithLength:3];
  jdouble dy = y2 - y1;
  jdouble dx = x2 - x1;
  jint quantity = 0;
  jint count = 0;
  
#line 180
  *IOSDoubleArray_GetRef(eqn, 0) = (cy1 - y1) * dx + (x1 - cx1) * dy;
  *IOSDoubleArray_GetRef(eqn, 1) = -3 * (cy1 - cy2) * dx + 3 * (cx1 - cx2) * dy;
  *IOSDoubleArray_GetRef(eqn, 2) = (3 * cy1 - 6 * cy2 + 3 * cy3) * dx - (3 * cx1 - 6 * cx2 + 3 * cx3) * dy;
  *IOSDoubleArray_GetRef(eqn, 3) = (-3 * cy1 + 3 * cy2 - 3 * cy3 + cy4) * dx + (3 * cx1 - 3 * cx2 + 3 * cx3 - cx4) * dy;
  
#line 185
  if ((count = OrgApacheHarmonyAwtGlCrossing_solveCubicWithDoubleArray_withDoubleArray_(eqn, t)) == 0) {
    return 0;
  }
  
#line 189
  for (jint i = 0; i < count; i++) {
    if (dx != 0) {
      *IOSDoubleArray_GetRef(s, i) = (OrgApacheHarmonyAwtGeomGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), cx1, cx2, cx3, cx4) - x1) / dx;
    }
    else
#line 192
    if (dy != 0) {
      *IOSDoubleArray_GetRef(s, i) = (OrgApacheHarmonyAwtGeomGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(t, i), cy1, cy2, cy3, cy4) - y1) / dy;
    }
    else {
      
#line 195
      *IOSDoubleArray_GetRef(s, i) = 0.0;
    }
    if (IOSDoubleArray_Get(t, i) >= 0 && IOSDoubleArray_Get(t, i) <= 1 && IOSDoubleArray_Get(s, i) >= 0 && IOSDoubleArray_Get(s, i) <= 1) {
      *IOSDoubleArray_GetRef(nil_chk(params), 2 * quantity) = IOSDoubleArray_Get(t, i);
      *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(s, i);
      ++quantity;
    }
  }
  
#line 204
  return quantity;
}


#line 226
jint OrgApacheHarmonyAwtGeomGeometryUtil_intersectQuadsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble qx1, jdouble qy1, jdouble qx2, jdouble qy2, jdouble qx3, jdouble qy3, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 229
  IOSDoubleArray *initParams = [IOSDoubleArray newArrayWithLength:2];
  IOSDoubleArray *xCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *yCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs2 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *yCoefs2 = [IOSDoubleArray newArrayWithLength:3];
  jint quantity = 0;
  
#line 236
  *IOSDoubleArray_GetRef(xCoefs1, 0) = x1 - 2 * x2 + x3;
  *IOSDoubleArray_GetRef(xCoefs1, 1) = -2 * x1 + 2 * x2;
  *IOSDoubleArray_GetRef(xCoefs1, 2) = x1;
  
#line 240
  *IOSDoubleArray_GetRef(yCoefs1, 0) = y1 - 2 * y2 + y3;
  *IOSDoubleArray_GetRef(yCoefs1, 1) = -2 * y1 + 2 * y2;
  *IOSDoubleArray_GetRef(yCoefs1, 2) = y1;
  
#line 244
  *IOSDoubleArray_GetRef(xCoefs2, 0) = qx1 - 2 * qx2 + qx3;
  *IOSDoubleArray_GetRef(xCoefs2, 1) = -2 * qx1 + 2 * qx2;
  *IOSDoubleArray_GetRef(xCoefs2, 2) = qx1;
  
#line 248
  *IOSDoubleArray_GetRef(yCoefs2, 0) = qy1 - 2 * qy2 + qy3;
  *IOSDoubleArray_GetRef(yCoefs2, 1) = -2 * qy1 + 2 * qy2;
  *IOSDoubleArray_GetRef(yCoefs2, 2) = qy1;
  
#line 253
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = *IOSDoubleArray_GetRef(params, 1) = 0.25;
  OrgApacheHarmonyAwtGeomGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, initParams);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 261
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.75;
  OrgApacheHarmonyAwtGeomGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 269
  return quantity;
}


#line 295
jint OrgApacheHarmonyAwtGeomGeometryUtil_intersectQuadAndCubicWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble qx1, jdouble qy1, jdouble qx2, jdouble qy2, jdouble qx3, jdouble qy3, jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cx3, jdouble cy3, jdouble cx4, jdouble cy4, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 298
  jint quantity = 0;
  IOSDoubleArray *initParams = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *yCoefs1 = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *yCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  *IOSDoubleArray_GetRef(xCoefs1, 0) = qx1 - 2 * qx2 + qx3;
  *IOSDoubleArray_GetRef(xCoefs1, 1) = 2 * qx2 - 2 * qx1;
  *IOSDoubleArray_GetRef(xCoefs1, 2) = qx1;
  
#line 308
  *IOSDoubleArray_GetRef(yCoefs1, 0) = qy1 - 2 * qy2 + qy3;
  *IOSDoubleArray_GetRef(yCoefs1, 1) = 2 * qy2 - 2 * qy1;
  *IOSDoubleArray_GetRef(yCoefs1, 2) = qy1;
  
#line 312
  *IOSDoubleArray_GetRef(xCoefs2, 0) = -cx1 + 3 * cx2 - 3 * cx3 + cx4;
  *IOSDoubleArray_GetRef(xCoefs2, 1) = 3 * cx1 - 6 * cx2 + 3 * cx3;
  *IOSDoubleArray_GetRef(xCoefs2, 2) = -3 * cx1 + 3 * cx2;
  *IOSDoubleArray_GetRef(xCoefs2, 3) = cx1;
  
#line 317
  *IOSDoubleArray_GetRef(yCoefs2, 0) = -cy1 + 3 * cy2 - 3 * cy3 + cy4;
  *IOSDoubleArray_GetRef(yCoefs2, 1) = 3 * cy1 - 6 * cy2 + 3 * cy3;
  *IOSDoubleArray_GetRef(yCoefs2, 2) = -3 * cy1 + 3 * cy2;
  *IOSDoubleArray_GetRef(yCoefs2, 3) = cy1;
  
#line 323
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = *IOSDoubleArray_GetRef(params, 1) = 0.25;
  OrgApacheHarmonyAwtGeomGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, initParams);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 331
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.5;
  OrgApacheHarmonyAwtGeomGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 339
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.75;
  OrgApacheHarmonyAwtGeomGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  return quantity;
}


#line 373
jint OrgApacheHarmonyAwtGeomGeometryUtil_intersectCubicsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble x4, jdouble y4, jdouble cx1, jdouble cy1, jdouble cx2, jdouble cy2, jdouble cx3, jdouble cy3, jdouble cx4, jdouble cy4, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 377
  jint quantity = 0;
  IOSDoubleArray *initParams = [IOSDoubleArray newArrayWithLength:3];
  IOSDoubleArray *xCoefs1 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *yCoefs1 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *xCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  IOSDoubleArray *yCoefs2 = [IOSDoubleArray newArrayWithLength:4];
  *IOSDoubleArray_GetRef(xCoefs1, 0) = -x1 + 3 * x2 - 3 * x3 + x4;
  *IOSDoubleArray_GetRef(xCoefs1, 1) = 3 * x1 - 6 * x2 + 3 * x3;
  *IOSDoubleArray_GetRef(xCoefs1, 2) = -3 * x1 + 3 * x2;
  *IOSDoubleArray_GetRef(xCoefs1, 3) = x1;
  
#line 388
  *IOSDoubleArray_GetRef(yCoefs1, 0) = -y1 + 3 * y2 - 3 * y3 + y4;
  *IOSDoubleArray_GetRef(yCoefs1, 1) = 3 * y1 - 6 * y2 + 3 * y3;
  *IOSDoubleArray_GetRef(yCoefs1, 2) = -3 * y1 + 3 * y2;
  *IOSDoubleArray_GetRef(yCoefs1, 3) = y1;
  
#line 393
  *IOSDoubleArray_GetRef(xCoefs2, 0) = -cx1 + 3 * cx2 - 3 * cx3 + cx4;
  *IOSDoubleArray_GetRef(xCoefs2, 1) = 3 * cx1 - 6 * cx2 + 3 * cx3;
  *IOSDoubleArray_GetRef(xCoefs2, 2) = -3 * cx1 + 3 * cx2;
  *IOSDoubleArray_GetRef(xCoefs2, 3) = cx1;
  
#line 398
  *IOSDoubleArray_GetRef(yCoefs2, 0) = -cy1 + 3 * cy2 - 3 * cy3 + cy4;
  *IOSDoubleArray_GetRef(yCoefs2, 1) = 3 * cy1 - 6 * cy2 + 3 * cy3;
  *IOSDoubleArray_GetRef(yCoefs2, 2) = -3 * cy1 + 3 * cy2;
  *IOSDoubleArray_GetRef(yCoefs2, 3) = cy1;
  
#line 404
  *IOSDoubleArray_GetRef(nil_chk(params), 0) = *IOSDoubleArray_GetRef(params, 1) = 0.25;
  OrgApacheHarmonyAwtGeomGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, initParams);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 412
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.5;
  OrgApacheHarmonyAwtGeomGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  
#line 420
  *IOSDoubleArray_GetRef(params, 0) = *IOSDoubleArray_GetRef(params, 1) = 0.75;
  OrgApacheHarmonyAwtGeomGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(xCoefs1, yCoefs1, xCoefs2, yCoefs2, params);
  if (IOSDoubleArray_Get(initParams, 0) <= 1 && IOSDoubleArray_Get(initParams, 0) >= 0 && IOSDoubleArray_Get(initParams, 1) >= 0 && IOSDoubleArray_Get(initParams, 1) <= 1) {
    *IOSDoubleArray_GetRef(params, 2 * quantity) = IOSDoubleArray_Get(initParams, 0);
    *IOSDoubleArray_GetRef(params, 2 * quantity + 1) = IOSDoubleArray_Get(initParams, 1);
    ++quantity;
  }
  return quantity;
}


#line 430
jdouble OrgApacheHarmonyAwtGeomGeometryUtil_lineWithDouble_withDouble_withDouble_(jdouble t, jdouble x1, jdouble x2) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 431
  return x1 * (1.0 - t) + x2 * t;
}


#line 434
jdouble OrgApacheHarmonyAwtGeomGeometryUtil_quadWithDouble_withDouble_withDouble_withDouble_(jdouble t, jdouble x1, jdouble x2, jdouble x3) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 435
  return x1 * (1.0 - t) * (1.0 - t) + 2.0 * x2 * t * (1.0 - t) + x3 * t * t;
}


#line 438
jdouble OrgApacheHarmonyAwtGeomGeometryUtil_cubicWithDouble_withDouble_withDouble_withDouble_withDouble_(jdouble t, jdouble x1, jdouble x2, jdouble x3, jdouble x4) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 439
  return x1 * (1.0 - t) * (1.0 - t) * (1.0 - t) + 3.0 * x2 * (1.0 - t) * (1.0 - t) * t + 3.0 * x3 * (1.0 - t) * t *
#line 440
  t + x4 * t * t * t;
}


#line 445
void OrgApacheHarmonyAwtGeomGeometryUtil_subQuadWithDoubleArray_withDouble_withBoolean_(IOSDoubleArray *coef, jdouble t0, jboolean left) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 446
  if (left) {
    *IOSDoubleArray_GetRef(nil_chk(coef), 2) = (1 - t0) * IOSDoubleArray_Get(coef, 0) + t0 * IOSDoubleArray_Get(coef, 2);
    *IOSDoubleArray_GetRef(coef, 3) = (1 - t0) * IOSDoubleArray_Get(coef, 1) + t0 * IOSDoubleArray_Get(coef, 3);
  }
  else {
    
#line 450
    *IOSDoubleArray_GetRef(nil_chk(coef), 2) = (1 - t0) * IOSDoubleArray_Get(coef, 2) + t0 * IOSDoubleArray_Get(coef, 4);
    *IOSDoubleArray_GetRef(coef, 3) = (1 - t0) * IOSDoubleArray_Get(coef, 3) + t0 * IOSDoubleArray_Get(coef, 5);
  }
}


#line 455
void OrgApacheHarmonyAwtGeomGeometryUtil_subCubicWithDoubleArray_withDouble_withBoolean_(IOSDoubleArray *coef, jdouble t0, jboolean left) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  
#line 456
  if (left) {
    *IOSDoubleArray_GetRef(nil_chk(coef), 2) = (1 - t0) * IOSDoubleArray_Get(coef, 0) + t0 * IOSDoubleArray_Get(coef, 2);
    *IOSDoubleArray_GetRef(coef, 3) = (1 - t0) * IOSDoubleArray_Get(coef, 1) + t0 * IOSDoubleArray_Get(coef, 3);
  }
  else {
    
#line 460
    *IOSDoubleArray_GetRef(nil_chk(coef), 4) = (1 - t0) * IOSDoubleArray_Get(coef, 4) + t0 * IOSDoubleArray_Get(coef, 6);
    *IOSDoubleArray_GetRef(coef, 5) = (1 - t0) * IOSDoubleArray_Get(coef, 5) + t0 * IOSDoubleArray_Get(coef, 7);
  }
}


#line 465
void OrgApacheHarmonyAwtGeomGeometryUtil_cubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  jdouble t = 0.0;
  
#line 467
  jdouble s = 0.0;
  jdouble t1 = IOSDoubleArray_Get(nil_chk(params), 0);
  jdouble s1 = IOSDoubleArray_Get(params, 1);
  jdouble d;
  
#line 470
  jdouble dt;
  
#line 470
  jdouble ds;
  
#line 472
  while (JavaLangMath_sqrtWithDouble_((t - t1) * (t - t1) + (s - s1) * (s - s1)) > OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON) {
    d = -(3 * t * t * IOSDoubleArray_Get(nil_chk(xCoefs1), 0) + 2 * t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2)) *
#line 474
    (3 * s * s * IOSDoubleArray_Get(nil_chk(yCoefs2), 0) + 2 * s * IOSDoubleArray_Get(yCoefs2, 1) + IOSDoubleArray_Get(yCoefs2, 2)) +
#line 475
    (3 * t * t * IOSDoubleArray_Get(nil_chk(yCoefs1), 0) + 2 * t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2)) *
#line 476
    (3 * s * s * IOSDoubleArray_Get(nil_chk(xCoefs2), 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 478
    dt = (t * t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * t * IOSDoubleArray_Get(xCoefs1, 1) + t * IOSDoubleArray_Get(xCoefs1, 2) + IOSDoubleArray_Get(xCoefs1, 3) - s * s * s * IOSDoubleArray_Get(xCoefs2, 0) -
#line 479
    s * s * IOSDoubleArray_Get(xCoefs2, 1) - s * IOSDoubleArray_Get(xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3)) *
#line 480
    (-3 * s * s * IOSDoubleArray_Get(yCoefs2, 0) - 2 * s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2)) +
#line 481
    (t * t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * t * IOSDoubleArray_Get(yCoefs1, 1) + t * IOSDoubleArray_Get(yCoefs1, 2) + IOSDoubleArray_Get(yCoefs1, 3) - s * s * s * IOSDoubleArray_Get(
#line 482
    yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) - s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) *
#line 483
    (3 * s * s * IOSDoubleArray_Get(xCoefs2, 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 485
    ds = (3 * t * t * IOSDoubleArray_Get(xCoefs1, 0) + 2 * t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2)) *
#line 486
    (t * t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * t * IOSDoubleArray_Get(yCoefs1, 1) + t * IOSDoubleArray_Get(yCoefs1, 2) + IOSDoubleArray_Get(yCoefs1, 3) - s * s * s * IOSDoubleArray_Get(
#line 487
    yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) - s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) -
#line 488
    (3 * t * t * IOSDoubleArray_Get(yCoefs1, 0) + 2 * t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2)) *
#line 489
    (t * t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * t * IOSDoubleArray_Get(xCoefs1, 1) + t * IOSDoubleArray_Get(xCoefs1, 2) + IOSDoubleArray_Get(xCoefs1, 3) - s * s * s * IOSDoubleArray_Get(
#line 490
    xCoefs2, 0) - s * s * IOSDoubleArray_Get(xCoefs2, 1) - s * IOSDoubleArray_Get(xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3));
    
#line 492
    t1 = t - dt / d;
    s1 = s - ds / d;
  }
  *IOSDoubleArray_GetRef(params, 0) = t1;
  *IOSDoubleArray_GetRef(params, 1) = s1;
}


#line 499
void OrgApacheHarmonyAwtGeomGeometryUtil_quadAndCubicNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  jdouble t = 0.0;
  
#line 501
  jdouble s = 0.0;
  jdouble t1 = IOSDoubleArray_Get(nil_chk(params), 0);
  jdouble s1 = IOSDoubleArray_Get(params, 1);
  jdouble d;
  
#line 504
  jdouble dt;
  
#line 504
  jdouble ds;
  
#line 506
  while (JavaLangMath_sqrtWithDouble_((t - t1) * (t - t1) + (s - s1) * (s - s1)) > OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON) {
    d = -(2 * t * IOSDoubleArray_Get(nil_chk(xCoefs1), 0) + IOSDoubleArray_Get(xCoefs1, 1)) * (3 * s * s * IOSDoubleArray_Get(nil_chk(yCoefs2), 0) + 2 * s * IOSDoubleArray_Get(yCoefs2, 1) + IOSDoubleArray_Get(yCoefs2, 2)) +
#line 508
    (2 * t * IOSDoubleArray_Get(nil_chk(yCoefs1), 0) + IOSDoubleArray_Get(yCoefs1, 1)) * (3 * s * s * IOSDoubleArray_Get(nil_chk(xCoefs2), 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 510
    dt = (t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2) + -s * s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * s * IOSDoubleArray_Get(xCoefs2, 1) - s * IOSDoubleArray_Get(
#line 511
    xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3)) *
#line 512
    (-3 * s * s * IOSDoubleArray_Get(yCoefs2, 0) - 2 * s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2)) +
#line 513
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) -
#line 514
    s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) * (3 * s * s * IOSDoubleArray_Get(xCoefs2, 0) + 2 * s * IOSDoubleArray_Get(xCoefs2, 1) + IOSDoubleArray_Get(xCoefs2, 2));
    
#line 516
    ds = (2 * t * IOSDoubleArray_Get(xCoefs1, 0) + IOSDoubleArray_Get(xCoefs1, 1)) *
#line 517
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * s * IOSDoubleArray_Get(yCoefs2, 1) -
#line 518
    s * IOSDoubleArray_Get(yCoefs2, 2) - IOSDoubleArray_Get(yCoefs2, 3)) -
#line 519
    (2 * t * IOSDoubleArray_Get(yCoefs1, 0) + IOSDoubleArray_Get(yCoefs1, 1)) *
#line 520
    (t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2) - s * s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * s * IOSDoubleArray_Get(xCoefs2, 1) -
#line 521
    s * IOSDoubleArray_Get(xCoefs2, 2) - IOSDoubleArray_Get(xCoefs2, 3));
    
#line 523
    t1 = t - dt / d;
    s1 = s - ds / d;
  }
  *IOSDoubleArray_GetRef(params, 0) = t1;
  *IOSDoubleArray_GetRef(params, 1) = s1;
}


#line 530
void OrgApacheHarmonyAwtGeomGeometryUtil_quadNewtonWithDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_withDoubleArray_(IOSDoubleArray *xCoefs1, IOSDoubleArray *yCoefs1, IOSDoubleArray *xCoefs2, IOSDoubleArray *yCoefs2, IOSDoubleArray *params) {
  OrgApacheHarmonyAwtGeomGeometryUtil_initialize();
  jdouble t = 0.0;
  
#line 532
  jdouble s = 0.0;
  jdouble t1 = IOSDoubleArray_Get(nil_chk(params), 0);
  jdouble s1 = IOSDoubleArray_Get(params, 1);
  jdouble d;
  
#line 535
  jdouble dt;
  
#line 535
  jdouble ds;
  
#line 537
  while (JavaLangMath_sqrtWithDouble_((t - t1) * (t - t1) + (s - s1) * (s - s1)) > OrgApacheHarmonyAwtGeomGeometryUtil_EPSILON) {
    t = t1;
    s = s1;
    d = -(2 * t * IOSDoubleArray_Get(nil_chk(xCoefs1), 0) + IOSDoubleArray_Get(xCoefs1, 1)) * (2 * s * IOSDoubleArray_Get(nil_chk(yCoefs2), 0) + IOSDoubleArray_Get(yCoefs2, 1)) +
#line 541
    (2 * s * IOSDoubleArray_Get(nil_chk(xCoefs2), 0) + IOSDoubleArray_Get(xCoefs2, 1)) * (2 * t * IOSDoubleArray_Get(nil_chk(yCoefs1), 0) + IOSDoubleArray_Get(yCoefs1, 1));
    
#line 543
    dt = -(t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 1) - s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * IOSDoubleArray_Get(xCoefs2, 1) - IOSDoubleArray_Get(xCoefs2, 2)) *
#line 544
    (2 * s * IOSDoubleArray_Get(yCoefs2, 0) + IOSDoubleArray_Get(yCoefs2, 1)) +
#line 545
    (2 * s * IOSDoubleArray_Get(xCoefs2, 0) + IOSDoubleArray_Get(xCoefs2, 1)) *
#line 546
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2));
    
#line 548
    ds = (2 * t * IOSDoubleArray_Get(xCoefs1, 0) + IOSDoubleArray_Get(xCoefs1, 1)) *
#line 549
    (t * t * IOSDoubleArray_Get(yCoefs1, 0) + t * IOSDoubleArray_Get(yCoefs1, 1) + IOSDoubleArray_Get(yCoefs1, 2) - s * s * IOSDoubleArray_Get(yCoefs2, 0) - s * IOSDoubleArray_Get(yCoefs2, 1) - IOSDoubleArray_Get(yCoefs2, 2)) -
#line 550
    (2 * t * IOSDoubleArray_Get(yCoefs1, 0) + IOSDoubleArray_Get(yCoefs1, 1)) *
#line 551
    (t * t * IOSDoubleArray_Get(xCoefs1, 0) + t * IOSDoubleArray_Get(xCoefs1, 1) + IOSDoubleArray_Get(xCoefs1, 2) - s * s * IOSDoubleArray_Get(xCoefs2, 0) - s * IOSDoubleArray_Get(xCoefs2, 1) - IOSDoubleArray_Get(xCoefs2, 2));
    
#line 553
    t1 = t - dt / d;
    s1 = s - ds / d;
  }
  *IOSDoubleArray_GetRef(params, 0) = t1;
  *IOSDoubleArray_GetRef(params, 1) = s1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheHarmonyAwtGeomGeometryUtil)

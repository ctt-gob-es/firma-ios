//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/ExtCRLException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/security/cert/CRLException.h"
#include "org/spongycastle/jcajce/provider/asymmetric/x509/ExtCRLException.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/jcajce/provider/asymmetric/x509/ExtCRLException must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/ExtCRLException.java"


#line 5
@implementation OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException


#line 10
- (instancetype)initPackagePrivateWithNSString:(NSString *)message
                         withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  
#line 18
  return cause_ExtCRLException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_ExtCRLException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x0, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "cause" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException = { "ExtCRLException", "org.spongycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException;
}

@end


#line 10
void OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException *self, NSString *message, JavaLangThrowable *cause) {
  JavaSecurityCertCRLException_initWithNSString_(self,
#line 12
  message);
  self->cause_ExtCRLException_ = cause;
}


#line 10
OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException *new_OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException, initPackagePrivateWithNSString_withJavaLangThrowable_, message, cause)
}


#line 10
OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException *create_OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException, initPackagePrivateWithNSString_withJavaLangThrowable_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajceProviderAsymmetricX509ExtCRLException)

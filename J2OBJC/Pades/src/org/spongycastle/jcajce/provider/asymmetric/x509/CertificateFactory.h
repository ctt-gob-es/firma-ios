//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/CertificateFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory")
#ifdef RESTRICT_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory
#define INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory 0
#else
#define INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory 1
#endif
#undef RESTRICT_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory

#if !defined (OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_) && (INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory || defined(INCLUDE_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory))
#define OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_

#define RESTRICT_JavaSecurityCertCertificateFactorySpi 1
#define INCLUDE_JavaSecurityCertCertificateFactorySpi 1
#include "java/security/cert/CertificateFactorySpi.h"

@class JavaIoInputStream;
@class JavaSecurityCertCRL;
@class JavaSecurityCertCertPath;
@class JavaSecurityCertCertificate;
@class OrgSpongycastleAsn1X509CertificateList;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol JavaUtilList;

/*!
 @brief class for dealing with X509 certificates.
 <p>
  At the moment this will deal with "-----BEGIN CERTIFICATE-----" to "-----END CERTIFICATE-----"
  base 64 encoded certs, as well as the BER binaries of certificates and some classes of PKCS#7
  objects.
 */
@interface OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory : JavaSecurityCertCertificateFactorySpi

#pragma mark Public

- (instancetype)init;

/*!
 @brief Generates a certificate object and initializes it with the data
  read from the input stream inStream.
 */
- (JavaSecurityCertCertificate *)engineGenerateCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg;

/*!
 @brief Returns a (possibly empty) collection view of the certificates
  read from the given input stream inStream.
 */
- (id<JavaUtilCollection>)engineGenerateCertificatesWithJavaIoInputStream:(JavaIoInputStream *)inStream;

- (JavaSecurityCertCertPath *)engineGenerateCertPathWithJavaIoInputStream:(JavaIoInputStream *)inStream;

- (JavaSecurityCertCertPath *)engineGenerateCertPathWithJavaIoInputStream:(JavaIoInputStream *)inStream
                                                             withNSString:(NSString *)encoding;

- (JavaSecurityCertCertPath *)engineGenerateCertPathWithJavaUtilList:(id<JavaUtilList>)certificates;

/*!
 @brief Generates a certificate revocation list (CRL) object and initializes
  it with the data read from the input stream inStream.
 */
- (JavaSecurityCertCRL *)engineGenerateCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg;

/*!
 @brief Returns a (possibly empty) collection view of the CRLs read from
  the given input stream inStream.
 The inStream may contain a sequence of DER-encoded CRLs, or
  a PKCS#7 CRL set.  This is a PKCS#7 SignedData object, with the
  only signficant field being crls.  In particular the signature
  and the contents are ignored.
 */
- (id<JavaUtilCollection>)engineGenerateCRLsWithJavaIoInputStream:(JavaIoInputStream *)inStream;

- (id<JavaUtilIterator>)engineGetCertPathEncodings;

#pragma mark Protected

- (JavaSecurityCertCRL *)createCRLWithOrgSpongycastleAsn1X509CertificateList:(OrgSpongycastleAsn1X509CertificateList *)c;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory)

FOUNDATION_EXPORT void OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_init(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self);

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *new_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *create_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/CertificateFactory.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedInputStream.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/security/cert/CRL.h"
#include "java/security/cert/CRLException.h"
#include "java/security/cert/CertPath.h"
#include "java/security/cert/Certificate.h"
#include "java/security/cert/CertificateException.h"
#include "java/security/cert/CertificateFactorySpi.h"
#include "java/security/cert/X509Certificate.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1InputStream.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/ASN1Sequence.h"
#include "org/spongycastle/asn1/ASN1Set.h"
#include "org/spongycastle/asn1/ASN1TaggedObject.h"
#include "org/spongycastle/asn1/pkcs/BCSignedData.h"
#include "org/spongycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/spongycastle/asn1/x509/Certificate.h"
#include "org/spongycastle/asn1/x509/CertificateList.h"
#include "org/spongycastle/jcajce/provider/asymmetric/x509/CertificateFactory.h"
#include "org/spongycastle/jcajce/provider/asymmetric/x509/PEMUtil.h"
#include "org/spongycastle/jcajce/provider/asymmetric/x509/PKIXCertPath.h"
#include "org/spongycastle/jcajce/provider/asymmetric/x509/X509CRLObject.h"
#include "org/spongycastle/jcajce/provider/asymmetric/x509/X509CertificateObject.h"
#include "org/spongycastle/jcajce/util/BCJcaJceHelper.h"
#include "org/spongycastle/jcajce/util/JcaJceHelper.h"
#include "org/spongycastle/util/io/Streams.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/jcajce/provider/asymmetric/x509/CertificateFactory must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory () {
 @public
  id<OrgSpongycastleJcajceUtilJcaJceHelper> bcHelper_;
  OrgSpongycastleAsn1ASN1Set *sData_;
  jint sDataObjectCount_;
  JavaIoInputStream *currentStream_;
  OrgSpongycastleAsn1ASN1Set *sCrlData_;
  jint sCrlDataObjectCount_;
  JavaIoInputStream *currentCrlStream_;
}

- (JavaSecurityCertCertificate *)readDERCertificateWithOrgSpongycastleAsn1ASN1InputStream:(OrgSpongycastleAsn1ASN1InputStream *)dIn;

- (JavaSecurityCertCertificate *)readPEMCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (JavaSecurityCertCertificate *)getCertificateWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

- (JavaSecurityCertCertificate *)getCertificate;

- (JavaSecurityCertCRL *)readPEMCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (JavaSecurityCertCRL *)readDERCRLWithOrgSpongycastleAsn1ASN1InputStream:(OrgSpongycastleAsn1ASN1InputStream *)aIn;

- (JavaSecurityCertCRL *)getCRLWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

- (JavaSecurityCertCRL *)getCRL;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, bcHelper_, id<OrgSpongycastleJcajceUtilJcaJceHelper>)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, sData_, OrgSpongycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, currentStream_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, sCrlData_, OrgSpongycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, currentCrlStream_, JavaIoInputStream *)

inline OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_get_PEM_CERT_PARSER(void);
static OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CERT_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, PEM_CERT_PARSER, OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *)

inline OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_get_PEM_CRL_PARSER(void);
static OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CRL_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, PEM_CRL_PARSER, OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *)

inline OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_get_PEM_PKCS7_PARSER(void);
static OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_PKCS7_PARSER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, PEM_PKCS7_PARSER, OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *)

__attribute__((unused)) static JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCertificateWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1InputStream *dIn);

__attribute__((unused)) static JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCertificateWithJavaIoInputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, JavaIoInputStream *inArg);

__attribute__((unused)) static JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificateWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificate(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self);

__attribute__((unused)) static JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCRLWithJavaIoInputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, JavaIoInputStream *inArg);

__attribute__((unused)) static JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCRLWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1InputStream *aIn);

__attribute__((unused)) static JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRLWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self);

@interface OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException : JavaSecurityCertCertificateException {
 @public
  JavaLangThrowable *cause_ExCertificateException_;
}

- (instancetype)initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory:(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *)outer$
                                                                withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype)initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory:(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *)outer$
                                                                         withNSString:(NSString *)msg
                                                                withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException)

J2OBJC_FIELD_SETTER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException, cause_ExCertificateException_, JavaLangThrowable *)

__attribute__((unused)) static void OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *self, OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, JavaLangThrowable *cause);

__attribute__((unused)) static OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *new_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *create_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, JavaLangThrowable *cause);

__attribute__((unused)) static void OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *self, OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, NSString *msg, JavaLangThrowable *cause);

__attribute__((unused)) static OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *new_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *create_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, NSString *msg, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/CertificateFactory.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory)


#line 39
@implementation OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 39
- (instancetype)init {
  OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 56
- (JavaSecurityCertCertificate *)readDERCertificateWithOrgSpongycastleAsn1ASN1InputStream:(OrgSpongycastleAsn1ASN1InputStream *)dIn {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCertificateWithOrgSpongycastleAsn1ASN1InputStream_(self, dIn);
}


#line 63
- (JavaSecurityCertCertificate *)readPEMCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCertificateWithJavaIoInputStream_(self, inArg);
}


#line 70
- (JavaSecurityCertCertificate *)getCertificateWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificateWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
}


#line 94
- (JavaSecurityCertCertificate *)getCertificate {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificate(self);
}


#line 115
- (JavaSecurityCertCRL *)createCRLWithOrgSpongycastleAsn1X509CertificateList:(OrgSpongycastleAsn1X509CertificateList *)c {
  
#line 118
  return new_OrgSpongycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_withOrgSpongycastleAsn1X509CertificateList_(bcHelper_, c);
}

- (JavaSecurityCertCRL *)readPEMCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCRLWithJavaIoInputStream_(self, inArg);
}


#line 128
- (JavaSecurityCertCRL *)readDERCRLWithOrgSpongycastleAsn1ASN1InputStream:(OrgSpongycastleAsn1ASN1InputStream *)aIn {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCRLWithOrgSpongycastleAsn1ASN1InputStream_(self, aIn);
}


#line 135
- (JavaSecurityCertCRL *)getCRLWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRLWithOrgSpongycastleAsn1ASN1Sequence_(self, seq);
}


#line 159
- (JavaSecurityCertCRL *)getCRL {
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRL(self);
}


#line 176
- (JavaSecurityCertCertificate *)engineGenerateCertificateWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  
#line 180
  if (currentStream_ == nil) {
    
#line 182
    currentStream_ = inArg;
    sData_ = nil;
    sDataObjectCount_ = 0;
  }
  else if (!JreObjectEqualsEquals(currentStream_, inArg)) {
    
#line 188
    currentStream_ = inArg;
    sData_ = nil;
    sDataObjectCount_ = 0;
  }
  
#line 193
  @try {
    
#line 195
    if (sData_ != nil) {
      
#line 197
      if (sDataObjectCount_ != [sData_ size]) {
        
#line 199
        return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificate(self);
      }
      else {
        
#line 203
        sData_ = nil;
        sDataObjectCount_ = 0;
        return nil;
      }
    }
    
#line 209
    JavaIoInputStream *pis;
    
#line 211
    if ([((JavaIoInputStream *) nil_chk(inArg)) markSupported]) {
      
#line 213
      pis = inArg;
    }
    else {
      
#line 217
      pis = new_JavaIoByteArrayInputStream_initWithByteArray_(OrgSpongycastleUtilIoStreams_readAllWithJavaIoInputStream_(inArg));
    }
    
#line 220
    [pis markWithInt:1];
    jint tag = [pis read];
    
#line 223
    if (tag == -1) {
      
#line 225
      return nil;
    }
    
#line 228
    [pis reset];
    if (tag != (jint) 0x30) {
      
#line 231
      return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCertificateWithJavaIoInputStream_(self, pis);
    }
    else {
      
#line 235
      return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCertificateWithOrgSpongycastleAsn1ASN1InputStream_(self, new_OrgSpongycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(pis));
    }
  }
  @catch (JavaLangException *e) {
    
#line 240
    @throw new_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(self, JreStrcat("$$", @"parsing issue: ", [e getMessage]), e);
  }
}


#line 248
- (id<JavaUtilCollection>)engineGenerateCertificatesWithJavaIoInputStream:(JavaIoInputStream *)inStream {
  
#line 252
  JavaSecurityCertCertificate *cert;
  JavaIoBufferedInputStream *in = new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(inStream);
  
#line 255
  id<JavaUtilList> certs = new_JavaUtilArrayList_init();
  
#line 257
  while ((cert = [self engineGenerateCertificateWithJavaIoInputStream:in]) != nil) {
    
#line 259
    [certs addWithId:cert];
  }
  
#line 262
  return certs;
}


#line 269
- (JavaSecurityCertCRL *)engineGenerateCRLWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  
#line 273
  if (currentCrlStream_ == nil) {
    
#line 275
    currentCrlStream_ = inArg;
    sCrlData_ = nil;
    sCrlDataObjectCount_ = 0;
  }
  else if (!JreObjectEqualsEquals(currentCrlStream_, inArg)) {
    
#line 281
    currentCrlStream_ = inArg;
    sCrlData_ = nil;
    sCrlDataObjectCount_ = 0;
  }
  
#line 286
  @try {
    
#line 288
    if (sCrlData_ != nil) {
      
#line 290
      if (sCrlDataObjectCount_ != [sCrlData_ size]) {
        
#line 292
        return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRL(self);
      }
      else {
        
#line 296
        sCrlData_ = nil;
        sCrlDataObjectCount_ = 0;
        return nil;
      }
    }
    
#line 302
    JavaIoInputStream *pis;
    
#line 304
    if ([((JavaIoInputStream *) nil_chk(inArg)) markSupported]) {
      
#line 306
      pis = inArg;
    }
    else {
      
#line 310
      pis = new_JavaIoByteArrayInputStream_initWithByteArray_(OrgSpongycastleUtilIoStreams_readAllWithJavaIoInputStream_(inArg));
    }
    
#line 313
    [pis markWithInt:1];
    jint tag = [pis read];
    
#line 316
    if (tag == -1) {
      
#line 318
      return nil;
    }
    
#line 321
    [pis reset];
    if (tag != (jint) 0x30) {
      
#line 324
      return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCRLWithJavaIoInputStream_(self, pis);
    }
    else {
      
#line 328
      return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCRLWithOrgSpongycastleAsn1ASN1InputStream_(self, new_OrgSpongycastleAsn1ASN1InputStream_initWithJavaIoInputStream_withBoolean_(pis, true));
    }
  }
  @catch (JavaSecurityCertCRLException *e) {
    
#line 333
    @throw e;
  }
  @catch (JavaLangException *e) {
    
#line 337
    @throw new_JavaSecurityCertCRLException_initWithNSString_([e description]);
  }
}


#line 350
- (id<JavaUtilCollection>)engineGenerateCRLsWithJavaIoInputStream:(JavaIoInputStream *)inStream {
  
#line 354
  JavaSecurityCertCRL *crl;
  id<JavaUtilList> crls = new_JavaUtilArrayList_init();
  JavaIoBufferedInputStream *in = new_JavaIoBufferedInputStream_initWithJavaIoInputStream_(inStream);
  
#line 358
  while ((crl = [self engineGenerateCRLWithJavaIoInputStream:in]) != nil) {
    
#line 360
    [crls addWithId:crl];
  }
  
#line 363
  return crls;
}


#line 366
- (id<JavaUtilIterator>)engineGetCertPathEncodings {
  
#line 368
  return [((id<JavaUtilList>) nil_chk(JreLoadStatic(OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath, certPathEncodings))) iterator];
}


#line 371
- (JavaSecurityCertCertPath *)engineGenerateCertPathWithJavaIoInputStream:(JavaIoInputStream *)inStream {
  
#line 375
  return [self engineGenerateCertPathWithJavaIoInputStream:inStream withNSString:@"PkiPath"];
}


#line 378
- (JavaSecurityCertCertPath *)engineGenerateCertPathWithJavaIoInputStream:(JavaIoInputStream *)inStream
                                                             withNSString:(NSString *)encoding {
  
#line 383
  return new_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaIoInputStream_withNSString_(inStream, encoding);
}


#line 386
- (JavaSecurityCertCertPath *)engineGenerateCertPathWithJavaUtilList:(id<JavaUtilList>)certificates {
  
#line 390
  id<JavaUtilIterator> iter = [((id<JavaUtilList>) nil_chk(certificates)) iterator];
  id obj;
  while ([((id<JavaUtilIterator>) nil_chk(iter)) hasNext]) {
    
#line 394
    obj = [iter next];
    if (obj != nil) {
      
#line 397
      if (!([obj isKindOfClass:[JavaSecurityCertX509Certificate class]])) {
        
#line 399
        @throw new_JavaSecurityCertCertificateException_initWithNSString_(JreStrcat("$$", @"list contains non X509Certificate object while creating CertPath\n", [obj description]));
      }
    }
  }
  return new_OrgSpongycastleJcajceProviderAsymmetricX509PKIXCertPath_initWithJavaUtilList_(certificates);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x2, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x2, 3, 4, 2, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x2, 5, 6, 7, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x2, -1, -1, 7, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x4, 8, 9, 10, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x2, 11, 4, 12, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x2, 13, 1, 12, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x2, 14, 6, 10, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x2, -1, -1, 10, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertificate;", 0x1, 15, 4, 16, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, 17, 4, 16, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCRL;", 0x1, 18, 4, 10, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, 19, 4, 10, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertPath;", 0x1, 20, 4, 16, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertPath;", 0x1, 20, 21, 16, -1, -1, -1 },
    { NULL, "LJavaSecurityCertCertPath;", 0x1, 20, 22, 16, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readDERCertificateWithOrgSpongycastleAsn1ASN1InputStream:);
  methods[2].selector = @selector(readPEMCertificateWithJavaIoInputStream:);
  methods[3].selector = @selector(getCertificateWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[4].selector = @selector(getCertificate);
  methods[5].selector = @selector(createCRLWithOrgSpongycastleAsn1X509CertificateList:);
  methods[6].selector = @selector(readPEMCRLWithJavaIoInputStream:);
  methods[7].selector = @selector(readDERCRLWithOrgSpongycastleAsn1ASN1InputStream:);
  methods[8].selector = @selector(getCRLWithOrgSpongycastleAsn1ASN1Sequence:);
  methods[9].selector = @selector(getCRL);
  methods[10].selector = @selector(engineGenerateCertificateWithJavaIoInputStream:);
  methods[11].selector = @selector(engineGenerateCertificatesWithJavaIoInputStream:);
  methods[12].selector = @selector(engineGenerateCRLWithJavaIoInputStream:);
  methods[13].selector = @selector(engineGenerateCRLsWithJavaIoInputStream:);
  methods[14].selector = @selector(engineGetCertPathEncodings);
  methods[15].selector = @selector(engineGenerateCertPathWithJavaIoInputStream:);
  methods[16].selector = @selector(engineGenerateCertPathWithJavaIoInputStream:withNSString:);
  methods[17].selector = @selector(engineGenerateCertPathWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bcHelper_", "LOrgSpongycastleJcajceUtilJcaJceHelper;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "PEM_CERT_PARSER", "LOrgSpongycastleJcajceProviderAsymmetricX509PEMUtil;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
    { "PEM_CRL_PARSER", "LOrgSpongycastleJcajceProviderAsymmetricX509PEMUtil;", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "PEM_PKCS7_PARSER", "LOrgSpongycastleJcajceProviderAsymmetricX509PEMUtil;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "sData_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sDataObjectCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sCrlData_", "LOrgSpongycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sCrlDataObjectCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentCrlStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "readDERCertificate", "LOrgSpongycastleAsn1ASN1InputStream;", "LJavaIoIOException;LJavaSecurityCertCertificateParsingException;", "readPEMCertificate", "LJavaIoInputStream;", "getCertificate", "LOrgSpongycastleAsn1ASN1Sequence;", "LJavaSecurityCertCertificateParsingException;", "createCRL", "LOrgSpongycastleAsn1X509CertificateList;", "LJavaSecurityCertCRLException;", "readPEMCRL", "LJavaIoIOException;LJavaSecurityCertCRLException;", "readDERCRL", "getCRL", "engineGenerateCertificate", "LJavaSecurityCertCertificateException;", "engineGenerateCertificates", "engineGenerateCRL", "engineGenerateCRLs", "engineGenerateCertPath", "LJavaIoInputStream;LNSString;", "LJavaUtilList;", &OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CERT_PARSER, &OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CRL_PARSER, &OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_PKCS7_PARSER, "LOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException;" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory = { "CertificateFactory", "org.spongycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x1, 18, 10, -1, 26, -1, -1, -1 };
  return &_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory;
}

+ (void)initialize {
  if (self == [OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory class]) {
    OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CERT_PARSER = new_OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil_initPackagePrivateWithNSString_(
#line 44
    @"CERTIFICATE");
    OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CRL_PARSER = new_OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil_initPackagePrivateWithNSString_(
#line 45
    @"CRL");
    OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_PKCS7_PARSER = new_OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil_initPackagePrivateWithNSString_(
#line 46
    @"PKCS7");
    J2OBJC_SET_INITIALIZED(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory)
  }
}

@end


#line 39
void OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_init(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self) {
  JavaSecurityCertCertificateFactorySpi_init(self);
  self->bcHelper_ = new_OrgSpongycastleJcajceUtilBCJcaJceHelper_init();
  self->sData_ =
#line 48
  nil;
  self->sDataObjectCount_ = 0;
  self->currentStream_ = nil;
  self->sCrlData_ =
#line 52
  nil;
  self->sCrlDataObjectCount_ = 0;
  self->currentCrlStream_ = nil;
}


#line 39
OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *new_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, init)
}


#line 39
OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *create_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory, init)
}


#line 56
JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCertificateWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1InputStream *dIn) {
  
#line 60
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificateWithOrgSpongycastleAsn1ASN1Sequence_(self, OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgSpongycastleAsn1ASN1InputStream *) nil_chk(dIn)) readObject]));
}


#line 63
JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCertificateWithJavaIoInputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, JavaIoInputStream *inArg) {
  
#line 67
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificateWithOrgSpongycastleAsn1ASN1Sequence_(self, [((OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *) nil_chk(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CERT_PARSER)) readPEMObjectWithJavaIoInputStream:inArg]);
}


#line 70
JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificateWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  
#line 73
  if (seq == nil) {
    
#line 75
    return nil;
  }
  
#line 78
  if ([seq size] > 1 &&
#line 79
  [[seq getObjectAtWithInt:0] isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 81
    if ([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:0])) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, signedData)]) {
      
#line 83
      self->sData_ = [((OrgSpongycastleAsn1PkcsBCSignedData *) nil_chk(OrgSpongycastleAsn1PkcsBCSignedData_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(
#line 84
      (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:1], [OrgSpongycastleAsn1ASN1TaggedObject class]), true)))) getCertificates];
      
#line 86
      return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificate(self);
    }
  }
  
#line 90
  return new_OrgSpongycastleJcajceProviderAsymmetricX509X509CertificateObject_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_withOrgSpongycastleAsn1X509Certificate_(self->bcHelper_, OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(
#line 91
  seq));
}


#line 94
JavaSecurityCertCertificate *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCertificate(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self) {
  
#line 97
  if (self->sData_ != nil) {
    
#line 99
    while (self->sDataObjectCount_ < [((OrgSpongycastleAsn1ASN1Set *) nil_chk(self->sData_)) size]) {
      
#line 101
      id obj = [((OrgSpongycastleAsn1ASN1Set *) nil_chk(self->sData_)) getObjectAtWithInt:self->sDataObjectCount_++];
      
#line 103
      if ([obj isKindOfClass:[OrgSpongycastleAsn1ASN1Sequence class]]) {
        
#line 105
        return new_OrgSpongycastleJcajceProviderAsymmetricX509X509CertificateObject_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_withOrgSpongycastleAsn1X509Certificate_(self->bcHelper_, OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(
#line 106
        obj));
      }
    }
  }
  
#line 111
  return nil;
}


#line 121
JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readPEMCRLWithJavaIoInputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, JavaIoInputStream *inArg) {
  
#line 125
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRLWithOrgSpongycastleAsn1ASN1Sequence_(self, [((OrgSpongycastleJcajceProviderAsymmetricX509PEMUtil *) nil_chk(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_PEM_CRL_PARSER)) readPEMObjectWithJavaIoInputStream:inArg]);
}


#line 128
JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_readDERCRLWithOrgSpongycastleAsn1ASN1InputStream_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1InputStream *aIn) {
  
#line 132
  return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRLWithOrgSpongycastleAsn1ASN1Sequence_(self, OrgSpongycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgSpongycastleAsn1ASN1InputStream *) nil_chk(aIn)) readObject]));
}


#line 135
JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRLWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self, OrgSpongycastleAsn1ASN1Sequence *seq) {
  
#line 138
  if (seq == nil) {
    
#line 140
    return nil;
  }
  
#line 143
  if ([seq size] > 1 &&
#line 144
  [[seq getObjectAtWithInt:0] isKindOfClass:[OrgSpongycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 146
    if ([((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([seq getObjectAtWithInt:0])) isEqual:JreLoadStatic(OrgSpongycastleAsn1PkcsPKCSObjectIdentifiers, signedData)]) {
      
#line 148
      self->sCrlData_ = [((OrgSpongycastleAsn1PkcsBCSignedData *) nil_chk(OrgSpongycastleAsn1PkcsBCSignedData_getInstanceWithId_(OrgSpongycastleAsn1ASN1Sequence_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(
#line 149
      (OrgSpongycastleAsn1ASN1TaggedObject *) cast_chk([seq getObjectAtWithInt:1], [OrgSpongycastleAsn1ASN1TaggedObject class]), true)))) getCRLs];
      
#line 151
      return OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRL(self);
    }
  }
  
#line 155
  return [self createCRLWithOrgSpongycastleAsn1X509CertificateList:OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(
#line 156
  seq)];
}


#line 159
JavaSecurityCertCRL *OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_getCRL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *self) {
  
#line 162
  if (self->sCrlData_ == nil || self->sCrlDataObjectCount_ >= [self->sCrlData_ size]) {
    
#line 164
    return nil;
  }
  
#line 167
  return [self createCRLWithOrgSpongycastleAsn1X509CertificateList:OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(
#line 169
  [self->sCrlData_ getObjectAtWithInt:self->sCrlDataObjectCount_++])];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/provider/asymmetric/x509/CertificateFactory.java"


#line 406
@implementation OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException


#line 411
- (instancetype)initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory:(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *)outer$
                                                                withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_(self, outer$, cause);
  return self;
}


#line 416
- (instancetype)initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory:(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *)outer$
                                                                         withNSString:(NSString *)msg
                                                                withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(self, outer$, msg, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  
#line 425
  return cause_ExCertificateException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory:withJavaLangThrowable:);
  methods[1].selector = @selector(initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory:withNSString:withJavaLangThrowable:);
  methods[2].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_ExCertificateException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory;LJavaLangThrowable;", "LOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory;LNSString;LJavaLangThrowable;", "cause", "LOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory;" };
  static const J2ObjcClassInfo _OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException = { "ExCertificateException", "org.spongycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x2, 3, 1, 3, -1, -1, -1, -1 };
  return &_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException;
}

@end


#line 411
void OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *self, OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, JavaLangThrowable *cause) {
  JavaSecurityCertCertificateException_init(self);
  self->cause_ExCertificateException_ = cause;
}


#line 411
OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *new_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException, initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_, outer$, cause)
}


#line 411
OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *create_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException, initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withJavaLangThrowable_, outer$, cause)
}


#line 416
void OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *self, OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, NSString *msg, JavaLangThrowable *cause) {
  JavaSecurityCertCertificateException_initWithNSString_(self,
#line 418
  msg);
  
#line 420
  self->cause_ExCertificateException_ = cause;
}


#line 416
OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *new_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException, initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_, outer$, msg, cause)
}


#line 416
OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException *create_OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException_initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory *outer$, NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException, initWithOrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_withNSString_withJavaLangThrowable_, outer$, msg, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleJcajceProviderAsymmetricX509CertificateFactory_ExCertificateException)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jcajce/PKIXCertStoreSelector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleJcajcePKIXCertStoreSelector")
#ifdef RESTRICT_OrgSpongycastleJcajcePKIXCertStoreSelector
#define INCLUDE_ALL_OrgSpongycastleJcajcePKIXCertStoreSelector 0
#else
#define INCLUDE_ALL_OrgSpongycastleJcajcePKIXCertStoreSelector 1
#endif
#undef RESTRICT_OrgSpongycastleJcajcePKIXCertStoreSelector

#if !defined (OrgSpongycastleJcajcePKIXCertStoreSelector_) && (INCLUDE_ALL_OrgSpongycastleJcajcePKIXCertStoreSelector || defined(INCLUDE_OrgSpongycastleJcajcePKIXCertStoreSelector))
#define OrgSpongycastleJcajcePKIXCertStoreSelector_

#define RESTRICT_OrgSpongycastleUtilSelector 1
#define INCLUDE_OrgSpongycastleUtilSelector 1
#include "org/spongycastle/util/Selector.h"

@class JavaSecurityCertCertStore;
@class JavaSecurityCertCertificate;
@protocol JavaUtilCollection;

/*!
 @brief This class is a Selector implementation for certificates.
 - seealso: org.spongycastle.util.Selector
 */
@interface OrgSpongycastleJcajcePKIXCertStoreSelector : NSObject < OrgSpongycastleUtilSelector >

#pragma mark Public

- (id)java_clone;

+ (id<JavaUtilCollection>)getCertificatesWithOrgSpongycastleJcajcePKIXCertStoreSelector:(OrgSpongycastleJcajcePKIXCertStoreSelector *)selector
                                                          withJavaSecurityCertCertStore:(JavaSecurityCertCertStore *)certStore;

- (jboolean)matchWithId:(JavaSecurityCertCertificate *)cert;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajcePKIXCertStoreSelector)

FOUNDATION_EXPORT id<JavaUtilCollection> OrgSpongycastleJcajcePKIXCertStoreSelector_getCertificatesWithOrgSpongycastleJcajcePKIXCertStoreSelector_withJavaSecurityCertCertStore_(OrgSpongycastleJcajcePKIXCertStoreSelector *selector, JavaSecurityCertCertStore *certStore);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajcePKIXCertStoreSelector)

#endif

#if !defined (OrgSpongycastleJcajcePKIXCertStoreSelector_Builder_) && (INCLUDE_ALL_OrgSpongycastleJcajcePKIXCertStoreSelector || defined(INCLUDE_OrgSpongycastleJcajcePKIXCertStoreSelector_Builder))
#define OrgSpongycastleJcajcePKIXCertStoreSelector_Builder_

@class OrgSpongycastleJcajcePKIXCertStoreSelector;
@protocol JavaSecurityCertCertSelector;

/*!
 @brief Builder for a PKIXCertStoreSelector.
 */
@interface OrgSpongycastleJcajcePKIXCertStoreSelector_Builder : NSObject

#pragma mark Public

/*!
 @brief Constructor initializing a builder with a CertSelector.
 @param certSelector the CertSelector to copy the match details from.
 */
- (instancetype)initWithJavaSecurityCertCertSelector:(id<JavaSecurityCertCertSelector>)certSelector;

/*!
 @brief Build a selector.
 @return a new PKIXCertStoreSelector
 */
- (OrgSpongycastleJcajcePKIXCertStoreSelector *)build;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJcajcePKIXCertStoreSelector_Builder)

FOUNDATION_EXPORT void OrgSpongycastleJcajcePKIXCertStoreSelector_Builder_initWithJavaSecurityCertCertSelector_(OrgSpongycastleJcajcePKIXCertStoreSelector_Builder *self, id<JavaSecurityCertCertSelector> certSelector);

FOUNDATION_EXPORT OrgSpongycastleJcajcePKIXCertStoreSelector_Builder *new_OrgSpongycastleJcajcePKIXCertStoreSelector_Builder_initWithJavaSecurityCertCertSelector_(id<JavaSecurityCertCertSelector> certSelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJcajcePKIXCertStoreSelector_Builder *create_OrgSpongycastleJcajcePKIXCertStoreSelector_Builder_initWithJavaSecurityCertCertSelector_(id<JavaSecurityCertCertSelector> certSelector);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJcajcePKIXCertStoreSelector_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleJcajcePKIXCertStoreSelector")

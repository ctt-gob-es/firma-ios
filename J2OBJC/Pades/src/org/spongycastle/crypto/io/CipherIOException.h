//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/crypto/io/CipherIOException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoCipherIOException")
#ifdef RESTRICT_OrgSpongycastleCryptoIoCipherIOException
#define INCLUDE_ALL_OrgSpongycastleCryptoIoCipherIOException 0
#else
#define INCLUDE_ALL_OrgSpongycastleCryptoIoCipherIOException 1
#endif
#undef RESTRICT_OrgSpongycastleCryptoIoCipherIOException

#if !defined (OrgSpongycastleCryptoIoCipherIOException_) && (INCLUDE_ALL_OrgSpongycastleCryptoIoCipherIOException || defined(INCLUDE_OrgSpongycastleCryptoIoCipherIOException))
#define OrgSpongycastleCryptoIoCipherIOException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;

/*!
 @brief <code>IOException</code> wrapper around an exception indicating a problem with the use of a cipher.
 */
@interface OrgSpongycastleCryptoIoCipherIOException : JavaIoIOException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleCryptoIoCipherIOException)

FOUNDATION_EXPORT void OrgSpongycastleCryptoIoCipherIOException_initWithNSString_withJavaLangThrowable_(OrgSpongycastleCryptoIoCipherIOException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherIOException *new_OrgSpongycastleCryptoIoCipherIOException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleCryptoIoCipherIOException *create_OrgSpongycastleCryptoIoCipherIOException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleCryptoIoCipherIOException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleCryptoIoCipherIOException")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/raw/Interleave.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/spongycastle/math/raw/Interleave.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/math/raw/Interleave must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong OrgSpongycastleMathRawInterleave_get_M32(void);
#define OrgSpongycastleMathRawInterleave_M32 1431655765LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleMathRawInterleave, M32, jlong)

inline jlong OrgSpongycastleMathRawInterleave_get_M64(void);
#define OrgSpongycastleMathRawInterleave_M64 6148914691236517205LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgSpongycastleMathRawInterleave, M64, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/raw/Interleave.java"


#line 3
@implementation OrgSpongycastleMathRawInterleave

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 3
- (instancetype)init {
  OrgSpongycastleMathRawInterleave_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 50
+ (jint)expand8to16WithInt:(jint)x {
  return OrgSpongycastleMathRawInterleave_expand8to16WithInt_(x);
}


#line 59
+ (jint)expand16to32WithInt:(jint)x {
  return OrgSpongycastleMathRawInterleave_expand16to32WithInt_(x);
}


#line 69
+ (jlong)expand32to64WithInt:(jint)x {
  return OrgSpongycastleMathRawInterleave_expand32to64WithInt_(x);
}


#line 81
+ (void)expand64To128WithLong:(jlong)x
                withLongArray:(IOSLongArray *)z
                      withInt:(jint)zOff {
  OrgSpongycastleMathRawInterleave_expand64To128WithLong_withLongArray_withInt_(x, z, zOff);
}


#line 95
+ (jlong)unshuffleWithLong:(jlong)x {
  return OrgSpongycastleMathRawInterleave_unshuffleWithLong_(x);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(expand8to16WithInt:);
  methods[2].selector = @selector(expand16to32WithInt:);
  methods[3].selector = @selector(expand32to64WithInt:);
  methods[4].selector = @selector(expand64To128WithLong:withLongArray:withInt:);
  methods[5].selector = @selector(unshuffleWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "M32", "J", .constantValue.asLong = OrgSpongycastleMathRawInterleave_M32, 0x1a, -1, -1, -1, -1 },
    { "M64", "J", .constantValue.asLong = OrgSpongycastleMathRawInterleave_M64, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "expand8to16", "I", "expand16to32", "expand32to64", "expand64To128", "J[JI", "unshuffle", "J" };
  static const J2ObjcClassInfo _OrgSpongycastleMathRawInterleave = { "Interleave", "org.spongycastle.math.raw", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathRawInterleave;
}

@end


#line 3
void OrgSpongycastleMathRawInterleave_init(OrgSpongycastleMathRawInterleave *self) {
  NSObject_init(self);
}


#line 3
OrgSpongycastleMathRawInterleave *new_OrgSpongycastleMathRawInterleave_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathRawInterleave, init)
}


#line 3
OrgSpongycastleMathRawInterleave *create_OrgSpongycastleMathRawInterleave_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathRawInterleave, init)
}


#line 50
jint OrgSpongycastleMathRawInterleave_expand8to16WithInt_(jint x) {
  OrgSpongycastleMathRawInterleave_initialize();
  x &= (jint) 0xFF;
  x = (x | (JreLShift32(x, 4))) & (jint) 0x0F0F;
  x = (x | (JreLShift32(x, 2))) & (jint) 0x3333;
  x = (x | (JreLShift32(x, 1))) & (jint) 0x5555;
  return x;
}

jint OrgSpongycastleMathRawInterleave_expand16to32WithInt_(jint x) {
  OrgSpongycastleMathRawInterleave_initialize();
  x &= (jint) 0xFFFF;
  x = (x | (JreLShift32(x, 8))) & (jint) 0x00FF00FF;
  x = (x | (JreLShift32(x, 4))) & (jint) 0x0F0F0F0F;
  x = (x | (JreLShift32(x, 2))) & (jint) 0x33333333;
  x = (x | (JreLShift32(x, 1))) & (jint) 0x55555555;
  return x;
}

jlong OrgSpongycastleMathRawInterleave_expand32to64WithInt_(jint x) {
  OrgSpongycastleMathRawInterleave_initialize();
  
#line 72
  jint t;
  t = (x ^ (JreURShift32(x, 8))) & (jint) 0x0000FF00;
  
#line 73
  x ^= (t ^ (JreLShift32(t, 8)));
  t = (x ^ (JreURShift32(x, 4))) & (jint) 0x00F000F0;
  
#line 74
  x ^= (t ^ (JreLShift32(t, 4)));
  t = (x ^ (JreURShift32(x, 2))) & (jint) 0x0C0C0C0C;
  
#line 75
  x ^= (t ^ (JreLShift32(t, 2)));
  t = (x ^ (JreURShift32(x, 1))) & (jint) 0x22222222;
  
#line 76
  x ^= (t ^ (JreLShift32(t, 1)));
  
#line 78
  return (JreLShift64(((JreURShift32(x, 1)) & OrgSpongycastleMathRawInterleave_M32), 32)) | (x & OrgSpongycastleMathRawInterleave_M32);
}


#line 81
void OrgSpongycastleMathRawInterleave_expand64To128WithLong_withLongArray_withInt_(jlong x, IOSLongArray *z, jint zOff) {
  OrgSpongycastleMathRawInterleave_initialize();
  
#line 84
  jlong t;
  t = (x ^ (JreURShift64(x, 16))) & (jlong) 0x00000000FFFF0000LL;
  
#line 85
  x ^= (t ^ (JreLShift64(t, 16)));
  t = (x ^ (JreURShift64(x, 8))) & (jlong) 0x0000FF000000FF00LL;
  
#line 86
  x ^= (t ^ (JreLShift64(t, 8)));
  t = (x ^ (JreURShift64(x, 4))) & (jlong) 0x00F000F000F000F0LL;
  
#line 87
  x ^= (t ^ (JreLShift64(t, 4)));
  t = (x ^ (JreURShift64(x, 2))) & (jlong) 0x0C0C0C0C0C0C0C0CLL;
  
#line 88
  x ^= (t ^ (JreLShift64(t, 2)));
  t = (x ^ (JreURShift64(x, 1))) & (jlong) 0x2222222222222222LL;
  
#line 89
  x ^= (t ^ (JreLShift64(t, 1)));
  
#line 91
  *IOSLongArray_GetRef(nil_chk(z), zOff) = (x) & OrgSpongycastleMathRawInterleave_M64;
  *IOSLongArray_GetRef(z, zOff + 1) = (JreURShift64(x, 1)) & OrgSpongycastleMathRawInterleave_M64;
}


#line 95
jlong OrgSpongycastleMathRawInterleave_unshuffleWithLong_(jlong x) {
  OrgSpongycastleMathRawInterleave_initialize();
  
#line 98
  jlong t;
  t = (x ^ (JreURShift64(x, 1))) & (jlong) 0x2222222222222222LL;
  
#line 99
  x ^= (t ^ (JreLShift64(t, 1)));
  t = (x ^ (JreURShift64(x, 2))) & (jlong) 0x0C0C0C0C0C0C0C0CLL;
  
#line 100
  x ^= (t ^ (JreLShift64(t, 2)));
  t = (x ^ (JreURShift64(x, 4))) & (jlong) 0x00F000F000F000F0LL;
  
#line 101
  x ^= (t ^ (JreLShift64(t, 4)));
  t = (x ^ (JreURShift64(x, 8))) & (jlong) 0x0000FF000000FF00LL;
  
#line 102
  x ^= (t ^ (JreLShift64(t, 8)));
  t = (x ^ (JreURShift64(x, 16))) & (jlong) 0x00000000FFFF0000LL;
  
#line 103
  x ^= (t ^ (JreLShift64(t, 16)));
  return x;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathRawInterleave)

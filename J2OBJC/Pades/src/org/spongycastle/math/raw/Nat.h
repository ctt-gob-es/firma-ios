//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/raw/Nat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleMathRawNat")
#ifdef RESTRICT_OrgSpongycastleMathRawNat
#define INCLUDE_ALL_OrgSpongycastleMathRawNat 0
#else
#define INCLUDE_ALL_OrgSpongycastleMathRawNat 1
#endif
#undef RESTRICT_OrgSpongycastleMathRawNat

#if !defined (OrgSpongycastleMathRawNat_) && (INCLUDE_ALL_OrgSpongycastleMathRawNat || defined(INCLUDE_OrgSpongycastleMathRawNat))
#define OrgSpongycastleMathRawNat_

@class IOSIntArray;
@class IOSLongArray;
@class JavaMathBigInteger;

@interface OrgSpongycastleMathRawNat : NSObject

#pragma mark Public

- (instancetype)init;

+ (jint)addWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)y
      withIntArray:(IOSIntArray *)z;

+ (jint)add33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zPos;

+ (jint)add33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff
               withInt:(jint)zPos;

+ (jint)add33ToWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z;

+ (jint)add33ToWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff;

+ (jint)addBothToWithInt:(jint)len
            withIntArray:(IOSIntArray *)x
                 withInt:(jint)xOff
            withIntArray:(IOSIntArray *)y
                 withInt:(jint)yOff
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff;

+ (jint)addBothToWithInt:(jint)len
            withIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)y
            withIntArray:(IOSIntArray *)z;

+ (jint)addDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zPos;

+ (jint)addDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff
                  withInt:(jint)zPos;

+ (jint)addDWordToWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z;

+ (jint)addDWordToWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff;

+ (jint)addToWithInt:(jint)len
        withIntArray:(IOSIntArray *)x
             withInt:(jint)xOff
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zOff;

+ (jint)addToWithInt:(jint)len
        withIntArray:(IOSIntArray *)x
        withIntArray:(IOSIntArray *)z;

+ (jint)addWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zPos;

+ (jint)addWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff
                 withInt:(jint)zPos;

+ (jint)addWordToWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z;

+ (jint)addWordToWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff;

+ (IOSIntArray *)copy__WithInt:(jint)len
                  withIntArray:(IOSIntArray *)x OBJC_METHOD_FAMILY_NONE;

+ (void)copy__WithInt:(jint)len
         withIntArray:(IOSIntArray *)x
         withIntArray:(IOSIntArray *)z OBJC_METHOD_FAMILY_NONE;

+ (IOSIntArray *)createWithInt:(jint)len;

+ (IOSLongArray *)create64WithInt:(jint)len;

+ (jint)decWithInt:(jint)len
      withIntArray:(IOSIntArray *)z;

+ (jint)decWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)z;

+ (jint)decAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zPos;

+ (jint)decAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zOff
             withInt:(jint)zPos;

+ (jboolean)eqWithInt:(jint)len
         withIntArray:(IOSIntArray *)x
         withIntArray:(IOSIntArray *)y;

+ (IOSIntArray *)fromBigIntegerWithInt:(jint)bits
                withJavaMathBigInteger:(JavaMathBigInteger *)x;

+ (jint)getBitWithIntArray:(IOSIntArray *)x
                   withInt:(jint)bit;

+ (jboolean)gteWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
          withIntArray:(IOSIntArray *)y;

+ (jint)incWithInt:(jint)len
      withIntArray:(IOSIntArray *)z;

+ (jint)incWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)z;

+ (jint)incAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zPos;

+ (jint)incAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zOff
             withInt:(jint)zPos;

+ (jboolean)isOneWithInt:(jint)len
            withIntArray:(IOSIntArray *)x;

+ (jboolean)isZeroWithInt:(jint)len
             withIntArray:(IOSIntArray *)x;

+ (void)mulWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
           withInt:(jint)xOff
      withIntArray:(IOSIntArray *)y
           withInt:(jint)yOff
      withIntArray:(IOSIntArray *)zz
           withInt:(jint)zzOff;

+ (void)mulWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)y
      withIntArray:(IOSIntArray *)zz;

+ (jint)mul31BothAddWithInt:(jint)len
                    withInt:(jint)a
               withIntArray:(IOSIntArray *)x
                    withInt:(jint)b
               withIntArray:(IOSIntArray *)y
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff;

+ (jint)mulAddToWithInt:(jint)len
           withIntArray:(IOSIntArray *)x
                withInt:(jint)xOff
           withIntArray:(IOSIntArray *)y
                withInt:(jint)yOff
           withIntArray:(IOSIntArray *)zz
                withInt:(jint)zzOff;

+ (jint)mulAddToWithInt:(jint)len
           withIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)zz;

+ (jint)mulWordWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)y
               withInt:(jint)yOff
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff;

+ (jint)mulWordWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)y
          withIntArray:(IOSIntArray *)z;

+ (jint)mulWordAddToWithInt:(jint)len
                    withInt:(jint)x
               withIntArray:(IOSIntArray *)y
                    withInt:(jint)yOff
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff;

+ (jint)mulWordDwordAddAtWithInt:(jint)len
                         withInt:(jint)x
                        withLong:(jlong)y
                    withIntArray:(IOSIntArray *)z
                         withInt:(jint)zPos;

+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)c;

+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff
                    withInt:(jint)c;

+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)x
                    withInt:(jint)xOff
                    withInt:(jint)c
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff;

+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)x
                    withInt:(jint)c
               withIntArray:(IOSIntArray *)z;

+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)bits
                     withInt:(jint)c;

+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)zOff
                     withInt:(jint)bits
                     withInt:(jint)c;

+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)x
                     withInt:(jint)xOff
                     withInt:(jint)bits
                     withInt:(jint)c
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)zOff;

+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)x
                     withInt:(jint)bits
                     withInt:(jint)c
                withIntArray:(IOSIntArray *)z;

+ (jint)shiftDownWordWithInt:(jint)len
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)c;

+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)c;

+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff
                  withInt:(jint)c;

+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)x
                  withInt:(jint)xOff
                  withInt:(jint)c
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff;

+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)x
                  withInt:(jint)c
             withIntArray:(IOSIntArray *)z;

+ (jlong)shiftUpBit64WithInt:(jint)len
               withLongArray:(IOSLongArray *)x
                     withInt:(jint)xOff
                    withLong:(jlong)c
               withLongArray:(IOSLongArray *)z
                     withInt:(jint)zOff;

+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)bits
                   withInt:(jint)c;

+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff
                   withInt:(jint)bits
                   withInt:(jint)c;

+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff
                   withInt:(jint)bits
                   withInt:(jint)c
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff;

+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
                   withInt:(jint)bits
                   withInt:(jint)c
              withIntArray:(IOSIntArray *)z;

+ (jlong)shiftUpBits64WithInt:(jint)len
                withLongArray:(IOSLongArray *)z
                      withInt:(jint)zOff
                      withInt:(jint)bits
                     withLong:(jlong)c;

+ (jlong)shiftUpBits64WithInt:(jint)len
                withLongArray:(IOSLongArray *)x
                      withInt:(jint)xOff
                      withInt:(jint)bits
                     withLong:(jlong)c
                withLongArray:(IOSLongArray *)z
                      withInt:(jint)zOff;

+ (void)squareWithInt:(jint)len
         withIntArray:(IOSIntArray *)x
              withInt:(jint)xOff
         withIntArray:(IOSIntArray *)zz
              withInt:(jint)zzOff;

+ (void)squareWithInt:(jint)len
         withIntArray:(IOSIntArray *)x
         withIntArray:(IOSIntArray *)zz;

+ (jint)squareWordAddWithIntArray:(IOSIntArray *)x
                          withInt:(jint)xOff
                          withInt:(jint)xPos
                     withIntArray:(IOSIntArray *)z
                          withInt:(jint)zOff;

+ (jint)squareWordAddWithIntArray:(IOSIntArray *)x
                          withInt:(jint)xPos
                     withIntArray:(IOSIntArray *)z;

+ (jint)subWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
           withInt:(jint)xOff
      withIntArray:(IOSIntArray *)y
           withInt:(jint)yOff
      withIntArray:(IOSIntArray *)z
           withInt:(jint)zOff;

+ (jint)subWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)y
      withIntArray:(IOSIntArray *)z;

+ (jint)sub33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zPos;

+ (jint)sub33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff
               withInt:(jint)zPos;

+ (jint)sub33FromWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z;

+ (jint)sub33FromWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff;

+ (jint)subBothFromWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff
              withIntArray:(IOSIntArray *)y
                   withInt:(jint)yOff
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff;

+ (jint)subBothFromWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)y
              withIntArray:(IOSIntArray *)z;

+ (jint)subDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zPos;

+ (jint)subDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff
                  withInt:(jint)zPos;

+ (jint)subDWordFromWithInt:(jint)len
                   withLong:(jlong)x
               withIntArray:(IOSIntArray *)z;

+ (jint)subDWordFromWithInt:(jint)len
                   withLong:(jlong)x
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff;

+ (jint)subFromWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
               withInt:(jint)xOff
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff;

+ (jint)subFromWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
          withIntArray:(IOSIntArray *)z;

+ (jint)subWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zPos;

+ (jint)subWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff
                 withInt:(jint)zPos;

+ (jint)subWordFromWithInt:(jint)len
                   withInt:(jint)x
              withIntArray:(IOSIntArray *)z;

+ (jint)subWordFromWithInt:(jint)len
                   withInt:(jint)x
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff;

+ (JavaMathBigInteger *)toBigIntegerWithInt:(jint)len
                               withIntArray:(IOSIntArray *)x;

+ (void)zeroWithInt:(jint)len
       withIntArray:(IOSIntArray *)z;

+ (void)zero64WithInt:(jint)len
        withLongArray:(IOSLongArray *)z;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleMathRawNat)

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_init(OrgSpongycastleMathRawNat *self);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_add33AtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_add33AtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_add33ToWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_add33ToWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addBothToWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addBothToWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addDWordAtWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addDWordAtWithInt_withLong_withIntArray_withInt_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addDWordToWithInt_withLong_withIntArray_(jint len, jlong x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addDWordToWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addToWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addToWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addWordToWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_addWordToWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleMathRawNat_copy__WithInt_withIntArray_(jint len, IOSIntArray *x);

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_copy__WithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleMathRawNat_createWithInt_(jint len);

FOUNDATION_EXPORT IOSLongArray *OrgSpongycastleMathRawNat_create64WithInt_(jint len);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_decWithInt_withIntArray_(jint len, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_decWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_decAtWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT IOSIntArray *OrgSpongycastleMathRawNat_fromBigIntegerWithInt_withJavaMathBigInteger_(jint bits, JavaMathBigInteger *x);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_getBitWithIntArray_withInt_(IOSIntArray *x, jint bit);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathRawNat_gteWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_incWithInt_withIntArray_(jint len, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_incWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_incAtWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathRawNat_isOneWithInt_withIntArray_(jint len, IOSIntArray *x);

FOUNDATION_EXPORT jboolean OrgSpongycastleMathRawNat_isZeroWithInt_withIntArray_(jint len, IOSIntArray *x);

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_mulWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz);

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_mulWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *zz, jint zzOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_mulAddToWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_mulAddToWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *zz, jint zzOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_mul31BothAddWithInt_withInt_withIntArray_withInt_withIntArray_withIntArray_withInt_(jint len, jint a, IOSIntArray *x, jint b, IOSIntArray *y, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withIntArray_(jint len, jint x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_mulWordDwordAddAtWithInt_withInt_withLong_withIntArray_withInt_(jint len, jint x, jlong y, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withIntArray_(jint len, IOSIntArray *x, jint c, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint c, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint bits, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint bits, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withIntArray_(jint len, IOSIntArray *x, jint bits, jint c, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint bits, jint c, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftDownWordWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withIntArray_(jint len, IOSIntArray *x, jint c, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint c, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jlong OrgSpongycastleMathRawNat_shiftUpBit64WithInt_withLongArray_withInt_withLong_withLongArray_withInt_(jint len, IOSLongArray *x, jint xOff, jlong c, IOSLongArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint bits, jint c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint bits, jint c);

FOUNDATION_EXPORT jlong OrgSpongycastleMathRawNat_shiftUpBits64WithInt_withLongArray_withInt_withInt_withLong_(jint len, IOSLongArray *z, jint zOff, jint bits, jlong c);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withIntArray_(jint len, IOSIntArray *x, jint bits, jint c, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint bits, jint c, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jlong OrgSpongycastleMathRawNat_shiftUpBits64WithInt_withLongArray_withInt_withInt_withLong_withLongArray_withInt_(jint len, IOSLongArray *x, jint xOff, jint bits, jlong c, IOSLongArray *z, jint zOff);

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_squareWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *zz);

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_squareWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *zz, jint zzOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_squareWordAddWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint xPos, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_squareWordAddWithIntArray_withInt_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, jint xPos, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_sub33AtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_sub33AtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_sub33FromWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_sub33FromWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subBothFromWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subBothFromWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subDWordAtWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subDWordAtWithInt_withLong_withIntArray_withInt_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subDWordFromWithInt_withLong_withIntArray_(jint len, jlong x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subDWordFromWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subFromWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subFromWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subWordAtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subWordAtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subWordFromWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgSpongycastleMathRawNat_subWordFromWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff);

FOUNDATION_EXPORT JavaMathBigInteger *OrgSpongycastleMathRawNat_toBigIntegerWithInt_withIntArray_(jint len, IOSIntArray *x);

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_zeroWithInt_withIntArray_(jint len, IOSIntArray *z);

FOUNDATION_EXPORT void OrgSpongycastleMathRawNat_zero64WithInt_withLongArray_(jint len, IOSLongArray *z);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleMathRawNat)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleMathRawNat")

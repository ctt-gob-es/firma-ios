//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/ec/custom/sec/SecP128R1FieldElement.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/math/ec/ECFieldElement.h"
#include "org/spongycastle/math/ec/custom/sec/SecP128R1Curve.h"
#include "org/spongycastle/math/ec/custom/sec/SecP128R1Field.h"
#include "org/spongycastle/math/ec/custom/sec/SecP128R1FieldElement.h"
#include "org/spongycastle/math/raw/Mod.h"
#include "org/spongycastle/math/raw/Nat128.h"
#include "org/spongycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/math/ec/custom/sec/SecP128R1FieldElement must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/math/ec/custom/sec/SecP128R1FieldElement.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement)

JavaMathBigInteger *OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_Q;


#line 10
@implementation OrgSpongycastleMathEcCustomSecSecP128R1FieldElement


#line 16
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithJavaMathBigInteger_(self, x);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 26
- (instancetype)init {
  OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 31
- (instancetype)initWithIntArray:(IOSIntArray *)x {
  OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(self, x);
  return self;
}

- (jboolean)isZero {
  
#line 38
  return OrgSpongycastleMathRawNat128_isZeroWithIntArray_(x_);
}


#line 41
- (jboolean)isOne {
  
#line 43
  return OrgSpongycastleMathRawNat128_isOneWithIntArray_(x_);
}


#line 46
- (jboolean)testBitZero {
  
#line 48
  return OrgSpongycastleMathRawNat128_getBitWithIntArray_withInt_(x_, 0) == 1;
}


#line 51
- (JavaMathBigInteger *)toBigInteger {
  
#line 53
  return OrgSpongycastleMathRawNat128_toBigIntegerWithIntArray_(x_);
}


#line 56
- (NSString *)getFieldName {
  
#line 58
  return @"SecP128R1Field";
}


#line 61
- (jint)getFieldSize {
  
#line 63
  return [((JavaMathBigInteger *) nil_chk(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_Q)) bitLength];
}


#line 66
- (OrgSpongycastleMathEcECFieldElement *)addWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)b {
  
#line 68
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_addWithIntArray_withIntArray_withIntArray_(x_, ((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) nil_chk(((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) cast_chk(b, [OrgSpongycastleMathEcCustomSecSecP128R1FieldElement class]))))->x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}


#line 73
- (OrgSpongycastleMathEcECFieldElement *)addOne {
  
#line 75
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_addOneWithIntArray_withIntArray_(x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}


#line 80
- (OrgSpongycastleMathEcECFieldElement *)subtractWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)b {
  
#line 82
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_subtractWithIntArray_withIntArray_withIntArray_(x_, ((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) nil_chk(((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) cast_chk(b, [OrgSpongycastleMathEcCustomSecSecP128R1FieldElement class]))))->x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}


#line 87
- (OrgSpongycastleMathEcECFieldElement *)multiplyWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)b {
  
#line 89
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x_, ((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) nil_chk(((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) cast_chk(b, [OrgSpongycastleMathEcCustomSecSecP128R1FieldElement class]))))->x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}


#line 94
- (OrgSpongycastleMathEcECFieldElement *)divideWithOrgSpongycastleMathEcECFieldElement:(OrgSpongycastleMathEcECFieldElement *)b {
  
#line 97
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(JreLoadStatic(OrgSpongycastleMathEcCustomSecSecP128R1Field, P), ((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) nil_chk(((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) cast_chk(b, [OrgSpongycastleMathEcCustomSecSecP128R1FieldElement class]))))->x_, z);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(z, x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}

- (OrgSpongycastleMathEcECFieldElement *)negate {
  
#line 105
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_negateWithIntArray_withIntArray_(x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}


#line 110
- (OrgSpongycastleMathEcECFieldElement *)square {
  
#line 112
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareWithIntArray_withIntArray_(x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}


#line 117
- (OrgSpongycastleMathEcECFieldElement *)invert {
  
#line 120
  IOSIntArray *z = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathRawMod_invertWithIntArray_withIntArray_withIntArray_(JreLoadStatic(OrgSpongycastleMathEcCustomSecSecP128R1Field, P), x_, z);
  return new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(z);
}


#line 130
- (OrgSpongycastleMathEcECFieldElement *)sqrt {
  
#line 142
  IOSIntArray *x1 = self->x_;
  if (OrgSpongycastleMathRawNat128_isZeroWithIntArray_(x1) || OrgSpongycastleMathRawNat128_isOneWithIntArray_(x1)) {
    
#line 145
    return self;
  }
  
#line 148
  IOSIntArray *x2 = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareWithIntArray_withIntArray_(x1, x2);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x2, x1, x2);
  IOSIntArray *x4 = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(x2, 2, x4);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x4, x2, x4);
  IOSIntArray *x8 = OrgSpongycastleMathRawNat128_create();
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(x4, 4, x8);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x8, x4, x8);
  IOSIntArray *x10 = x4;
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(x8, 2, x10);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x10, x2, x10);
  IOSIntArray *x20 = x2;
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(x10, 10, x20);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x20, x10, x20);
  IOSIntArray *x30 = x8;
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(x20, 10, x30);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x30, x10, x30);
  IOSIntArray *x31 = x10;
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareWithIntArray_withIntArray_(x30, x31);
  OrgSpongycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x31, x1, x31);
  
#line 170
  IOSIntArray *t1 = x31;
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(t1, 95, t1);
  
#line 173
  IOSIntArray *t2 = x30;
  OrgSpongycastleMathEcCustomSecSecP128R1Field_squareWithIntArray_withIntArray_(t1, t2);
  
#line 176
  return OrgSpongycastleMathRawNat128_eqWithIntArray_withIntArray_(x1, t2) ? new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(t1) : nil;
}


#line 179
- (jboolean)isEqual:(id)other {
  
#line 181
  if (JreObjectEqualsEquals(other, self)) {
    
#line 183
    return true;
  }
  
#line 186
  if (!([other isKindOfClass:[OrgSpongycastleMathEcCustomSecSecP128R1FieldElement class]])) {
    
#line 188
    return false;
  }
  
#line 191
  OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *o = (OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) cast_chk(other, [OrgSpongycastleMathEcCustomSecSecP128R1FieldElement class]);
  return OrgSpongycastleMathRawNat128_eqWithIntArray_withIntArray_(x_, ((OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *) nil_chk(o))->x_);
}


#line 195
- (NSUInteger)hash {
  
#line 197
  return ((jint) [((JavaMathBigInteger *) nil_chk(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_Q)) hash]) ^ OrgSpongycastleUtilArrays_hashCodeWithIntArray_withInt_withInt_(x_, 0, 4);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleMathEcECFieldElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithIntArray:);
  methods[3].selector = @selector(isZero);
  methods[4].selector = @selector(isOne);
  methods[5].selector = @selector(testBitZero);
  methods[6].selector = @selector(toBigInteger);
  methods[7].selector = @selector(getFieldName);
  methods[8].selector = @selector(getFieldSize);
  methods[9].selector = @selector(addWithOrgSpongycastleMathEcECFieldElement:);
  methods[10].selector = @selector(addOne);
  methods[11].selector = @selector(subtractWithOrgSpongycastleMathEcECFieldElement:);
  methods[12].selector = @selector(multiplyWithOrgSpongycastleMathEcECFieldElement:);
  methods[13].selector = @selector(divideWithOrgSpongycastleMathEcECFieldElement:);
  methods[14].selector = @selector(negate);
  methods[15].selector = @selector(square);
  methods[16].selector = @selector(invert);
  methods[17].selector = @selector(sqrt);
  methods[18].selector = @selector(isEqual:);
  methods[19].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "Q", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "x_", "[I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;", "[I", "add", "LOrgSpongycastleMathEcECFieldElement;", "subtract", "multiply", "divide", "equals", "LNSObject;", "hashCode", &OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_Q };
  static const J2ObjcClassInfo _OrgSpongycastleMathEcCustomSecSecP128R1FieldElement = { "SecP128R1FieldElement", "org.spongycastle.math.ec.custom.sec", ptrTable, methods, fields, 7, 0x1, 20, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement;
}

+ (void)initialize {
  if (self == [OrgSpongycastleMathEcCustomSecSecP128R1FieldElement class]) {
    OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_Q = JreLoadStatic(OrgSpongycastleMathEcCustomSecSecP128R1Curve, q);
    J2OBJC_SET_INITIALIZED(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement)
  }
}

@end


#line 16
void OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithJavaMathBigInteger_(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *self, JavaMathBigInteger *x) {
  OrgSpongycastleMathEcECFieldElement_init(self);
  if (x == nil || [x signum] < 0 || [x compareToWithId:OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_Q] >= 0) {
    
#line 20
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"x value invalid for SecP128R1FieldElement");
  }
  
#line 23
  self->x_ = OrgSpongycastleMathEcCustomSecSecP128R1Field_fromBigIntegerWithJavaMathBigInteger_(x);
}


#line 16
OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement, initWithJavaMathBigInteger_, x)
}


#line 16
OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *create_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement, initWithJavaMathBigInteger_, x)
}


#line 26
void OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_init(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *self) {
  OrgSpongycastleMathEcECFieldElement_init(self);
  self->x_ = OrgSpongycastleMathRawNat128_create();
}


#line 26
OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_init() {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement, init)
}


#line 26
OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *create_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_init() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement, init)
}


#line 31
void OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *self, IOSIntArray *x) {
  OrgSpongycastleMathEcECFieldElement_init(self);
  self->x_ = x;
}


#line 31
OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *new_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(IOSIntArray *x) {
  J2OBJC_NEW_IMPL(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement, initWithIntArray_, x)
}


#line 31
OrgSpongycastleMathEcCustomSecSecP128R1FieldElement *create_OrgSpongycastleMathEcCustomSecSecP128R1FieldElement_initWithIntArray_(IOSIntArray *x) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement, initWithIntArray_, x)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleMathEcCustomSecSecP128R1FieldElement)

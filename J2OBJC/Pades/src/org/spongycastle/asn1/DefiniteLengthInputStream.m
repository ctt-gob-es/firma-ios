//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/DefiniteLengthInputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "org/spongycastle/asn1/DefiniteLengthInputStream.h"
#include "org/spongycastle/asn1/LimitedInputStream.h"
#include "org/spongycastle/util/io/Streams.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/asn1/DefiniteLengthInputStream must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleAsn1DefiniteLengthInputStream () {
 @public
  jint _originalLength_;
  jint _remaining_;
}

@end

inline IOSByteArray *OrgSpongycastleAsn1DefiniteLengthInputStream_get_EMPTY_BYTES(void);
static IOSByteArray *OrgSpongycastleAsn1DefiniteLengthInputStream_EMPTY_BYTES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleAsn1DefiniteLengthInputStream, EMPTY_BYTES, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/DefiniteLengthInputStream.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleAsn1DefiniteLengthInputStream)


#line 12
@implementation OrgSpongycastleAsn1DefiniteLengthInputStream


#line 20
- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                                withInt:(jint)length {
  OrgSpongycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_(self, inArg, length);
  return self;
}


#line 40
- (jint)getRemaining {
  
#line 42
  return _remaining_;
}


#line 45
- (jint)read {
  
#line 48
  if (_remaining_ == 0) {
    
#line 50
    return -1;
  }
  
#line 53
  jint b = [((JavaIoInputStream *) nil_chk(_in_)) read];
  
#line 55
  if (b < 0) {
    
#line 57
    @throw new_JavaIoEOFException_initWithNSString_(JreStrcat("$I$I", @"DEF length ", _originalLength_, @" object truncated by ", _remaining_));
  }
  
#line 60
  if (--_remaining_ == 0) {
    
#line 62
    [self setParentEofDetectWithBoolean:true];
  }
  
#line 65
  return b;
}


#line 68
- (jint)readWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off
                  withInt:(jint)len {
  if (_remaining_ == 0) {
    
#line 73
    return -1;
  }
  
#line 76
  jint toRead = JavaLangMath_minWithInt_withInt_(len, _remaining_);
  jint numRead = [((JavaIoInputStream *) nil_chk(_in_)) readWithByteArray:buf withInt:off withInt:toRead];
  
#line 79
  if (numRead < 0) {
    
#line 81
    @throw new_JavaIoEOFException_initWithNSString_(JreStrcat("$I$I", @"DEF length ", _originalLength_, @" object truncated by ", _remaining_));
  }
  
#line 84
  if ((_remaining_ -= numRead) == 0) {
    
#line 86
    [self setParentEofDetectWithBoolean:true];
  }
  
#line 89
  return numRead;
}


#line 92
- (IOSByteArray *)toByteArray {
  
#line 95
  if (_remaining_ == 0) {
    
#line 97
    return OrgSpongycastleAsn1DefiniteLengthInputStream_EMPTY_BYTES;
  }
  
#line 100
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:_remaining_];
  if ((_remaining_ -= OrgSpongycastleUtilIoStreams_readFullyWithJavaIoInputStream_withByteArray_(_in_, bytes)) != 0) {
    
#line 103
    @throw new_JavaIoEOFException_initWithNSString_(JreStrcat("$I$I", @"DEF length ", _originalLength_, @" object truncated by ", _remaining_));
  }
  [self setParentEofDetectWithBoolean:true];
  return bytes;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithJavaIoInputStream:withInt:);
  methods[1].selector = @selector(getRemaining);
  methods[2].selector = @selector(read);
  methods[3].selector = @selector(readWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(toByteArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_BYTES", "[B", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "_originalLength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_remaining_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;I", "LJavaIoIOException;", "read", "[BII", &OrgSpongycastleAsn1DefiniteLengthInputStream_EMPTY_BYTES };
  static const J2ObjcClassInfo _OrgSpongycastleAsn1DefiniteLengthInputStream = { "DefiniteLengthInputStream", "org.spongycastle.asn1", ptrTable, methods, fields, 7, 0x0, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleAsn1DefiniteLengthInputStream;
}

+ (void)initialize {
  if (self == [OrgSpongycastleAsn1DefiniteLengthInputStream class]) {
    OrgSpongycastleAsn1DefiniteLengthInputStream_EMPTY_BYTES = [IOSByteArray newArrayWithLength:
#line 15
    0];
    J2OBJC_SET_INITIALIZED(OrgSpongycastleAsn1DefiniteLengthInputStream)
  }
}

@end


#line 20
void OrgSpongycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_(OrgSpongycastleAsn1DefiniteLengthInputStream *self, JavaIoInputStream *inArg, jint length) {
  OrgSpongycastleAsn1LimitedInputStream_initPackagePrivateWithJavaIoInputStream_withInt_(self,
#line 24
  inArg, length);
  
#line 26
  if (length < 0) {
    
#line 28
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"negative lengths not allowed");
  }
  
#line 31
  self->_originalLength_ = length;
  self->_remaining_ = length;
  
#line 34
  if (length == 0) {
    
#line 36
    [self setParentEofDetectWithBoolean:true];
  }
}


#line 20
OrgSpongycastleAsn1DefiniteLengthInputStream *new_OrgSpongycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint length) {
  J2OBJC_NEW_IMPL(OrgSpongycastleAsn1DefiniteLengthInputStream, initPackagePrivateWithJavaIoInputStream_withInt_, inArg, length)
}


#line 20
OrgSpongycastleAsn1DefiniteLengthInputStream *create_OrgSpongycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint length) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleAsn1DefiniteLengthInputStream, initPackagePrivateWithJavaIoInputStream_withInt_, inArg, length)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleAsn1DefiniteLengthInputStream)

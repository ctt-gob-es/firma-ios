//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/cms/OtherRecipientInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmsOtherRecipientInfo")
#ifdef RESTRICT_OrgSpongycastleAsn1CmsOtherRecipientInfo
#define INCLUDE_ALL_OrgSpongycastleAsn1CmsOtherRecipientInfo 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1CmsOtherRecipientInfo 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1CmsOtherRecipientInfo

#if !defined (OrgSpongycastleAsn1CmsOtherRecipientInfo_) && (INCLUDE_ALL_OrgSpongycastleAsn1CmsOtherRecipientInfo || defined(INCLUDE_OrgSpongycastleAsn1CmsOtherRecipientInfo))
#define OrgSpongycastleAsn1CmsOtherRecipientInfo_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class OrgSpongycastleAsn1ASN1ObjectIdentifier;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@protocol OrgSpongycastleAsn1ASN1Encodable;

/*!
 @brief <a href="http://tools.ietf.org/html/rfc5652#section-6.2.5">RFC 5652</a>:
  Content encryption key delivery mechanisms.
 @code

  OtherRecipientInfo ::= SEQUENCE {
     oriType OBJECT IDENTIFIER,
     oriValue ANY DEFINED BY oriType } 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsOtherRecipientInfo : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oriType
                           withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)oriValue;

/*!
 */
- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

/*!
 @brief Return a OtherRecipientInfo object from a tagged object.
 @param obj the tagged object holding the object we want.
 @param explicit_ true if the object is meant to be explicitly               tagged false otherwise.
 @throw IllegalArgumentExceptionif the object held by the
           tagged object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsOtherRecipientInfo *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                     withBoolean:(jboolean)explicit_;

/*!
 @brief Return a OtherRecipientInfo object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>PasswordRecipientInfo</code> object 
 <li> <code>ASN1Sequence</code> input formats with OtherRecipientInfo structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsOtherRecipientInfo *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1ASN1ObjectIdentifier *)getType;

- (id<OrgSpongycastleAsn1ASN1Encodable>)getValue;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsOtherRecipientInfo)

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsOtherRecipientInfo_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1CmsOtherRecipientInfo *self, OrgSpongycastleAsn1ASN1ObjectIdentifier *oriType, id<OrgSpongycastleAsn1ASN1Encodable> oriValue);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRecipientInfo *new_OrgSpongycastleAsn1CmsOtherRecipientInfo_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oriType, id<OrgSpongycastleAsn1ASN1Encodable> oriValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRecipientInfo *create_OrgSpongycastleAsn1CmsOtherRecipientInfo_initWithOrgSpongycastleAsn1ASN1ObjectIdentifier_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1ASN1ObjectIdentifier *oriType, id<OrgSpongycastleAsn1ASN1Encodable> oriValue);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsOtherRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsOtherRecipientInfo *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRecipientInfo *new_OrgSpongycastleAsn1CmsOtherRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRecipientInfo *create_OrgSpongycastleAsn1CmsOtherRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRecipientInfo *OrgSpongycastleAsn1CmsOtherRecipientInfo_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsOtherRecipientInfo *OrgSpongycastleAsn1CmsOtherRecipientInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsOtherRecipientInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmsOtherRecipientInfo")

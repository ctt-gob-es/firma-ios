//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/cms/KEKIdentifier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKIdentifier")
#ifdef RESTRICT_OrgSpongycastleAsn1CmsKEKIdentifier
#define INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKIdentifier 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKIdentifier 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1CmsKEKIdentifier

#if !defined (OrgSpongycastleAsn1CmsKEKIdentifier_) && (INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKIdentifier || defined(INCLUDE_OrgSpongycastleAsn1CmsKEKIdentifier))
#define OrgSpongycastleAsn1CmsKEKIdentifier_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class IOSByteArray;
@class OrgSpongycastleAsn1ASN1GeneralizedTime;
@class OrgSpongycastleAsn1ASN1OctetString;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1CmsOtherKeyAttribute;

/*!
 @brief <a href="http://tools.ietf.org/html/rfc5652#section-6.2.3">RFC 5652</a>:
  Content encryption key delivery mechanisms.
 <p>
  @code

  KEKIdentifier ::= SEQUENCE {
      keyIdentifier OCTET STRING,
      date GeneralizedTime OPTIONAL,
      other OtherKeyAttribute OPTIONAL 
  } 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsKEKIdentifier : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)keyIdentifier
withOrgSpongycastleAsn1ASN1GeneralizedTime:(OrgSpongycastleAsn1ASN1GeneralizedTime *)date
withOrgSpongycastleAsn1CmsOtherKeyAttribute:(OrgSpongycastleAsn1CmsOtherKeyAttribute *)other;

- (OrgSpongycastleAsn1ASN1GeneralizedTime *)getDate;

/*!
 @brief Return a KEKIdentifier object from a tagged object.
 @param obj the tagged object holding the object we want.
 @param explicit_ true if the object is meant to be explicitly               tagged false otherwise.
 @throw IllegalArgumentExceptionif the object held by the
           tagged object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsKEKIdentifier *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                withBoolean:(jboolean)explicit_;

/*!
 @brief Return a KEKIdentifier object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>KEKIdentifier</code> object 
 <li> <code>ASN1Sequence</code> input formats with KEKIdentifier structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsKEKIdentifier *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1ASN1OctetString *)getKeyIdentifier;

- (OrgSpongycastleAsn1CmsOtherKeyAttribute *)getOther;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsKEKIdentifier)

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsKEKIdentifier_initWithByteArray_withOrgSpongycastleAsn1ASN1GeneralizedTime_withOrgSpongycastleAsn1CmsOtherKeyAttribute_(OrgSpongycastleAsn1CmsKEKIdentifier *self, IOSByteArray *keyIdentifier, OrgSpongycastleAsn1ASN1GeneralizedTime *date, OrgSpongycastleAsn1CmsOtherKeyAttribute *other);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKIdentifier *new_OrgSpongycastleAsn1CmsKEKIdentifier_initWithByteArray_withOrgSpongycastleAsn1ASN1GeneralizedTime_withOrgSpongycastleAsn1CmsOtherKeyAttribute_(IOSByteArray *keyIdentifier, OrgSpongycastleAsn1ASN1GeneralizedTime *date, OrgSpongycastleAsn1CmsOtherKeyAttribute *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKIdentifier *create_OrgSpongycastleAsn1CmsKEKIdentifier_initWithByteArray_withOrgSpongycastleAsn1ASN1GeneralizedTime_withOrgSpongycastleAsn1CmsOtherKeyAttribute_(IOSByteArray *keyIdentifier, OrgSpongycastleAsn1ASN1GeneralizedTime *date, OrgSpongycastleAsn1CmsOtherKeyAttribute *other);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKIdentifier *OrgSpongycastleAsn1CmsKEKIdentifier_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKIdentifier *OrgSpongycastleAsn1CmsKEKIdentifier_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsKEKIdentifier)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKIdentifier")

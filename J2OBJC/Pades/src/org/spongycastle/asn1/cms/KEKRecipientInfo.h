//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/asn1/cms/KEKRecipientInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKRecipientInfo")
#ifdef RESTRICT_OrgSpongycastleAsn1CmsKEKRecipientInfo
#define INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKRecipientInfo 0
#else
#define INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKRecipientInfo 1
#endif
#undef RESTRICT_OrgSpongycastleAsn1CmsKEKRecipientInfo

#if !defined (OrgSpongycastleAsn1CmsKEKRecipientInfo_) && (INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKRecipientInfo || defined(INCLUDE_OrgSpongycastleAsn1CmsKEKRecipientInfo))
#define OrgSpongycastleAsn1CmsKEKRecipientInfo_

#define RESTRICT_OrgSpongycastleAsn1ASN1Object 1
#define INCLUDE_OrgSpongycastleAsn1ASN1Object 1
#include "org/spongycastle/asn1/ASN1Object.h"

@class OrgSpongycastleAsn1ASN1Integer;
@class OrgSpongycastleAsn1ASN1OctetString;
@class OrgSpongycastleAsn1ASN1Primitive;
@class OrgSpongycastleAsn1ASN1Sequence;
@class OrgSpongycastleAsn1ASN1TaggedObject;
@class OrgSpongycastleAsn1CmsKEKIdentifier;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

/*!
 @brief <a href="http://tools.ietf.org/html/rfc5652#section-6.2.3">RFC 5652</a>:
  Content encryption key delivery mechanisms.
 <p>
  @code

  KEKRecipientInfo ::= SEQUENCE {
      version CMSVersion,  -- always set to 4
      kekid KEKIdentifier,
      keyEncryptionAlgorithm KeyEncryptionAlgorithmIdentifier,
      encryptedKey EncryptedKey 
  } 
  
@endcode
 */
@interface OrgSpongycastleAsn1CmsKEKRecipientInfo : OrgSpongycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1ASN1Sequence:(OrgSpongycastleAsn1ASN1Sequence *)seq;

- (instancetype)initWithOrgSpongycastleAsn1CmsKEKIdentifier:(OrgSpongycastleAsn1CmsKEKIdentifier *)kekid
             withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)keyEncryptionAlgorithm
                     withOrgSpongycastleAsn1ASN1OctetString:(OrgSpongycastleAsn1ASN1OctetString *)encryptedKey;

- (OrgSpongycastleAsn1ASN1OctetString *)getEncryptedKey;

/*!
 @brief Return a KEKRecipientInfo object from a tagged object.
 @param obj the tagged object holding the object we want.
 @param explicit_ true if the object is meant to be explicitly               tagged false otherwise.
 @throw IllegalArgumentExceptionif the object held by the
           tagged object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsKEKRecipientInfo *)getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject:(OrgSpongycastleAsn1ASN1TaggedObject *)obj
                                                                                   withBoolean:(jboolean)explicit_;

/*!
 @brief Return a KEKRecipientInfo object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>KEKRecipientInfo</code> object 
 <li> <code>ASN1Sequence</code> input formats with KEKRecipientInfo structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgSpongycastleAsn1CmsKEKRecipientInfo *)getInstanceWithId:(id)obj;

- (OrgSpongycastleAsn1CmsKEKIdentifier *)getKekid;

- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getKeyEncryptionAlgorithm;

- (OrgSpongycastleAsn1ASN1Integer *)getVersion;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgSpongycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleAsn1CmsKEKRecipientInfo)

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsKEKRecipientInfo_initWithOrgSpongycastleAsn1CmsKEKIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(OrgSpongycastleAsn1CmsKEKRecipientInfo *self, OrgSpongycastleAsn1CmsKEKIdentifier *kekid, OrgSpongycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedKey);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKRecipientInfo *new_OrgSpongycastleAsn1CmsKEKRecipientInfo_initWithOrgSpongycastleAsn1CmsKEKIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(OrgSpongycastleAsn1CmsKEKIdentifier *kekid, OrgSpongycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKRecipientInfo *create_OrgSpongycastleAsn1CmsKEKRecipientInfo_initWithOrgSpongycastleAsn1CmsKEKIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1ASN1OctetString_(OrgSpongycastleAsn1CmsKEKIdentifier *kekid, OrgSpongycastleAsn1X509AlgorithmIdentifier *keyEncryptionAlgorithm, OrgSpongycastleAsn1ASN1OctetString *encryptedKey);

FOUNDATION_EXPORT void OrgSpongycastleAsn1CmsKEKRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1CmsKEKRecipientInfo *self, OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKRecipientInfo *new_OrgSpongycastleAsn1CmsKEKRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKRecipientInfo *create_OrgSpongycastleAsn1CmsKEKRecipientInfo_initWithOrgSpongycastleAsn1ASN1Sequence_(OrgSpongycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKRecipientInfo *OrgSpongycastleAsn1CmsKEKRecipientInfo_getInstanceWithOrgSpongycastleAsn1ASN1TaggedObject_withBoolean_(OrgSpongycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgSpongycastleAsn1CmsKEKRecipientInfo *OrgSpongycastleAsn1CmsKEKRecipientInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleAsn1CmsKEKRecipientInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleAsn1CmsKEKRecipientInfo")

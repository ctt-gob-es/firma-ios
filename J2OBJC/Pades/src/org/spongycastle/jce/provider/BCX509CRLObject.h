//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jce/provider/BCX509CRLObject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleJceProviderBCX509CRLObject")
#ifdef RESTRICT_OrgSpongycastleJceProviderBCX509CRLObject
#define INCLUDE_ALL_OrgSpongycastleJceProviderBCX509CRLObject 0
#else
#define INCLUDE_ALL_OrgSpongycastleJceProviderBCX509CRLObject 1
#endif
#undef RESTRICT_OrgSpongycastleJceProviderBCX509CRLObject

#if !defined (OrgSpongycastleJceProviderBCX509CRLObject_) && (INCLUDE_ALL_OrgSpongycastleJceProviderBCX509CRLObject || defined(INCLUDE_OrgSpongycastleJceProviderBCX509CRLObject))
#define OrgSpongycastleJceProviderBCX509CRLObject_

#define RESTRICT_JavaSecurityCertX509CRL 1
#define INCLUDE_JavaSecurityCertX509CRL 1
#include "java/security/cert/X509CRL.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecurityCertCertificate;
@class JavaSecurityCertX509CRLEntry;
@class JavaSecurityProvider;
@class JavaUtilDate;
@class JavaxSecurityAuthX500X500Principal;
@class OrgSpongycastleAsn1X509CertificateList;
@protocol JavaSecurityPrincipal;
@protocol JavaSecurityPublicKey;
@protocol JavaUtilSet;

/*!
 @brief The following extensions are listed in RFC 2459 as relevant to CRLs
  Authority Key Identifier
  Issuer Alternative Name
  CRL Number
  Delta CRL Indicator (critical)
  Issuing Distribution Point (critical)
 */
@interface OrgSpongycastleJceProviderBCX509CRLObject : JavaSecurityCertX509CRL

#pragma mark Public

- (instancetype)initWithOrgSpongycastleAsn1X509CertificateList:(OrgSpongycastleAsn1X509CertificateList *)c;

- (jboolean)isEqual:(id)other;

- (id<JavaUtilSet>)getCriticalExtensionOIDs;

- (IOSByteArray *)getEncoded;

- (IOSByteArray *)getExtensionValueWithNSString:(NSString *)oid;

- (id<JavaSecurityPrincipal>)getIssuerDN;

- (JavaxSecurityAuthX500X500Principal *)getIssuerX500Principal;

- (JavaUtilDate *)getNextUpdate;

- (id<JavaUtilSet>)getNonCriticalExtensionOIDs;

- (JavaSecurityCertX509CRLEntry *)getRevokedCertificateWithJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (id<JavaUtilSet>)getRevokedCertificates;

- (NSString *)getSigAlgName;

- (NSString *)getSigAlgOID;

- (IOSByteArray *)getSigAlgParams;

- (IOSByteArray *)getSignature;

- (IOSByteArray *)getTBSCertList;

- (JavaUtilDate *)getThisUpdate;

- (jint)getVersion;

- (NSUInteger)hash;

/*!
 @brief Will return true if any extensions are present and marked
  as critical as we currently dont handle any extensions!
 */
- (jboolean)hasUnsupportedCriticalExtension;

+ (jboolean)isIndirectCRLWithJavaSecurityCertX509CRL:(JavaSecurityCertX509CRL *)crl;

/*!
 @brief Checks whether the given certificate is on this CRL.
 @param cert the certificate to check for.
 @return true if the given certificate is on this CRL,
  false otherwise.
 */
- (jboolean)isRevokedWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

/*!
 @brief Returns a string representation of this CRL.
 @return a string representation of this CRL.
 */
- (NSString *)description;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
               withJavaSecurityProvider:(JavaSecurityProvider *)sigProvider;

- (void)verifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)key
                           withNSString:(NSString *)sigProvider;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleJceProviderBCX509CRLObject)

FOUNDATION_EXPORT jboolean OrgSpongycastleJceProviderBCX509CRLObject_isIndirectCRLWithJavaSecurityCertX509CRL_(JavaSecurityCertX509CRL *crl);

FOUNDATION_EXPORT void OrgSpongycastleJceProviderBCX509CRLObject_initWithOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleJceProviderBCX509CRLObject *self, OrgSpongycastleAsn1X509CertificateList *c);

FOUNDATION_EXPORT OrgSpongycastleJceProviderBCX509CRLObject *new_OrgSpongycastleJceProviderBCX509CRLObject_initWithOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleAsn1X509CertificateList *c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceProviderBCX509CRLObject *create_OrgSpongycastleJceProviderBCX509CRLObject_initWithOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleAsn1X509CertificateList *c);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJceProviderBCX509CRLObject)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleJceProviderBCX509CRLObject")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/jce/provider/ReasonsMask.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleJceProviderReasonsMask")
#ifdef RESTRICT_OrgSpongycastleJceProviderReasonsMask
#define INCLUDE_ALL_OrgSpongycastleJceProviderReasonsMask 0
#else
#define INCLUDE_ALL_OrgSpongycastleJceProviderReasonsMask 1
#endif
#undef RESTRICT_OrgSpongycastleJceProviderReasonsMask

#if !defined (OrgSpongycastleJceProviderReasonsMask_) && (INCLUDE_ALL_OrgSpongycastleJceProviderReasonsMask || defined(INCLUDE_OrgSpongycastleJceProviderReasonsMask))
#define OrgSpongycastleJceProviderReasonsMask_

@class OrgSpongycastleAsn1X509ReasonFlags;

/*!
 @brief This class helps to handle CRL revocation reasons mask.Each CRL handles a
  certain set of revocation reasons.
 */
@interface OrgSpongycastleJceProviderReasonsMask : NSObject

#pragma mark Package-Private

/*!
 @brief A reason mask with no reason.
 */
- (instancetype)initPackagePrivate;

/*!
 @brief Constructs are reason mask with the reasons.
 @param reasons The reasons.
 */
- (instancetype)initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags:(OrgSpongycastleAsn1X509ReasonFlags *)reasons;

/*!
 @brief Adds all reasons from the reasons mask to this mask.
 @param mask The reasons mask to add.
 */
- (void)addReasonsWithOrgSpongycastleJceProviderReasonsMask:(OrgSpongycastleJceProviderReasonsMask *)mask;

/*!
 @brief Returns the reasons in this mask.
 @return Returns the reasons.
 */
- (jint)getReasons;

/*!
 @brief Returns <code>true</code> if the passed reasons mask has new reasons.
 @param mask The reasons mask which should be tested for new reasons.
 @return <code>true</code> if the passed reasons mask has new reasons.
 */
- (jboolean)hasNewReasonsWithOrgSpongycastleJceProviderReasonsMask:(OrgSpongycastleJceProviderReasonsMask *)mask;

/*!
 @brief Intersects this mask with the given reasons mask.
 @param mask The mask to intersect with.
 @return The intersection of this and teh given mask.
 */
- (OrgSpongycastleJceProviderReasonsMask *)intersectWithOrgSpongycastleJceProviderReasonsMask:(OrgSpongycastleJceProviderReasonsMask *)mask;

/*!
 @brief Returns <code>true</code> if this reasons mask contains all possible
  reasons.
 @return <code>true</code> if this reasons mask contains all possible
          reasons.
 */
- (jboolean)isAllReasons;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgSpongycastleJceProviderReasonsMask)

/*!
 @brief A mask with all revocation reasons.
 */
inline OrgSpongycastleJceProviderReasonsMask *OrgSpongycastleJceProviderReasonsMask_get_allReasons(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgSpongycastleJceProviderReasonsMask *OrgSpongycastleJceProviderReasonsMask_allReasons;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgSpongycastleJceProviderReasonsMask, allReasons, OrgSpongycastleJceProviderReasonsMask *)

FOUNDATION_EXPORT void OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_(OrgSpongycastleJceProviderReasonsMask *self, OrgSpongycastleAsn1X509ReasonFlags *reasons);

FOUNDATION_EXPORT OrgSpongycastleJceProviderReasonsMask *new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_(OrgSpongycastleAsn1X509ReasonFlags *reasons) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceProviderReasonsMask *create_OrgSpongycastleJceProviderReasonsMask_initPackagePrivateWithOrgSpongycastleAsn1X509ReasonFlags_(OrgSpongycastleAsn1X509ReasonFlags *reasons);

FOUNDATION_EXPORT void OrgSpongycastleJceProviderReasonsMask_initPackagePrivate(OrgSpongycastleJceProviderReasonsMask *self);

FOUNDATION_EXPORT OrgSpongycastleJceProviderReasonsMask *new_OrgSpongycastleJceProviderReasonsMask_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgSpongycastleJceProviderReasonsMask *create_OrgSpongycastleJceProviderReasonsMask_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleJceProviderReasonsMask)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleJceProviderReasonsMask")

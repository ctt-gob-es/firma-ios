//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/io/TeeOutputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "org/spongycastle/util/io/TeeOutputStream.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/util/io/TeeOutputStream must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleUtilIoTeeOutputStream () {
 @public
  JavaIoOutputStream *output1_;
  JavaIoOutputStream *output2_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleUtilIoTeeOutputStream, output1_, JavaIoOutputStream *)
J2OBJC_FIELD_SETTER(OrgSpongycastleUtilIoTeeOutputStream, output2_, JavaIoOutputStream *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/util/io/TeeOutputStream.java"


#line 10
@implementation OrgSpongycastleUtilIoTeeOutputStream


#line 22
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)output1
                    withJavaIoOutputStream:(JavaIoOutputStream *)output2 {
  OrgSpongycastleUtilIoTeeOutputStream_initWithJavaIoOutputStream_withJavaIoOutputStream_(self, output1, output2);
  return self;
}

- (void)writeWithByteArray:(IOSByteArray *)buf {
  
#line 31
  [((JavaIoOutputStream *) nil_chk(self->output1_)) writeWithByteArray:buf];
  [((JavaIoOutputStream *) nil_chk(self->output2_)) writeWithByteArray:buf];
}

- (void)writeWithByteArray:(IOSByteArray *)buf
                   withInt:(jint)off
                   withInt:(jint)len {
  [((JavaIoOutputStream *) nil_chk(self->output1_)) writeWithByteArray:buf withInt:off withInt:len];
  [((JavaIoOutputStream *) nil_chk(self->output2_)) writeWithByteArray:buf withInt:off withInt:len];
}

- (void)writeWithInt:(jint)b {
  
#line 45
  [((JavaIoOutputStream *) nil_chk(self->output1_)) writeWithInt:b];
  [((JavaIoOutputStream *) nil_chk(self->output2_)) writeWithInt:b];
}

- (void)flush {
  
#line 52
  [((JavaIoOutputStream *) nil_chk(self->output1_)) flush];
  [((JavaIoOutputStream *) nil_chk(self->output2_)) flush];
}

- (void)close {
  
#line 59
  [((JavaIoOutputStream *) nil_chk(self->output1_)) close];
  [((JavaIoOutputStream *) nil_chk(self->output2_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 4, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:withJavaIoOutputStream:);
  methods[1].selector = @selector(writeWithByteArray:);
  methods[2].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(writeWithInt:);
  methods[4].selector = @selector(flush);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "output1_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "output2_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;LJavaIoOutputStream;", "write", "[B", "LJavaIoIOException;", "[BII", "I" };
  static const J2ObjcClassInfo _OrgSpongycastleUtilIoTeeOutputStream = { "TeeOutputStream", "org.spongycastle.util.io", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleUtilIoTeeOutputStream;
}

@end


#line 22
void OrgSpongycastleUtilIoTeeOutputStream_initWithJavaIoOutputStream_withJavaIoOutputStream_(OrgSpongycastleUtilIoTeeOutputStream *self, JavaIoOutputStream *output1, JavaIoOutputStream *output2) {
  JavaIoOutputStream_init(self);
  self->output1_ = output1;
  self->output2_ = output2;
}


#line 22
OrgSpongycastleUtilIoTeeOutputStream *new_OrgSpongycastleUtilIoTeeOutputStream_initWithJavaIoOutputStream_withJavaIoOutputStream_(JavaIoOutputStream *output1, JavaIoOutputStream *output2) {
  J2OBJC_NEW_IMPL(OrgSpongycastleUtilIoTeeOutputStream, initWithJavaIoOutputStream_withJavaIoOutputStream_, output1, output2)
}


#line 22
OrgSpongycastleUtilIoTeeOutputStream *create_OrgSpongycastleUtilIoTeeOutputStream_initWithJavaIoOutputStream_withJavaIoOutputStream_(JavaIoOutputStream *output1, JavaIoOutputStream *output2) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleUtilIoTeeOutputStream, initWithJavaIoOutputStream_withJavaIoOutputStream_, output1, output2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleUtilIoTeeOutputStream)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/CertUtils.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "java/text/ParseException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1EncodableVector.h"
#include "org/spongycastle/asn1/ASN1GeneralizedTime.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/ASN1Primitive.h"
#include "org/spongycastle/asn1/BCDEROutputStream.h"
#include "org/spongycastle/asn1/DERBitString.h"
#include "org/spongycastle/asn1/DERNull.h"
#include "org/spongycastle/asn1/DERSequence.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/asn1/x509/AttributeCertificate.h"
#include "org/spongycastle/asn1/x509/AttributeCertificateInfo.h"
#include "org/spongycastle/asn1/x509/Certificate.h"
#include "org/spongycastle/asn1/x509/CertificateList.h"
#include "org/spongycastle/asn1/x509/Extensions.h"
#include "org/spongycastle/asn1/x509/ExtensionsGenerator.h"
#include "org/spongycastle/asn1/x509/TBSCertList.h"
#include "org/spongycastle/asn1/x509/TBSCertificate.h"
#include "org/spongycastle/cert/CertIOException.h"
#include "org/spongycastle/cert/CertUtils.h"
#include "org/spongycastle/cert/X509AttributeCertificateHolder.h"
#include "org/spongycastle/cert/X509CRLHolder.h"
#include "org/spongycastle/cert/X509CertificateHolder.h"
#include "org/spongycastle/operator/ContentSigner.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/cert/CertUtils must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCertCertUtils ()

+ (IOSByteArray *)generateSigWithOrgSpongycastleOperatorContentSigner:(id<OrgSpongycastleOperatorContentSigner>)signer
                                 withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)tbsObj;

+ (OrgSpongycastleAsn1X509Certificate *)generateStructureWithOrgSpongycastleAsn1X509TBSCertificate:(OrgSpongycastleAsn1X509TBSCertificate *)tbsCert
                                                    withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                     withByteArray:(IOSByteArray *)signature;

+ (OrgSpongycastleAsn1X509AttributeCertificate *)generateAttrStructureWithOrgSpongycastleAsn1X509AttributeCertificateInfo:(OrgSpongycastleAsn1X509AttributeCertificateInfo *)attrInfo
                                                                           withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                                            withByteArray:(IOSByteArray *)signature;

+ (OrgSpongycastleAsn1X509CertificateList *)generateCRLStructureWithOrgSpongycastleAsn1X509TBSCertList:(OrgSpongycastleAsn1X509TBSCertList *)tbsCertList
                                                        withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                         withByteArray:(IOSByteArray *)signature;

@end

inline id<JavaUtilSet> OrgSpongycastleCertCertUtils_get_EMPTY_SET(void);
inline id<JavaUtilSet> OrgSpongycastleCertCertUtils_set_EMPTY_SET(id<JavaUtilSet> value);
static id<JavaUtilSet> OrgSpongycastleCertCertUtils_EMPTY_SET;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCertCertUtils, EMPTY_SET, id<JavaUtilSet>)

inline id<JavaUtilList> OrgSpongycastleCertCertUtils_get_EMPTY_LIST(void);
inline id<JavaUtilList> OrgSpongycastleCertCertUtils_set_EMPTY_LIST(id<JavaUtilList> value);
static id<JavaUtilList> OrgSpongycastleCertCertUtils_EMPTY_LIST;
J2OBJC_STATIC_FIELD_OBJ(OrgSpongycastleCertCertUtils, EMPTY_LIST, id<JavaUtilList>)

__attribute__((unused)) static IOSByteArray *OrgSpongycastleCertCertUtils_generateSigWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1ASN1Encodable_(id<OrgSpongycastleOperatorContentSigner> signer, id<OrgSpongycastleAsn1ASN1Encodable> tbsObj);

__attribute__((unused)) static OrgSpongycastleAsn1X509Certificate *OrgSpongycastleCertCertUtils_generateStructureWithOrgSpongycastleAsn1X509TBSCertificate_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509TBSCertificate *tbsCert, OrgSpongycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature);

__attribute__((unused)) static OrgSpongycastleAsn1X509AttributeCertificate *OrgSpongycastleCertCertUtils_generateAttrStructureWithOrgSpongycastleAsn1X509AttributeCertificateInfo_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509AttributeCertificateInfo *attrInfo, OrgSpongycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature);

__attribute__((unused)) static OrgSpongycastleAsn1X509CertificateList *OrgSpongycastleCertCertUtils_generateCRLStructureWithOrgSpongycastleAsn1X509TBSCertList_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509TBSCertList *tbsCertList, OrgSpongycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cert/CertUtils.java"

J2OBJC_INITIALIZED_DEFN(OrgSpongycastleCertCertUtils)


#line 34
@implementation OrgSpongycastleCertCertUtils


#line 34
- (instancetype)initPackagePrivate {
  OrgSpongycastleCertCertUtils_initPackagePrivate(self);
  return self;
}

+ (OrgSpongycastleAsn1ASN1Primitive *)parseNonEmptyASN1WithByteArray:(IOSByteArray *)encoding {
  return OrgSpongycastleCertCertUtils_parseNonEmptyASN1WithByteArray_(encoding);
}


#line 51
+ (OrgSpongycastleCertX509CertificateHolder *)generateFullCertWithOrgSpongycastleOperatorContentSigner:(id<OrgSpongycastleOperatorContentSigner>)signer
                                                             withOrgSpongycastleAsn1X509TBSCertificate:(OrgSpongycastleAsn1X509TBSCertificate *)tbsCert {
  return OrgSpongycastleCertCertUtils_generateFullCertWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1X509TBSCertificate_(signer, tbsCert);
}


#line 63
+ (OrgSpongycastleCertX509AttributeCertificateHolder *)generateFullAttrCertWithOrgSpongycastleOperatorContentSigner:(id<OrgSpongycastleOperatorContentSigner>)signer
                                                                withOrgSpongycastleAsn1X509AttributeCertificateInfo:(OrgSpongycastleAsn1X509AttributeCertificateInfo *)attrInfo {
  return OrgSpongycastleCertCertUtils_generateFullAttrCertWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1X509AttributeCertificateInfo_(signer, attrInfo);
}


#line 75
+ (OrgSpongycastleCertX509CRLHolder *)generateFullCRLWithOrgSpongycastleOperatorContentSigner:(id<OrgSpongycastleOperatorContentSigner>)signer
                                                       withOrgSpongycastleAsn1X509TBSCertList:(OrgSpongycastleAsn1X509TBSCertList *)tbsCertList {
  return OrgSpongycastleCertCertUtils_generateFullCRLWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1X509TBSCertList_(signer, tbsCertList);
}


#line 87
+ (IOSByteArray *)generateSigWithOrgSpongycastleOperatorContentSigner:(id<OrgSpongycastleOperatorContentSigner>)signer
                                 withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)tbsObj {
  return OrgSpongycastleCertCertUtils_generateSigWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1ASN1Encodable_(signer, tbsObj);
}


#line 100
+ (OrgSpongycastleAsn1X509Certificate *)generateStructureWithOrgSpongycastleAsn1X509TBSCertificate:(OrgSpongycastleAsn1X509TBSCertificate *)tbsCert
                                                    withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                     withByteArray:(IOSByteArray *)signature {
  return OrgSpongycastleCertCertUtils_generateStructureWithOrgSpongycastleAsn1X509TBSCertificate_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCert, sigAlgId, signature);
}


#line 111
+ (OrgSpongycastleAsn1X509AttributeCertificate *)generateAttrStructureWithOrgSpongycastleAsn1X509AttributeCertificateInfo:(OrgSpongycastleAsn1X509AttributeCertificateInfo *)attrInfo
                                                                           withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                                            withByteArray:(IOSByteArray *)signature {
  return OrgSpongycastleCertCertUtils_generateAttrStructureWithOrgSpongycastleAsn1X509AttributeCertificateInfo_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(attrInfo, sigAlgId, signature);
}


#line 122
+ (OrgSpongycastleAsn1X509CertificateList *)generateCRLStructureWithOrgSpongycastleAsn1X509TBSCertList:(OrgSpongycastleAsn1X509TBSCertList *)tbsCertList
                                                        withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                         withByteArray:(IOSByteArray *)signature {
  return OrgSpongycastleCertCertUtils_generateCRLStructureWithOrgSpongycastleAsn1X509TBSCertList_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCertList, sigAlgId, signature);
}


#line 133
+ (id<JavaUtilSet>)getCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions:(OrgSpongycastleAsn1X509Extensions *)extensions {
  return OrgSpongycastleCertCertUtils_getCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions);
}


#line 143
+ (id<JavaUtilSet>)getNonCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions:(OrgSpongycastleAsn1X509Extensions *)extensions {
  return OrgSpongycastleCertCertUtils_getNonCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions);
}


#line 154
+ (id<JavaUtilList>)getExtensionOIDsWithOrgSpongycastleAsn1X509Extensions:(OrgSpongycastleAsn1X509Extensions *)extensions {
  return OrgSpongycastleCertCertUtils_getExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(extensions);
}


#line 164
+ (void)addExtensionWithOrgSpongycastleAsn1X509ExtensionsGenerator:(OrgSpongycastleAsn1X509ExtensionsGenerator *)extGenerator
                       withOrgSpongycastleAsn1ASN1ObjectIdentifier:(OrgSpongycastleAsn1ASN1ObjectIdentifier *)oid
                                                       withBoolean:(jboolean)isCritical
                              withOrgSpongycastleAsn1ASN1Encodable:(id<OrgSpongycastleAsn1ASN1Encodable>)value {
  OrgSpongycastleCertCertUtils_addExtensionWithOrgSpongycastleAsn1X509ExtensionsGenerator_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withBoolean_withOrgSpongycastleAsn1ASN1Encodable_(extGenerator, oid, isCritical, value);
}


#line 177
+ (OrgSpongycastleAsn1DERBitString *)booleanToBitStringWithBooleanArray:(IOSBooleanArray *)id_ {
  return OrgSpongycastleCertCertUtils_booleanToBitStringWithBooleanArray_(id_);
}


#line 198
+ (IOSBooleanArray *)bitStringToBooleanWithOrgSpongycastleAsn1DERBitString:(OrgSpongycastleAsn1DERBitString *)bitString {
  return OrgSpongycastleCertCertUtils_bitStringToBooleanWithOrgSpongycastleAsn1DERBitString_(bitString);
}


#line 216
+ (JavaUtilDate *)recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime:(OrgSpongycastleAsn1ASN1GeneralizedTime *)time {
  return OrgSpongycastleCertCertUtils_recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_(time);
}


#line 228
+ (jboolean)isAlgIdEqualWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)id1
                        withOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)id2 {
  return OrgSpongycastleCertCertUtils_isAlgIdEqualWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(id1, id2);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1ASN1Primitive;", 0x8, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCertX509CertificateHolder;", 0x8, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCertX509AttributeCertificateHolder;", 0x8, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleCertX509CRLHolder;", 0x8, 7, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 9, 10, 2, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509Certificate;", 0xa, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509AttributeCertificate;", 0xa, 13, 14, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X509CertificateList;", 0xa, 15, 16, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x8, 17, 18, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x8, 19, 18, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x8, 20, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 21, 22, 23, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1DERBitString;", 0x8, 24, 25, -1, -1, -1, -1 },
    { NULL, "[Z", 0x8, 26, 27, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x8, 28, 29, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 30, 31, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(parseNonEmptyASN1WithByteArray:);
  methods[2].selector = @selector(generateFullCertWithOrgSpongycastleOperatorContentSigner:withOrgSpongycastleAsn1X509TBSCertificate:);
  methods[3].selector = @selector(generateFullAttrCertWithOrgSpongycastleOperatorContentSigner:withOrgSpongycastleAsn1X509AttributeCertificateInfo:);
  methods[4].selector = @selector(generateFullCRLWithOrgSpongycastleOperatorContentSigner:withOrgSpongycastleAsn1X509TBSCertList:);
  methods[5].selector = @selector(generateSigWithOrgSpongycastleOperatorContentSigner:withOrgSpongycastleAsn1ASN1Encodable:);
  methods[6].selector = @selector(generateStructureWithOrgSpongycastleAsn1X509TBSCertificate:withOrgSpongycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[7].selector = @selector(generateAttrStructureWithOrgSpongycastleAsn1X509AttributeCertificateInfo:withOrgSpongycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[8].selector = @selector(generateCRLStructureWithOrgSpongycastleAsn1X509TBSCertList:withOrgSpongycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[9].selector = @selector(getCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions:);
  methods[10].selector = @selector(getNonCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions:);
  methods[11].selector = @selector(getExtensionOIDsWithOrgSpongycastleAsn1X509Extensions:);
  methods[12].selector = @selector(addExtensionWithOrgSpongycastleAsn1X509ExtensionsGenerator:withOrgSpongycastleAsn1ASN1ObjectIdentifier:withBoolean:withOrgSpongycastleAsn1ASN1Encodable:);
  methods[13].selector = @selector(booleanToBitStringWithBooleanArray:);
  methods[14].selector = @selector(bitStringToBooleanWithOrgSpongycastleAsn1DERBitString:);
  methods[15].selector = @selector(recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime:);
  methods[16].selector = @selector(isAlgIdEqualWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withOrgSpongycastleAsn1X509AlgorithmIdentifier:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_SET", "LJavaUtilSet;", .constantValue.asLong = 0, 0xa, -1, 32, -1, -1 },
    { "EMPTY_LIST", "LJavaUtilList;", .constantValue.asLong = 0, 0xa, -1, 33, -1, -1 },
  };
  static const void *ptrTable[] = { "parseNonEmptyASN1", "[B", "LJavaIoIOException;", "generateFullCert", "LOrgSpongycastleOperatorContentSigner;LOrgSpongycastleAsn1X509TBSCertificate;", "generateFullAttrCert", "LOrgSpongycastleOperatorContentSigner;LOrgSpongycastleAsn1X509AttributeCertificateInfo;", "generateFullCRL", "LOrgSpongycastleOperatorContentSigner;LOrgSpongycastleAsn1X509TBSCertList;", "generateSig", "LOrgSpongycastleOperatorContentSigner;LOrgSpongycastleAsn1ASN1Encodable;", "generateStructure", "LOrgSpongycastleAsn1X509TBSCertificate;LOrgSpongycastleAsn1X509AlgorithmIdentifier;[B", "generateAttrStructure", "LOrgSpongycastleAsn1X509AttributeCertificateInfo;LOrgSpongycastleAsn1X509AlgorithmIdentifier;[B", "generateCRLStructure", "LOrgSpongycastleAsn1X509TBSCertList;LOrgSpongycastleAsn1X509AlgorithmIdentifier;[B", "getCriticalExtensionOIDs", "LOrgSpongycastleAsn1X509Extensions;", "getNonCriticalExtensionOIDs", "getExtensionOIDs", "addExtension", "LOrgSpongycastleAsn1X509ExtensionsGenerator;LOrgSpongycastleAsn1ASN1ObjectIdentifier;ZLOrgSpongycastleAsn1ASN1Encodable;", "LOrgSpongycastleCertCertIOException;", "booleanToBitString", "[Z", "bitStringToBoolean", "LOrgSpongycastleAsn1DERBitString;", "recoverDate", "LOrgSpongycastleAsn1ASN1GeneralizedTime;", "isAlgIdEqual", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LOrgSpongycastleAsn1X509AlgorithmIdentifier;", &OrgSpongycastleCertCertUtils_EMPTY_SET, &OrgSpongycastleCertCertUtils_EMPTY_LIST };
  static const J2ObjcClassInfo _OrgSpongycastleCertCertUtils = { "CertUtils", "org.spongycastle.cert", ptrTable, methods, fields, 7, 0x0, 17, 2, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCertCertUtils;
}

+ (void)initialize {
  if (self == [OrgSpongycastleCertCertUtils class]) {
    OrgSpongycastleCertCertUtils_EMPTY_SET = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_JavaUtilHashSet_init());
    OrgSpongycastleCertCertUtils_EMPTY_LIST = JavaUtilCollections_unmodifiableListWithJavaUtilList_(new_JavaUtilArrayList_init());
    J2OBJC_SET_INITIALIZED(OrgSpongycastleCertCertUtils)
  }
}

@end


#line 34
void OrgSpongycastleCertCertUtils_initPackagePrivate(OrgSpongycastleCertCertUtils *self) {
  NSObject_init(self);
}


#line 34
OrgSpongycastleCertCertUtils *new_OrgSpongycastleCertCertUtils_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgSpongycastleCertCertUtils, initPackagePrivate)
}


#line 34
OrgSpongycastleCertCertUtils *create_OrgSpongycastleCertCertUtils_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCertCertUtils, initPackagePrivate)
}


#line 39
OrgSpongycastleAsn1ASN1Primitive *OrgSpongycastleCertCertUtils_parseNonEmptyASN1WithByteArray_(IOSByteArray *encoding) {
  OrgSpongycastleCertCertUtils_initialize();
  
#line 42
  OrgSpongycastleAsn1ASN1Primitive *p = OrgSpongycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(encoding);
  
#line 44
  if (p == nil) {
    
#line 46
    @throw new_JavaIoIOException_initWithNSString_(@"no content found");
  }
  return p;
}


#line 51
OrgSpongycastleCertX509CertificateHolder *OrgSpongycastleCertCertUtils_generateFullCertWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1X509TBSCertificate_(id<OrgSpongycastleOperatorContentSigner> signer, OrgSpongycastleAsn1X509TBSCertificate *tbsCert) {
  OrgSpongycastleCertCertUtils_initialize();
  @try {
    
#line 55
    return new_OrgSpongycastleCertX509CertificateHolder_initWithOrgSpongycastleAsn1X509Certificate_(OrgSpongycastleCertCertUtils_generateStructureWithOrgSpongycastleAsn1X509TBSCertificate_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCert, [((id<OrgSpongycastleOperatorContentSigner>) nil_chk(signer)) getAlgorithmIdentifier], OrgSpongycastleCertCertUtils_generateSigWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1ASN1Encodable_(signer, tbsCert)));
  }
  @catch (JavaIoIOException *e) {
    
#line 59
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"cannot produce certificate signature");
  }
}


#line 63
OrgSpongycastleCertX509AttributeCertificateHolder *OrgSpongycastleCertCertUtils_generateFullAttrCertWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1X509AttributeCertificateInfo_(id<OrgSpongycastleOperatorContentSigner> signer, OrgSpongycastleAsn1X509AttributeCertificateInfo *attrInfo) {
  OrgSpongycastleCertCertUtils_initialize();
  @try {
    
#line 67
    return new_OrgSpongycastleCertX509AttributeCertificateHolder_initWithOrgSpongycastleAsn1X509AttributeCertificate_(OrgSpongycastleCertCertUtils_generateAttrStructureWithOrgSpongycastleAsn1X509AttributeCertificateInfo_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(attrInfo, [((id<OrgSpongycastleOperatorContentSigner>) nil_chk(signer)) getAlgorithmIdentifier], OrgSpongycastleCertCertUtils_generateSigWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1ASN1Encodable_(signer, attrInfo)));
  }
  @catch (JavaIoIOException *e) {
    
#line 71
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"cannot produce attribute certificate signature");
  }
}


#line 75
OrgSpongycastleCertX509CRLHolder *OrgSpongycastleCertCertUtils_generateFullCRLWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1X509TBSCertList_(id<OrgSpongycastleOperatorContentSigner> signer, OrgSpongycastleAsn1X509TBSCertList *tbsCertList) {
  OrgSpongycastleCertCertUtils_initialize();
  @try {
    
#line 79
    return new_OrgSpongycastleCertX509CRLHolder_initWithOrgSpongycastleAsn1X509CertificateList_(OrgSpongycastleCertCertUtils_generateCRLStructureWithOrgSpongycastleAsn1X509TBSCertList_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCertList, [((id<OrgSpongycastleOperatorContentSigner>) nil_chk(signer)) getAlgorithmIdentifier], OrgSpongycastleCertCertUtils_generateSigWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1ASN1Encodable_(signer, tbsCertList)));
  }
  @catch (JavaIoIOException *e) {
    
#line 83
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"cannot produce certificate signature");
  }
}


#line 87
IOSByteArray *OrgSpongycastleCertCertUtils_generateSigWithOrgSpongycastleOperatorContentSigner_withOrgSpongycastleAsn1ASN1Encodable_(id<OrgSpongycastleOperatorContentSigner> signer, id<OrgSpongycastleAsn1ASN1Encodable> tbsObj) {
  OrgSpongycastleCertCertUtils_initialize();
  
#line 90
  JavaIoOutputStream *sOut = [((id<OrgSpongycastleOperatorContentSigner>) nil_chk(signer)) getOutputStream];
  OrgSpongycastleAsn1BCDEROutputStream *dOut = new_OrgSpongycastleAsn1BCDEROutputStream_initWithJavaIoOutputStream_(sOut);
  
#line 93
  [dOut writeObjectWithOrgSpongycastleAsn1ASN1Encodable:tbsObj];
  
#line 95
  [((JavaIoOutputStream *) nil_chk(sOut)) close];
  
#line 97
  return [signer getSignature];
}


#line 100
OrgSpongycastleAsn1X509Certificate *OrgSpongycastleCertCertUtils_generateStructureWithOrgSpongycastleAsn1X509TBSCertificate_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509TBSCertificate *tbsCert, OrgSpongycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature) {
  OrgSpongycastleCertCertUtils_initialize();
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 104
  [v addWithOrgSpongycastleAsn1ASN1Encodable:tbsCert];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:sigAlgId];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERBitString_initWithByteArray_(signature)];
  
#line 108
  return OrgSpongycastleAsn1X509Certificate_getInstanceWithId_(new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v));
}


#line 111
OrgSpongycastleAsn1X509AttributeCertificate *OrgSpongycastleCertCertUtils_generateAttrStructureWithOrgSpongycastleAsn1X509AttributeCertificateInfo_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509AttributeCertificateInfo *attrInfo, OrgSpongycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature) {
  OrgSpongycastleCertCertUtils_initialize();
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 115
  [v addWithOrgSpongycastleAsn1ASN1Encodable:attrInfo];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:sigAlgId];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERBitString_initWithByteArray_(signature)];
  
#line 119
  return OrgSpongycastleAsn1X509AttributeCertificate_getInstanceWithId_(new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v));
}


#line 122
OrgSpongycastleAsn1X509CertificateList *OrgSpongycastleCertCertUtils_generateCRLStructureWithOrgSpongycastleAsn1X509TBSCertList_withOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgSpongycastleAsn1X509TBSCertList *tbsCertList, OrgSpongycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature) {
  OrgSpongycastleCertCertUtils_initialize();
  OrgSpongycastleAsn1ASN1EncodableVector *v = new_OrgSpongycastleAsn1ASN1EncodableVector_init();
  
#line 126
  [v addWithOrgSpongycastleAsn1ASN1Encodable:tbsCertList];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:sigAlgId];
  [v addWithOrgSpongycastleAsn1ASN1Encodable:new_OrgSpongycastleAsn1DERBitString_initWithByteArray_(signature)];
  
#line 130
  return OrgSpongycastleAsn1X509CertificateList_getInstanceWithId_(new_OrgSpongycastleAsn1DERSequence_initWithOrgSpongycastleAsn1ASN1EncodableVector_(v));
}


#line 133
id<JavaUtilSet> OrgSpongycastleCertCertUtils_getCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(OrgSpongycastleAsn1X509Extensions *extensions) {
  OrgSpongycastleCertCertUtils_initialize();
  if (extensions == nil) {
    
#line 137
    return OrgSpongycastleCertCertUtils_EMPTY_SET;
  }
  
#line 140
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([extensions getCriticalExtensionOIDs])));
}


#line 143
id<JavaUtilSet> OrgSpongycastleCertCertUtils_getNonCriticalExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(OrgSpongycastleAsn1X509Extensions *extensions) {
  OrgSpongycastleCertCertUtils_initialize();
  if (extensions == nil) {
    
#line 147
    return OrgSpongycastleCertCertUtils_EMPTY_SET;
  }
  
#line 151
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([extensions getNonCriticalExtensionOIDs])));
}


#line 154
id<JavaUtilList> OrgSpongycastleCertCertUtils_getExtensionOIDsWithOrgSpongycastleAsn1X509Extensions_(OrgSpongycastleAsn1X509Extensions *extensions) {
  OrgSpongycastleCertCertUtils_initialize();
  if (extensions == nil) {
    
#line 158
    return OrgSpongycastleCertCertUtils_EMPTY_LIST;
  }
  
#line 161
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_([extensions getExtensionOIDs]));
}


#line 164
void OrgSpongycastleCertCertUtils_addExtensionWithOrgSpongycastleAsn1X509ExtensionsGenerator_withOrgSpongycastleAsn1ASN1ObjectIdentifier_withBoolean_withOrgSpongycastleAsn1ASN1Encodable_(OrgSpongycastleAsn1X509ExtensionsGenerator *extGenerator, OrgSpongycastleAsn1ASN1ObjectIdentifier *oid, jboolean isCritical, id<OrgSpongycastleAsn1ASN1Encodable> value) {
  OrgSpongycastleCertCertUtils_initialize();
  
#line 167
  @try {
    
#line 169
    [((OrgSpongycastleAsn1X509ExtensionsGenerator *) nil_chk(extGenerator)) addExtensionWithOrgSpongycastleAsn1ASN1ObjectIdentifier:oid withBoolean:isCritical withOrgSpongycastleAsn1ASN1Encodable:value];
  }
  @catch (JavaIoIOException *e) {
    
#line 173
    @throw new_OrgSpongycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot encode extension: ", [e getMessage]), e);
  }
}


#line 177
OrgSpongycastleAsn1DERBitString *OrgSpongycastleCertCertUtils_booleanToBitStringWithBooleanArray_(IOSBooleanArray *id_) {
  OrgSpongycastleCertCertUtils_initialize();
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:JreIntDiv((((IOSBooleanArray *) nil_chk(id_))->size_ + 7), 8)];
  
#line 181
  for (jint i = 0; i != id_->size_; i++) {
    
#line 183
    *IOSByteArray_GetRef(bytes, JreIntDiv(i, 8)) |= (IOSBooleanArray_Get(id_, i)) ? (JreLShift32(1, ((7 - (JreIntMod(i, 8)))))) : 0;
  }
  
#line 186
  jint pad = JreIntMod(id_->size_, 8);
  
#line 188
  if (pad == 0) {
    
#line 190
    return new_OrgSpongycastleAsn1DERBitString_initWithByteArray_(bytes);
  }
  else {
    
#line 194
    return new_OrgSpongycastleAsn1DERBitString_initWithByteArray_withInt_(bytes, 8 - pad);
  }
}


#line 198
IOSBooleanArray *OrgSpongycastleCertCertUtils_bitStringToBooleanWithOrgSpongycastleAsn1DERBitString_(OrgSpongycastleAsn1DERBitString *bitString) {
  OrgSpongycastleCertCertUtils_initialize();
  if (bitString != nil) {
    
#line 202
    IOSByteArray *bytes = [bitString getBytes];
    IOSBooleanArray *boolId = [IOSBooleanArray newArrayWithLength:((IOSByteArray *) nil_chk(bytes))->size_ * 8 - [bitString getPadBits]];
    
#line 205
    for (jint i = 0; i != boolId->size_; i++) {
      
#line 207
      *IOSBooleanArray_GetRef(boolId, i) = ((IOSByteArray_Get(bytes, JreIntDiv(i, 8)) & (JreURShift32((jint) 0x80, (JreIntMod(i, 8))))) != 0);
    }
    
#line 210
    return boolId;
  }
  
#line 213
  return nil;
}


#line 216
JavaUtilDate *OrgSpongycastleCertCertUtils_recoverDateWithOrgSpongycastleAsn1ASN1GeneralizedTime_(OrgSpongycastleAsn1ASN1GeneralizedTime *time) {
  OrgSpongycastleCertCertUtils_initialize();
  @try {
    
#line 220
    return [((OrgSpongycastleAsn1ASN1GeneralizedTime *) nil_chk(time)) getDate];
  }
  @catch (JavaTextParseException *e) {
    
#line 224
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"unable to recover date: ", [e getMessage]));
  }
}


#line 228
jboolean OrgSpongycastleCertCertUtils_isAlgIdEqualWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withOrgSpongycastleAsn1X509AlgorithmIdentifier_(OrgSpongycastleAsn1X509AlgorithmIdentifier *id1, OrgSpongycastleAsn1X509AlgorithmIdentifier *id2) {
  OrgSpongycastleCertCertUtils_initialize();
  if (![((OrgSpongycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(id1)) getAlgorithm])) isEqual:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(id2)) getAlgorithm]]) {
    
#line 232
    return false;
  }
  
#line 235
  if ([id1 getParameters] == nil) {
    
#line 237
    if ([id2 getParameters] != nil && ![((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([id2 getParameters])) isEqual:JreLoadStatic(OrgSpongycastleAsn1DERNull, INSTANCE)]) {
      
#line 239
      return false;
    }
    
#line 242
    return true;
  }
  
#line 245
  if ([id2 getParameters] == nil) {
    
#line 247
    if ([id1 getParameters] != nil && ![((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([id1 getParameters])) isEqual:JreLoadStatic(OrgSpongycastleAsn1DERNull, INSTANCE)]) {
      
#line 249
      return false;
    }
    
#line 252
    return true;
  }
  
#line 255
  return [((id<OrgSpongycastleAsn1ASN1Encodable>) nil_chk([id1 getParameters])) isEqual:[id2 getParameters]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCertCertUtils)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/operator/jcajce/JceKTSKeyUnwrapper.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "java/security/Key.h"
#include "java/security/PrivateKey.h"
#include "java/security/Provider.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "javax/crypto/Cipher.h"
#include "org/spongycastle/asn1/ASN1Encodable.h"
#include "org/spongycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/spongycastle/asn1/cms/GenericHybridParameters.h"
#include "org/spongycastle/asn1/cms/RsaKemParameters.h"
#include "org/spongycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/spongycastle/crypto/util/DEROtherInfo.h"
#include "org/spongycastle/jcajce/spec/KTSParameterSpec.h"
#include "org/spongycastle/jcajce/util/DefaultJcaJceHelper.h"
#include "org/spongycastle/jcajce/util/NamedJcaJceHelper.h"
#include "org/spongycastle/jcajce/util/ProviderJcaJceHelper.h"
#include "org/spongycastle/operator/AsymmetricKeyUnwrapper.h"
#include "org/spongycastle/operator/GenericKey.h"
#include "org/spongycastle/operator/OperatorException.h"
#include "org/spongycastle/operator/jcajce/JceGenericKey.h"
#include "org/spongycastle/operator/jcajce/JceKTSKeyUnwrapper.h"
#include "org/spongycastle/operator/jcajce/OperatorHelper.h"
#include "org/spongycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/operator/jcajce/JceKTSKeyUnwrapper must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper () {
 @public
  OrgSpongycastleOperatorJcajceOperatorHelper *helper_;
  id<JavaUtilMap> extraMappings_;
  id<JavaSecurityPrivateKey> privKey_;
  IOSByteArray *partyUInfo_;
  IOSByteArray *partyVInfo_;
}

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper, helper_, OrgSpongycastleOperatorJcajceOperatorHelper *)
J2OBJC_FIELD_SETTER(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper, extraMappings_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper, privKey_, id<JavaSecurityPrivateKey>)
J2OBJC_FIELD_SETTER(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper, partyUInfo_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper, partyVInfo_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/operator/jcajce/JceKTSKeyUnwrapper.java"


#line 24
@implementation OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper


#line 33
- (instancetype)initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)algorithmIdentifier
                                        withJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privKey
                                                     withByteArray:(IOSByteArray *)partyUInfo
                                                     withByteArray:(IOSByteArray *)partyVInfo {
  OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_withByteArray_withByteArray_(self, algorithmIdentifier, privKey, partyUInfo, partyVInfo);
  return self;
}


#line 42
- (OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  
#line 44
  self->helper_ = new_OrgSpongycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_(new_OrgSpongycastleJcajceUtilProviderJcaJceHelper_initWithJavaSecurityProvider_(provider));
  
#line 46
  return self;
}


#line 49
- (OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper *)setProviderWithNSString:(NSString *)providerName {
  
#line 51
  self->helper_ = new_OrgSpongycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_(new_OrgSpongycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(providerName));
  
#line 53
  return self;
}


#line 56
- (OrgSpongycastleOperatorGenericKey *)generateUnwrappedKeyWithOrgSpongycastleAsn1X509AlgorithmIdentifier:(OrgSpongycastleAsn1X509AlgorithmIdentifier *)encryptedKeyAlgorithm
                                                                                            withByteArray:(IOSByteArray *)encryptedKey {
  
#line 59
  OrgSpongycastleAsn1CmsGenericHybridParameters *params = OrgSpongycastleAsn1CmsGenericHybridParameters_getInstanceWithId_([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([self getAlgorithmIdentifier])) getParameters]);
  JavaxCryptoCipher *keyCipher = [((OrgSpongycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) createAsymmetricWrapperWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([self getAlgorithmIdentifier])) getAlgorithm] withJavaUtilMap:extraMappings_];
  NSString *symmetricWrappingAlg = [((OrgSpongycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) getWrappingAlgorithmNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgSpongycastleAsn1CmsGenericHybridParameters *) nil_chk(params)) getDem])) getAlgorithm]];
  OrgSpongycastleAsn1CmsRsaKemParameters *kemParameters = OrgSpongycastleAsn1CmsRsaKemParameters_getInstanceWithId_([((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk([params getKem])) getParameters]);
  jint keySizeInBits = [((JavaMathBigInteger *) nil_chk([((OrgSpongycastleAsn1CmsRsaKemParameters *) nil_chk(kemParameters)) getKeyLength])) intValue] * 8;
  id<JavaSecurityKey> sKey;
  
#line 66
  @try {
    
#line 68
    OrgSpongycastleCryptoUtilDEROtherInfo *otherInfo = [new_OrgSpongycastleCryptoUtilDEROtherInfo_Builder_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_([params getDem], partyUInfo_, partyVInfo_) build];
    OrgSpongycastleJcajceSpecKTSParameterSpec *ktsSpec = [((OrgSpongycastleJcajceSpecKTSParameterSpec_Builder *) nil_chk([new_OrgSpongycastleJcajceSpecKTSParameterSpec_Builder_initWithNSString_withInt_withByteArray_(symmetricWrappingAlg, keySizeInBits, [((OrgSpongycastleCryptoUtilDEROtherInfo *) nil_chk(otherInfo)) getEncoded]) withKdfAlgorithmWithOrgSpongycastleAsn1X509AlgorithmIdentifier:[kemParameters getKeyDerivationFunction]])) build];
    
#line 71
    [((JavaxCryptoCipher *) nil_chk(keyCipher)) init__WithInt:JavaxCryptoCipher_UNWRAP_MODE withJavaSecurityKey:privKey_ withJavaSecuritySpecAlgorithmParameterSpec:ktsSpec];
    
#line 73
    sKey = [keyCipher unwrapWithByteArray:encryptedKey withNSString:[((OrgSpongycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) getKeyAlgorithmNameWithOrgSpongycastleAsn1ASN1ObjectIdentifier:[((OrgSpongycastleAsn1X509AlgorithmIdentifier *) nil_chk(encryptedKeyAlgorithm)) getAlgorithm]] withInt:JavaxCryptoCipher_SECRET_KEY];
  }
  @catch (JavaLangException *e) {
    
#line 77
    @throw new_OrgSpongycastleOperatorOperatorException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Unable to unwrap contents key: ", [e getMessage]), e);
  }
  
#line 80
  return new_OrgSpongycastleOperatorJcajceJceGenericKey_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityKey_(encryptedKeyAlgorithm, sKey);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper;", 0x1, 1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleOperatorGenericKey;", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withJavaSecurityPrivateKey:withByteArray:withByteArray:);
  methods[1].selector = @selector(setProviderWithJavaSecurityProvider:);
  methods[2].selector = @selector(setProviderWithNSString:);
  methods[3].selector = @selector(generateUnwrappedKeyWithOrgSpongycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LOrgSpongycastleOperatorJcajceOperatorHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extraMappings_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privKey_", "LJavaSecurityPrivateKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "partyUInfo_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "partyVInfo_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgSpongycastleAsn1X509AlgorithmIdentifier;LJavaSecurityPrivateKey;[B[B", "setProvider", "LJavaSecurityProvider;", "LNSString;", "generateUnwrappedKey", "LOrgSpongycastleAsn1X509AlgorithmIdentifier;[B", "LOrgSpongycastleOperatorOperatorException;" };
  static const J2ObjcClassInfo _OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper = { "JceKTSKeyUnwrapper", "org.spongycastle.operator.jcajce", ptrTable, methods, fields, 7, 0x1, 4, 5, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper;
}

@end


#line 33
void OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_withByteArray_withByteArray_(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper *self, OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier, id<JavaSecurityPrivateKey> privKey, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo) {
  OrgSpongycastleOperatorAsymmetricKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_(self,
#line 35
  algorithmIdentifier);
  self->helper_ = new_OrgSpongycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgSpongycastleJcajceUtilJcaJceHelper_(new_OrgSpongycastleJcajceUtilDefaultJcaJceHelper_init());
  self->extraMappings_ = new_JavaUtilHashMap_init();
  
#line 37
  self->privKey_ = privKey;
  self->partyUInfo_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(partyUInfo);
  self->partyVInfo_ = OrgSpongycastleUtilArrays_cloneWithByteArray_(partyVInfo);
}


#line 33
OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper *new_OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_withByteArray_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier, id<JavaSecurityPrivateKey> privKey, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo) {
  J2OBJC_NEW_IMPL(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper, initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_withByteArray_withByteArray_, algorithmIdentifier, privKey, partyUInfo, partyVInfo)
}


#line 33
OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper *create_OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper_initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_withByteArray_withByteArray_(OrgSpongycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier, id<JavaSecurityPrivateKey> privKey, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper, initWithOrgSpongycastleAsn1X509AlgorithmIdentifier_withJavaSecurityPrivateKey_withByteArray_withByteArray_, algorithmIdentifier, privKey, partyUInfo, partyVInfo)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleOperatorJcajceJceKTSKeyUnwrapper)

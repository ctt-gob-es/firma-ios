//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/operator/ContentVerifier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgSpongycastleOperatorContentVerifier")
#ifdef RESTRICT_OrgSpongycastleOperatorContentVerifier
#define INCLUDE_ALL_OrgSpongycastleOperatorContentVerifier 0
#else
#define INCLUDE_ALL_OrgSpongycastleOperatorContentVerifier 1
#endif
#undef RESTRICT_OrgSpongycastleOperatorContentVerifier

#if !defined (OrgSpongycastleOperatorContentVerifier_) && (INCLUDE_ALL_OrgSpongycastleOperatorContentVerifier || defined(INCLUDE_OrgSpongycastleOperatorContentVerifier))
#define OrgSpongycastleOperatorContentVerifier_

@class IOSByteArray;
@class JavaIoOutputStream;
@class OrgSpongycastleAsn1X509AlgorithmIdentifier;

@protocol OrgSpongycastleOperatorContentVerifier < JavaObject >

/*!
 @brief Return the algorithm identifier describing the signature
  algorithm and parameters this expander supports.
 @return algorithm oid and parameters.
 */
- (OrgSpongycastleAsn1X509AlgorithmIdentifier *)getAlgorithmIdentifier;

/*!
 @brief Returns a stream that will accept data for the purpose of calculating
  a signature for later verification.Use org.spongycastle.util.io.TeeOutputStream if you want to accumulate
  the data on the fly as well.
 @return an OutputStream
 */
- (JavaIoOutputStream *)getOutputStream;

/*!
 @param expected expected value of the signature on the data.
 @return true if the signature verifies, false otherwise
 */
- (jboolean)verifyWithByteArray:(IOSByteArray *)expected;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgSpongycastleOperatorContentVerifier)

J2OBJC_TYPE_LITERAL_HEADER(OrgSpongycastleOperatorContentVerifier)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgSpongycastleOperatorContentVerifier")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/OriginatorId.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/spongycastle/asn1/x500/X500Name.h"
#include "org/spongycastle/cms/OriginatorId.h"
#include "org/spongycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/spongycastle/cms/OriginatorId must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgSpongycastleCmsOriginatorId () {
 @public
  IOSByteArray *subjectKeyId_;
  OrgSpongycastleAsn1X500X500Name *issuer_;
  JavaMathBigInteger *serialNumber_;
}

- (void)setSubjectKeyIDWithByteArray:(IOSByteArray *)subjectKeyId;

- (void)setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                       withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber;

- (jboolean)equalsObjWithId:(id)a
                     withId:(id)b;

@end

J2OBJC_FIELD_SETTER(OrgSpongycastleCmsOriginatorId, subjectKeyId_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsOriginatorId, issuer_, OrgSpongycastleAsn1X500X500Name *)
J2OBJC_FIELD_SETTER(OrgSpongycastleCmsOriginatorId, serialNumber_, JavaMathBigInteger *)

__attribute__((unused)) static void OrgSpongycastleCmsOriginatorId_setSubjectKeyIDWithByteArray_(OrgSpongycastleCmsOriginatorId *self, IOSByteArray *subjectKeyId);

__attribute__((unused)) static void OrgSpongycastleCmsOriginatorId_setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleCmsOriginatorId *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber);

__attribute__((unused)) static jboolean OrgSpongycastleCmsOriginatorId_equalsObjWithId_withId_(OrgSpongycastleCmsOriginatorId *self, id a, id b);

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/org/spongycastle/cms/OriginatorId.java"


#line 12
@implementation OrgSpongycastleCmsOriginatorId


#line 25
- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)subjectKeyId {
  OrgSpongycastleCmsOriginatorId_initPackagePrivateWithByteArray_(self, subjectKeyId);
  return self;
}

- (void)setSubjectKeyIDWithByteArray:(IOSByteArray *)subjectKeyId {
  OrgSpongycastleCmsOriginatorId_setSubjectKeyIDWithByteArray_(self, subjectKeyId);
}


#line 42
- (instancetype)initPackagePrivateWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                               withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuer, serialNumber);
  return self;
}


#line 47
- (void)setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                       withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgSpongycastleCmsOriginatorId_setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuer, serialNumber);
}


#line 61
- (instancetype)initPackagePrivateWithOrgSpongycastleAsn1X500X500Name:(OrgSpongycastleAsn1X500X500Name *)issuer
                                               withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber
                                                        withByteArray:(IOSByteArray *)subjectKeyId {
  OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self, issuer, serialNumber, subjectKeyId);
  return self;
}


#line 67
- (OrgSpongycastleAsn1X500X500Name *)getIssuer {
  
#line 69
  return issuer_;
}


#line 72
- (id)java_clone {
  
#line 74
  return new_OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self->issuer_, self->serialNumber_, self->subjectKeyId_);
}


#line 77
- (NSUInteger)hash {
  
#line 79
  jint code = OrgSpongycastleUtilArrays_hashCodeWithByteArray_(subjectKeyId_);
  
#line 81
  if (self->serialNumber_ != nil) {
    
#line 83
    code ^= ((jint) [self->serialNumber_ hash]);
  }
  
#line 86
  if (self->issuer_ != nil) {
    
#line 88
    code ^= ((jint) [self->issuer_ hash]);
  }
  
#line 91
  return code;
}


#line 94
- (jboolean)isEqual:(id)o {
  
#line 97
  if (!([o isKindOfClass:[OrgSpongycastleCmsOriginatorId class]])) {
    
#line 99
    return false;
  }
  
#line 102
  OrgSpongycastleCmsOriginatorId *id_ = (OrgSpongycastleCmsOriginatorId *) cast_chk(o, [OrgSpongycastleCmsOriginatorId class]);
  
#line 104
  return OrgSpongycastleUtilArrays_areEqualWithByteArray_withByteArray_(subjectKeyId_, ((OrgSpongycastleCmsOriginatorId *) nil_chk(id_))->subjectKeyId_) && OrgSpongycastleCmsOriginatorId_equalsObjWithId_withId_(self,
#line 105
  self->serialNumber_, id_->serialNumber_) && OrgSpongycastleCmsOriginatorId_equalsObjWithId_withId_(self,
#line 106
  self->issuer_, id_->issuer_);
}


#line 109
- (jboolean)equalsObjWithId:(id)a
                     withId:(id)b {
  return OrgSpongycastleCmsOriginatorId_equalsObjWithId_withId_(self, a, b);
}

- (jboolean)matchWithId:(id)obj {
  
#line 116
  return false;
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LOrgSpongycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithByteArray:);
  methods[1].selector = @selector(setSubjectKeyIDWithByteArray:);
  methods[2].selector = @selector(initPackagePrivateWithOrgSpongycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[3].selector = @selector(setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[4].selector = @selector(initPackagePrivateWithOrgSpongycastleAsn1X500X500Name:withJavaMathBigInteger:withByteArray:);
  methods[5].selector = @selector(getIssuer);
  methods[6].selector = @selector(java_clone);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(equalsObjWithId:withId:);
  methods[10].selector = @selector(matchWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subjectKeyId_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuer_", "LOrgSpongycastleAsn1X500X500Name;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialNumber_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "setSubjectKeyID", "LOrgSpongycastleAsn1X500X500Name;LJavaMathBigInteger;", "setIssuerAndSerial", "LOrgSpongycastleAsn1X500X500Name;LJavaMathBigInteger;[B", "clone", "hashCode", "equals", "LNSObject;", "equalsObj", "LNSObject;LNSObject;", "match" };
  static const J2ObjcClassInfo _OrgSpongycastleCmsOriginatorId = { "OriginatorId", "org.spongycastle.cms", ptrTable, methods, fields, 7, 0x0, 11, 3, -1, -1, -1, -1, -1 };
  return &_OrgSpongycastleCmsOriginatorId;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 25
void OrgSpongycastleCmsOriginatorId_initPackagePrivateWithByteArray_(OrgSpongycastleCmsOriginatorId *self, IOSByteArray *subjectKeyId) {
  NSObject_init(self);
  OrgSpongycastleCmsOriginatorId_setSubjectKeyIDWithByteArray_(self, subjectKeyId);
}


#line 25
OrgSpongycastleCmsOriginatorId *new_OrgSpongycastleCmsOriginatorId_initPackagePrivateWithByteArray_(IOSByteArray *subjectKeyId) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsOriginatorId, initPackagePrivateWithByteArray_, subjectKeyId)
}


#line 25
OrgSpongycastleCmsOriginatorId *create_OrgSpongycastleCmsOriginatorId_initPackagePrivateWithByteArray_(IOSByteArray *subjectKeyId) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsOriginatorId, initPackagePrivateWithByteArray_, subjectKeyId)
}


#line 30
void OrgSpongycastleCmsOriginatorId_setSubjectKeyIDWithByteArray_(OrgSpongycastleCmsOriginatorId *self, IOSByteArray *subjectKeyId) {
  
#line 32
  self->subjectKeyId_ = subjectKeyId;
}


#line 42
void OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleCmsOriginatorId *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  NSObject_init(self);
  OrgSpongycastleCmsOriginatorId_setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuer, serialNumber);
}


#line 42
OrgSpongycastleCmsOriginatorId *new_OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsOriginatorId, initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serialNumber)
}


#line 42
OrgSpongycastleCmsOriginatorId *create_OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsOriginatorId, initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serialNumber)
}


#line 47
void OrgSpongycastleCmsOriginatorId_setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgSpongycastleCmsOriginatorId *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  
#line 49
  self->issuer_ = issuer;
  self->serialNumber_ = serialNumber;
}


#line 61
void OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgSpongycastleCmsOriginatorId *self, OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  NSObject_init(self);
  OrgSpongycastleCmsOriginatorId_setIssuerAndSerialWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuer, serialNumber);
  OrgSpongycastleCmsOriginatorId_setSubjectKeyIDWithByteArray_(self, subjectKeyId);
}


#line 61
OrgSpongycastleCmsOriginatorId *new_OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  J2OBJC_NEW_IMPL(OrgSpongycastleCmsOriginatorId, initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_, issuer, serialNumber, subjectKeyId)
}


#line 61
OrgSpongycastleCmsOriginatorId *create_OrgSpongycastleCmsOriginatorId_initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgSpongycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  J2OBJC_CREATE_IMPL(OrgSpongycastleCmsOriginatorId, initPackagePrivateWithOrgSpongycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_, issuer, serialNumber, subjectKeyId)
}


#line 109
jboolean OrgSpongycastleCmsOriginatorId_equalsObjWithId_withId_(OrgSpongycastleCmsOriginatorId *self, id a, id b) {
  
#line 111
  return (a != nil) ? [nil_chk(a) isEqual:b] : b == nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgSpongycastleCmsOriginatorId)

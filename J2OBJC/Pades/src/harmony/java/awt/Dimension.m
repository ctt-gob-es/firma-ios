//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/Dimension.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "harmony/java/awt/Dimension.h"
#include "harmony/java/awt/geom/Dimension2D.h"
#include "java/lang/Math.h"
#include "org/apache/harmony/misc/HashCode.h"

#if !__has_feature(objc_arc)
#error "harmony/java/awt/Dimension must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong HarmonyJavaAwtDimension_get_serialVersionUID(void);
#define HarmonyJavaAwtDimension_serialVersionUID 4723952579491349524LL
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtDimension, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/Dimension.java"


#line 28
@implementation HarmonyJavaAwtDimension


#line 35
- (instancetype)initWithHarmonyJavaAwtDimension:(HarmonyJavaAwtDimension *)d {
  HarmonyJavaAwtDimension_initWithHarmonyJavaAwtDimension_(self, d);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 39
- (instancetype)init {
  HarmonyJavaAwtDimension_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 43
- (instancetype)initWithInt:(jint)width
                    withInt:(jint)height {
  HarmonyJavaAwtDimension_initWithInt_withInt_(self, width, height);
  return self;
}


#line 47
- (NSUInteger)hash {
  
#line 49
  OrgApacheHarmonyMiscHashCode *hash_ = new_OrgApacheHarmonyMiscHashCode_init();
  (void) [hash_ appendWithInt:width_];
  (void) [hash_ appendWithInt:height_];
  return ((jint) [hash_ hash]);
}


#line 55
- (jboolean)isEqual:(id)obj {
  
#line 57
  if (JreObjectEqualsEquals(obj, self)) {
    return true;
  }
  if ([obj isKindOfClass:[HarmonyJavaAwtDimension class]]) {
    HarmonyJavaAwtDimension *d = (HarmonyJavaAwtDimension *) obj;
    return (((HarmonyJavaAwtDimension *) nil_chk(d))->width_ == width_ && d->height_ == height_);
  }
  return false;
}


#line 67
- (NSString *)description {
  
#line 72
  return JreStrcat("$$I$IC", [[self java_getClass] getName], @"[width=", width_, @",height=", height_, ']');
}


#line 75
- (void)setSizeWithInt:(jint)width
               withInt:(jint)height {
  
#line 76
  self->width_ = width;
  self->height_ = height;
}


#line 80
- (void)setSizeWithHarmonyJavaAwtDimension:(HarmonyJavaAwtDimension *)d {
  [self setSizeWithInt:((HarmonyJavaAwtDimension *) nil_chk(d))->width_ withInt:d->height_];
}

- (void)setSizeWithDouble:(jdouble)width
               withDouble:(jdouble)height {
  [self setSizeWithInt:JreFpToInt(JavaLangMath_ceilWithDouble_(width)) withInt:JreFpToInt(JavaLangMath_ceilWithDouble_(height))];
}

- (HarmonyJavaAwtDimension *)getSize {
  return new_HarmonyJavaAwtDimension_initWithInt_withInt_(width_, height_);
}

- (jdouble)getHeight {
  
#line 95
  return height_;
}


#line 98
- (jdouble)getWidth {
  
#line 100
  return width_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtDimension;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithHarmonyJavaAwtDimension:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(initWithInt:withInt:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(setSizeWithInt:withInt:);
  methods[7].selector = @selector(setSizeWithHarmonyJavaAwtDimension:);
  methods[8].selector = @selector(setSizeWithDouble:withDouble:);
  methods[9].selector = @selector(getSize);
  methods[10].selector = @selector(getHeight);
  methods[11].selector = @selector(getWidth);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = HarmonyJavaAwtDimension_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "width_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "height_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LHarmonyJavaAwtDimension;", "II", "hashCode", "equals", "LNSObject;", "toString", "setSize", "DD" };
  static const J2ObjcClassInfo _HarmonyJavaAwtDimension = { "Dimension", "harmony.java.awt", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtDimension;
}

@end


#line 35
void HarmonyJavaAwtDimension_initWithHarmonyJavaAwtDimension_(HarmonyJavaAwtDimension *self, HarmonyJavaAwtDimension *d) {
  HarmonyJavaAwtDimension_initWithInt_withInt_(self, ((HarmonyJavaAwtDimension *) nil_chk(d))->width_, d->height_);
}


#line 35
HarmonyJavaAwtDimension *new_HarmonyJavaAwtDimension_initWithHarmonyJavaAwtDimension_(HarmonyJavaAwtDimension *d) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtDimension, initWithHarmonyJavaAwtDimension_, d)
}


#line 35
HarmonyJavaAwtDimension *create_HarmonyJavaAwtDimension_initWithHarmonyJavaAwtDimension_(HarmonyJavaAwtDimension *d) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtDimension, initWithHarmonyJavaAwtDimension_, d)
}

void HarmonyJavaAwtDimension_init(HarmonyJavaAwtDimension *self) {
  HarmonyJavaAwtDimension_initWithInt_withInt_(self, 0, 0);
}


#line 39
HarmonyJavaAwtDimension *new_HarmonyJavaAwtDimension_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtDimension, init)
}


#line 39
HarmonyJavaAwtDimension *create_HarmonyJavaAwtDimension_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtDimension, init)
}

void HarmonyJavaAwtDimension_initWithInt_withInt_(HarmonyJavaAwtDimension *self, jint width, jint height) {
  HarmonyJavaAwtGeomDimension2D_init(self);
  
#line 44
  [self setSizeWithInt:width withInt:height];
}


#line 43
HarmonyJavaAwtDimension *new_HarmonyJavaAwtDimension_initWithInt_withInt_(jint width, jint height) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtDimension, initWithInt_withInt_, width, height)
}


#line 43
HarmonyJavaAwtDimension *create_HarmonyJavaAwtDimension_initWithInt_withInt_(jint width, jint height) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtDimension, initWithInt_withInt_, width, height)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtDimension)

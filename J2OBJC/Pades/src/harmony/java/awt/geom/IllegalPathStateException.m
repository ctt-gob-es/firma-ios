//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/IllegalPathStateException.java
//

#include "J2ObjC_source.h"
#include "harmony/java/awt/geom/IllegalPathStateException.h"
#include "java/lang/RuntimeException.h"

#if !__has_feature(objc_arc)
#error "harmony/java/awt/geom/IllegalPathStateException must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong HarmonyJavaAwtGeomIllegalPathStateException_get_serialVersionUID(void);
#define HarmonyJavaAwtGeomIllegalPathStateException_serialVersionUID -5158084205220481094LL
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomIllegalPathStateException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/IllegalPathStateException.java"


#line 22
@implementation HarmonyJavaAwtGeomIllegalPathStateException

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 26
- (instancetype)init {
  HarmonyJavaAwtGeomIllegalPathStateException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 29
- (instancetype)initWithNSString:(NSString *)s {
  HarmonyJavaAwtGeomIllegalPathStateException_initWithNSString_(self, s);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = HarmonyJavaAwtGeomIllegalPathStateException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomIllegalPathStateException = { "IllegalPathStateException", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomIllegalPathStateException;
}

@end


#line 26
void HarmonyJavaAwtGeomIllegalPathStateException_init(HarmonyJavaAwtGeomIllegalPathStateException *self) {
  JavaLangRuntimeException_init(self);
}


#line 26
HarmonyJavaAwtGeomIllegalPathStateException *new_HarmonyJavaAwtGeomIllegalPathStateException_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomIllegalPathStateException, init)
}


#line 26
HarmonyJavaAwtGeomIllegalPathStateException *create_HarmonyJavaAwtGeomIllegalPathStateException_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomIllegalPathStateException, init)
}


#line 29
void HarmonyJavaAwtGeomIllegalPathStateException_initWithNSString_(HarmonyJavaAwtGeomIllegalPathStateException *self, NSString *s) {
  JavaLangRuntimeException_initWithNSString_(self, s);
}


#line 29
HarmonyJavaAwtGeomIllegalPathStateException *new_HarmonyJavaAwtGeomIllegalPathStateException_initWithNSString_(NSString *s) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomIllegalPathStateException, initWithNSString_, s)
}


#line 29
HarmonyJavaAwtGeomIllegalPathStateException *create_HarmonyJavaAwtGeomIllegalPathStateException_initWithNSString_(NSString *s) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomIllegalPathStateException, initWithNSString_, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomIllegalPathStateException)

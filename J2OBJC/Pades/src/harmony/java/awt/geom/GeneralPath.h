//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/GeneralPath.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HarmonyJavaAwtGeomGeneralPath")
#ifdef RESTRICT_HarmonyJavaAwtGeomGeneralPath
#define INCLUDE_ALL_HarmonyJavaAwtGeomGeneralPath 0
#else
#define INCLUDE_ALL_HarmonyJavaAwtGeomGeneralPath 1
#endif
#undef RESTRICT_HarmonyJavaAwtGeomGeneralPath

#if !defined (HarmonyJavaAwtGeomGeneralPath_) && (INCLUDE_ALL_HarmonyJavaAwtGeomGeneralPath || defined(INCLUDE_HarmonyJavaAwtGeomGeneralPath))
#define HarmonyJavaAwtGeomGeneralPath_

#define RESTRICT_HarmonyJavaAwtShape 1
#define INCLUDE_HarmonyJavaAwtShape 1
#include "harmony/java/awt/Shape.h"

@class HarmonyJavaAwtAWTRectangle;
@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomPoint2D;
@class HarmonyJavaAwtGeomRectangle2D;
@class IOSByteArray;
@class IOSFloatArray;
@class IOSIntArray;
@protocol HarmonyJavaAwtGeomPathIterator;

@interface HarmonyJavaAwtGeomGeneralPath : NSObject < HarmonyJavaAwtShape, NSCopying > {
 @public
  /*!
   @brief The point's types buffer
   */
  IOSByteArray *types_;
  /*!
   @brief The points buffer
   */
  IOSFloatArray *points_;
  /*!
   @brief The point's type buffer size
   */
  jint typeSize_;
  /*!
   @brief The points buffer size
   */
  jint pointSize_;
  /*!
   @brief The path rule
   */
  jint rule_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)rule;

- (instancetype)initWithInt:(jint)rule
                    withInt:(jint)initialCapacity;

- (instancetype)initWithHarmonyJavaAwtShape:(id<HarmonyJavaAwtShape>)shape;

- (void)appendWithHarmonyJavaAwtGeomPathIterator:(id<HarmonyJavaAwtGeomPathIterator>)path
                                     withBoolean:(jboolean)connect;

- (void)appendWithHarmonyJavaAwtShape:(id<HarmonyJavaAwtShape>)shape
                          withBoolean:(jboolean)connect;

- (id)java_clone;

- (void)closePath;

- (jboolean)containsWithDouble:(jdouble)px
                    withDouble:(jdouble)py;

- (jboolean)containsWithDouble:(jdouble)rx
                    withDouble:(jdouble)ry
                    withDouble:(jdouble)rw
                    withDouble:(jdouble)rh;

- (jboolean)containsWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p;

- (jboolean)containsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (id<HarmonyJavaAwtShape>)createTransformedShapeWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (void)curveToWithFloat:(jfloat)x1
               withFloat:(jfloat)y1
               withFloat:(jfloat)x2
               withFloat:(jfloat)y2
               withFloat:(jfloat)x3
               withFloat:(jfloat)y3;

- (HarmonyJavaAwtAWTRectangle *)getBounds;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (HarmonyJavaAwtGeomPoint2D *)getCurrentPoint;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t
                                                                                withDouble:(jdouble)flatness;

- (jint)getWindingRule;

- (jboolean)intersectsWithDouble:(jdouble)rx
                      withDouble:(jdouble)ry
                      withDouble:(jdouble)rw
                      withDouble:(jdouble)rh;

- (jboolean)intersectsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r;

- (void)lineToWithFloat:(jfloat)x
              withFloat:(jfloat)y;

- (void)moveToWithFloat:(jfloat)x
              withFloat:(jfloat)y;

- (void)quadToWithFloat:(jfloat)x1
              withFloat:(jfloat)y1
              withFloat:(jfloat)x2
              withFloat:(jfloat)y2;

- (void)reset;

- (void)setWindingRuleWithInt:(jint)rule;

- (void)transformWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

#pragma mark Package-Private

/*!
 @brief Checks points and types buffer size to add pointCount points.If
  necessary realloc buffers to enlarge size.
 @param pointCount - the point count to be added in buffer
 */
- (void)checkBufWithInt:(jint)pointCount
            withBoolean:(jboolean)checkMove;

/*!
 @brief Checks cross count according to path rule to define is it point inside
  shape or not.
 @param cross - the point cross count
 @return true if point is inside path, or false otherwise
 */
- (jboolean)isInsideWithInt:(jint)cross;

@end

J2OBJC_STATIC_INIT(HarmonyJavaAwtGeomGeneralPath)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomGeneralPath, types_, IOSByteArray *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomGeneralPath, points_, IOSFloatArray *)

inline jint HarmonyJavaAwtGeomGeneralPath_get_WIND_EVEN_ODD(void);
#define HarmonyJavaAwtGeomGeneralPath_WIND_EVEN_ODD 0
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomGeneralPath, WIND_EVEN_ODD, jint)

inline jint HarmonyJavaAwtGeomGeneralPath_get_WIND_NON_ZERO(void);
#define HarmonyJavaAwtGeomGeneralPath_WIND_NON_ZERO 1
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomGeneralPath, WIND_NON_ZERO, jint)

/*!
 @brief The space amount in points buffer for different segmenet's types
 */
inline IOSIntArray *HarmonyJavaAwtGeomGeneralPath_get_pointShift(void);
inline IOSIntArray *HarmonyJavaAwtGeomGeneralPath_set_pointShift(IOSIntArray *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *HarmonyJavaAwtGeomGeneralPath_pointShift;
J2OBJC_STATIC_FIELD_OBJ(HarmonyJavaAwtGeomGeneralPath, pointShift, IOSIntArray *)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomGeneralPath_init(HarmonyJavaAwtGeomGeneralPath *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *new_HarmonyJavaAwtGeomGeneralPath_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *create_HarmonyJavaAwtGeomGeneralPath_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomGeneralPath_initWithInt_(HarmonyJavaAwtGeomGeneralPath *self, jint rule);

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *new_HarmonyJavaAwtGeomGeneralPath_initWithInt_(jint rule) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *create_HarmonyJavaAwtGeomGeneralPath_initWithInt_(jint rule);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomGeneralPath_initWithInt_withInt_(HarmonyJavaAwtGeomGeneralPath *self, jint rule, jint initialCapacity);

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *new_HarmonyJavaAwtGeomGeneralPath_initWithInt_withInt_(jint rule, jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *create_HarmonyJavaAwtGeomGeneralPath_initWithInt_withInt_(jint rule, jint initialCapacity);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomGeneralPath_initWithHarmonyJavaAwtShape_(HarmonyJavaAwtGeomGeneralPath *self, id<HarmonyJavaAwtShape> shape);

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *new_HarmonyJavaAwtGeomGeneralPath_initWithHarmonyJavaAwtShape_(id<HarmonyJavaAwtShape> shape) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath *create_HarmonyJavaAwtGeomGeneralPath_initWithHarmonyJavaAwtShape_(id<HarmonyJavaAwtShape> shape);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomGeneralPath)

#endif

#if !defined (HarmonyJavaAwtGeomGeneralPath_Iterator_) && (INCLUDE_ALL_HarmonyJavaAwtGeomGeneralPath || defined(INCLUDE_HarmonyJavaAwtGeomGeneralPath_Iterator))
#define HarmonyJavaAwtGeomGeneralPath_Iterator_

#define RESTRICT_HarmonyJavaAwtGeomPathIterator 1
#define INCLUDE_HarmonyJavaAwtGeomPathIterator 1
#include "harmony/java/awt/geom/PathIterator.h"

@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomGeneralPath;
@class IOSDoubleArray;
@class IOSFloatArray;

@interface HarmonyJavaAwtGeomGeneralPath_Iterator : NSObject < HarmonyJavaAwtGeomPathIterator > {
 @public
  /*!
   @brief The current cursor position in types buffer
   */
  jint typeIndex_;
  /*!
   @brief The current cursor position in points buffer
   */
  jint pointIndex_;
  /*!
   @brief The source GeneralPath object
   */
  HarmonyJavaAwtGeomGeneralPath *p_;
  /*!
   @brief The path iterator transformation
   */
  HarmonyJavaAwtGeomAffineTransform *t_;
}

#pragma mark Public

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

#pragma mark Package-Private

/*!
 @brief Constructs a new GeneralPath.Iterator for given general path
 @param path - the source GeneralPath object
 */
- (instancetype)initWithHarmonyJavaAwtGeomGeneralPath:(HarmonyJavaAwtGeomGeneralPath *)outer$
                    withHarmonyJavaAwtGeomGeneralPath:(HarmonyJavaAwtGeomGeneralPath *)path;

/*!
 @brief Constructs a new GeneralPath.Iterator for given general path and
  transformation
 @param path - the source GeneralPath object
 @param at - the AffineTransform object to apply rectangle path
 */
- (instancetype)initWithHarmonyJavaAwtGeomGeneralPath:(HarmonyJavaAwtGeomGeneralPath *)outer$
                    withHarmonyJavaAwtGeomGeneralPath:(HarmonyJavaAwtGeomGeneralPath *)path
                withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomGeneralPath_Iterator)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomGeneralPath_Iterator, p_, HarmonyJavaAwtGeomGeneralPath *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomGeneralPath_Iterator, t_, HarmonyJavaAwtGeomAffineTransform *)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomGeneralPath_Iterator_initWithHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomGeneralPath_(HarmonyJavaAwtGeomGeneralPath_Iterator *self, HarmonyJavaAwtGeomGeneralPath *outer$, HarmonyJavaAwtGeomGeneralPath *path);

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath_Iterator *new_HarmonyJavaAwtGeomGeneralPath_Iterator_initWithHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomGeneralPath_(HarmonyJavaAwtGeomGeneralPath *outer$, HarmonyJavaAwtGeomGeneralPath *path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath_Iterator *create_HarmonyJavaAwtGeomGeneralPath_Iterator_initWithHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomGeneralPath_(HarmonyJavaAwtGeomGeneralPath *outer$, HarmonyJavaAwtGeomGeneralPath *path);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomGeneralPath_Iterator_initWithHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomGeneralPath_Iterator *self, HarmonyJavaAwtGeomGeneralPath *outer$, HarmonyJavaAwtGeomGeneralPath *path, HarmonyJavaAwtGeomAffineTransform *at);

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath_Iterator *new_HarmonyJavaAwtGeomGeneralPath_Iterator_initWithHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomGeneralPath *outer$, HarmonyJavaAwtGeomGeneralPath *path, HarmonyJavaAwtGeomAffineTransform *at) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomGeneralPath_Iterator *create_HarmonyJavaAwtGeomGeneralPath_Iterator_initWithHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomGeneralPath_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomGeneralPath *outer$, HarmonyJavaAwtGeomGeneralPath *path, HarmonyJavaAwtGeomAffineTransform *at);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomGeneralPath_Iterator)

#endif

#pragma pop_macro("INCLUDE_ALL_HarmonyJavaAwtGeomGeneralPath")

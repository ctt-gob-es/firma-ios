//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/QuadCurve2D.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "harmony/java/awt/AWTRectangle.h"
#include "harmony/java/awt/geom/AffineTransform.h"
#include "harmony/java/awt/geom/FlatteningPathIterator.h"
#include "harmony/java/awt/geom/Line2D.h"
#include "harmony/java/awt/geom/PathIterator.h"
#include "harmony/java/awt/geom/Point2D.h"
#include "harmony/java/awt/geom/QuadCurve2D.h"
#include "harmony/java/awt/geom/Rectangle2D.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/InternalError.h"
#include "java/lang/Math.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/harmony/awt/gl/Crossing.h"
#include "org/apache/harmony/awt/internal/nls/Messages.h"

#if !__has_feature(objc_arc)
#error "harmony/java/awt/geom/QuadCurve2D must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/QuadCurve2D.java"


#line 30
@implementation HarmonyJavaAwtGeomQuadCurve2D

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 301
- (instancetype)init {
  HarmonyJavaAwtGeomQuadCurve2D_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 304
- (jdouble)getX1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 306
- (jdouble)getY1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 308
- (HarmonyJavaAwtGeomPoint2D *)getP1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 310
- (jdouble)getCtrlX {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 312
- (jdouble)getCtrlY {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 314
- (HarmonyJavaAwtGeomPoint2D *)getCtrlPt {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 316
- (jdouble)getX2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 318
- (jdouble)getY2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 320
- (HarmonyJavaAwtGeomPoint2D *)getP2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 322
- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 324
- (void)setCurveWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p1
                withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)cp
                withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p2 {
  
#line 325
  [self setCurveWithDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(p1)) getX] withDouble:[p1 getY] withDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(cp)) getX] withDouble:[cp getY] withDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(p2)) getX] withDouble:[p2 getY]];
}


#line 328
- (void)setCurveWithDoubleArray:(IOSDoubleArray *)coords
                        withInt:(jint)offset {
  
#line 329
  [self setCurveWithDouble:IOSDoubleArray_Get(nil_chk(coords), offset + 0) withDouble:IOSDoubleArray_Get(coords, offset + 1) withDouble:IOSDoubleArray_Get(coords, offset + 2) withDouble:IOSDoubleArray_Get(coords, offset + 3) withDouble:IOSDoubleArray_Get(coords, offset + 4) withDouble:IOSDoubleArray_Get(
#line 330
  coords, offset + 5)];
}


#line 333
- (void)setCurveWithHarmonyJavaAwtGeomPoint2DArray:(IOSObjectArray *)points
                                           withInt:(jint)offset {
  
#line 334
  [self setCurveWithDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(nil_chk(points), offset + 0))) getX] withDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(points, offset + 0))) getY] withDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(points, offset + 1))) getX] withDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(points, offset + 1))) getY] withDouble:
#line 335
  [((HarmonyJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(points, offset + 2))) getX] withDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(IOSObjectArray_Get(points, offset + 2))) getY]];
}


#line 338
- (void)setCurveWithHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)curve {
  [self setCurveWithDouble:[((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(curve)) getX1] withDouble:[curve getY1] withDouble:[curve getCtrlX] withDouble:[curve getCtrlY] withDouble:[curve getX2] withDouble:[curve getY2]];
}

- (jdouble)getFlatnessSq {
  return HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [self getCtrlX], [self getCtrlY]);
}

+ (jdouble)getFlatnessSqWithDouble:(jdouble)x1
                        withDouble:(jdouble)y1
                        withDouble:(jdouble)ctrlx
                        withDouble:(jdouble)ctrly
                        withDouble:(jdouble)x2
                        withDouble:(jdouble)y2 {
  return HarmonyJavaAwtGeomQuadCurve2D_getFlatnessSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, ctrlx, ctrly, x2, y2);
}


#line 350
+ (jdouble)getFlatnessSqWithDoubleArray:(IOSDoubleArray *)coords
                                withInt:(jint)offset {
  return HarmonyJavaAwtGeomQuadCurve2D_getFlatnessSqWithDoubleArray_withInt_(coords, offset);
}

- (jdouble)getFlatness {
  return HarmonyJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [self getCtrlX], [self getCtrlY]);
}

+ (jdouble)getFlatnessWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)ctrlx
                      withDouble:(jdouble)ctrly
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2 {
  return HarmonyJavaAwtGeomQuadCurve2D_getFlatnessWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, ctrlx, ctrly, x2, y2);
}


#line 363
+ (jdouble)getFlatnessWithDoubleArray:(IOSDoubleArray *)coords
                              withInt:(jint)offset {
  return HarmonyJavaAwtGeomQuadCurve2D_getFlatnessWithDoubleArray_withInt_(coords, offset);
}

- (void)subdivideWithHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)left
                 withHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)right {
  
#line 369
  HarmonyJavaAwtGeomQuadCurve2D_subdivideWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_(self, left, right);
}


#line 372
+ (void)subdivideWithHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)src
                 withHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)left
                 withHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)right {
  HarmonyJavaAwtGeomQuadCurve2D_subdivideWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_(src, left, right);
}


#line 393
+ (void)subdivideWithDoubleArray:(IOSDoubleArray *)src
                         withInt:(jint)srcoff
                 withDoubleArray:(IOSDoubleArray *)left
                         withInt:(jint)leftOff
                 withDoubleArray:(IOSDoubleArray *)right
                         withInt:(jint)rightOff {
  HarmonyJavaAwtGeomQuadCurve2D_subdivideWithDoubleArray_withInt_withDoubleArray_withInt_withDoubleArray_withInt_(src, srcoff, left, leftOff, right, rightOff);
}


#line 424
+ (jint)solveQuadraticWithDoubleArray:(IOSDoubleArray *)eqn {
  return HarmonyJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_(eqn);
}

+ (jint)solveQuadraticWithDoubleArray:(IOSDoubleArray *)eqn
                      withDoubleArray:(IOSDoubleArray *)res {
  return HarmonyJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, res);
}


#line 432
- (jboolean)containsWithDouble:(jdouble)px
                    withDouble:(jdouble)py {
  
#line 433
  return OrgApacheHarmonyAwtGlCrossing_isInsideEvenOddWithInt_(OrgApacheHarmonyAwtGlCrossing_crossShapeWithHarmonyJavaAwtShape_withDouble_withDouble_(self, px, py));
}


#line 436
- (jboolean)containsWithDouble:(jdouble)rx
                    withDouble:(jdouble)ry
                    withDouble:(jdouble)rw
                    withDouble:(jdouble)rh {
  
#line 437
  jint cross = OrgApacheHarmonyAwtGlCrossing_intersectShapeWithHarmonyJavaAwtShape_withDouble_withDouble_withDouble_withDouble_(self, rx, ry, rw, rh);
  return cross != OrgApacheHarmonyAwtGlCrossing_CROSSING && OrgApacheHarmonyAwtGlCrossing_isInsideEvenOddWithInt_(cross);
}


#line 441
- (jboolean)intersectsWithDouble:(jdouble)rx
                      withDouble:(jdouble)ry
                      withDouble:(jdouble)rw
                      withDouble:(jdouble)rh {
  
#line 442
  jint cross = OrgApacheHarmonyAwtGlCrossing_intersectShapeWithHarmonyJavaAwtShape_withDouble_withDouble_withDouble_withDouble_(self, rx, ry, rw, rh);
  return cross == OrgApacheHarmonyAwtGlCrossing_CROSSING || OrgApacheHarmonyAwtGlCrossing_isInsideEvenOddWithInt_(cross);
}


#line 446
- (jboolean)containsWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return [self containsWithDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX] withDouble:[p getY]];
}

- (jboolean)intersectsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r {
  return [self intersectsWithDouble:[((HarmonyJavaAwtGeomRectangle2D *) nil_chk(r)) getX] withDouble:[r getY] withDouble:[r getWidth] withDouble:[r getHeight]];
}

- (jboolean)containsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r {
  return [self containsWithDouble:[((HarmonyJavaAwtGeomRectangle2D *) nil_chk(r)) getX] withDouble:[r getY] withDouble:[r getWidth] withDouble:[r getHeight]];
}

- (HarmonyJavaAwtAWTRectangle *)getBounds {
  return [((HarmonyJavaAwtGeomRectangle2D *) nil_chk([self getBounds2D])) getBounds];
}

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t {
  return new_HarmonyJavaAwtGeomQuadCurve2D_Iterator_initWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomAffineTransform_(self, self, t);
}

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t
                                                                                withDouble:(jdouble)flatness {
  
#line 467
  return new_HarmonyJavaAwtGeomFlatteningPathIterator_initWithHarmonyJavaAwtGeomPathIterator_withDouble_([self getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:t], flatness);
}


#line 470
- (id)java_clone {
  
#line 472
  @try {
    return [super java_clone];
  }
  @catch (
#line 474
  JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangInternalError_init();
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 6, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 6, 3, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 7, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 7, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 12, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 18, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 18, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 20, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtAWTRectangle;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPathIterator;", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPathIterator;", 0x1, 21, 23, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 24, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getX1);
  methods[2].selector = @selector(getY1);
  methods[3].selector = @selector(getP1);
  methods[4].selector = @selector(getCtrlX);
  methods[5].selector = @selector(getCtrlY);
  methods[6].selector = @selector(getCtrlPt);
  methods[7].selector = @selector(getX2);
  methods[8].selector = @selector(getY2);
  methods[9].selector = @selector(getP2);
  methods[10].selector = @selector(setCurveWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[11].selector = @selector(setCurveWithHarmonyJavaAwtGeomPoint2D:withHarmonyJavaAwtGeomPoint2D:withHarmonyJavaAwtGeomPoint2D:);
  methods[12].selector = @selector(setCurveWithDoubleArray:withInt:);
  methods[13].selector = @selector(setCurveWithHarmonyJavaAwtGeomPoint2DArray:withInt:);
  methods[14].selector = @selector(setCurveWithHarmonyJavaAwtGeomQuadCurve2D:);
  methods[15].selector = @selector(getFlatnessSq);
  methods[16].selector = @selector(getFlatnessSqWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[17].selector = @selector(getFlatnessSqWithDoubleArray:withInt:);
  methods[18].selector = @selector(getFlatness);
  methods[19].selector = @selector(getFlatnessWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[20].selector = @selector(getFlatnessWithDoubleArray:withInt:);
  methods[21].selector = @selector(subdivideWithHarmonyJavaAwtGeomQuadCurve2D:withHarmonyJavaAwtGeomQuadCurve2D:);
  methods[22].selector = @selector(subdivideWithHarmonyJavaAwtGeomQuadCurve2D:withHarmonyJavaAwtGeomQuadCurve2D:withHarmonyJavaAwtGeomQuadCurve2D:);
  methods[23].selector = @selector(subdivideWithDoubleArray:withInt:withDoubleArray:withInt:withDoubleArray:withInt:);
  methods[24].selector = @selector(solveQuadraticWithDoubleArray:);
  methods[25].selector = @selector(solveQuadraticWithDoubleArray:withDoubleArray:);
  methods[26].selector = @selector(containsWithDouble:withDouble:);
  methods[27].selector = @selector(containsWithDouble:withDouble:withDouble:withDouble:);
  methods[28].selector = @selector(intersectsWithDouble:withDouble:withDouble:withDouble:);
  methods[29].selector = @selector(containsWithHarmonyJavaAwtGeomPoint2D:);
  methods[30].selector = @selector(intersectsWithHarmonyJavaAwtGeomRectangle2D:);
  methods[31].selector = @selector(containsWithHarmonyJavaAwtGeomRectangle2D:);
  methods[32].selector = @selector(getBounds);
  methods[33].selector = @selector(getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:);
  methods[34].selector = @selector(getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:withDouble:);
  methods[35].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setCurve", "DDDDDD", "LHarmonyJavaAwtGeomPoint2D;LHarmonyJavaAwtGeomPoint2D;LHarmonyJavaAwtGeomPoint2D;", "[DI", "[LHarmonyJavaAwtGeomPoint2D;I", "LHarmonyJavaAwtGeomQuadCurve2D;", "getFlatnessSq", "getFlatness", "subdivide", "LHarmonyJavaAwtGeomQuadCurve2D;LHarmonyJavaAwtGeomQuadCurve2D;", "LHarmonyJavaAwtGeomQuadCurve2D;LHarmonyJavaAwtGeomQuadCurve2D;LHarmonyJavaAwtGeomQuadCurve2D;", "[DI[DI[DI", "solveQuadratic", "[D", "[D[D", "contains", "DD", "DDDD", "intersects", "LHarmonyJavaAwtGeomPoint2D;", "LHarmonyJavaAwtGeomRectangle2D;", "getPathIterator", "LHarmonyJavaAwtGeomAffineTransform;", "LHarmonyJavaAwtGeomAffineTransform;D", "clone", "LHarmonyJavaAwtGeomQuadCurve2D_Float;LHarmonyJavaAwtGeomQuadCurve2D_Double;LHarmonyJavaAwtGeomQuadCurve2D_Iterator;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomQuadCurve2D = { "QuadCurve2D", "harmony.java.awt.geom", ptrTable, methods, NULL, 7, 0x401, 36, 0, -1, 25, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomQuadCurve2D;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 301
void HarmonyJavaAwtGeomQuadCurve2D_init(HarmonyJavaAwtGeomQuadCurve2D *self) {
  NSObject_init(self);
}


#line 346
jdouble HarmonyJavaAwtGeomQuadCurve2D_getFlatnessSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 347
  return HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, ctrlx, ctrly);
}


#line 350
jdouble HarmonyJavaAwtGeomQuadCurve2D_getFlatnessSqWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 351
  return HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(coords), offset + 0), IOSDoubleArray_Get(coords, offset + 1), IOSDoubleArray_Get(coords, offset + 4), IOSDoubleArray_Get(coords, offset + 5), IOSDoubleArray_Get(
#line 352
  coords, offset + 2), IOSDoubleArray_Get(coords, offset + 3));
}

jdouble HarmonyJavaAwtGeomQuadCurve2D_getFlatnessWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 360
  return HarmonyJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, ctrlx, ctrly);
}


#line 363
jdouble HarmonyJavaAwtGeomQuadCurve2D_getFlatnessWithDoubleArray_withInt_(IOSDoubleArray *coords, jint offset) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 364
  return HarmonyJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(IOSDoubleArray_Get(nil_chk(coords), offset + 0), IOSDoubleArray_Get(coords, offset + 1), IOSDoubleArray_Get(coords, offset + 4), IOSDoubleArray_Get(coords, offset + 5), IOSDoubleArray_Get(
#line 365
  coords, offset + 2), IOSDoubleArray_Get(coords, offset + 3));
}

void HarmonyJavaAwtGeomQuadCurve2D_subdivideWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_(HarmonyJavaAwtGeomQuadCurve2D *src, HarmonyJavaAwtGeomQuadCurve2D *left, HarmonyJavaAwtGeomQuadCurve2D *right) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 373
  jdouble x1 = [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(src)) getX1];
  jdouble y1 = [src getY1];
  jdouble cx = [src getCtrlX];
  jdouble cy = [src getCtrlY];
  jdouble x2 = [src getX2];
  jdouble y2 = [src getY2];
  jdouble cx1 = (x1 + cx) / 2.0;
  jdouble cy1 = (y1 + cy) / 2.0;
  jdouble cx2 = (x2 + cx) / 2.0;
  jdouble cy2 = (y2 + cy) / 2.0;
  cx = (cx1 + cx2) / 2.0;
  cy = (cy1 + cy2) / 2.0;
  if (left != nil) {
    [left setCurveWithDouble:x1 withDouble:y1 withDouble:cx1 withDouble:cy1 withDouble:cx withDouble:cy];
  }
  if (right != nil) {
    [right setCurveWithDouble:cx withDouble:cy withDouble:cx2 withDouble:cy2 withDouble:x2 withDouble:y2];
  }
}


#line 393
void HarmonyJavaAwtGeomQuadCurve2D_subdivideWithDoubleArray_withInt_withDoubleArray_withInt_withDoubleArray_withInt_(IOSDoubleArray *src, jint srcoff, IOSDoubleArray *left, jint leftOff, IOSDoubleArray *right, jint rightOff) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 394
  jdouble x1 = IOSDoubleArray_Get(nil_chk(src), srcoff + 0);
  jdouble y1 = IOSDoubleArray_Get(src, srcoff + 1);
  jdouble cx = IOSDoubleArray_Get(src, srcoff + 2);
  jdouble cy = IOSDoubleArray_Get(src, srcoff + 3);
  jdouble x2 = IOSDoubleArray_Get(src, srcoff + 4);
  jdouble y2 = IOSDoubleArray_Get(src, srcoff + 5);
  jdouble cx1 = (x1 + cx) / 2.0;
  jdouble cy1 = (y1 + cy) / 2.0;
  jdouble cx2 = (x2 + cx) / 2.0;
  jdouble cy2 = (y2 + cy) / 2.0;
  cx = (cx1 + cx2) / 2.0;
  cy = (cy1 + cy2) / 2.0;
  if (left != nil) {
    *IOSDoubleArray_GetRef(left, leftOff + 0) = x1;
    *IOSDoubleArray_GetRef(left, leftOff + 1) = y1;
    *IOSDoubleArray_GetRef(left, leftOff + 2) = cx1;
    *IOSDoubleArray_GetRef(left, leftOff + 3) = cy1;
    *IOSDoubleArray_GetRef(left, leftOff + 4) = cx;
    *IOSDoubleArray_GetRef(left, leftOff + 5) = cy;
  }
  if (right != nil) {
    *IOSDoubleArray_GetRef(right, rightOff + 0) = cx;
    *IOSDoubleArray_GetRef(right, rightOff + 1) = cy;
    *IOSDoubleArray_GetRef(right, rightOff + 2) = cx2;
    *IOSDoubleArray_GetRef(right, rightOff + 3) = cy2;
    *IOSDoubleArray_GetRef(right, rightOff + 4) = x2;
    *IOSDoubleArray_GetRef(right, rightOff + 5) = y2;
  }
}


#line 424
jint HarmonyJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_(IOSDoubleArray *eqn) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 425
  return HarmonyJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(eqn, eqn);
}


#line 428
jint HarmonyJavaAwtGeomQuadCurve2D_solveQuadraticWithDoubleArray_withDoubleArray_(IOSDoubleArray *eqn, IOSDoubleArray *res) {
  HarmonyJavaAwtGeomQuadCurve2D_initialize();
  
#line 429
  return OrgApacheHarmonyAwtGlCrossing_solveQuadWithDoubleArray_withDoubleArray_(eqn, res);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomQuadCurve2D)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/QuadCurve2D.java"


#line 32
@implementation HarmonyJavaAwtGeomQuadCurve2D_Float

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 41
- (instancetype)init {
  HarmonyJavaAwtGeomQuadCurve2D_Float_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 44
- (instancetype)initWithFloat:(jfloat)x1
                    withFloat:(jfloat)y1
                    withFloat:(jfloat)ctrlx
                    withFloat:(jfloat)ctrly
                    withFloat:(jfloat)x2
                    withFloat:(jfloat)y2 {
  HarmonyJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(self, x1, y1, ctrlx, ctrly, x2, y2);
  return self;
}


#line 48
- (jdouble)getX1 {
  
#line 50
  return x1_;
}


#line 53
- (jdouble)getY1 {
  
#line 55
  return y1_;
}


#line 58
- (jdouble)getCtrlX {
  
#line 60
  return ctrlx_;
}


#line 63
- (jdouble)getCtrlY {
  
#line 65
  return ctrly_;
}


#line 68
- (jdouble)getX2 {
  
#line 70
  return x2_;
}


#line 73
- (jdouble)getY2 {
  
#line 75
  return y2_;
}


#line 78
- (HarmonyJavaAwtGeomPoint2D *)getP1 {
  
#line 80
  return new_HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(x1_, y1_);
}


#line 83
- (HarmonyJavaAwtGeomPoint2D *)getCtrlPt {
  
#line 85
  return new_HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(ctrlx_, ctrly_);
}


#line 88
- (HarmonyJavaAwtGeomPoint2D *)getP2 {
  
#line 90
  return new_HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(x2_, y2_);
}


#line 93
- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2 {
  
#line 95
  self->x1_ = (jfloat) x1;
  self->y1_ = (jfloat) y1;
  self->ctrlx_ = (jfloat) ctrlx;
  self->ctrly_ = (jfloat) ctrly;
  self->x2_ = (jfloat) x2;
  self->y2_ = (jfloat) y2;
}


#line 103
- (void)setCurveWithFloat:(jfloat)x1
                withFloat:(jfloat)y1
                withFloat:(jfloat)ctrlx
                withFloat:(jfloat)ctrly
                withFloat:(jfloat)x2
                withFloat:(jfloat)y2 {
  
#line 104
  self->x1_ = x1;
  self->y1_ = y1;
  self->ctrlx_ = ctrlx;
  self->ctrly_ = ctrly;
  self->x2_ = x2;
  self->y2_ = y2;
}


#line 112
- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D {
  jfloat rx0 = JavaLangMath_minWithFloat_withFloat_(JavaLangMath_minWithFloat_withFloat_(x1_, x2_), ctrlx_);
  jfloat ry0 = JavaLangMath_minWithFloat_withFloat_(JavaLangMath_minWithFloat_withFloat_(y1_, y2_), ctrly_);
  jfloat rx1 = JavaLangMath_maxWithFloat_withFloat_(JavaLangMath_maxWithFloat_withFloat_(x1_, x2_), ctrlx_);
  jfloat ry1 = JavaLangMath_maxWithFloat_withFloat_(JavaLangMath_maxWithFloat_withFloat_(y1_, y2_), ctrly_);
  return new_HarmonyJavaAwtGeomRectangle2D_Float_initWithFloat_withFloat_withFloat_withFloat_(rx0, ry0, rx1 - rx0, ry1 - ry0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomRectangle2D;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:);
  methods[2].selector = @selector(getX1);
  methods[3].selector = @selector(getY1);
  methods[4].selector = @selector(getCtrlX);
  methods[5].selector = @selector(getCtrlY);
  methods[6].selector = @selector(getX2);
  methods[7].selector = @selector(getY2);
  methods[8].selector = @selector(getP1);
  methods[9].selector = @selector(getCtrlPt);
  methods[10].selector = @selector(getP2);
  methods[11].selector = @selector(setCurveWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[12].selector = @selector(setCurveWithFloat:withFloat:withFloat:withFloat:withFloat:withFloat:);
  methods[13].selector = @selector(getBounds2D);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y1_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "ctrlx_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "ctrly_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "x2_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y2_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "FFFFFF", "setCurve", "DDDDDD", "LHarmonyJavaAwtGeomQuadCurve2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomQuadCurve2D_Float = { "Float", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x9, 14, 6, 3, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomQuadCurve2D_Float;
}

@end


#line 41
void HarmonyJavaAwtGeomQuadCurve2D_Float_init(HarmonyJavaAwtGeomQuadCurve2D_Float *self) {
  HarmonyJavaAwtGeomQuadCurve2D_init(self);
}


#line 41
HarmonyJavaAwtGeomQuadCurve2D_Float *new_HarmonyJavaAwtGeomQuadCurve2D_Float_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Float, init)
}


#line 41
HarmonyJavaAwtGeomQuadCurve2D_Float *create_HarmonyJavaAwtGeomQuadCurve2D_Float_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Float, init)
}


#line 44
void HarmonyJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(HarmonyJavaAwtGeomQuadCurve2D_Float *self, jfloat x1, jfloat y1, jfloat ctrlx, jfloat ctrly, jfloat x2, jfloat y2) {
  HarmonyJavaAwtGeomQuadCurve2D_init(self);
  
#line 45
  [self setCurveWithFloat:x1 withFloat:y1 withFloat:ctrlx withFloat:ctrly withFloat:x2 withFloat:y2];
}


#line 44
HarmonyJavaAwtGeomQuadCurve2D_Float *new_HarmonyJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat ctrlx, jfloat ctrly, jfloat x2, jfloat y2) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Float, initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_, x1, y1, ctrlx, ctrly, x2, y2)
}


#line 44
HarmonyJavaAwtGeomQuadCurve2D_Float *create_HarmonyJavaAwtGeomQuadCurve2D_Float_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat ctrlx, jfloat ctrly, jfloat x2, jfloat y2) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Float, initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_, x1, y1, ctrlx, ctrly, x2, y2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomQuadCurve2D_Float)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/QuadCurve2D.java"


#line 121
@implementation HarmonyJavaAwtGeomQuadCurve2D_Double

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 130
- (instancetype)init {
  HarmonyJavaAwtGeomQuadCurve2D_Double_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 133
- (instancetype)initWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1
                    withDouble:(jdouble)ctrlx
                    withDouble:(jdouble)ctrly
                    withDouble:(jdouble)x2
                    withDouble:(jdouble)y2 {
  HarmonyJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(self, x1, y1, ctrlx, ctrly, x2, y2);
  return self;
}


#line 137
- (jdouble)getX1 {
  
#line 139
  return x1_;
}


#line 142
- (jdouble)getY1 {
  
#line 144
  return y1_;
}


#line 147
- (jdouble)getCtrlX {
  
#line 149
  return ctrlx_;
}


#line 152
- (jdouble)getCtrlY {
  
#line 154
  return ctrly_;
}


#line 157
- (jdouble)getX2 {
  
#line 159
  return x2_;
}


#line 162
- (jdouble)getY2 {
  
#line 164
  return y2_;
}


#line 167
- (HarmonyJavaAwtGeomPoint2D *)getP1 {
  
#line 169
  return new_HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(x1_, y1_);
}


#line 172
- (HarmonyJavaAwtGeomPoint2D *)getCtrlPt {
  
#line 174
  return new_HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(ctrlx_, ctrly_);
}


#line 177
- (HarmonyJavaAwtGeomPoint2D *)getP2 {
  
#line 179
  return new_HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(x2_, y2_);
}


#line 182
- (void)setCurveWithDouble:(jdouble)x1
                withDouble:(jdouble)y1
                withDouble:(jdouble)ctrlx
                withDouble:(jdouble)ctrly
                withDouble:(jdouble)x2
                withDouble:(jdouble)y2 {
  
#line 184
  self->x1_ = x1;
  self->y1_ = y1;
  self->ctrlx_ = ctrlx;
  self->ctrly_ = ctrly;
  self->x2_ = x2;
  self->y2_ = y2;
}


#line 192
- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D {
  jdouble rx0 = JavaLangMath_minWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(x1_, x2_), ctrlx_);
  jdouble ry0 = JavaLangMath_minWithDouble_withDouble_(JavaLangMath_minWithDouble_withDouble_(y1_, y2_), ctrly_);
  jdouble rx1 = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(x1_, x2_), ctrlx_);
  jdouble ry1 = JavaLangMath_maxWithDouble_withDouble_(JavaLangMath_maxWithDouble_withDouble_(y1_, y2_), ctrly_);
  return new_HarmonyJavaAwtGeomRectangle2D_Double_initWithDouble_withDouble_withDouble_withDouble_(rx0, ry0, rx1 - rx0, ry1 - ry0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomRectangle2D;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[2].selector = @selector(getX1);
  methods[3].selector = @selector(getY1);
  methods[4].selector = @selector(getCtrlX);
  methods[5].selector = @selector(getCtrlY);
  methods[6].selector = @selector(getX2);
  methods[7].selector = @selector(getY2);
  methods[8].selector = @selector(getP1);
  methods[9].selector = @selector(getCtrlPt);
  methods[10].selector = @selector(getP2);
  methods[11].selector = @selector(setCurveWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[12].selector = @selector(getBounds2D);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y1_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "ctrlx_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "ctrly_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "x2_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y2_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "DDDDDD", "setCurve", "LHarmonyJavaAwtGeomQuadCurve2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomQuadCurve2D_Double = { "Double", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x9, 13, 6, 2, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomQuadCurve2D_Double;
}

@end


#line 130
void HarmonyJavaAwtGeomQuadCurve2D_Double_init(HarmonyJavaAwtGeomQuadCurve2D_Double *self) {
  HarmonyJavaAwtGeomQuadCurve2D_init(self);
}


#line 130
HarmonyJavaAwtGeomQuadCurve2D_Double *new_HarmonyJavaAwtGeomQuadCurve2D_Double_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Double, init)
}


#line 130
HarmonyJavaAwtGeomQuadCurve2D_Double *create_HarmonyJavaAwtGeomQuadCurve2D_Double_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Double, init)
}


#line 133
void HarmonyJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(HarmonyJavaAwtGeomQuadCurve2D_Double *self, jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  HarmonyJavaAwtGeomQuadCurve2D_init(self);
  
#line 134
  [self setCurveWithDouble:x1 withDouble:y1 withDouble:ctrlx withDouble:ctrly withDouble:x2 withDouble:y2];
}


#line 133
HarmonyJavaAwtGeomQuadCurve2D_Double *new_HarmonyJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Double, initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_, x1, y1, ctrlx, ctrly, x2, y2)
}


#line 133
HarmonyJavaAwtGeomQuadCurve2D_Double *create_HarmonyJavaAwtGeomQuadCurve2D_Double_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble ctrlx, jdouble ctrly, jdouble x2, jdouble y2) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Double, initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_, x1, y1, ctrlx, ctrly, x2, y2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomQuadCurve2D_Double)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/QuadCurve2D.java"


#line 204
@implementation HarmonyJavaAwtGeomQuadCurve2D_Iterator


#line 230
- (instancetype)initWithHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)outer$
                    withHarmonyJavaAwtGeomQuadCurve2D:(HarmonyJavaAwtGeomQuadCurve2D *)q
                withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t {
  HarmonyJavaAwtGeomQuadCurve2D_Iterator_initWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomAffineTransform_(self, outer$, q, t);
  return self;
}


#line 235
- (jint)getWindingRule {
  return HarmonyJavaAwtGeomPathIterator_WIND_NON_ZERO;
}

- (jboolean)isDone {
  return (index_ > 1);
}

- (void)next {
  index_++;
}

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords {
  if ([self isDone]) {
    
#line 250
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.4B"));
  }
  jint type;
  jint count;
  if (index_ == 0) {
    type = HarmonyJavaAwtGeomPathIterator_SEG_MOVETO;
    *IOSDoubleArray_GetRef(nil_chk(coords), 0) = [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getX1];
    *IOSDoubleArray_GetRef(coords, 1) = [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getY1];
    count = 1;
  }
  else {
    
#line 260
    type = HarmonyJavaAwtGeomPathIterator_SEG_QUADTO;
    *IOSDoubleArray_GetRef(nil_chk(coords), 0) = [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getCtrlX];
    *IOSDoubleArray_GetRef(coords, 1) = [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getCtrlY];
    *IOSDoubleArray_GetRef(coords, 2) = [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getX2];
    *IOSDoubleArray_GetRef(coords, 3) = [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getY2];
    count = 2;
  }
  if (t_ != nil) {
    [t_ transformWithDoubleArray:coords withInt:0 withDoubleArray:coords withInt:0 withInt:count];
  }
  return type;
}


#line 273
- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords {
  if ([self isDone]) {
    
#line 276
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.4B"));
  }
  jint type;
  jint count;
  if (index_ == 0) {
    type = HarmonyJavaAwtGeomPathIterator_SEG_MOVETO;
    *IOSFloatArray_GetRef(nil_chk(coords), 0) = (jfloat) [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getX1];
    *IOSFloatArray_GetRef(coords, 1) = (jfloat) [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getY1];
    count = 1;
  }
  else {
    
#line 286
    type = HarmonyJavaAwtGeomPathIterator_SEG_QUADTO;
    *IOSFloatArray_GetRef(nil_chk(coords), 0) = (jfloat) [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getCtrlX];
    *IOSFloatArray_GetRef(coords, 1) = (jfloat) [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getCtrlY];
    *IOSFloatArray_GetRef(coords, 2) = (jfloat) [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getX2];
    *IOSFloatArray_GetRef(coords, 3) = (jfloat) [((HarmonyJavaAwtGeomQuadCurve2D *) nil_chk(c_)) getY2];
    count = 2;
  }
  if (t_ != nil) {
    [t_ transformWithFloatArray:coords withInt:0 withFloatArray:coords withInt:0 withInt:count];
  }
  return type;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithHarmonyJavaAwtGeomQuadCurve2D:withHarmonyJavaAwtGeomQuadCurve2D:withHarmonyJavaAwtGeomAffineTransform:);
  methods[1].selector = @selector(getWindingRule);
  methods[2].selector = @selector(isDone);
  methods[3].selector = @selector(next);
  methods[4].selector = @selector(currentSegmentWithDoubleArray:);
  methods[5].selector = @selector(currentSegmentWithFloatArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "LHarmonyJavaAwtGeomQuadCurve2D;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "t_", "LHarmonyJavaAwtGeomAffineTransform;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LHarmonyJavaAwtGeomQuadCurve2D;LHarmonyJavaAwtGeomQuadCurve2D;LHarmonyJavaAwtGeomAffineTransform;", "currentSegment", "[D", "[F", "LHarmonyJavaAwtGeomQuadCurve2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomQuadCurve2D_Iterator = { "Iterator", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x0, 6, 3, 4, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomQuadCurve2D_Iterator;
}

@end


#line 230
void HarmonyJavaAwtGeomQuadCurve2D_Iterator_initWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomQuadCurve2D_Iterator *self, HarmonyJavaAwtGeomQuadCurve2D *outer$, HarmonyJavaAwtGeomQuadCurve2D *q, HarmonyJavaAwtGeomAffineTransform *t) {
  NSObject_init(self);
  
#line 231
  self->c_ = q;
  self->t_ = t;
}


#line 230
HarmonyJavaAwtGeomQuadCurve2D_Iterator *new_HarmonyJavaAwtGeomQuadCurve2D_Iterator_initWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomQuadCurve2D *outer$, HarmonyJavaAwtGeomQuadCurve2D *q, HarmonyJavaAwtGeomAffineTransform *t) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Iterator, initWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomAffineTransform_, outer$, q, t)
}


#line 230
HarmonyJavaAwtGeomQuadCurve2D_Iterator *create_HarmonyJavaAwtGeomQuadCurve2D_Iterator_initWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomQuadCurve2D *outer$, HarmonyJavaAwtGeomQuadCurve2D *q, HarmonyJavaAwtGeomAffineTransform *t) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomQuadCurve2D_Iterator, initWithHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomQuadCurve2D_withHarmonyJavaAwtGeomAffineTransform_, outer$, q, t)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomQuadCurve2D_Iterator)

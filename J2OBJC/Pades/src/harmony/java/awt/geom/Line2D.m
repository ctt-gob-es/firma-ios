//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Line2D.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "harmony/java/awt/AWTRectangle.h"
#include "harmony/java/awt/geom/AffineTransform.h"
#include "harmony/java/awt/geom/Line2D.h"
#include "harmony/java/awt/geom/PathIterator.h"
#include "harmony/java/awt/geom/Point2D.h"
#include "harmony/java/awt/geom/Rectangle2D.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/InternalError.h"
#include "java/lang/Math.h"
#include "java/util/NoSuchElementException.h"
#include "org/apache/harmony/awt/internal/nls/Messages.h"

#if !__has_feature(objc_arc)
#error "harmony/java/awt/geom/Line2D must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Line2D.java"


#line 29
@implementation HarmonyJavaAwtGeomLine2D

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 297
- (instancetype)init {
  HarmonyJavaAwtGeomLine2D_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 300
- (jdouble)getX1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 302
- (jdouble)getY1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 304
- (jdouble)getX2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 306
- (jdouble)getY2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 308
- (HarmonyJavaAwtGeomPoint2D *)getP1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 310
- (HarmonyJavaAwtGeomPoint2D *)getP2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 312
- (void)setLineWithDouble:(jdouble)x1
               withDouble:(jdouble)y1
               withDouble:(jdouble)x2
               withDouble:(jdouble)y2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 314
- (void)setLineWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p1
               withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p2 {
  
#line 315
  [self setLineWithDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(p1)) getX] withDouble:[p1 getY] withDouble:[((HarmonyJavaAwtGeomPoint2D *) nil_chk(p2)) getX] withDouble:[p2 getY]];
}


#line 318
- (void)setLineWithHarmonyJavaAwtGeomLine2D:(HarmonyJavaAwtGeomLine2D *)line {
  [self setLineWithDouble:[((HarmonyJavaAwtGeomLine2D *) nil_chk(line)) getX1] withDouble:[line getY1] withDouble:[line getX2] withDouble:[line getY2]];
}

- (HarmonyJavaAwtAWTRectangle *)getBounds {
  return [((HarmonyJavaAwtGeomRectangle2D *) nil_chk([self getBounds2D])) getBounds];
}

+ (jint)relativeCCWWithDouble:(jdouble)x1
                   withDouble:(jdouble)y1
                   withDouble:(jdouble)x2
                   withDouble:(jdouble)y2
                   withDouble:(jdouble)px
                   withDouble:(jdouble)py {
  return HarmonyJavaAwtGeomLine2D_relativeCCWWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, px, py);
}


#line 350
- (jint)relativeCCWWithDouble:(jdouble)px
                   withDouble:(jdouble)py {
  
#line 351
  return HarmonyJavaAwtGeomLine2D_relativeCCWWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], px, py);
}


#line 354
- (jint)relativeCCWWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return HarmonyJavaAwtGeomLine2D_relativeCCWWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX], [p getY]);
}

+ (jboolean)linesIntersectWithDouble:(jdouble)x1
                          withDouble:(jdouble)y1
                          withDouble:(jdouble)x2
                          withDouble:(jdouble)y2
                          withDouble:(jdouble)x3
                          withDouble:(jdouble)y3
                          withDouble:(jdouble)x4
                          withDouble:(jdouble)y4 {
  return HarmonyJavaAwtGeomLine2D_linesIntersectWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, x3, y3, x4, y4);
}


#line 398
- (jboolean)intersectsLineWithDouble:(jdouble)x1
                          withDouble:(jdouble)y1
                          withDouble:(jdouble)x2
                          withDouble:(jdouble)y2 {
  
#line 399
  return HarmonyJavaAwtGeomLine2D_linesIntersectWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, [self getX1], [self getY1], [self getX2], [self getY2]);
}


#line 402
- (jboolean)intersectsLineWithHarmonyJavaAwtGeomLine2D:(HarmonyJavaAwtGeomLine2D *)l {
  return HarmonyJavaAwtGeomLine2D_linesIntersectWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([((HarmonyJavaAwtGeomLine2D *) nil_chk(l)) getX1], [l getY1], [l getX2], [l getY2], [self getX1], [self getY1], [self getX2], [self getY2]);
}

+ (jdouble)ptSegDistSqWithDouble:(jdouble)x1
                      withDouble:(jdouble)y1
                      withDouble:(jdouble)x2
                      withDouble:(jdouble)y2
                      withDouble:(jdouble)px
                      withDouble:(jdouble)py {
  return HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, px, py);
}


#line 433
+ (jdouble)ptSegDistWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1
                    withDouble:(jdouble)x2
                    withDouble:(jdouble)y2
                    withDouble:(jdouble)px
                    withDouble:(jdouble)py {
  return HarmonyJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, px, py);
}


#line 437
- (jdouble)ptSegDistSqWithDouble:(jdouble)px
                      withDouble:(jdouble)py {
  
#line 438
  return HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], px, py);
}


#line 441
- (jdouble)ptSegDistSqWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX], [p getY]);
}

- (jdouble)ptSegDistWithDouble:(jdouble)px
                    withDouble:(jdouble)py {
  
#line 446
  return HarmonyJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], px, py);
}


#line 449
- (jdouble)ptSegDistWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return HarmonyJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX], [p getY]);
}

+ (jdouble)ptLineDistSqWithDouble:(jdouble)x1
                       withDouble:(jdouble)y1
                       withDouble:(jdouble)x2
                       withDouble:(jdouble)y2
                       withDouble:(jdouble)px
                       withDouble:(jdouble)py {
  return HarmonyJavaAwtGeomLine2D_ptLineDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, px, py);
}

+ (jdouble)ptLineDistWithDouble:(jdouble)x1
                     withDouble:(jdouble)y1
                     withDouble:(jdouble)x2
                     withDouble:(jdouble)y2
                     withDouble:(jdouble)px
                     withDouble:(jdouble)py {
  return HarmonyJavaAwtGeomLine2D_ptLineDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, px, py);
}


#line 466
- (jdouble)ptLineDistSqWithDouble:(jdouble)px
                       withDouble:(jdouble)py {
  
#line 467
  return HarmonyJavaAwtGeomLine2D_ptLineDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], px, py);
}


#line 470
- (jdouble)ptLineDistSqWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return HarmonyJavaAwtGeomLine2D_ptLineDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX], [p getY]);
}

- (jdouble)ptLineDistWithDouble:(jdouble)px
                     withDouble:(jdouble)py {
  
#line 475
  return HarmonyJavaAwtGeomLine2D_ptLineDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], px, py);
}


#line 478
- (jdouble)ptLineDistWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return HarmonyJavaAwtGeomLine2D_ptLineDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_([self getX1], [self getY1], [self getX2], [self getY2], [((HarmonyJavaAwtGeomPoint2D *) nil_chk(p)) getX], [p getY]);
}

- (jboolean)containsWithDouble:(jdouble)px
                    withDouble:(jdouble)py {
  
#line 483
  return false;
}


#line 486
- (jboolean)containsWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p {
  return false;
}

- (jboolean)containsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r {
  return false;
}

- (jboolean)containsWithDouble:(jdouble)rx
                    withDouble:(jdouble)ry
                    withDouble:(jdouble)rw
                    withDouble:(jdouble)rh {
  
#line 495
  return false;
}


#line 498
- (jboolean)intersectsWithDouble:(jdouble)rx
                      withDouble:(jdouble)ry
                      withDouble:(jdouble)rw
                      withDouble:(jdouble)rh {
  
#line 499
  return [self intersectsWithHarmonyJavaAwtGeomRectangle2D:new_HarmonyJavaAwtGeomRectangle2D_Double_initWithDouble_withDouble_withDouble_withDouble_(rx, ry, rw, rh)];
}


#line 502
- (jboolean)intersectsWithHarmonyJavaAwtGeomRectangle2D:(HarmonyJavaAwtGeomRectangle2D *)r {
  return [((HarmonyJavaAwtGeomRectangle2D *) nil_chk(r)) intersectsLineWithDouble:[self getX1] withDouble:[self getY1] withDouble:[self getX2] withDouble:[self getY2]];
}

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at {
  return new_HarmonyJavaAwtGeomLine2D_Iterator_initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_(self, self, at);
}

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at
                                                                                withDouble:(jdouble)flatness {
  
#line 511
  return new_HarmonyJavaAwtGeomLine2D_Iterator_initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_(self, self, at);
}


#line 514
- (id)java_clone {
  
#line 516
  @try {
    return [super java_clone];
  }
  @catch (
#line 518
  JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangInternalError_init();
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtAWTRectangle;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 3, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 11, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 12, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 11, 6, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 11, 7, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 12, 6, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 12, 7, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 13, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 14, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 13, 6, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 13, 7, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 14, 6, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 14, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 15, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 16, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPathIterator;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPathIterator;", 0x1, 18, 20, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 21, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getX1);
  methods[2].selector = @selector(getY1);
  methods[3].selector = @selector(getX2);
  methods[4].selector = @selector(getY2);
  methods[5].selector = @selector(getP1);
  methods[6].selector = @selector(getP2);
  methods[7].selector = @selector(setLineWithDouble:withDouble:withDouble:withDouble:);
  methods[8].selector = @selector(setLineWithHarmonyJavaAwtGeomPoint2D:withHarmonyJavaAwtGeomPoint2D:);
  methods[9].selector = @selector(setLineWithHarmonyJavaAwtGeomLine2D:);
  methods[10].selector = @selector(getBounds);
  methods[11].selector = @selector(relativeCCWWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[12].selector = @selector(relativeCCWWithDouble:withDouble:);
  methods[13].selector = @selector(relativeCCWWithHarmonyJavaAwtGeomPoint2D:);
  methods[14].selector = @selector(linesIntersectWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[15].selector = @selector(intersectsLineWithDouble:withDouble:withDouble:withDouble:);
  methods[16].selector = @selector(intersectsLineWithHarmonyJavaAwtGeomLine2D:);
  methods[17].selector = @selector(ptSegDistSqWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[18].selector = @selector(ptSegDistWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[19].selector = @selector(ptSegDistSqWithDouble:withDouble:);
  methods[20].selector = @selector(ptSegDistSqWithHarmonyJavaAwtGeomPoint2D:);
  methods[21].selector = @selector(ptSegDistWithDouble:withDouble:);
  methods[22].selector = @selector(ptSegDistWithHarmonyJavaAwtGeomPoint2D:);
  methods[23].selector = @selector(ptLineDistSqWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[24].selector = @selector(ptLineDistWithDouble:withDouble:withDouble:withDouble:withDouble:withDouble:);
  methods[25].selector = @selector(ptLineDistSqWithDouble:withDouble:);
  methods[26].selector = @selector(ptLineDistSqWithHarmonyJavaAwtGeomPoint2D:);
  methods[27].selector = @selector(ptLineDistWithDouble:withDouble:);
  methods[28].selector = @selector(ptLineDistWithHarmonyJavaAwtGeomPoint2D:);
  methods[29].selector = @selector(containsWithDouble:withDouble:);
  methods[30].selector = @selector(containsWithHarmonyJavaAwtGeomPoint2D:);
  methods[31].selector = @selector(containsWithHarmonyJavaAwtGeomRectangle2D:);
  methods[32].selector = @selector(containsWithDouble:withDouble:withDouble:withDouble:);
  methods[33].selector = @selector(intersectsWithDouble:withDouble:withDouble:withDouble:);
  methods[34].selector = @selector(intersectsWithHarmonyJavaAwtGeomRectangle2D:);
  methods[35].selector = @selector(getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:);
  methods[36].selector = @selector(getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:withDouble:);
  methods[37].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setLine", "DDDD", "LHarmonyJavaAwtGeomPoint2D;LHarmonyJavaAwtGeomPoint2D;", "LHarmonyJavaAwtGeomLine2D;", "relativeCCW", "DDDDDD", "DD", "LHarmonyJavaAwtGeomPoint2D;", "linesIntersect", "DDDDDDDD", "intersectsLine", "ptSegDistSq", "ptSegDist", "ptLineDistSq", "ptLineDist", "contains", "LHarmonyJavaAwtGeomRectangle2D;", "intersects", "getPathIterator", "LHarmonyJavaAwtGeomAffineTransform;", "LHarmonyJavaAwtGeomAffineTransform;D", "clone", "LHarmonyJavaAwtGeomLine2D_Float;LHarmonyJavaAwtGeomLine2D_Double;LHarmonyJavaAwtGeomLine2D_Iterator;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomLine2D = { "Line2D", "harmony.java.awt.geom", ptrTable, methods, NULL, 7, 0x401, 38, 0, -1, 22, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomLine2D;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 297
void HarmonyJavaAwtGeomLine2D_init(HarmonyJavaAwtGeomLine2D *self) {
  NSObject_init(self);
}


#line 326
jint HarmonyJavaAwtGeomLine2D_relativeCCWWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble px, jdouble py) {
  HarmonyJavaAwtGeomLine2D_initialize();
  
#line 330
  JreMinusAssignDoubleD(&x2, x1);
  JreMinusAssignDoubleD(&y2, y1);
  JreMinusAssignDoubleD(&px, x1);
  JreMinusAssignDoubleD(&py, y1);
  jdouble t = px * y2 - py * x2;
  if (t == 0.0) {
    t = px * x2 + py * y2;
    if (t > 0.0) {
      JreMinusAssignDoubleD(&px, x2);
      JreMinusAssignDoubleD(&py, y2);
      t = px * x2 + py * y2;
      if (t < 0.0) {
        t = 0.0;
      }
    }
  }
  
#line 347
  return t < 0.0 ? -1 : (t > 0.0 ? 1 : 0);
}


#line 358
jboolean HarmonyJavaAwtGeomLine2D_linesIntersectWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble x3, jdouble y3, jdouble x4, jdouble y4) {
  HarmonyJavaAwtGeomLine2D_initialize();
  
#line 370
  JreMinusAssignDoubleD(&x2, x1);
  JreMinusAssignDoubleD(&y2, y1);
  JreMinusAssignDoubleD(&x3, x1);
  JreMinusAssignDoubleD(&y3, y1);
  JreMinusAssignDoubleD(&x4, x1);
  JreMinusAssignDoubleD(&y4, y1);
  
#line 377
  jdouble AvB = x2 * y3 - x3 * y2;
  jdouble AvC = x2 * y4 - x4 * y2;
  
#line 381
  if (AvB == 0.0 && AvC == 0.0) {
    if (x2 != 0.0) {
      return (x4 * x3 <= 0.0) ||
#line 384
      ((x3 * x2 >= 0.0) && (x2 > 0.0 ? x3 <= x2 || x4 <= x2 : x3 >= x2 || x4 >= x2));
    }
    if (y2 != 0.0) {
      return (y4 * y3 <= 0.0) ||
#line 388
      ((y3 * y2 >= 0.0) && (y2 > 0.0 ? y3 <= y2 || y4 <= y2 : y3 >= y2 || y4 >= y2));
    }
    return false;
  }
  
#line 393
  jdouble BvC = x3 * y4 - x4 * y3;
  
#line 395
  return (AvB * AvC <= 0.0) && (BvC * (AvB + BvC - AvC) <= 0.0);
}


#line 406
jdouble HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble px, jdouble py) {
  HarmonyJavaAwtGeomLine2D_initialize();
  
#line 410
  JreMinusAssignDoubleD(&x2, x1);
  JreMinusAssignDoubleD(&y2, y1);
  JreMinusAssignDoubleD(&px, x1);
  JreMinusAssignDoubleD(&py, y1);
  jdouble dist;
  if (px * x2 + py * y2 <= 0.0) {
    dist = px * px + py * py;
  }
  else {
    
#line 418
    px = x2 - px;
    py = y2 - py;
    if (px * x2 + py * y2 <= 0.0) {
      dist = px * px + py * py;
    }
    else {
      
#line 423
      dist = px * y2 - py * x2;
      dist = dist * dist / (x2 * x2 + y2 * y2);
    }
  }
  if (dist < 0) {
    dist = 0;
  }
  return dist;
}


#line 433
jdouble HarmonyJavaAwtGeomLine2D_ptSegDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble px, jdouble py) {
  HarmonyJavaAwtGeomLine2D_initialize();
  
#line 434
  return JavaLangMath_sqrtWithDouble_(HarmonyJavaAwtGeomLine2D_ptSegDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, px, py));
}


#line 453
jdouble HarmonyJavaAwtGeomLine2D_ptLineDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble px, jdouble py) {
  HarmonyJavaAwtGeomLine2D_initialize();
  
#line 454
  JreMinusAssignDoubleD(&x2, x1);
  JreMinusAssignDoubleD(&y2, y1);
  JreMinusAssignDoubleD(&px, x1);
  JreMinusAssignDoubleD(&py, y1);
  jdouble s = px * y2 - py * x2;
  return s * s / (x2 * x2 + y2 * y2);
}


#line 462
jdouble HarmonyJavaAwtGeomLine2D_ptLineDistWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2, jdouble px, jdouble py) {
  HarmonyJavaAwtGeomLine2D_initialize();
  
#line 463
  return JavaLangMath_sqrtWithDouble_(HarmonyJavaAwtGeomLine2D_ptLineDistSqWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(x1, y1, x2, y2, px, py));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomLine2D)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Line2D.java"


#line 31
@implementation HarmonyJavaAwtGeomLine2D_Float

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 38
- (instancetype)init {
  HarmonyJavaAwtGeomLine2D_Float_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 41
- (instancetype)initWithFloat:(jfloat)x1
                    withFloat:(jfloat)y1
                    withFloat:(jfloat)x2
                    withFloat:(jfloat)y2 {
  HarmonyJavaAwtGeomLine2D_Float_initWithFloat_withFloat_withFloat_withFloat_(self, x1, y1, x2, y2);
  return self;
}


#line 45
- (instancetype)initWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p1
                    withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p2 {
  HarmonyJavaAwtGeomLine2D_Float_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(self, p1, p2);
  return self;
}


#line 49
- (jdouble)getX1 {
  
#line 51
  return x1_;
}


#line 54
- (jdouble)getY1 {
  
#line 56
  return y1_;
}


#line 59
- (jdouble)getX2 {
  
#line 61
  return x2_;
}


#line 64
- (jdouble)getY2 {
  
#line 66
  return y2_;
}


#line 69
- (HarmonyJavaAwtGeomPoint2D *)getP1 {
  
#line 71
  return new_HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(x1_, y1_);
}


#line 74
- (HarmonyJavaAwtGeomPoint2D *)getP2 {
  
#line 76
  return new_HarmonyJavaAwtGeomPoint2D_Float_initWithFloat_withFloat_(x2_, y2_);
}


#line 79
- (void)setLineWithDouble:(jdouble)x1
               withDouble:(jdouble)y1
               withDouble:(jdouble)x2
               withDouble:(jdouble)y2 {
  
#line 81
  self->x1_ = (jfloat) x1;
  self->y1_ = (jfloat) y1;
  self->x2_ = (jfloat) x2;
  self->y2_ = (jfloat) y2;
}


#line 87
- (void)setLineWithFloat:(jfloat)x1
               withFloat:(jfloat)y1
               withFloat:(jfloat)x2
               withFloat:(jfloat)y2 {
  
#line 88
  self->x1_ = x1;
  self->y1_ = y1;
  self->x2_ = x2;
  self->y2_ = y2;
}


#line 94
- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D {
  jfloat rx;
  
#line 95
  jfloat ry;
  
#line 95
  jfloat rw;
  
#line 95
  jfloat rh;
  if (x1_ < x2_) {
    rx = x1_;
    rw = x2_ - x1_;
  }
  else {
    
#line 100
    rx = x2_;
    rw = x1_ - x2_;
  }
  if (y1_ < y2_) {
    ry = y1_;
    rh = y2_ - y1_;
  }
  else {
    
#line 107
    ry = y2_;
    rh = y1_ - y2_;
  }
  return new_HarmonyJavaAwtGeomRectangle2D_Float_initWithFloat_withFloat_withFloat_withFloat_(rx, ry, rw, rh);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomRectangle2D;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithFloat:withFloat:withFloat:withFloat:);
  methods[2].selector = @selector(initWithHarmonyJavaAwtGeomPoint2D:withHarmonyJavaAwtGeomPoint2D:);
  methods[3].selector = @selector(getX1);
  methods[4].selector = @selector(getY1);
  methods[5].selector = @selector(getX2);
  methods[6].selector = @selector(getY2);
  methods[7].selector = @selector(getP1);
  methods[8].selector = @selector(getP2);
  methods[9].selector = @selector(setLineWithDouble:withDouble:withDouble:withDouble:);
  methods[10].selector = @selector(setLineWithFloat:withFloat:withFloat:withFloat:);
  methods[11].selector = @selector(getBounds2D);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y1_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "x2_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y2_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "FFFF", "LHarmonyJavaAwtGeomPoint2D;LHarmonyJavaAwtGeomPoint2D;", "setLine", "DDDD", "LHarmonyJavaAwtGeomLine2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomLine2D_Float = { "Float", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x9, 12, 4, 4, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomLine2D_Float;
}

@end


#line 38
void HarmonyJavaAwtGeomLine2D_Float_init(HarmonyJavaAwtGeomLine2D_Float *self) {
  HarmonyJavaAwtGeomLine2D_init(self);
}


#line 38
HarmonyJavaAwtGeomLine2D_Float *new_HarmonyJavaAwtGeomLine2D_Float_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomLine2D_Float, init)
}


#line 38
HarmonyJavaAwtGeomLine2D_Float *create_HarmonyJavaAwtGeomLine2D_Float_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomLine2D_Float, init)
}


#line 41
void HarmonyJavaAwtGeomLine2D_Float_initWithFloat_withFloat_withFloat_withFloat_(HarmonyJavaAwtGeomLine2D_Float *self, jfloat x1, jfloat y1, jfloat x2, jfloat y2) {
  HarmonyJavaAwtGeomLine2D_init(self);
  
#line 42
  [self setLineWithFloat:x1 withFloat:y1 withFloat:x2 withFloat:y2];
}


#line 41
HarmonyJavaAwtGeomLine2D_Float *new_HarmonyJavaAwtGeomLine2D_Float_initWithFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat x2, jfloat y2) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomLine2D_Float, initWithFloat_withFloat_withFloat_withFloat_, x1, y1, x2, y2)
}


#line 41
HarmonyJavaAwtGeomLine2D_Float *create_HarmonyJavaAwtGeomLine2D_Float_initWithFloat_withFloat_withFloat_withFloat_(jfloat x1, jfloat y1, jfloat x2, jfloat y2) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomLine2D_Float, initWithFloat_withFloat_withFloat_withFloat_, x1, y1, x2, y2)
}

void HarmonyJavaAwtGeomLine2D_Float_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(HarmonyJavaAwtGeomLine2D_Float *self, HarmonyJavaAwtGeomPoint2D *p1, HarmonyJavaAwtGeomPoint2D *p2) {
  HarmonyJavaAwtGeomLine2D_init(self);
  
#line 46
  [self setLineWithHarmonyJavaAwtGeomPoint2D:p1 withHarmonyJavaAwtGeomPoint2D:p2];
}


#line 45
HarmonyJavaAwtGeomLine2D_Float *new_HarmonyJavaAwtGeomLine2D_Float_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(HarmonyJavaAwtGeomPoint2D *p1, HarmonyJavaAwtGeomPoint2D *p2) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomLine2D_Float, initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_, p1, p2)
}


#line 45
HarmonyJavaAwtGeomLine2D_Float *create_HarmonyJavaAwtGeomLine2D_Float_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(HarmonyJavaAwtGeomPoint2D *p1, HarmonyJavaAwtGeomPoint2D *p2) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomLine2D_Float, initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_, p1, p2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomLine2D_Float)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Line2D.java"


#line 114
@implementation HarmonyJavaAwtGeomLine2D_Double

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 121
- (instancetype)init {
  HarmonyJavaAwtGeomLine2D_Double_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 124
- (instancetype)initWithDouble:(jdouble)x1
                    withDouble:(jdouble)y1
                    withDouble:(jdouble)x2
                    withDouble:(jdouble)y2 {
  HarmonyJavaAwtGeomLine2D_Double_initWithDouble_withDouble_withDouble_withDouble_(self, x1, y1, x2, y2);
  return self;
}


#line 128
- (instancetype)initWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p1
                    withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)p2 {
  HarmonyJavaAwtGeomLine2D_Double_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(self, p1, p2);
  return self;
}


#line 132
- (jdouble)getX1 {
  
#line 134
  return x1_;
}


#line 137
- (jdouble)getY1 {
  
#line 139
  return y1_;
}


#line 142
- (jdouble)getX2 {
  
#line 144
  return x2_;
}


#line 147
- (jdouble)getY2 {
  
#line 149
  return y2_;
}


#line 152
- (HarmonyJavaAwtGeomPoint2D *)getP1 {
  
#line 154
  return new_HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(x1_, y1_);
}


#line 157
- (HarmonyJavaAwtGeomPoint2D *)getP2 {
  
#line 159
  return new_HarmonyJavaAwtGeomPoint2D_Double_initWithDouble_withDouble_(x2_, y2_);
}


#line 162
- (void)setLineWithDouble:(jdouble)x1
               withDouble:(jdouble)y1
               withDouble:(jdouble)x2
               withDouble:(jdouble)y2 {
  
#line 164
  self->x1_ = x1;
  self->y1_ = y1;
  self->x2_ = x2;
  self->y2_ = y2;
}


#line 170
- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D {
  jdouble rx;
  
#line 171
  jdouble ry;
  
#line 171
  jdouble rw;
  
#line 171
  jdouble rh;
  if (x1_ < x2_) {
    rx = x1_;
    rw = x2_ - x1_;
  }
  else {
    
#line 176
    rx = x2_;
    rw = x1_ - x2_;
  }
  if (y1_ < y2_) {
    ry = y1_;
    rh = y2_ - y1_;
  }
  else {
    
#line 183
    ry = y2_;
    rh = y1_ - y2_;
  }
  return new_HarmonyJavaAwtGeomRectangle2D_Double_initWithDouble_withDouble_withDouble_withDouble_(rx, ry, rw, rh);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomPoint2D;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LHarmonyJavaAwtGeomRectangle2D;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithDouble:withDouble:withDouble:withDouble:);
  methods[2].selector = @selector(initWithHarmonyJavaAwtGeomPoint2D:withHarmonyJavaAwtGeomPoint2D:);
  methods[3].selector = @selector(getX1);
  methods[4].selector = @selector(getY1);
  methods[5].selector = @selector(getX2);
  methods[6].selector = @selector(getY2);
  methods[7].selector = @selector(getP1);
  methods[8].selector = @selector(getP2);
  methods[9].selector = @selector(setLineWithDouble:withDouble:withDouble:withDouble:);
  methods[10].selector = @selector(getBounds2D);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y1_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "x2_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "y2_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "DDDD", "LHarmonyJavaAwtGeomPoint2D;LHarmonyJavaAwtGeomPoint2D;", "setLine", "LHarmonyJavaAwtGeomLine2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomLine2D_Double = { "Double", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x9, 11, 4, 3, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomLine2D_Double;
}

@end


#line 121
void HarmonyJavaAwtGeomLine2D_Double_init(HarmonyJavaAwtGeomLine2D_Double *self) {
  HarmonyJavaAwtGeomLine2D_init(self);
}


#line 121
HarmonyJavaAwtGeomLine2D_Double *new_HarmonyJavaAwtGeomLine2D_Double_init() {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomLine2D_Double, init)
}


#line 121
HarmonyJavaAwtGeomLine2D_Double *create_HarmonyJavaAwtGeomLine2D_Double_init() {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomLine2D_Double, init)
}


#line 124
void HarmonyJavaAwtGeomLine2D_Double_initWithDouble_withDouble_withDouble_withDouble_(HarmonyJavaAwtGeomLine2D_Double *self, jdouble x1, jdouble y1, jdouble x2, jdouble y2) {
  HarmonyJavaAwtGeomLine2D_init(self);
  
#line 125
  [self setLineWithDouble:x1 withDouble:y1 withDouble:x2 withDouble:y2];
}


#line 124
HarmonyJavaAwtGeomLine2D_Double *new_HarmonyJavaAwtGeomLine2D_Double_initWithDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomLine2D_Double, initWithDouble_withDouble_withDouble_withDouble_, x1, y1, x2, y2)
}


#line 124
HarmonyJavaAwtGeomLine2D_Double *create_HarmonyJavaAwtGeomLine2D_Double_initWithDouble_withDouble_withDouble_withDouble_(jdouble x1, jdouble y1, jdouble x2, jdouble y2) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomLine2D_Double, initWithDouble_withDouble_withDouble_withDouble_, x1, y1, x2, y2)
}

void HarmonyJavaAwtGeomLine2D_Double_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(HarmonyJavaAwtGeomLine2D_Double *self, HarmonyJavaAwtGeomPoint2D *p1, HarmonyJavaAwtGeomPoint2D *p2) {
  HarmonyJavaAwtGeomLine2D_init(self);
  
#line 129
  [self setLineWithHarmonyJavaAwtGeomPoint2D:p1 withHarmonyJavaAwtGeomPoint2D:p2];
}


#line 128
HarmonyJavaAwtGeomLine2D_Double *new_HarmonyJavaAwtGeomLine2D_Double_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(HarmonyJavaAwtGeomPoint2D *p1, HarmonyJavaAwtGeomPoint2D *p2) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomLine2D_Double, initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_, p1, p2)
}


#line 128
HarmonyJavaAwtGeomLine2D_Double *create_HarmonyJavaAwtGeomLine2D_Double_initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_(HarmonyJavaAwtGeomPoint2D *p1, HarmonyJavaAwtGeomPoint2D *p2) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomLine2D_Double, initWithHarmonyJavaAwtGeomPoint2D_withHarmonyJavaAwtGeomPoint2D_, p1, p2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomLine2D_Double)

#line 1 "/Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Line2D.java"


#line 193
@implementation HarmonyJavaAwtGeomLine2D_Iterator


#line 233
- (instancetype)initWithHarmonyJavaAwtGeomLine2D:(HarmonyJavaAwtGeomLine2D *)outer$
                    withHarmonyJavaAwtGeomLine2D:(HarmonyJavaAwtGeomLine2D *)l
           withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at {
  HarmonyJavaAwtGeomLine2D_Iterator_initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_(self, outer$, l, at);
  return self;
}


#line 241
- (jint)getWindingRule {
  return HarmonyJavaAwtGeomPathIterator_WIND_NON_ZERO;
}

- (jboolean)isDone {
  return index_ > 1;
}

- (void)next {
  index_++;
}

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords {
  if ([self isDone]) {
    
#line 256
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.4B"));
  }
  jint type;
  if (index_ == 0) {
    type = HarmonyJavaAwtGeomPathIterator_SEG_MOVETO;
    *IOSDoubleArray_GetRef(nil_chk(coords), 0) = x1_;
    *IOSDoubleArray_GetRef(coords, 1) = y1_;
  }
  else {
    
#line 264
    type = HarmonyJavaAwtGeomPathIterator_SEG_LINETO;
    *IOSDoubleArray_GetRef(nil_chk(coords), 0) = x2_;
    *IOSDoubleArray_GetRef(coords, 1) = y2_;
  }
  if (t_ != nil) {
    [t_ transformWithDoubleArray:coords withInt:0 withDoubleArray:coords withInt:0 withInt:1];
  }
  return type;
}


#line 274
- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords {
  if ([self isDone]) {
    
#line 277
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(OrgApacheHarmonyAwtInternalNlsMessages_getStringWithNSString_(@"awt.4B"));
  }
  jint type;
  if (index_ == 0) {
    type = HarmonyJavaAwtGeomPathIterator_SEG_MOVETO;
    *IOSFloatArray_GetRef(nil_chk(coords), 0) = (jfloat) x1_;
    *IOSFloatArray_GetRef(coords, 1) = (jfloat) y1_;
  }
  else {
    
#line 285
    type = HarmonyJavaAwtGeomPathIterator_SEG_LINETO;
    *IOSFloatArray_GetRef(nil_chk(coords), 0) = (jfloat) x2_;
    *IOSFloatArray_GetRef(coords, 1) = (jfloat) y2_;
  }
  if (t_ != nil) {
    [t_ transformWithFloatArray:coords withInt:0 withFloatArray:coords withInt:0 withInt:1];
  }
  return type;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithHarmonyJavaAwtGeomLine2D:withHarmonyJavaAwtGeomLine2D:withHarmonyJavaAwtGeomAffineTransform:);
  methods[1].selector = @selector(getWindingRule);
  methods[2].selector = @selector(isDone);
  methods[3].selector = @selector(next);
  methods[4].selector = @selector(currentSegmentWithDoubleArray:);
  methods[5].selector = @selector(currentSegmentWithFloatArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x1_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "y1_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "x2_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "y2_", "D", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "t_", "LHarmonyJavaAwtGeomAffineTransform;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LHarmonyJavaAwtGeomLine2D;LHarmonyJavaAwtGeomLine2D;LHarmonyJavaAwtGeomAffineTransform;", "currentSegment", "[D", "[F", "LHarmonyJavaAwtGeomLine2D;" };
  static const J2ObjcClassInfo _HarmonyJavaAwtGeomLine2D_Iterator = { "Iterator", "harmony.java.awt.geom", ptrTable, methods, fields, 7, 0x0, 6, 6, 4, -1, -1, -1, -1 };
  return &_HarmonyJavaAwtGeomLine2D_Iterator;
}

@end


#line 233
void HarmonyJavaAwtGeomLine2D_Iterator_initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomLine2D_Iterator *self, HarmonyJavaAwtGeomLine2D *outer$, HarmonyJavaAwtGeomLine2D *l, HarmonyJavaAwtGeomAffineTransform *at) {
  NSObject_init(self);
  
#line 234
  self->x1_ = [((HarmonyJavaAwtGeomLine2D *) nil_chk(l)) getX1];
  self->y1_ = [l getY1];
  self->x2_ = [l getX2];
  self->y2_ = [l getY2];
  self->t_ = at;
}


#line 233
HarmonyJavaAwtGeomLine2D_Iterator *new_HarmonyJavaAwtGeomLine2D_Iterator_initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomLine2D *outer$, HarmonyJavaAwtGeomLine2D *l, HarmonyJavaAwtGeomAffineTransform *at) {
  J2OBJC_NEW_IMPL(HarmonyJavaAwtGeomLine2D_Iterator, initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_, outer$, l, at)
}


#line 233
HarmonyJavaAwtGeomLine2D_Iterator *create_HarmonyJavaAwtGeomLine2D_Iterator_initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomLine2D *outer$, HarmonyJavaAwtGeomLine2D *l, HarmonyJavaAwtGeomAffineTransform *at) {
  J2OBJC_CREATE_IMPL(HarmonyJavaAwtGeomLine2D_Iterator, initWithHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomLine2D_withHarmonyJavaAwtGeomAffineTransform_, outer$, l, at)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(HarmonyJavaAwtGeomLine2D_Iterator)

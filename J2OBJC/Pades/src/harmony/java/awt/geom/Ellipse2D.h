//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/Ellipse2D.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D")
#ifdef RESTRICT_HarmonyJavaAwtGeomEllipse2D
#define INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D 0
#else
#define INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D 1
#endif
#undef RESTRICT_HarmonyJavaAwtGeomEllipse2D
#ifdef INCLUDE_HarmonyJavaAwtGeomEllipse2D_Double
#define INCLUDE_HarmonyJavaAwtGeomEllipse2D 1
#endif
#ifdef INCLUDE_HarmonyJavaAwtGeomEllipse2D_Float
#define INCLUDE_HarmonyJavaAwtGeomEllipse2D 1
#endif

#if !defined (HarmonyJavaAwtGeomEllipse2D_) && (INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D || defined(INCLUDE_HarmonyJavaAwtGeomEllipse2D))
#define HarmonyJavaAwtGeomEllipse2D_

#define RESTRICT_HarmonyJavaAwtGeomRectangularShape 1
#define INCLUDE_HarmonyJavaAwtGeomRectangularShape 1
#include "harmony/java/awt/geom/RectangularShape.h"

@class HarmonyJavaAwtGeomAffineTransform;
@protocol HarmonyJavaAwtGeomPathIterator;

@interface HarmonyJavaAwtGeomEllipse2D : HarmonyJavaAwtGeomRectangularShape

#pragma mark Public

- (jboolean)containsWithDouble:(jdouble)px
                    withDouble:(jdouble)py;

- (jboolean)containsWithDouble:(jdouble)rx
                    withDouble:(jdouble)ry
                    withDouble:(jdouble)rw
                    withDouble:(jdouble)rh;

- (id<HarmonyJavaAwtGeomPathIterator>)getPathIteratorWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)at;

- (jboolean)intersectsWithDouble:(jdouble)rx
                      withDouble:(jdouble)ry
                      withDouble:(jdouble)rw
                      withDouble:(jdouble)rh;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomEllipse2D)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomEllipse2D_init(HarmonyJavaAwtGeomEllipse2D *self);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomEllipse2D)

#endif

#if !defined (HarmonyJavaAwtGeomEllipse2D_Float_) && (INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D || defined(INCLUDE_HarmonyJavaAwtGeomEllipse2D_Float))
#define HarmonyJavaAwtGeomEllipse2D_Float_

@class HarmonyJavaAwtGeomRectangle2D;

@interface HarmonyJavaAwtGeomEllipse2D_Float : HarmonyJavaAwtGeomEllipse2D {
 @public
  jfloat x_;
  jfloat y_;
  jfloat width_;
  jfloat height_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithFloat:(jfloat)x
                    withFloat:(jfloat)y
                    withFloat:(jfloat)width
                    withFloat:(jfloat)height;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (jdouble)getHeight;

- (jdouble)getWidth;

- (jdouble)getX;

- (jdouble)getY;

- (jboolean)isEmpty;

- (void)setFrameWithDouble:(jdouble)x
                withDouble:(jdouble)y
                withDouble:(jdouble)width
                withDouble:(jdouble)height;

- (void)setFrameWithFloat:(jfloat)x
                withFloat:(jfloat)y
                withFloat:(jfloat)width
                withFloat:(jfloat)height;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomEllipse2D_Float)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomEllipse2D_Float_init(HarmonyJavaAwtGeomEllipse2D_Float *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Float *new_HarmonyJavaAwtGeomEllipse2D_Float_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Float *create_HarmonyJavaAwtGeomEllipse2D_Float_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomEllipse2D_Float_initWithFloat_withFloat_withFloat_withFloat_(HarmonyJavaAwtGeomEllipse2D_Float *self, jfloat x, jfloat y, jfloat width, jfloat height);

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Float *new_HarmonyJavaAwtGeomEllipse2D_Float_initWithFloat_withFloat_withFloat_withFloat_(jfloat x, jfloat y, jfloat width, jfloat height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Float *create_HarmonyJavaAwtGeomEllipse2D_Float_initWithFloat_withFloat_withFloat_withFloat_(jfloat x, jfloat y, jfloat width, jfloat height);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomEllipse2D_Float)

#endif

#if !defined (HarmonyJavaAwtGeomEllipse2D_Double_) && (INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D || defined(INCLUDE_HarmonyJavaAwtGeomEllipse2D_Double))
#define HarmonyJavaAwtGeomEllipse2D_Double_

@class HarmonyJavaAwtGeomRectangle2D;

@interface HarmonyJavaAwtGeomEllipse2D_Double : HarmonyJavaAwtGeomEllipse2D {
 @public
  jdouble x_;
  jdouble y_;
  jdouble width_;
  jdouble height_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)x
                    withDouble:(jdouble)y
                    withDouble:(jdouble)width
                    withDouble:(jdouble)height;

- (HarmonyJavaAwtGeomRectangle2D *)getBounds2D;

- (jdouble)getHeight;

- (jdouble)getWidth;

- (jdouble)getX;

- (jdouble)getY;

- (jboolean)isEmpty;

- (void)setFrameWithDouble:(jdouble)x
                withDouble:(jdouble)y
                withDouble:(jdouble)width
                withDouble:(jdouble)height;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomEllipse2D_Double)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomEllipse2D_Double_init(HarmonyJavaAwtGeomEllipse2D_Double *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Double *new_HarmonyJavaAwtGeomEllipse2D_Double_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Double *create_HarmonyJavaAwtGeomEllipse2D_Double_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomEllipse2D_Double_initWithDouble_withDouble_withDouble_withDouble_(HarmonyJavaAwtGeomEllipse2D_Double *self, jdouble x, jdouble y, jdouble width, jdouble height);

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Double *new_HarmonyJavaAwtGeomEllipse2D_Double_initWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble width, jdouble height) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Double *create_HarmonyJavaAwtGeomEllipse2D_Double_initWithDouble_withDouble_withDouble_withDouble_(jdouble x, jdouble y, jdouble width, jdouble height);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomEllipse2D_Double)

#endif

#if !defined (HarmonyJavaAwtGeomEllipse2D_Iterator_) && (INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D || defined(INCLUDE_HarmonyJavaAwtGeomEllipse2D_Iterator))
#define HarmonyJavaAwtGeomEllipse2D_Iterator_

#define RESTRICT_HarmonyJavaAwtGeomPathIterator 1
#define INCLUDE_HarmonyJavaAwtGeomPathIterator 1
#include "harmony/java/awt/geom/PathIterator.h"

@class HarmonyJavaAwtGeomAffineTransform;
@class HarmonyJavaAwtGeomEllipse2D;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSObjectArray;

@interface HarmonyJavaAwtGeomEllipse2D_Iterator : NSObject < HarmonyJavaAwtGeomPathIterator > {
 @public
  /*!
   @brief The coefficient to calculate control points of Bezier curves
   */
  jdouble u_;
  /*!
   @brief The points coordinates calculation table.
   */
  IOSObjectArray *points_;
  /*!
   @brief The x coordinate of left-upper corner of the ellipse bounds
   */
  jdouble x_;
  /*!
   @brief The y coordinate of left-upper corner of the ellipse bounds
   */
  jdouble y_;
  /*!
   @brief The width of the ellipse bounds
   */
  jdouble width_;
  /*!
   @brief The height of the ellipse bounds
   */
  jdouble height_;
  /*!
   @brief The path iterator transformation
   */
  HarmonyJavaAwtGeomAffineTransform *t_;
  /*!
   @brief The current segmenet index
   */
  jint index_;
}

#pragma mark Public

- (jint)currentSegmentWithDoubleArray:(IOSDoubleArray *)coords;

- (jint)currentSegmentWithFloatArray:(IOSFloatArray *)coords;

- (jint)getWindingRule;

- (jboolean)isDone;

- (void)next;

#pragma mark Package-Private

/*!
 @brief Constructs a new Ellipse2D.Iterator for given ellipse and
  transformation
 @param e - the source Ellipse2D object
 @param at - the AffineTransform object to apply rectangle path
 */
- (instancetype)initWithHarmonyJavaAwtGeomEllipse2D:(HarmonyJavaAwtGeomEllipse2D *)outer$
                    withHarmonyJavaAwtGeomEllipse2D:(HarmonyJavaAwtGeomEllipse2D *)e
              withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomEllipse2D_Iterator)

J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomEllipse2D_Iterator, points_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(HarmonyJavaAwtGeomEllipse2D_Iterator, t_, HarmonyJavaAwtGeomAffineTransform *)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomEllipse2D_Iterator_initWithHarmonyJavaAwtGeomEllipse2D_withHarmonyJavaAwtGeomEllipse2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomEllipse2D_Iterator *self, HarmonyJavaAwtGeomEllipse2D *outer$, HarmonyJavaAwtGeomEllipse2D *e, HarmonyJavaAwtGeomAffineTransform *t);

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Iterator *new_HarmonyJavaAwtGeomEllipse2D_Iterator_initWithHarmonyJavaAwtGeomEllipse2D_withHarmonyJavaAwtGeomEllipse2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomEllipse2D *outer$, HarmonyJavaAwtGeomEllipse2D *e, HarmonyJavaAwtGeomAffineTransform *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomEllipse2D_Iterator *create_HarmonyJavaAwtGeomEllipse2D_Iterator_initWithHarmonyJavaAwtGeomEllipse2D_withHarmonyJavaAwtGeomEllipse2D_withHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomEllipse2D *outer$, HarmonyJavaAwtGeomEllipse2D *e, HarmonyJavaAwtGeomAffineTransform *t);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomEllipse2D_Iterator)

#endif

#pragma pop_macro("INCLUDE_ALL_HarmonyJavaAwtGeomEllipse2D")

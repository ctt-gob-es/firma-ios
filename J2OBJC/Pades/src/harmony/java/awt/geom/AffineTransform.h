//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Documents/JAVA/pades-ios/src/main/java/harmony/java/awt/geom/AffineTransform.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_HarmonyJavaAwtGeomAffineTransform")
#ifdef RESTRICT_HarmonyJavaAwtGeomAffineTransform
#define INCLUDE_ALL_HarmonyJavaAwtGeomAffineTransform 0
#else
#define INCLUDE_ALL_HarmonyJavaAwtGeomAffineTransform 1
#endif
#undef RESTRICT_HarmonyJavaAwtGeomAffineTransform

#if !defined (HarmonyJavaAwtGeomAffineTransform_) && (INCLUDE_ALL_HarmonyJavaAwtGeomAffineTransform || defined(INCLUDE_HarmonyJavaAwtGeomAffineTransform))
#define HarmonyJavaAwtGeomAffineTransform_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class HarmonyJavaAwtGeomPoint2D;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSObjectArray;
@protocol HarmonyJavaAwtShape;

@interface HarmonyJavaAwtGeomAffineTransform : NSObject < NSCopying, JavaIoSerializable > {
 @public
  /*!
   @brief The values of transformation matrix
   */
  jdouble m00_;
  jdouble m10_;
  jdouble m01_;
  jdouble m11_;
  jdouble m02_;
  jdouble m12_;
  /*!
   @brief The transformation <code>type</code>
   */
  jint type_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (instancetype)initWithDouble:(jdouble)m00
                    withDouble:(jdouble)m10
                    withDouble:(jdouble)m01
                    withDouble:(jdouble)m11
                    withDouble:(jdouble)m02
                    withDouble:(jdouble)m12;

- (instancetype)initWithDoubleArray:(IOSDoubleArray *)matrix;

- (instancetype)initWithFloat:(jfloat)m00
                    withFloat:(jfloat)m10
                    withFloat:(jfloat)m01
                    withFloat:(jfloat)m11
                    withFloat:(jfloat)m02
                    withFloat:(jfloat)m12;

- (instancetype)initWithFloatArray:(IOSFloatArray *)matrix;

- (id)java_clone;

- (void)concatenateWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (HarmonyJavaAwtGeomAffineTransform *)createInverse;

- (id<HarmonyJavaAwtShape>)createTransformedShapeWithHarmonyJavaAwtShape:(id<HarmonyJavaAwtShape>)src;

- (void)deltaTransformWithDoubleArray:(IOSDoubleArray *)src
                              withInt:(jint)srcOff
                      withDoubleArray:(IOSDoubleArray *)dst
                              withInt:(jint)dstOff
                              withInt:(jint)length;

- (HarmonyJavaAwtGeomPoint2D *)deltaTransformWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)src
                                             withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)dst;

- (jboolean)isEqual:(id)obj;

- (jdouble)getDeterminant;

- (void)getMatrixWithDoubleArray:(IOSDoubleArray *)matrix;

+ (HarmonyJavaAwtGeomAffineTransform *)getRotateInstanceWithDouble:(jdouble)angle;

+ (HarmonyJavaAwtGeomAffineTransform *)getRotateInstanceWithDouble:(jdouble)angle
                                                        withDouble:(jdouble)x
                                                        withDouble:(jdouble)y;

+ (HarmonyJavaAwtGeomAffineTransform *)getScaleInstanceWithDouble:(jdouble)scx
                                                       withDouble:(jdouble)scY;

- (jdouble)getScaleX;

- (jdouble)getScaleY;

+ (HarmonyJavaAwtGeomAffineTransform *)getShearInstanceWithDouble:(jdouble)shx
                                                       withDouble:(jdouble)shy;

- (jdouble)getShearX;

- (jdouble)getShearY;

+ (HarmonyJavaAwtGeomAffineTransform *)getTranslateInstanceWithDouble:(jdouble)mx
                                                           withDouble:(jdouble)my;

- (jdouble)getTranslateX;

- (jdouble)getTranslateY;

- (jint)getType;

- (NSUInteger)hash;

- (void)inverseTransformWithDoubleArray:(IOSDoubleArray *)src
                                withInt:(jint)srcOff
                        withDoubleArray:(IOSDoubleArray *)dst
                                withInt:(jint)dstOff
                                withInt:(jint)length;

- (HarmonyJavaAwtGeomPoint2D *)inverseTransformWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)src
                                               withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)dst;

- (jboolean)isIdentity;

- (void)preConcatenateWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (void)rotateWithDouble:(jdouble)angle;

- (void)rotateWithDouble:(jdouble)angle
              withDouble:(jdouble)px
              withDouble:(jdouble)py;

- (void)scale__WithDouble:(jdouble)scx
               withDouble:(jdouble)scy;

- (void)setToIdentity;

- (void)setToRotationWithDouble:(jdouble)angle;

- (void)setToRotationWithDouble:(jdouble)angle
                     withDouble:(jdouble)px
                     withDouble:(jdouble)py;

- (void)setToScaleWithDouble:(jdouble)scx
                  withDouble:(jdouble)scy;

- (void)setToShearWithDouble:(jdouble)shx
                  withDouble:(jdouble)shy;

- (void)setToTranslationWithDouble:(jdouble)mx
                        withDouble:(jdouble)my;

- (void)setTransformWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t;

- (void)setTransformWithDouble:(jdouble)m00
                    withDouble:(jdouble)m10
                    withDouble:(jdouble)m01
                    withDouble:(jdouble)m11
                    withDouble:(jdouble)m02
                    withDouble:(jdouble)m12;

- (void)shearWithDouble:(jdouble)shx
             withDouble:(jdouble)shy;

- (NSString *)description;

- (void)transformWithDoubleArray:(IOSDoubleArray *)src
                         withInt:(jint)srcOff
                 withDoubleArray:(IOSDoubleArray *)dst
                         withInt:(jint)dstOff
                         withInt:(jint)length;

- (void)transformWithDoubleArray:(IOSDoubleArray *)src
                         withInt:(jint)srcOff
                  withFloatArray:(IOSFloatArray *)dst
                         withInt:(jint)dstOff
                         withInt:(jint)length;

- (void)transformWithFloatArray:(IOSFloatArray *)src
                        withInt:(jint)srcOff
                withDoubleArray:(IOSDoubleArray *)dst
                        withInt:(jint)dstOff
                        withInt:(jint)length;

- (void)transformWithFloatArray:(IOSFloatArray *)src
                        withInt:(jint)srcOff
                 withFloatArray:(IOSFloatArray *)dst
                        withInt:(jint)dstOff
                        withInt:(jint)length;

- (HarmonyJavaAwtGeomPoint2D *)transformWithHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)src
                                        withHarmonyJavaAwtGeomPoint2D:(HarmonyJavaAwtGeomPoint2D *)dst;

- (void)transformWithHarmonyJavaAwtGeomPoint2DArray:(IOSObjectArray *)src
                                            withInt:(jint)srcOff
                 withHarmonyJavaAwtGeomPoint2DArray:(IOSObjectArray *)dst
                                            withInt:(jint)dstOff
                                            withInt:(jint)length;

- (void)translateWithDouble:(jdouble)mx
                 withDouble:(jdouble)my;

#pragma mark Package-Private

/*!
 @brief Multiply matrix of two AffineTransform objects
 @param t1 - the AffineTransform object is a multiplicand
 @param t2 - the AffineTransform object is a multiplier
 @return an AffineTransform object that is a result of t1 multiplied by
          matrix t2.
 */
- (HarmonyJavaAwtGeomAffineTransform *)multiplyWithHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t1
                                               withHarmonyJavaAwtGeomAffineTransform:(HarmonyJavaAwtGeomAffineTransform *)t2;

@end

J2OBJC_EMPTY_STATIC_INIT(HarmonyJavaAwtGeomAffineTransform)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_IDENTITY(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_IDENTITY 0
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_IDENTITY, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_TRANSLATION(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_TRANSLATION 1
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_TRANSLATION, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_UNIFORM_SCALE(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_UNIFORM_SCALE 2
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_UNIFORM_SCALE, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_GENERAL_SCALE(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_GENERAL_SCALE 4
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_GENERAL_SCALE, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_QUADRANT_ROTATION(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_QUADRANT_ROTATION 8
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_QUADRANT_ROTATION, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_GENERAL_ROTATION(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_GENERAL_ROTATION 16
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_GENERAL_ROTATION, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_GENERAL_TRANSFORM(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_GENERAL_TRANSFORM 32
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_GENERAL_TRANSFORM, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_FLIP(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_FLIP 64
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_FLIP, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_MASK_SCALE(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_MASK_SCALE 6
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_MASK_SCALE, jint)

inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_MASK_ROTATION(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_MASK_ROTATION 24
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_MASK_ROTATION, jint)

/*!
 @brief The <code>TYPE_UNKNOWN</code> is an initial type value
 */
inline jint HarmonyJavaAwtGeomAffineTransform_get_TYPE_UNKNOWN(void);
#define HarmonyJavaAwtGeomAffineTransform_TYPE_UNKNOWN -1
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, TYPE_UNKNOWN, jint)

/*!
 @brief The min value equivalent to zero.If absolute value less then ZERO it
  considered as zero.
 */
inline jdouble HarmonyJavaAwtGeomAffineTransform_get_ZERO(void);
#define HarmonyJavaAwtGeomAffineTransform_ZERO 1.0E-10
J2OBJC_STATIC_FIELD_CONSTANT(HarmonyJavaAwtGeomAffineTransform, ZERO, jdouble)

FOUNDATION_EXPORT void HarmonyJavaAwtGeomAffineTransform_init(HarmonyJavaAwtGeomAffineTransform *self);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *new_HarmonyJavaAwtGeomAffineTransform_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *create_HarmonyJavaAwtGeomAffineTransform_init(void);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomAffineTransform_initWithHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomAffineTransform *self, HarmonyJavaAwtGeomAffineTransform *t);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *new_HarmonyJavaAwtGeomAffineTransform_initWithHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomAffineTransform *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *create_HarmonyJavaAwtGeomAffineTransform_initWithHarmonyJavaAwtGeomAffineTransform_(HarmonyJavaAwtGeomAffineTransform *t);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomAffineTransform_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(HarmonyJavaAwtGeomAffineTransform *self, jfloat m00, jfloat m10, jfloat m01, jfloat m11, jfloat m02, jfloat m12);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *new_HarmonyJavaAwtGeomAffineTransform_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat m00, jfloat m10, jfloat m01, jfloat m11, jfloat m02, jfloat m12) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *create_HarmonyJavaAwtGeomAffineTransform_initWithFloat_withFloat_withFloat_withFloat_withFloat_withFloat_(jfloat m00, jfloat m10, jfloat m01, jfloat m11, jfloat m02, jfloat m12);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomAffineTransform_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(HarmonyJavaAwtGeomAffineTransform *self, jdouble m00, jdouble m10, jdouble m01, jdouble m11, jdouble m02, jdouble m12);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *new_HarmonyJavaAwtGeomAffineTransform_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble m00, jdouble m10, jdouble m01, jdouble m11, jdouble m02, jdouble m12) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *create_HarmonyJavaAwtGeomAffineTransform_initWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(jdouble m00, jdouble m10, jdouble m01, jdouble m11, jdouble m02, jdouble m12);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomAffineTransform_initWithFloatArray_(HarmonyJavaAwtGeomAffineTransform *self, IOSFloatArray *matrix);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *new_HarmonyJavaAwtGeomAffineTransform_initWithFloatArray_(IOSFloatArray *matrix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *create_HarmonyJavaAwtGeomAffineTransform_initWithFloatArray_(IOSFloatArray *matrix);

FOUNDATION_EXPORT void HarmonyJavaAwtGeomAffineTransform_initWithDoubleArray_(HarmonyJavaAwtGeomAffineTransform *self, IOSDoubleArray *matrix);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *new_HarmonyJavaAwtGeomAffineTransform_initWithDoubleArray_(IOSDoubleArray *matrix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *create_HarmonyJavaAwtGeomAffineTransform_initWithDoubleArray_(IOSDoubleArray *matrix);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *HarmonyJavaAwtGeomAffineTransform_getTranslateInstanceWithDouble_withDouble_(jdouble mx, jdouble my);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *HarmonyJavaAwtGeomAffineTransform_getScaleInstanceWithDouble_withDouble_(jdouble scx, jdouble scY);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *HarmonyJavaAwtGeomAffineTransform_getShearInstanceWithDouble_withDouble_(jdouble shx, jdouble shy);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *HarmonyJavaAwtGeomAffineTransform_getRotateInstanceWithDouble_(jdouble angle);

FOUNDATION_EXPORT HarmonyJavaAwtGeomAffineTransform *HarmonyJavaAwtGeomAffineTransform_getRotateInstanceWithDouble_withDouble_withDouble_(jdouble angle, jdouble x, jdouble y);

J2OBJC_TYPE_LITERAL_HEADER(HarmonyJavaAwtGeomAffineTransform)

#endif

#pragma pop_macro("INCLUDE_ALL_HarmonyJavaAwtGeomAffineTransform")

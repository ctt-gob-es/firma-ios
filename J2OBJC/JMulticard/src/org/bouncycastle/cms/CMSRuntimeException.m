//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cms/CMSRuntimeException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "org/bouncycastle/cms/CMSRuntimeException.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cms/CMSRuntimeException must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cms/CMSRuntimeException.java"


#line 3
@implementation OrgBouncycastleCmsCMSRuntimeException


#line 8
- (instancetype)initWithNSString:(NSString *)name {
  OrgBouncycastleCmsCMSRuntimeException_initWithNSString_(self, name);
  return self;
}


#line 14
- (instancetype)initWithNSString:(NSString *)name
           withJavaLangException:(JavaLangException *)e {
  OrgBouncycastleCmsCMSRuntimeException_initWithNSString_withJavaLangException_(self, name, e);
  return self;
}


#line 23
- (JavaLangException *)getUnderlyingException {
  
#line 25
  return e_;
}


#line 28
- (JavaLangThrowable *)getCause {
  
#line 31
  return e_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangException;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withJavaLangException:);
  methods[2].selector = @selector(getUnderlyingException);
  methods[3].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "e_", "LJavaLangException;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangException;" };
  static const J2ObjcClassInfo _OrgBouncycastleCmsCMSRuntimeException = { "CMSRuntimeException", "org.bouncycastle.cms", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCmsCMSRuntimeException;
}

@end


#line 8
void OrgBouncycastleCmsCMSRuntimeException_initWithNSString_(OrgBouncycastleCmsCMSRuntimeException *self, NSString *name) {
  JavaLangRuntimeException_initWithNSString_(self,
#line 11
  name);
}


#line 8
OrgBouncycastleCmsCMSRuntimeException *new_OrgBouncycastleCmsCMSRuntimeException_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCmsCMSRuntimeException, initWithNSString_, name)
}


#line 8
OrgBouncycastleCmsCMSRuntimeException *create_OrgBouncycastleCmsCMSRuntimeException_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCmsCMSRuntimeException, initWithNSString_, name)
}


#line 14
void OrgBouncycastleCmsCMSRuntimeException_initWithNSString_withJavaLangException_(OrgBouncycastleCmsCMSRuntimeException *self, NSString *name, JavaLangException *e) {
  JavaLangRuntimeException_initWithNSString_(self,
#line 18
  name);
  
#line 20
  self->e_ = e;
}


#line 14
OrgBouncycastleCmsCMSRuntimeException *new_OrgBouncycastleCmsCMSRuntimeException_initWithNSString_withJavaLangException_(NSString *name, JavaLangException *e) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCmsCMSRuntimeException, initWithNSString_withJavaLangException_, name, e)
}


#line 14
OrgBouncycastleCmsCMSRuntimeException *create_OrgBouncycastleCmsCMSRuntimeException_initWithNSString_withJavaLangException_(NSString *name, JavaLangException *e) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCmsCMSRuntimeException, initWithNSString_withJavaLangException_, name, e)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCmsCMSRuntimeException)

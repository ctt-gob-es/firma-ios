//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cms/SignerInformationVerifier.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/cert/X509CertificateHolder.h"
#include "org/bouncycastle/cms/CMSSignatureAlgorithmNameGenerator.h"
#include "org/bouncycastle/cms/SignerInformationVerifier.h"
#include "org/bouncycastle/operator/ContentVerifier.h"
#include "org/bouncycastle/operator/ContentVerifierProvider.h"
#include "org/bouncycastle/operator/DigestCalculator.h"
#include "org/bouncycastle/operator/DigestCalculatorProvider.h"
#include "org/bouncycastle/operator/SignatureAlgorithmIdentifierFinder.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cms/SignerInformationVerifier must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCmsSignerInformationVerifier () {
 @public
  id<OrgBouncycastleOperatorContentVerifierProvider> verifierProvider_;
  id<OrgBouncycastleOperatorDigestCalculatorProvider> digestProvider_;
  id<OrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder> sigAlgorithmFinder_;
  id<OrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator> sigNameGenerator_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCmsSignerInformationVerifier, verifierProvider_, id<OrgBouncycastleOperatorContentVerifierProvider>)
J2OBJC_FIELD_SETTER(OrgBouncycastleCmsSignerInformationVerifier, digestProvider_, id<OrgBouncycastleOperatorDigestCalculatorProvider>)
J2OBJC_FIELD_SETTER(OrgBouncycastleCmsSignerInformationVerifier, sigAlgorithmFinder_, id<OrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder>)
J2OBJC_FIELD_SETTER(OrgBouncycastleCmsSignerInformationVerifier, sigNameGenerator_, id<OrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cms/SignerInformationVerifier.java"


#line 12
@implementation OrgBouncycastleCmsSignerInformationVerifier


#line 19
- (instancetype)initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator:(id<OrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator>)sigNameGenerator
               withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder:(id<OrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder>)sigAlgorithmFinder
                          withOrgBouncycastleOperatorContentVerifierProvider:(id<OrgBouncycastleOperatorContentVerifierProvider>)verifierProvider
                         withOrgBouncycastleOperatorDigestCalculatorProvider:(id<OrgBouncycastleOperatorDigestCalculatorProvider>)digestProvider {
  OrgBouncycastleCmsSignerInformationVerifier_initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator_withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder_withOrgBouncycastleOperatorContentVerifierProvider_withOrgBouncycastleOperatorDigestCalculatorProvider_(self, sigNameGenerator, sigAlgorithmFinder, verifierProvider, digestProvider);
  return self;
}

- (jboolean)hasAssociatedCertificate {
  
#line 29
  return [((id<OrgBouncycastleOperatorContentVerifierProvider>) nil_chk(verifierProvider_)) hasAssociatedCertificate];
}


#line 32
- (OrgBouncycastleCertX509CertificateHolder *)getAssociatedCertificate {
  
#line 34
  return [((id<OrgBouncycastleOperatorContentVerifierProvider>) nil_chk(verifierProvider_)) getAssociatedCertificate];
}


#line 37
- (id<OrgBouncycastleOperatorContentVerifier>)getContentVerifierWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)signingAlgorithm
                                                                withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)digestAlgorithm {
  
#line 40
  NSString *signatureName = [((id<OrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator>) nil_chk(sigNameGenerator_)) getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier:digestAlgorithm withOrgBouncycastleAsn1X509AlgorithmIdentifier:signingAlgorithm];
  OrgBouncycastleAsn1X509AlgorithmIdentifier *baseAlgID = [((id<OrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder>) nil_chk(sigAlgorithmFinder_)) findWithNSString:signatureName];
  
#line 43
  return [((id<OrgBouncycastleOperatorContentVerifierProvider>) nil_chk(verifierProvider_)) getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(baseAlgID)) getAlgorithm], [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(signingAlgorithm)) getParameters])];
}


#line 46
- (id<OrgBouncycastleOperatorDigestCalculator>)getDigestCalculatorWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithmIdentifier {
  
#line 49
  return [((id<OrgBouncycastleOperatorDigestCalculatorProvider>) nil_chk(digestProvider_)) getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithmIdentifier];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCertX509CertificateHolder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifier;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorDigestCalculator;", 0x1, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator:withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder:withOrgBouncycastleOperatorContentVerifierProvider:withOrgBouncycastleOperatorDigestCalculatorProvider:);
  methods[1].selector = @selector(hasAssociatedCertificate);
  methods[2].selector = @selector(getAssociatedCertificate);
  methods[3].selector = @selector(getContentVerifierWithOrgBouncycastleAsn1X509AlgorithmIdentifier:withOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[4].selector = @selector(getDigestCalculatorWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "verifierProvider_", "LOrgBouncycastleOperatorContentVerifierProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "digestProvider_", "LOrgBouncycastleOperatorDigestCalculatorProvider;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sigAlgorithmFinder_", "LOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sigNameGenerator_", "LOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator;LOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder;LOrgBouncycastleOperatorContentVerifierProvider;LOrgBouncycastleOperatorDigestCalculatorProvider;", "getContentVerifier", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;LOrgBouncycastleAsn1X509AlgorithmIdentifier;", "LOrgBouncycastleOperatorOperatorCreationException;", "getDigestCalculator", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;" };
  static const J2ObjcClassInfo _OrgBouncycastleCmsSignerInformationVerifier = { "SignerInformationVerifier", "org.bouncycastle.cms", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCmsSignerInformationVerifier;
}

@end


#line 19
void OrgBouncycastleCmsSignerInformationVerifier_initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator_withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder_withOrgBouncycastleOperatorContentVerifierProvider_withOrgBouncycastleOperatorDigestCalculatorProvider_(OrgBouncycastleCmsSignerInformationVerifier *self, id<OrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator> sigNameGenerator, id<OrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder> sigAlgorithmFinder, id<OrgBouncycastleOperatorContentVerifierProvider> verifierProvider, id<OrgBouncycastleOperatorDigestCalculatorProvider> digestProvider) {
  NSObject_init(self);
  self->sigNameGenerator_ = sigNameGenerator;
  self->sigAlgorithmFinder_ = sigAlgorithmFinder;
  self->verifierProvider_ = verifierProvider;
  self->digestProvider_ = digestProvider;
}


#line 19
OrgBouncycastleCmsSignerInformationVerifier *new_OrgBouncycastleCmsSignerInformationVerifier_initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator_withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder_withOrgBouncycastleOperatorContentVerifierProvider_withOrgBouncycastleOperatorDigestCalculatorProvider_(id<OrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator> sigNameGenerator, id<OrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder> sigAlgorithmFinder, id<OrgBouncycastleOperatorContentVerifierProvider> verifierProvider, id<OrgBouncycastleOperatorDigestCalculatorProvider> digestProvider) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCmsSignerInformationVerifier, initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator_withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder_withOrgBouncycastleOperatorContentVerifierProvider_withOrgBouncycastleOperatorDigestCalculatorProvider_, sigNameGenerator, sigAlgorithmFinder, verifierProvider, digestProvider)
}


#line 19
OrgBouncycastleCmsSignerInformationVerifier *create_OrgBouncycastleCmsSignerInformationVerifier_initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator_withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder_withOrgBouncycastleOperatorContentVerifierProvider_withOrgBouncycastleOperatorDigestCalculatorProvider_(id<OrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator> sigNameGenerator, id<OrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder> sigAlgorithmFinder, id<OrgBouncycastleOperatorContentVerifierProvider> verifierProvider, id<OrgBouncycastleOperatorDigestCalculatorProvider> digestProvider) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCmsSignerInformationVerifier, initWithOrgBouncycastleCmsCMSSignatureAlgorithmNameGenerator_withOrgBouncycastleOperatorSignatureAlgorithmIdentifierFinder_withOrgBouncycastleOperatorContentVerifierProvider_withOrgBouncycastleOperatorDigestCalculatorProvider_, sigNameGenerator, sigAlgorithmFinder, verifierProvider, digestProvider)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCmsSignerInformationVerifier)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cms/SignerId.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/x500/X500Name.h"
#include "org/bouncycastle/cert/selector/X509CertificateHolderSelector.h"
#include "org/bouncycastle/cms/SignerId.h"
#include "org/bouncycastle/cms/SignerInformation.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cms/SignerId must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCmsSignerId () {
 @public
  OrgBouncycastleCertSelectorX509CertificateHolderSelector *baseSelector_;
}

- (instancetype)initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector:(OrgBouncycastleCertSelectorX509CertificateHolderSelector *)baseSelector;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCmsSignerId, baseSelector_, OrgBouncycastleCertSelectorX509CertificateHolderSelector *)

__attribute__((unused)) static void OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(OrgBouncycastleCmsSignerId *self, OrgBouncycastleCertSelectorX509CertificateHolderSelector *baseSelector);

__attribute__((unused)) static OrgBouncycastleCmsSignerId *new_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(OrgBouncycastleCertSelectorX509CertificateHolderSelector *baseSelector) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCmsSignerId *create_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(OrgBouncycastleCertSelectorX509CertificateHolderSelector *baseSelector);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cms/SignerId.java"


#line 12
@implementation OrgBouncycastleCmsSignerId


#line 17
- (instancetype)initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector:(OrgBouncycastleCertSelectorX509CertificateHolderSelector *)baseSelector {
  OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(self, baseSelector);
  return self;
}


#line 27
- (instancetype)initWithByteArray:(IOSByteArray *)subjectKeyId {
  OrgBouncycastleCmsSignerId_initWithByteArray_(self, subjectKeyId);
  return self;
}


#line 39
- (instancetype)initWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)issuer
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuer, serialNumber);
  return self;
}


#line 52
- (instancetype)initWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)issuer
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber
                                          withByteArray:(IOSByteArray *)subjectKeyId {
  OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self, issuer, serialNumber, subjectKeyId);
  return self;
}


#line 57
- (OrgBouncycastleAsn1X500X500Name *)getIssuer {
  
#line 59
  return [((OrgBouncycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) getIssuer];
}


#line 62
- (JavaMathBigInteger *)getSerialNumber {
  
#line 64
  return [((OrgBouncycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) getSerialNumber];
}


#line 67
- (IOSByteArray *)getSubjectKeyIdentifier {
  
#line 69
  return [((OrgBouncycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) getSubjectKeyIdentifier];
}


#line 72
- (NSUInteger)hash {
  
#line 75
  return ((jint) [((OrgBouncycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) hash]);
}

- (jboolean)isEqual:(id)o {
  
#line 82
  if (!([o isKindOfClass:[OrgBouncycastleCmsSignerId class]])) {
    
#line 84
    return false;
  }
  
#line 87
  OrgBouncycastleCmsSignerId *id_ = (OrgBouncycastleCmsSignerId *) cast_chk(o, [OrgBouncycastleCmsSignerId class]);
  
#line 89
  return [((OrgBouncycastleCertSelectorX509CertificateHolderSelector *) nil_chk(self->baseSelector_)) isEqual:((OrgBouncycastleCmsSignerId *) nil_chk(id_))->baseSelector_];
}


#line 92
- (jboolean)matchWithId:(id)obj {
  
#line 95
  if ([obj isKindOfClass:[OrgBouncycastleCmsSignerInformation class]]) {
    
#line 97
    return [((OrgBouncycastleCmsSignerId *) nil_chk([((OrgBouncycastleCmsSignerInformation *) nil_chk(((OrgBouncycastleCmsSignerInformation *) obj))) getSID])) isEqual:self];
  }
  
#line 100
  return [((OrgBouncycastleCertSelectorX509CertificateHolderSelector *) nil_chk(baseSelector_)) matchWithId:obj];
}


#line 103
- (id)java_clone {
  
#line 106
  return new_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(self->baseSelector_);
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithOrgBouncycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithOrgBouncycastleAsn1X500X500Name:withJavaMathBigInteger:withByteArray:);
  methods[4].selector = @selector(getIssuer);
  methods[5].selector = @selector(getSerialNumber);
  methods[6].selector = @selector(getSubjectKeyIdentifier);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(matchWithId:);
  methods[10].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseSelector_", "LOrgBouncycastleCertSelectorX509CertificateHolderSelector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCertSelectorX509CertificateHolderSelector;", "[B", "LOrgBouncycastleAsn1X500X500Name;LJavaMathBigInteger;", "LOrgBouncycastleAsn1X500X500Name;LJavaMathBigInteger;[B", "hashCode", "equals", "LNSObject;", "match", "clone" };
  static const J2ObjcClassInfo _OrgBouncycastleCmsSignerId = { "SignerId", "org.bouncycastle.cms", ptrTable, methods, fields, 7, 0x1, 11, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCmsSignerId;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 17
void OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(OrgBouncycastleCmsSignerId *self, OrgBouncycastleCertSelectorX509CertificateHolderSelector *baseSelector) {
  NSObject_init(self);
  self->baseSelector_ = baseSelector;
}


#line 17
OrgBouncycastleCmsSignerId *new_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(OrgBouncycastleCertSelectorX509CertificateHolderSelector *baseSelector) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCmsSignerId, initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_, baseSelector)
}


#line 17
OrgBouncycastleCmsSignerId *create_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(OrgBouncycastleCertSelectorX509CertificateHolderSelector *baseSelector) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCmsSignerId, initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_, baseSelector)
}


#line 27
void OrgBouncycastleCmsSignerId_initWithByteArray_(OrgBouncycastleCmsSignerId *self, IOSByteArray *subjectKeyId) {
  OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self,
#line 29
  nil, nil, subjectKeyId);
}


#line 27
OrgBouncycastleCmsSignerId *new_OrgBouncycastleCmsSignerId_initWithByteArray_(IOSByteArray *subjectKeyId) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCmsSignerId, initWithByteArray_, subjectKeyId)
}


#line 27
OrgBouncycastleCmsSignerId *create_OrgBouncycastleCmsSignerId_initWithByteArray_(IOSByteArray *subjectKeyId) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCmsSignerId, initWithByteArray_, subjectKeyId)
}


#line 39
void OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgBouncycastleCmsSignerId *self, OrgBouncycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(self,
#line 41
  issuer, serialNumber, nil);
}


#line 39
OrgBouncycastleCmsSignerId *new_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgBouncycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCmsSignerId, initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serialNumber)
}


#line 39
OrgBouncycastleCmsSignerId *create_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgBouncycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCmsSignerId, initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_, issuer, serialNumber)
}


#line 52
void OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgBouncycastleCmsSignerId *self, OrgBouncycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  OrgBouncycastleCmsSignerId_initWithOrgBouncycastleCertSelectorX509CertificateHolderSelector_(self, new_OrgBouncycastleCertSelectorX509CertificateHolderSelector_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(
#line 54
  issuer, serialNumber, subjectKeyId));
}


#line 52
OrgBouncycastleCmsSignerId *new_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgBouncycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCmsSignerId, initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_, issuer, serialNumber, subjectKeyId)
}


#line 52
OrgBouncycastleCmsSignerId *create_OrgBouncycastleCmsSignerId_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_(OrgBouncycastleAsn1X500X500Name *issuer, JavaMathBigInteger *serialNumber, IOSByteArray *subjectKeyId) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCmsSignerId, initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_withByteArray_, issuer, serialNumber, subjectKeyId)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCmsSignerId)

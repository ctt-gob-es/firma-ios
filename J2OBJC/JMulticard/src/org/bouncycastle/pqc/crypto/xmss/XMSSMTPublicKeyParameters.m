//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPublicKeyParameters.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSOid.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSUtil.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/XMSSMTPublicKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters () {
 @public
  OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params_;
  jint oid_;
  IOSByteArray *root_;
  IOSByteArray *publicSeed_;
}

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder:(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters, params_, OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters, root_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters, publicSeed_, IOSByteArray *)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *self, OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *builder);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *new_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *create_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *builder);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters__Annotations$0(void);

@interface OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder () {
 @public
  OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params_;
  IOSByteArray *root_;
  IOSByteArray *publicSeed_;
  IOSByteArray *publicKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder, params_, OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder, root_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder, publicSeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder, publicKey_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPublicKeyParameters.java"


#line 11
@implementation OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters


#line 20
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder:(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *)builder {
  OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(self, builder);
  return self;
}


#line 95
- (IOSByteArray *)getEncoded {
  
#line 99
  return [self toByteArray];
}


#line 144
- (IOSByteArray *)toByteArray {
  
#line 149
  jint n = [((OrgBouncycastlePqcCryptoXmssXMSSMTParameters *) nil_chk(params_)) getTreeDigestSize];
  jint oidSize = 4;
  jint rootSize = n;
  jint publicSeedSize = n;
  IOSByteArray *out;
  jint position = 0;
  
#line 156
  if (oid_ != 0) {
    
#line 158
    out = [IOSByteArray newArrayWithLength:oidSize + rootSize + publicSeedSize];
    OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(oid_, out, position);
    position += oidSize;
  }
  else {
    
#line 164
    out = [IOSByteArray newArrayWithLength:rootSize + publicSeedSize];
  }
  
#line 167
  OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, root_, position);
  position += rootSize;
  
#line 170
  OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, publicSeed_, position);
  return out;
}


#line 174
- (IOSByteArray *)getRoot {
  
#line 176
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(root_);
}


#line 179
- (IOSByteArray *)getPublicSeed {
  
#line 181
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(publicSeed_);
}


#line 184
- (OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)getParameters {
  
#line 186
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSMTParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder:);
  methods[1].selector = @selector(getEncoded);
  methods[2].selector = @selector(toByteArray);
  methods[3].selector = @selector(getRoot);
  methods[4].selector = @selector(getPublicSeed);
  methods[5].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoXmssXMSSMTParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "oid_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder;", "LJavaIoIOException;", (void *)&OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters__Annotations$0 };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters = { "XMSSMTPublicKeyParameters", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 6, 4, -1, 0, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters;
}

@end


#line 20
void OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *self, OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *builder) {
  OrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters_initWithBoolean_withNSString_(self,
#line 22
  false, [((OrgBouncycastlePqcCryptoXmssXMSSMTParameters *) nil_chk(((OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *) nil_chk(builder))->params_)) getTreeDigest]);
  self->params_ = builder->params_;
  if (self->params_ == nil) {
    
#line 26
    @throw new_JavaLangNullPointerException_initWithNSString_(@"params == null");
  }
  jint n = [self->params_ getTreeDigestSize];
  IOSByteArray *publicKey = builder->publicKey_;
  if (publicKey != nil) {
    
#line 33
    jint oidSize = 4;
    jint rootSize = n;
    jint publicSeedSize = n;
    jint position = 0;
    
#line 38
    if (publicKey->size_ == rootSize + publicSeedSize) {
      
#line 40
      self->oid_ = 0;
    }
    else if (publicKey->size_ == oidSize + rootSize + publicSeedSize) {
      
#line 44
      self->oid_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(publicKey, 0);
      position += oidSize;
    }
    else {
      
#line 49
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"public key has wrong size");
    }
    self->root_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(publicKey, position, rootSize);
    position += rootSize;
    self->publicSeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(publicKey, position, publicSeedSize);
  }
  else {
    
#line 58
    if ([self->params_ getOid] != nil) {
      
#line 60
      self->oid_ = [((id<OrgBouncycastlePqcCryptoXmssXMSSOid>) nil_chk([self->params_ getOid])) getOid];
    }
    else {
      
#line 64
      self->oid_ = 0;
    }
    IOSByteArray *tmpRoot = builder->root_;
    if (tmpRoot != nil) {
      
#line 69
      if (tmpRoot->size_ != n) {
        
#line 71
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"length of root must be equal to length of digest");
      }
      self->root_ = tmpRoot;
    }
    else {
      
#line 77
      self->root_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpPublicSeed = builder->publicSeed_;
    if (tmpPublicSeed != nil) {
      
#line 82
      if (tmpPublicSeed->size_ != n) {
        
#line 84
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"length of publicSeed must be equal to length of digest");
      }
      self->publicSeed_ = tmpPublicSeed;
    }
    else {
      
#line 90
      self->publicSeed_ = [IOSByteArray newArrayWithLength:n];
    }
  }
}


#line 20
OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *new_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *builder) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters, initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_, builder)
}


#line 20
OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *create_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *builder) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters, initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_, builder)
}

IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPublicKeyParameters.java"


#line 102
@implementation OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder


#line 112
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters:(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)params {
  OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(self, params);
  return self;
}

- (OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *)withRootWithByteArray:(IOSByteArray *)val {
  
#line 119
  root_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 123
- (OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *)withPublicSeedWithByteArray:(IOSByteArray *)val {
  
#line 125
  publicSeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 129
- (OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *)withPublicKeyWithByteArray:(IOSByteArray *)val {
  
#line 131
  publicKey_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 135
- (OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *)build {
  
#line 137
  return new_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters:);
  methods[1].selector = @selector(withRootWithByteArray:);
  methods[2].selector = @selector(withPublicSeedWithByteArray:);
  methods[3].selector = @selector(withPublicKeyWithByteArray:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoXmssXMSSMTParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKey_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSMTParameters;", "withRoot", "[B", "withPublicSeed", "withPublicKey", "LOrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder = { "Builder", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x9, 5, 4, 5, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder;
}

@end


#line 112
void OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *self, OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params) {
  NSObject_init(self);
  self->root_ =
#line 108
  nil;
  self->publicSeed_ = nil;
  self->publicKey_ = nil;
  
#line 114
  self->params_ = params;
}


#line 112
OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *new_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_, params)
}


#line 112
OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *create_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder)

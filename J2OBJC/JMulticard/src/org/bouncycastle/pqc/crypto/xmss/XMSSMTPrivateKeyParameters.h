//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters

#if !defined (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters))
#define OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_

#define RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters 1
#define INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters 1
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTKeyParameters.h"

#define RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSStoreableObjectInterface 1
#define INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSStoreableObjectInterface 1
#include "org/bouncycastle/pqc/crypto/xmss/XMSSStoreableObjectInterface.h"

#define RESTRICT_OrgBouncycastleUtilEncodable 1
#define INCLUDE_OrgBouncycastleUtilEncodable 1
#include "org/bouncycastle/util/Encodable.h"

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoXmssBDSStateMap;
@class OrgBouncycastlePqcCryptoXmssXMSSMTParameters;

/*!
 @brief XMSS^MT Private Key.
 */
@interface OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters : OrgBouncycastlePqcCryptoXmssXMSSMTKeyParameters < OrgBouncycastlePqcCryptoXmssXMSSStoreableObjectInterface, OrgBouncycastleUtilEncodable >

#pragma mark Public

/*!
 @brief Return a key that can be used usageCount times.
 <p>
  Note: this will use the range [index...index + usageCount) for the current key. 
 </p>
 @param usageCount the number of usages the key should have.
 @return a key based on the current key that can be used usageCount times.
 */
- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *)extractKeyShardWithInt:(jint)usageCount;

- (IOSByteArray *)getEncoded;

- (jlong)getIndex;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *)getNextKey;

- (OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)getParameters;

- (IOSByteArray *)getPublicSeed;

- (IOSByteArray *)getRoot;

- (IOSByteArray *)getSecretKeyPRF;

- (IOSByteArray *)getSecretKeySeed;

- (jlong)getUsagesRemaining;

/*!
 */
- (IOSByteArray *)toByteArray;

#pragma mark Package-Private

- (OrgBouncycastlePqcCryptoXmssBDSStateMap *)getBDSState;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *)rollKey;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0
                   withNSString:(NSString *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters)

#endif

#if !defined (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder))
#define OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder_

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoXmssBDSStateMap;
@class OrgBouncycastlePqcCryptoXmssXMSSMTParameters;
@class OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters;

@interface OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder : NSObject

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters:(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)params;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *)build;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withBDSStateWithOrgBouncycastlePqcCryptoXmssBDSStateMap:(OrgBouncycastlePqcCryptoXmssBDSStateMap *)val;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withIndexWithLong:(jlong)val;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withMaxIndexWithLong:(jlong)val;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withPrivateKeyWithByteArray:(IOSByteArray *)privateKeyVal;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withPublicSeedWithByteArray:(IOSByteArray *)val;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withRootWithByteArray:(IOSByteArray *)val;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withSecretKeyPRFWithByteArray:(IOSByteArray *)val;

- (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *)withSecretKeySeedWithByteArray:(IOSByteArray *)val;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *self, OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *new_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder *create_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSKeyParameters.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSKeyParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/XMSSKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssXMSSKeyParameters () {
 @public
  NSString *treeDigest_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSKeyParameters, treeDigest_, NSString *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSKeyParameters.java"

NSString *OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHA_256 = @"SHA-256";
NSString *OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHA_512 = @"SHA-512";
NSString *OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHAKE128 = @"SHAKE128";
NSString *OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHAKE256 = @"SHAKE256";

@implementation OrgBouncycastlePqcCryptoXmssXMSSKeyParameters


#line 15
- (instancetype)initWithBoolean:(jboolean)isPrivateKey
                   withNSString:(NSString *)treeDigest {
  OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_initWithBoolean_withNSString_(self, isPrivateKey, treeDigest);
  return self;
}

- (NSString *)getTreeDigest {
  
#line 23
  return treeDigest_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withNSString:);
  methods[1].selector = @selector(getTreeDigest);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHA_256", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "SHA_512", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "SHAKE128", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "SHAKE256", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "treeDigest_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLNSString;", &OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHA_256, &OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHA_512, &OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHAKE128, &OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_SHAKE256 };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSKeyParameters = { "XMSSKeyParameters", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x1, 2, 5, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSKeyParameters;
}

@end


#line 15
void OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_initWithBoolean_withNSString_(OrgBouncycastlePqcCryptoXmssXMSSKeyParameters *self, jboolean isPrivateKey, NSString *treeDigest) {
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self,
#line 17
  isPrivateKey);
  self->treeDigest_ = treeDigest;
}


#line 15
OrgBouncycastlePqcCryptoXmssXMSSKeyParameters *new_OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSKeyParameters, initWithBoolean_withNSString_, isPrivateKey, treeDigest)
}


#line 15
OrgBouncycastlePqcCryptoXmssXMSSKeyParameters *create_OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSKeyParameters, initWithBoolean_withNSString_, isPrivateKey, treeDigest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSKeyParameters)

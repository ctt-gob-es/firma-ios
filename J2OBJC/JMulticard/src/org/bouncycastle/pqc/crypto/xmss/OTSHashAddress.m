//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSAddress.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/OTSHashAddress must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgBouncycastlePqcCryptoXmssOTSHashAddress () {
 @public
  jint otsAddress_;
  jint chainAddress_;
  jint hashAddress_;
}

@end

inline jint OrgBouncycastlePqcCryptoXmssOTSHashAddress_get_TYPE(void);
#define OrgBouncycastlePqcCryptoXmssOTSHashAddress_TYPE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoXmssOTSHashAddress, TYPE, jint)

@interface OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder () {
 @public
  jint otsAddress_;
  jint chainAddress_;
  jint hashAddress_;
}

@end

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.java"


#line 8
@implementation OrgBouncycastlePqcCryptoXmssOTSHashAddress


#line 18
- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder:(OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)builder {
  OrgBouncycastlePqcCryptoXmssOTSHashAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(self, builder);
  return self;
}


#line 70
- (IOSByteArray *)toByteArray {
  
#line 73
  IOSByteArray *byteRepresentation = [super toByteArray];
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(otsAddress_, byteRepresentation, 16);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(chainAddress_, byteRepresentation, 20);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(hashAddress_, byteRepresentation, 24);
  return byteRepresentation;
}

- (jint)getOTSAddress {
  
#line 82
  return otsAddress_;
}


#line 85
- (jint)getChainAddress {
  
#line 87
  return chainAddress_;
}


#line 90
- (jint)getHashAddress {
  
#line 92
  return hashAddress_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder:);
  methods[1].selector = @selector(toByteArray);
  methods[2].selector = @selector(getOTSAddress);
  methods[3].selector = @selector(getChainAddress);
  methods[4].selector = @selector(getHashAddress);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "I", .constantValue.asInt = OrgBouncycastlePqcCryptoXmssOTSHashAddress_TYPE, 0x1a, -1, -1, -1, -1 },
    { "otsAddress_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "chainAddress_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hashAddress_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssOTSHashAddress = { "OTSHashAddress", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x10, 5, 4, -1, 0, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssOTSHashAddress;
}

@end


#line 18
void OrgBouncycastlePqcCryptoXmssOTSHashAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(OrgBouncycastlePqcCryptoXmssOTSHashAddress *self, OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder) {
  OrgBouncycastlePqcCryptoXmssXMSSAddress_initWithOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_(self, builder);
  self->otsAddress_ = ((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk(builder))->otsAddress_;
  self->chainAddress_ = builder->chainAddress_;
  self->hashAddress_ = builder->hashAddress_;
}


#line 18
OrgBouncycastlePqcCryptoXmssOTSHashAddress *new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssOTSHashAddress, initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_, builder)
}


#line 18
OrgBouncycastlePqcCryptoXmssOTSHashAddress *create_OrgBouncycastlePqcCryptoXmssOTSHashAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *builder) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssOTSHashAddress, initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_, builder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssOTSHashAddress)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.java"


#line 25
@implementation OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 34
- (instancetype)init {
  OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 39
- (OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)withOTSAddressWithInt:(jint)val {
  
#line 41
  otsAddress_ = val;
  return self;
}


#line 45
- (OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)withChainAddressWithInt:(jint)val {
  
#line 47
  chainAddress_ = val;
  return self;
}


#line 51
- (OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)withHashAddressWithInt:(jint)val {
  
#line 53
  hashAddress_ = val;
  return self;
}


#line 57
- (OrgBouncycastlePqcCryptoXmssXMSSAddress *)build {
  
#line 60
  return new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_(self);
}

- (OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *)getThis {
  
#line 66
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, 2, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, 3, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSAddress;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(withOTSAddressWithInt:);
  methods[2].selector = @selector(withChainAddressWithInt:);
  methods[3].selector = @selector(withHashAddressWithInt:);
  methods[4].selector = @selector(build);
  methods[5].selector = @selector(getThis);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "otsAddress_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "chainAddress_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashAddress_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "withOTSAddress", "I", "withChainAddress", "withHashAddress", "LOrgBouncycastlePqcCryptoXmssOTSHashAddress;", "Lorg/bouncycastle/pqc/crypto/xmss/XMSSAddress$Builder<Lorg/bouncycastle/pqc/crypto/xmss/OTSHashAddress$Builder;>;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder = { "Builder", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0xc, 6, 3, 4, -1, -1, 5, -1 };
  return &_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder;
}

@end


#line 34
void OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init(OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *self) {
  OrgBouncycastlePqcCryptoXmssXMSSAddress_Builder_initWithInt_(self, OrgBouncycastlePqcCryptoXmssOTSHashAddress_TYPE);
  self->otsAddress_ =
#line 30
  0;
  self->chainAddress_ = 0;
  self->hashAddress_ = 0;
}


#line 34
OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder, init)
}


#line 34
OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *create_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder)

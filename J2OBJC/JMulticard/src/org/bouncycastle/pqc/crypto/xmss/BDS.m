//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/BDS.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/Stack.h"
#include "java/util/TreeMap.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/pqc/crypto/xmss/BDS.h"
#include "org/bouncycastle/pqc/crypto/xmss/BDSTreeHash.h"
#include "org/bouncycastle/pqc/crypto/xmss/HashTreeAddress.h"
#include "org/bouncycastle/pqc/crypto/xmss/LTreeAddress.h"
#include "org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.h"
#include "org/bouncycastle/pqc/crypto/xmss/WOTSPlus.h"
#include "org/bouncycastle/pqc/crypto/xmss/WOTSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/WOTSPlusPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSAddress.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSNode.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSNodeUtil.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSUtil.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/BDS must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssBDS () {
 @public
  OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus_;
  jint treeHeight_;
  id<JavaUtilList> treeHashInstances_;
  jint k_;
  OrgBouncycastlePqcCryptoXmssXMSSNode *root_;
  id<JavaUtilList> authenticationPath_;
  id<JavaUtilMap> retain__;
  JavaUtilStack *stack_;
  id<JavaUtilMap> keep_;
  jint index_;
  jboolean used_;
  jint maxIndex_;
}

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssWOTSPlus:(OrgBouncycastlePqcCryptoXmssWOTSPlus *)wotsPlus
                                                     withInt:(jint)treeHeight
                                                     withInt:(jint)k
                                                     withInt:(jint)maxIndex;

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)last
                                          withByteArray:(IOSByteArray *)publicSeed
                                          withByteArray:(IOSByteArray *)secretKeySeed
         withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)last
            withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digest;

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)last
                                                withInt:(jint)maxIndex
            withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digest;

- (void)initialize__WithByteArray:(IOSByteArray *)publicSeed
                    withByteArray:(IOSByteArray *)secretSeed
withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress OBJC_METHOD_FAMILY_NONE;

- (void)nextAuthenticationPathWithByteArray:(IOSByteArray *)publicSeed
                              withByteArray:(IOSByteArray *)secretSeed
withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

- (OrgBouncycastlePqcCryptoXmssBDSTreeHash *)getBDSTreeHashInstanceForUpdate;

- (void)validate;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssBDS, wotsPlus_, OrgBouncycastlePqcCryptoXmssWOTSPlus *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssBDS, treeHashInstances_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssBDS, root_, OrgBouncycastlePqcCryptoXmssXMSSNode *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssBDS, authenticationPath_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssBDS, retain__, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssBDS, stack_, JavaUtilStack *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssBDS, keep_, id<JavaUtilMap>)

inline jlong OrgBouncycastlePqcCryptoXmssBDS_get_serialVersionUID(void);
#define OrgBouncycastlePqcCryptoXmssBDS_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoXmssBDS, serialVersionUID, jlong)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k, jint maxIndex);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k, jint maxIndex) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k, jint maxIndex);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssBDS *last, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssBDS *last, jint maxIndex, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, jint maxIndex, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, jint maxIndex, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssBDSTreeHash *OrgBouncycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(OrgBouncycastlePqcCryptoXmssBDS *self);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_validate(OrgBouncycastlePqcCryptoXmssBDS *self);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcCryptoXmssBDS *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssBDS_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcCryptoXmssBDS *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/BDS.java"


#line 20
@implementation OrgBouncycastlePqcCryptoXmssBDS


#line 47
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:(OrgBouncycastlePqcCryptoXmssXMSSParameters *)params
                                                           withInt:(jint)maxIndex
                                                           withInt:(jint)index {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_(self, params, maxIndex, index);
  return self;
}


#line 63
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:(OrgBouncycastlePqcCryptoXmssXMSSParameters *)params
                                                     withByteArray:(IOSByteArray *)publicSeed
                                                     withByteArray:(IOSByteArray *)secretKeySeed
                    withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, params, publicSeed, secretKeySeed, otsHashAddress);
  return self;
}


#line 78
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:(OrgBouncycastlePqcCryptoXmssXMSSParameters *)params
                                                     withByteArray:(IOSByteArray *)publicSeed
                                                     withByteArray:(IOSByteArray *)secretKeySeed
                    withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress
                                                           withInt:(jint)index {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_withInt_(self, params, publicSeed, secretKeySeed, otsHashAddress, index);
  return self;
}


#line 91
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssWOTSPlus:(OrgBouncycastlePqcCryptoXmssWOTSPlus *)wotsPlus
                                                     withInt:(jint)treeHeight
                                                     withInt:(jint)k
                                                     withInt:(jint)maxIndex {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(self, wotsPlus, treeHeight, k, maxIndex);
  return self;
}


#line 116
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)last {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_(self, last);
  return self;
}


#line 143
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)last
                                          withByteArray:(IOSByteArray *)publicSeed
                                          withByteArray:(IOSByteArray *)secretKeySeed
         withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, last, publicSeed, secretKeySeed, otsHashAddress);
  return self;
}


#line 172
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)last
            withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digest {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, last, digest);
  return self;
}


#line 200
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)last
                                                withInt:(jint)maxIndex
            withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digest {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, last, maxIndex, digest);
  return self;
}


#line 228
- (OrgBouncycastlePqcCryptoXmssBDS *)getNextStateWithByteArray:(IOSByteArray *)publicSeed
                                                 withByteArray:(IOSByteArray *)secretKeySeed
                withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  
#line 230
  return new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
}


#line 233
- (void)initialize__WithByteArray:(IOSByteArray *)publicSeed
                    withByteArray:(IOSByteArray *)secretSeed
withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgBouncycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretSeed, otsHashAddress);
}


#line 320
- (void)nextAuthenticationPathWithByteArray:(IOSByteArray *)publicSeed
                              withByteArray:(IOSByteArray *)secretSeed
withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress {
  OrgBouncycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretSeed, otsHashAddress);
}


#line 427
- (jboolean)isUsed {
  
#line 429
  return used_;
}


#line 432
- (void)markUsed {
  
#line 434
  self->used_ = true;
}


#line 437
- (OrgBouncycastlePqcCryptoXmssBDSTreeHash *)getBDSTreeHashInstanceForUpdate {
  return OrgBouncycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(self);
}


#line 467
- (void)validate {
  OrgBouncycastlePqcCryptoXmssBDS_validate(self);
}


#line 495
- (jint)getTreeHeight {
  
#line 497
  return treeHeight_;
}


#line 500
- (OrgBouncycastlePqcCryptoXmssXMSSNode *)getRoot {
  
#line 502
  return root_;
}


#line 505
- (id<JavaUtilList>)getAuthenticationPath {
  
#line 507
  id<JavaUtilList> authenticationPath = new_JavaUtilArrayList_init();
  
#line 509
  for (OrgBouncycastlePqcCryptoXmssXMSSNode * __strong node in nil_chk(self->authenticationPath_)) {
    
#line 511
    [authenticationPath addWithId:node];
  }
  return authenticationPath;
}


#line 516
- (jint)getIndex {
  
#line 518
  return index_;
}


#line 521
- (jint)getMaxIndex {
  
#line 523
  return maxIndex_;
}


#line 526
- (OrgBouncycastlePqcCryptoXmssBDS *)withWOTSDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestName {
  
#line 528
  return new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, digestName);
}


#line 531
- (OrgBouncycastlePqcCryptoXmssBDS *)withMaxIndexWithInt:(jint)maxIndex
             withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestName {
  return new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, maxIndex, digestName);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgBouncycastlePqcCryptoXmssBDS_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 556
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgBouncycastlePqcCryptoXmssBDS_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssBDS;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssBDSTreeHash;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSNode;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, -1, -1, -1, 12, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssBDS;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssBDS;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 17, 18, 19, -1, -1, -1 },
    { NULL, "V", 0x2, 20, 21, 22, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:withInt:withInt:);
  methods[1].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:withByteArray:withByteArray:withOrgBouncycastlePqcCryptoXmssOTSHashAddress:);
  methods[2].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:withByteArray:withByteArray:withOrgBouncycastlePqcCryptoXmssOTSHashAddress:withInt:);
  methods[3].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssWOTSPlus:withInt:withInt:withInt:);
  methods[4].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssBDS:);
  methods[5].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssBDS:withByteArray:withByteArray:withOrgBouncycastlePqcCryptoXmssOTSHashAddress:);
  methods[6].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssBDS:withOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[7].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssBDS:withInt:withOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[8].selector = @selector(getNextStateWithByteArray:withByteArray:withOrgBouncycastlePqcCryptoXmssOTSHashAddress:);
  methods[9].selector = @selector(initialize__WithByteArray:withByteArray:withOrgBouncycastlePqcCryptoXmssOTSHashAddress:);
  methods[10].selector = @selector(nextAuthenticationPathWithByteArray:withByteArray:withOrgBouncycastlePqcCryptoXmssOTSHashAddress:);
  methods[11].selector = @selector(isUsed);
  methods[12].selector = @selector(markUsed);
  methods[13].selector = @selector(getBDSTreeHashInstanceForUpdate);
  methods[14].selector = @selector(validate);
  methods[15].selector = @selector(getTreeHeight);
  methods[16].selector = @selector(getRoot);
  methods[17].selector = @selector(getAuthenticationPath);
  methods[18].selector = @selector(getIndex);
  methods[19].selector = @selector(getMaxIndex);
  methods[20].selector = @selector(withWOTSDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[21].selector = @selector(withMaxIndexWithInt:withOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[22].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[23].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastlePqcCryptoXmssBDS_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "wotsPlus_", "LOrgBouncycastlePqcCryptoXmssWOTSPlus;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "treeHeight_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "treeHashInstances_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 23, -1 },
    { "k_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "root_", "LOrgBouncycastlePqcCryptoXmssXMSSNode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "authenticationPath_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 24, -1 },
    { "retain__", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, 25, -1, 26, -1 },
    { "stack_", "LJavaUtilStack;", .constantValue.asLong = 0, 0x2, -1, -1, 27, -1 },
    { "keep_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 28, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "used_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxIndex_", "I", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSParameters;II", "LOrgBouncycastlePqcCryptoXmssXMSSParameters;[B[BLOrgBouncycastlePqcCryptoXmssOTSHashAddress;", "LOrgBouncycastlePqcCryptoXmssXMSSParameters;[B[BLOrgBouncycastlePqcCryptoXmssOTSHashAddress;I", "LOrgBouncycastlePqcCryptoXmssWOTSPlus;III", "LOrgBouncycastlePqcCryptoXmssBDS;", "LOrgBouncycastlePqcCryptoXmssBDS;[B[BLOrgBouncycastlePqcCryptoXmssOTSHashAddress;", "LOrgBouncycastlePqcCryptoXmssBDS;LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "LOrgBouncycastlePqcCryptoXmssBDS;ILOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getNextState", "[B[BLOrgBouncycastlePqcCryptoXmssOTSHashAddress;", "initialize", "nextAuthenticationPath", "()Ljava/util/List<Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;>;", "withWOTSDigest", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "withMaxIndex", "ILOrgBouncycastleAsn1ASN1ObjectIdentifier;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;", "LJavaIoIOException;", "Ljava/util/List<Lorg/bouncycastle/pqc/crypto/xmss/BDSTreeHash;>;", "Ljava/util/List<Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;>;", "retain", "Ljava/util/Map<Ljava/lang/Integer;Ljava/util/LinkedList<Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;>;>;", "Ljava/util/Stack<Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;>;", "Ljava/util/Map<Ljava/lang/Integer;Lorg/bouncycastle/pqc/crypto/xmss/XMSSNode;>;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssBDS = { "BDS", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 24, 13, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssBDS;
}

@end


#line 47
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssXMSSParameters *params, jint maxIndex, jint index) {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(self,
#line 49
  [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params)) getWOTSPlus], [params getHeight], [params getK], index);
  self->maxIndex_ = maxIndex;
  self->index_ = index;
  self->used_ = true;
}


#line 47
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, jint maxIndex, jint index) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_, params, maxIndex, index)
}


#line 47
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, jint maxIndex, jint index) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_, params, maxIndex, index)
}


#line 63
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(self,
#line 65
  [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params)) getWOTSPlus], [params getHeight], [params getK], ((JreLShift32(1, [params getHeight])) - 1));
  OrgBouncycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
}


#line 63
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_, params, publicSeed, secretKeySeed, otsHashAddress)
}


#line 63
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_, params, publicSeed, secretKeySeed, otsHashAddress)
}


#line 78
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index) {
  OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(self,
#line 80
  [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params)) getWOTSPlus], [params getHeight], [params getK], ((JreLShift32(1, [params getHeight])) - 1));
  
#line 82
  OrgBouncycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
  
#line 84
  while (self->index_ < index) {
    
#line 86
    OrgBouncycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
    self->used_ = false;
  }
}


#line 78
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_withInt_, params, publicSeed, secretKeySeed, otsHashAddress, index)
}


#line 78
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_withInt_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress, jint index) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_withInt_, params, publicSeed, secretKeySeed, otsHashAddress, index)
}


#line 91
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k, jint maxIndex) {
  NSObject_init(self);
  self->wotsPlus_ = wotsPlus;
  self->treeHeight_ = treeHeight;
  self->maxIndex_ = maxIndex;
  self->k_ = k;
  if (k > treeHeight || k < 2 || (JreIntMod((treeHeight - k), 2)) != 0) {
    
#line 99
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"illegal value for BDS parameter k");
  }
  self->authenticationPath_ = new_JavaUtilArrayList_init();
  self->retain__ = new_JavaUtilTreeMap_init();
  self->stack_ = new_JavaUtilStack_init();
  
#line 105
  self->treeHashInstances_ = new_JavaUtilArrayList_init();
  for (jint height = 0; height < (treeHeight - k); height++) {
    
#line 108
    [self->treeHashInstances_ addWithId:new_OrgBouncycastlePqcCryptoXmssBDSTreeHash_initPackagePrivateWithInt_(height)];
  }
  
#line 111
  self->keep_ = new_JavaUtilTreeMap_init();
  self->index_ = 0;
  self->used_ = false;
}


#line 91
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k, jint maxIndex) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_, wotsPlus, treeHeight, k, maxIndex)
}


#line 91
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, jint treeHeight, jint k, jint maxIndex) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withInt_withInt_withInt_, wotsPlus, treeHeight, k, maxIndex)
}


#line 116
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssBDS *last) {
  NSObject_init(self);
  self->wotsPlus_ = new_OrgBouncycastlePqcCryptoXmssWOTSPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_([((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk(((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(last))->wotsPlus_)) getParams]);
  self->treeHeight_ = last->treeHeight_;
  self->k_ = last->k_;
  self->root_ = last->root_;
  self->authenticationPath_ = new_JavaUtilArrayList_init();
  [self->authenticationPath_ addAllWithJavaUtilCollection:last->authenticationPath_];
  self->retain__ = new_JavaUtilTreeMap_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([last->retain__ keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 127
    JavaLangInteger *key = (JavaLangInteger *) cast_chk([it next], [JavaLangInteger class]);
    (void) [((id<JavaUtilMap>) nil_chk(self->retain__)) putWithId:key withId:(JavaUtilLinkedList *) cast_chk([((JavaUtilLinkedList *) nil_chk([last->retain__ getWithId:key])) java_clone], [JavaUtilLinkedList class])];
  }
  self->stack_ = new_JavaUtilStack_init();
  [self->stack_ addAllWithJavaUtilCollection:last->stack_];
  self->treeHashInstances_ = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> it = [last->treeHashInstances_ iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 135
    [self->treeHashInstances_ addWithId:[((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk(((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) cast_chk([it next], [OrgBouncycastlePqcCryptoXmssBDSTreeHash class])))) java_clone]];
  }
  self->keep_ = new_JavaUtilTreeMap_initWithJavaUtilMap_(last->keep_);
  self->index_ = last->index_;
  self->maxIndex_ = last->maxIndex_;
  self->used_ = last->used_;
}


#line 116
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_(OrgBouncycastlePqcCryptoXmssBDS *last) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_, last)
}


#line 116
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_(OrgBouncycastlePqcCryptoXmssBDS *last) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_, last)
}


#line 143
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  NSObject_init(self);
  self->wotsPlus_ = new_OrgBouncycastlePqcCryptoXmssWOTSPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_([((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk(((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(last))->wotsPlus_)) getParams]);
  self->treeHeight_ = last->treeHeight_;
  self->k_ = last->k_;
  self->root_ = last->root_;
  self->authenticationPath_ = new_JavaUtilArrayList_init();
  [self->authenticationPath_ addAllWithJavaUtilCollection:last->authenticationPath_];
  self->retain__ = new_JavaUtilTreeMap_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([last->retain__ keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 154
    JavaLangInteger *key = (JavaLangInteger *) cast_chk([it next], [JavaLangInteger class]);
    (void) [((id<JavaUtilMap>) nil_chk(self->retain__)) putWithId:key withId:(JavaUtilLinkedList *) cast_chk([((JavaUtilLinkedList *) nil_chk([last->retain__ getWithId:key])) java_clone], [JavaUtilLinkedList class])];
  }
  self->stack_ = new_JavaUtilStack_init();
  [self->stack_ addAllWithJavaUtilCollection:last->stack_];
  self->treeHashInstances_ = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> it = [last->treeHashInstances_ iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 162
    [self->treeHashInstances_ addWithId:[((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk(((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) cast_chk([it next], [OrgBouncycastlePqcCryptoXmssBDSTreeHash class])))) java_clone]];
  }
  self->keep_ = new_JavaUtilTreeMap_initWithJavaUtilMap_(last->keep_);
  self->index_ = last->index_;
  self->maxIndex_ = last->maxIndex_;
  self->used_ = false;
  
#line 169
  OrgBouncycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(self, publicSeed, secretKeySeed, otsHashAddress);
}


#line 143
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_, last, publicSeed, secretKeySeed, otsHashAddress)
}


#line 143
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *last, IOSByteArray *publicSeed, IOSByteArray *secretKeySeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_, last, publicSeed, secretKeySeed, otsHashAddress)
}


#line 172
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssBDS *last, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) {
  NSObject_init(self);
  self->wotsPlus_ = new_OrgBouncycastlePqcCryptoXmssWOTSPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(new_OrgBouncycastlePqcCryptoXmssWOTSPlusParameters_initPackagePrivateWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(digest));
  self->treeHeight_ = ((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(last))->treeHeight_;
  self->k_ = last->k_;
  self->root_ = last->root_;
  self->authenticationPath_ = new_JavaUtilArrayList_init();
  [self->authenticationPath_ addAllWithJavaUtilCollection:last->authenticationPath_];
  self->retain__ = new_JavaUtilTreeMap_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([last->retain__ keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 183
    JavaLangInteger *key = (JavaLangInteger *) cast_chk([it next], [JavaLangInteger class]);
    (void) [((id<JavaUtilMap>) nil_chk(self->retain__)) putWithId:key withId:(JavaUtilLinkedList *) cast_chk([((JavaUtilLinkedList *) nil_chk([last->retain__ getWithId:key])) java_clone], [JavaUtilLinkedList class])];
  }
  self->stack_ = new_JavaUtilStack_init();
  [self->stack_ addAllWithJavaUtilCollection:last->stack_];
  self->treeHashInstances_ = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> it = [last->treeHashInstances_ iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 191
    [self->treeHashInstances_ addWithId:[((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk(((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) cast_chk([it next], [OrgBouncycastlePqcCryptoXmssBDSTreeHash class])))) java_clone]];
  }
  self->keep_ = new_JavaUtilTreeMap_initWithJavaUtilMap_(last->keep_);
  self->index_ = last->index_;
  self->maxIndex_ = last->maxIndex_;
  self->used_ = last->used_;
  OrgBouncycastlePqcCryptoXmssBDS_validate(self);
}


#line 172
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_, last, digest)
}


#line 172
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_withOrgBouncycastleAsn1ASN1ObjectIdentifier_, last, digest)
}


#line 200
void OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *self, OrgBouncycastlePqcCryptoXmssBDS *last, jint maxIndex, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) {
  NSObject_init(self);
  self->wotsPlus_ = new_OrgBouncycastlePqcCryptoXmssWOTSPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(new_OrgBouncycastlePqcCryptoXmssWOTSPlusParameters_initPackagePrivateWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(digest));
  self->treeHeight_ = ((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(last))->treeHeight_;
  self->k_ = last->k_;
  self->root_ = last->root_;
  self->authenticationPath_ = new_JavaUtilArrayList_init();
  [self->authenticationPath_ addAllWithJavaUtilCollection:last->authenticationPath_];
  self->retain__ = new_JavaUtilTreeMap_init();
  for (id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([last->retain__ keySet])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 211
    JavaLangInteger *key = (JavaLangInteger *) cast_chk([it next], [JavaLangInteger class]);
    (void) [((id<JavaUtilMap>) nil_chk(self->retain__)) putWithId:key withId:(JavaUtilLinkedList *) cast_chk([((JavaUtilLinkedList *) nil_chk([last->retain__ getWithId:key])) java_clone], [JavaUtilLinkedList class])];
  }
  self->stack_ = new_JavaUtilStack_init();
  [self->stack_ addAllWithJavaUtilCollection:last->stack_];
  self->treeHashInstances_ = new_JavaUtilArrayList_init();
  for (id<JavaUtilIterator> it = [last->treeHashInstances_ iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
    
#line 219
    [self->treeHashInstances_ addWithId:[((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk(((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) cast_chk([it next], [OrgBouncycastlePqcCryptoXmssBDSTreeHash class])))) java_clone]];
  }
  self->keep_ = new_JavaUtilTreeMap_initWithJavaUtilMap_(last->keep_);
  self->index_ = last->index_;
  self->maxIndex_ = maxIndex;
  self->used_ = last->used_;
  OrgBouncycastlePqcCryptoXmssBDS_validate(self);
}


#line 200
OrgBouncycastlePqcCryptoXmssBDS *new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, jint maxIndex, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_, last, maxIndex, digest)
}


#line 200
OrgBouncycastlePqcCryptoXmssBDS *create_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoXmssBDS *last, jint maxIndex, OrgBouncycastleAsn1ASN1ObjectIdentifier *digest) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssBDS, initWithOrgBouncycastlePqcCryptoXmssBDS_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_, last, maxIndex, digest)
}


#line 233
void OrgBouncycastlePqcCryptoXmssBDS_initialize__WithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  
#line 235
  if (otsHashAddress == nil) {
    
#line 237
    @throw new_JavaLangNullPointerException_initWithNSString_(@"otsHashAddress == null");
  }
  
#line 240
  OrgBouncycastlePqcCryptoXmssLTreeAddress *lTreeAddress = (OrgBouncycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:
#line 241
  [otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgBouncycastlePqcCryptoXmssLTreeAddress class]);
  
#line 243
  OrgBouncycastlePqcCryptoXmssHashTreeAddress *hashTreeAddress = (OrgBouncycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:
#line 244
  [otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgBouncycastlePqcCryptoXmssHashTreeAddress class]);
  
#line 248
  for (jint indexLeaf = 0; indexLeaf < (JreLShift32(1, self->treeHeight_)); indexLeaf++) {
    
#line 251
    otsHashAddress = (OrgBouncycastlePqcCryptoXmssOTSHashAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() withLayerAddressWithInt:
#line 252
    [((OrgBouncycastlePqcCryptoXmssOTSHashAddress *) nil_chk(otsHashAddress)) getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) withOTSAddressWithInt:
#line 253
    indexLeaf])) withChainAddressWithInt:[otsHashAddress getChainAddress]])) withHashAddressWithInt:
#line 254
    [otsHashAddress getHashAddress]])) withKeyAndMaskWithInt:[otsHashAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssOTSHashAddress class]);
    
#line 260
    [((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) importKeysWithByteArray:[self->wotsPlus_ getWOTSPlusSecretKeyWithByteArray:secretSeed withOrgBouncycastlePqcCryptoXmssOTSHashAddress:otsHashAddress] withByteArray:publicSeed];
    OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *wotsPlusPublicKey = [((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) getPublicKeyWithOrgBouncycastlePqcCryptoXmssOTSHashAddress:otsHashAddress];
    lTreeAddress = (OrgBouncycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgBouncycastlePqcCryptoXmssLTreeAddress *) nil_chk(lTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:
#line 263
    [lTreeAddress getTreeAddress]])) withLTreeAddressWithInt:indexLeaf])) withTreeHeightWithInt:
#line 264
    [lTreeAddress getTreeHeight]])) withTreeIndexWithInt:[lTreeAddress getTreeIndex]])) withKeyAndMaskWithInt:
#line 265
    [lTreeAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssLTreeAddress class]);
    OrgBouncycastlePqcCryptoXmssXMSSNode *node = OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_lTreeWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withOrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters_withOrgBouncycastlePqcCryptoXmssLTreeAddress_(self->wotsPlus_, wotsPlusPublicKey, lTreeAddress);
    
#line 268
    hashTreeAddress = (OrgBouncycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:
#line 269
    [((OrgBouncycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:
#line 270
    [hashTreeAddress getTreeAddress]])) withTreeIndexWithInt:indexLeaf])) withKeyAndMaskWithInt:
#line 271
    [hashTreeAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssHashTreeAddress class]);
    while (![((JavaUtilStack *) nil_chk(self->stack_)) isEmpty] && [((OrgBouncycastlePqcCryptoXmssXMSSNode *) nil_chk([((JavaUtilStack *) nil_chk(self->stack_)) peek])) getHeight] == [((OrgBouncycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight]) {
      
#line 275
      jint indexOnHeight = JreIntDiv(indexLeaf, (JreLShift32(1, [((OrgBouncycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight])));
      if (indexOnHeight == 1) {
        
#line 278
        [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) addWithId:node];
      }
      
#line 281
      if (indexOnHeight == 3 && [node getHeight] < (self->treeHeight_ - self->k_)) {
        
#line 283
        [((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk([((id<JavaUtilList>) nil_chk(self->treeHashInstances_)) getWithInt:[node getHeight]])) setNodeWithOrgBouncycastlePqcCryptoXmssXMSSNode:node];
      }
      if (indexOnHeight >= 3 && (indexOnHeight & 1) == 1 && [node getHeight] >= (self->treeHeight_ - self->k_) &&
#line 286
      [node getHeight] <= (self->treeHeight_ - 2)) {
        
#line 288
        if ([((id<JavaUtilMap>) nil_chk(self->retain__)) getWithId:JavaLangInteger_valueOfWithInt_([node getHeight])] == nil) {
          
#line 290
          JavaUtilLinkedList *queue = new_JavaUtilLinkedList_init();
          [queue addWithId:node];
          (void) [((id<JavaUtilMap>) nil_chk(self->retain__)) putWithId:JavaLangInteger_valueOfWithInt_([node getHeight]) withId:queue];
        }
        else {
          
#line 296
          [((JavaUtilLinkedList *) nil_chk([((id<JavaUtilMap>) nil_chk(self->retain__)) getWithId:JavaLangInteger_valueOfWithInt_([node getHeight])])) addWithId:node];
        }
      }
      hashTreeAddress = (OrgBouncycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:
#line 300
      [((OrgBouncycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:
#line 301
      [hashTreeAddress getTreeAddress]])) withTreeHeightWithInt:
#line 302
      [hashTreeAddress getTreeHeight]])) withTreeIndexWithInt:JreIntDiv(
#line 303
      ([hashTreeAddress getTreeIndex] - 1), 2)])) withKeyAndMaskWithInt:
#line 304
      [hashTreeAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssHashTreeAddress class]);
      node = OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_randomizeHashWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withOrgBouncycastlePqcCryptoXmssXMSSNode_withOrgBouncycastlePqcCryptoXmssXMSSNode_withOrgBouncycastlePqcCryptoXmssXMSSAddress_(self->wotsPlus_, [((JavaUtilStack *) nil_chk(self->stack_)) pop], node, hashTreeAddress);
      node = new_OrgBouncycastlePqcCryptoXmssXMSSNode_initWithInt_withByteArray_([((OrgBouncycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight] + 1, [node getValue]);
      hashTreeAddress = (OrgBouncycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:
#line 308
      [((OrgBouncycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:
#line 309
      [hashTreeAddress getTreeAddress]])) withTreeHeightWithInt:
#line 310
      [hashTreeAddress getTreeHeight] + 1])) withTreeIndexWithInt:
#line 311
      [hashTreeAddress getTreeIndex]])) withKeyAndMaskWithInt:[hashTreeAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssHashTreeAddress class]);
    }
    
#line 315
    (void) [((JavaUtilStack *) nil_chk(self->stack_)) pushWithId:node];
  }
  self->root_ = [((JavaUtilStack *) nil_chk(self->stack_)) pop];
}


#line 320
void OrgBouncycastlePqcCryptoXmssBDS_nextAuthenticationPathWithByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_(OrgBouncycastlePqcCryptoXmssBDS *self, IOSByteArray *publicSeed, IOSByteArray *secretSeed, OrgBouncycastlePqcCryptoXmssOTSHashAddress *otsHashAddress) {
  
#line 322
  if (otsHashAddress == nil) {
    
#line 324
    @throw new_JavaLangNullPointerException_initWithNSString_(@"otsHashAddress == null");
  }
  if (self->used_) {
    
#line 328
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"index already used");
  }
  if (self->index_ > self->maxIndex_ - 1) {
    
#line 332
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"index out of bounds");
  }
  
#line 336
  jint tau = OrgBouncycastlePqcCryptoXmssXMSSUtil_calculateTauWithInt_withInt_(self->index_, self->treeHeight_);
  
#line 338
  if (((JreRShift32(self->index_, (tau + 1))) & 1) == 0 && (tau < (self->treeHeight_ - 1))) {
    
#line 340
    (void) [((id<JavaUtilMap>) nil_chk(self->keep_)) putWithId:JavaLangInteger_valueOfWithInt_(tau) withId:[((id<JavaUtilList>) nil_chk(self->authenticationPath_)) getWithInt:tau]];
  }
  
#line 344
  OrgBouncycastlePqcCryptoXmssLTreeAddress *lTreeAddress = (OrgBouncycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:
#line 345
  [otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgBouncycastlePqcCryptoXmssLTreeAddress class]);
  
#line 347
  OrgBouncycastlePqcCryptoXmssHashTreeAddress *hashTreeAddress = (OrgBouncycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:
#line 348
  [otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) build], [OrgBouncycastlePqcCryptoXmssHashTreeAddress class]);
  
#line 352
  if (tau == 0) {
    
#line 354
    otsHashAddress = (OrgBouncycastlePqcCryptoXmssOTSHashAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() withLayerAddressWithInt:
#line 355
    [otsHashAddress getLayerAddress]])) withTreeAddressWithLong:[otsHashAddress getTreeAddress]])) withOTSAddressWithInt:self->index_])) withChainAddressWithInt:
#line 356
    [otsHashAddress getChainAddress]])) withHashAddressWithInt:
#line 357
    [otsHashAddress getHashAddress]])) withKeyAndMaskWithInt:[otsHashAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssOTSHashAddress class]);
    
#line 363
    [((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) importKeysWithByteArray:[self->wotsPlus_ getWOTSPlusSecretKeyWithByteArray:secretSeed withOrgBouncycastlePqcCryptoXmssOTSHashAddress:otsHashAddress] withByteArray:publicSeed];
    OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *wotsPlusPublicKey = [((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) getPublicKeyWithOrgBouncycastlePqcCryptoXmssOTSHashAddress:otsHashAddress];
    lTreeAddress = (OrgBouncycastlePqcCryptoXmssLTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init() withLayerAddressWithInt:[((OrgBouncycastlePqcCryptoXmssLTreeAddress *) nil_chk(lTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:
#line 366
    [lTreeAddress getTreeAddress]])) withLTreeAddressWithInt:self->index_])) withTreeHeightWithInt:
#line 367
    [lTreeAddress getTreeHeight]])) withTreeIndexWithInt:[lTreeAddress getTreeIndex]])) withKeyAndMaskWithInt:
#line 368
    [lTreeAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssLTreeAddress class]);
    OrgBouncycastlePqcCryptoXmssXMSSNode *node = OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_lTreeWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withOrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters_withOrgBouncycastlePqcCryptoXmssLTreeAddress_(self->wotsPlus_, wotsPlusPublicKey, lTreeAddress);
    (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:0 withId:node];
  }
  else {
    
#line 375
    hashTreeAddress = (OrgBouncycastlePqcCryptoXmssHashTreeAddress *) cast_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssHashTreeAddress_Builder_init() withLayerAddressWithInt:
#line 376
    [((OrgBouncycastlePqcCryptoXmssHashTreeAddress *) nil_chk(hashTreeAddress)) getLayerAddress]])) withTreeAddressWithLong:
#line 377
    [hashTreeAddress getTreeAddress]])) withTreeHeightWithInt:tau - 1])) withTreeIndexWithInt:JreRShift32(self->index_,
#line 378
    tau)])) withKeyAndMaskWithInt:[hashTreeAddress getKeyAndMask]])) build], [OrgBouncycastlePqcCryptoXmssHashTreeAddress class]);
    
#line 383
    [((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk(self->wotsPlus_)) importKeysWithByteArray:[self->wotsPlus_ getWOTSPlusSecretKeyWithByteArray:secretSeed withOrgBouncycastlePqcCryptoXmssOTSHashAddress:otsHashAddress] withByteArray:publicSeed];
    OrgBouncycastlePqcCryptoXmssXMSSNode *node = OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_randomizeHashWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withOrgBouncycastlePqcCryptoXmssXMSSNode_withOrgBouncycastlePqcCryptoXmssXMSSNode_withOrgBouncycastlePqcCryptoXmssXMSSAddress_(self->wotsPlus_, [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) getWithInt:tau - 1], [((id<JavaUtilMap>) nil_chk(self->keep_)) getWithId:JavaLangInteger_valueOfWithInt_(tau - 1)], hashTreeAddress);
    node = new_OrgBouncycastlePqcCryptoXmssXMSSNode_initWithInt_withByteArray_([((OrgBouncycastlePqcCryptoXmssXMSSNode *) nil_chk(node)) getHeight] + 1, [node getValue]);
    (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:tau withId:node];
    (void) [((id<JavaUtilMap>) nil_chk(self->keep_)) removeWithId:JavaLangInteger_valueOfWithInt_(tau - 1)];
    
#line 390
    for (jint height = 0; height < tau; height++) {
      
#line 392
      if (height < (self->treeHeight_ - self->k_)) {
        
#line 394
        (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:height withId:[((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk([((id<JavaUtilList>) nil_chk(self->treeHashInstances_)) getWithInt:height])) getTailNode]];
      }
      else {
        
#line 398
        (void) [((id<JavaUtilList>) nil_chk(self->authenticationPath_)) setWithInt:height withId:[((JavaUtilLinkedList *) nil_chk([((id<JavaUtilMap>) nil_chk(self->retain__)) getWithId:JavaLangInteger_valueOfWithInt_(height)])) removeFirst]];
      }
    }
    
#line 403
    jint minHeight = JavaLangMath_minWithInt_withInt_(tau, self->treeHeight_ - self->k_);
    for (jint height = 0; height < minHeight; height++) {
      
#line 406
      jint startIndex = self->index_ + 1 + (3 * (JreLShift32(1, height)));
      if (startIndex < (JreLShift32(1, self->treeHeight_))) {
        
#line 409
        [((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk([((id<JavaUtilList>) nil_chk(self->treeHashInstances_)) getWithInt:height])) initialize__WithInt:startIndex];
      }
    }
  }
  
#line 415
  for (jint i = 0; i < JreRShift32((self->treeHeight_ - self->k_), 1); i++) {
    
#line 417
    OrgBouncycastlePqcCryptoXmssBDSTreeHash *treeHash = OrgBouncycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(self);
    if (treeHash != nil) {
      
#line 420
      [treeHash updateWithJavaUtilStack:self->stack_ withOrgBouncycastlePqcCryptoXmssWOTSPlus:self->wotsPlus_ withByteArray:publicSeed withByteArray:secretSeed withOrgBouncycastlePqcCryptoXmssOTSHashAddress:otsHashAddress];
    }
  }
  
#line 424
  self->index_++;
}


#line 437
OrgBouncycastlePqcCryptoXmssBDSTreeHash *OrgBouncycastlePqcCryptoXmssBDS_getBDSTreeHashInstanceForUpdate(OrgBouncycastlePqcCryptoXmssBDS *self) {
  
#line 439
  OrgBouncycastlePqcCryptoXmssBDSTreeHash *ret = nil;
  for (OrgBouncycastlePqcCryptoXmssBDSTreeHash * __strong treeHash in nil_chk(self->treeHashInstances_)) {
    
#line 442
    if ([((OrgBouncycastlePqcCryptoXmssBDSTreeHash *) nil_chk(treeHash)) isFinished] || ![treeHash isInitialized]) {
      
#line 444
      continue;
    }
    if (ret == nil) {
      
#line 448
      ret = treeHash;
      continue;
    }
    if ([treeHash getHeight] < [ret getHeight]) {
      
#line 453
      ret = treeHash;
      continue;
    }
    if ([treeHash getHeight] == [ret getHeight]) {
      
#line 458
      if ([treeHash getIndexLeaf] < [ret getIndexLeaf]) {
        
#line 460
        ret = treeHash;
      }
    }
  }
  return ret;
}


#line 467
void OrgBouncycastlePqcCryptoXmssBDS_validate(OrgBouncycastlePqcCryptoXmssBDS *self) {
  
#line 469
  if (self->authenticationPath_ == nil) {
    
#line 471
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"authenticationPath == null");
  }
  if (self->retain__ == nil) {
    
#line 475
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"retain == null");
  }
  if (self->stack_ == nil) {
    
#line 479
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"stack == null");
  }
  if (self->treeHashInstances_ == nil) {
    
#line 483
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"treeHashInstances == null");
  }
  if (self->keep_ == nil) {
    
#line 487
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"keep == null");
  }
  if (!OrgBouncycastlePqcCryptoXmssXMSSUtil_isIndexValidWithInt_withLong_(self->treeHeight_, self->index_)) {
    
#line 491
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"index in BDS state out of bounds");
  }
}


#line 536
void OrgBouncycastlePqcCryptoXmssBDS_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcCryptoXmssBDS *self, JavaIoObjectInputStream *inArg) {
  
#line 540
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 542
  if ([inArg available] != 0) {
    
#line 544
    self->maxIndex_ = [inArg readInt];
  }
  else {
    
#line 548
    self->maxIndex_ = (JreLShift32(1, self->treeHeight_)) - 1;
  }
  if (self->maxIndex_ > ((JreLShift32(1, self->treeHeight_)) - 1) || self->index_ > (self->maxIndex_ + 1) || [inArg available] != 0) {
    
#line 552
    @throw new_JavaIoIOException_initWithNSString_(@"inconsistent BDS data detected");
  }
}


#line 556
void OrgBouncycastlePqcCryptoXmssBDS_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcCryptoXmssBDS *self, JavaIoObjectOutputStream *outArg) {
  
#line 560
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 562
  [outArg writeIntWithInt:self->maxIndex_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssBDS)

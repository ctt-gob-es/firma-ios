//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/DigestUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssDigestUtil")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssDigestUtil
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssDigestUtil 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssDigestUtil 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssDigestUtil

#if !defined (OrgBouncycastlePqcCryptoXmssDigestUtil_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssDigestUtil || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssDigestUtil))
#define OrgBouncycastlePqcCryptoXmssDigestUtil_

@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@protocol OrgBouncycastleCryptoDigest;

@interface OrgBouncycastlePqcCryptoXmssDigestUtil : NSObject

#pragma mark Public

+ (jint)getDigestSizeWithOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

+ (id<OrgBouncycastleCryptoDigest>)getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (NSString *)getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getDigestOIDWithNSString:(NSString *)name;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastlePqcCryptoXmssDigestUtil)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssDigestUtil_initPackagePrivate(OrgBouncycastlePqcCryptoXmssDigestUtil *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssDigestUtil *new_OrgBouncycastlePqcCryptoXmssDigestUtil_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssDigestUtil *create_OrgBouncycastlePqcCryptoXmssDigestUtil_initPackagePrivate(void);

FOUNDATION_EXPORT id<OrgBouncycastleCryptoDigest> OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT NSString *OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestOIDWithNSString_(NSString *name);

FOUNDATION_EXPORT jint OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestSizeWithOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssDigestUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssDigestUtil")

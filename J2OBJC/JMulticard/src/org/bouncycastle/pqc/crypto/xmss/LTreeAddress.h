//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/LTreeAddress.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssLTreeAddress")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssLTreeAddress
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssLTreeAddress 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssLTreeAddress 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssLTreeAddress

#if !defined (OrgBouncycastlePqcCryptoXmssLTreeAddress_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssLTreeAddress || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssLTreeAddress))
#define OrgBouncycastlePqcCryptoXmssLTreeAddress_

#define RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSAddress 1
#define INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSAddress 1
#include "org/bouncycastle/pqc/crypto/xmss/XMSSAddress.h"

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder;
@class OrgBouncycastlePqcCryptoXmssXMSSAddress_Builder;

/*!
 @brief L-tree address.
 */
@interface OrgBouncycastlePqcCryptoXmssLTreeAddress : OrgBouncycastlePqcCryptoXmssXMSSAddress

#pragma mark Protected

- (jint)getLTreeAddress;

- (jint)getTreeHeight;

- (jint)getTreeIndex;

- (IOSByteArray *)toByteArray;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder:(OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)builder;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSAddress_Builder:(OrgBouncycastlePqcCryptoXmssXMSSAddress_Builder *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssLTreeAddress)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssLTreeAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(OrgBouncycastlePqcCryptoXmssLTreeAddress *self, OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssLTreeAddress *new_OrgBouncycastlePqcCryptoXmssLTreeAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssLTreeAddress *create_OrgBouncycastlePqcCryptoXmssLTreeAddress_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_(OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *builder);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssLTreeAddress)

#endif

#if !defined (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssLTreeAddress || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder))
#define OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_

#define RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSAddress 1
#define INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSAddress_Builder 1
#include "org/bouncycastle/pqc/crypto/xmss/XMSSAddress.h"

@class OrgBouncycastlePqcCryptoXmssXMSSAddress;

@interface OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder : OrgBouncycastlePqcCryptoXmssXMSSAddress_Builder

#pragma mark Protected

- (instancetype)init;

- (OrgBouncycastlePqcCryptoXmssXMSSAddress *)build;

- (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)getThis;

- (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withKeyAndMaskWithInt:(jint)arg0;

- (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withLayerAddressWithInt:(jint)arg0;

- (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withLTreeAddressWithInt:(jint)val;

- (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withTreeAddressWithLong:(jlong)arg0;

- (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withTreeHeightWithInt:(jint)val;

- (OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *)withTreeIndexWithInt:(jint)val;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init(OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *new_OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder *create_OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssLTreeAddress_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssLTreeAddress")

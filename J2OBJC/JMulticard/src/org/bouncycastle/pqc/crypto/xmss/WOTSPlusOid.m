//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/WOTSPlusOid.java
//

#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/bouncycastle/pqc/crypto/xmss/WOTSPlusOid.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/WOTSPlusOid must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssWOTSPlusOid () {
 @public
  /*!
   @brief OID.
   */
  jint oid_;
  /*!
   @brief String representation of OID.
   */
  NSString *stringRepresentation_;
}

/*!
 @brief Constructor...
 @param oid OID.
 @param stringRepresentation String representation of OID.
 */
- (instancetype)initPackagePrivateWithInt:(jint)oid
                             withNSString:(NSString *)stringRepresentation;

/*!
 @brief Create a key based on parameters.
 @param algorithmName Algorithm name.
 @param winternitzParameter Winternitz Parameter.
 @return String representation of parameters for lookup table.
 */
+ (NSString *)createKeyWithNSString:(NSString *)algorithmName
                            withInt:(jint)digestSize
                            withInt:(jint)winternitzParameter
                            withInt:(jint)len;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssWOTSPlusOid, stringRepresentation_, NSString *)

/*!
 @brief XMSS OID lookup table.
 */
inline id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssWOTSPlusOid_get_oidLookupTable(void);
static id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssWOTSPlusOid_oidLookupTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoXmssWOTSPlusOid, oidLookupTable, id<JavaUtilMap>)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_(OrgBouncycastlePqcCryptoXmssWOTSPlusOid *self, jint oid, NSString *stringRepresentation);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssWOTSPlusOid *new_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_(jint oid, NSString *stringRepresentation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssWOTSPlusOid *create_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_(jint oid, NSString *stringRepresentation);

__attribute__((unused)) static NSString *OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(NSString *algorithmName, jint digestSize, jint winternitzParameter, jint len);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/WOTSPlusOid.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcCryptoXmssWOTSPlusOid)


#line 10
@implementation OrgBouncycastlePqcCryptoXmssWOTSPlusOid


#line 44
- (instancetype)initPackagePrivateWithInt:(jint)oid
                             withNSString:(NSString *)stringRepresentation {
  OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_(self, oid, stringRepresentation);
  return self;
}


#line 58
+ (OrgBouncycastlePqcCryptoXmssWOTSPlusOid *)lookupWithNSString:(NSString *)algorithmName
                                                        withInt:(jint)digestSize
                                                        withInt:(jint)winternitzParameter
                                                        withInt:(jint)len {
  return OrgBouncycastlePqcCryptoXmssWOTSPlusOid_lookupWithNSString_withInt_withInt_withInt_(algorithmName, digestSize, winternitzParameter, len);
}


#line 74
+ (NSString *)createKeyWithNSString:(NSString *)algorithmName
                            withInt:(jint)digestSize
                            withInt:(jint)winternitzParameter
                            withInt:(jint)len {
  return OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(algorithmName, digestSize, winternitzParameter, len);
}


#line 88
- (jint)getOid {
  
#line 91
  return oid_;
}

- (NSString *)description {
  
#line 97
  return stringRepresentation_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssWOTSPlusOid;", 0xc, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 3, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithInt:withNSString:);
  methods[1].selector = @selector(lookupWithNSString:withInt:withInt:withInt:);
  methods[2].selector = @selector(createKeyWithNSString:withInt:withInt:withInt:);
  methods[3].selector = @selector(getOid);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oidLookupTable", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 5, 6, -1 },
    { "oid_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "stringRepresentation_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILNSString;", "lookup", "LNSString;III", "createKey", "toString", &OrgBouncycastlePqcCryptoXmssWOTSPlusOid_oidLookupTable, "Ljava/util/Map<Ljava/lang/String;Lorg/bouncycastle/pqc/crypto/xmss/WOTSPlusOid;>;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssWOTSPlusOid = { "WOTSPlusOid", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x10, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssWOTSPlusOid;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcCryptoXmssWOTSPlusOid class]) {
    {
      
#line 21
      id<JavaUtilMap> map = new_JavaUtilHashMap_init();
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67) withId:new_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_((jint) 0x01000001, @"WOTSP_SHA2-256_W16")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131) withId:new_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_((jint) 0x02000002, @"WOTSP_SHA2-512_W16")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67) withId:new_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_((jint) 0x03000003, @"WOTSP_SHAKE128_W16")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131) withId:new_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_((jint) 0x04000004, @"WOTSP_SHAKE256_W16")];
      OrgBouncycastlePqcCryptoXmssWOTSPlusOid_oidLookupTable = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(map);
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcCryptoXmssWOTSPlusOid)
  }
}

@end


#line 44
void OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_(OrgBouncycastlePqcCryptoXmssWOTSPlusOid *self, jint oid, NSString *stringRepresentation) {
  NSObject_init(self);
  
#line 47
  self->oid_ = oid;
  self->stringRepresentation_ = stringRepresentation;
}


#line 44
OrgBouncycastlePqcCryptoXmssWOTSPlusOid *new_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_(jint oid, NSString *stringRepresentation) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssWOTSPlusOid, initPackagePrivateWithInt_withNSString_, oid, stringRepresentation)
}


#line 44
OrgBouncycastlePqcCryptoXmssWOTSPlusOid *create_OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initPackagePrivateWithInt_withNSString_(jint oid, NSString *stringRepresentation) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssWOTSPlusOid, initPackagePrivateWithInt_withNSString_, oid, stringRepresentation)
}


#line 58
OrgBouncycastlePqcCryptoXmssWOTSPlusOid *OrgBouncycastlePqcCryptoXmssWOTSPlusOid_lookupWithNSString_withInt_withInt_withInt_(NSString *algorithmName, jint digestSize, jint winternitzParameter, jint len) {
  OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initialize();
  if (algorithmName == nil) {
    
#line 62
    @throw new_JavaLangNullPointerException_initWithNSString_(@"algorithmName == null");
  }
  return [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssWOTSPlusOid_oidLookupTable)) getWithId:OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(algorithmName, digestSize, winternitzParameter, len)];
}


#line 74
NSString *OrgBouncycastlePqcCryptoXmssWOTSPlusOid_createKeyWithNSString_withInt_withInt_withInt_(NSString *algorithmName, jint digestSize, jint winternitzParameter, jint len) {
  OrgBouncycastlePqcCryptoXmssWOTSPlusOid_initialize();
  if (algorithmName == nil) {
    
#line 78
    @throw new_JavaLangNullPointerException_initWithNSString_(@"algorithmName == null");
  }
  return JreStrcat("$CICICI", algorithmName, '-', digestSize, '-', winternitzParameter, '-', len);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssWOTSPlusOid)

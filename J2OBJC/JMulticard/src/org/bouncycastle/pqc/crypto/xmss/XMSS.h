//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSS.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSS")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSS
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSS 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSS 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSS

#if !defined (OrgBouncycastlePqcCryptoXmssXMSS_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSS || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssXMSS))
#define OrgBouncycastlePqcCryptoXmssXMSS_

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcCryptoXmssOTSHashAddress;
@class OrgBouncycastlePqcCryptoXmssWOTSPlus;
@class OrgBouncycastlePqcCryptoXmssWOTSPlusSignature;
@class OrgBouncycastlePqcCryptoXmssXMSSParameters;
@class OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters;
@class OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters;

/*!
 @brief XMSS.
 */
@interface OrgBouncycastlePqcCryptoXmssXMSS : NSObject

#pragma mark Public

/*!
 @brief XMSS constructor...
 @param params XMSSParameters.
 */
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:(OrgBouncycastlePqcCryptoXmssXMSSParameters *)params
                                      withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)prng;

/*!
 @brief Export XMSS private key.
 @return XMSS private key.
 */
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)exportPrivateKey;

/*!
 @brief Export XMSS public key.
 @return XMSS public key.
 */
- (OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *)exportPublicKey;

/*!
 @brief Generate a new XMSS private key / public key pair.
 */
- (void)generateKeys;

/*!
 @brief Getter XMSS index.
 @return Index.
 */
- (jint)getIndex;

/*!
 @brief Getter XMSS params.
 @return XMSS params.
 */
- (OrgBouncycastlePqcCryptoXmssXMSSParameters *)getParams;

- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)getPrivateKey;

/*!
 @brief Getter XMSS public seed.
 @return Public seed.
 */
- (IOSByteArray *)getPublicSeed;

/*!
 @brief Getter XMSS root.
 @return Root of binary tree.
 */
- (IOSByteArray *)getRoot;

/*!
 @brief Import XMSS private key / public key pair.
 @param privateKey XMSS private key.
 @param publicKey XMSS public key.
 */
- (void)importStateWithByteArray:(IOSByteArray *)privateKey
                   withByteArray:(IOSByteArray *)publicKey;

- (void)importStateWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters:(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)privateKey
                    withOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters:(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *)publicKey;

/*!
 @brief Sign message.
 @param message Message to sign.
 @return XMSS signature on digest of message.
 */
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)message;

/*!
 @brief Verify an XMSS signature.
 @param message Message.
 @param signature XMSS signature.
 @param publicKey XMSS public key.
 @return true if signature is valid false else.
 @throw ParseException
 */
- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                           withByteArray:(IOSByteArray *)signature
                           withByteArray:(IOSByteArray *)publicKey;

#pragma mark Protected

/*!
 @brief Getter WOTS+.
 @return WOTS+ instance.
 */
- (OrgBouncycastlePqcCryptoXmssWOTSPlus *)getWOTSPlus;

- (void)setIndexWithInt:(jint)index;

- (void)setPublicSeedWithByteArray:(IOSByteArray *)publicSeed;

- (void)setRootWithByteArray:(IOSByteArray *)root;

/*!
 @brief Generate a WOTS+ signature on a message without the corresponding
  authentication path
 @param messageDigest Message digest of length n.
 @param otsHashAddress OTS hash address.
 @return XMSS signature.
 */
- (OrgBouncycastlePqcCryptoXmssWOTSPlusSignature *)wotsSignWithByteArray:(IOSByteArray *)messageDigest
                          withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssXMSS)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssXMSS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoXmssXMSS *self, OrgBouncycastlePqcCryptoXmssXMSSParameters *params, JavaSecuritySecureRandom *prng);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSS *new_OrgBouncycastlePqcCryptoXmssXMSS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, JavaSecuritySecureRandom *prng) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSS *create_OrgBouncycastlePqcCryptoXmssXMSS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params, JavaSecuritySecureRandom *prng);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssXMSS)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSS")

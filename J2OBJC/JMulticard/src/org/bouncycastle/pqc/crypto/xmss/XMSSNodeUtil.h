//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSNodeUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil

#if !defined (OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil))
#define OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_

@class OrgBouncycastlePqcCryptoXmssLTreeAddress;
@class OrgBouncycastlePqcCryptoXmssWOTSPlus;
@class OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters;
@class OrgBouncycastlePqcCryptoXmssXMSSAddress;
@class OrgBouncycastlePqcCryptoXmssXMSSNode;

@interface OrgBouncycastlePqcCryptoXmssXMSSNodeUtil : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

/*!
 @brief Compresses a WOTS+ public key to a single n-byte string.
 @param publicKey WOTS+ public key to compress.
 @param address Address.
 @return Compressed n-byte string of public key.
 */
+ (OrgBouncycastlePqcCryptoXmssXMSSNode *)lTreeWithOrgBouncycastlePqcCryptoXmssWOTSPlus:(OrgBouncycastlePqcCryptoXmssWOTSPlus *)wotsPlus
                            withOrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters:(OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *)publicKey
                                           withOrgBouncycastlePqcCryptoXmssLTreeAddress:(OrgBouncycastlePqcCryptoXmssLTreeAddress *)address;

/*!
 @brief Randomization of nodes in binary tree.
 @param left Left node.
 @param right Right node.
 @param address Address.
 @return Randomized hash of parent of left / right node.
 */
+ (OrgBouncycastlePqcCryptoXmssXMSSNode *)randomizeHashWithOrgBouncycastlePqcCryptoXmssWOTSPlus:(OrgBouncycastlePqcCryptoXmssWOTSPlus *)wotsPlus
                                                       withOrgBouncycastlePqcCryptoXmssXMSSNode:(OrgBouncycastlePqcCryptoXmssXMSSNode *)left
                                                       withOrgBouncycastlePqcCryptoXmssXMSSNode:(OrgBouncycastlePqcCryptoXmssXMSSNode *)right
                                                    withOrgBouncycastlePqcCryptoXmssXMSSAddress:(OrgBouncycastlePqcCryptoXmssXMSSAddress *)address;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssXMSSNodeUtil)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_initPackagePrivate(OrgBouncycastlePqcCryptoXmssXMSSNodeUtil *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSNodeUtil *new_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSNodeUtil *create_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_initPackagePrivate(void);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSNode *OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_lTreeWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withOrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters_withOrgBouncycastlePqcCryptoXmssLTreeAddress_(OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *publicKey, OrgBouncycastlePqcCryptoXmssLTreeAddress *address);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSNode *OrgBouncycastlePqcCryptoXmssXMSSNodeUtil_randomizeHashWithOrgBouncycastlePqcCryptoXmssWOTSPlus_withOrgBouncycastlePqcCryptoXmssXMSSNode_withOrgBouncycastlePqcCryptoXmssXMSSNode_withOrgBouncycastlePqcCryptoXmssXMSSAddress_(OrgBouncycastlePqcCryptoXmssWOTSPlus *wotsPlus, OrgBouncycastlePqcCryptoXmssXMSSNode *left, OrgBouncycastlePqcCryptoXmssXMSSNode *right, OrgBouncycastlePqcCryptoXmssXMSSAddress *address);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssXMSSNodeUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSNodeUtil")

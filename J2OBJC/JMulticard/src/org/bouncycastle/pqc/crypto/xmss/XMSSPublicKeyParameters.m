//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPublicKeyParameters.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSOid.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSUtil.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/XMSSPublicKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters () {
 @public
  /*!
   @brief XMSS parameters object.
   */
  OrgBouncycastlePqcCryptoXmssXMSSParameters *params_;
  jint oid_;
  IOSByteArray *root_;
  IOSByteArray *publicSeed_;
}

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder:(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters, params_, OrgBouncycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters, root_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters, publicSeed_, IOSByteArray *)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *self, OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *builder);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *new_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *create_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *builder);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters__Annotations$0(void);

@interface OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder () {
 @public
  OrgBouncycastlePqcCryptoXmssXMSSParameters *params_;
  IOSByteArray *root_;
  IOSByteArray *publicSeed_;
  IOSByteArray *publicKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder, params_, OrgBouncycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder, root_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder, publicSeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder, publicKey_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPublicKeyParameters.java"


#line 11
@implementation OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters


#line 24
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder:(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *)builder {
  OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(self, builder);
  return self;
}


#line 100
- (IOSByteArray *)getEncoded {
  
#line 104
  return [self toByteArray];
}


#line 149
- (IOSByteArray *)toByteArray {
  
#line 154
  jint n = [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params_)) getTreeDigestSize];
  jint oidSize = 4;
  jint rootSize = n;
  jint publicSeedSize = n;
  
#line 159
  IOSByteArray *out;
  jint position = 0;
  
#line 162
  if (oid_ != 0) {
    
#line 164
    out = [IOSByteArray newArrayWithLength:oidSize + rootSize + publicSeedSize];
    OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(oid_, out, position);
    position += oidSize;
  }
  else {
    
#line 170
    out = [IOSByteArray newArrayWithLength:rootSize + publicSeedSize];
  }
  
#line 173
  OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, root_, position);
  position += rootSize;
  
#line 176
  OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, publicSeed_, position);
  return out;
}


#line 180
- (IOSByteArray *)getRoot {
  
#line 182
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(root_);
}


#line 185
- (IOSByteArray *)getPublicSeed {
  
#line 187
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(publicSeed_);
}


#line 190
- (OrgBouncycastlePqcCryptoXmssXMSSParameters *)getParameters {
  
#line 192
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder:);
  methods[1].selector = @selector(getEncoded);
  methods[2].selector = @selector(toByteArray);
  methods[3].selector = @selector(getRoot);
  methods[4].selector = @selector(getPublicSeed);
  methods[5].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "oid_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder;", "LJavaIoIOException;", (void *)&OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters__Annotations$0 };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters = { "XMSSPublicKeyParameters", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 6, 4, -1, 0, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters;
}

@end


#line 24
void OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *self, OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *builder) {
  OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_initWithBoolean_withNSString_(self,
#line 26
  false, [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(((OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk(builder))->params_)) getTreeDigest]);
  self->params_ = builder->params_;
  if (self->params_ == nil) {
    
#line 30
    @throw new_JavaLangNullPointerException_initWithNSString_(@"params == null");
  }
  jint n = [self->params_ getTreeDigestSize];
  IOSByteArray *publicKey = builder->publicKey_;
  if (publicKey != nil) {
    
#line 37
    jint oidSize = 4;
    jint rootSize = n;
    jint publicSeedSize = n;
    
#line 41
    jint position = 0;
    
#line 43
    if (publicKey->size_ == rootSize + publicSeedSize) {
      
#line 45
      self->oid_ = 0;
    }
    else if (publicKey->size_ == oidSize + rootSize + publicSeedSize) {
      
#line 49
      self->oid_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(publicKey, 0);
      position += oidSize;
    }
    else {
      
#line 54
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"public key has wrong size");
    }
    self->root_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(publicKey, position, rootSize);
    position += rootSize;
    self->publicSeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(publicKey, position, publicSeedSize);
  }
  else {
    
#line 63
    if ([self->params_ getOid] != nil) {
      
#line 65
      self->oid_ = [((id<OrgBouncycastlePqcCryptoXmssXMSSOid>) nil_chk([self->params_ getOid])) getOid];
    }
    else {
      
#line 69
      self->oid_ = 0;
    }
    IOSByteArray *tmpRoot = builder->root_;
    if (tmpRoot != nil) {
      
#line 74
      if (tmpRoot->size_ != n) {
        
#line 76
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"length of root must be equal to length of digest");
      }
      self->root_ = tmpRoot;
    }
    else {
      
#line 82
      self->root_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpPublicSeed = builder->publicSeed_;
    if (tmpPublicSeed != nil) {
      
#line 87
      if (tmpPublicSeed->size_ != n) {
        
#line 89
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"length of publicSeed must be equal to length of digest");
      }
      self->publicSeed_ = tmpPublicSeed;
    }
    else {
      
#line 95
      self->publicSeed_ = [IOSByteArray newArrayWithLength:n];
    }
  }
}


#line 24
OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *new_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *builder) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters, initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_, builder)
}


#line 24
OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *create_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *builder) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters, initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_, builder)
}

IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPublicKeyParameters.java"


#line 107
@implementation OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder


#line 117
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:(OrgBouncycastlePqcCryptoXmssXMSSParameters *)params {
  OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(self, params);
  return self;
}

- (OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *)withRootWithByteArray:(IOSByteArray *)val {
  
#line 124
  root_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 128
- (OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *)withPublicSeedWithByteArray:(IOSByteArray *)val {
  
#line 130
  publicSeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 134
- (OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *)withPublicKeyWithByteArray:(IOSByteArray *)val {
  
#line 136
  publicKey_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 140
- (OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *)build {
  
#line 142
  return new_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder;", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:);
  methods[1].selector = @selector(withRootWithByteArray:);
  methods[2].selector = @selector(withPublicSeedWithByteArray:);
  methods[3].selector = @selector(withPublicKeyWithByteArray:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKey_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", "withRoot", "[B", "withPublicSeed", "withPublicKey", "LOrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder = { "Builder", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x9, 5, 4, 5, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder;
}

@end


#line 117
void OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *self, OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  NSObject_init(self);
  self->root_ =
#line 113
  nil;
  self->publicSeed_ = nil;
  self->publicKey_ = nil;
  
#line 119
  self->params_ = params;
}


#line 117
OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *new_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}


#line 117
OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *create_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder)

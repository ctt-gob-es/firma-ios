//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/DefaultXMSSMTOid.java
//

#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/bouncycastle/pqc/crypto/xmss/DefaultXMSSMTOid.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/DefaultXMSSMTOid must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid () {
 @public
  /*!
   @brief OID.
   */
  jint oid_;
  /*!
   @brief String representation of OID.
   */
  NSString *stringRepresentation_;
}

/*!
 @brief Constructor...
 @param oid OID.
 @param stringRepresentation String representation of OID.
 */
- (instancetype)initWithInt:(jint)oid
               withNSString:(NSString *)stringRepresentation;

/*!
 @brief Create a key based on parameters.
 @param algorithmName Algorithm name.
 @param winternitzParameter Winternitz Parameter.
 @param height Binary tree height.
 @return String representation of parameters for lookup table.
 */
+ (NSString *)createKeyWithNSString:(NSString *)algorithmName
                            withInt:(jint)digestSize
                            withInt:(jint)winternitzParameter
                            withInt:(jint)len
                            withInt:(jint)height
                            withInt:(jint)layers;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid, stringRepresentation_, NSString *)

/*!
 @brief XMSS^MT OID lookup table.
 */
inline id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_get_oidLookupTable(void);
static id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_oidLookupTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid, oidLookupTable, id<JavaUtilMap>)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *self, jint oid, NSString *stringRepresentation);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(jint oid, NSString *stringRepresentation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *create_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(jint oid, NSString *stringRepresentation);

__attribute__((unused)) static NSString *OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(NSString *algorithmName, jint digestSize, jint winternitzParameter, jint len, jint height, jint layers);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/DefaultXMSSMTOid.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid)


#line 10
@implementation OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid


#line 104
- (instancetype)initWithInt:(jint)oid
               withNSString:(NSString *)stringRepresentation {
  OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(self, oid, stringRepresentation);
  return self;
}


#line 118
+ (OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *)lookupWithNSString:(NSString *)algorithmName
                                                             withInt:(jint)digestSize
                                                             withInt:(jint)winternitzParameter
                                                             withInt:(jint)len
                                                             withInt:(jint)height
                                                             withInt:(jint)layers {
  return OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_lookupWithNSString_withInt_withInt_withInt_withInt_withInt_(algorithmName, digestSize, winternitzParameter, len, height, layers);
}


#line 136
+ (NSString *)createKeyWithNSString:(NSString *)algorithmName
                            withInt:(jint)digestSize
                            withInt:(jint)winternitzParameter
                            withInt:(jint)len
                            withInt:(jint)height
                            withInt:(jint)layers {
  return OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(algorithmName, digestSize, winternitzParameter, len, height, layers);
}


#line 152
- (jint)getOid {
  
#line 155
  return oid_;
}

- (NSString *)description {
  
#line 161
  return stringRepresentation_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 3, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withNSString:);
  methods[1].selector = @selector(lookupWithNSString:withInt:withInt:withInt:withInt:withInt:);
  methods[2].selector = @selector(createKeyWithNSString:withInt:withInt:withInt:withInt:withInt:);
  methods[3].selector = @selector(getOid);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oidLookupTable", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 5, 6, -1 },
    { "oid_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "stringRepresentation_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILNSString;", "lookup", "LNSString;IIIII", "createKey", "toString", &OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_oidLookupTable, "Ljava/util/Map<Ljava/lang/String;Lorg/bouncycastle/pqc/crypto/xmss/DefaultXMSSMTOid;>;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid = { "DefaultXMSSMTOid", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid class]) {
    {
      
#line 21
      id<JavaUtilMap> map = new_JavaUtilHashMap_init();
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 20, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 23
      (jint) 0x00000001, @"XMSSMT_SHA2_20/2_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 20, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 25
      (jint) 0x00000002, @"XMSSMT_SHA2_20/4_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 40, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 27
      (jint) 0x00000003, @"XMSSMT_SHA2_40/2_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 40, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 29
      (jint) 0x00000004, @"XMSSMT_SHA2_40/4_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 40, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 31
      (jint) 0x00000005, @"XMSSMT_SHA2_40/8_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 60, 8) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 33
      (jint) 0x00000006, @"XMSSMT_SHA2_60/3_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 60, 6) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 35
      (jint) 0x00000007, @"XMSSMT_SHA2_60/6_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-256", 32, 16, 67, 60, 12) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 37
      (jint) 0x00000008, @"XMSSMT_SHA2_60/12_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 20, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 39
      (jint) 0x00000009, @"XMSSMT_SHA2_20/2_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 20, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 41
      (jint) 0x0000000a, @"XMSSMT_SHA2_20/4_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 40, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 43
      (jint) 0x0000000b, @"XMSSMT_SHA2_40/2_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 40, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 45
      (jint) 0x0000000c, @"XMSSMT_SHA2_40/4_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 40, 8) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 47
      (jint) 0x0000000d, @"XMSSMT_SHA2_40/8_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 60, 3) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 49
      (jint) 0x0000000e, @"XMSSMT_SHA2_60/3_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 60, 6) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 51
      (jint) 0x0000000f, @"XMSSMT_SHA2_60/6_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHA-512", 64, 16, 131, 60, 12) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 53
      (jint) 0x00000010, @"XMSSMT_SHA2_60/12_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 20, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 55
      (jint) 0x00000011, @"XMSSMT_SHAKE_20/2_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 20, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 57
      (jint) 0x00000012, @"XMSSMT_SHAKE_20/4_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 40, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 59
      (jint) 0x00000013, @"XMSSMT_SHAKE_40/2_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 40, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 61
      (jint) 0x00000014, @"XMSSMT_SHAKE_40/4_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 40, 8) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 63
      (jint) 0x00000015, @"XMSSMT_SHAKE_40/8_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 60, 3) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 65
      (jint) 0x00000016, @"XMSSMT_SHAKE_60/3_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 60, 6) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 67
      (jint) 0x00000017, @"XMSSMT_SHAKE_60/6_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE128", 32, 16, 67, 60, 12) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 69
      (jint) 0x00000018, @"XMSSMT_SHAKE_60/12_256")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 20, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 71
      (jint) 0x00000019, @"XMSSMT_SHAKE_20/2_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 20, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 73
      (jint) 0x0000001a, @"XMSSMT_SHAKE_20/4_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 40, 2) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 75
      (jint) 0x0000001b, @"XMSSMT_SHAKE_40/2_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 40, 4) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 77
      (jint) 0x0000001c, @"XMSSMT_SHAKE_40/4_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 40, 8) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 79
      (jint) 0x0000001d, @"XMSSMT_SHAKE_40/8_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 60, 3) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 81
      (jint) 0x0000001e, @"XMSSMT_SHAKE_60/3_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 60, 6) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 83
      (jint) 0x0000001f, @"XMSSMT_SHAKE_60/6_512")];
      (void) [map putWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(@"SHAKE256", 64, 16, 131, 60, 12) withId:new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(
#line 85
      (jint) 0x00000020, @"XMSSMT_SHAKE_60/12_512")];
      OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_oidLookupTable = JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(map);
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid)
  }
}

@end


#line 104
void OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *self, jint oid, NSString *stringRepresentation) {
  NSObject_init(self);
  self->oid_ = oid;
  self->stringRepresentation_ = stringRepresentation;
}


#line 104
OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *new_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(jint oid, NSString *stringRepresentation) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid, initWithInt_withNSString_, oid, stringRepresentation)
}


#line 104
OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *create_OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initWithInt_withNSString_(jint oid, NSString *stringRepresentation) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid, initWithInt_withNSString_, oid, stringRepresentation)
}


#line 118
OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid *OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_lookupWithNSString_withInt_withInt_withInt_withInt_withInt_(NSString *algorithmName, jint digestSize, jint winternitzParameter, jint len, jint height, jint layers) {
  OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initialize();
  
#line 121
  if (algorithmName == nil) {
    
#line 123
    @throw new_JavaLangNullPointerException_initWithNSString_(@"algorithmName == null");
  }
  return [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_oidLookupTable)) getWithId:OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(algorithmName, digestSize, winternitzParameter, len, height, layers)];
}


#line 136
NSString *OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_createKeyWithNSString_withInt_withInt_withInt_withInt_withInt_(NSString *algorithmName, jint digestSize, jint winternitzParameter, jint len, jint height, jint layers) {
  OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid_initialize();
  
#line 139
  if (algorithmName == nil) {
    
#line 141
    @throw new_JavaLangNullPointerException_initWithNSString_(@"algorithmName == null");
  }
  
#line 144
  return JreStrcat("$CICICICICI", algorithmName, '-', digestSize, '-', winternitzParameter, '-', len, '-', height, '-', layers);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssDefaultXMSSMTOid)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMT.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMT")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSMT
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMT 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMT 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSMT

#if !defined (OrgBouncycastlePqcCryptoXmssXMSSMT_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMT || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSMT))
#define OrgBouncycastlePqcCryptoXmssXMSSMT_

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcCryptoXmssXMSSMTParameters;
@class OrgBouncycastlePqcCryptoXmssXMSSParameters;

/*!
 @brief XMSS^MT.
 */
@interface OrgBouncycastlePqcCryptoXmssXMSSMT : NSObject

#pragma mark Public

/*!
 @brief XMSSMT constructor...
 @param params XMSSMTParameters.
 */
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters:(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)params
                                        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)prng;

/*!
 @brief Export XMSSMT private key.
 @return XMSSMT private key.
 */
- (IOSByteArray *)exportPrivateKey;

/*!
 @brief Export XMSSMT public key.
 @return XMSSMT public key.
 */
- (IOSByteArray *)exportPublicKey;

/*!
 @brief Generate a new XMSSMT private key / public key pair.
 */
- (void)generateKeys;

/*!
 @brief Getter XMSSMT params.
 @return XMSSMT params.
 */
- (OrgBouncycastlePqcCryptoXmssXMSSMTParameters *)getParams;

/*!
 @brief Getter public seed.
 @return Public seed.
 */
- (IOSByteArray *)getPublicSeed;

/*!
 @brief Import XMSSMT private key / public key pair.
 @param privateKey XMSSMT private key.
 @param publicKey XMSSMT public key.
 */
- (void)importStateWithByteArray:(IOSByteArray *)privateKey
                   withByteArray:(IOSByteArray *)publicKey;

/*!
 @brief Sign message.
 @param message Message to sign.
 @return XMSSMT signature on digest of message.
 */
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)message;

/*!
 @brief Verify an XMSSMT signature.
 @param message Message.
 @param signature XMSSMT signature.
 @param publicKey XMSSMT public key.
 @return true if signature is valid false else.
 @throw ParseException
 */
- (jboolean)verifySignatureWithByteArray:(IOSByteArray *)message
                           withByteArray:(IOSByteArray *)signature
                           withByteArray:(IOSByteArray *)publicKey;

#pragma mark Protected

- (OrgBouncycastlePqcCryptoXmssXMSSParameters *)getXMSS;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssXMSSMT)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssXMSSMT_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoXmssXMSSMT *self, OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, JavaSecuritySecureRandom *prng);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSMT *new_OrgBouncycastlePqcCryptoXmssXMSSMT_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, JavaSecuritySecureRandom *prng) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSMT *create_OrgBouncycastlePqcCryptoXmssXMSSMT_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_withJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoXmssXMSSMTParameters *params, JavaSecuritySecureRandom *prng);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssXMSSMT)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMT")

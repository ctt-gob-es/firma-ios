//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/WOTSPlus.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssWOTSPlus")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssWOTSPlus
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssWOTSPlus 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssWOTSPlus 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssWOTSPlus

#if !defined (OrgBouncycastlePqcCryptoXmssWOTSPlus_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssWOTSPlus || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssWOTSPlus))
#define OrgBouncycastlePqcCryptoXmssWOTSPlus_

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoXmssKeyedHashFunctions;
@class OrgBouncycastlePqcCryptoXmssOTSHashAddress;
@class OrgBouncycastlePqcCryptoXmssWOTSPlusParameters;
@class OrgBouncycastlePqcCryptoXmssWOTSPlusPrivateKeyParameters;
@class OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters;
@class OrgBouncycastlePqcCryptoXmssWOTSPlusSignature;

/*!
 @brief WOTS+.
 */
@interface OrgBouncycastlePqcCryptoXmssWOTSPlus : NSObject

#pragma mark Protected

/*!
 @brief Getter keyed hash functions.
 @return keyed hash functions.
 */
- (OrgBouncycastlePqcCryptoXmssKeyedHashFunctions *)getKhf;

/*!
 @brief Getter parameters.
 @return params.
 */
- (OrgBouncycastlePqcCryptoXmssWOTSPlusParameters *)getParams;

/*!
 @brief Getter private key.
 @return WOTS+ private key.
 */
- (OrgBouncycastlePqcCryptoXmssWOTSPlusPrivateKeyParameters *)getPrivateKey;

/*!
 @brief Getter public seed.
 @return public seed.
 */
- (IOSByteArray *)getPublicSeed;

/*!
 @brief Getter secret key seed.
 @return secret key seed.
 */
- (IOSByteArray *)getSecretKeySeed;

/*!
 @brief Derive WOTS+ secret key for specific index as in XMSS ref impl Andreas
  Huelsing.
 @param otsHashAddress one time hash address.
 @return WOTS+ secret key at index.
 */
- (IOSByteArray *)getWOTSPlusSecretKeyWithByteArray:(IOSByteArray *)secretKeySeed
     withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

#pragma mark Package-Private

/*!
 @brief Constructs a new WOTS+ one-time signature system based on the given WOTS+
  parameters.
 @param params Parameters for WOTSPlus object.
 */
- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters:(OrgBouncycastlePqcCryptoXmssWOTSPlusParameters *)params;

/*!
 @brief Calculates a new public key based on the state of secretKeySeed,
  publicSeed and otsHashAddress.
 @param otsHashAddress OTS hash address for randomization.
 @return WOTS+ public key.
 */
- (OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *)getPublicKeyWithOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

/*!
 @brief Calculates a public key based on digest and signature.
 @param messageDigest The digest that was signed.
 @param signature Signarure on digest.
 @param otsHashAddress OTS hash address for randomization.
 @return WOTS+ public key derived from digest and signature.
 */
- (OrgBouncycastlePqcCryptoXmssWOTSPlusPublicKeyParameters *)getPublicKeyFromSignatureWithByteArray:(IOSByteArray *)messageDigest
                                                  withOrgBouncycastlePqcCryptoXmssWOTSPlusSignature:(OrgBouncycastlePqcCryptoXmssWOTSPlusSignature *)signature
                                                     withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

/*!
 @brief Import keys to WOTS+ instance.
 @param secretKeySeed Secret key seed.
 @param publicSeed Public seed.
 */
- (void)importKeysWithByteArray:(IOSByteArray *)secretKeySeed
                  withByteArray:(IOSByteArray *)publicSeed;

/*!
 @brief Creates a signature for the n-byte messageDigest.
 @param messageDigest Digest to sign.
 @param otsHashAddress OTS hash address for randomization.
 @return WOTS+ signature.
 */
- (OrgBouncycastlePqcCryptoXmssWOTSPlusSignature *)signWithByteArray:(IOSByteArray *)messageDigest
                      withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *)otsHashAddress;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssWOTSPlus)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssWOTSPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(OrgBouncycastlePqcCryptoXmssWOTSPlus *self, OrgBouncycastlePqcCryptoXmssWOTSPlusParameters *params);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssWOTSPlus *new_OrgBouncycastlePqcCryptoXmssWOTSPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(OrgBouncycastlePqcCryptoXmssWOTSPlusParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssWOTSPlus *create_OrgBouncycastlePqcCryptoXmssWOTSPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoXmssWOTSPlusParameters_(OrgBouncycastlePqcCryptoXmssWOTSPlusParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssWOTSPlus)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssWOTSPlus")

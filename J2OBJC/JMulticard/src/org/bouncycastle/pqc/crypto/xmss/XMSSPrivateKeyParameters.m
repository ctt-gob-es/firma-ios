//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/pqc/crypto/xmss/BDS.h"
#include "org/bouncycastle/pqc/crypto/xmss/OTSHashAddress.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSAddress.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSUtil.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters () {
 @public
  /*!
   @brief XMSS parameters object.
   */
  OrgBouncycastlePqcCryptoXmssXMSSParameters *params_;
  /*!
   @brief Secret for the derivation of WOTS+ secret keys.
   */
  IOSByteArray *secretKeySeed_;
  /*!
   @brief Secret for the randomization of message digests during signature
  creation.
   */
  IOSByteArray *secretKeyPRF_;
  /*!
   @brief Public seed for the randomization of hashes.
   */
  IOSByteArray *publicSeed_;
  /*!
   @brief Public root of binary tree.
   */
  IOSByteArray *root_;
  /*!
   @brief BDS state.
   */
  volatile_id bdsState_;
}

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder:(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, params_, OrgBouncycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, secretKeySeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, secretKeyPRF_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, publicSeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, root_, IOSByteArray *)
J2OBJC_VOLATILE_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, bdsState_, OrgBouncycastlePqcCryptoXmssBDS *)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *self, OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *new_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *create_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters__Annotations$0(void);

@interface OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder () {
 @public
  OrgBouncycastlePqcCryptoXmssXMSSParameters *params_;
  jint index_;
  jint maxIndex_;
  IOSByteArray *secretKeySeed_;
  IOSByteArray *secretKeyPRF_;
  IOSByteArray *publicSeed_;
  IOSByteArray *root_;
  OrgBouncycastlePqcCryptoXmssBDS *bdsState_;
  IOSByteArray *privateKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, params_, OrgBouncycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, secretKeySeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, secretKeyPRF_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, publicSeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, root_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, bdsState_, OrgBouncycastlePqcCryptoXmssBDS *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, privateKey_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java"


#line 12
@implementation OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters


#line 43
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder:(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)builder {
  OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(self, builder);
  return self;
}


#line 173
- (jlong)getUsagesRemaining {
  
#line 175
  @synchronized(self) {
    
#line 177
    return [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getMaxIndex] - [self getIndex] + 1;
  }
}


#line 181
- (IOSByteArray *)getEncoded {
  
#line 185
  @synchronized(self) {
    
#line 187
    return JreRetainedLocalValue([self toByteArray]);
  }
}

- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)rollKey {
  
#line 193
  @synchronized(self) {
    
#line 196
    if ([((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getIndex] < [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getMaxIndex]) {
      
#line 198
      (void) JreVolatileStrongAssign(&bdsState_, [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getNextStateWithByteArray:publicSeed_ withByteArray:secretKeySeed_ withOrgBouncycastlePqcCryptoXmssOTSHashAddress:(OrgBouncycastlePqcCryptoXmssOTSHashAddress *) cast_chk([new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() build], [OrgBouncycastlePqcCryptoXmssOTSHashAddress class])]);
    }
    else {
      
#line 202
      (void) JreVolatileStrongAssign(&bdsState_, new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_(params_, [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getMaxIndex], [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getMaxIndex] + 1));
    }
    
#line 205
    return JreRetainedLocalValue(self);
  }
}


#line 209
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)getNextKey {
  
#line 211
  @synchronized(self) {
    
#line 213
    return JreRetainedLocalValue([self extractKeyShardWithInt:1]);
  }
}


#line 225
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)extractKeyShardWithInt:(jint)usageCount {
  
#line 227
  if (usageCount < 1) {
    
#line 229
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"cannot ask for a shard with 0 keys");
  }
  @synchronized(self) {
    
#line 234
    if (usageCount <= [self getUsagesRemaining]) {
      
#line 236
      OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *keyParams = [((OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(params_) withSecretKeySeedWithByteArray:
#line 237
      secretKeySeed_])) withSecretKeyPRFWithByteArray:secretKeyPRF_])) withPublicSeedWithByteArray:
#line 238
      publicSeed_])) withRootWithByteArray:root_])) withIndexWithInt:
#line 239
      [self getIndex]])) withBDSStateWithOrgBouncycastlePqcCryptoXmssBDS:
#line 240
      [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) withMaxIndexWithInt:[((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getIndex] + usageCount - 1 withOrgBouncycastleAsn1ASN1ObjectIdentifier:
#line 241
      [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params_)) getTreeDigestOID]]])) build];
      
#line 243
      if (usageCount == [self getUsagesRemaining]) {
        
#line 245
        (void) JreVolatileStrongAssign(&bdsState_, new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_(params_, [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getMaxIndex], [self getIndex] + usageCount));
      }
      else {
        
#line 250
        OrgBouncycastlePqcCryptoXmssOTSHashAddress *hashAddress = (OrgBouncycastlePqcCryptoXmssOTSHashAddress *) cast_chk([new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() build], [OrgBouncycastlePqcCryptoXmssOTSHashAddress class]);
        for (jint i = 0; i != usageCount; i++) {
          
#line 253
          (void) JreVolatileStrongAssign(&bdsState_, [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getNextStateWithByteArray:publicSeed_ withByteArray:secretKeySeed_ withOrgBouncycastlePqcCryptoXmssOTSHashAddress:hashAddress]);
        }
      }
      
#line 257
      return JreRetainedLocalValue(keyParams);
    }
    else {
      
#line 261
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"usageCount exceeds usages remaining");
    }
  }
}


#line 343
- (IOSByteArray *)toByteArray {
  
#line 347
  @synchronized(self) {
    
#line 350
    jint n = [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params_)) getTreeDigestSize];
    jint indexSize = 4;
    jint secretKeySize = n;
    jint secretKeyPRFSize = n;
    jint publicSeedSize = n;
    jint rootSize = n;
    jint totalSize = indexSize + secretKeySize + secretKeyPRFSize + publicSeedSize + rootSize;
    IOSByteArray *out = [IOSByteArray newArrayWithLength:totalSize];
    jint position = 0;
    
#line 360
    OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_([((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getIndex], out, position);
    position += indexSize;
    
#line 363
    OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, secretKeySeed_, position);
    position += secretKeySize;
    
#line 366
    OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, secretKeyPRF_, position);
    position += secretKeyPRFSize;
    
#line 369
    OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, publicSeed_, position);
    position += publicSeedSize;
    
#line 372
    OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, root_, position);
    
#line 374
    IOSByteArray *bdsStateOut = nil;
    @try {
      
#line 377
      bdsStateOut = OrgBouncycastlePqcCryptoXmssXMSSUtil_serializeWithId_(JreLoadVolatileId(&bdsState_));
    }
    @catch (JavaIoIOException *e) {
      
#line 381
      @throw new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", @"error serializing bds state: ", [e getMessage]));
    }
    
#line 384
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(out, bdsStateOut);
  }
}


#line 388
- (jint)getIndex {
  
#line 390
  return [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&bdsState_))) getIndex];
}


#line 393
- (IOSByteArray *)getSecretKeySeed {
  
#line 395
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(secretKeySeed_);
}


#line 398
- (IOSByteArray *)getSecretKeyPRF {
  
#line 400
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(secretKeyPRF_);
}


#line 403
- (IOSByteArray *)getPublicSeed {
  
#line 405
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(publicSeed_);
}


#line 408
- (IOSByteArray *)getRoot {
  
#line 410
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(root_);
}


#line 413
- (OrgBouncycastlePqcCryptoXmssBDS *)getBDSState {
  
#line 415
  return JreLoadVolatileId(&bdsState_);
}


#line 418
- (OrgBouncycastlePqcCryptoXmssXMSSParameters *)getParameters {
  
#line 420
  return params_;
}

- (void)__javaClone:(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&bdsState_, &original->bdsState_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssBDS;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder:);
  methods[1].selector = @selector(getUsagesRemaining);
  methods[2].selector = @selector(getEncoded);
  methods[3].selector = @selector(rollKey);
  methods[4].selector = @selector(getNextKey);
  methods[5].selector = @selector(extractKeyShardWithInt:);
  methods[6].selector = @selector(toByteArray);
  methods[7].selector = @selector(getIndex);
  methods[8].selector = @selector(getSecretKeySeed);
  methods[9].selector = @selector(getSecretKeyPRF);
  methods[10].selector = @selector(getPublicSeed);
  methods[11].selector = @selector(getRoot);
  methods[12].selector = @selector(getBDSState);
  methods[13].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "secretKeySeed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "secretKeyPRF_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bdsState_", "LOrgBouncycastlePqcCryptoXmssBDS;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", "LJavaIoIOException;", "extractKeyShard", "I", (void *)&OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters__Annotations$0 };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters = { "XMSSPrivateKeyParameters", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 14, 6, -1, 0, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters;
}

@end


#line 43
void OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *self, OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) {
  OrgBouncycastlePqcCryptoXmssXMSSKeyParameters_initWithBoolean_withNSString_(self,
#line 45
  true, [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(((OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *) nil_chk(builder))->params_)) getTreeDigest]);
  self->params_ = builder->params_;
  if (self->params_ == nil) {
    
#line 49
    @throw new_JavaLangNullPointerException_initWithNSString_(@"params == null");
  }
  jint n = [self->params_ getTreeDigestSize];
  IOSByteArray *privateKey = builder->privateKey_;
  if (privateKey != nil) {
    
#line 56
    jint height = [self->params_ getHeight];
    jint indexSize = 4;
    jint secretKeySize = n;
    jint secretKeyPRFSize = n;
    jint publicSeedSize = n;
    jint rootSize = n;
    
#line 68
    jint position = 0;
    jint index = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(privateKey, position);
    if (!OrgBouncycastlePqcCryptoXmssXMSSUtil_isIndexValidWithInt_withLong_(height, index)) {
      
#line 72
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"index out of bounds");
    }
    position += indexSize;
    self->secretKeySeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, secretKeySize);
    position += secretKeySize;
    self->secretKeyPRF_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, secretKeyPRFSize);
    position += secretKeyPRFSize;
    self->publicSeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, publicSeedSize);
    position += publicSeedSize;
    self->root_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, rootSize);
    position += rootSize;
    
#line 84
    IOSByteArray *bdsStateBinary = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(privateKey, position, privateKey->size_ - position);
    @try {
      
#line 87
      OrgBouncycastlePqcCryptoXmssBDS *bdsImport = (OrgBouncycastlePqcCryptoXmssBDS *) cast_chk(OrgBouncycastlePqcCryptoXmssXMSSUtil_deserializeWithByteArray_withIOSClass_(bdsStateBinary, OrgBouncycastlePqcCryptoXmssBDS_class_()), [OrgBouncycastlePqcCryptoXmssBDS class]);
      if ([((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(bdsImport)) getIndex] != index) {
        
#line 90
        @throw new_JavaLangIllegalStateException_initWithNSString_(@"serialized BDS has wrong index");
      }
      (void) JreVolatileStrongAssign(&self->bdsState_, [bdsImport withWOTSDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier:[builder->params_ getTreeDigestOID]]);
    }
    @catch (JavaIoIOException *e) {
      
#line 96
      @throw new_JavaLangIllegalArgumentException_initWithNSString_withJavaLangThrowable_([e getMessage], e);
    }
    @catch (
#line 94
    JavaLangClassNotFoundException *e) {
      
#line 96
      @throw new_JavaLangIllegalArgumentException_initWithNSString_withJavaLangThrowable_([e getMessage], e);
    }
  }
  else {
    
#line 102
    IOSByteArray *tmpSecretKeySeed = builder->secretKeySeed_;
    if (tmpSecretKeySeed != nil) {
      
#line 105
      if (tmpSecretKeySeed->size_ != n) {
        
#line 107
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of secretKeySeed needs to be equal size of digest");
      }
      self->secretKeySeed_ = tmpSecretKeySeed;
    }
    else {
      
#line 113
      self->secretKeySeed_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpSecretKeyPRF = builder->secretKeyPRF_;
    if (tmpSecretKeyPRF != nil) {
      
#line 118
      if (tmpSecretKeyPRF->size_ != n) {
        
#line 120
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of secretKeyPRF needs to be equal size of digest");
      }
      self->secretKeyPRF_ = tmpSecretKeyPRF;
    }
    else {
      
#line 126
      self->secretKeyPRF_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpPublicSeed = builder->publicSeed_;
    if (tmpPublicSeed != nil) {
      
#line 131
      if (tmpPublicSeed->size_ != n) {
        
#line 133
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of publicSeed needs to be equal size of digest");
      }
      self->publicSeed_ = tmpPublicSeed;
    }
    else {
      
#line 139
      self->publicSeed_ = [IOSByteArray newArrayWithLength:n];
    }
    IOSByteArray *tmpRoot = builder->root_;
    if (tmpRoot != nil) {
      
#line 144
      if (tmpRoot->size_ != n) {
        
#line 146
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of root needs to be equal size of digest");
      }
      self->root_ = tmpRoot;
    }
    else {
      
#line 152
      self->root_ = [IOSByteArray newArrayWithLength:n];
    }
    OrgBouncycastlePqcCryptoXmssBDS *tmpBDSState = builder->bdsState_;
    if (tmpBDSState != nil) {
      
#line 157
      (void) JreVolatileStrongAssign(&self->bdsState_, tmpBDSState);
    }
    else
#line 158
    if (builder->index_ < (JreLShift32(1, [self->params_ getHeight])) - 2 && tmpPublicSeed != nil && tmpSecretKeySeed != nil) {
      
#line 160
      (void) JreVolatileStrongAssign(&self->bdsState_, new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withByteArray_withByteArray_withOrgBouncycastlePqcCryptoXmssOTSHashAddress_withInt_(self->params_, tmpPublicSeed, tmpSecretKeySeed, (OrgBouncycastlePqcCryptoXmssOTSHashAddress *) cast_chk([new_OrgBouncycastlePqcCryptoXmssOTSHashAddress_Builder_init() build], [OrgBouncycastlePqcCryptoXmssOTSHashAddress class]), builder->index_));
    }
    else {
      
#line 164
      (void) JreVolatileStrongAssign(&self->bdsState_, new_OrgBouncycastlePqcCryptoXmssBDS_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_withInt_withInt_(self->params_, (JreLShift32(1, [self->params_ getHeight])) - 1, builder->index_));
    }
    if (builder->maxIndex_ >= 0 && builder->maxIndex_ != [((OrgBouncycastlePqcCryptoXmssBDS *) nil_chk(JreLoadVolatileId(&self->bdsState_))) getMaxIndex]) {
      
#line 168
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"maxIndex set but not reflected in state");
    }
  }
}


#line 43
OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *new_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_, builder)
}


#line 43
OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *create_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *builder) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_, builder)
}

IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.java"


#line 266
@implementation OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder


#line 281
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:(OrgBouncycastlePqcCryptoXmssXMSSParameters *)params {
  OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(self, params);
  return self;
}

- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withIndexWithInt:(jint)val {
  
#line 288
  index_ = val;
  return self;
}


#line 292
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withMaxIndexWithInt:(jint)val {
  
#line 294
  maxIndex_ = val;
  return self;
}


#line 298
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withSecretKeySeedWithByteArray:(IOSByteArray *)val {
  
#line 300
  secretKeySeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 304
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withSecretKeyPRFWithByteArray:(IOSByteArray *)val {
  
#line 306
  secretKeyPRF_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 310
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withPublicSeedWithByteArray:(IOSByteArray *)val {
  
#line 312
  publicSeed_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 316
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withRootWithByteArray:(IOSByteArray *)val {
  
#line 318
  root_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 322
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withBDSStateWithOrgBouncycastlePqcCryptoXmssBDS:(OrgBouncycastlePqcCryptoXmssBDS *)valBDS {
  
#line 324
  bdsState_ = valBDS;
  return self;
}


#line 328
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *)withPrivateKeyWithByteArray:(IOSByteArray *)privateKeyVal {
  
#line 330
  privateKey_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(privateKeyVal);
  return self;
}


#line 334
- (OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters *)build {
  
#line 336
  return new_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:);
  methods[1].selector = @selector(withIndexWithInt:);
  methods[2].selector = @selector(withMaxIndexWithInt:);
  methods[3].selector = @selector(withSecretKeySeedWithByteArray:);
  methods[4].selector = @selector(withSecretKeyPRFWithByteArray:);
  methods[5].selector = @selector(withPublicSeedWithByteArray:);
  methods[6].selector = @selector(withRootWithByteArray:);
  methods[7].selector = @selector(withBDSStateWithOrgBouncycastlePqcCryptoXmssBDS:);
  methods[8].selector = @selector(withPrivateKeyWithByteArray:);
  methods[9].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "secretKeySeed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "secretKeyPRF_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicSeed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bdsState_", "LOrgBouncycastlePqcCryptoXmssBDS;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateKey_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", "withIndex", "I", "withMaxIndex", "withSecretKeySeed", "[B", "withSecretKeyPRF", "withPublicSeed", "withRoot", "withBDSState", "LOrgBouncycastlePqcCryptoXmssBDS;", "withPrivateKey", "LOrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder = { "Builder", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x9, 10, 9, 12, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder;
}

@end


#line 281
void OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *self, OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  NSObject_init(self);
  self->index_ =
#line 272
  0;
  self->maxIndex_ = -1;
  self->secretKeySeed_ = nil;
  self->secretKeyPRF_ = nil;
  self->publicSeed_ = nil;
  self->root_ = nil;
  self->bdsState_ = nil;
  self->privateKey_ = nil;
  
#line 283
  self->params_ = params;
}


#line 281
OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *new_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}


#line 281
OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder *create_OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters_Builder)

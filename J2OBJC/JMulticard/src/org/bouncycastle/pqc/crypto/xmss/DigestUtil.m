//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/DigestUtil.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/nist/NISTObjectIdentifiers.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/crypto/Xof.h"
#include "org/bouncycastle/crypto/digests/SHA256Digest.h"
#include "org/bouncycastle/crypto/digests/SHA512Digest.h"
#include "org/bouncycastle/crypto/digests/SHAKEDigest.h"
#include "org/bouncycastle/pqc/crypto/xmss/DigestUtil.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/DigestUtil must be compiled with ARC (-fobjc-arc)"
#endif

inline id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDigestUtil_get_nameToOid(void);
inline id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDigestUtil_set_nameToOid(id<JavaUtilMap> value);
static id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastlePqcCryptoXmssDigestUtil, nameToOid, id<JavaUtilMap>)

inline id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDigestUtil_get_oidToName(void);
inline id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDigestUtil_set_oidToName(id<JavaUtilMap> value);
static id<JavaUtilMap> OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastlePqcCryptoXmssDigestUtil, oidToName, id<JavaUtilMap>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/DigestUtil.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcCryptoXmssDigestUtil)


#line 14
@implementation OrgBouncycastlePqcCryptoXmssDigestUtil


#line 14
- (instancetype)initPackagePrivate {
  OrgBouncycastlePqcCryptoXmssDigestUtil_initPackagePrivate(self);
  return self;
}


#line 32
+ (id<OrgBouncycastleCryptoDigest>)getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 54
+ (NSString *)getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 65
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getDigestOIDWithNSString:(NSString *)name {
  return OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestOIDWithNSString_(name);
}


#line 76
+ (jint)getDigestSizeWithOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest {
  return OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestSizeWithOrgBouncycastleCryptoDigest_(digest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoDigest;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 2, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x8, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[2].selector = @selector(getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[3].selector = @selector(getDigestOIDWithNSString:);
  methods[4].selector = @selector(getDigestSizeWithOrgBouncycastleCryptoDigest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nameToOid", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 7, 8, -1 },
    { "oidToName", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 9, 10, -1 },
  };
  static const void *ptrTable[] = { "getDigest", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getDigestName", "getDigestOID", "LNSString;", "getDigestSize", "LOrgBouncycastleCryptoDigest;", &OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid, "Ljava/util/Map<Ljava/lang/String;Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;>;", &OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName, "Ljava/util/Map<Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssDigestUtil = { "DigestUtil", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x0, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssDigestUtil;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcCryptoXmssDigestUtil class]) {
    OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid = new_JavaUtilHashMap_init();
    OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName = new_JavaUtilHashMap_init();
    {
      
#line 21
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid)) putWithId:@"SHA-256" withId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid)) putWithId:@"SHA-512" withId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid)) putWithId:@"SHAKE128" withId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake128)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid)) putWithId:@"SHAKE256" withId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake256)];
      
#line 26
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName)) putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256) withId:@"SHA-256"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName)) putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512) withId:@"SHA-512"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName)) putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake128) withId:@"SHAKE128"];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName)) putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake256) withId:@"SHAKE256"];
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcCryptoXmssDigestUtil)
  }
}

@end


#line 14
void OrgBouncycastlePqcCryptoXmssDigestUtil_initPackagePrivate(OrgBouncycastlePqcCryptoXmssDigestUtil *self) {
  NSObject_init(self);
}


#line 14
OrgBouncycastlePqcCryptoXmssDigestUtil *new_OrgBouncycastlePqcCryptoXmssDigestUtil_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssDigestUtil, initPackagePrivate)
}


#line 14
OrgBouncycastlePqcCryptoXmssDigestUtil *create_OrgBouncycastlePqcCryptoXmssDigestUtil_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssDigestUtil, initPackagePrivate)
}


#line 32
id<OrgBouncycastleCryptoDigest> OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastlePqcCryptoXmssDigestUtil_initialize();
  if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256)]) {
    
#line 36
    return new_OrgBouncycastleCryptoDigestsSHA256Digest_init();
  }
  if ([oid equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512)]) {
    
#line 40
    return new_OrgBouncycastleCryptoDigestsSHA512Digest_init();
  }
  if ([oid equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake128)]) {
    
#line 44
    return new_OrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(128);
  }
  if ([oid equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake256)]) {
    
#line 48
    return new_OrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(256);
  }
  
#line 51
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"unrecognized digest OID: ", oid));
}


#line 54
NSString *OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastlePqcCryptoXmssDigestUtil_initialize();
  NSString *name = [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_oidToName)) getWithId:oid];
  if (name != nil) {
    
#line 59
    return name;
  }
  
#line 62
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"unrecognized digest oid: ", oid));
}


#line 65
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestOIDWithNSString_(NSString *name) {
  OrgBouncycastlePqcCryptoXmssDigestUtil_initialize();
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoXmssDigestUtil_nameToOid)) getWithId:name];
  if (oid != nil) {
    
#line 70
    return oid;
  }
  
#line 73
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unrecognized digest name: ", name));
}


#line 76
jint OrgBouncycastlePqcCryptoXmssDigestUtil_getDigestSizeWithOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> digest) {
  OrgBouncycastlePqcCryptoXmssDigestUtil_initialize();
  if ([OrgBouncycastleCryptoXof_class_() isInstance:digest]) {
    
#line 80
    return [((id<OrgBouncycastleCryptoDigest>) nil_chk(digest)) getDigestSize] * 2;
  }
  
#line 83
  return [((id<OrgBouncycastleCryptoDigest>) nil_chk(digest)) getDigestSize];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssDigestUtil)

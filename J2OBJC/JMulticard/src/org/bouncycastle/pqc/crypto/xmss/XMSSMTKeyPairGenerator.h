//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSMTKeyPairGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator

#if !defined (OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator || defined(INCLUDE_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator))
#define OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator_

#define RESTRICT_OrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator 1
#define INCLUDE_OrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator 1
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPairGenerator.h"

@class OrgBouncycastleCryptoAsymmetricCipherKeyPair;
@class OrgBouncycastleCryptoKeyGenerationParameters;

/*!
 @brief Key pair generator for XMSS^MT keys.
 */
@interface OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator : NSObject < OrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator >

#pragma mark Public

/*!
 @brief Base constructor...
 */
- (instancetype)init;

/*!
 @brief Generate a new XMSSMT private key / public key pair.
 */
- (OrgBouncycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair;

- (void)init__WithOrgBouncycastleCryptoKeyGenerationParameters:(OrgBouncycastleCryptoKeyGenerationParameters *)param OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator_init(OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *new_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator *create_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoXmssXMSSMTKeyPairGenerator")

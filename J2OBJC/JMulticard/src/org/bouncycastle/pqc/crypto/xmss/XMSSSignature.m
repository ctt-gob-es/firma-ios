//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSSignature.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/List.h"
#include "org/bouncycastle/pqc/crypto/xmss/WOTSPlus.h"
#include "org/bouncycastle/pqc/crypto/xmss/WOTSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/WOTSPlusSignature.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSNode.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSReducedSignature.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSSignature.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSUtil.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/xmss/XMSSSignature must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoXmssXMSSSignature () {
 @public
  jint index_;
  IOSByteArray *random_;
}

- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder:(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)builder;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSSignature, random_, IOSByteArray *)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(OrgBouncycastlePqcCryptoXmssXMSSSignature *self, OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder);

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSSignature *new_OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoXmssXMSSSignature *create_OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSSignature__Annotations$0(void);

@interface OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder () {
 @public
  OrgBouncycastlePqcCryptoXmssXMSSParameters *params_Builder_;
  jint index_;
  IOSByteArray *random_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, params_Builder_, OrgBouncycastlePqcCryptoXmssXMSSParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, random_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSSignature.java"


#line 11
@implementation OrgBouncycastlePqcCryptoXmssXMSSSignature


#line 19
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder:(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)builder {
  OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(self, builder);
  return self;
}


#line 39
- (IOSByteArray *)getEncoded {
  
#line 43
  return [self toByteArray];
}


#line 108
- (IOSByteArray *)toByteArray {
  
#line 113
  jint n = [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getTreeDigestSize];
  jint indexSize = 4;
  jint randomSize = n;
  jint signatureSize = [((OrgBouncycastlePqcCryptoXmssWOTSPlusParameters *) nil_chk([((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getWOTSPlus])) getParams])) getLen] * n;
  jint authPathSize = [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getHeight] * n;
  jint totalSize = indexSize + randomSize + signatureSize + authPathSize;
  IOSByteArray *out = [IOSByteArray newArrayWithLength:totalSize];
  jint position = 0;
  
#line 122
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(index_, out, position);
  position += indexSize;
  
#line 125
  OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, random_, position);
  position += randomSize;
  
#line 128
  IOSObjectArray *signature = [((OrgBouncycastlePqcCryptoXmssWOTSPlusSignature *) nil_chk([self getWOTSPlusSignature])) toByteArray];
  {
    IOSObjectArray *a__ =
#line 129
    signature;
    IOSByteArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSByteArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSByteArray *element = *b__++;
      
#line 130
      OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, element, position);
      position += n;
    }
  }
  for (OrgBouncycastlePqcCryptoXmssXMSSNode * __strong element in nil_chk([self getAuthPath])) {
    IOSByteArray *value = [((OrgBouncycastlePqcCryptoXmssXMSSNode *) nil_chk(element)) getValue];
    OrgBouncycastlePqcCryptoXmssXMSSUtil_copyBytesAtOffsetWithByteArray_withByteArray_withInt_(out, value, position);
    position += n;
  }
  return out;
}


#line 142
- (jint)getIndex {
  
#line 144
  return index_;
}


#line 147
- (IOSByteArray *)getRandom {
  
#line 149
  return OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(random_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder:);
  methods[1].selector = @selector(getEncoded);
  methods[2].selector = @selector(toByteArray);
  methods[3].selector = @selector(getIndex);
  methods[4].selector = @selector(getRandom);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "index_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "random_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;", "LJavaIoIOException;", (void *)&OrgBouncycastlePqcCryptoXmssXMSSSignature__Annotations$0 };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSSignature = { "XMSSSignature", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, 0, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSSignature;
}

@end


#line 19
void OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(OrgBouncycastlePqcCryptoXmssXMSSSignature *self, OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) {
  OrgBouncycastlePqcCryptoXmssXMSSReducedSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSReducedSignature_Builder_(self,
#line 21
  builder);
  self->index_ = ((OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *) nil_chk(builder))->index_;
  jint n = [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([self getParams])) getTreeDigestSize];
  IOSByteArray *tmpRandom = builder->random_;
  if (tmpRandom != nil) {
    
#line 27
    if (tmpRandom->size_ != n) {
      
#line 29
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"size of random needs to be equal to size of digest");
    }
    self->random_ = tmpRandom;
  }
  else {
    
#line 35
    self->random_ = [IOSByteArray newArrayWithLength:n];
  }
}


#line 19
OrgBouncycastlePqcCryptoXmssXMSSSignature *new_OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSSignature, initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_, builder)
}


#line 19
OrgBouncycastlePqcCryptoXmssXMSSSignature *create_OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *builder) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSSignature, initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_, builder)
}

IOSObjectArray *OrgBouncycastlePqcCryptoXmssXMSSSignature__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSSignature)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/xmss/XMSSSignature.java"


#line 46
@implementation OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder


#line 55
- (instancetype)initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:(OrgBouncycastlePqcCryptoXmssXMSSParameters *)params {
  OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(self, params);
  return self;
}


#line 61
- (OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)withIndexWithInt:(jint)val {
  
#line 63
  index_ = val;
  return self;
}


#line 67
- (OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)withRandomWithByteArray:(IOSByteArray *)val {
  
#line 69
  random_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_cloneArrayWithByteArray_(val);
  return self;
}


#line 73
- (OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *)withSignatureWithByteArray:(IOSByteArray *)val {
  
#line 75
  if (val == nil) {
    
#line 77
    @throw new_JavaLangNullPointerException_initWithNSString_(@"signature == null");
  }
  jint n = [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk(params_Builder_)) getTreeDigestSize];
  jint len = [((OrgBouncycastlePqcCryptoXmssWOTSPlusParameters *) nil_chk([((OrgBouncycastlePqcCryptoXmssWOTSPlus *) nil_chk([params_Builder_ getWOTSPlus])) getParams])) getLen];
  jint height = [params_Builder_ getHeight];
  jint indexSize = 4;
  jint randomSize = n;
  jint signatureSize = len * n;
  jint authPathSize = height * n;
  jint position = 0;
  
#line 88
  index_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(val, position);
  position += indexSize;
  
#line 91
  random_ = OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(val, position, randomSize);
  position += randomSize;
  (void) [self withReducedSignatureWithByteArray:OrgBouncycastlePqcCryptoXmssXMSSUtil_extractBytesAtOffsetWithByteArray_withInt_withInt_(val, position, signatureSize + authPathSize)];
  return self;
}


#line 97
- (OrgBouncycastlePqcCryptoXmssXMSSSignature *)build {
  
#line 100
  return new_OrgBouncycastlePqcCryptoXmssXMSSSignature_initWithOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoXmssXMSSSignature;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoXmssXMSSParameters:);
  methods[1].selector = @selector(withIndexWithInt:);
  methods[2].selector = @selector(withRandomWithByteArray:);
  methods[3].selector = @selector(withSignatureWithByteArray:);
  methods[4].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_Builder_", "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", .constantValue.asLong = 0, 0x12, 6, -1, -1, -1 },
    { "index_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "random_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoXmssXMSSParameters;", "withIndex", "I", "withRandom", "[B", "withSignature", "params", "LOrgBouncycastlePqcCryptoXmssXMSSSignature;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder = { "Builder", "org.bouncycastle.pqc.crypto.xmss", ptrTable, methods, fields, 7, 0x9, 5, 3, 7, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder;
}

@end


#line 55
void OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *self, OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  OrgBouncycastlePqcCryptoXmssXMSSReducedSignature_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(self,
#line 57
  params);
  self->index_ =
#line 52
  0;
  self->random_ = nil;
  
#line 58
  self->params_Builder_ = params;
}


#line 55
OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *new_OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}


#line 55
OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder *create_OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSParameters *params) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder, initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoXmssXMSSSignature_Builder)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/qtesla/QTESLAPublicKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLAPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLASecurityCategory.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/qtesla/QTESLAPublicKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters () {
 @public
  /*!
   @brief qTESLA Security Category
   */
  jint securityCategory_;
  /*!
   @brief Text of the qTESLA Public Key
   */
  IOSByteArray *publicKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters, publicKey_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/qtesla/QTESLAPublicKeyParameters.java"


#line 9
@implementation OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters


#line 28
- (instancetype)initWithInt:(jint)securityCategory
              withByteArray:(IOSByteArray *)publicKey {
  OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_initWithInt_withByteArray_(self, securityCategory, publicKey);
  return self;
}


#line 47
- (jint)getSecurityCategory {
  
#line 49
  return self->securityCategory_;
}


#line 57
- (IOSByteArray *)getPublicData {
  
#line 59
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(publicKey_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withByteArray:);
  methods[1].selector = @selector(getSecurityCategory);
  methods[2].selector = @selector(getPublicData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "securityCategory_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKey_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters = { "QTESLAPublicKeyParameters", "org.bouncycastle.pqc.crypto.qtesla", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters;
}

@end


#line 28
void OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_initWithInt_withByteArray_(OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *self, jint securityCategory, IOSByteArray *publicKey) {
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self,
#line 30
  false);
  
#line 32
  if (((IOSByteArray *) nil_chk(publicKey))->size_ != OrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getPublicSizeWithInt_(securityCategory)) {
    
#line 34
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"invalid key size for security category");
  }
  
#line 37
  self->securityCategory_ = securityCategory;
  self->publicKey_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(publicKey);
}


#line 28
OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *new_OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_initWithInt_withByteArray_(jint securityCategory, IOSByteArray *publicKey) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters, initWithInt_withByteArray_, securityCategory, publicKey)
}


#line 28
OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *create_OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_initWithInt_withByteArray_(jint securityCategory, IOSByteArray *publicKey) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters, initWithInt_withByteArray_, securityCategory, publicKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters)

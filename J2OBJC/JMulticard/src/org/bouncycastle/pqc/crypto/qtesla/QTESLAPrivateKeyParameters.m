//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/qtesla/QTESLAPrivateKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLAPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLASecurityCategory.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/qtesla/QTESLAPrivateKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters () {
 @public
  /*!
   @brief qTESLA Security Category (From 4 To 8)
   */
  jint securityCategory_;
  /*!
   @brief Text of the qTESLA Private Key
   */
  IOSByteArray *privateKey_QTESLAPrivateKeyParameters_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters, privateKey_QTESLAPrivateKeyParameters_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/qtesla/QTESLAPrivateKeyParameters.java"


#line 9
@implementation OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters


#line 28
- (instancetype)initWithInt:(jint)securityCategory
              withByteArray:(IOSByteArray *)privateKey {
  OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_initWithInt_withByteArray_(self, securityCategory, privateKey);
  return self;
}


#line 46
- (jint)getSecurityCategory {
  
#line 48
  return self->securityCategory_;
}


#line 56
- (IOSByteArray *)getSecret {
  
#line 58
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey_QTESLAPrivateKeyParameters_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withByteArray:);
  methods[1].selector = @selector(getSecurityCategory);
  methods[2].selector = @selector(getSecret);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "securityCategory_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateKey_QTESLAPrivateKeyParameters_", "[B", .constantValue.asLong = 0, 0x2, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I[B", "privateKey" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters = { "QTESLAPrivateKeyParameters", "org.bouncycastle.pqc.crypto.qtesla", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters;
}

@end


#line 28
void OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_initWithInt_withByteArray_(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *self, jint securityCategory, IOSByteArray *privateKey) {
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self,
#line 30
  true);
  
#line 32
  if (((IOSByteArray *) nil_chk(privateKey))->size_ != OrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getPrivateSizeWithInt_(securityCategory)) {
    
#line 34
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"invalid key size for security category");
  }
  
#line 37
  self->securityCategory_ = securityCategory;
  self->privateKey_QTESLAPrivateKeyParameters_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey);
}


#line 28
OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *new_OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_initWithInt_withByteArray_(jint securityCategory, IOSByteArray *privateKey) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters, initWithInt_withByteArray_, securityCategory, privateKey)
}


#line 28
OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *create_OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_initWithInt_withByteArray_(jint securityCategory, IOSByteArray *privateKey) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters, initWithInt_withByteArray_, securityCategory, privateKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABEREngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABEREngine")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSaberSABEREngine
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABEREngine 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABEREngine 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSaberSABEREngine

#if !defined (OrgBouncycastlePqcCryptoSaberSABEREngine_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABEREngine || defined(INCLUDE_OrgBouncycastlePqcCryptoSaberSABEREngine))
#define OrgBouncycastlePqcCryptoSaberSABEREngine_

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcCryptoSaberUtils;

@interface OrgBouncycastlePqcCryptoSaberSABEREngine : NSObject

#pragma mark Public

- (instancetype)initPackagePrivateWithInt:(jint)l
                                  withInt:(jint)defaultKeySize;

- (jint)crypto_kem_decWithByteArray:(IOSByteArray *)k
                      withByteArray:(IOSByteArray *)c
                      withByteArray:(IOSByteArray *)sk;

- (jint)crypto_kem_encWithByteArray:(IOSByteArray *)c
                      withByteArray:(IOSByteArray *)k
                      withByteArray:(IOSByteArray *)pk
       withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (jint)crypto_kem_keypairWithByteArray:(IOSByteArray *)pk
                          withByteArray:(IOSByteArray *)sk
           withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (jint)getCipherTextSize;

- (jint)getPrivateKeySize;

- (jint)getPublicKeySize;

- (jint)getSABER_EP;

- (jint)getSABER_ET;

- (jint)getSABER_KEYBYTES;

- (jint)getSABER_L;

- (jint)getSABER_MU;

- (jint)getSABER_N;

- (jint)getSABER_NOISE_SEEDBYTES;

- (jint)getSABER_POLYBYTES;

- (jint)getSABER_POLYCOINBYTES;

- (jint)getSABER_POLYVECBYTES;

- (jint)getSABER_SEEDBYTES;

- (jint)getSessionKeySize;

- (OrgBouncycastlePqcCryptoSaberUtils *)getUtils;

#pragma mark Package-Private

+ (void)cmovWithByteArray:(IOSByteArray *)r
            withByteArray:(IOSByteArray *)x
                  withInt:(jint)x_offset
                  withInt:(jint)len
                 withByte:(jbyte)b;

+ (jint)verifyWithByteArray:(IOSByteArray *)a
              withByteArray:(IOSByteArray *)b
                    withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSaberSABEREngine)

inline jint OrgBouncycastlePqcCryptoSaberSABEREngine_get_SABER_EQ(void);
#define OrgBouncycastlePqcCryptoSaberSABEREngine_SABER_EQ 13
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSaberSABEREngine, SABER_EQ, jint)

inline jint OrgBouncycastlePqcCryptoSaberSABEREngine_get_SABER_EP(void);
#define OrgBouncycastlePqcCryptoSaberSABEREngine_SABER_EP 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSaberSABEREngine, SABER_EP, jint)

inline jint OrgBouncycastlePqcCryptoSaberSABEREngine_get_SABER_N(void);
#define OrgBouncycastlePqcCryptoSaberSABEREngine_SABER_N 256
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSaberSABEREngine, SABER_N, jint)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSaberSABEREngine_initPackagePrivateWithInt_withInt_(OrgBouncycastlePqcCryptoSaberSABEREngine *self, jint l, jint defaultKeySize);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABEREngine *new_OrgBouncycastlePqcCryptoSaberSABEREngine_initPackagePrivateWithInt_withInt_(jint l, jint defaultKeySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABEREngine *create_OrgBouncycastlePqcCryptoSaberSABEREngine_initPackagePrivateWithInt_withInt_(jint l, jint defaultKeySize);

FOUNDATION_EXPORT jint OrgBouncycastlePqcCryptoSaberSABEREngine_verifyWithByteArray_withByteArray_withInt_(IOSByteArray *a, IOSByteArray *b, jint len);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSaberSABEREngine_cmovWithByteArray_withByteArray_withInt_withInt_withByte_(IOSByteArray *r, IOSByteArray *x, jint x_offset, jint len, jbyte b);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSaberSABEREngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABEREngine")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABERParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSaberSABERParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABERParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABERParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSaberSABERParameters

#if !defined (OrgBouncycastlePqcCryptoSaberSABERParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABERParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoSaberSABERParameters))
#define OrgBouncycastlePqcCryptoSaberSABERParameters_

#define RESTRICT_OrgBouncycastleCryptoCipherParameters 1
#define INCLUDE_OrgBouncycastleCryptoCipherParameters 1
#include "org/bouncycastle/crypto/CipherParameters.h"

@class OrgBouncycastlePqcCryptoSaberSABEREngine;

@interface OrgBouncycastlePqcCryptoSaberSABERParameters : NSObject < OrgBouncycastleCryptoCipherParameters >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)l
                         withInt:(jint)defaultKeySize;

- (jint)getDefaultKeySize;

- (OrgBouncycastlePqcCryptoSaberSABEREngine *)getEngine;

- (jint)getL;

- (NSString *)getName;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastlePqcCryptoSaberSABERParameters)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_lightsaberkem128r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_lightsaberkem128r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, lightsaberkem128r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_saberkem128r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_saberkem128r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, saberkem128r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_firesaberkem128r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_firesaberkem128r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, firesaberkem128r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_lightsaberkem192r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_lightsaberkem192r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, lightsaberkem192r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_saberkem192r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_saberkem192r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, saberkem192r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_firesaberkem192r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_firesaberkem192r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, firesaberkem192r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_lightsaberkem256r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_lightsaberkem256r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, lightsaberkem256r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_saberkem256r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_saberkem256r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, saberkem256r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

inline OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_get_firesaberkem256r3(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *OrgBouncycastlePqcCryptoSaberSABERParameters_firesaberkem256r3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSaberSABERParameters, firesaberkem256r3, OrgBouncycastlePqcCryptoSaberSABERParameters *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSaberSABERParameters_initWithNSString_withInt_withInt_(OrgBouncycastlePqcCryptoSaberSABERParameters *self, NSString *name, jint l, jint defaultKeySize);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *new_OrgBouncycastlePqcCryptoSaberSABERParameters_initWithNSString_withInt_withInt_(NSString *name, jint l, jint defaultKeySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSaberSABERParameters *create_OrgBouncycastlePqcCryptoSaberSABERParameters_initWithNSString_withInt_withInt_(NSString *name, jint l, jint defaultKeySize);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSaberSABERParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSaberSABERParameters")

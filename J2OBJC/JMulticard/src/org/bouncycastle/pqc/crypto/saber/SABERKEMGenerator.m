//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERKEMGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/crypto/SecretWithEncapsulation.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/saber/SABEREngine.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERKEMGenerator.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/util/SecretWithEncapsulationImpl.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/saber/SABERKEMGenerator must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoSaberSABERKEMGenerator () {
 @public
  JavaSecuritySecureRandom *sr_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSaberSABERKEMGenerator, sr_, JavaSecuritySecureRandom *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERKEMGenerator.java"


#line 10
@implementation OrgBouncycastlePqcCryptoSaberSABERKEMGenerator


#line 16
- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  OrgBouncycastlePqcCryptoSaberSABERKEMGenerator_initWithJavaSecuritySecureRandom_(self, random);
  return self;
}

- (id<OrgBouncycastleCryptoSecretWithEncapsulation>)generateEncapsulatedWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)recipientKey {
  
#line 24
  OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *key = (OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *) cast_chk(recipientKey, [OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters class]);
  OrgBouncycastlePqcCryptoSaberSABEREngine *engine = [((OrgBouncycastlePqcCryptoSaberSABERParameters *) nil_chk([((OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *) nil_chk(key)) getParameters])) getEngine];
  IOSByteArray *cipher_text = [IOSByteArray newArrayWithLength:[((OrgBouncycastlePqcCryptoSaberSABEREngine *) nil_chk(engine)) getCipherTextSize]];
  IOSByteArray *sessionKey = [IOSByteArray newArrayWithLength:[engine getSessionKeySize]];
  [engine crypto_kem_encWithByteArray:cipher_text withByteArray:sessionKey withByteArray:[key getPublicKey] withJavaSecuritySecureRandom:sr_];
  return new_OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl_initWithByteArray_withByteArray_(sessionKey, cipher_text);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoSecretWithEncapsulation;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:);
  methods[1].selector = @selector(generateEncapsulatedWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sr_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;", "generateEncapsulated", "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSaberSABERKEMGenerator = { "SABERKEMGenerator", "org.bouncycastle.pqc.crypto.saber", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSaberSABERKEMGenerator;
}

@end


#line 16
void OrgBouncycastlePqcCryptoSaberSABERKEMGenerator_initWithJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoSaberSABERKEMGenerator *self, JavaSecuritySecureRandom *random) {
  NSObject_init(self);
  self->sr_ = random;
}


#line 16
OrgBouncycastlePqcCryptoSaberSABERKEMGenerator *new_OrgBouncycastlePqcCryptoSaberSABERKEMGenerator_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSaberSABERKEMGenerator, initWithJavaSecuritySecureRandom_, random)
}


#line 16
OrgBouncycastlePqcCryptoSaberSABERKEMGenerator *create_OrgBouncycastlePqcCryptoSaberSABERKEMGenerator_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSaberSABERKEMGenerator, initWithJavaSecuritySecureRandom_, random)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSaberSABERKEMGenerator)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERKeyGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/crypto/KeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERKeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/saber/SABERKeyGenerationParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters () {
 @public
  OrgBouncycastlePqcCryptoSaberSABERParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters, params_, OrgBouncycastlePqcCryptoSaberSABERParameters *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERKeyGenerationParameters.java"


#line 7
@implementation OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters


#line 12
- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
withOrgBouncycastlePqcCryptoSaberSABERParameters:(OrgBouncycastlePqcCryptoSaberSABERParameters *)saberParameters {
  OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSaberSABERParameters_(self, random, saberParameters);
  return self;
}


#line 20
- (OrgBouncycastlePqcCryptoSaberSABERParameters *)getParameters {
  
#line 22
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoSaberSABERParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:withOrgBouncycastlePqcCryptoSaberSABERParameters:);
  methods[1].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoSaberSABERParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;LOrgBouncycastlePqcCryptoSaberSABERParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters = { "SABERKeyGenerationParameters", "org.bouncycastle.pqc.crypto.saber", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters;
}

@end


#line 12
void OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSaberSABERParameters_(OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters *self, JavaSecuritySecureRandom *random, OrgBouncycastlePqcCryptoSaberSABERParameters *saberParameters) {
  OrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self,
#line 16
  random, 256);
  self->params_ = saberParameters;
}


#line 12
OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters *new_OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSaberSABERParameters_(JavaSecuritySecureRandom *random, OrgBouncycastlePqcCryptoSaberSABERParameters *saberParameters) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters, initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSaberSABERParameters_, random, saberParameters)
}


#line 12
OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters *create_OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSaberSABERParameters_(JavaSecuritySecureRandom *random, OrgBouncycastlePqcCryptoSaberSABERParameters *saberParameters) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters, initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSaberSABERParameters_, random, saberParameters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSaberSABERKeyGenerationParameters)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERPublicKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERPublicKeyParameters.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/saber/SABERPublicKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERPublicKeyParameters.java"


#line 5
@implementation OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters


#line 10
- (IOSByteArray *)getPublicKey {
  
#line 12
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(publicKey_);
}


#line 15
- (IOSByteArray *)getEncoded {
  
#line 17
  return [self getPublicKey];
}


#line 20
- (instancetype)initWithOrgBouncycastlePqcCryptoSaberSABERParameters:(OrgBouncycastlePqcCryptoSaberSABERParameters *)params
                                                       withByteArray:(IOSByteArray *)publicKey {
  OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(self, params, publicKey);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getPublicKey);
  methods[1].selector = @selector(getEncoded);
  methods[2].selector = @selector(initWithOrgBouncycastlePqcCryptoSaberSABERParameters:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "publicKey_", "[B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoSaberSABERParameters;[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters = { "SABERPublicKeyParameters", "org.bouncycastle.pqc.crypto.saber", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters;
}

@end


#line 20
void OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *self, OrgBouncycastlePqcCryptoSaberSABERParameters *params, IOSByteArray *publicKey) {
  OrgBouncycastlePqcCryptoSaberSABERKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoSaberSABERParameters_(self,
#line 22
  false, params);
  self->publicKey_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(publicKey);
}


#line 20
OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *new_OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(OrgBouncycastlePqcCryptoSaberSABERParameters *params, IOSByteArray *publicKey) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters, initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_, params, publicKey)
}


#line 20
OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *create_OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(OrgBouncycastlePqcCryptoSaberSABERParameters *params, IOSByteArray *publicKey) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters, initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_, params, publicKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters)

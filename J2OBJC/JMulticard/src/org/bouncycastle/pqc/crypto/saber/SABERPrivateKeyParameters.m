//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERPrivateKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERPrivateKeyParameters.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/saber/SABERPrivateKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters () {
 @public
  IOSByteArray *privateKey_SABERPrivateKeyParameters_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters, privateKey_SABERPrivateKeyParameters_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/saber/SABERPrivateKeyParameters.java"


#line 5
@implementation OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters


#line 10
- (IOSByteArray *)getPrivateKey {
  
#line 12
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey_SABERPrivateKeyParameters_);
}


#line 15
- (instancetype)initWithOrgBouncycastlePqcCryptoSaberSABERParameters:(OrgBouncycastlePqcCryptoSaberSABERParameters *)params
                                                       withByteArray:(IOSByteArray *)privateKey {
  OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(self, params, privateKey);
  return self;
}

- (IOSByteArray *)getEncoded {
  
#line 23
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey_SABERPrivateKeyParameters_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getPrivateKey);
  methods[1].selector = @selector(initWithOrgBouncycastlePqcCryptoSaberSABERParameters:withByteArray:);
  methods[2].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "privateKey_SABERPrivateKeyParameters_", "[B", .constantValue.asLong = 0, 0x2, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoSaberSABERParameters;[B", "privateKey" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters = { "SABERPrivateKeyParameters", "org.bouncycastle.pqc.crypto.saber", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters;
}

@end


#line 15
void OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters *self, OrgBouncycastlePqcCryptoSaberSABERParameters *params, IOSByteArray *privateKey) {
  OrgBouncycastlePqcCryptoSaberSABERKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoSaberSABERParameters_(self,
#line 17
  true, params);
  self->privateKey_SABERPrivateKeyParameters_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey);
}


#line 15
OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters *new_OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(OrgBouncycastlePqcCryptoSaberSABERParameters *params, IOSByteArray *privateKey) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_, params, privateKey)
}


#line 15
OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters *create_OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(OrgBouncycastlePqcCryptoSaberSABERParameters *params, IOSByteArray *privateKey) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_, params, privateKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincs/SPHINCS256KeyGenerationParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters

#if !defined (OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters))
#define OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_

#define RESTRICT_OrgBouncycastleCryptoKeyGenerationParameters 1
#define INCLUDE_OrgBouncycastleCryptoKeyGenerationParameters 1
#include "org/bouncycastle/crypto/KeyGenerationParameters.h"

@class JavaSecuritySecureRandom;
@protocol OrgBouncycastleCryptoDigest;

@interface OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters : OrgBouncycastleCryptoKeyGenerationParameters

#pragma mark Public

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                 withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)treeDigest;

- (id<OrgBouncycastleCryptoDigest>)getTreeDigest;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0
                                         withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *self, JavaSecuritySecureRandom *random, id<OrgBouncycastleCryptoDigest> treeDigest);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *new_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastleCryptoDigest_(JavaSecuritySecureRandom *random, id<OrgBouncycastleCryptoDigest> treeDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *create_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastleCryptoDigest_(JavaSecuritySecureRandom *random, id<OrgBouncycastleCryptoDigest> treeDigest);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters")

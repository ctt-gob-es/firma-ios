//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincs/HashFunctions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHashFunctions")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsHashFunctions
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHashFunctions 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHashFunctions 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsHashFunctions

#if !defined (OrgBouncycastlePqcCryptoSphincsHashFunctions_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHashFunctions || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsHashFunctions))
#define OrgBouncycastlePqcCryptoSphincsHashFunctions_

@class IOSByteArray;
@protocol OrgBouncycastleCryptoDigest;

@interface OrgBouncycastlePqcCryptoSphincsHashFunctions : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)dig256;

- (instancetype)initPackagePrivateWithOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)dig256
                                  withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)dig512;

- (id<OrgBouncycastleCryptoDigest>)getMessageHash;

- (jint)hash_2n_nWithByteArray:(IOSByteArray *)outArg
                       withInt:(jint)outOff
                 withByteArray:(IOSByteArray *)inArg
                       withInt:(jint)inOff;

- (jint)hash_2n_n_maskWithByteArray:(IOSByteArray *)outArg
                            withInt:(jint)outOff
                      withByteArray:(IOSByteArray *)inArg
                            withInt:(jint)inOff
                      withByteArray:(IOSByteArray *)mask
                            withInt:(jint)maskOff;

- (jint)hash_n_nWithByteArray:(IOSByteArray *)outArg
                      withInt:(jint)outOff
                withByteArray:(IOSByteArray *)inArg
                      withInt:(jint)inOff;

- (jint)hash_n_n_maskWithByteArray:(IOSByteArray *)outArg
                           withInt:(jint)outOff
                     withByteArray:(IOSByteArray *)inArg
                           withInt:(jint)inOff
                     withByteArray:(IOSByteArray *)mask
                           withInt:(jint)maskOff;

- (jint)varlen_hashWithByteArray:(IOSByteArray *)outArg
                         withInt:(jint)outOff
                   withByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inLen;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsHashFunctions)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsHashFunctions_initPackagePrivateWithOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoSphincsHashFunctions *self, id<OrgBouncycastleCryptoDigest> dig256);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsHashFunctions *new_OrgBouncycastlePqcCryptoSphincsHashFunctions_initPackagePrivateWithOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> dig256) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsHashFunctions *create_OrgBouncycastlePqcCryptoSphincsHashFunctions_initPackagePrivateWithOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> dig256);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsHashFunctions_initPackagePrivateWithOrgBouncycastleCryptoDigest_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoSphincsHashFunctions *self, id<OrgBouncycastleCryptoDigest> dig256, id<OrgBouncycastleCryptoDigest> dig512);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsHashFunctions *new_OrgBouncycastlePqcCryptoSphincsHashFunctions_initPackagePrivateWithOrgBouncycastleCryptoDigest_withOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> dig256, id<OrgBouncycastleCryptoDigest> dig512) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsHashFunctions *create_OrgBouncycastlePqcCryptoSphincsHashFunctions_initPackagePrivateWithOrgBouncycastleCryptoDigest_withOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> dig256, id<OrgBouncycastleCryptoDigest> dig512);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsHashFunctions)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHashFunctions")

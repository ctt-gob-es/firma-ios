//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincs/Horst.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHorst")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsHorst
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHorst 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHorst 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsHorst

#if !defined (OrgBouncycastlePqcCryptoSphincsHorst_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHorst || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsHorst))
#define OrgBouncycastlePqcCryptoSphincsHorst_

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoSphincsHashFunctions;

@interface OrgBouncycastlePqcCryptoSphincsHorst : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

+ (void)expand_seedWithByteArray:(IOSByteArray *)outseeds
                   withByteArray:(IOSByteArray *)inseed;

+ (jint)horst_signWithOrgBouncycastlePqcCryptoSphincsHashFunctions:(OrgBouncycastlePqcCryptoSphincsHashFunctions *)hs
                                                     withByteArray:(IOSByteArray *)sig
                                                           withInt:(jint)sigOff
                                                     withByteArray:(IOSByteArray *)pk
                                                     withByteArray:(IOSByteArray *)seed
                                                     withByteArray:(IOSByteArray *)masks
                                                     withByteArray:(IOSByteArray *)m_hash;

+ (jint)horst_verifyWithOrgBouncycastlePqcCryptoSphincsHashFunctions:(OrgBouncycastlePqcCryptoSphincsHashFunctions *)hs
                                                       withByteArray:(IOSByteArray *)pk
                                                       withByteArray:(IOSByteArray *)sig
                                                             withInt:(jint)sigOff
                                                       withByteArray:(IOSByteArray *)masks
                                                       withByteArray:(IOSByteArray *)m_hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsHorst)

inline jint OrgBouncycastlePqcCryptoSphincsHorst_get_HORST_LOGT(void);
#define OrgBouncycastlePqcCryptoSphincsHorst_HORST_LOGT 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSphincsHorst, HORST_LOGT, jint)

inline jint OrgBouncycastlePqcCryptoSphincsHorst_get_HORST_T(void);
#define OrgBouncycastlePqcCryptoSphincsHorst_HORST_T 65536
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSphincsHorst, HORST_T, jint)

inline jint OrgBouncycastlePqcCryptoSphincsHorst_get_HORST_K(void);
#define OrgBouncycastlePqcCryptoSphincsHorst_HORST_K 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSphincsHorst, HORST_K, jint)

inline jint OrgBouncycastlePqcCryptoSphincsHorst_get_HORST_SKBYTES(void);
#define OrgBouncycastlePqcCryptoSphincsHorst_HORST_SKBYTES 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSphincsHorst, HORST_SKBYTES, jint)

inline jint OrgBouncycastlePqcCryptoSphincsHorst_get_HORST_SIGBYTES(void);
#define OrgBouncycastlePqcCryptoSphincsHorst_HORST_SIGBYTES 13312
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSphincsHorst, HORST_SIGBYTES, jint)

inline jint OrgBouncycastlePqcCryptoSphincsHorst_get_N_MASKS(void);
#define OrgBouncycastlePqcCryptoSphincsHorst_N_MASKS 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoSphincsHorst, N_MASKS, jint)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsHorst_initPackagePrivate(OrgBouncycastlePqcCryptoSphincsHorst *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsHorst *new_OrgBouncycastlePqcCryptoSphincsHorst_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsHorst *create_OrgBouncycastlePqcCryptoSphincsHorst_initPackagePrivate(void);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsHorst_expand_seedWithByteArray_withByteArray_(IOSByteArray *outseeds, IOSByteArray *inseed);

FOUNDATION_EXPORT jint OrgBouncycastlePqcCryptoSphincsHorst_horst_signWithOrgBouncycastlePqcCryptoSphincsHashFunctions_withByteArray_withInt_withByteArray_withByteArray_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoSphincsHashFunctions *hs, IOSByteArray *sig, jint sigOff, IOSByteArray *pk, IOSByteArray *seed, IOSByteArray *masks, IOSByteArray *m_hash);

FOUNDATION_EXPORT jint OrgBouncycastlePqcCryptoSphincsHorst_horst_verifyWithOrgBouncycastlePqcCryptoSphincsHashFunctions_withByteArray_withByteArray_withInt_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoSphincsHashFunctions *hs, IOSByteArray *pk, IOSByteArray *sig, jint sigOff, IOSByteArray *masks, IOSByteArray *m_hash);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsHorst)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsHorst")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincs/SPHINCSKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters

#if !defined (OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters))
#define OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_

#define RESTRICT_OrgBouncycastleCryptoParamsAsymmetricKeyParameter 1
#define INCLUDE_OrgBouncycastleCryptoParamsAsymmetricKeyParameter 1
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"

@interface OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters : OrgBouncycastleCryptoParamsAsymmetricKeyParameter

#pragma mark Public

- (NSString *)getTreeDigest;

#pragma mark Protected

- (instancetype)initWithBoolean:(jboolean)isPrivateKey
                   withNSString:(NSString *)treeDigest;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters)

/*!
 @brief Use SHA512-256 for the tree generation function.
 */
inline NSString *OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_get_SHA512_256(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA512_256;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters, SHA512_256, NSString *)

/*!
 @brief Use SHA3-256 for the tree generation function.
 */
inline NSString *OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_get_SHA3_256(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_SHA3_256;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters, SHA3_256, NSString *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_initWithBoolean_withNSString_(OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters *self, jboolean isPrivateKey, NSString *treeDigest);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters *new_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters *create_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters_initWithBoolean_withNSString_(jboolean isPrivateKey, NSString *treeDigest);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSPHINCSKeyParameters")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincs/Seed.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSeed")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsSeed
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSeed 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSeed 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsSeed

#if !defined (OrgBouncycastlePqcCryptoSphincsSeed_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSeed || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsSeed))
#define OrgBouncycastlePqcCryptoSphincsSeed_

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoSphincsHashFunctions;
@class OrgBouncycastlePqcCryptoSphincsTree_leafaddr;

@interface OrgBouncycastlePqcCryptoSphincsSeed : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

+ (void)get_seedWithOrgBouncycastlePqcCryptoSphincsHashFunctions:(OrgBouncycastlePqcCryptoSphincsHashFunctions *)hs
                                                   withByteArray:(IOSByteArray *)seed
                                                         withInt:(jint)seedOff
                                                   withByteArray:(IOSByteArray *)sk
                withOrgBouncycastlePqcCryptoSphincsTree_leafaddr:(OrgBouncycastlePqcCryptoSphincsTree_leafaddr *)a;

+ (void)prgWithByteArray:(IOSByteArray *)r
                 withInt:(jint)rOff
                withLong:(jlong)rlen
           withByteArray:(IOSByteArray *)key
                 withInt:(jint)keyOff;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsSeed)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsSeed_initPackagePrivate(OrgBouncycastlePqcCryptoSphincsSeed *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsSeed *new_OrgBouncycastlePqcCryptoSphincsSeed_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsSeed *create_OrgBouncycastlePqcCryptoSphincsSeed_initPackagePrivate(void);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsSeed_get_seedWithOrgBouncycastlePqcCryptoSphincsHashFunctions_withByteArray_withInt_withByteArray_withOrgBouncycastlePqcCryptoSphincsTree_leafaddr_(OrgBouncycastlePqcCryptoSphincsHashFunctions *hs, IOSByteArray *seed, jint seedOff, IOSByteArray *sk, OrgBouncycastlePqcCryptoSphincsTree_leafaddr *a);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsSeed_prgWithByteArray_withInt_withLong_withByteArray_withInt_(IOSByteArray *r, jint rOff, jlong rlen, IOSByteArray *key, jint keyOff);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsSeed)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsSeed")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/bc/BCObjectIdentifiers.h"
#include "org/bouncycastle/asn1/isara/IsaraObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/asn1/CMCEPublicKey.h"
#include "org/bouncycastle/pqc/asn1/McElieceCCA2PublicKey.h"
#include "org/bouncycastle/pqc/asn1/PQCObjectIdentifiers.h"
#include "org/bouncycastle/pqc/asn1/SPHINCS256KeyParams.h"
#include "org/bouncycastle/pqc/asn1/XMSSKeyParams.h"
#include "org/bouncycastle/pqc/asn1/XMSSMTKeyParams.h"
#include "org/bouncycastle/pqc/asn1/XMSSPublicKey.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEParameters.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/frodo/FrodoParameters.h"
#include "org/bouncycastle/pqc/crypto/frodo/FrodoPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLAPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincs/SPHINCSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/util/PublicKeyFactory.h"
#include "org/bouncycastle/pqc/crypto/util/Utils.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Integers.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/util/PublicKeyFactory must be compiled with ARC (-fobjc-arc)"
#endif

inline id<JavaUtilMap> OrgBouncycastlePqcCryptoUtilPublicKeyFactory_get_converters(void);
inline id<JavaUtilMap> OrgBouncycastlePqcCryptoUtilPublicKeyFactory_set_converters(id<JavaUtilMap> value);
static id<JavaUtilMap> OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastlePqcCryptoUtilPublicKeyFactory, converters, id<JavaUtilMap>)

@interface OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter *self);

@interface OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter : OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter)

@interface OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter : OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter)

@interface OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter : OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter)

@interface OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter : OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter)

@interface OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter : OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter)

@interface OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter : OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter

- (instancetype)init;

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcCryptoUtilPublicKeyFactory)


#line 52
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 52
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 107
+ (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithByteArray:(IOSByteArray *)keyInfoData {
  return OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithByteArray_(keyInfoData);
}


#line 120
+ (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithJavaIoInputStream:(JavaIoInputStream *)inStr {
  return OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithJavaIoInputStream_(inStr);
}


#line 133
+ (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  return OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(keyInfo);
}


#line 147
+ (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                         withId:(id)defaultParams {
  return OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withId_(keyInfo, defaultParams);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 3, 2, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 4, 2, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x9, 0, 5, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createKeyWithByteArray:);
  methods[2].selector = @selector(createKeyWithJavaIoInputStream:);
  methods[3].selector = @selector(createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[4].selector = @selector(createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "converters", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "createKey", "[B", "LJavaIoIOException;", "LJavaIoInputStream;", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", &OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters, "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter;LOrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory = { "PublicKeyFactory", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, 7, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcCryptoUtilPublicKeyFactory class]) {
    OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters = new_JavaUtilHashMap_init();
    {
      
#line 58
      (void) [OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters putWithId:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_p_I) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_p_III) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, sphincs256) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, newHope) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss_mt) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1IsaraIsaraObjectIdentifiers, id_alg_xmss) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1IsaraIsaraObjectIdentifiers, id_alg_xmssmt) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_hss_lms_hashsig) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcElieceCca2) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus_shake_256) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus_sha_256) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus_sha_512) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece348864_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece348864f_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece460896_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece460896f_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece6688128_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece6688128f_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece6960119_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece6960119f_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece8192128_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, mceliece8192128f_r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, frodokem19888r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, frodokem19888shaker3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, frodokem31296r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, frodokem31296shaker3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, frodokem43088r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, frodokem43088shaker3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, lightsaberkem128r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, saberkem128r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, firesaberkem128r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, lightsaberkem192r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, saberkem192r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, firesaberkem192r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, lightsaberkem256r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, saberkem256r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) putWithId:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, firesaberkem256r3) withId:new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init()];
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcCryptoUtilPublicKeyFactory)
  }
}

@end


#line 52
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory *self) {
  NSObject_init(self);
}


#line 52
OrgBouncycastlePqcCryptoUtilPublicKeyFactory *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory, init)
}


#line 52
OrgBouncycastlePqcCryptoUtilPublicKeyFactory *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory, init)
}


#line 107
OrgBouncycastleCryptoParamsAsymmetricKeyParameter *OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithByteArray_(IOSByteArray *keyInfoData) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_initialize();
  
#line 110
  return OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(keyInfoData)));
}


#line 120
OrgBouncycastleCryptoParamsAsymmetricKeyParameter *OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithJavaIoInputStream_(JavaIoInputStream *inStr) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_initialize();
  
#line 123
  return OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_([new_OrgBouncycastleAsn1ASN1InputStream_initWithJavaIoInputStream_(inStr) readObject]));
}


#line 133
OrgBouncycastleCryptoParamsAsymmetricKeyParameter *OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_initialize();
  
#line 136
  return OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withId_(keyInfo, nil);
}


#line 147
OrgBouncycastleCryptoParamsAsymmetricKeyParameter *OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withId_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo, id defaultParams) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_initialize();
  
#line 150
  OrgBouncycastleAsn1X509AlgorithmIdentifier *algId = [((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm];
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter *converter = (OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_converters)) getWithId:[((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(algId)) getAlgorithm]], [OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter class]);
  
#line 153
  if (converter != nil) {
    
#line 155
    return [converter getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:keyInfo withId:defaultParams];
  }
  @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"algorithm identifier in public key not recognised: ", [algId getAlgorithm]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 160
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 160
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 162
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x400, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter = { "SubjectPublicKeyInfoConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x40a, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter;
}

@end


#line 160
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 166
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 166
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 169
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 173
  return new_OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters_initWithInt_withByteArray_(OrgBouncycastlePqcCryptoUtilUtils_qTeslaLookupSecurityCategoryWithOrgBouncycastleAsn1X509AlgorithmIdentifier_([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm]), [((OrgBouncycastleAsn1ASN1BitString *) nil_chk([keyInfo getPublicKeyData])) getOctets]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter = { "QTeslaConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter;
}

@end


#line 166
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 166
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter, init)
}


#line 166
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_QTeslaConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 177
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 177
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 178
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 182
  return new_OrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters_initWithByteArray_withNSString_([((OrgBouncycastleAsn1ASN1BitString *) nil_chk([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getPublicKeyData])) getBytes], OrgBouncycastlePqcCryptoUtilUtils_sphincs256LookupTreeAlgNameWithOrgBouncycastlePqcAsn1SPHINCS256KeyParams_(OrgBouncycastlePqcAsn1SPHINCS256KeyParams_getInstanceWithId_(
#line 183
  [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyInfo getAlgorithm])) getParameters])));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter = { "SPHINCSConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x8, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter;
}

@end


#line 177
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 177
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter, init)
}


#line 177
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 187
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 187
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 188
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 192
  return new_OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_([((OrgBouncycastleAsn1ASN1BitString *) nil_chk([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getPublicKeyData])) getBytes]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter = { "NHConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x8, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter;
}

@end


#line 187
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 187
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter, init)
}


#line 187
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_NHConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 196
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 196
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 199
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 203
  OrgBouncycastlePqcAsn1XMSSKeyParams *keyParams = OrgBouncycastlePqcAsn1XMSSKeyParams_getInstanceWithId_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm])) getParameters]);
  
#line 205
  if (keyParams != nil) {
    
#line 207
    OrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest = [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyParams getTreeDigest])) getAlgorithm];
    OrgBouncycastlePqcAsn1XMSSPublicKey *xmssPublicKey = OrgBouncycastlePqcAsn1XMSSPublicKey_getInstanceWithId_([keyInfo parsePublicKey]);
    
#line 210
    return [((OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(new_OrgBouncycastlePqcCryptoXmssXMSSParameters_initWithInt_withOrgBouncycastleCryptoDigest_(
#line 211
    [keyParams getHeight], OrgBouncycastlePqcCryptoUtilUtils_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(treeDigest))) withPublicSeedWithByteArray:
#line 212
    [((OrgBouncycastlePqcAsn1XMSSPublicKey *) nil_chk(xmssPublicKey)) getPublicSeed]])) withRootWithByteArray:
#line 213
    [xmssPublicKey getRoot]])) build];
  }
  IOSByteArray *keyEnc = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([keyInfo parsePublicKey]))) getOctets];
  
#line 217
  return [((OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSParameters_(OrgBouncycastlePqcCryptoXmssXMSSParameters_lookupByOIDWithInt_(OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(
#line 218
  keyEnc, 0))) withPublicKeyWithByteArray:
#line 219
  keyEnc])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter = { "XMSSConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter;
}

@end


#line 196
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 196
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter, init)
}


#line 196
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 223
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 223
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 224
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 228
  OrgBouncycastlePqcAsn1XMSSMTKeyParams *keyParams = OrgBouncycastlePqcAsn1XMSSMTKeyParams_getInstanceWithId_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) getAlgorithm])) getParameters]);
  
#line 230
  if (keyParams != nil) {
    
#line 232
    OrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest = [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyParams getTreeDigest])) getAlgorithm];
    
#line 234
    OrgBouncycastlePqcAsn1XMSSPublicKey *xmssMtPublicKey = OrgBouncycastlePqcAsn1XMSSPublicKey_getInstanceWithId_([keyInfo parsePublicKey]);
    
#line 236
    return [((OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(new_OrgBouncycastlePqcCryptoXmssXMSSMTParameters_initWithInt_withInt_withOrgBouncycastleCryptoDigest_(
#line 237
    [keyParams getHeight], [keyParams getLayers], OrgBouncycastlePqcCryptoUtilUtils_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(treeDigest))) withPublicSeedWithByteArray:
#line 238
    [((OrgBouncycastlePqcAsn1XMSSPublicKey *) nil_chk(xmssMtPublicKey)) getPublicSeed]])) withRootWithByteArray:
#line 239
    [xmssMtPublicKey getRoot]])) build];
  }
  IOSByteArray *keyEnc = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([keyInfo parsePublicKey]))) getOctets];
  
#line 243
  return [((OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder *) nil_chk([new_OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters_Builder_initWithOrgBouncycastlePqcCryptoXmssXMSSMTParameters_(OrgBouncycastlePqcCryptoXmssXMSSMTParameters_lookupByOIDWithInt_(OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(
#line 244
  keyEnc, 0))) withPublicKeyWithByteArray:
#line 245
  keyEnc])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter = { "XMSSMTConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x8, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter;
}

@end


#line 223
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 223
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter, init)
}


#line 223
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_XMSSMTConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 249
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 249
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 252
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 256
  IOSByteArray *keyEnc = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) parsePublicKey]))) getOctets];
  
#line 258
  if (OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(keyEnc, 0) == 1) {
    
#line 260
    return OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_getInstanceWithId_(OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(keyEnc, 4, ((IOSByteArray *) nil_chk(keyEnc))->size_));
  }
  
#line 263
  if (((IOSByteArray *) nil_chk(keyEnc))->size_ == 64) {
    
#line 265
    keyEnc = OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(keyEnc, 4, keyEnc->size_);
  }
  return OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters_getInstanceWithId_(keyEnc);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter = { "LMSConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter;
}

@end


#line 249
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 249
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter, init)
}


#line 249
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_LMSConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 271
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 271
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 274
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 278
  IOSByteArray *keyEnc = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) parsePublicKey]))) getOctets];
  
#line 280
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *spParams = OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_getParamsWithJavaLangInteger_(OrgBouncycastleUtilIntegers_valueOfWithInt_(OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(keyEnc, 0)));
  
#line 282
  return new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(spParams, OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(keyEnc, 4, ((IOSByteArray *) nil_chk(keyEnc))->size_));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter = { "SPHINCSPlusConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter;
}

@end


#line 271
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 271
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter, init)
}


#line 271
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SPHINCSPlusConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 286
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 286
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 287
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 291
  IOSByteArray *keyEnc = [((OrgBouncycastlePqcAsn1CMCEPublicKey *) nil_chk(OrgBouncycastlePqcAsn1CMCEPublicKey_getInstanceWithId_([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) parsePublicKey]))) getT];
  
#line 293
  OrgBouncycastlePqcCryptoCmceCMCEParameters *spParams = OrgBouncycastlePqcCryptoUtilUtils_mcElieceParamsLookupWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyInfo getAlgorithm])) getAlgorithm]);
  
#line 295
  return new_OrgBouncycastlePqcCryptoCmceCMCEPublicKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_(spParams, keyEnc);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter = { "CMCEConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x8, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter;
}

@end


#line 286
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 286
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter, init)
}


#line 286
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_CMCEConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 299
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 299
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 302
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 306
  IOSByteArray *keyEnc = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(
#line 307
  [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) parsePublicKey]))) getObjectAtWithInt:0]))) getOctets];
  
#line 309
  OrgBouncycastlePqcCryptoSaberSABERParameters *saberParams = OrgBouncycastlePqcCryptoUtilUtils_saberParamsLookupWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyInfo getAlgorithm])) getAlgorithm]);
  
#line 311
  return new_OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSaberSABERParameters_withByteArray_(saberParams, keyEnc);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter = { "SABERConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter;
}

@end


#line 299
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 299
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter, init)
}


#line 299
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SABERConverter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 315
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 315
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 318
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 322
  OrgBouncycastlePqcAsn1McElieceCCA2PublicKey *mKey = OrgBouncycastlePqcAsn1McElieceCCA2PublicKey_getInstanceWithId_([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) parsePublicKey]);
  
#line 324
  return new_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters_initWithInt_withInt_withOrgBouncycastlePqcMathLinearalgebraGF2Matrix_withNSString_([((OrgBouncycastlePqcAsn1McElieceCCA2PublicKey *) nil_chk(mKey)) getN], [mKey getT], [mKey getG], OrgBouncycastlePqcCryptoUtilUtils_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([mKey getDigest])) getAlgorithm]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter = { "McElieceCCA2Converter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter;
}

@end


#line 315
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 315
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter, init)
}


#line 315
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_McElieceCCA2Converter)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PublicKeyFactory.java"


#line 328
@implementation OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 328
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 329
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo
                                                                                                                      withId:(id)defaultParams {
  
#line 333
  IOSByteArray *keyEnc = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(keyInfo)) parsePublicKey]))) getOctets];
  
#line 335
  OrgBouncycastlePqcCryptoFrodoFrodoParameters *fParams = OrgBouncycastlePqcCryptoUtilUtils_frodoParamsLookupWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyInfo getAlgorithm])) getAlgorithm]);
  
#line 337
  return new_OrgBouncycastlePqcCryptoFrodoFrodoPublicKeyParameters_initWithOrgBouncycastlePqcCryptoFrodoFrodoParameters_withByteArray_(fParams, keyEnc);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getPublicKeyParametersWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getPublicKeyParameters", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;LNSObject;", "LJavaIoIOException;", "LOrgBouncycastlePqcCryptoUtilPublicKeyFactory;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter = { "FrodoConverter", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x8, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter;
}

@end


#line 328
void OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter *self) {
  OrgBouncycastlePqcCryptoUtilPublicKeyFactory_SubjectPublicKeyInfoConverter_init(self);
}


#line 328
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter *new_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter, init)
}


#line 328
OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter *create_OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_FrodoConverter)

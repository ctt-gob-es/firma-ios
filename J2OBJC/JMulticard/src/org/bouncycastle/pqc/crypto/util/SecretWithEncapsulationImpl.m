//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/SecretWithEncapsulationImpl.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "org/bouncycastle/pqc/crypto/util/SecretWithEncapsulationImpl.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/util/SecretWithEncapsulationImpl must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl () {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *hasBeenDestroyed_;
  IOSByteArray *sessionKey_;
  IOSByteArray *cipher_text_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl, hasBeenDestroyed_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl, sessionKey_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl, cipher_text_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/SecretWithEncapsulationImpl.java"


#line 10
@implementation OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl


#line 18
- (instancetype)initWithByteArray:(IOSByteArray *)sessionKey
                    withByteArray:(IOSByteArray *)cipher_text {
  OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl_initWithByteArray_withByteArray_(self, sessionKey, cipher_text);
  return self;
}

- (IOSByteArray *)getSecret {
  
#line 27
  [self checkDestroyed];
  
#line 29
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(sessionKey_);
}


#line 32
- (IOSByteArray *)getEncapsulation {
  
#line 35
  [self checkDestroyed];
  
#line 37
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(cipher_text_);
}


#line 40
- (void)destroy {
  
#line 44
  if (![((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(hasBeenDestroyed_)) getAndSetWithBoolean:true]) {
    
#line 46
    OrgBouncycastleUtilArrays_clearWithByteArray_(sessionKey_);
    OrgBouncycastleUtilArrays_clearWithByteArray_(cipher_text_);
  }
}

- (jboolean)isDestroyed {
  
#line 54
  return [((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(hasBeenDestroyed_)) get];
}

- (void)checkDestroyed {
  
#line 59
  if ([self isDestroyed]) {
    
#line 61
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"data has been destroyed");
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:withByteArray:);
  methods[1].selector = @selector(getSecret);
  methods[2].selector = @selector(getEncapsulation);
  methods[3].selector = @selector(destroy);
  methods[4].selector = @selector(isDestroyed);
  methods[5].selector = @selector(checkDestroyed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hasBeenDestroyed_", "LJavaUtilConcurrentAtomicAtomicBoolean;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sessionKey_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cipher_text_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B[B", "LJavaxSecurityAuthDestroyFailedException;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl = { "SecretWithEncapsulationImpl", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl;
}

@end


#line 18
void OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl_initWithByteArray_withByteArray_(OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl *self, IOSByteArray *sessionKey, IOSByteArray *cipher_text) {
  NSObject_init(self);
  self->hasBeenDestroyed_ = new_JavaUtilConcurrentAtomicAtomicBoolean_initWithBoolean_(
#line 13
  false);
  
#line 20
  self->sessionKey_ = sessionKey;
  self->cipher_text_ = cipher_text;
}


#line 18
OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl *new_OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl_initWithByteArray_withByteArray_(IOSByteArray *sessionKey, IOSByteArray *cipher_text) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl, initWithByteArray_withByteArray_, sessionKey, cipher_text)
}


#line 18
OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl *create_OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl_initWithByteArray_withByteArray_(IOSByteArray *sessionKey, IOSByteArray *cipher_text) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl, initWithByteArray_withByteArray_, sessionKey, cipher_text)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilSecretWithEncapsulationImpl)

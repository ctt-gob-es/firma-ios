//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/SubjectPublicKeyInfoFactory.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/isara/IsaraObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/asn1/CMCEPublicKey.h"
#include "org/bouncycastle/pqc/asn1/McElieceCCA2PublicKey.h"
#include "org/bouncycastle/pqc/asn1/PQCObjectIdentifiers.h"
#include "org/bouncycastle/pqc/asn1/SPHINCS256KeyParams.h"
#include "org/bouncycastle/pqc/asn1/XMSSKeyParams.h"
#include "org/bouncycastle/pqc/asn1/XMSSMTKeyParams.h"
#include "org/bouncycastle/pqc/asn1/XMSSMTPublicKey.h"
#include "org/bouncycastle/pqc/asn1/XMSSPublicKey.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEParameters.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/frodo/FrodoParameters.h"
#include "org/bouncycastle/pqc/crypto/frodo/FrodoPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/Composer.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLAPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincs/SPHINCSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/util/SubjectPublicKeyInfoFactory.h"
#include "org/bouncycastle/pqc/crypto/util/Utils.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/util/SubjectPublicKeyInfoFactory must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_init(OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory *new_OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory *create_OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_init(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/SubjectPublicKeyInfoFactory.java"


#line 37
@implementation OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 39
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 51
+ (OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)createSubjectPublicKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicKey {
  return OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_createSubjectPublicKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(publicKey);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", 0x9, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createSubjectPublicKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createSubjectPublicKeyInfo", "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory = { "SubjectPublicKeyInfoFactory", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory;
}

@end


#line 39
void OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_init(OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory *self) {
  NSObject_init(self);
}


#line 39
OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory *new_OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory, init)
}


#line 39
OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory *create_OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory, init)
}


#line 51
OrgBouncycastleAsn1X509SubjectPublicKeyInfo *OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_createSubjectPublicKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey) {
  OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_initialize();
  
#line 54
  if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters class]]) {
    
#line 56
    OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *keyParams = (OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) publicKey;
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = OrgBouncycastlePqcCryptoUtilUtils_qTeslaLookupAlgIDWithInt_([((OrgBouncycastlePqcCryptoQteslaQTESLAPublicKeyParameters *) nil_chk(keyParams)) getSecurityCategory]);
    
#line 59
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(algorithmIdentifier, [keyParams getPublicData]);
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters class]]) {
    
#line 63
    OrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *params = (OrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) publicKey;
    
#line 65
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, sphincs256), new_OrgBouncycastlePqcAsn1SPHINCS256KeyParams_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_sphincs256LookupTreeAlgIDWithNSString_(
#line 66
    [((OrgBouncycastlePqcCryptoSphincsSPHINCSPublicKeyParameters *) nil_chk(params)) getTreeDigest])));
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(algorithmIdentifier, [params getKeyData]);
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters class]]) {
    
#line 71
    OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *params = (OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) publicKey;
    
#line 73
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, newHope));
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(algorithmIdentifier, [((OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) nil_chk(params)) getPubData]);
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters class]]) {
    
#line 78
    OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *params = (OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *) publicKey;
    
#line 80
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:1])) bytesWithOrgBouncycastleUtilEncodable:params])) build];
    
#line 82
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_hss_lms_hashsig));
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding));
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters class]]) {
    
#line 87
    OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *params = (OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *) publicKey;
    
#line 89
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:[((OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *) nil_chk(params)) getL]])) bytesWithOrgBouncycastleUtilEncodable:[params getLMSPublicKey]])) build];
    
#line 91
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_hss_lms_hashsig));
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding));
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters class]]) {
    
#line 96
    OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *params = (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *) publicKey;
    
#line 98
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *) nil_chk(params)) getEncoded];
    
#line 100
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_sphincsPlusOidLookupWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_([params getParameters]));
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding));
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoCmceCMCEPublicKeyParameters class]]) {
    
#line 105
    OrgBouncycastlePqcCryptoCmceCMCEPublicKeyParameters *params = (OrgBouncycastlePqcCryptoCmceCMCEPublicKeyParameters *) publicKey;
    
#line 107
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoCmceCMCEPublicKeyParameters *) nil_chk(params)) getEncoded];
    
#line 109
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_mcElieceOidLookupWithOrgBouncycastlePqcCryptoCmceCMCEParameters_([params getParameters]));
    
#line 112
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastlePqcAsn1CMCEPublicKey_initWithByteArray_(encoding));
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters class]]) {
    
#line 116
    OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *keyParams = (OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *) publicKey;
    
#line 118
    IOSByteArray *publicSeed = [((OrgBouncycastlePqcCryptoXmssXMSSPublicKeyParameters *) nil_chk(keyParams)) getPublicSeed];
    IOSByteArray *root = [keyParams getRoot];
    IOSByteArray *keyEnc = [keyParams getEncoded];
    if (((IOSByteArray *) nil_chk(keyEnc))->size_ > ((IOSByteArray *) nil_chk(publicSeed))->size_ + ((IOSByteArray *) nil_chk(root))->size_) {
      
#line 123
      OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastleAsn1IsaraIsaraObjectIdentifiers, id_alg_xmss));
      
#line 125
      return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(keyEnc));
    }
    else {
      
#line 129
      OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss), new_OrgBouncycastlePqcAsn1XMSSKeyParams_initWithInt_withOrgBouncycastleAsn1X509AlgorithmIdentifier_(
#line 130
      [((OrgBouncycastlePqcCryptoXmssXMSSParameters *) nil_chk([keyParams getParameters])) getHeight], OrgBouncycastlePqcCryptoUtilUtils_xmssLookupTreeAlgIDWithNSString_([keyParams getTreeDigest])));
      
#line 132
      return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastlePqcAsn1XMSSPublicKey_initWithByteArray_withByteArray_(publicSeed, root));
    }
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters class]]) {
    
#line 137
    OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *keyParams = (OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *) publicKey;
    
#line 139
    IOSByteArray *publicSeed = [((OrgBouncycastlePqcCryptoXmssXMSSMTPublicKeyParameters *) nil_chk(keyParams)) getPublicSeed];
    IOSByteArray *root = [keyParams getRoot];
    IOSByteArray *keyEnc = [keyParams getEncoded];
    if (((IOSByteArray *) nil_chk(keyEnc))->size_ > ((IOSByteArray *) nil_chk(publicSeed))->size_ + ((IOSByteArray *) nil_chk(root))->size_) {
      
#line 144
      OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastleAsn1IsaraIsaraObjectIdentifiers, id_alg_xmssmt));
      
#line 146
      return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(keyEnc));
    }
    else {
      
#line 150
      OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss_mt), new_OrgBouncycastlePqcAsn1XMSSMTKeyParams_initWithInt_withInt_withOrgBouncycastleAsn1X509AlgorithmIdentifier_([((OrgBouncycastlePqcCryptoXmssXMSSMTParameters *) nil_chk([keyParams getParameters])) getHeight], [((OrgBouncycastlePqcCryptoXmssXMSSMTParameters *) nil_chk([keyParams getParameters])) getLayers], OrgBouncycastlePqcCryptoUtilUtils_xmssLookupTreeAlgIDWithNSString_(
#line 151
      [keyParams getTreeDigest])));
      return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastlePqcAsn1XMSSMTPublicKey_initWithByteArray_withByteArray_([keyParams getPublicSeed], [keyParams getRoot]));
    }
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters class]]) {
    
#line 157
    OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *pub = (OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *) publicKey;
    OrgBouncycastlePqcAsn1McElieceCCA2PublicKey *mcEliecePub = new_OrgBouncycastlePqcAsn1McElieceCCA2PublicKey_initWithInt_withInt_withOrgBouncycastlePqcMathLinearalgebraGF2Matrix_withOrgBouncycastleAsn1X509AlgorithmIdentifier_([((OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PublicKeyParameters *) nil_chk(pub)) getN], [pub getT], [pub getG], OrgBouncycastlePqcCryptoUtilUtils_getAlgorithmIdentifierWithNSString_([pub getDigest]));
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcElieceCca2));
    
#line 161
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, mcEliecePub);
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoFrodoFrodoPublicKeyParameters class]]) {
    
#line 165
    OrgBouncycastlePqcCryptoFrodoFrodoPublicKeyParameters *params = (OrgBouncycastlePqcCryptoFrodoFrodoPublicKeyParameters *) publicKey;
    
#line 167
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoFrodoFrodoPublicKeyParameters *) nil_chk(params)) getEncoded];
    
#line 169
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_frodoOidLookupWithOrgBouncycastlePqcCryptoFrodoFrodoParameters_([params getParameters]));
    
#line 171
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, (new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding)));
  }
  else if ([publicKey isKindOfClass:[OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters class]]) {
    
#line 175
    OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *params = (OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *) publicKey;
    
#line 177
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoSaberSABERPublicKeyParameters *) nil_chk(params)) getEncoded];
    
#line 179
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_saberOidLookupWithOrgBouncycastlePqcCryptoSaberSABERParameters_([params getParameters]));
    
#line 182
    return new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1Encodable_(new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding)));
  }
  else {
    
#line 186
    @throw new_JavaIoIOException_initWithNSString_(@"key parameters not recognized");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/asn1/CMCEPrivateKey.h"
#include "org/bouncycastle/pqc/asn1/CMCEPublicKey.h"
#include "org/bouncycastle/pqc/asn1/McElieceCCA2PrivateKey.h"
#include "org/bouncycastle/pqc/asn1/PQCObjectIdentifiers.h"
#include "org/bouncycastle/pqc/asn1/SPHINCS256KeyParams.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEParameters.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/frodo/FrodoParameters.h"
#include "org/bouncycastle/pqc/crypto/frodo/FrodoPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/Composer.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2PrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLAPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERParameters.h"
#include "org/bouncycastle/pqc/crypto/saber/SABERPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincs/SPHINCSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.h"
#include "org/bouncycastle/pqc/crypto/util/Utils.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2mField.h"
#include "org/bouncycastle/pqc/math/linearalgebra/Permutation.h"
#include "org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_init(OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory *self);

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory *new_OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory *create_OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_init(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.java"


#line 34
@implementation OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 36
- (instancetype)init {
  OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 48
+ (OrgBouncycastleAsn1PkcsPrivateKeyInfo *)createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateKey {
  return OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(privateKey);
}


#line 61
+ (OrgBouncycastleAsn1PkcsPrivateKeyInfo *)createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateKey
                                                                                      withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)attributes {
  return OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleAsn1ASN1Set_(privateKey, attributes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", 0x9, 0, 3, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  methods[2].selector = @selector(createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:withOrgBouncycastleAsn1ASN1Set:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createPrivateKeyInfo", "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", "LJavaIoIOException;", "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;LOrgBouncycastleAsn1ASN1Set;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory = { "PrivateKeyInfoFactory", "org.bouncycastle.pqc.crypto.util", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory;
}

@end


#line 36
void OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_init(OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory *self) {
  NSObject_init(self);
}


#line 36
OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory *new_OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory, init)
}


#line 36
OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory *create_OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory, init)
}


#line 48
OrgBouncycastleAsn1PkcsPrivateKeyInfo *OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateKey) {
  OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_initialize();
  return OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleAsn1ASN1Set_(privateKey, nil);
}


#line 61
OrgBouncycastleAsn1PkcsPrivateKeyInfo *OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateKey, OrgBouncycastleAsn1ASN1Set *attributes) {
  OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_initialize();
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters class]]) {
    
#line 65
    OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *keyParams = (OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) privateKey;
    
#line 67
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = OrgBouncycastlePqcCryptoUtilUtils_qTeslaLookupAlgIDWithInt_([((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(keyParams)) getSecurityCategory]);
    
#line 69
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_withOrgBouncycastleAsn1ASN1Set_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_([keyParams getSecret]), attributes);
  }
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoSphincsSPHINCSPrivateKeyParameters class]]) {
    
#line 73
    OrgBouncycastlePqcCryptoSphincsSPHINCSPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoSphincsSPHINCSPrivateKeyParameters *) privateKey;
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, sphincs256), new_OrgBouncycastlePqcAsn1SPHINCS256KeyParams_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_sphincs256LookupTreeAlgIDWithNSString_(
#line 75
    [((OrgBouncycastlePqcCryptoSphincsSPHINCSPrivateKeyParameters *) nil_chk(params)) getTreeDigest])));
    
#line 77
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_([params getKeyData]));
  }
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters class]]) {
    
#line 81
    OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *) privateKey;
    
#line 83
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, newHope));
    
#line 85
    IOSShortArray *privateKeyData = [((OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *) nil_chk(params)) getSecData];
    
#line 87
    IOSByteArray *octets = [IOSByteArray newArrayWithLength:((IOSShortArray *) nil_chk(privateKeyData))->size_ * 2];
    for (jint i = 0; i != privateKeyData->size_; i++) {
      
#line 90
      OrgBouncycastleUtilPack_shortToLittleEndianWithShort_withByteArray_withInt_(IOSShortArray_Get(privateKeyData, i), octets, i * 2);
    }
    
#line 93
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(octets));
  }
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]]) {
    
#line 97
    OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) privateKey;
    
#line 99
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:1])) bytesWithOrgBouncycastleUtilEncodable:params])) build];
    IOSByteArray *pubEncoding = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:1])) bytesWithOrgBouncycastleUtilEncodable:[((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(params)) getPublicKey]])) build];
    
#line 102
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_hss_lms_hashsig));
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_withOrgBouncycastleAsn1ASN1Set_withByteArray_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding), attributes, pubEncoding);
  }
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters class]]) {
    
#line 107
    OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) privateKey;
    
#line 109
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:[((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(params)) getL]])) bytesWithOrgBouncycastleUtilEncodable:params])) build];
    IOSByteArray *pubEncoding = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:[params getL]])) bytesWithOrgBouncycastleUtilEncodable:[((OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *) nil_chk([params getPublicKey])) getLMSPublicKey]])) build];
    
#line 112
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_hss_lms_hashsig));
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_withOrgBouncycastleAsn1ASN1Set_withByteArray_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding), attributes, pubEncoding);
  }
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters class]]) {
    
#line 117
    OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) privateKey;
    
#line 119
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) nil_chk(params)) getEncoded];
    IOSByteArray *pubEncoding = [params getEncodedPublicKey];
    
#line 122
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_sphincsPlusOidLookupWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_([params getParameters]));
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_withOrgBouncycastleAsn1ASN1Set_withByteArray_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding), attributes, pubEncoding);
  }
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters class]]) {
    
#line 127
    OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *) privateKey;
    
#line 129
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *) nil_chk(params)) getEncoded];
    
#line 133
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_mcElieceOidLookupWithOrgBouncycastlePqcCryptoCmceCMCEParameters_([params getParameters]));
    
#line 135
    OrgBouncycastlePqcAsn1CMCEPublicKey *cmcePub = new_OrgBouncycastlePqcAsn1CMCEPublicKey_initWithByteArray_([params reconstructPublicKey]);
    OrgBouncycastlePqcAsn1CMCEPrivateKey *cmcePriv = new_OrgBouncycastlePqcAsn1CMCEPrivateKey_initWithInt_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_withOrgBouncycastlePqcAsn1CMCEPublicKey_(0, [params getDelta], [params getC], [params getG], [params getAlpha], [params getS], cmcePub);
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_withOrgBouncycastleAsn1ASN1Set_(algorithmIdentifier, cmcePriv, attributes);
  }
  else if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoXmssXMSSPrivateKeyParameters class]] || [privateKey isKindOfClass:[OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters class]]) {
    
#line 141
    @throw new_JavaIoIOException_initWithNSString_(@"Modificacion para JMultiCard");
  }
  else if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters class]]) {
    
#line 145
    OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *priv = (OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) privateKey;
    OrgBouncycastlePqcAsn1McElieceCCA2PrivateKey *mcEliecePriv = new_OrgBouncycastlePqcAsn1McElieceCCA2PrivateKey_initWithInt_withInt_withOrgBouncycastlePqcMathLinearalgebraGF2mField_withOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_withOrgBouncycastlePqcMathLinearalgebraPermutation_withOrgBouncycastleAsn1X509AlgorithmIdentifier_([((OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *) nil_chk(priv)) getN], [priv getK], [priv getField], [priv getGoppaPoly], [priv getP], OrgBouncycastlePqcCryptoUtilUtils_getAlgorithmIdentifierWithNSString_([priv getDigest]));
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcElieceCca2));
    
#line 149
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, mcEliecePriv);
  }
  else if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoFrodoFrodoPrivateKeyParameters class]]) {
    
#line 153
    OrgBouncycastlePqcCryptoFrodoFrodoPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoFrodoFrodoPrivateKeyParameters *) privateKey;
    
#line 155
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoFrodoFrodoPrivateKeyParameters *) nil_chk(params)) getEncoded];
    
#line 157
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_frodoOidLookupWithOrgBouncycastlePqcCryptoFrodoFrodoParameters_([params getParameters]));
    
#line 159
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_withOrgBouncycastleAsn1ASN1Set_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding), attributes);
  }
  else if ([privateKey isKindOfClass:[OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters class]]) {
    
#line 163
    OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters *params = (OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters *) privateKey;
    
#line 165
    IOSByteArray *encoding = [((OrgBouncycastlePqcCryptoSaberSABERPrivateKeyParameters *) nil_chk(params)) getEncoded];
    
#line 167
    OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoUtilUtils_saberOidLookupWithOrgBouncycastlePqcCryptoSaberSABERParameters_([params getParameters]));
    
#line 169
    return new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_withOrgBouncycastleAsn1ASN1Set_(algorithmIdentifier, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(encoding), attributes);
  }
  else {
    
#line 173
    @throw new_JavaIoIOException_initWithNSString_(@"key parameters not recognized");
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory)

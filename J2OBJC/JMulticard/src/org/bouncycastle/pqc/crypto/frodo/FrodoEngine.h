//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/frodo/FrodoEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoFrodoFrodoEngine")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoFrodoFrodoEngine
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoFrodoFrodoEngine 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoFrodoFrodoEngine 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoFrodoFrodoEngine

#if !defined (OrgBouncycastlePqcCryptoFrodoFrodoEngine_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoFrodoFrodoEngine || defined(INCLUDE_OrgBouncycastlePqcCryptoFrodoFrodoEngine))
#define OrgBouncycastlePqcCryptoFrodoFrodoEngine_

@class IOSByteArray;
@class IOSShortArray;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator;
@protocol OrgBouncycastleCryptoXof;

@interface OrgBouncycastlePqcCryptoFrodoFrodoEngine : NSObject

#pragma mark Public

- (instancetype)initPackagePrivateWithInt:(jint)n
                                  withInt:(jint)D
                                  withInt:(jint)B
                           withShortArray:(IOSShortArray *)cdf_table
             withOrgBouncycastleCryptoXof:(id<OrgBouncycastleCryptoXof>)digest
withOrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator:(OrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator *)mGen;

- (jint)getCipherTextSize;

- (jint)getPrivateKeySize;

- (jint)getPublicKeySize;

- (jint)getSessionKeySize;

- (void)kem_decWithByteArray:(IOSByteArray *)ss
               withByteArray:(IOSByteArray *)ct
               withByteArray:(IOSByteArray *)sk;

- (void)kem_encWithByteArray:(IOSByteArray *)ct
               withByteArray:(IOSByteArray *)ss
               withByteArray:(IOSByteArray *)pk
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)kem_keypairWithByteArray:(IOSByteArray *)pk
                   withByteArray:(IOSByteArray *)sk
    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoFrodoFrodoEngine)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoFrodoFrodoEngine_initPackagePrivateWithInt_withInt_withInt_withShortArray_withOrgBouncycastleCryptoXof_withOrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator_(OrgBouncycastlePqcCryptoFrodoFrodoEngine *self, jint n, jint D, jint B, IOSShortArray *cdf_table, id<OrgBouncycastleCryptoXof> digest, OrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator *mGen);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoFrodoFrodoEngine *new_OrgBouncycastlePqcCryptoFrodoFrodoEngine_initPackagePrivateWithInt_withInt_withInt_withShortArray_withOrgBouncycastleCryptoXof_withOrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator_(jint n, jint D, jint B, IOSShortArray *cdf_table, id<OrgBouncycastleCryptoXof> digest, OrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator *mGen) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoFrodoFrodoEngine *create_OrgBouncycastlePqcCryptoFrodoFrodoEngine_initPackagePrivateWithInt_withInt_withInt_withShortArray_withOrgBouncycastleCryptoXof_withOrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator_(jint n, jint D, jint B, IOSShortArray *cdf_table, id<OrgBouncycastleCryptoXof> digest, OrgBouncycastlePqcCryptoFrodoFrodoMatrixGenerator *mGen);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoFrodoFrodoEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoFrodoFrodoEngine")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.java"


#line 6
@implementation OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters


#line 11
- (instancetype)initWithByteArray:(IOSByteArray *)pubData {
  OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_(self, pubData);
  return self;
}


#line 22
- (IOSByteArray *)getPubData {
  
#line 24
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(pubData_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(getPubData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pubData_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters = { "NHPublicKeyParameters", "org.bouncycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters;
}

@end


#line 11
void OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_(OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *self, IOSByteArray *pubData) {
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self,
#line 13
  false);
  self->pubData_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(pubData);
}


#line 11
OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *new_OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_(IOSByteArray *pubData) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters, initWithByteArray_, pubData)
}


#line 11
OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *create_OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_(IOSByteArray *pubData) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters, initWithByteArray_, pubData)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters)

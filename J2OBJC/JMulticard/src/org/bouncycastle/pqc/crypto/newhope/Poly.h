//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/Poly.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoNewhopePoly")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoNewhopePoly
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoNewhopePoly 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoNewhopePoly 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoNewhopePoly

#if !defined (OrgBouncycastlePqcCryptoNewhopePoly_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoNewhopePoly || defined(INCLUDE_OrgBouncycastlePqcCryptoNewhopePoly))
#define OrgBouncycastlePqcCryptoNewhopePoly_

@class IOSByteArray;
@class IOSShortArray;

@interface OrgBouncycastlePqcCryptoNewhopePoly : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

+ (void)addWithShortArray:(IOSShortArray *)x
           withShortArray:(IOSShortArray *)y
           withShortArray:(IOSShortArray *)z;

+ (void)fromBytesWithShortArray:(IOSShortArray *)r
                  withByteArray:(IOSByteArray *)a;

+ (void)fromNTTWithShortArray:(IOSShortArray *)r;

+ (void)getNoiseWithShortArray:(IOSShortArray *)r
                 withByteArray:(IOSByteArray *)seed
                      withByte:(jbyte)nonce;

+ (void)pointWiseWithShortArray:(IOSShortArray *)x
                 withShortArray:(IOSShortArray *)y
                 withShortArray:(IOSShortArray *)z;

+ (void)toBytesWithByteArray:(IOSByteArray *)r
              withShortArray:(IOSShortArray *)p;

+ (void)toNTTWithShortArray:(IOSShortArray *)r;

+ (void)uniformWithShortArray:(IOSShortArray *)a
                withByteArray:(IOSByteArray *)seed;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoNewhopePoly)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_initPackagePrivate(OrgBouncycastlePqcCryptoNewhopePoly *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoNewhopePoly *new_OrgBouncycastlePqcCryptoNewhopePoly_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoNewhopePoly *create_OrgBouncycastlePqcCryptoNewhopePoly_initPackagePrivate(void);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_addWithShortArray_withShortArray_withShortArray_(IOSShortArray *x, IOSShortArray *y, IOSShortArray *z);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_fromBytesWithShortArray_withByteArray_(IOSShortArray *r, IOSByteArray *a);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_fromNTTWithShortArray_(IOSShortArray *r);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_getNoiseWithShortArray_withByteArray_withByte_(IOSShortArray *r, IOSByteArray *seed, jbyte nonce);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_pointWiseWithShortArray_withShortArray_withShortArray_(IOSShortArray *x, IOSShortArray *y, IOSShortArray *z);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_toBytesWithByteArray_withShortArray_(IOSByteArray *r, IOSShortArray *p);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_toNTTWithShortArray_(IOSShortArray *r);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoNewhopePoly_uniformWithShortArray_withByteArray_(IOSShortArray *a, IOSByteArray *seed);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoNewhopePoly)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoNewhopePoly")

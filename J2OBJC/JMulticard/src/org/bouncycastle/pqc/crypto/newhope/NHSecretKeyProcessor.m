//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHSecretKeyProcessor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/bouncycastle/crypto/KeyGenerationParameters.h"
#include "org/bouncycastle/crypto/Xof.h"
#include "org/bouncycastle/crypto/digests/SHAKEDigest.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/ExchangePair.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHAgreement.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHExchangePairGenerator.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHKeyPairGenerator.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHSecretKeyProcessor.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/newhope/NHSecretKeyProcessor must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor () {
 @public
  id<OrgBouncycastleCryptoXof> xof_;
}

+ (void)xor__WithByteArray:(IOSByteArray *)a
             withByteArray:(IOSByteArray *)b;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor, xof_, id<OrgBouncycastleCryptoXof>)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_xor__WithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b);

@interface OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder () {
 @public
  OrgBouncycastleCryptoAsymmetricCipherKeyPair *aKp_;
  OrgBouncycastlePqcCryptoNewhopeNHAgreement *agreement_;
  IOSByteArray *sharedInfo_;
  jboolean used_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder, aKp_, OrgBouncycastleCryptoAsymmetricCipherKeyPair *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder, agreement_, OrgBouncycastlePqcCryptoNewhopeNHAgreement *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder, sharedInfo_, IOSByteArray *)

@interface OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder () {
 @public
  IOSByteArray *sharedInfo_;
  IOSByteArray *sharedSecret_;
  jboolean used_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder, sharedInfo_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder, sharedSecret_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHSecretKeyProcessor.java"


#line 16
@implementation OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor


#line 114
- (instancetype)initWithByteArray:(IOSByteArray *)secret
                    withByteArray:(IOSByteArray *)shared {
  OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_initWithByteArray_withByteArray_(self, secret, shared);
  return self;
}


#line 124
- (IOSByteArray *)processKeyWithByteArray:(IOSByteArray *)initialKey {
  
#line 126
  IOSByteArray *xorBytes = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(initialKey))->size_];
  
#line 128
  [((id<OrgBouncycastleCryptoXof>) nil_chk(xof_)) doFinalWithByteArray:xorBytes withInt:0 withInt:xorBytes->size_];
  
#line 130
  OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_xor__WithByteArray_withByteArray_(initialKey, xorBytes);
  
#line 132
  OrgBouncycastleUtilArrays_fillWithByteArray_withByte_(xorBytes, (jbyte) 0);
  
#line 134
  return initialKey;
}


#line 137
+ (void)xor__WithByteArray:(IOSByteArray *)a
             withByteArray:(IOSByteArray *)b {
  OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_xor__WithByteArray_withByteArray_(a, b);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 3, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:withByteArray:);
  methods[1].selector = @selector(processKeyWithByteArray:);
  methods[2].selector = @selector(xor__WithByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "xof_", "LOrgBouncycastleCryptoXof;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B[B", "processKey", "[B", "xor", "LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder;LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor = { "NHSecretKeyProcessor", "org.bouncycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, 4, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor;
}

@end


#line 114
void OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_initWithByteArray_withByteArray_(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor *self, IOSByteArray *secret, IOSByteArray *shared) {
  NSObject_init(self);
  self->xof_ = new_OrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(
#line 112
  256);
  
#line 115
  [self->xof_ updateWithByteArray:secret withInt:0 withInt:((IOSByteArray *) nil_chk(secret))->size_];
  
#line 117
  if (shared != nil) {
    [self->xof_ updateWithByteArray:shared withInt:0 withInt:shared->size_];
  }
  
#line 121
  OrgBouncycastleUtilArrays_fillWithByteArray_withByte_(secret, (jbyte) 0);
}


#line 114
OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor *new_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_initWithByteArray_withByteArray_(IOSByteArray *secret, IOSByteArray *shared) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor, initWithByteArray_withByteArray_, secret, shared)
}


#line 114
OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor *create_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_initWithByteArray_withByteArray_(IOSByteArray *secret, IOSByteArray *shared) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor, initWithByteArray_withByteArray_, secret, shared)
}


#line 137
void OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_xor__WithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b) {
  OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_initialize();
  for (jint i = 0; i != ((IOSByteArray *) nil_chk(a))->size_; i++) {
    
#line 141
    *IOSByteArray_GetRef(a, i) ^= IOSByteArray_Get(nil_chk(b), i);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHSecretKeyProcessor.java"


#line 21
@implementation OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder


#line 29
- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder_initWithJavaSecuritySecureRandom_(self, random);
  return self;
}


#line 40
- (OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder *)withSharedInfoWithByteArray:(IOSByteArray *)sharedInfo {
  
#line 42
  self->sharedInfo_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(sharedInfo);
  
#line 44
  return self;
}


#line 47
- (IOSByteArray *)getPartA {
  
#line 49
  return [((OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) cast_chk([((OrgBouncycastleCryptoAsymmetricCipherKeyPair *) nil_chk(aKp_)) getPublic], [OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters class])))) getPubData];
}


#line 52
- (OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor *)buildWithByteArray:(IOSByteArray *)partB {
  
#line 54
  if (used_) {
    
#line 56
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"builder already used");
  }
  
#line 59
  used_ = true;
  
#line 61
  return new_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_initWithByteArray_withByteArray_([((OrgBouncycastlePqcCryptoNewhopeNHAgreement *) nil_chk(agreement_)) calculateAgreementWithOrgBouncycastleCryptoCipherParameters:new_OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_(partB)], sharedInfo_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor;", 0x1, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:);
  methods[1].selector = @selector(withSharedInfoWithByteArray:);
  methods[2].selector = @selector(getPartA);
  methods[3].selector = @selector(buildWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "aKp_", "LOrgBouncycastleCryptoAsymmetricCipherKeyPair;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "agreement_", "LOrgBouncycastlePqcCryptoNewhopeNHAgreement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sharedInfo_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "used_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;", "withSharedInfo", "[B", "build", "LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder = { "PartyUBuilder", "org.bouncycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x9, 4, 4, 4, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder;
}

@end


#line 29
void OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder_initWithJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder *self, JavaSecuritySecureRandom *random) {
  NSObject_init(self);
  self->agreement_ = new_OrgBouncycastlePqcCryptoNewhopeNHAgreement_init();
  self->sharedInfo_ =
#line 26
  nil;
  self->used_ = false;
  
#line 31
  OrgBouncycastlePqcCryptoNewhopeNHKeyPairGenerator *kpGen = new_OrgBouncycastlePqcCryptoNewhopeNHKeyPairGenerator_init();
  
#line 33
  [kpGen init__WithOrgBouncycastleCryptoKeyGenerationParameters:new_OrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(random, 2048)];
  
#line 35
  self->aKp_ = [kpGen generateKeyPair];
  
#line 37
  [self->agreement_ init__WithOrgBouncycastleCryptoCipherParameters:[((OrgBouncycastleCryptoAsymmetricCipherKeyPair *) nil_chk(self->aKp_)) getPrivate]];
}


#line 29
OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder *new_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder, initWithJavaSecuritySecureRandom_, random)
}


#line 29
OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder *create_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder, initWithJavaSecuritySecureRandom_, random)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyUBuilder)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHSecretKeyProcessor.java"


#line 68
@implementation OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder


#line 76
- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder_initWithJavaSecuritySecureRandom_(self, random);
  return self;
}

- (OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder *)withSharedInfoWithByteArray:(IOSByteArray *)sharedInfo {
  
#line 83
  self->sharedInfo_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(sharedInfo);
  
#line 85
  return self;
}


#line 88
- (IOSByteArray *)getPartBWithByteArray:(IOSByteArray *)partUContribution {
  
#line 90
  OrgBouncycastlePqcCryptoNewhopeNHExchangePairGenerator *exchGen = new_OrgBouncycastlePqcCryptoNewhopeNHExchangePairGenerator_initWithJavaSecuritySecureRandom_(random_);
  
#line 92
  OrgBouncycastlePqcCryptoExchangePair *bEp = [exchGen generateExchangeWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:new_OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_initWithByteArray_(partUContribution)];
  
#line 94
  sharedSecret_ = [((OrgBouncycastlePqcCryptoExchangePair *) nil_chk(bEp)) getSharedValue];
  
#line 96
  return [((OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) cast_chk([bEp getPublicKey], [OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters class])))) getPubData];
}


#line 99
- (OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor *)build {
  
#line 101
  if (used_) {
    
#line 103
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"builder already used");
  }
  
#line 106
  used_ = true;
  
#line 108
  return new_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_initWithByteArray_withByteArray_(sharedSecret_, sharedInfo_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:);
  methods[1].selector = @selector(withSharedInfoWithByteArray:);
  methods[2].selector = @selector(getPartBWithByteArray:);
  methods[3].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "sharedInfo_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sharedSecret_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "used_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;", "withSharedInfo", "[B", "getPartB", "LOrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder = { "PartyVBuilder", "org.bouncycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x9, 4, 4, 4, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder;
}

@end


#line 76
void OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder_initWithJavaSecuritySecureRandom_(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder *self, JavaSecuritySecureRandom *random) {
  NSObject_init(self);
  self->sharedInfo_ =
#line 72
  nil;
  self->sharedSecret_ = nil;
  self->used_ = false;
  
#line 78
  self->random_ = random;
}


#line 76
OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder *new_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder, initWithJavaSecuritySecureRandom_, random)
}


#line 76
OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder *create_OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder, initWithJavaSecuritySecureRandom_, random)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoNewhopeNHSecretKeyProcessor_PartyVBuilder)

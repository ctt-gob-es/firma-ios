//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHAgreement.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHAgreement.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NewHope.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/newhope/NHAgreement must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoNewhopeNHAgreement () {
 @public
  OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *privKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoNewhopeNHAgreement, privKey_, OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/newhope/NHAgreement.java"


#line 5
@implementation OrgBouncycastlePqcCryptoNewhopeNHAgreement

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 5
- (instancetype)init {
  OrgBouncycastlePqcCryptoNewhopeNHAgreement_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 9
- (void)init__WithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)param {
  
#line 11
  privKey_ = (OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *) cast_chk(param, [OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters class]);
}


#line 14
- (IOSByteArray *)calculateAgreementWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)otherPublicKey {
  
#line 16
  OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *pubKey = (OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) cast_chk(otherPublicKey, [OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters class]);
  
#line 18
  IOSByteArray *sharedValue = [IOSByteArray newArrayWithLength:OrgBouncycastlePqcCryptoNewhopeNewHope_AGREEMENT_SIZE];
  
#line 20
  OrgBouncycastlePqcCryptoNewhopeNewHope_sharedAWithByteArray_withShortArray_withByteArray_(sharedValue, ((OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *) nil_chk(privKey_))->secData_, ((OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) nil_chk(pubKey))->pubData_);
  
#line 22
  return sharedValue;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 2, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgBouncycastleCryptoCipherParameters:);
  methods[2].selector = @selector(calculateAgreementWithOrgBouncycastleCryptoCipherParameters:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "privKey_", "LOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgBouncycastleCryptoCipherParameters;", "calculateAgreement" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoNewhopeNHAgreement = { "NHAgreement", "org.bouncycastle.pqc.crypto.newhope", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoNewhopeNHAgreement;
}

@end


#line 5
void OrgBouncycastlePqcCryptoNewhopeNHAgreement_init(OrgBouncycastlePqcCryptoNewhopeNHAgreement *self) {
  NSObject_init(self);
}


#line 5
OrgBouncycastlePqcCryptoNewhopeNHAgreement *new_OrgBouncycastlePqcCryptoNewhopeNHAgreement_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoNewhopeNHAgreement, init)
}


#line 5
OrgBouncycastlePqcCryptoNewhopeNHAgreement *create_OrgBouncycastlePqcCryptoNewhopeNHAgreement_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoNewhopeNHAgreement, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoNewhopeNHAgreement)

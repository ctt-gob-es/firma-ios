//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/Fors.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusFors")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusFors
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusFors 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusFors 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusFors

#if !defined (OrgBouncycastlePqcCryptoSphincsplusFors_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusFors || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsplusFors))
#define OrgBouncycastlePqcCryptoSphincsplusFors_

@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class OrgBouncycastlePqcCryptoSphincsplusADRS;
@class OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine;

@interface OrgBouncycastlePqcCryptoSphincsplusFors : NSObject {
 @public
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine_;
}

#pragma mark Public

- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *)engine;

- (IOSByteArray *)pkFromSigWithOrgBouncycastlePqcCryptoSphincsplusSIG_FORSArray:(IOSObjectArray *)sig_fors
                                                                  withByteArray:(IOSByteArray *)message
                                                                  withByteArray:(IOSByteArray *)pkSeed
                                    withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs;

- (IOSObjectArray *)signWithByteArray:(IOSByteArray *)md
                        withByteArray:(IOSByteArray *)skSeed
                        withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs;

#pragma mark Package-Private

/*!
 @brief Interprets m as SPX_FORS_HEIGHT-bit unsigned integers.
 Assumes m contains at least SPX_FORS_HEIGHT * SPX_FORS_TREES bits.
  Assumes indices has space for SPX_FORS_TREES integers.
 */
+ (IOSIntArray *)message_to_idxsWithByteArray:(IOSByteArray *)msg
                                      withInt:(jint)fors_trees
                                      withInt:(jint)fors_height;

- (IOSByteArray *)treehashWithByteArray:(IOSByteArray *)skSeed
                                withInt:(jint)s
                                withInt:(jint)z
                          withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrsParam;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsplusFors)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusFors, engine_, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusFors_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_(OrgBouncycastlePqcCryptoSphincsplusFors *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusFors *new_OrgBouncycastlePqcCryptoSphincsplusFors_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusFors *create_OrgBouncycastlePqcCryptoSphincsplusFors_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine);

FOUNDATION_EXPORT IOSIntArray *OrgBouncycastlePqcCryptoSphincsplusFors_message_to_idxsWithByteArray_withInt_withInt_(IOSByteArray *msg, jint fors_trees, jint fors_height);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsplusFors)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusFors")

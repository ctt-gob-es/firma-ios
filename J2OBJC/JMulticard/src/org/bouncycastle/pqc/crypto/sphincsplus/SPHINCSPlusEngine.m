//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/crypto/Xof.h"
#include "org/bouncycastle/crypto/digests/SHA256Digest.h"
#include "org/bouncycastle/crypto/digests/SHA512Digest.h"
#include "org/bouncycastle/crypto/digests/SHAKEDigest.h"
#include "org/bouncycastle/crypto/generators/MGF1BytesGenerator.h"
#include "org/bouncycastle/crypto/macs/HMac.h"
#include "org/bouncycastle/crypto/params/KeyParameter.h"
#include "org/bouncycastle/crypto/params/MGFParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/ADRS.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/IndexedDigest.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine () {
 @public
  IOSByteArray *padding_;
  id<OrgBouncycastleCryptoDigest> treeDigest_;
  IOSByteArray *digestBuf_;
  OrgBouncycastleCryptoMacsHMac *treeHMac_;
  OrgBouncycastleCryptoGeneratorsMGF1BytesGenerator *mgf1_;
  IOSByteArray *hmacBuf_;
  id<OrgBouncycastleCryptoDigest> msgDigest_;
}

- (IOSByteArray *)compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, padding_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, treeDigest_, id<OrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, digestBuf_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, treeHMac_, OrgBouncycastleCryptoMacsHMac *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, mgf1_, OrgBouncycastleCryptoGeneratorsMGF1BytesGenerator *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, hmacBuf_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, msgDigest_, id<OrgBouncycastleCryptoDigest>)

__attribute__((unused)) static IOSByteArray *OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine *self, OrgBouncycastlePqcCryptoSphincsplusADRS *adrs);

@interface OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine () {
 @public
  id<OrgBouncycastleCryptoXof> treeDigest_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine, treeDigest_, id<OrgBouncycastleCryptoXof>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine.java"


#line 15
@implementation OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine


#line 35
+ (IOSByteArray *)xor__WithByteArray:(IOSByteArray *)m
                       withByteArray:(IOSByteArray *)mask {
  return OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_xor__WithByteArray_withByteArray_(m, mask);
}


#line 45
- (instancetype)initPackagePrivateWithBoolean:(jboolean)robust
                                      withInt:(jint)n
                                      withInt:(jint)w
                                      withInt:(jint)d
                                      withInt:(jint)a
                                      withInt:(jint)k
                                      withInt:(jint)h {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_initPackagePrivateWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(self, robust, n, w, d, a, k, h);
  return self;
}


#line 104
- (IOSByteArray *)FWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                   withByteArray:(IOSByteArray *)m1 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 106
- (IOSByteArray *)HWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                   withByteArray:(IOSByteArray *)m1
                   withByteArray:(IOSByteArray *)m2 {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 108
- (OrgBouncycastlePqcCryptoSphincsplusIndexedDigest *)H_msgWithByteArray:(IOSByteArray *)prf
                                                           withByteArray:(IOSByteArray *)pkSeed
                                                           withByteArray:(IOSByteArray *)pkRoot
                                                           withByteArray:(IOSByteArray *)message {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 110
- (IOSByteArray *)T_lWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                     withByteArray:(IOSByteArray *)m {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 112
- (IOSByteArray *)PRFWithByteArray:(IOSByteArray *)pkSeed
                     withByteArray:(IOSByteArray *)skSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 114
- (IOSByteArray *)PRF_msgWithByteArray:(IOSByteArray *)prf
                         withByteArray:(IOSByteArray *)randomiser
                         withByteArray:(IOSByteArray *)message {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0xc, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x400, 3, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x400, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoSphincsplusIndexedDigest;", 0x400, 7, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0x400, 9, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x400, 10, 11, -1, -1, -1, -1 },
    { NULL, "[B", 0x400, 12, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(xor__WithByteArray:withByteArray:);
  methods[1].selector = @selector(initPackagePrivateWithBoolean:withInt:withInt:withInt:withInt:withInt:withInt:);
  methods[2].selector = @selector(FWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:);
  methods[3].selector = @selector(HWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:withByteArray:);
  methods[4].selector = @selector(H_msgWithByteArray:withByteArray:withByteArray:withByteArray:);
  methods[5].selector = @selector(T_lWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:);
  methods[6].selector = @selector(PRFWithByteArray:withByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:);
  methods[7].selector = @selector(PRF_msgWithByteArray:withByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "robust_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "N_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "WOTS_W_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "WOTS_LOGW_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "WOTS_LEN_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "WOTS_LEN1_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "WOTS_LEN2_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "D_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "A_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "K_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "H_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "H_PRIME_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "T_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "xor", "[B[B", "ZIIIIII", "F", "[BLOrgBouncycastlePqcCryptoSphincsplusADRS;[B", "H", "[BLOrgBouncycastlePqcCryptoSphincsplusADRS;[B[B", "H_msg", "[B[B[B[B", "T_l", "PRF", "[B[BLOrgBouncycastlePqcCryptoSphincsplusADRS;", "PRF_msg", "[B[B[B", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine;LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine = { "SPHINCSPlusEngine", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x400, 8, 13, -1, 14, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine;
}

@end


#line 35
IOSByteArray *OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_xor__WithByteArray_withByteArray_(IOSByteArray *m, IOSByteArray *mask) {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_initialize();
  IOSByteArray *r = OrgBouncycastleUtilArrays_cloneWithByteArray_(m);
  for (jint t = 0; t < ((IOSByteArray *) nil_chk(m))->size_; t++) {
    
#line 40
    *IOSByteArray_GetRef(nil_chk(r), t) ^= IOSByteArray_Get(nil_chk(mask), t);
  }
  return r;
}


#line 45
void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_initPackagePrivateWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *self, jboolean robust, jint n, jint w, jint d, jint a, jint k, jint h) {
  NSObject_init(self);
  self->N_ = n;
  
#line 50
  if (w == 16) {
    
#line 52
    self->WOTS_LOGW_ = 4;
    self->WOTS_LEN1_ = (JreIntDiv(8 * self->N_, self->WOTS_LOGW_));
    if (self->N_ <= 8) {
      
#line 56
      self->WOTS_LEN2_ = 2;
    }
    else if (self->N_ <= 136) {
      
#line 60
      self->WOTS_LEN2_ = 3;
    }
    else if (self->N_ <= 256) {
      
#line 64
      self->WOTS_LEN2_ = 4;
    }
    else {
      
#line 68
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"cannot precompute SPX_WOTS_LEN2 for n outside {2, .., 256}");
    }
  }
  else if (w == 256) {
    
#line 73
    self->WOTS_LOGW_ = 8;
    self->WOTS_LEN1_ = (JreIntDiv(8 * self->N_, self->WOTS_LOGW_));
    if (self->N_ <= 1) {
      
#line 77
      self->WOTS_LEN2_ = 1;
    }
    else if (self->N_ <= 256) {
      
#line 81
      self->WOTS_LEN2_ = 2;
    }
    else {
      
#line 85
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"cannot precompute SPX_WOTS_LEN2 for n outside {2, .., 256}");
    }
  }
  else {
    
#line 90
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"wots_w assumed 16 or 256");
  }
  self->WOTS_W_ = w;
  self->WOTS_LEN_ = self->WOTS_LEN1_ + self->WOTS_LEN2_;
  
#line 95
  self->robust_ = robust;
  self->D_ = d;
  self->A_ = a;
  self->K_ = k;
  self->H_ = h;
  self->H_PRIME_ = JreIntDiv(h, d);
  self->T_ = JreLShift32(1, a);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine.java"


#line 116
@implementation OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine


#line 127
- (instancetype)initWithBoolean:(jboolean)robust
                        withInt:(jint)n
                        withInt:(jint)w
                        withInt:(jint)d
                        withInt:(jint)a
                        withInt:(jint)k
                        withInt:(jint)h {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(self, robust, n, w, d, a, k, h);
  return self;
}


#line 149
- (IOSByteArray *)FWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                   withByteArray:(IOSByteArray *)m1 {
  IOSByteArray *compressedADRS = OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS_(self, adrs);
  
#line 154
  if (robust_) {
    
#line 156
    m1 = [self bitmask256WithByteArray:OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(pkSeed, compressedADRS) withByteArray:m1];
  }
  
#line 159
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(treeDigest_)) updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:padding_ withInt:0 withInt:64 - pkSeed->size_];
  [treeDigest_ updateWithByteArray:compressedADRS withInt:0 withInt:((IOSByteArray *) nil_chk(compressedADRS))->size_];
  [treeDigest_ updateWithByteArray:m1 withInt:0 withInt:((IOSByteArray *) nil_chk(m1))->size_];
  [treeDigest_ doFinalWithByteArray:digestBuf_ withInt:0];
  
#line 165
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(digestBuf_, 0, N_);
}


#line 168
- (IOSByteArray *)HWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                   withByteArray:(IOSByteArray *)m1
                   withByteArray:(IOSByteArray *)m2 {
  
#line 171
  IOSByteArray *m1m2 = OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(m1, m2);
  IOSByteArray *compressedADRS = OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS_(self, adrs);
  
#line 174
  if (robust_) {
    
#line 176
    m1m2 = [self bitmask256WithByteArray:OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(pkSeed, compressedADRS) withByteArray:m1m2];
  }
  
#line 179
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(treeDigest_)) updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:padding_ withInt:0 withInt:64 - N_];
  [treeDigest_ updateWithByteArray:compressedADRS withInt:0 withInt:((IOSByteArray *) nil_chk(compressedADRS))->size_];
  [treeDigest_ updateWithByteArray:m1m2 withInt:0 withInt:((IOSByteArray *) nil_chk(m1m2))->size_];
  [treeDigest_ doFinalWithByteArray:digestBuf_ withInt:0];
  
#line 185
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(digestBuf_, 0, N_);
}


#line 188
- (OrgBouncycastlePqcCryptoSphincsplusIndexedDigest *)H_msgWithByteArray:(IOSByteArray *)prf
                                                           withByteArray:(IOSByteArray *)pkSeed
                                                           withByteArray:(IOSByteArray *)pkRoot
                                                           withByteArray:(IOSByteArray *)message {
  
#line 191
  jint forsMsgBytes = JreIntDiv(((A_ * K_) + 7), 8);
  jint leafBits = JreIntDiv(H_, D_);
  jint treeBits = H_ - leafBits;
  jint leafBytes = JreIntDiv((leafBits + 7), 8);
  jint treeBytes = JreIntDiv((treeBits + 7), 8);
  jint m = forsMsgBytes + leafBytes + treeBytes;
  IOSByteArray *out = [IOSByteArray newArrayWithLength:m];
  IOSByteArray *dig = [IOSByteArray newArrayWithLength:[((id<OrgBouncycastleCryptoDigest>) nil_chk(msgDigest_)) getDigestSize]];
  
#line 200
  [msgDigest_ updateWithByteArray:prf withInt:0 withInt:((IOSByteArray *) nil_chk(prf))->size_];
  [msgDigest_ updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [msgDigest_ updateWithByteArray:pkRoot withInt:0 withInt:((IOSByteArray *) nil_chk(pkRoot))->size_];
  [msgDigest_ updateWithByteArray:message withInt:0 withInt:((IOSByteArray *) nil_chk(message))->size_];
  [msgDigest_ doFinalWithByteArray:dig withInt:0];
  
#line 207
  out = [self bitmaskWithByteArray:OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(prf, pkSeed, dig) withByteArray:out];
  
#line 211
  IOSByteArray *treeIndexBuf = [IOSByteArray newArrayWithLength:8];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(out, forsMsgBytes, treeIndexBuf, 8 - treeBytes, treeBytes);
  jlong treeIndex = OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(treeIndexBuf, 0);
  treeIndex &= JreURShift64((~0LL), (64 - treeBits));
  
#line 216
  IOSByteArray *leafIndexBuf = [IOSByteArray newArrayWithLength:4];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(out, forsMsgBytes + treeBytes, leafIndexBuf, 4 - leafBytes, leafBytes);
  
#line 219
  jint leafIndex = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(leafIndexBuf, 0);
  leafIndex &= JreURShift32((~0), (32 - leafBits));
  
#line 222
  return new_OrgBouncycastlePqcCryptoSphincsplusIndexedDigest_initPackagePrivateWithLong_withInt_withByteArray_(treeIndex, leafIndex, OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(out, 0, forsMsgBytes));
}


#line 225
- (IOSByteArray *)T_lWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                     withByteArray:(IOSByteArray *)m {
  IOSByteArray *compressedADRS = OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS_(self, adrs);
  if (robust_) {
    
#line 231
    m = [self bitmask256WithByteArray:OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(pkSeed, compressedADRS) withByteArray:m];
  }
  
#line 234
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(treeDigest_)) updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:padding_ withInt:0 withInt:64 - N_];
  [treeDigest_ updateWithByteArray:compressedADRS withInt:0 withInt:((IOSByteArray *) nil_chk(compressedADRS))->size_];
  [treeDigest_ updateWithByteArray:m withInt:0 withInt:((IOSByteArray *) nil_chk(m))->size_];
  [treeDigest_ doFinalWithByteArray:digestBuf_ withInt:0];
  
#line 240
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(digestBuf_, 0, N_);
}


#line 243
- (IOSByteArray *)PRFWithByteArray:(IOSByteArray *)pkSeed
                     withByteArray:(IOSByteArray *)skSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs {
  jint n = ((IOSByteArray *) nil_chk(skSeed))->size_;
  
#line 252
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(treeDigest_)) updateWithByteArray:skSeed withInt:0 withInt:skSeed->size_];
  IOSByteArray *compressedADRS = OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS_(self, adrs);
  
#line 255
  [treeDigest_ updateWithByteArray:compressedADRS withInt:0 withInt:((IOSByteArray *) nil_chk(compressedADRS))->size_];
  [treeDigest_ doFinalWithByteArray:digestBuf_ withInt:0];
  
#line 258
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(digestBuf_, 0, n);
}


#line 261
- (IOSByteArray *)PRF_msgWithByteArray:(IOSByteArray *)prf
                         withByteArray:(IOSByteArray *)randomiser
                         withByteArray:(IOSByteArray *)message {
  [((OrgBouncycastleCryptoMacsHMac *) nil_chk(treeHMac_)) init__WithOrgBouncycastleCryptoCipherParameters:new_OrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_(prf)];
  [treeHMac_ updateWithByteArray:randomiser withInt:0 withInt:((IOSByteArray *) nil_chk(randomiser))->size_];
  [treeHMac_ updateWithByteArray:message withInt:0 withInt:((IOSByteArray *) nil_chk(message))->size_];
  [treeHMac_ doFinalWithByteArray:hmacBuf_ withInt:0];
  
#line 269
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(hmacBuf_, 0, N_);
}


#line 272
- (IOSByteArray *)compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs {
  return OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS_(self, adrs);
}


#line 283
- (IOSByteArray *)bitmaskWithByteArray:(IOSByteArray *)key
                         withByteArray:(IOSByteArray *)m {
  IOSByteArray *mask = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(m))->size_];
  
#line 287
  [((OrgBouncycastleCryptoGeneratorsMGF1BytesGenerator *) nil_chk(mgf1_)) init__WithOrgBouncycastleCryptoDerivationParameters:new_OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(key)];
  
#line 289
  [mgf1_ generateBytesWithByteArray:mask withInt:0 withInt:mask->size_];
  
#line 291
  for (jint i = 0; i < m->size_; ++i) {
    
#line 293
    *IOSByteArray_GetRef(mask, i) ^= IOSByteArray_Get(m, i);
  }
  
#line 296
  return mask;
}


#line 299
- (IOSByteArray *)bitmask256WithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)m {
  IOSByteArray *mask = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(m))->size_];
  
#line 303
  OrgBouncycastleCryptoGeneratorsMGF1BytesGenerator *mgf1 = new_OrgBouncycastleCryptoGeneratorsMGF1BytesGenerator_initWithOrgBouncycastleCryptoDigest_(new_OrgBouncycastleCryptoDigestsSHA256Digest_init());
  
#line 305
  [mgf1 init__WithOrgBouncycastleCryptoDerivationParameters:new_OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(key)];
  
#line 307
  [mgf1 generateBytesWithByteArray:mask withInt:0 withInt:mask->size_];
  
#line 309
  for (jint i = 0; i < m->size_; ++i) {
    
#line 311
    *IOSByteArray_GetRef(mask, i) ^= IOSByteArray_Get(m, i);
  }
  
#line 314
  return mask;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoSphincsplusIndexedDigest;", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 14, 15, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 16, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withInt:withInt:withInt:withInt:withInt:withInt:);
  methods[1].selector = @selector(FWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:);
  methods[2].selector = @selector(HWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:withByteArray:);
  methods[3].selector = @selector(H_msgWithByteArray:withByteArray:withByteArray:withByteArray:);
  methods[4].selector = @selector(T_lWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:);
  methods[5].selector = @selector(PRFWithByteArray:withByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:);
  methods[6].selector = @selector(PRF_msgWithByteArray:withByteArray:withByteArray:);
  methods[7].selector = @selector(compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS:);
  methods[8].selector = @selector(bitmaskWithByteArray:withByteArray:);
  methods[9].selector = @selector(bitmask256WithByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "padding_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "treeDigest_", "LOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "digestBuf_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "treeHMac_", "LOrgBouncycastleCryptoMacsHMac;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "mgf1_", "LOrgBouncycastleCryptoGeneratorsMGF1BytesGenerator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hmacBuf_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "msgDigest_", "LOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZIIIIII", "F", "[BLOrgBouncycastlePqcCryptoSphincsplusADRS;[B", "H", "[BLOrgBouncycastlePqcCryptoSphincsplusADRS;[B[B", "H_msg", "[B[B[B[B", "T_l", "PRF", "[B[BLOrgBouncycastlePqcCryptoSphincsplusADRS;", "PRF_msg", "[B[B[B", "compressedADRS", "LOrgBouncycastlePqcCryptoSphincsplusADRS;", "bitmask", "[B[B", "bitmask256", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine = { "Sha256Engine", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x8, 10, 7, 17, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine;
}

@end


#line 127
void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine *self, jboolean robust, jint n, jint w, jint d, jint a, jint k, jint h) {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_initPackagePrivateWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(self,
#line 129
  robust, n, w, d, a, k, h);
  self->padding_ = [IOSByteArray newArrayWithLength:
#line 119
  64];
  
#line 130
  self->treeDigest_ = new_OrgBouncycastleCryptoDigestsSHA256Digest_init();
  if (n == 32) {
    
#line 133
    self->msgDigest_ = new_OrgBouncycastleCryptoDigestsSHA512Digest_init();
    self->treeHMac_ = new_OrgBouncycastleCryptoMacsHMac_initWithOrgBouncycastleCryptoDigest_(new_OrgBouncycastleCryptoDigestsSHA512Digest_init());
    self->mgf1_ = new_OrgBouncycastleCryptoGeneratorsMGF1BytesGenerator_initWithOrgBouncycastleCryptoDigest_(new_OrgBouncycastleCryptoDigestsSHA512Digest_init());
  }
  else {
    
#line 139
    self->msgDigest_ = new_OrgBouncycastleCryptoDigestsSHA256Digest_init();
    self->treeHMac_ = new_OrgBouncycastleCryptoMacsHMac_initWithOrgBouncycastleCryptoDigest_(new_OrgBouncycastleCryptoDigestsSHA256Digest_init());
    self->mgf1_ = new_OrgBouncycastleCryptoGeneratorsMGF1BytesGenerator_initWithOrgBouncycastleCryptoDigest_(new_OrgBouncycastleCryptoDigestsSHA256Digest_init());
  }
  
#line 144
  self->digestBuf_ = [IOSByteArray newArrayWithLength:[self->treeDigest_ getDigestSize]];
  self->hmacBuf_ = [IOSByteArray newArrayWithLength:[self->treeHMac_ getMacSize]];
}


#line 127
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(jboolean robust, jint n, jint w, jint d, jint a, jint k, jint h) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_, robust, n, w, d, a, k, h)
}


#line 127
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(jboolean robust, jint n, jint w, jint d, jint a, jint k, jint h) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine, initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_, robust, n, w, d, a, k, h)
}


#line 272
IOSByteArray *OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine_compressedADRSWithOrgBouncycastlePqcCryptoSphincsplusADRS_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine *self, OrgBouncycastlePqcCryptoSphincsplusADRS *adrs) {
  
#line 274
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:22];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs))->value_, OrgBouncycastlePqcCryptoSphincsplusADRS_OFFSET_LAYER + 3, rv, 0, 1);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(adrs->value_, OrgBouncycastlePqcCryptoSphincsplusADRS_OFFSET_TREE + 4, rv, 1, 8);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(adrs->value_, OrgBouncycastlePqcCryptoSphincsplusADRS_OFFSET_TYPE + 3, rv, 9, 1);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(adrs->value_, 20, rv, 10, 12);
  
#line 280
  return rv;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Sha256Engine)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine.java"


#line 318
@implementation OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine


#line 323
- (instancetype)initWithBoolean:(jboolean)robust
                        withInt:(jint)n
                        withInt:(jint)w
                        withInt:(jint)d
                        withInt:(jint)a
                        withInt:(jint)k
                        withInt:(jint)h {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(self, robust, n, w, d, a, k, h);
  return self;
}


#line 330
- (IOSByteArray *)FWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                   withByteArray:(IOSByteArray *)m1 {
  IOSByteArray *mTheta = m1;
  if (robust_) {
    
#line 336
    mTheta = [self bitmaskWithByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs withByteArray:m1];
  }
  
#line 339
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:N_];
  
#line 341
  [((id<OrgBouncycastleCryptoXof>) nil_chk(treeDigest_)) updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs))->value_ withInt:0 withInt:((IOSByteArray *) nil_chk(adrs->value_))->size_];
  [treeDigest_ updateWithByteArray:mTheta withInt:0 withInt:((IOSByteArray *) nil_chk(mTheta))->size_];
  [treeDigest_ doFinalWithByteArray:rv withInt:0 withInt:rv->size_];
  
#line 346
  return rv;
}


#line 349
- (IOSByteArray *)HWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                   withByteArray:(IOSByteArray *)m1
                   withByteArray:(IOSByteArray *)m2 {
  
#line 352
  IOSByteArray *m1m2 = OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(m1, m2);
  
#line 354
  if (robust_) {
    
#line 356
    m1m2 = [self bitmaskWithByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs withByteArray:m1m2];
  }
  
#line 360
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:N_];
  
#line 362
  [((id<OrgBouncycastleCryptoXof>) nil_chk(treeDigest_)) updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs))->value_ withInt:0 withInt:((IOSByteArray *) nil_chk(adrs->value_))->size_];
  [treeDigest_ updateWithByteArray:m1m2 withInt:0 withInt:((IOSByteArray *) nil_chk(m1m2))->size_];
  [treeDigest_ doFinalWithByteArray:rv withInt:0 withInt:rv->size_];
  
#line 367
  return rv;
}


#line 370
- (OrgBouncycastlePqcCryptoSphincsplusIndexedDigest *)H_msgWithByteArray:(IOSByteArray *)R
                                                           withByteArray:(IOSByteArray *)pkSeed
                                                           withByteArray:(IOSByteArray *)pkRoot
                                                           withByteArray:(IOSByteArray *)message {
  
#line 373
  jint forsMsgBytes = JreIntDiv(((A_ * K_) + 7), 8);
  jint leafBits = JreIntDiv(H_, D_);
  jint treeBits = H_ - leafBits;
  jint leafBytes = JreIntDiv((leafBits + 7), 8);
  jint treeBytes = JreIntDiv((treeBits + 7), 8);
  jint m = forsMsgBytes + leafBytes + treeBytes;
  IOSByteArray *out = [IOSByteArray newArrayWithLength:m];
  
#line 382
  [((id<OrgBouncycastleCryptoXof>) nil_chk(treeDigest_)) updateWithByteArray:R withInt:0 withInt:((IOSByteArray *) nil_chk(R))->size_];
  [treeDigest_ updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:pkRoot withInt:0 withInt:((IOSByteArray *) nil_chk(pkRoot))->size_];
  [treeDigest_ updateWithByteArray:message withInt:0 withInt:((IOSByteArray *) nil_chk(message))->size_];
  
#line 387
  [treeDigest_ doFinalWithByteArray:out withInt:0 withInt:out->size_];
  
#line 391
  IOSByteArray *treeIndexBuf = [IOSByteArray newArrayWithLength:8];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(out, forsMsgBytes, treeIndexBuf, 8 - treeBytes, treeBytes);
  jlong treeIndex = OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(treeIndexBuf, 0);
  treeIndex &= JreURShift64((~0LL), (64 - treeBits));
  
#line 396
  IOSByteArray *leafIndexBuf = [IOSByteArray newArrayWithLength:4];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(out, forsMsgBytes + treeBytes, leafIndexBuf, 4 - leafBytes, leafBytes);
  
#line 399
  jint leafIndex = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(leafIndexBuf, 0);
  leafIndex &= JreURShift32((~0), (32 - leafBits));
  
#line 402
  return new_OrgBouncycastlePqcCryptoSphincsplusIndexedDigest_initPackagePrivateWithLong_withInt_withByteArray_(treeIndex, leafIndex, OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(out, 0, forsMsgBytes));
}


#line 405
- (IOSByteArray *)T_lWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                     withByteArray:(IOSByteArray *)m {
  IOSByteArray *mTheta = m;
  if (robust_) {
    
#line 411
    mTheta = [self bitmaskWithByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs withByteArray:m];
  }
  
#line 414
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:N_];
  
#line 416
  [((id<OrgBouncycastleCryptoXof>) nil_chk(treeDigest_)) updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs))->value_ withInt:0 withInt:((IOSByteArray *) nil_chk(adrs->value_))->size_];
  [treeDigest_ updateWithByteArray:mTheta withInt:0 withInt:((IOSByteArray *) nil_chk(mTheta))->size_];
  [treeDigest_ doFinalWithByteArray:rv withInt:0 withInt:rv->size_];
  
#line 421
  return rv;
}


#line 424
- (IOSByteArray *)PRFWithByteArray:(IOSByteArray *)pkSeed
                     withByteArray:(IOSByteArray *)skSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs {
  
#line 429
  [((id<OrgBouncycastleCryptoXof>) nil_chk(treeDigest_)) updateWithByteArray:skSeed withInt:0 withInt:((IOSByteArray *) nil_chk(skSeed))->size_];
  [treeDigest_ updateWithByteArray:((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs))->value_ withInt:0 withInt:((IOSByteArray *) nil_chk(adrs->value_))->size_];
  IOSByteArray *prf = [IOSByteArray newArrayWithLength:N_];
  [treeDigest_ doFinalWithByteArray:prf withInt:0 withInt:N_];
  return prf;
}

- (IOSByteArray *)PRF_msgWithByteArray:(IOSByteArray *)prf
                         withByteArray:(IOSByteArray *)randomiser
                         withByteArray:(IOSByteArray *)message {
  [((id<OrgBouncycastleCryptoXof>) nil_chk(treeDigest_)) updateWithByteArray:prf withInt:0 withInt:((IOSByteArray *) nil_chk(prf))->size_];
  [treeDigest_ updateWithByteArray:randomiser withInt:0 withInt:((IOSByteArray *) nil_chk(randomiser))->size_];
  [treeDigest_ updateWithByteArray:message withInt:0 withInt:((IOSByteArray *) nil_chk(message))->size_];
  IOSByteArray *out = [IOSByteArray newArrayWithLength:N_];
  [treeDigest_ doFinalWithByteArray:out withInt:0 withInt:out->size_];
  return out;
}

- (IOSByteArray *)bitmaskWithByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs
                         withByteArray:(IOSByteArray *)m {
  
#line 449
  IOSByteArray *mask = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(m))->size_];
  
#line 451
  [((id<OrgBouncycastleCryptoXof>) nil_chk(treeDigest_)) updateWithByteArray:pkSeed withInt:0 withInt:((IOSByteArray *) nil_chk(pkSeed))->size_];
  [treeDigest_ updateWithByteArray:((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs))->value_ withInt:0 withInt:((IOSByteArray *) nil_chk(adrs->value_))->size_];
  
#line 454
  [treeDigest_ doFinalWithByteArray:mask withInt:0 withInt:mask->size_];
  
#line 456
  for (jint i = 0; i < m->size_; ++i) {
    
#line 458
    *IOSByteArray_GetRef(mask, i) ^= IOSByteArray_Get(m, i);
  }
  
#line 461
  return mask;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoSphincsplusIndexedDigest;", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 7, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 12, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withInt:withInt:withInt:withInt:withInt:withInt:);
  methods[1].selector = @selector(FWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:);
  methods[2].selector = @selector(HWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:withByteArray:);
  methods[3].selector = @selector(H_msgWithByteArray:withByteArray:withByteArray:withByteArray:);
  methods[4].selector = @selector(T_lWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:);
  methods[5].selector = @selector(PRFWithByteArray:withByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:);
  methods[6].selector = @selector(PRF_msgWithByteArray:withByteArray:withByteArray:);
  methods[7].selector = @selector(bitmaskWithByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "treeDigest_", "LOrgBouncycastleCryptoXof;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZIIIIII", "F", "[BLOrgBouncycastlePqcCryptoSphincsplusADRS;[B", "H", "[BLOrgBouncycastlePqcCryptoSphincsplusADRS;[B[B", "H_msg", "[B[B[B[B", "T_l", "PRF", "[B[BLOrgBouncycastlePqcCryptoSphincsplusADRS;", "PRF_msg", "[B[B[B", "bitmask", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine = { "Shake256Engine", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x8, 8, 1, 13, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine;
}

@end


#line 323
void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine *self, jboolean robust, jint n, jint w, jint d, jint a, jint k, jint h) {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_initPackagePrivateWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(self,
#line 325
  robust, n, w, d, a, k, h);
  
#line 327
  self->treeDigest_ = new_OrgBouncycastleCryptoDigestsSHAKEDigest_initWithInt_(256);
}


#line 323
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(jboolean robust, jint n, jint w, jint d, jint a, jint k, jint h) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine, initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_, robust, n, w, d, a, k, h)
}


#line 323
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine_initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_(jboolean robust, jint n, jint w, jint d, jint a, jint k, jint h) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine, initWithBoolean_withInt_withInt_withInt_withInt_withInt_withInt_, robust, n, w, d, a, k, h)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_Shake256Engine)

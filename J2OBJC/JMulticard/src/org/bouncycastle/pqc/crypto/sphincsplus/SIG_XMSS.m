//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SIG_XMSS.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SIG_XMSS.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/sphincsplus/SIG_XMSS must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SIG_XMSS.java"


#line 3
@implementation OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS


#line 8
- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)sig
                                 withByteArray2:(IOSObjectArray *)auth {
  OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS_initPackagePrivateWithByteArray_withByteArray2_(self, sig, auth);
  return self;
}

- (IOSByteArray *)getWOTSSig {
  
#line 16
  return sig_;
}


#line 19
- (IOSObjectArray *)getXMSSAUTH {
  
#line 21
  return auth_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithByteArray:withByteArray2:);
  methods[1].selector = @selector(getWOTSSig);
  methods[2].selector = @selector(getXMSSAUTH);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sig_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "auth_", "[[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B[[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS = { "SIG_XMSS", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x0, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS;
}

@end


#line 8
void OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS_initPackagePrivateWithByteArray_withByteArray2_(OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS *self, IOSByteArray *sig, IOSObjectArray *auth) {
  NSObject_init(self);
  self->sig_ = sig;
  self->auth_ = auth;
}


#line 8
OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS *new_OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS_initPackagePrivateWithByteArray_withByteArray2_(IOSByteArray *sig, IOSObjectArray *auth) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS, initPackagePrivateWithByteArray_withByteArray2_, sig, auth)
}


#line 8
OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS *create_OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS_initPackagePrivateWithByteArray_withByteArray2_(IOSByteArray *sig, IOSObjectArray *auth) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS, initPackagePrivateWithByteArray_withByteArray2_, sig, auth)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/PK.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SK.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters.java"


#line 6
@implementation OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters


#line 12
- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters
                                                                   withByteArray:(IOSByteArray *)skpkEncoded {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(self, parameters, skpkEncoded);
  return self;
}


#line 24
- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters
                                       withOrgBouncycastlePqcCryptoSphincsplusSK:(OrgBouncycastlePqcCryptoSphincsplusSK *)sk
                                       withOrgBouncycastlePqcCryptoSphincsplusPK:(OrgBouncycastlePqcCryptoSphincsplusPK *)pk {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_(self, parameters, sk, pk);
  return self;
}

- (IOSByteArray *)getSeed {
  
#line 33
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(((OrgBouncycastlePqcCryptoSphincsplusSK *) nil_chk(sk_))->seed_);
}


#line 36
- (IOSByteArray *)getPrf {
  
#line 38
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(((OrgBouncycastlePqcCryptoSphincsplusSK *) nil_chk(sk_))->prf_);
}


#line 41
- (IOSByteArray *)getPublicSeed {
  
#line 43
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(((OrgBouncycastlePqcCryptoSphincsplusPK *) nil_chk(pk_))->seed_);
}


#line 46
- (IOSByteArray *)getPublicKey {
  
#line 48
  return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(((OrgBouncycastlePqcCryptoSphincsplusPK *) nil_chk(pk_))->seed_, pk_->root_);
}


#line 51
- (IOSByteArray *)getEncoded {
  
#line 53
  return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(OrgBouncycastleUtilPack_intToBigEndianWithInt_([((JavaLangInteger *) nil_chk(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_getIDWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_([self getParameters]))) intValue]), OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_(((OrgBouncycastlePqcCryptoSphincsplusSK *) nil_chk(sk_))->seed_, sk_->prf_, ((OrgBouncycastlePqcCryptoSphincsplusPK *) nil_chk(pk_))->seed_, pk_->root_));
}


#line 56
- (IOSByteArray *)getEncodedPublicKey {
  
#line 58
  return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(OrgBouncycastleUtilPack_intToBigEndianWithInt_([((JavaLangInteger *) nil_chk(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_getIDWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_([self getParameters]))) intValue]), ((OrgBouncycastlePqcCryptoSphincsplusPK *) nil_chk(pk_))->seed_, pk_->root_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:withByteArray:);
  methods[1].selector = @selector(initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:withOrgBouncycastlePqcCryptoSphincsplusSK:withOrgBouncycastlePqcCryptoSphincsplusPK:);
  methods[2].selector = @selector(getSeed);
  methods[3].selector = @selector(getPrf);
  methods[4].selector = @selector(getPublicSeed);
  methods[5].selector = @selector(getPublicKey);
  methods[6].selector = @selector(getEncoded);
  methods[7].selector = @selector(getEncodedPublicKey);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sk_", "LOrgBouncycastlePqcCryptoSphincsplusSK;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "pk_", "LOrgBouncycastlePqcCryptoSphincsplusPK;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;[B", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;LOrgBouncycastlePqcCryptoSphincsplusSK;LOrgBouncycastlePqcCryptoSphincsplusPK;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters = { "SPHINCSPlusPrivateKeyParameters", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters;
}

@end


#line 12
void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *skpkEncoded) {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(self,
#line 14
  true, parameters);
  jint n = ((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *) nil_chk([((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *) nil_chk(parameters)) getEngine]))->N_;
  if (((IOSByteArray *) nil_chk(skpkEncoded))->size_ != 4 * n) {
    
#line 18
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"private key encoding does not match parameters");
  }
  self->sk_ = new_OrgBouncycastlePqcCryptoSphincsplusSK_initPackagePrivateWithByteArray_withByteArray_(OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(skpkEncoded, 0, n), OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(skpkEncoded, n, 2 * n));
  self->pk_ = new_OrgBouncycastlePqcCryptoSphincsplusPK_initPackagePrivateWithByteArray_withByteArray_(OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(skpkEncoded, 2 * n, 3 * n), OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(skpkEncoded, 3 * n, 4 * n));
}


#line 12
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *skpkEncoded) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_, parameters, skpkEncoded)
}


#line 12
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *skpkEncoded) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_, parameters, skpkEncoded)
}


#line 24
void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusSK *sk, OrgBouncycastlePqcCryptoSphincsplusPK *pk) {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(self,
#line 26
  true, parameters);
  self->sk_ = sk;
  self->pk_ = pk;
}


#line 24
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusSK *sk, OrgBouncycastlePqcCryptoSphincsplusPK *pk) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_, parameters, sk, pk)
}


#line 24
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusSK *sk, OrgBouncycastlePqcCryptoSphincsplusPK *pk) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_, parameters, sk, pk)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters)

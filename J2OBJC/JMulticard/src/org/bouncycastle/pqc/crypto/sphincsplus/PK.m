//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/PK.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/PK.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/sphincsplus/PK must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/PK.java"


#line 3
@implementation OrgBouncycastlePqcCryptoSphincsplusPK


#line 8
- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)seed
                                  withByteArray:(IOSByteArray *)root {
  OrgBouncycastlePqcCryptoSphincsplusPK_initPackagePrivateWithByteArray_withByteArray_(self, seed, root);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "seed_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "root_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusPK = { "PK", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x0, 1, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusPK;
}

@end


#line 8
void OrgBouncycastlePqcCryptoSphincsplusPK_initPackagePrivateWithByteArray_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusPK *self, IOSByteArray *seed, IOSByteArray *root) {
  NSObject_init(self);
  self->seed_ = seed;
  self->root_ = root;
}


#line 8
OrgBouncycastlePqcCryptoSphincsplusPK *new_OrgBouncycastlePqcCryptoSphincsplusPK_initPackagePrivateWithByteArray_withByteArray_(IOSByteArray *seed, IOSByteArray *root) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusPK, initPackagePrivateWithByteArray_withByteArray_, seed, root)
}


#line 8
OrgBouncycastlePqcCryptoSphincsplusPK *create_OrgBouncycastlePqcCryptoSphincsplusPK_initPackagePrivateWithByteArray_withByteArray_(IOSByteArray *seed, IOSByteArray *root) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusPK, initPackagePrivateWithByteArray_withByteArray_, seed, root)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusPK)

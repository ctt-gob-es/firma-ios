//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/WotsPlus.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/ADRS.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusEngine.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/WotsPlus.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/sphincsplus/WotsPlus must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoSphincsplusWotsPlus () {
 @public
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine_;
  jint w_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusWotsPlus, engine_, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/WotsPlus.java"


#line 6
@implementation OrgBouncycastlePqcCryptoSphincsplusWotsPlus


#line 11
- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *)engine {
  OrgBouncycastlePqcCryptoSphincsplusWotsPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_(self, engine);
  return self;
}


#line 17
- (IOSByteArray *)pkGenWithByteArray:(IOSByteArray *)skSeed
                       withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)paramAdrs {
  
#line 19
  OrgBouncycastlePqcCryptoSphincsplusADRS *wotspkADRS = new_OrgBouncycastlePqcCryptoSphincsplusADRS_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusADRS_(paramAdrs);
  
#line 21
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *) nil_chk(engine_))->WOTS_LEN_ type:IOSClass_byteArray(1)];
  for (jint i = 0; i < engine_->WOTS_LEN_; i++) {
    
#line 24
    OrgBouncycastlePqcCryptoSphincsplusADRS *adrs = new_OrgBouncycastlePqcCryptoSphincsplusADRS_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusADRS_(paramAdrs);
    [adrs setChainAddressWithInt:i];
    [adrs setHashAddressWithInt:0];
    IOSByteArray *sk = [engine_ PRFWithByteArray:pkSeed withByteArray:skSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs];
    
#line 29
    (void) IOSObjectArray_Set(tmp, i, [self chainWithByteArray:sk withInt:0 withInt:w_ - 1 withByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs]);
  }
  
#line 32
  [wotspkADRS setTypeWithInt:OrgBouncycastlePqcCryptoSphincsplusADRS_WOTS_PK];
  [wotspkADRS setKeyPairAddressWithInt:[((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(paramAdrs)) getKeyPairAddress]];
  
#line 35
  return [engine_ T_lWithByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:wotspkADRS withByteArray:OrgBouncycastleUtilArrays_concatenateWithByteArray2_(tmp)];
}


#line 41
- (IOSByteArray *)chainWithByteArray:(IOSByteArray *)X
                             withInt:(jint)i
                             withInt:(jint)s
                       withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs {
  
#line 43
  if (s == 0) {
    
#line 45
    return OrgBouncycastleUtilArrays_cloneWithByteArray_(X);
  }
  if ((i + s) > (self->w_ - 1)) {
    
#line 49
    return nil;
  }
  IOSByteArray *tmp = [self chainWithByteArray:X withInt:i withInt:s - 1 withByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs];
  [((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs)) setHashAddressWithInt:i + s - 1];
  tmp = [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *) nil_chk(engine_)) FWithByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs withByteArray:tmp];
  
#line 55
  return tmp;
}


#line 61
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)M
                      withByteArray:(IOSByteArray *)skSeed
                      withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)paramAdrs {
  
#line 63
  OrgBouncycastlePqcCryptoSphincsplusADRS *adrs = new_OrgBouncycastlePqcCryptoSphincsplusADRS_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusADRS_(paramAdrs);
  
#line 65
  jint csum = 0;
  
#line 67
  IOSIntArray *msg = [self base_wWithByteArray:M withInt:w_ withInt:((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *) nil_chk(engine_))->WOTS_LEN1_];
  
#line 69
  for (jint i = 0; i < engine_->WOTS_LEN1_; i++) {
    
#line 71
    csum += w_ - 1 - IOSIntArray_Get(nil_chk(msg), i);
  }
  
#line 74
  if ((JreIntMod(engine_->WOTS_LOGW_, 8)) != 0) {
    
#line 76
    csum = JreLShift32(csum, (8 - (JreIntMod((engine_->WOTS_LEN2_ * engine_->WOTS_LOGW_), 8))));
  }
  jint len_2_bytes = JreIntDiv((engine_->WOTS_LEN2_ * engine_->WOTS_LOGW_ + 7), 8);
  IOSByteArray *bytes = OrgBouncycastleUtilPack_intToBigEndianWithInt_(csum);
  msg = OrgBouncycastleUtilArrays_concatenateWithIntArray_withIntArray_(msg, [self base_wWithByteArray:OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(bytes, len_2_bytes, ((IOSByteArray *) nil_chk(bytes))->size_) withInt:w_ withInt:engine_->WOTS_LEN2_]);
  IOSObjectArray *sig = [IOSObjectArray newArrayWithLength:engine_->WOTS_LEN_ type:IOSClass_byteArray(1)];
  for (jint i = 0; i < engine_->WOTS_LEN_; i++) {
    
#line 84
    [adrs setChainAddressWithInt:i];
    [adrs setHashAddressWithInt:0];
    IOSByteArray *sk = [engine_ PRFWithByteArray:pkSeed withByteArray:skSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs];
    (void) IOSObjectArray_Set(sig, i, [self chainWithByteArray:sk withInt:0 withInt:IOSIntArray_Get(nil_chk(msg), i) withByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs]);
  }
  return OrgBouncycastleUtilArrays_concatenateWithByteArray2_(sig);
}


#line 95
- (IOSIntArray *)base_wWithByteArray:(IOSByteArray *)X
                             withInt:(jint)w
                             withInt:(jint)out_len {
  
#line 97
  jint in = 0;
  jint out = 0;
  jint total = 0;
  jint bits = 0;
  IOSIntArray *output = [IOSIntArray newArrayWithLength:out_len];
  
#line 103
  for (jint consumed = 0; consumed < out_len; consumed++) {
    
#line 105
    if (bits == 0) {
      
#line 107
      total = IOSByteArray_Get(nil_chk(X), in);
      in++;
      bits += 8;
    }
    bits -= ((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *) nil_chk(engine_))->WOTS_LOGW_;
    *IOSIntArray_GetRef(output, out) = ((JreURShift32(total, bits)) & (w - 1));
    out++;
  }
  return output;
}


#line 118
- (IOSByteArray *)pkFromSigWithByteArray:(IOSByteArray *)sig
                           withByteArray:(IOSByteArray *)M
                           withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs {
  
#line 120
  jint csum = 0;
  OrgBouncycastlePqcCryptoSphincsplusADRS *wotspkADRS = new_OrgBouncycastlePqcCryptoSphincsplusADRS_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusADRS_(adrs);
  
#line 123
  IOSIntArray *msg = [self base_wWithByteArray:M withInt:w_ withInt:((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *) nil_chk(engine_))->WOTS_LEN1_];
  
#line 125
  for (jint i = 0; i < engine_->WOTS_LEN1_; i++) {
    
#line 127
    csum += w_ - 1 - IOSIntArray_Get(nil_chk(msg), i);
  }
  
#line 130
  csum = JreLShift32(csum, (8 - (JreIntMod((engine_->WOTS_LEN2_ * engine_->WOTS_LOGW_), 8))));
  jint len_2_bytes = JreIntDiv((engine_->WOTS_LEN2_ * engine_->WOTS_LOGW_ + 7), 8);
  
#line 133
  msg = OrgBouncycastleUtilArrays_concatenateWithIntArray_withIntArray_(msg, [self base_wWithByteArray:OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(OrgBouncycastleUtilPack_intToBigEndianWithInt_(csum), 4 - len_2_bytes, 4) withInt:w_ withInt:engine_->WOTS_LEN2_]);
  
#line 135
  IOSByteArray *sigI = [IOSByteArray newArrayWithLength:engine_->N_];
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:engine_->WOTS_LEN_ type:IOSClass_byteArray(1)];
  for (jint i = 0; i < engine_->WOTS_LEN_; i++) {
    
#line 139
    [((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs)) setChainAddressWithInt:i];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(sig, i * engine_->N_, sigI, 0, engine_->N_);
    (void) IOSObjectArray_Set(tmp, i, [self chainWithByteArray:sigI withInt:IOSIntArray_Get(nil_chk(msg), i) withInt:w_ - 1 - IOSIntArray_Get(msg, i) withByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:adrs]);
  }
  
#line 144
  [wotspkADRS setTypeWithInt:OrgBouncycastlePqcCryptoSphincsplusADRS_WOTS_PK];
  [wotspkADRS setKeyPairAddressWithInt:[((OrgBouncycastlePqcCryptoSphincsplusADRS *) nil_chk(adrs)) getKeyPairAddress]];
  
#line 147
  return [engine_ T_lWithByteArray:pkSeed withOrgBouncycastlePqcCryptoSphincsplusADRS:wotspkADRS withByteArray:OrgBouncycastleUtilArrays_concatenateWithByteArray2_(tmp)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "[I", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 9, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine:);
  methods[1].selector = @selector(pkGenWithByteArray:withByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:);
  methods[2].selector = @selector(chainWithByteArray:withInt:withInt:withByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:);
  methods[3].selector = @selector(signWithByteArray:withByteArray:withByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:);
  methods[4].selector = @selector(base_wWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(pkFromSigWithByteArray:withByteArray:withByteArray:withOrgBouncycastlePqcCryptoSphincsplusADRS:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "engine_", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "w_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine;", "pkGen", "[B[BLOrgBouncycastlePqcCryptoSphincsplusADRS;", "chain", "[BII[BLOrgBouncycastlePqcCryptoSphincsplusADRS;", "sign", "[B[B[BLOrgBouncycastlePqcCryptoSphincsplusADRS;", "base_w", "[BII", "pkFromSig" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusWotsPlus = { "WotsPlus", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x0, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusWotsPlus;
}

@end


#line 11
void OrgBouncycastlePqcCryptoSphincsplusWotsPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_(OrgBouncycastlePqcCryptoSphincsplusWotsPlus *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine) {
  NSObject_init(self);
  self->engine_ = engine;
  self->w_ = ((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *) nil_chk(self->engine_))->WOTS_W_;
}


#line 11
OrgBouncycastlePqcCryptoSphincsplusWotsPlus *new_OrgBouncycastlePqcCryptoSphincsplusWotsPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusWotsPlus, initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_, engine)
}


#line 11
OrgBouncycastlePqcCryptoSphincsplusWotsPlus *create_OrgBouncycastlePqcCryptoSphincsplusWotsPlus_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusWotsPlus, initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_, engine)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusWotsPlus)

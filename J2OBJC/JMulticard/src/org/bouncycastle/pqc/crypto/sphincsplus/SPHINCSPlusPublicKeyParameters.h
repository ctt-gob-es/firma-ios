//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPublicKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters

#if !defined (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters))
#define OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_

#define RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters 1
#define INCLUDE_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters 1
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyParameters.h"

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoSphincsplusPK;
@class OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;

@interface OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters : OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters
                                                                   withByteArray:(IOSByteArray *)pkEncoded;

- (IOSByteArray *)getEncoded;

- (IOSByteArray *)getRoot;

- (IOSByteArray *)getSeed;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters
                                       withOrgBouncycastlePqcCryptoSphincsplusPK:(OrgBouncycastlePqcCryptoSphincsplusPK *)pk;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0
withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *pkEncoded);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *pkEncoded) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *pkEncoded);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusPK *pk);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusPK *pk) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusPK *pk);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters

#if !defined (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters))
#define OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters_

#define RESTRICT_OrgBouncycastleCryptoParamsAsymmetricKeyParameter 1
#define INCLUDE_OrgBouncycastleCryptoParamsAsymmetricKeyParameter 1
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"

@class OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;

@interface OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters : OrgBouncycastleCryptoParamsAsymmetricKeyParameter {
 @public
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters_;
}

#pragma mark Public

- (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)getParameters;

#pragma mark Protected

- (instancetype)initWithBoolean:(jboolean)isPrivate
withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters, parameters_, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters *self, jboolean isPrivate, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(jboolean isPrivate, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(jboolean isPrivate, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters")

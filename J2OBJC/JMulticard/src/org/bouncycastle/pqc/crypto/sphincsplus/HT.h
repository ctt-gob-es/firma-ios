//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/HT.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusHT")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusHT
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusHT 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusHT 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusHT

#if !defined (OrgBouncycastlePqcCryptoSphincsplusHT_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusHT || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsplusHT))
#define OrgBouncycastlePqcCryptoSphincsplusHT_

@class IOSByteArray;
@class IOSObjectArray;
@class OrgBouncycastlePqcCryptoSphincsplusADRS;
@class OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS;
@class OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine;
@class OrgBouncycastlePqcCryptoSphincsplusWotsPlus;

@interface OrgBouncycastlePqcCryptoSphincsplusHT : NSObject {
 @public
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine_;
  OrgBouncycastlePqcCryptoSphincsplusWotsPlus *wots_;
  IOSByteArray *htPubKey_;
}

#pragma mark Public

- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *)engine
                                                                             withByteArray:(IOSByteArray *)skSeed
                                                                             withByteArray:(IOSByteArray *)pkSeed;

- (jboolean)verifyWithByteArray:(IOSByteArray *)M
withOrgBouncycastlePqcCryptoSphincsplusSIG_XMSSArray:(IOSObjectArray *)sig_ht
                  withByteArray:(IOSByteArray *)pkSeed
                       withLong:(jlong)idx_tree
                        withInt:(jint)idx_leaf
                  withByteArray:(IOSByteArray *)PK_HT;

#pragma mark Package-Private

- (IOSByteArray *)signWithByteArray:(IOSByteArray *)M
                           withLong:(jlong)idx_tree
                            withInt:(jint)idx_leaf;

- (IOSByteArray *)treehashWithByteArray:(IOSByteArray *)skSeed
                                withInt:(jint)s
                                withInt:(jint)z
                          withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrsParam;

- (IOSByteArray *)xmss_pkFromSigWithInt:(jint)idx
withOrgBouncycastlePqcCryptoSphincsplusSIG_XMSS:(OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS *)sig_xmss
                          withByteArray:(IOSByteArray *)M
                          withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)paramAdrs;

- (IOSByteArray *)xmss_PKgenWithByteArray:(IOSByteArray *)skSeed
                            withByteArray:(IOSByteArray *)pkSeed
withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs;

- (OrgBouncycastlePqcCryptoSphincsplusSIG_XMSS *)xmss_signWithByteArray:(IOSByteArray *)M
                                                          withByteArray:(IOSByteArray *)skSeed
                                                                withInt:(jint)idx
                                                          withByteArray:(IOSByteArray *)pkSeed
                            withOrgBouncycastlePqcCryptoSphincsplusADRS:(OrgBouncycastlePqcCryptoSphincsplusADRS *)adrs;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsplusHT)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusHT, engine_, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusHT, wots_, OrgBouncycastlePqcCryptoSphincsplusWotsPlus *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusHT, htPubKey_, IOSByteArray *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusHT_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusHT *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine, IOSByteArray *skSeed, IOSByteArray *pkSeed);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusHT *new_OrgBouncycastlePqcCryptoSphincsplusHT_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine, IOSByteArray *skSeed, IOSByteArray *pkSeed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusHT *create_OrgBouncycastlePqcCryptoSphincsplusHT_initPackagePrivateWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusEngine *engine, IOSByteArray *skSeed, IOSByteArray *pkSeed);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsplusHT)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusHT")

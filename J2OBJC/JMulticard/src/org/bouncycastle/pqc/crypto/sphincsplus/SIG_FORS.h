//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SIG_FORS.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS

#if !defined (OrgBouncycastlePqcCryptoSphincsplusSIG_FORS_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS))
#define OrgBouncycastlePqcCryptoSphincsplusSIG_FORS_

@class IOSByteArray;
@class IOSObjectArray;

@interface OrgBouncycastlePqcCryptoSphincsplusSIG_FORS : NSObject {
 @public
  IOSObjectArray *authPath_;
  IOSByteArray *sk_;
}

#pragma mark Public

- (IOSObjectArray *)getAuthPath;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)sk
                                 withByteArray2:(IOSObjectArray *)authPath;

- (IOSByteArray *)getSK;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsplusSIG_FORS)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSIG_FORS, authPath_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSIG_FORS, sk_, IOSByteArray *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusSIG_FORS_initPackagePrivateWithByteArray_withByteArray2_(OrgBouncycastlePqcCryptoSphincsplusSIG_FORS *self, IOSByteArray *sk, IOSObjectArray *authPath);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSIG_FORS *new_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS_initPackagePrivateWithByteArray_withByteArray2_(IOSByteArray *sk, IOSObjectArray *authPath) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSIG_FORS *create_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS_initPackagePrivateWithByteArray_withByteArray2_(IOSByteArray *sk, IOSObjectArray *authPath);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsplusSIG_FORS)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSIG_FORS")

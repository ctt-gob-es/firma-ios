//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters

#if !defined (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters))
#define OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_

#define RESTRICT_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters 1
#define INCLUDE_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters 1
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyParameters.h"

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoSphincsplusPK;
@class OrgBouncycastlePqcCryptoSphincsplusSK;
@class OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;

@interface OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters : OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyParameters {
 @public
  OrgBouncycastlePqcCryptoSphincsplusSK *sk_;
  OrgBouncycastlePqcCryptoSphincsplusPK *pk_;
}

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters
                                                                   withByteArray:(IOSByteArray *)skpkEncoded;

- (IOSByteArray *)getEncoded;

- (IOSByteArray *)getEncodedPublicKey;

- (IOSByteArray *)getPrf;

- (IOSByteArray *)getPublicKey;

- (IOSByteArray *)getPublicSeed;

- (IOSByteArray *)getSeed;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters
                                       withOrgBouncycastlePqcCryptoSphincsplusSK:(OrgBouncycastlePqcCryptoSphincsplusSK *)sk
                                       withOrgBouncycastlePqcCryptoSphincsplusPK:(OrgBouncycastlePqcCryptoSphincsplusPK *)pk;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0
withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters, sk_, OrgBouncycastlePqcCryptoSphincsplusSK *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters, pk_, OrgBouncycastlePqcCryptoSphincsplusPK *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *skpkEncoded);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *skpkEncoded) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withByteArray_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, IOSByteArray *skpkEncoded);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusSK *sk, OrgBouncycastlePqcCryptoSphincsplusPK *pk);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusSK *sk, OrgBouncycastlePqcCryptoSphincsplusPK *pk) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_withOrgBouncycastlePqcCryptoSphincsplusSK_withOrgBouncycastlePqcCryptoSphincsplusPK_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters, OrgBouncycastlePqcCryptoSphincsplusSK *sk, OrgBouncycastlePqcCryptoSphincsplusPK *pk);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters")

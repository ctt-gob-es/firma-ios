//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyGenerationParameters.java
//

#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/crypto/KeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyGenerationParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters () {
 @public
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters, parameters_, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyGenerationParameters.java"


#line 7
@implementation OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters


#line 12
- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)parameters {
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(self, random, parameters);
  return self;
}

- (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *)getParameters {
  
#line 20
  return parameters_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters:);
  methods[1].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parameters_", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters = { "SPHINCSPlusKeyGenerationParameters", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters;
}

@end


#line 12
void OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters *self, JavaSecuritySecureRandom *random, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters) {
  OrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(self,
#line 14
  random, -1);
  self->parameters_ = parameters;
}


#line 12
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters *new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(JavaSecuritySecureRandom *random, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters, initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_, random, parameters)
}


#line 12
OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters *create_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(JavaSecuritySecureRandom *random, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *parameters) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters, initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_, random, parameters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters)

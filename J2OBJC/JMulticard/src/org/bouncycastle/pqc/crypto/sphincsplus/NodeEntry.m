//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/NodeEntry.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/NodeEntry.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/sphincsplus/NodeEntry must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/sphincsplus/NodeEntry.java"


#line 3
@implementation OrgBouncycastlePqcCryptoSphincsplusNodeEntry


#line 8
- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)nodeValue
                                        withInt:(jint)nodeHeight {
  OrgBouncycastlePqcCryptoSphincsplusNodeEntry_initPackagePrivateWithByteArray_withInt_(self, nodeValue, nodeHeight);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "nodeValue_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "nodeHeight_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[BI" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoSphincsplusNodeEntry = { "NodeEntry", "org.bouncycastle.pqc.crypto.sphincsplus", ptrTable, methods, fields, 7, 0x0, 1, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoSphincsplusNodeEntry;
}

@end


#line 8
void OrgBouncycastlePqcCryptoSphincsplusNodeEntry_initPackagePrivateWithByteArray_withInt_(OrgBouncycastlePqcCryptoSphincsplusNodeEntry *self, IOSByteArray *nodeValue, jint nodeHeight) {
  NSObject_init(self);
  self->nodeValue_ = nodeValue;
  self->nodeHeight_ = nodeHeight;
}


#line 8
OrgBouncycastlePqcCryptoSphincsplusNodeEntry *new_OrgBouncycastlePqcCryptoSphincsplusNodeEntry_initPackagePrivateWithByteArray_withInt_(IOSByteArray *nodeValue, jint nodeHeight) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoSphincsplusNodeEntry, initPackagePrivateWithByteArray_withInt_, nodeValue, nodeHeight)
}


#line 8
OrgBouncycastlePqcCryptoSphincsplusNodeEntry *create_OrgBouncycastlePqcCryptoSphincsplusNodeEntry_initPackagePrivateWithByteArray_withInt_(IOSByteArray *nodeValue, jint nodeHeight) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoSphincsplusNodeEntry, initPackagePrivateWithByteArray_withInt_, nodeValue, nodeHeight)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoSphincsplusNodeEntry)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/ExchangePair.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/ExchangePair.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/ExchangePair must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoExchangePair () {
 @public
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey_;
  IOSByteArray *shared_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoExchangePair, publicKey_, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoExchangePair, shared_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/ExchangePair.java"


#line 9
@implementation OrgBouncycastlePqcCryptoExchangePair


#line 20
- (instancetype)initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicKey
                                                            withByteArray:(IOSByteArray *)shared {
  OrgBouncycastlePqcCryptoExchangePair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(self, publicKey, shared);
  return self;
}


#line 31
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublicKey {
  
#line 33
  return publicKey_;
}


#line 41
- (IOSByteArray *)getSharedValue {
  
#line 43
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(shared_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:withByteArray:);
  methods[1].selector = @selector(getPublicKey);
  methods[2].selector = @selector(getSharedValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "publicKey_", "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "shared_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoExchangePair = { "ExchangePair", "org.bouncycastle.pqc.crypto", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoExchangePair;
}

@end


#line 20
void OrgBouncycastlePqcCryptoExchangePair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(OrgBouncycastlePqcCryptoExchangePair *self, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared) {
  NSObject_init(self);
  self->publicKey_ = publicKey;
  self->shared_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(shared);
}


#line 20
OrgBouncycastlePqcCryptoExchangePair *new_OrgBouncycastlePqcCryptoExchangePair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoExchangePair, initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_, publicKey, shared)
}


#line 20
OrgBouncycastlePqcCryptoExchangePair *create_OrgBouncycastlePqcCryptoExchangePair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicKey, IOSByteArray *shared) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoExchangePair, initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withByteArray_, publicKey, shared)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoExchangePair)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/rainbow/util/GF2Field.h"
#include "org/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/rainbow/util/RainbowUtil.java"


#line 7
@implementation OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 7
- (instancetype)init {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 18
+ (IOSIntArray *)convertArraytoIntWithByteArray:(IOSByteArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArraytoIntWithByteArray_(inArg);
}


#line 36
+ (IOSShortArray *)convertArrayWithByteArray:(IOSByteArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithByteArray_(inArg);
}


#line 53
+ (IOSObjectArray *)convertArrayWithByteArray2:(IOSObjectArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithByteArray2_(inArg);
}


#line 73
+ (IOSObjectArray *)convertArrayWithByteArray3:(IOSObjectArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithByteArray3_(inArg);
}


#line 96
+ (IOSByteArray *)convertIntArrayWithIntArray:(IOSIntArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertIntArrayWithIntArray_(inArg);
}


#line 114
+ (IOSByteArray *)convertArrayWithShortArray:(IOSShortArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithShortArray_(inArg);
}


#line 131
+ (IOSObjectArray *)convertArrayWithShortArray2:(IOSObjectArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithShortArray2_(inArg);
}


#line 151
+ (IOSObjectArray *)convertArrayWithShortArray3:(IOSObjectArray *)inArg {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithShortArray3_(inArg);
}


#line 174
+ (jboolean)equalsWithShortArray:(IOSShortArray *)left
                  withShortArray:(IOSShortArray *)right {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray_withShortArray_(left, right);
}


#line 195
+ (jboolean)equalsWithShortArray2:(IOSObjectArray *)left
                  withShortArray2:(IOSObjectArray *)right {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray2_withShortArray2_(left, right);
}


#line 216
+ (jboolean)equalsWithShortArray3:(IOSObjectArray *)left
                  withShortArray3:(IOSObjectArray *)right {
  return OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray3_withShortArray3_(left, right);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "[[S", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "[[[S", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 2, 7, -1, -1, -1, -1 },
    { NULL, "[[B", 0x9, 2, 8, -1, -1, -1, -1 },
    { NULL, "[[[B", 0x9, 2, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 10, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 10, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertArraytoIntWithByteArray:);
  methods[2].selector = @selector(convertArrayWithByteArray:);
  methods[3].selector = @selector(convertArrayWithByteArray2:);
  methods[4].selector = @selector(convertArrayWithByteArray3:);
  methods[5].selector = @selector(convertIntArrayWithIntArray:);
  methods[6].selector = @selector(convertArrayWithShortArray:);
  methods[7].selector = @selector(convertArrayWithShortArray2:);
  methods[8].selector = @selector(convertArrayWithShortArray3:);
  methods[9].selector = @selector(equalsWithShortArray:withShortArray:);
  methods[10].selector = @selector(equalsWithShortArray2:withShortArray2:);
  methods[11].selector = @selector(equalsWithShortArray3:withShortArray3:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convertArraytoInt", "[B", "convertArray", "[[B", "[[[B", "convertIntArray", "[I", "[S", "[[S", "[[[S", "equals", "[S[S", "[[S[[S", "[[[S[[[S" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil = { "RainbowUtil", "org.bouncycastle.pqc.crypto.rainbow.util", ptrTable, methods, NULL, 7, 0x1, 12, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil;
}

@end


#line 7
void OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_init(OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil *self) {
  NSObject_init(self);
}


#line 7
OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil *new_OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil, init)
}


#line 7
OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil *create_OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil, init)
}


#line 18
IOSIntArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArraytoIntWithByteArray_(IOSByteArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSIntArray *out = [IOSIntArray newArrayWithLength:((IOSByteArray *) nil_chk(inArg))->size_];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 23
    *IOSIntArray_GetRef(out, i) = IOSByteArray_Get(inArg, i) & OrgBouncycastlePqcCryptoRainbowUtilGF2Field_MASK;
  }
  return out;
}


#line 36
IOSShortArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithByteArray_(IOSByteArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSShortArray *out = [IOSShortArray newArrayWithLength:((IOSByteArray *) nil_chk(inArg))->size_];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 41
    *IOSShortArray_GetRef(out, i) = (jshort) (IOSByteArray_Get(inArg, i) & OrgBouncycastlePqcCryptoRainbowUtilGF2Field_MASK);
  }
  return out;
}


#line 53
IOSObjectArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithByteArray2_(IOSObjectArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSObjectArray *out = [IOSShortArray newArrayWithDimensions:2 lengths:(jint[]){ ((IOSObjectArray *) nil_chk(inArg))->size_, ((IOSByteArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_ }];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 58
    for (jint j = 0; j < ((IOSByteArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_; j++) {
      
#line 60
      *IOSShortArray_GetRef(nil_chk(IOSObjectArray_Get(out, i)), j) = (jshort) (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(inArg, i)), j) & OrgBouncycastlePqcCryptoRainbowUtilGF2Field_MASK);
    }
  }
  return out;
}


#line 73
IOSObjectArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithByteArray3_(IOSObjectArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSObjectArray *out = [IOSShortArray newArrayWithDimensions:3 lengths:(jint[]){ ((IOSObjectArray *) nil_chk(inArg))->size_, ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_, ((IOSByteArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(inArg, 0)), 0)))->size_ }];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 78
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_; j++) {
      
#line 80
      for (jint k = 0; k < ((IOSByteArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(inArg, 0)), 0)))->size_; k++) {
        
#line 82
        *IOSShortArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(out, i)), j)), k) = (jshort) (IOSByteArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(inArg, i)), j)), k) & OrgBouncycastlePqcCryptoRainbowUtilGF2Field_MASK);
      }
    }
  }
  return out;
}


#line 96
IOSByteArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertIntArrayWithIntArray_(IOSIntArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSByteArray *out = [IOSByteArray newArrayWithLength:((IOSIntArray *) nil_chk(inArg))->size_];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 101
    *IOSByteArray_GetRef(out, i) = (jbyte) IOSIntArray_Get(inArg, i);
  }
  return out;
}


#line 114
IOSByteArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithShortArray_(IOSShortArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSByteArray *out = [IOSByteArray newArrayWithLength:((IOSShortArray *) nil_chk(inArg))->size_];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 119
    *IOSByteArray_GetRef(out, i) = (jbyte) IOSShortArray_Get(inArg, i);
  }
  return out;
}


#line 131
IOSObjectArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithShortArray2_(IOSObjectArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSObjectArray *out = [IOSByteArray newArrayWithDimensions:2 lengths:(jint[]){ ((IOSObjectArray *) nil_chk(inArg))->size_, ((IOSShortArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_ }];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 136
    for (jint j = 0; j < ((IOSShortArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_; j++) {
      
#line 138
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(out, i)), j) = (jbyte) IOSShortArray_Get(nil_chk(IOSObjectArray_Get(inArg, i)), j);
    }
  }
  return out;
}


#line 151
IOSObjectArray *OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_convertArrayWithShortArray3_(IOSObjectArray *inArg) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  IOSObjectArray *out = [IOSByteArray newArrayWithDimensions:3 lengths:(jint[]){ ((IOSObjectArray *) nil_chk(inArg))->size_, ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_, ((IOSShortArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(inArg, 0)), 0)))->size_ }];
  for (jint i = 0; i < inArg->size_; i++) {
    
#line 156
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(inArg, 0)))->size_; j++) {
      
#line 158
      for (jint k = 0; k < ((IOSShortArray *) nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(inArg, 0)), 0)))->size_; k++) {
        
#line 160
        *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(out, i)), j)), k) = (jbyte) IOSShortArray_Get(nil_chk(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(inArg, i)), j)), k);
      }
    }
  }
  return out;
}


#line 174
jboolean OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray_withShortArray_(IOSShortArray *left, IOSShortArray *right) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  if (((IOSShortArray *) nil_chk(left))->size_ != ((IOSShortArray *) nil_chk(right))->size_) {
    
#line 178
    return false;
  }
  jboolean result = true;
  for (jint i = left->size_ - 1; i >= 0; i--) {
    
#line 183
    result &= (IOSShortArray_Get(left, i) == IOSShortArray_Get(right, i));
  }
  return result;
}


#line 195
jboolean OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray2_withShortArray2_(IOSObjectArray *left, IOSObjectArray *right) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  if (((IOSObjectArray *) nil_chk(left))->size_ != ((IOSObjectArray *) nil_chk(right))->size_) {
    
#line 199
    return false;
  }
  jboolean result = true;
  for (jint i = left->size_ - 1; i >= 0; i--) {
    
#line 204
    result &= OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray_withShortArray_(IOSObjectArray_Get(left, i), IOSObjectArray_Get(right, i));
  }
  return result;
}


#line 216
jboolean OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray3_withShortArray3_(IOSObjectArray *left, IOSObjectArray *right) {
  OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_initialize();
  if (((IOSObjectArray *) nil_chk(left))->size_ != ((IOSObjectArray *) nil_chk(right))->size_) {
    
#line 220
    return false;
  }
  jboolean result = true;
  for (jint i = left->size_ - 1; i >= 0; i--) {
    
#line 225
    result &= OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil_equalsWithShortArray2_withShortArray2_(IOSObjectArray_Get(left, i), IOSObjectArray_Get(right, i));
  }
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoRainbowUtilRainbowUtil)

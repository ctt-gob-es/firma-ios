//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowKeyParameters.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/rainbow/RainbowKeyParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/rainbow/RainbowKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters () {
 @public
  jint docLength_;
}

@end

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/rainbow/RainbowKeyParameters.java"


#line 5
@implementation OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters


#line 10
- (instancetype)initWithBoolean:(jboolean)isPrivate
                        withInt:(jint)docLength {
  OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters_initWithBoolean_withInt_(self, isPrivate, docLength);
  return self;
}


#line 21
- (jint)getDocLength {
  
#line 23
  return self->docLength_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withInt:);
  methods[1].selector = @selector(getDocLength);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "docLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZI" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters = { "RainbowKeyParameters", "org.bouncycastle.pqc.crypto.rainbow", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters;
}

@end


#line 10
void OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters_initWithBoolean_withInt_(OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters *self, jboolean isPrivate, jint docLength) {
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self,
#line 14
  isPrivate);
  self->docLength_ = docLength;
}


#line 10
OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters *new_OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters_initWithBoolean_withInt_(jboolean isPrivate, jint docLength) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters, initWithBoolean_withInt_, isPrivate, docLength)
}


#line 10
OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters *create_OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters_initWithBoolean_withInt_(jboolean isPrivate, jint docLength) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters, initWithBoolean_withInt_, isPrivate, docLength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoRainbowRainbowKeyParameters)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSSignedPubKey.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/lms/Composer.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSSignedPubKey.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/LMSSignedPubKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoLmsLMSSignedPubKey () {
 @public
  OrgBouncycastlePqcCryptoLmsLMSSignature *signature_;
  OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *publicKey_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSSignedPubKey, signature_, OrgBouncycastlePqcCryptoLmsLMSSignature *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSSignedPubKey, publicKey_, OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSSignedPubKey.java"


#line 7
@implementation OrgBouncycastlePqcCryptoLmsLMSSignedPubKey


#line 13
- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature:(OrgBouncycastlePqcCryptoLmsLMSSignature *)signature
                        withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters:(OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *)publicKey {
  OrgBouncycastlePqcCryptoLmsLMSSignedPubKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature_withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_(self, signature, publicKey);
  return self;
}


#line 20
- (OrgBouncycastlePqcCryptoLmsLMSSignature *)getSignature {
  
#line 22
  return signature_;
}


#line 25
- (OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *)getPublicKey {
  
#line 27
  return publicKey_;
}


#line 30
- (jboolean)isEqual:(id)o {
  
#line 33
  if (JreObjectEqualsEquals(self, o)) {
    
#line 35
    return true;
  }
  if (o == nil || !JreObjectEqualsEquals([self java_getClass], [o java_getClass])) {
    
#line 39
    return false;
  }
  
#line 42
  OrgBouncycastlePqcCryptoLmsLMSSignedPubKey *that = (OrgBouncycastlePqcCryptoLmsLMSSignedPubKey *) cast_chk(o, [OrgBouncycastlePqcCryptoLmsLMSSignedPubKey class]);
  
#line 44
  if (signature_ != nil ? ![signature_ isEqual:that->signature_] : that->signature_ != nil) {
    
#line 46
    return false;
  }
  return publicKey_ != nil ? [publicKey_ isEqual:that->publicKey_] : that->publicKey_ == nil;
}


#line 51
- (NSUInteger)hash {
  
#line 54
  jint result = signature_ != nil ? ((jint) [signature_ hash]) : 0;
  result = 31 * result + (publicKey_ != nil ? ((jint) [publicKey_ hash]) : 0);
  return result;
}

- (IOSByteArray *)getEncoded {
  
#line 63
  return [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) bytesWithByteArray:
#line 64
  [((OrgBouncycastlePqcCryptoLmsLMSSignature *) nil_chk(signature_)) getEncoded]])) bytesWithByteArray:
#line 65
  [((OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *) nil_chk(publicKey_)) getEncoded]])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSSignature;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature:withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters:);
  methods[1].selector = @selector(getSignature);
  methods[2].selector = @selector(getPublicKey);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "signature_", "LOrgBouncycastlePqcCryptoLmsLMSSignature;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "publicKey_", "LOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMSSignature;LOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters;", "equals", "LNSObject;", "hashCode", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLMSSignedPubKey = { "LMSSignedPubKey", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x0, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLMSSignedPubKey;
}

@end


#line 13
void OrgBouncycastlePqcCryptoLmsLMSSignedPubKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature_withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_(OrgBouncycastlePqcCryptoLmsLMSSignedPubKey *self, OrgBouncycastlePqcCryptoLmsLMSSignature *signature, OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *publicKey) {
  NSObject_init(self);
  self->signature_ = signature;
  self->publicKey_ = publicKey;
}


#line 13
OrgBouncycastlePqcCryptoLmsLMSSignedPubKey *new_OrgBouncycastlePqcCryptoLmsLMSSignedPubKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature_withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_(OrgBouncycastlePqcCryptoLmsLMSSignature *signature, OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *publicKey) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMSSignedPubKey, initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature_withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_, signature, publicKey)
}


#line 13
OrgBouncycastlePqcCryptoLmsLMSSignedPubKey *create_OrgBouncycastlePqcCryptoLmsLMSSignedPubKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature_withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_(OrgBouncycastlePqcCryptoLmsLMSSignature *signature, OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *publicKey) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMSSignedPubKey, initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature_withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_, signature, publicKey)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLMSSignedPubKey)

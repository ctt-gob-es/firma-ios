//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSContext.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsPrivateKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSContext.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSigParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LM_OTS.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/LMSContext must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoLmsLMSContext () {
 @public
  IOSByteArray *C_;
  OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *key_;
  OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams_;
  IOSObjectArray *path_;
  OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey_;
  id signature_;
  IOSObjectArray *signedPubKeys_;
  volatile_id digest_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, C_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, key_, OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, sigParams_, OrgBouncycastlePqcCryptoLmsLMSigParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, path_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, publicKey_, OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, signature_, id)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, signedPubKeys_, IOSObjectArray *)
J2OBJC_VOLATILE_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSContext, digest_, id<OrgBouncycastleCryptoDigest>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSContext.java"


#line 7
@implementation OrgBouncycastlePqcCryptoLmsLMSContext


#line 20
- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)key
                    withOrgBouncycastlePqcCryptoLmsLMSigParameters:(OrgBouncycastlePqcCryptoLmsLMSigParameters *)sigParams
                                   withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest
                                                     withByteArray:(IOSByteArray *)C
                                                    withByteArray2:(IOSObjectArray *)path {
  OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_(self, key, sigParams, digest, C, path);
  return self;
}


#line 31
- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey:(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)publicKey
                                                           withId:(id)signature
                                  withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest {
  OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(self, publicKey, signature, digest);
  return self;
}


#line 42
- (IOSByteArray *)getC {
  
#line 44
  return C_;
}


#line 47
- (IOSByteArray *)getQ {
  
#line 49
  IOSByteArray *Q = [IOSByteArray newArrayWithLength:OrgBouncycastlePqcCryptoLmsLM_OTS_MAX_HASH + 2];
  
#line 51
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(JreLoadVolatileId(&digest_))) doFinalWithByteArray:Q withInt:0];
  
#line 53
  (void) JreVolatileStrongAssign(&digest_, nil);
  
#line 55
  return Q;
}


#line 58
- (IOSObjectArray *)getPath {
  
#line 60
  return path_;
}


#line 63
- (OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)getPrivateKey {
  
#line 65
  return key_;
}


#line 68
- (OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)getPublicKey {
  
#line 70
  return publicKey_;
}


#line 73
- (OrgBouncycastlePqcCryptoLmsLMSigParameters *)getSigParams {
  
#line 75
  return sigParams_;
}


#line 78
- (id)getSignature {
  
#line 80
  return signature_;
}


#line 83
- (IOSObjectArray *)getSignedPubKeys {
  
#line 85
  return signedPubKeys_;
}


#line 88
- (OrgBouncycastlePqcCryptoLmsLMSContext *)withSignedPublicKeysWithOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray:(IOSObjectArray *)signedPubKeys {
  
#line 90
  self->signedPubKeys_ = signedPubKeys;
  
#line 92
  return self;
}


#line 95
- (NSString *)getAlgorithmName {
  
#line 98
  return [((id<OrgBouncycastleCryptoDigest>) nil_chk(JreLoadVolatileId(&digest_))) getAlgorithmName];
}

- (jint)getDigestSize {
  
#line 104
  return [((id<OrgBouncycastleCryptoDigest>) nil_chk(JreLoadVolatileId(&digest_))) getDigestSize];
}

- (void)updateWithByte:(jbyte)inArg {
  
#line 110
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(JreLoadVolatileId(&digest_))) updateWithByte:inArg];
}

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(JreLoadVolatileId(&digest_))) updateWithByteArray:inArg withInt:inOff withInt:len];
}

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  
#line 122
  return [((id<OrgBouncycastleCryptoDigest>) nil_chk(JreLoadVolatileId(&digest_))) doFinalWithByteArray:outArg withInt:outOff];
}


#line 125
- (void)reset {
  
#line 128
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(JreLoadVolatileId(&digest_))) reset];
}

- (void)__javaClone:(OrgBouncycastlePqcCryptoLmsLMSContext *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&digest_, &original->digest_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsPublicKey;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSigParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastlePqcCryptoLmsLMSSignedPubKey;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSContext;", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:withOrgBouncycastlePqcCryptoLmsLMSigParameters:withOrgBouncycastleCryptoDigest:withByteArray:withByteArray2:);
  methods[1].selector = @selector(initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey:withId:withOrgBouncycastleCryptoDigest:);
  methods[2].selector = @selector(getC);
  methods[3].selector = @selector(getQ);
  methods[4].selector = @selector(getPath);
  methods[5].selector = @selector(getPrivateKey);
  methods[6].selector = @selector(getPublicKey);
  methods[7].selector = @selector(getSigParams);
  methods[8].selector = @selector(getSignature);
  methods[9].selector = @selector(getSignedPubKeys);
  methods[10].selector = @selector(withSignedPublicKeysWithOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray:);
  methods[11].selector = @selector(getAlgorithmName);
  methods[12].selector = @selector(getDigestSize);
  methods[13].selector = @selector(updateWithByte:);
  methods[14].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[15].selector = @selector(doFinalWithByteArray:withInt:);
  methods[16].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "key_", "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sigParams_", "LOrgBouncycastlePqcCryptoLmsLMSigParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "path_", "[[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "publicKey_", "LOrgBouncycastlePqcCryptoLmsLMOtsPublicKey;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "signature_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "signedPubKeys_", "[LOrgBouncycastlePqcCryptoLmsLMSSignedPubKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "digest_", "LOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;LOrgBouncycastlePqcCryptoLmsLMSigParameters;LOrgBouncycastleCryptoDigest;[B[[B", "LOrgBouncycastlePqcCryptoLmsLMOtsPublicKey;LNSObject;LOrgBouncycastleCryptoDigest;", "withSignedPublicKeys", "[LOrgBouncycastlePqcCryptoLmsLMSSignedPubKey;", "update", "B", "[BII", "doFinal", "[BI" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLMSContext = { "LMSContext", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x1, 17, 8, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLMSContext;
}

@end


#line 20
void OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_(OrgBouncycastlePqcCryptoLmsLMSContext *self, OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *key, OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams, id<OrgBouncycastleCryptoDigest> digest, IOSByteArray *C, IOSObjectArray *path) {
  NSObject_init(self);
  self->key_ = key;
  self->sigParams_ = sigParams;
  (void) JreVolatileStrongAssign(&self->digest_, digest);
  self->C_ = C;
  self->path_ = path;
  self->publicKey_ = nil;
  self->signature_ = nil;
}


#line 20
OrgBouncycastlePqcCryptoLmsLMSContext *new_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *key, OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams, id<OrgBouncycastleCryptoDigest> digest, IOSByteArray *C, IOSObjectArray *path) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMSContext, initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_, key, sigParams, digest, C, path)
}


#line 20
OrgBouncycastlePqcCryptoLmsLMSContext *create_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *key, OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams, id<OrgBouncycastleCryptoDigest> digest, IOSByteArray *C, IOSObjectArray *path) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMSContext, initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_, key, sigParams, digest, C, path)
}


#line 31
void OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMSContext *self, OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, id signature, id<OrgBouncycastleCryptoDigest> digest) {
  NSObject_init(self);
  self->publicKey_ = publicKey;
  self->signature_ = signature;
  (void) JreVolatileStrongAssign(&self->digest_, digest);
  self->C_ = nil;
  self->key_ = nil;
  self->sigParams_ = nil;
  self->path_ = nil;
}


#line 31
OrgBouncycastlePqcCryptoLmsLMSContext *new_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, id signature, id<OrgBouncycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMSContext, initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_, publicKey, signature, digest)
}


#line 31
OrgBouncycastlePqcCryptoLmsLMSContext *create_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, id signature, id<OrgBouncycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMSContext, initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_, publicKey, signature, digest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLMSContext)

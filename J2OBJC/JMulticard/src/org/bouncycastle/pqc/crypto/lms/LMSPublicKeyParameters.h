//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters

#if !defined (OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters))
#define OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_

#define RESTRICT_OrgBouncycastlePqcCryptoLmsLMSKeyParameters 1
#define INCLUDE_OrgBouncycastlePqcCryptoLmsLMSKeyParameters 1
#include "org/bouncycastle/pqc/crypto/lms/LMSKeyParameters.h"

#define RESTRICT_OrgBouncycastlePqcCryptoLmsLMSContextBasedVerifier 1
#define INCLUDE_OrgBouncycastlePqcCryptoLmsLMSContextBasedVerifier 1
#include "org/bouncycastle/pqc/crypto/lms/LMSContextBasedVerifier.h"

@class IOSByteArray;
@class OrgBouncycastlePqcCryptoLmsLMOtsParameters;
@class OrgBouncycastlePqcCryptoLmsLMSContext;
@class OrgBouncycastlePqcCryptoLmsLMSParameters;
@class OrgBouncycastlePqcCryptoLmsLMSSignature;
@class OrgBouncycastlePqcCryptoLmsLMSigParameters;

@interface OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters : OrgBouncycastlePqcCryptoLmsLMSKeyParameters < OrgBouncycastlePqcCryptoLmsLMSContextBasedVerifier >

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMSigParameters:(OrgBouncycastlePqcCryptoLmsLMSigParameters *)parameterSet
                    withOrgBouncycastlePqcCryptoLmsLMOtsParameters:(OrgBouncycastlePqcCryptoLmsLMOtsParameters *)lmOtsType
                                                     withByteArray:(IOSByteArray *)T1
                                                     withByteArray:(IOSByteArray *)I;

- (jboolean)isEqual:(id)o;

- (OrgBouncycastlePqcCryptoLmsLMSContext *)generateLMSContextWithByteArray:(IOSByteArray *)signature;

- (IOSByteArray *)getEncoded;

- (IOSByteArray *)getI;

+ (OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *)getInstanceWithId:(id)src;

- (OrgBouncycastlePqcCryptoLmsLMSParameters *)getLMSParameters;

- (OrgBouncycastlePqcCryptoLmsLMOtsParameters *)getOtsParameters;

- (OrgBouncycastlePqcCryptoLmsLMSigParameters *)getSigParameters;

- (IOSByteArray *)getT1;

- (NSUInteger)hash;

- (jboolean)verifyWithOrgBouncycastlePqcCryptoLmsLMSContext:(OrgBouncycastlePqcCryptoLmsLMSContext *)context;

#pragma mark Package-Private

- (OrgBouncycastlePqcCryptoLmsLMSContext *)generateOtsContextWithOrgBouncycastlePqcCryptoLmsLMSSignature:(OrgBouncycastlePqcCryptoLmsLMSSignature *)S;

- (jboolean)matchesT1WithByteArray:(IOSByteArray *)sig;

- (IOSByteArray *)refI;

- (IOSByteArray *)toByteArray;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *self, OrgBouncycastlePqcCryptoLmsLMSigParameters *parameterSet, OrgBouncycastlePqcCryptoLmsLMOtsParameters *lmOtsType, IOSByteArray *T1, IOSByteArray *I);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *new_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSigParameters *parameterSet, OrgBouncycastlePqcCryptoLmsLMOtsParameters *lmOtsType, IOSByteArray *T1, IOSByteArray *I) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *create_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSigParameters *parameterSet, OrgBouncycastlePqcCryptoLmsLMOtsParameters *lmOtsType, IOSByteArray *T1, IOSByteArray *I);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_getInstanceWithId_(id src);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters")

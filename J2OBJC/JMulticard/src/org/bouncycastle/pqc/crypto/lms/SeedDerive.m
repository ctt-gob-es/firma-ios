//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/SeedDerive.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/pqc/crypto/lms/SeedDerive.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/SeedDerive must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoLmsSeedDerive () {
 @public
  IOSByteArray *I_;
  IOSByteArray *masterSeed_;
  id<OrgBouncycastleCryptoDigest> digest_;
  jint q_;
  jint j_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsSeedDerive, I_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsSeedDerive, masterSeed_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsSeedDerive, digest_, id<OrgBouncycastleCryptoDigest>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/SeedDerive.java"


#line 5
@implementation OrgBouncycastlePqcCryptoLmsSeedDerive


#line 14
- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)I
                                  withByteArray:(IOSByteArray *)masterSeed
                withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest {
  OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(self, I, masterSeed, digest);
  return self;
}

- (jint)getQ {
  
#line 23
  return q_;
}


#line 26
- (void)setQWithInt:(jint)q {
  
#line 28
  self->q_ = q;
}


#line 31
- (jint)getJ {
  
#line 33
  return j_;
}


#line 36
- (void)setJWithInt:(jint)j {
  
#line 38
  self->j_ = j;
}


#line 41
- (IOSByteArray *)getI {
  
#line 43
  return I_;
}


#line 46
- (IOSByteArray *)getMasterSeed {
  
#line 48
  return masterSeed_;
}

- (IOSByteArray *)deriveSeedWithByteArray:(IOSByteArray *)target
                                  withInt:(jint)offset {
  if (((IOSByteArray *) nil_chk(target))->size_ < [((id<OrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]) {
    
#line 56
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"target length is less than digest size.");
  }
  
#line 59
  [digest_ updateWithByteArray:I_ withInt:0 withInt:((IOSByteArray *) nil_chk(I_))->size_];
  [digest_ updateWithByte:(jbyte) (JreURShift32(q_, 24))];
  [digest_ updateWithByte:(jbyte) (JreURShift32(q_, 16))];
  [digest_ updateWithByte:(jbyte) (JreURShift32(q_, 8))];
  [digest_ updateWithByte:(jbyte) (q_)];
  
#line 65
  [digest_ updateWithByte:(jbyte) (JreURShift32(j_, 8))];
  [digest_ updateWithByte:(jbyte) (j_)];
  [digest_ updateWithByte:(jbyte) (jint) 0xFF];
  [digest_ updateWithByteArray:masterSeed_ withInt:0 withInt:((IOSByteArray *) nil_chk(masterSeed_))->size_];
  
#line 70
  [digest_ doFinalWithByteArray:target withInt:offset];
  
#line 72
  return target;
}


#line 75
- (void)deriveSeedWithByteArray:(IOSByteArray *)target
                    withBoolean:(jboolean)incJ {
  [self deriveSeedWithByteArray:target withBoolean:incJ withInt:0];
}


#line 81
- (void)deriveSeedWithByteArray:(IOSByteArray *)target
                    withBoolean:(jboolean)incJ
                        withInt:(jint)offset {
  (void) [self deriveSeedWithByteArray:target withInt:offset];
  
#line 86
  if (incJ) {
    
#line 88
    j_++;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithByteArray:withByteArray:withOrgBouncycastleCryptoDigest:);
  methods[1].selector = @selector(getQ);
  methods[2].selector = @selector(setQWithInt:);
  methods[3].selector = @selector(getJ);
  methods[4].selector = @selector(setJWithInt:);
  methods[5].selector = @selector(getI);
  methods[6].selector = @selector(getMasterSeed);
  methods[7].selector = @selector(deriveSeedWithByteArray:withInt:);
  methods[8].selector = @selector(deriveSeedWithByteArray:withBoolean:);
  methods[9].selector = @selector(deriveSeedWithByteArray:withBoolean:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "I_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "masterSeed_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "digest_", "LOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "q_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "j_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B[BLOrgBouncycastleCryptoDigest;", "setQ", "I", "setJ", "deriveSeed", "[BI", "[BZ", "[BZI" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsSeedDerive = { "SeedDerive", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x0, 10, 5, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsSeedDerive;
}

@end


#line 14
void OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsSeedDerive *self, IOSByteArray *I, IOSByteArray *masterSeed, id<OrgBouncycastleCryptoDigest> digest) {
  NSObject_init(self);
  self->I_ = I;
  self->masterSeed_ = masterSeed;
  self->digest_ = digest;
}


#line 14
OrgBouncycastlePqcCryptoLmsSeedDerive *new_OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(IOSByteArray *I, IOSByteArray *masterSeed, id<OrgBouncycastleCryptoDigest> digest) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsSeedDerive, initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_, I, masterSeed, digest)
}


#line 14
OrgBouncycastlePqcCryptoLmsSeedDerive *create_OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(IOSByteArray *I, IOSByteArray *masterSeed, id<OrgBouncycastleCryptoDigest> digest) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsSeedDerive, initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_, I, masterSeed, digest)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsSeedDerive)

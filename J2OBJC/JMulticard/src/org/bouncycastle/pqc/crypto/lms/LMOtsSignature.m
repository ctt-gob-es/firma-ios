//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMOtsSignature.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/DataInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Arrays.h"
#include "org/bouncycastle/pqc/crypto/lms/Composer.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsSignature.h"
#include "org/bouncycastle/util/io/Streams.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/LMOtsSignature must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoLmsLMOtsSignature () {
 @public
  OrgBouncycastlePqcCryptoLmsLMOtsParameters *type_;
  IOSByteArray *C_;
  IOSByteArray *y_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMOtsSignature, type_, OrgBouncycastlePqcCryptoLmsLMOtsParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMOtsSignature, C_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMOtsSignature, y_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMOtsSignature.java"


#line 12
@implementation OrgBouncycastlePqcCryptoLmsLMOtsSignature


#line 19
- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters:(OrgBouncycastlePqcCryptoLmsLMOtsParameters *)type
                                                                   withByteArray:(IOSByteArray *)c
                                                                   withByteArray:(IOSByteArray *)y {
  OrgBouncycastlePqcCryptoLmsLMOtsSignature_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(self, type, c, y);
  return self;
}

+ (OrgBouncycastlePqcCryptoLmsLMOtsSignature *)getInstanceWithId:(id)src {
  return OrgBouncycastlePqcCryptoLmsLMOtsSignature_getInstanceWithId_(src);
}


#line 70
- (OrgBouncycastlePqcCryptoLmsLMOtsParameters *)getType {
  
#line 72
  return type_;
}


#line 75
- (IOSByteArray *)getC {
  
#line 77
  return C_;
}


#line 80
- (IOSByteArray *)getY {
  
#line 82
  return y_;
}

- (jboolean)isEqual:(id)o {
  
#line 89
  if (JreObjectEqualsEquals(self, o)) {
    
#line 91
    return true;
  }
  if (o == nil || !JreObjectEqualsEquals([self java_getClass], [o java_getClass])) {
    
#line 95
    return false;
  }
  
#line 98
  OrgBouncycastlePqcCryptoLmsLMOtsSignature *that = (OrgBouncycastlePqcCryptoLmsLMOtsSignature *) cast_chk(o, [OrgBouncycastlePqcCryptoLmsLMOtsSignature class]);
  
#line 100
  if (type_ != nil ? ![type_ isEqual:that->type_] : that->type_ != nil) {
    
#line 102
    return false;
  }
  if (!JavaUtilArrays_equalsWithByteArray_withByteArray_(C_, that->C_)) {
    
#line 106
    return false;
  }
  return JavaUtilArrays_equalsWithByteArray_withByteArray_(y_, that->y_);
}


#line 111
- (NSUInteger)hash {
  
#line 114
  jint result = type_ != nil ? ((jint) [type_ hash]) : 0;
  result = 31 * result + JavaUtilArrays_hashCodeWithByteArray_(C_);
  result = 31 * result + JavaUtilArrays_hashCodeWithByteArray_(y_);
  return result;
}

- (IOSByteArray *)getEncoded {
  
#line 124
  return [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:
#line 125
  [((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(type_)) getType]])) bytesWithByteArray:
#line 126
  C_])) bytesWithByteArray:
#line 127
  y_])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsSignature;", 0x9, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters:withByteArray:withByteArray:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(getType);
  methods[3].selector = @selector(getC);
  methods[4].selector = @selector(getY);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "C_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "y_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;[B[B", "getInstance", "LNSObject;", "LJavaIoIOException;", "equals", "hashCode" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLMOtsSignature = { "LMOtsSignature", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x0, 8, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLMOtsSignature;
}

@end


#line 19
void OrgBouncycastlePqcCryptoLmsLMOtsSignature_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsSignature *self, OrgBouncycastlePqcCryptoLmsLMOtsParameters *type, IOSByteArray *c, IOSByteArray *y) {
  NSObject_init(self);
  self->type_ = type;
  self->C_ = c;
  self->y_ = y;
}


#line 19
OrgBouncycastlePqcCryptoLmsLMOtsSignature *new_OrgBouncycastlePqcCryptoLmsLMOtsSignature_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsParameters *type, IOSByteArray *c, IOSByteArray *y) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMOtsSignature, initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_, type, c, y)
}


#line 19
OrgBouncycastlePqcCryptoLmsLMOtsSignature *create_OrgBouncycastlePqcCryptoLmsLMOtsSignature_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsParameters *type, IOSByteArray *c, IOSByteArray *y) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMOtsSignature, initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_, type, c, y)
}


#line 26
OrgBouncycastlePqcCryptoLmsLMOtsSignature *OrgBouncycastlePqcCryptoLmsLMOtsSignature_getInstanceWithId_(id src) {
  OrgBouncycastlePqcCryptoLmsLMOtsSignature_initialize();
  
#line 29
  if ([src isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMOtsSignature class]]) {
    
#line 31
    return (OrgBouncycastlePqcCryptoLmsLMOtsSignature *) src;
  }
  else if ([src isKindOfClass:[JavaIoDataInputStream class]]) {
    
#line 37
    OrgBouncycastlePqcCryptoLmsLMOtsParameters *type = OrgBouncycastlePqcCryptoLmsLMOtsParameters_getParametersForTypeWithInt_([((JavaIoDataInputStream *) nil_chk(((JavaIoDataInputStream *) src))) readInt]);
    IOSByteArray *C = [IOSByteArray newArrayWithLength:[((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(type)) getN]];
    
#line 40
    [((JavaIoDataInputStream *) nil_chk(((JavaIoDataInputStream *) src))) readFullyWithByteArray:C];
    
#line 42
    IOSByteArray *sig = [IOSByteArray newArrayWithLength:[type getP] * [type getN]];
    [((JavaIoDataInputStream *) nil_chk(((JavaIoDataInputStream *) src))) readFullyWithByteArray:sig];
    
#line 46
    return new_OrgBouncycastlePqcCryptoLmsLMOtsSignature_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(type, C, sig);
  }
  else if ([src isKindOfClass:[IOSByteArray class]]) {
    
#line 50
    JavaIoInputStream *in = nil;
    @try {
      
#line 53
      in = new_JavaIoDataInputStream_initWithJavaIoInputStream_(new_JavaIoByteArrayInputStream_initWithByteArray_((IOSByteArray *) cast_chk(src, [IOSByteArray class])));
      return OrgBouncycastlePqcCryptoLmsLMOtsSignature_getInstanceWithId_(in);
    }
    @finally {
      
#line 58
      if (in != nil) [in close];
    }
  }
  else if ([src isKindOfClass:[JavaIoInputStream class]]) {
    
#line 63
    return OrgBouncycastlePqcCryptoLmsLMOtsSignature_getInstanceWithId_(OrgBouncycastleUtilIoStreams_readAllWithJavaIoInputStream_((JavaIoInputStream *) src));
  }
  
#line 66
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"cannot parse ", src));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLMOtsSignature)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/DataInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Map.h"
#include "java/util/WeakHashMap.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/pqc/crypto/ExhaustedPrivateKeyException.h"
#include "org/bouncycastle/pqc/crypto/lms/Composer.h"
#include "org/bouncycastle/pqc/crypto/lms/DigestUtil.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsPrivateKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMS.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSContext.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSigParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LM_OTS.h"
#include "org/bouncycastle/pqc/crypto/lms/LmsUtils.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/io/Streams.h"

@class OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey;

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters () {
 @public
  IOSByteArray *I_;
  OrgBouncycastlePqcCryptoLmsLMSigParameters *parameters_;
  OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameters_;
  jint maxQ_;
  IOSByteArray *masterSecret_;
  id<JavaUtilMap> tCache_;
  jint maxCacheR_;
  id<OrgBouncycastleCryptoDigest> tDigest_;
  jint q_;
  OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *publicKey_;
}

- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters:(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *)parent
                                                                   withInt:(jint)q
                                                                   withInt:(jint)maxQ;

- (IOSByteArray *)findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey:(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *)key;

- (IOSByteArray *)calcTWithInt:(jint)r;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, I_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, parameters_, OrgBouncycastlePqcCryptoLmsLMSigParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, otsParameters_, OrgBouncycastlePqcCryptoLmsLMOtsParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, masterSecret_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, tCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, tDigest_, id<OrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, publicKey_, OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *)

inline OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_get_T1(void);
inline OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_set_T1(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *value);
static OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_T1;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, T1, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *)

inline IOSObjectArray *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_get_internedKeys(void);
inline IOSObjectArray *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_set_internedKeys(IOSObjectArray *value);
static IOSObjectArray *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, internedKeys, IOSObjectArray *)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *self, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *parent, jint q, jint maxQ);

__attribute__((unused)) static OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *parent, jint q, jint maxQ) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *create_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *parent, jint q, jint maxQ);

__attribute__((unused)) static IOSByteArray *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *self, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *key);

__attribute__((unused)) static IOSByteArray *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_calcTWithInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *self, jint r);

@interface OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey : NSObject {
 @public
  jint index_;
}

- (instancetype)initWithInt:(jint)index;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey)

__attribute__((unused)) static void OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *self, jint index);

__attribute__((unused)) static OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(jint index) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *create_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(jint index);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters)


#line 15
@implementation OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters


#line 49
- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMSigParameters:(OrgBouncycastlePqcCryptoLmsLMSigParameters *)lmsParameter
                    withOrgBouncycastlePqcCryptoLmsLMOtsParameters:(OrgBouncycastlePqcCryptoLmsLMOtsParameters *)otsParameters
                                                           withInt:(jint)q
                                                     withByteArray:(IOSByteArray *)I
                                                           withInt:(jint)maxQ
                                                     withByteArray:(IOSByteArray *)masterSecret {
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(self, lmsParameter, otsParameters, q, I, maxQ, masterSecret);
  return self;
}


#line 63
- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters:(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *)parent
                                                                   withInt:(jint)q
                                                                   withInt:(jint)maxQ {
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(self, parent, q, maxQ);
  return self;
}


#line 78
+ (OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *)getInstanceWithByteArray:(IOSByteArray *)privEnc
                                                                   withByteArray:(IOSByteArray *)pubEnc {
  return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_getInstanceWithByteArray_withByteArray_(privEnc, pubEnc);
}


#line 88
+ (OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *)getInstanceWithId:(id)src {
  return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_getInstanceWithId_(src);
}


#line 164
- (OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)getCurrentOTSKey {
  
#line 166
  @synchronized(self) {
    
#line 168
    if (q_ >= maxQ_) {
      
#line 170
      @throw new_OrgBouncycastlePqcCryptoExhaustedPrivateKeyException_initWithNSString_(@"ots private keys expired");
    }
    return new_OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(otsParameters_, I_, q_, masterSecret_);
  }
}


#line 181
- (jint)getIndex {
  @synchronized(self) {
    return q_;
  }
}


#line 186
- (void)incIndex {
  @synchronized(self) {
    q_++;
  }
}


#line 191
- (OrgBouncycastlePqcCryptoLmsLMSContext *)generateLMSContext {
  
#line 195
  OrgBouncycastlePqcCryptoLmsLMSigParameters *lmsParameter = [self getSigParameters];
  
#line 198
  jint h = [((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk(lmsParameter)) getH];
  jint q = [self getIndex];
  OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *otsPk = [self getNextOtsPrivateKey];
  
#line 202
  jint i = 0;
  jint r = (JreLShift32(1, h)) + q;
  IOSObjectArray *path = [IOSObjectArray newArrayWithLength:h type:IOSClass_byteArray(1)];
  
#line 206
  while (i < h) {
    
#line 208
    jint tmp = (JreIntDiv(r, (JreLShift32(1, i)))) ^ 1;
    
#line 210
    (void) IOSObjectArray_Set(path, i, [self findTWithInt:tmp]);
    i++;
  }
  
#line 214
  return [((OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *) nil_chk(otsPk)) getSignatureContextWithOrgBouncycastlePqcCryptoLmsLMSigParameters:[self getSigParameters] withByteArray2:path];
}


#line 217
- (IOSByteArray *)generateSignatureWithOrgBouncycastlePqcCryptoLmsLMSContext:(OrgBouncycastlePqcCryptoLmsLMSContext *)context {
  
#line 220
  @try {
    
#line 222
    return [((OrgBouncycastlePqcCryptoLmsLMSSignature *) nil_chk(OrgBouncycastlePqcCryptoLmsLMS_generateSignWithOrgBouncycastlePqcCryptoLmsLMSContext_(context))) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 226
    @throw new_JavaLangIllegalStateException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"unable to encode signature: ", [e getMessage]), e);
  }
}


#line 230
- (OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)getNextOtsPrivateKey {
  
#line 232
  @synchronized(self) {
    
#line 234
    if (q_ >= maxQ_) {
      
#line 236
      @throw new_OrgBouncycastlePqcCryptoExhaustedPrivateKeyException_initWithNSString_(@"ots private key exhausted");
    }
    OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *otsPrivateKey = new_OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(otsParameters_, I_, q_, masterSecret_);
    [self incIndex];
    return JreRetainedLocalValue(otsPrivateKey);
  }
}


#line 254
- (OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *)extractKeyShardWithInt:(jint)usageCount {
  
#line 256
  @synchronized(self) {
    
#line 258
    if (q_ + usageCount >= maxQ_) {
      
#line 260
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"usageCount exceeds usages remaining");
    }
    OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *keyParameters = new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(self, q_, q_ + usageCount);
    q_ += usageCount;
    
#line 265
    return JreRetainedLocalValue(keyParameters);
  }
}


#line 269
- (OrgBouncycastlePqcCryptoLmsLMSigParameters *)getSigParameters {
  
#line 271
  return parameters_;
}


#line 274
- (OrgBouncycastlePqcCryptoLmsLMOtsParameters *)getOtsParameters {
  
#line 276
  return otsParameters_;
}


#line 279
- (IOSByteArray *)getI {
  
#line 281
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(I_);
}


#line 284
- (IOSByteArray *)getMasterSecret {
  
#line 286
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(masterSecret_);
}


#line 289
- (jlong)getUsagesRemaining {
  
#line 292
  return maxQ_ - q_;
}

- (OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *)getPublicKey {
  
#line 297
  @synchronized(self) {
    
#line 299
    if (publicKey_ == nil) {
      
#line 301
      publicKey_ = new_OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(parameters_, otsParameters_, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_(self, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_T1), I_);
    }
    return JreRetainedLocalValue(publicKey_);
  }
}


#line 307
- (IOSByteArray *)findTWithInt:(jint)r {
  
#line 309
  if (r < maxCacheR_) {
    
#line 311
    return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_(self, r < ((IOSObjectArray *) nil_chk(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys))->size_ ? IOSObjectArray_Get(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys, r) : new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(r));
  }
  
#line 314
  return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_calcTWithInt_(self, r);
}


#line 317
- (IOSByteArray *)findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey:(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *)key {
  return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_(self, key);
}


#line 335
- (IOSByteArray *)calcTWithInt:(jint)r {
  return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_calcTWithInt_(self, r);
}


#line 376
- (jboolean)isEqual:(id)o {
  
#line 379
  if (JreObjectEqualsEquals(self, o)) {
    
#line 381
    return true;
  }
  if (o == nil || !JreObjectEqualsEquals([self java_getClass], [o java_getClass])) {
    
#line 385
    return false;
  }
  
#line 388
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *that = (OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) cast_chk(o, [OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]);
  
#line 390
  if (q_ != that->q_) {
    
#line 392
    return false;
  }
  if (maxQ_ != that->maxQ_) {
    
#line 396
    return false;
  }
  if (!OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(I_, that->I_)) {
    
#line 400
    return false;
  }
  if (parameters_ != nil ? ![parameters_ isEqual:that->parameters_] : that->parameters_ != nil) {
    
#line 404
    return false;
  }
  if (otsParameters_ != nil ? ![otsParameters_ isEqual:that->otsParameters_] : that->otsParameters_ != nil) {
    
#line 408
    return false;
  }
  if (!OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(masterSecret_, that->masterSecret_)) {
    
#line 412
    return false;
  }
  
#line 419
  if (publicKey_ != nil && that->publicKey_ != nil) {
    
#line 421
    return [publicKey_ isEqual:that->publicKey_];
  }
  
#line 424
  return true;
}


#line 427
- (NSUInteger)hash {
  
#line 430
  jint result = q_;
  result = 31 * result + OrgBouncycastleUtilArrays_hashCodeWithByteArray_(I_);
  result = 31 * result + (parameters_ != nil ? ((jint) [parameters_ hash]) : 0);
  result = 31 * result + (otsParameters_ != nil ? ((jint) [otsParameters_ hash]) : 0);
  result = 31 * result + maxQ_;
  result = 31 * result + OrgBouncycastleUtilArrays_hashCodeWithByteArray_(masterSecret_);
  result = 31 * result + (publicKey_ != nil ? ((jint) [publicKey_ hash]) : 0);
  return result;
}

- (IOSByteArray *)getEncoded {
  
#line 459
  return [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:
#line 460
  0])) u32strWithInt:
#line 461
  [((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk(parameters_)) getType]])) u32strWithInt:
#line 462
  [((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(otsParameters_)) getType]])) bytesWithByteArray:
#line 463
  I_])) u32strWithInt:
#line 464
  q_])) u32strWithInt:
#line 465
  maxQ_])) u32strWithInt:((IOSByteArray *) nil_chk(
#line 466
  masterSecret_))->size_])) bytesWithByteArray:
#line 467
  masterSecret_])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters;", 0x9, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters;", 0x9, 2, 5, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x20, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSigParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, 10, 9, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 12, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoLmsLMSigParameters:withOrgBouncycastlePqcCryptoLmsLMOtsParameters:withInt:withByteArray:withInt:withByteArray:);
  methods[1].selector = @selector(initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters:withInt:withInt:);
  methods[2].selector = @selector(getInstanceWithByteArray:withByteArray:);
  methods[3].selector = @selector(getInstanceWithId:);
  methods[4].selector = @selector(getCurrentOTSKey);
  methods[5].selector = @selector(getIndex);
  methods[6].selector = @selector(incIndex);
  methods[7].selector = @selector(generateLMSContext);
  methods[8].selector = @selector(generateSignatureWithOrgBouncycastlePqcCryptoLmsLMSContext:);
  methods[9].selector = @selector(getNextOtsPrivateKey);
  methods[10].selector = @selector(extractKeyShardWithInt:);
  methods[11].selector = @selector(getSigParameters);
  methods[12].selector = @selector(getOtsParameters);
  methods[13].selector = @selector(getI);
  methods[14].selector = @selector(getMasterSecret);
  methods[15].selector = @selector(getUsagesRemaining);
  methods[16].selector = @selector(getPublicKey);
  methods[17].selector = @selector(findTWithInt:);
  methods[18].selector = @selector(findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey:);
  methods[19].selector = @selector(calcTWithInt:);
  methods[20].selector = @selector(isEqual:);
  methods[21].selector = @selector(hash);
  methods[22].selector = @selector(getEncoded);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "T1", "LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey;", .constantValue.asLong = 0, 0xa, -1, 15, -1, -1 },
    { "internedKeys", "[LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey;", .constantValue.asLong = 0, 0xa, -1, 16, -1, -1 },
    { "I_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parameters_", "LOrgBouncycastlePqcCryptoLmsLMSigParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "otsParameters_", "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxQ_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "masterSecret_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tCache_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "maxCacheR_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tDigest_", "LOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "q_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKey_", "LOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMSigParameters;LOrgBouncycastlePqcCryptoLmsLMOtsParameters;I[BI[B", "LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters;II", "getInstance", "[B[B", "LJavaIoIOException;", "LNSObject;", "generateSignature", "LOrgBouncycastlePqcCryptoLmsLMSContext;", "extractKeyShard", "I", "findT", "LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey;", "calcT", "equals", "hashCode", &OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_T1, &OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys, "Ljava/util/Map<Lorg/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters$CacheKey;[B>;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters = { "LMSPrivateKeyParameters", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x1, 23, 12, -1, 11, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]) {
    OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_T1 = new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(
#line 19
    1);
    OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys = [IOSObjectArray newArrayWithLength:
#line 20
    129 type:OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_class_()];
    {
      
#line 24
      (void) IOSObjectArray_Set(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys, 1, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_T1);
      for (jint i = 2; i < ((IOSObjectArray *) nil_chk(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys))->size_; i++) {
        
#line 27
        (void) IOSObjectArray_SetAndConsume(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_internedKeys, i, new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(i));
      }
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters)
  }
}

@end


#line 49
void OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *self, OrgBouncycastlePqcCryptoLmsLMSigParameters *lmsParameter, OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameters, jint q, IOSByteArray *I, jint maxQ, IOSByteArray *masterSecret) {
  OrgBouncycastlePqcCryptoLmsLMSKeyParameters_initWithBoolean_(self,
#line 51
  true);
  self->parameters_ = lmsParameter;
  self->otsParameters_ = otsParameters;
  self->q_ = q;
  self->I_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(I);
  self->maxQ_ = maxQ;
  self->masterSecret_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(masterSecret);
  self->maxCacheR_ = JreLShift32(1, ([((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk(self->parameters_)) getH] + 1));
  self->tCache_ = new_JavaUtilWeakHashMap_init();
  self->tDigest_ = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk(lmsParameter)) getDigestOID]);
}


#line 49
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSigParameters *lmsParameter, OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameters, jint q, IOSByteArray *I, jint maxQ, IOSByteArray *masterSecret) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_, lmsParameter, otsParameters, q, I, maxQ, masterSecret)
}


#line 49
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *create_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSigParameters *lmsParameter, OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameters, jint q, IOSByteArray *I, jint maxQ, IOSByteArray *masterSecret) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_, lmsParameter, otsParameters, q, I, maxQ, masterSecret)
}


#line 63
void OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *self, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *parent, jint q, jint maxQ) {
  OrgBouncycastlePqcCryptoLmsLMSKeyParameters_initWithBoolean_(self,
#line 65
  true);
  self->parameters_ = ((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(parent))->parameters_;
  self->otsParameters_ = parent->otsParameters_;
  self->q_ = q;
  self->I_ = parent->I_;
  self->maxQ_ = maxQ;
  self->masterSecret_ = parent->masterSecret_;
  self->maxCacheR_ = JreLShift32(1, [((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk(self->parameters_)) getH]);
  self->tCache_ = parent->tCache_;
  self->tDigest_ = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([self->parameters_ getDigestOID]);
  self->publicKey_ = parent->publicKey_;
}


#line 63
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *parent, jint q, jint maxQ) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_, parent, q, maxQ)
}


#line 63
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *create_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *parent, jint q, jint maxQ) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_withInt_withInt_, parent, q, maxQ)
}


#line 78
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_getInstanceWithByteArray_withByteArray_(IOSByteArray *privEnc, IOSByteArray *pubEnc) {
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initialize();
  
#line 81
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *pKey = OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_getInstanceWithId_(privEnc);
  
#line 83
  ((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(pKey))->publicKey_ = OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_getInstanceWithId_(pubEnc);
  
#line 85
  return pKey;
}


#line 88
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_getInstanceWithId_(id src) {
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initialize();
  
#line 91
  if ([src isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]]) {
    
#line 93
    return (OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) src;
  }
  else if ([src isKindOfClass:[JavaIoDataInputStream class]]) {
    
#line 97
    JavaIoDataInputStream *dIn = (JavaIoDataInputStream *) src;
    
#line 112
    if ([((JavaIoDataInputStream *) nil_chk(dIn)) readInt] != 0) {
      
#line 114
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"expected version 0 lms private key");
    }
    
#line 117
    OrgBouncycastlePqcCryptoLmsLMSigParameters *parameter = OrgBouncycastlePqcCryptoLmsLMSigParameters_getParametersForTypeWithInt_([dIn readInt]);
    OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameter = OrgBouncycastlePqcCryptoLmsLMOtsParameters_getParametersForTypeWithInt_([dIn readInt]);
    IOSByteArray *I = [IOSByteArray newArrayWithLength:16];
    [dIn readFullyWithByteArray:I];
    
#line 122
    jint q = [dIn readInt];
    jint maxQ = [dIn readInt];
    jint l = [dIn readInt];
    if (l < 0) {
      
#line 127
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"secret length less than zero");
    }
    if (l > [dIn available]) {
      
#line 131
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"secret length exceeded ", [dIn available]));
    }
    IOSByteArray *masterSecret = [IOSByteArray newArrayWithLength:l];
    [dIn readFullyWithByteArray:masterSecret];
    
#line 136
    return new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(parameter, otsParameter, q, I, maxQ, masterSecret);
  }
  else
#line 139
  if ([src isKindOfClass:[IOSByteArray class]]) {
    
#line 141
    JavaIoInputStream *in = nil;
    @try {
      
#line 144
      in = new_JavaIoDataInputStream_initWithJavaIoInputStream_(new_JavaIoByteArrayInputStream_initWithByteArray_((IOSByteArray *) cast_chk(src, [IOSByteArray class])));
      return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_getInstanceWithId_(in);
    }
    @finally {
      
#line 149
      if (in != nil) {
        
#line 151
        [in close];
      }
    }
  }
  else if ([src isKindOfClass:[JavaIoInputStream class]]) {
    
#line 157
    return OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_getInstanceWithId_(OrgBouncycastleUtilIoStreams_readAllWithJavaIoInputStream_((JavaIoInputStream *) src));
  }
  
#line 160
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"cannot parse ", src));
}


#line 317
IOSByteArray *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_findTWithOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *self, OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *key) {
  
#line 319
  @synchronized(self->tCache_) {
    
#line 321
    IOSByteArray *t = [((id<JavaUtilMap>) nil_chk(self->tCache_)) getWithId:key];
    
#line 323
    if (t != nil) {
      
#line 325
      return JreRetainedLocalValue(t);
    }
    
#line 328
    t = OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_calcTWithInt_(self, ((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *) nil_chk(key))->index_);
    (void) [self->tCache_ putWithId:key withId:t];
    
#line 331
    return JreRetainedLocalValue(t);
  }
}


#line 335
IOSByteArray *OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_calcTWithInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *self, jint r) {
  
#line 337
  jint h = [((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk([self getSigParameters])) getH];
  
#line 339
  jint twoToh = JreLShift32(1, h);
  
#line 341
  IOSByteArray *T;
  
#line 345
  if (r >= twoToh) {
    
#line 347
    OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_([self getI], self->tDigest_);
    OrgBouncycastlePqcCryptoLmsLmsUtils_u32strWithInt_withOrgBouncycastleCryptoDigest_(r, self->tDigest_);
    OrgBouncycastlePqcCryptoLmsLmsUtils_u16strWithShort_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMS_D_LEAF, self->tDigest_);
    
#line 354
    IOSByteArray *K = OrgBouncycastlePqcCryptoLmsLM_OTS_lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_([self getOtsParameters], [self getI], (r - twoToh), [self getMasterSecret]);
    
#line 356
    OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_(K, self->tDigest_);
    T = [IOSByteArray newArrayWithLength:[((id<OrgBouncycastleCryptoDigest>) nil_chk(self->tDigest_)) getDigestSize]];
    [self->tDigest_ doFinalWithByteArray:T withInt:0];
    return T;
  }
  
#line 362
  IOSByteArray *t2r = [self findTWithInt:2 * r];
  IOSByteArray *t2rPlus1 = [self findTWithInt:(2 * r + 1)];
  
#line 365
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_([self getI], self->tDigest_);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u32strWithInt_withOrgBouncycastleCryptoDigest_(r, self->tDigest_);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u16strWithShort_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMS_D_INTR, self->tDigest_);
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_(t2r, self->tDigest_);
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_(t2rPlus1, self->tDigest_);
  T = [IOSByteArray newArrayWithLength:[((id<OrgBouncycastleCryptoDigest>) nil_chk(self->tDigest_)) getDigestSize]];
  [self->tDigest_ doFinalWithByteArray:T withInt:0];
  
#line 373
  return T;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.java"


#line 471
@implementation OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey


#line 475
- (instancetype)initWithInt:(jint)index {
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(self, index);
  return self;
}

- (NSUInteger)hash {
  
#line 483
  return index_;
}

- (jboolean)isEqual:(id)o {
  
#line 489
  if ([o isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey class]]) {
    
#line 491
    return ((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *) nil_chk(((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *) o)))->index_ == self->index_;
  }
  
#line 494
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "index_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "hashCode", "equals", "LNSObject;", "LOrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey = { "CacheKey", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0xa, 3, 1, 4, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey;
}

@end


#line 475
void OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *self, jint index) {
  NSObject_init(self);
  self->index_ = index;
}


#line 475
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(jint index) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey, initWithInt_, index)
}


#line 475
OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey *create_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey_initWithInt_(jint index) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey, initWithInt_, index)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_CacheKey)

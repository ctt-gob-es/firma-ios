//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/SeedDerive.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsSeedDerive")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoLmsSeedDerive
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsSeedDerive 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsSeedDerive 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoLmsSeedDerive

#if !defined (OrgBouncycastlePqcCryptoLmsSeedDerive_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsSeedDerive || defined(INCLUDE_OrgBouncycastlePqcCryptoLmsSeedDerive))
#define OrgBouncycastlePqcCryptoLmsSeedDerive_

@class IOSByteArray;
@protocol OrgBouncycastleCryptoDigest;

@interface OrgBouncycastlePqcCryptoLmsSeedDerive : NSObject

#pragma mark Public

- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)I
                                  withByteArray:(IOSByteArray *)masterSeed
                withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest;

- (void)deriveSeedWithByteArray:(IOSByteArray *)target
                    withBoolean:(jboolean)incJ;

- (void)deriveSeedWithByteArray:(IOSByteArray *)target
                    withBoolean:(jboolean)incJ
                        withInt:(jint)offset;

- (IOSByteArray *)deriveSeedWithByteArray:(IOSByteArray *)target
                                  withInt:(jint)offset;

- (IOSByteArray *)getI;

- (jint)getJ;

- (IOSByteArray *)getMasterSeed;

- (jint)getQ;

- (void)setJWithInt:(jint)j;

- (void)setQWithInt:(jint)q;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoLmsSeedDerive)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsSeedDerive *self, IOSByteArray *I, IOSByteArray *masterSeed, id<OrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsSeedDerive *new_OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(IOSByteArray *I, IOSByteArray *masterSeed, id<OrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsSeedDerive *create_OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(IOSByteArray *I, IOSByteArray *masterSeed, id<OrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoLmsSeedDerive)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsSeedDerive")

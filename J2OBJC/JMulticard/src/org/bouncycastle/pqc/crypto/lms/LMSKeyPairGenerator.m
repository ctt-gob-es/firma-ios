//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSKeyPairGenerator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/bouncycastle/crypto/KeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMS.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSKeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSKeyPairGenerator.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSigParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/LMSKeyPairGenerator must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSKeyPairGenerator.java"


#line 9
@implementation OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 9
- (instancetype)init {
  OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 14
- (void)init__WithOrgBouncycastleCryptoKeyGenerationParameters:(OrgBouncycastleCryptoKeyGenerationParameters *)param {
  
#line 17
  self->param_ = (OrgBouncycastlePqcCryptoLmsLMSKeyGenerationParameters *) cast_chk(param, [OrgBouncycastlePqcCryptoLmsLMSKeyGenerationParameters class]);
}

- (OrgBouncycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair {
  
#line 23
  JavaSecuritySecureRandom *source = [((OrgBouncycastlePqcCryptoLmsLMSKeyGenerationParameters *) nil_chk(param_)) getRandom];
  
#line 25
  IOSByteArray *I = [IOSByteArray newArrayWithLength:16];
  [((JavaSecuritySecureRandom *) nil_chk(source)) nextBytesWithByteArray:I];
  
#line 28
  IOSByteArray *rootSecret = [IOSByteArray newArrayWithLength:32];
  [source nextBytesWithByteArray:rootSecret];
  
#line 31
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *privKey = OrgBouncycastlePqcCryptoLmsLMS_generateKeysWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withByteArray_([((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSKeyGenerationParameters *) nil_chk(param_)) getParameters])) getLMSigParam], [((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSKeyGenerationParameters *) nil_chk(param_)) getParameters])) getLMOTSParam], 0, I, rootSecret);
  
#line 33
  return new_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_([((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(privKey)) getPublicKey], privKey);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoAsymmetricCipherKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(init__WithOrgBouncycastleCryptoKeyGenerationParameters:);
  methods[2].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "param_", "LOrgBouncycastlePqcCryptoLmsLMSKeyGenerationParameters;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "init", "LOrgBouncycastleCryptoKeyGenerationParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator = { "LMSKeyPairGenerator", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator;
}

@end


#line 9
void OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator_init(OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator *self) {
  NSObject_init(self);
}


#line 9
OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator *new_OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator, init)
}


#line 9
OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator *create_OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLMSKeyPairGenerator)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/HSSSignature.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsHSSSignature")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoLmsHSSSignature
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsHSSSignature 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsHSSSignature 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoLmsHSSSignature

#if !defined (OrgBouncycastlePqcCryptoLmsHSSSignature_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsHSSSignature || defined(INCLUDE_OrgBouncycastlePqcCryptoLmsHSSSignature))
#define OrgBouncycastlePqcCryptoLmsHSSSignature_

#define RESTRICT_OrgBouncycastleUtilEncodable 1
#define INCLUDE_OrgBouncycastleUtilEncodable 1
#include "org/bouncycastle/util/Encodable.h"

@class IOSByteArray;
@class IOSObjectArray;
@class OrgBouncycastlePqcCryptoLmsLMSSignature;

@interface OrgBouncycastlePqcCryptoLmsHSSSignature : NSObject < OrgBouncycastleUtilEncodable >

#pragma mark Public

- (instancetype)initWithInt:(jint)lMinus1
withOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray:(IOSObjectArray *)signedPubKey
withOrgBouncycastlePqcCryptoLmsLMSSignature:(OrgBouncycastlePqcCryptoLmsLMSSignature *)signature;

- (jboolean)isEqual:(id)o;

- (IOSByteArray *)getEncoded;

/*!
 @param src byte[], InputStream or HSSSignature
 @param L The HSS depth, available from public key.
 @return An HSSSignature instance.
 @throw IOException
 */
+ (OrgBouncycastlePqcCryptoLmsHSSSignature *)getInstanceWithId:(id)src
                                                       withInt:(jint)L;

- (jint)getlMinus1;

- (OrgBouncycastlePqcCryptoLmsLMSSignature *)getSignature;

- (IOSObjectArray *)getSignedPubKey;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoLmsHSSSignature)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoLmsHSSSignature_initWithInt_withOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray_withOrgBouncycastlePqcCryptoLmsLMSSignature_(OrgBouncycastlePqcCryptoLmsHSSSignature *self, jint lMinus1, IOSObjectArray *signedPubKey, OrgBouncycastlePqcCryptoLmsLMSSignature *signature);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsHSSSignature *new_OrgBouncycastlePqcCryptoLmsHSSSignature_initWithInt_withOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray_withOrgBouncycastlePqcCryptoLmsLMSSignature_(jint lMinus1, IOSObjectArray *signedPubKey, OrgBouncycastlePqcCryptoLmsLMSSignature *signature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsHSSSignature *create_OrgBouncycastlePqcCryptoLmsHSSSignature_initWithInt_withOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray_withOrgBouncycastlePqcCryptoLmsLMSSignature_(jint lMinus1, IOSObjectArray *signedPubKey, OrgBouncycastlePqcCryptoLmsLMSSignature *signature);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsHSSSignature *OrgBouncycastlePqcCryptoLmsHSSSignature_getInstanceWithId_withInt_(id src, jint L);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoLmsHSSSignature)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsHSSSignature")

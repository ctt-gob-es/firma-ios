//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMOtsParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMOtsParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoLmsLMOtsParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMOtsParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMOtsParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoLmsLMOtsParameters

#if !defined (OrgBouncycastlePqcCryptoLmsLMOtsParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMOtsParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoLmsLMOtsParameters))
#define OrgBouncycastlePqcCryptoLmsLMOtsParameters_

@class OrgBouncycastleAsn1ASN1ObjectIdentifier;

@interface OrgBouncycastlePqcCryptoLmsLMOtsParameters : NSObject

#pragma mark Public

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getDigestOID;

- (jint)getLs;

- (jint)getN;

- (jint)getP;

+ (OrgBouncycastlePqcCryptoLmsLMOtsParameters *)getParametersForTypeWithInt:(jint)type;

- (jint)getSigLen;

- (jint)getType;

- (jint)getW;

#pragma mark Protected

- (instancetype)initWithInt:(jint)type
                    withInt:(jint)n
                    withInt:(jint)w
                    withInt:(jint)p
                    withInt:(jint)ls
                    withInt:(jint)sigLen
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestOID;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastlePqcCryptoLmsLMOtsParameters)

inline jint OrgBouncycastlePqcCryptoLmsLMOtsParameters_get_reserved(void);
#define OrgBouncycastlePqcCryptoLmsLMOtsParameters_reserved 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoLmsLMOtsParameters, reserved, jint)

inline OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_get_sha256_n32_w1(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_sha256_n32_w1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMOtsParameters, sha256_n32_w1, OrgBouncycastlePqcCryptoLmsLMOtsParameters *)

inline OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_get_sha256_n32_w2(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_sha256_n32_w2;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMOtsParameters, sha256_n32_w2, OrgBouncycastlePqcCryptoLmsLMOtsParameters *)

inline OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_get_sha256_n32_w4(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_sha256_n32_w4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMOtsParameters, sha256_n32_w4, OrgBouncycastlePqcCryptoLmsLMOtsParameters *)

inline OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_get_sha256_n32_w8(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_sha256_n32_w8;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMOtsParameters, sha256_n32_w8, OrgBouncycastlePqcCryptoLmsLMOtsParameters *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoLmsLMOtsParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoLmsLMOtsParameters *self, jint type, jint n, jint w, jint p, jint ls, jint sigLen, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestOID);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMOtsParameters *new_OrgBouncycastlePqcCryptoLmsLMOtsParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(jint type, jint n, jint w, jint p, jint ls, jint sigLen, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestOID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMOtsParameters *create_OrgBouncycastlePqcCryptoLmsLMOtsParameters_initWithInt_withInt_withInt_withInt_withInt_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(jint type, jint n, jint w, jint p, jint ls, jint sigLen, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestOID);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMOtsParameters *OrgBouncycastlePqcCryptoLmsLMOtsParameters_getParametersForTypeWithInt_(jint type);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoLmsLMOtsParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMOtsParameters")

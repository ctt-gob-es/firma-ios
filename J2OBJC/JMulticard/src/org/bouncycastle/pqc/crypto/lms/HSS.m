//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/HSS.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/security/SecureRandom.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/bouncycastle/pqc/crypto/ExhaustedPrivateKeyException.h"
#include "org/bouncycastle/pqc/crypto/lms/HSS.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSKeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsPrivateKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMS.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSContext.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSSignedPubKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSigParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/HSS must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/HSS.java"


#line 7
@implementation OrgBouncycastlePqcCryptoLmsHSS


#line 7
- (instancetype)initPackagePrivate {
  OrgBouncycastlePqcCryptoLmsHSS_initPackagePrivate(self);
  return self;
}


#line 10
+ (OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *)generateHSSKeyPairWithOrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters:(OrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters *)parameters {
  return OrgBouncycastlePqcCryptoLmsHSS_generateHSSKeyPairWithOrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters_(parameters);
}


#line 81
+ (void)incrementIndexWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters:(OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *)keyPair {
  OrgBouncycastlePqcCryptoLmsHSS_incrementIndexWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_(keyPair);
}


#line 92
+ (void)rangeTestKeysWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters:(OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *)keyPair {
  OrgBouncycastlePqcCryptoLmsHSS_rangeTestKeysWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_(keyPair);
}


#line 130
+ (OrgBouncycastlePqcCryptoLmsHSSSignature *)generateSignatureWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters:(OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *)keyPair
                                                                                                       withByteArray:(IOSByteArray *)message {
  return OrgBouncycastlePqcCryptoLmsHSS_generateSignatureWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_withByteArray_(keyPair, message);
}


#line 169
+ (OrgBouncycastlePqcCryptoLmsHSSSignature *)generateSignatureWithInt:(jint)L
                            withOrgBouncycastlePqcCryptoLmsLMSContext:(OrgBouncycastlePqcCryptoLmsLMSContext *)context {
  return OrgBouncycastlePqcCryptoLmsHSS_generateSignatureWithInt_withOrgBouncycastlePqcCryptoLmsLMSContext_(L, context);
}

+ (jboolean)verifySignatureWithOrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters:(OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *)publicKey
                                     withOrgBouncycastlePqcCryptoLmsHSSSignature:(OrgBouncycastlePqcCryptoLmsHSSSignature *)signature
                                                                   withByteArray:(IOSByteArray *)message {
  return OrgBouncycastlePqcCryptoLmsHSS_verifySignatureWithOrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters_withOrgBouncycastlePqcCryptoLmsHSSSignature_withByteArray_(publicKey, signature, message);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 4, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsHSSSignature;", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsHSSSignature;", 0x9, 5, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(generateHSSKeyPairWithOrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters:);
  methods[2].selector = @selector(incrementIndexWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters:);
  methods[3].selector = @selector(rangeTestKeysWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters:);
  methods[4].selector = @selector(generateSignatureWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters:withByteArray:);
  methods[5].selector = @selector(generateSignatureWithInt:withOrgBouncycastlePqcCryptoLmsLMSContext:);
  methods[6].selector = @selector(verifySignatureWithOrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters:withOrgBouncycastlePqcCryptoLmsHSSSignature:withByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "generateHSSKeyPair", "LOrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters;", "incrementIndex", "LOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters;", "rangeTestKeys", "generateSignature", "LOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters;[B", "ILOrgBouncycastlePqcCryptoLmsLMSContext;", "verifySignature", "LOrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters;LOrgBouncycastlePqcCryptoLmsHSSSignature;[B", "LOrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsHSS = { "HSS", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, NULL, 7, 0x0, 7, 0, -1, 10, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsHSS;
}

@end


#line 7
void OrgBouncycastlePqcCryptoLmsHSS_initPackagePrivate(OrgBouncycastlePqcCryptoLmsHSS *self) {
  NSObject_init(self);
}


#line 7
OrgBouncycastlePqcCryptoLmsHSS *new_OrgBouncycastlePqcCryptoLmsHSS_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsHSS, initPackagePrivate)
}


#line 7
OrgBouncycastlePqcCryptoLmsHSS *create_OrgBouncycastlePqcCryptoLmsHSS_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsHSS, initPackagePrivate)
}


#line 10
OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *OrgBouncycastlePqcCryptoLmsHSS_generateHSSKeyPairWithOrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters_(OrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters *parameters) {
  OrgBouncycastlePqcCryptoLmsHSS_initialize();
  
#line 15
  IOSObjectArray *keys = [IOSObjectArray newArrayWithLength:[((OrgBouncycastlePqcCryptoLmsHSSKeyGenerationParameters *) nil_chk(parameters)) getDepth] type:OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_class_()];
  IOSObjectArray *sig = [IOSObjectArray newArrayWithLength:[parameters getDepth] - 1 type:OrgBouncycastlePqcCryptoLmsLMSSignature_class_()];
  
#line 18
  IOSByteArray *rootSeed = [IOSByteArray newArrayWithLength:32];
  [((JavaSecuritySecureRandom *) nil_chk([parameters getRandom])) nextBytesWithByteArray:rootSeed];
  
#line 21
  IOSByteArray *I = [IOSByteArray newArrayWithLength:16];
  [((JavaSecuritySecureRandom *) nil_chk([parameters getRandom])) nextBytesWithByteArray:I];
  
#line 30
  IOSByteArray *zero = [IOSByteArray newArrayWithLength:0];
  
#line 32
  jlong hssKeyMaxIndex = 1;
  for (jint t = 0; t < keys->size_; t++) {
    
#line 35
    if (t == 0) {
      
#line 37
      (void) IOSObjectArray_SetAndConsume(keys, t, new_OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(
#line 38
      [((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk(IOSObjectArray_Get(nil_chk([parameters getLmsParameters]), t))) getLMSigParam],
#line 39
      [((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk(IOSObjectArray_Get(nil_chk([parameters getLmsParameters]), t))) getLMOTSParam],
#line 40
      0,
#line 41
      I, JreLShift32(
#line 42
      1, [((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk(IOSObjectArray_Get(nil_chk([parameters getLmsParameters]), t))) getLMSigParam])) getH]),
#line 43
      rootSeed));
    }
    else {
      
#line 47
      (void) IOSObjectArray_SetAndConsume(keys, t, new_OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(
#line 48
      [((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk(IOSObjectArray_Get(nil_chk([parameters getLmsParameters]), t))) getLMSigParam],
#line 49
      [((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk(IOSObjectArray_Get(nil_chk([parameters getLmsParameters]), t))) getLMOTSParam],
#line 50
      -1,
#line 51
      zero, JreLShift32(
#line 52
      1, [((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk(IOSObjectArray_Get(nil_chk([parameters getLmsParameters]), t))) getLMSigParam])) getH]),
#line 53
      zero));
    }
    hssKeyMaxIndex *= JreLShift32(1, [((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSParameters *) nil_chk(IOSObjectArray_Get(nil_chk([parameters getLmsParameters]), t))) getLMSigParam])) getH]);
  }
  
#line 60
  if (hssKeyMaxIndex == 0) {
    
#line 62
    hssKeyMaxIndex = JavaLangLong_MAX_VALUE;
  }
  
#line 65
  return new_OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_initWithInt_withJavaUtilList_withJavaUtilList_withLong_withLong_(
#line 66
  [parameters getDepth], JavaUtilArrays_asListWithNSObjectArray_(
#line 67
  keys), JavaUtilArrays_asListWithNSObjectArray_(
#line 68
  sig),
#line 69
  0, hssKeyMaxIndex);
}


#line 81
void OrgBouncycastlePqcCryptoLmsHSS_incrementIndexWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_(OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *keyPair) {
  OrgBouncycastlePqcCryptoLmsHSS_initialize();
  @synchronized(keyPair) {
    
#line 85
    OrgBouncycastlePqcCryptoLmsHSS_rangeTestKeysWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_(keyPair);
    [((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(keyPair)) incIndex];
    [((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk([((id<JavaUtilList>) nil_chk([keyPair getKeys])) getWithInt:[keyPair getL] - 1])) incIndex];
  }
}

void OrgBouncycastlePqcCryptoLmsHSS_rangeTestKeysWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_(OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *keyPair) {
  OrgBouncycastlePqcCryptoLmsHSS_initialize();
  @synchronized(keyPair) {
    
#line 96
    if ([((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(keyPair)) getIndex] >= [keyPair getIndexLimit]) {
      
#line 98
      @throw new_OrgBouncycastlePqcCryptoExhaustedPrivateKeyException_initWithNSString_(JreStrcat("$$$", @"hss private key",
#line 100
      (([keyPair isShard]) ? @" shard" : @""), @" is exhausted"));
    }
    
#line 105
    jint L = [keyPair getL];
    jint d = L;
    id<JavaUtilList> prv = [keyPair getKeys];
    while ([((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk([((id<JavaUtilList>) nil_chk(prv)) getWithInt:d - 1])) getIndex] == JreLShift32(1, ([((OrgBouncycastlePqcCryptoLmsLMSigParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk([prv getWithInt:d - 1])) getSigParameters])) getH]))) {
      
#line 110
      d = d - 1;
      if (d == 0) {
        
#line 113
        @throw new_OrgBouncycastlePqcCryptoExhaustedPrivateKeyException_initWithNSString_(JreStrcat("$$$", @"hss private key",
#line 115
        (([keyPair isShard]) ? @" shard" : @""), @" is exhausted the maximum limit for this HSS private key"));
      }
    }
    
#line 121
    while (d < L) {
      
#line 123
      [keyPair replaceConsumedKeyWithInt:d];
      d = d + 1;
    }
  }
}


#line 130
OrgBouncycastlePqcCryptoLmsHSSSignature *OrgBouncycastlePqcCryptoLmsHSS_generateSignatureWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_withByteArray_(OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *keyPair, IOSByteArray *message) {
  OrgBouncycastlePqcCryptoLmsHSS_initialize();
  IOSObjectArray *signed_pub_key;
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *nextKey;
  jint L = [((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(keyPair)) getL];
  
#line 136
  @synchronized(keyPair) {
    
#line 138
    OrgBouncycastlePqcCryptoLmsHSS_rangeTestKeysWithOrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters_(keyPair);
    
#line 140
    id<JavaUtilList> keys = [keyPair getKeys];
    id<JavaUtilList> sig = [keyPair getSig];
    
#line 143
    nextKey = JreRetainedLocalValue([((id<JavaUtilList>) nil_chk([keyPair getKeys])) getWithInt:L - 1]);
    
#line 146
    jint i = 0;
    signed_pub_key = JreRetainedLocalValue([IOSObjectArray newArrayWithLength:L - 1 type:OrgBouncycastlePqcCryptoLmsLMSSignedPubKey_class_()]);
    while (i < L - 1) {
      
#line 150
      (void) IOSObjectArray_SetAndConsume(signed_pub_key, i, new_OrgBouncycastlePqcCryptoLmsLMSSignedPubKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMSSignature_withOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_(
#line 151
      [((id<JavaUtilList>) nil_chk(sig)) getWithInt:i],
#line 152
      [((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk([((id<JavaUtilList>) nil_chk(keys)) getWithInt:i + 1])) getPublicKey]));
      i = i + 1;
    }
    
#line 159
    [keyPair incIndex];
  }
  
#line 162
  OrgBouncycastlePqcCryptoLmsLMSContext *context = [((OrgBouncycastlePqcCryptoLmsLMSContext *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(nextKey)) generateLMSContext])) withSignedPublicKeysWithOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray:signed_pub_key];
  
#line 164
  [((OrgBouncycastlePqcCryptoLmsLMSContext *) nil_chk(context)) updateWithByteArray:message withInt:0 withInt:((IOSByteArray *) nil_chk(message))->size_];
  
#line 166
  return OrgBouncycastlePqcCryptoLmsHSS_generateSignatureWithInt_withOrgBouncycastlePqcCryptoLmsLMSContext_(L, context);
}


#line 169
OrgBouncycastlePqcCryptoLmsHSSSignature *OrgBouncycastlePqcCryptoLmsHSS_generateSignatureWithInt_withOrgBouncycastlePqcCryptoLmsLMSContext_(jint L, OrgBouncycastlePqcCryptoLmsLMSContext *context) {
  OrgBouncycastlePqcCryptoLmsHSS_initialize();
  return new_OrgBouncycastlePqcCryptoLmsHSSSignature_initWithInt_withOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray_withOrgBouncycastlePqcCryptoLmsLMSSignature_(L - 1, [((OrgBouncycastlePqcCryptoLmsLMSContext *) nil_chk(context)) getSignedPubKeys], OrgBouncycastlePqcCryptoLmsLMS_generateSignWithOrgBouncycastlePqcCryptoLmsLMSContext_(context));
}

jboolean OrgBouncycastlePqcCryptoLmsHSS_verifySignatureWithOrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters_withOrgBouncycastlePqcCryptoLmsHSSSignature_withByteArray_(OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *publicKey, OrgBouncycastlePqcCryptoLmsHSSSignature *signature, IOSByteArray *message) {
  OrgBouncycastlePqcCryptoLmsHSS_initialize();
  jint Nspk = [((OrgBouncycastlePqcCryptoLmsHSSSignature *) nil_chk(signature)) getlMinus1];
  if (Nspk + 1 != [((OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *) nil_chk(publicKey)) getL]) {
    
#line 179
    return false;
  }
  
#line 182
  IOSObjectArray *sigList = [IOSObjectArray newArrayWithLength:Nspk + 1 type:OrgBouncycastlePqcCryptoLmsLMSSignature_class_()];
  IOSObjectArray *pubList = [IOSObjectArray newArrayWithLength:Nspk type:OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_class_()];
  
#line 185
  for (jint i = 0; i < Nspk; i++) {
    
#line 187
    (void) IOSObjectArray_Set(sigList, i, [((OrgBouncycastlePqcCryptoLmsLMSSignedPubKey *) nil_chk(IOSObjectArray_Get(nil_chk([signature getSignedPubKey]), i))) getSignature]);
    (void) IOSObjectArray_Set(pubList, i, [((OrgBouncycastlePqcCryptoLmsLMSSignedPubKey *) nil_chk(IOSObjectArray_Get(nil_chk([signature getSignedPubKey]), i))) getPublicKey]);
  }
  (void) IOSObjectArray_Set(sigList, Nspk, [signature getSignature]);
  
#line 192
  OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *key = [publicKey getLMSPublicKey];
  
#line 194
  for (jint i = 0; i < Nspk; i++) {
    
#line 196
    OrgBouncycastlePqcCryptoLmsLMSSignature *sig = IOSObjectArray_Get(sigList, i);
    IOSByteArray *msg = [((OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *) nil_chk(IOSObjectArray_Get(pubList, i))) toByteArray];
    if (!OrgBouncycastlePqcCryptoLmsLMS_verifySignatureWithOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_withOrgBouncycastlePqcCryptoLmsLMSSignature_withByteArray_(key, sig, msg)) {
      
#line 200
      return false;
    }
    @try {
      
#line 204
      key = IOSObjectArray_Get(pubList, i);
    }
    @catch (JavaLangException *ex) {
      
#line 208
      @throw new_JavaLangIllegalStateException_initWithNSString_withJavaLangThrowable_([ex getMessage], ex);
    }
  }
  return OrgBouncycastlePqcCryptoLmsLMS_verifySignatureWithOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters_withOrgBouncycastlePqcCryptoLmsLMSSignature_withByteArray_(key, IOSObjectArray_Get(sigList, Nspk), message);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsHSS)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/HSS.java"


#line 215
@implementation OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey


#line 219
- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMSigParameters:(OrgBouncycastlePqcCryptoLmsLMSigParameters *)lmsParameter
                    withOrgBouncycastlePqcCryptoLmsLMOtsParameters:(OrgBouncycastlePqcCryptoLmsLMOtsParameters *)otsParameters
                                                           withInt:(jint)q
                                                     withByteArray:(IOSByteArray *)I
                                                           withInt:(jint)maxQ
                                                     withByteArray:(IOSByteArray *)masterSecret {
  OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(self, lmsParameter, otsParameters, q, I, maxQ, masterSecret);
  return self;
}


#line 224
- (OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)getNextOtsPrivateKey {
  
#line 227
  @throw new_JavaLangRuntimeException_initWithNSString_(@"placeholder only");
}

- (OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters *)getPublicKey {
  
#line 233
  @throw new_JavaLangRuntimeException_initWithNSString_(@"placeholder only");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoLmsLMSigParameters:withOrgBouncycastlePqcCryptoLmsLMOtsParameters:withInt:withByteArray:withInt:withByteArray:);
  methods[1].selector = @selector(getNextOtsPrivateKey);
  methods[2].selector = @selector(getPublicKey);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMSigParameters;LOrgBouncycastlePqcCryptoLmsLMOtsParameters;I[BI[B", "LOrgBouncycastlePqcCryptoLmsHSS;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey = { "PlaceholderLMSPrivateKey", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, NULL, 7, 0x8, 3, 0, 1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey;
}

@end


#line 219
void OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey *self, OrgBouncycastlePqcCryptoLmsLMSigParameters *lmsParameter, OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameters, jint q, IOSByteArray *I, jint maxQ, IOSByteArray *masterSecret) {
  OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(self,
#line 221
  lmsParameter, otsParameters, q, I, maxQ, masterSecret);
}


#line 219
OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey *new_OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSigParameters *lmsParameter, OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameters, jint q, IOSByteArray *I, jint maxQ, IOSByteArray *masterSecret) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey, initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_, lmsParameter, otsParameters, q, I, maxQ, masterSecret)
}


#line 219
OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey *create_OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMSigParameters *lmsParameter, OrgBouncycastlePqcCryptoLmsLMOtsParameters *otsParameters, jint q, IOSByteArray *I, jint maxQ, IOSByteArray *masterSecret) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey, initWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_withInt_withByteArray_withInt_withByteArray_, lmsParameter, otsParameters, q, I, maxQ, masterSecret)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsHSS_PlaceholderLMSPrivateKey)

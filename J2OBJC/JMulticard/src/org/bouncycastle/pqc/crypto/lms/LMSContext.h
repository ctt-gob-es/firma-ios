//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSContext")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoLmsLMSContext
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSContext 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSContext 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoLmsLMSContext

#if !defined (OrgBouncycastlePqcCryptoLmsLMSContext_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSContext || defined(INCLUDE_OrgBouncycastlePqcCryptoLmsLMSContext))
#define OrgBouncycastlePqcCryptoLmsLMSContext_

#define RESTRICT_OrgBouncycastleCryptoDigest 1
#define INCLUDE_OrgBouncycastleCryptoDigest 1
#include "org/bouncycastle/crypto/Digest.h"

@class IOSByteArray;
@class IOSObjectArray;
@class OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;
@class OrgBouncycastlePqcCryptoLmsLMOtsPublicKey;
@class OrgBouncycastlePqcCryptoLmsLMSigParameters;

@interface OrgBouncycastlePqcCryptoLmsLMSContext : NSObject < OrgBouncycastleCryptoDigest >

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)key
                    withOrgBouncycastlePqcCryptoLmsLMSigParameters:(OrgBouncycastlePqcCryptoLmsLMSigParameters *)sigParams
                                   withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest
                                                     withByteArray:(IOSByteArray *)C
                                                    withByteArray2:(IOSObjectArray *)path;

- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey:(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)publicKey
                                                           withId:(id)signature
                                  withOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)getPublicKey;

- (id)getSignature;

- (void)reset;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

#pragma mark Package-Private

- (IOSByteArray *)getC;

- (IOSObjectArray *)getPath;

- (OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)getPrivateKey;

- (IOSByteArray *)getQ;

- (IOSObjectArray *)getSignedPubKeys;

- (OrgBouncycastlePqcCryptoLmsLMSigParameters *)getSigParams;

- (OrgBouncycastlePqcCryptoLmsLMSContext *)withSignedPublicKeysWithOrgBouncycastlePqcCryptoLmsLMSSignedPubKeyArray:(IOSObjectArray *)signedPubKeys;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoLmsLMSContext)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_(OrgBouncycastlePqcCryptoLmsLMSContext *self, OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *key, OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams, id<OrgBouncycastleCryptoDigest> digest, IOSByteArray *C, IOSObjectArray *path);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSContext *new_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *key, OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams, id<OrgBouncycastleCryptoDigest> digest, IOSByteArray *C, IOSObjectArray *path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSContext *create_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastleCryptoDigest_withByteArray_withByteArray2_(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *key, OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams, id<OrgBouncycastleCryptoDigest> digest, IOSByteArray *C, IOSObjectArray *path);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMSContext *self, OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, id signature, id<OrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSContext *new_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, id signature, id<OrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSContext *create_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, id signature, id<OrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoLmsLMSContext)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSContext")

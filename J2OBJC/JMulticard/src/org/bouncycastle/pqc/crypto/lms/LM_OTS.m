//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LM_OTS.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/pqc/crypto/lms/Composer.h"
#include "org/bouncycastle/pqc/crypto/lms/DigestUtil.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsPrivateKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSContext.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSException.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSigParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LM_OTS.h"
#include "org/bouncycastle/pqc/crypto/lms/LmsUtils.h"
#include "org/bouncycastle/pqc/crypto/lms/SeedDerive.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/LM_OTS must be compiled with ARC (-fobjc-arc)"
#endif

inline jshort OrgBouncycastlePqcCryptoLmsLM_OTS_get_D_PBLC(void);
#define OrgBouncycastlePqcCryptoLmsLM_OTS_D_PBLC -32640
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoLmsLM_OTS, D_PBLC, jshort)

inline jint OrgBouncycastlePqcCryptoLmsLM_OTS_get_ITER_K(void);
#define OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_K 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoLmsLM_OTS, ITER_K, jint)

inline jint OrgBouncycastlePqcCryptoLmsLM_OTS_get_ITER_PREV(void);
#define OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV 23
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoLmsLM_OTS, ITER_PREV, jint)

inline jint OrgBouncycastlePqcCryptoLmsLM_OTS_get_ITER_J(void);
#define OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_J 22
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcCryptoLmsLM_OTS, ITER_J, jint)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LM_OTS.java"


#line 7
@implementation OrgBouncycastlePqcCryptoLmsLM_OTS


#line 7
- (instancetype)initPackagePrivate {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initPackagePrivate(self);
  return self;
}


#line 21
+ (jint)coefWithByteArray:(IOSByteArray *)S
                  withInt:(jint)i
                  withInt:(jint)w {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_coefWithByteArray_withInt_withInt_(S, i, w);
}


#line 32
+ (jint)cksmWithByteArray:(IOSByteArray *)S
                  withInt:(jint)sLen
withOrgBouncycastlePqcCryptoLmsLMOtsParameters:(OrgBouncycastlePqcCryptoLmsLMOtsParameters *)parameters {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_cksmWithByteArray_withInt_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_(S, sLen, parameters);
}


#line 49
+ (OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)privateKey {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_(privateKey);
}


#line 55
+ (IOSByteArray *)lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsParameters:(OrgBouncycastlePqcCryptoLmsLMOtsParameters *)parameter
                                                                            withByteArray:(IOSByteArray *)I
                                                                                  withInt:(jint)q
                                                                            withByteArray:(IOSByteArray *)masterSecret {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(parameter, I, q, masterSecret);
}


#line 109
+ (OrgBouncycastlePqcCryptoLmsLMOtsSignature *)lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMSigParameters:(OrgBouncycastlePqcCryptoLmsLMSigParameters *)sigParams
                                                                        withOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)privateKey
                                                                                                        withByteArray2:(IOSObjectArray *)path
                                                                                                         withByteArray:(IOSByteArray *)message
                                                                                                           withBoolean:(jboolean)preHashed {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withByteArray2_withByteArray_withBoolean_(sigParams, privateKey, path, message, preHashed);
}


#line 136
+ (OrgBouncycastlePqcCryptoLmsLMOtsSignature *)lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *)privateKey
                                                                                                         withByteArray:(IOSByteArray *)Q
                                                                                                         withByteArray:(IOSByteArray *)C {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withByteArray_withByteArray_(privateKey, Q, C);
}


#line 174
+ (jboolean)lm_ots_validate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey:(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)publicKey
                                     withOrgBouncycastlePqcCryptoLmsLMOtsSignature:(OrgBouncycastlePqcCryptoLmsLMOtsSignature *)signature
                                                                     withByteArray:(IOSByteArray *)message
                                                                       withBoolean:(jboolean)prehashed {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withOrgBouncycastlePqcCryptoLmsLMOtsSignature_withByteArray_withBoolean_(publicKey, signature, message, prehashed);
}


#line 184
+ (IOSByteArray *)lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey:(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)publicKey
                                                     withOrgBouncycastlePqcCryptoLmsLMOtsSignature:(OrgBouncycastlePqcCryptoLmsLMOtsSignature *)signature
                                                                                     withByteArray:(IOSByteArray *)message {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withOrgBouncycastlePqcCryptoLmsLMOtsSignature_withByteArray_(publicKey, signature, message);
}


#line 193
+ (IOSByteArray *)lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMSContext:(OrgBouncycastlePqcCryptoLmsLMSContext *)context {
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMSContext_(context);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsPublicKey;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 4, 6, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsSignature;", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsSignature;", 0x9, 7, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 10, 11, 12, -1, -1, -1 },
    { NULL, "[B", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 13, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(coefWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(cksmWithByteArray:withInt:withOrgBouncycastlePqcCryptoLmsLMOtsParameters:);
  methods[3].selector = @selector(lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:);
  methods[4].selector = @selector(lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsParameters:withByteArray:withInt:withByteArray:);
  methods[5].selector = @selector(lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMSigParameters:withOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:withByteArray2:withByteArray:withBoolean:);
  methods[6].selector = @selector(lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey:withByteArray:withByteArray:);
  methods[7].selector = @selector(lm_ots_validate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey:withOrgBouncycastlePqcCryptoLmsLMOtsSignature:withByteArray:withBoolean:);
  methods[8].selector = @selector(lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey:withOrgBouncycastlePqcCryptoLmsLMOtsSignature:withByteArray:);
  methods[9].selector = @selector(lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMSContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "D_PBLC", "S", .constantValue.asShort = OrgBouncycastlePqcCryptoLmsLM_OTS_D_PBLC, 0x1a, -1, -1, -1, -1 },
    { "ITER_K", "I", .constantValue.asInt = OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_K, 0x1a, -1, -1, -1, -1 },
    { "ITER_PREV", "I", .constantValue.asInt = OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV, 0x1a, -1, -1, -1, -1 },
    { "ITER_J", "I", .constantValue.asInt = OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_J, 0x1a, -1, -1, -1, -1 },
    { "SEED_RANDOMISER_INDEX", "I", .constantValue.asInt = OrgBouncycastlePqcCryptoLmsLM_OTS_SEED_RANDOMISER_INDEX, 0x18, -1, -1, -1, -1 },
    { "SEED_LEN", "I", .constantValue.asInt = OrgBouncycastlePqcCryptoLmsLM_OTS_SEED_LEN, 0x18, -1, -1, -1, -1 },
    { "MAX_HASH", "I", .constantValue.asInt = OrgBouncycastlePqcCryptoLmsLM_OTS_MAX_HASH, 0x18, -1, -1, -1, -1 },
    { "D_MESG", "S", .constantValue.asShort = OrgBouncycastlePqcCryptoLmsLM_OTS_D_MESG, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "coef", "[BII", "cksm", "[BILOrgBouncycastlePqcCryptoLmsLMOtsParameters;", "lms_ots_generatePublicKey", "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;", "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;[BI[B", "lm_ots_generate_signature", "LOrgBouncycastlePqcCryptoLmsLMSigParameters;LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;[[B[BZ", "LOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey;[B[B", "lm_ots_validate_signature", "LOrgBouncycastlePqcCryptoLmsLMOtsPublicKey;LOrgBouncycastlePqcCryptoLmsLMOtsSignature;[BZ", "LOrgBouncycastlePqcCryptoLmsLMSException;", "lm_ots_validate_signature_calculate", "LOrgBouncycastlePqcCryptoLmsLMOtsPublicKey;LOrgBouncycastlePqcCryptoLmsLMOtsSignature;[B", "LOrgBouncycastlePqcCryptoLmsLMSContext;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLM_OTS = { "LM_OTS", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x0, 10, 8, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLM_OTS;
}

@end


#line 7
void OrgBouncycastlePqcCryptoLmsLM_OTS_initPackagePrivate(OrgBouncycastlePqcCryptoLmsLM_OTS *self) {
  NSObject_init(self);
}


#line 7
OrgBouncycastlePqcCryptoLmsLM_OTS *new_OrgBouncycastlePqcCryptoLmsLM_OTS_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLM_OTS, initPackagePrivate)
}


#line 7
OrgBouncycastlePqcCryptoLmsLM_OTS *create_OrgBouncycastlePqcCryptoLmsLM_OTS_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLM_OTS, initPackagePrivate)
}


#line 21
jint OrgBouncycastlePqcCryptoLmsLM_OTS_coefWithByteArray_withInt_withInt_(IOSByteArray *S, jint i, jint w) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  jint index = JreIntDiv((i * w), 8);
  jint digits_per_byte = JreIntDiv(8, w);
  jint shift = w * (~i & (digits_per_byte - 1));
  jint mask = (JreLShift32(1, w)) - 1;
  
#line 28
  return (JreURShift32(IOSByteArray_Get(nil_chk(S), index), shift)) & mask;
}

jint OrgBouncycastlePqcCryptoLmsLM_OTS_cksmWithByteArray_withInt_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_(IOSByteArray *S, jint sLen, OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameters) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  jint sum = 0;
  
#line 36
  jint w = [((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameters)) getW];
  
#line 39
  jint twoWpow = (JreLShift32(1, w)) - 1;
  
#line 41
  for (jint i = 0; i < (JreIntDiv(sLen * 8, [parameters getW])); i++) {
    
#line 43
    sum = sum + twoWpow - OrgBouncycastlePqcCryptoLmsLM_OTS_coefWithByteArray_withInt_withInt_(S, i, [parameters getW]);
  }
  return JreLShift32(sum, [parameters getLs]);
}


#line 49
OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *OrgBouncycastlePqcCryptoLmsLM_OTS_lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *privateKey) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  IOSByteArray *K = OrgBouncycastlePqcCryptoLmsLM_OTS_lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_([((OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *) nil_chk(privateKey)) getParameter], [privateKey getI], [privateKey getQ], [privateKey getMasterSecret]);
  return new_OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_([privateKey getParameter], [privateKey getI], [privateKey getQ], K);
}

IOSByteArray *OrgBouncycastlePqcCryptoLmsLM_OTS_lms_ots_generatePublicKeyWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter, IOSByteArray *I, jint q, IOSByteArray *masterSecret) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  
#line 62
  id<OrgBouncycastleCryptoDigest> publicContext = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameter)) getDigestOID]);
  IOSByteArray *prehashPrefix = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) bytesWithByteArray:
#line 64
  I])) u32strWithInt:
#line 65
  q])) u16strWithInt:
#line 66
  OrgBouncycastlePqcCryptoLmsLM_OTS_D_PBLC])) padUntilWithInt:
#line 67
  0 withInt:22])) build];
  
#line 69
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(publicContext)) updateWithByteArray:prehashPrefix withInt:0 withInt:((IOSByteArray *) nil_chk(prehashPrefix))->size_];
  
#line 71
  id<OrgBouncycastleCryptoDigest> ctx = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([parameter getDigestOID]);
  
#line 73
  IOSByteArray *buf = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) bytesWithByteArray:
#line 74
  I])) u32strWithInt:
#line 75
  q])) padUntilWithInt:
#line 76
  0 withInt:23 + [((id<OrgBouncycastleCryptoDigest>) nil_chk(ctx)) getDigestSize]])) build];
  
#line 80
  OrgBouncycastlePqcCryptoLmsSeedDerive *derive = new_OrgBouncycastlePqcCryptoLmsSeedDerive_initPackagePrivateWithByteArray_withByteArray_withOrgBouncycastleCryptoDigest_(I, masterSecret, OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([parameter getDigestOID]));
  [derive setQWithInt:q];
  [derive setJWithInt:0];
  
#line 84
  jint p = [parameter getP];
  jint n = [parameter getN];
  jint twoToWminus1 = (JreLShift32(1, [parameter getW])) - 1;
  
#line 89
  for (jint i = 0; i < p; i++) {
    
#line 91
    [derive deriveSeedWithByteArray:buf withBoolean:i < p - 1 withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV];
    OrgBouncycastleUtilPack_shortToBigEndianWithShort_withByteArray_withInt_((jshort) i, buf, OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_K);
    for (jint j = 0; j < twoToWminus1; j++) {
      
#line 95
      *IOSByteArray_GetRef(nil_chk(buf), OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_J) = (jbyte) j;
      [ctx updateWithByteArray:buf withInt:0 withInt:buf->size_];
      [ctx doFinalWithByteArray:buf withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV];
    }
    [publicContext updateWithByteArray:buf withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV withInt:n];
  }
  
#line 102
  IOSByteArray *K = [IOSByteArray newArrayWithLength:[publicContext getDigestSize]];
  [publicContext doFinalWithByteArray:K withInt:0];
  
#line 105
  return K;
}


#line 109
OrgBouncycastlePqcCryptoLmsLMOtsSignature *OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMSigParameters_withOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withByteArray2_withByteArray_withBoolean_(OrgBouncycastlePqcCryptoLmsLMSigParameters *sigParams, OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *privateKey, IOSObjectArray *path, IOSByteArray *message, jboolean preHashed) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  
#line 115
  IOSByteArray *C;
  IOSByteArray *Q = [IOSByteArray newArrayWithLength:OrgBouncycastlePqcCryptoLmsLM_OTS_MAX_HASH + 2];
  
#line 118
  if (!preHashed) {
    
#line 120
    OrgBouncycastlePqcCryptoLmsLMSContext *qCtx = [((OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *) nil_chk(privateKey)) getSignatureContextWithOrgBouncycastlePqcCryptoLmsLMSigParameters:sigParams withByteArray2:path];
    
#line 122
    OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withInt_withInt_withOrgBouncycastleCryptoDigest_(message, 0, ((IOSByteArray *) nil_chk(message))->size_, qCtx);
    
#line 124
    C = [((OrgBouncycastlePqcCryptoLmsLMSContext *) nil_chk(qCtx)) getC];
    Q = [qCtx getQ];
  }
  else {
    
#line 129
    C = [IOSByteArray newArrayWithLength:OrgBouncycastlePqcCryptoLmsLM_OTS_SEED_LEN];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(message, 0, Q, 0, [((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *) nil_chk(privateKey)) getParameter])) getN]);
  }
  
#line 133
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withByteArray_withByteArray_(privateKey, Q, C);
}


#line 136
OrgBouncycastlePqcCryptoLmsLMOtsSignature *OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_generate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPrivateKey_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *privateKey, IOSByteArray *Q, IOSByteArray *C) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter = [((OrgBouncycastlePqcCryptoLmsLMOtsPrivateKey *) nil_chk(privateKey)) getParameter];
  
#line 140
  jint n = [((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameter)) getN];
  jint p = [parameter getP];
  jint w = [parameter getW];
  
#line 144
  IOSByteArray *sigComposer = [IOSByteArray newArrayWithLength:p * n];
  
#line 146
  id<OrgBouncycastleCryptoDigest> ctx = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([parameter getDigestOID]);
  
#line 148
  OrgBouncycastlePqcCryptoLmsSeedDerive *derive = [privateKey getDerivationFunction];
  
#line 150
  jint cs = OrgBouncycastlePqcCryptoLmsLM_OTS_cksmWithByteArray_withInt_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_(Q, n, parameter);
  *IOSByteArray_GetRef(nil_chk(Q), n) = (jbyte) ((JreURShift32(cs, 8)) & (jint) 0xFF);
  *IOSByteArray_GetRef(Q, n + 1) = (jbyte) cs;
  
#line 154
  IOSByteArray *tmp = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) bytesWithByteArray:[privateKey getI]])) u32strWithInt:[privateKey getQ]])) padUntilWithInt:0 withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV + n])) build];
  
#line 156
  [((OrgBouncycastlePqcCryptoLmsSeedDerive *) nil_chk(derive)) setJWithInt:0];
  for (jint i = 0; i < p; i++) {
    
#line 159
    OrgBouncycastleUtilPack_shortToBigEndianWithShort_withByteArray_withInt_((jshort) i, tmp, OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_K);
    [derive deriveSeedWithByteArray:tmp withBoolean:i < p - 1 withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV];
    jint a = OrgBouncycastlePqcCryptoLmsLM_OTS_coefWithByteArray_withInt_withInt_(Q, i, w);
    for (jint j = 0; j < a; j++) {
      
#line 164
      *IOSByteArray_GetRef(nil_chk(tmp), OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_J) = (jbyte) j;
      [((id<OrgBouncycastleCryptoDigest>) nil_chk(ctx)) updateWithByteArray:tmp withInt:0 withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV + n];
      [ctx doFinalWithByteArray:tmp withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV];
    }
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(tmp, OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV, sigComposer, n * i, n);
  }
  
#line 171
  return new_OrgBouncycastlePqcCryptoLmsLMOtsSignature_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withByteArray_(parameter, C, sigComposer);
}


#line 174
jboolean OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signatureWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withOrgBouncycastlePqcCryptoLmsLMOtsSignature_withByteArray_withBoolean_(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, OrgBouncycastlePqcCryptoLmsLMOtsSignature *signature, IOSByteArray *message, jboolean prehashed) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  
#line 177
  if (![((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMOtsSignature *) nil_chk(signature)) getType])) isEqual:[((OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *) nil_chk(publicKey)) getParameter]]) {
    
#line 179
    @throw new_OrgBouncycastlePqcCryptoLmsLMSException_initWithNSString_(@"public key and signature ots types do not match");
  }
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withOrgBouncycastlePqcCryptoLmsLMOtsSignature_withByteArray_(publicKey, signature, message), [publicKey getK]);
}


#line 184
IOSByteArray *OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withOrgBouncycastlePqcCryptoLmsLMOtsSignature_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey, OrgBouncycastlePqcCryptoLmsLMOtsSignature *signature, IOSByteArray *message) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  OrgBouncycastlePqcCryptoLmsLMSContext *ctx = [((OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *) nil_chk(publicKey)) createOtsContextWithOrgBouncycastlePqcCryptoLmsLMOtsSignature:signature];
  
#line 188
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_(message, ctx);
  
#line 190
  return OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMSContext_(ctx);
}


#line 193
IOSByteArray *OrgBouncycastlePqcCryptoLmsLM_OTS_lm_ots_validate_signature_calculateWithOrgBouncycastlePqcCryptoLmsLMSContext_(OrgBouncycastlePqcCryptoLmsLMSContext *context) {
  OrgBouncycastlePqcCryptoLmsLM_OTS_initialize();
  OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *publicKey = [((OrgBouncycastlePqcCryptoLmsLMSContext *) nil_chk(context)) getPublicKey];
  OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter = [((OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *) nil_chk(publicKey)) getParameter];
  id sig = [context getSignature];
  OrgBouncycastlePqcCryptoLmsLMOtsSignature *signature;
  if ([sig isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSSignature class]]) {
    
#line 201
    signature = [((OrgBouncycastlePqcCryptoLmsLMSSignature *) nil_chk(((OrgBouncycastlePqcCryptoLmsLMSSignature *) sig))) getOtsSignature];
  }
  else {
    
#line 205
    signature = (OrgBouncycastlePqcCryptoLmsLMOtsSignature *) cast_chk(sig, [OrgBouncycastlePqcCryptoLmsLMOtsSignature class]);
  }
  
#line 208
  jint n = [((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameter)) getN];
  jint w = [parameter getW];
  jint p = [parameter getP];
  IOSByteArray *Q = [context getQ];
  
#line 213
  jint cs = OrgBouncycastlePqcCryptoLmsLM_OTS_cksmWithByteArray_withInt_withOrgBouncycastlePqcCryptoLmsLMOtsParameters_(Q, n, parameter);
  *IOSByteArray_GetRef(nil_chk(Q), n) = (jbyte) ((JreURShift32(cs, 8)) & (jint) 0xFF);
  *IOSByteArray_GetRef(Q, n + 1) = (jbyte) cs;
  
#line 217
  IOSByteArray *I = [publicKey getI];
  jint q = [publicKey getQ];
  
#line 220
  id<OrgBouncycastleCryptoDigest> finalContext = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([parameter getDigestOID]);
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_(I, finalContext);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u32strWithInt_withOrgBouncycastleCryptoDigest_(q, finalContext);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u16strWithShort_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLM_OTS_D_PBLC, finalContext);
  
#line 225
  IOSByteArray *tmp = [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) bytesWithByteArray:
#line 226
  I])) u32strWithInt:
#line 227
  q])) padUntilWithInt:
#line 228
  0 withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV + n])) build];
  
#line 230
  jint max_digit = (JreLShift32(1, w)) - 1;
  
#line 232
  IOSByteArray *y = [((OrgBouncycastlePqcCryptoLmsLMOtsSignature *) nil_chk(signature)) getY];
  
#line 234
  id<OrgBouncycastleCryptoDigest> ctx = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([parameter getDigestOID]);
  for (jint i = 0; i < p; i++) {
    
#line 237
    OrgBouncycastleUtilPack_shortToBigEndianWithShort_withByteArray_withInt_((jshort) i, tmp, OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_K);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(y, i * n, tmp, OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV, n);
    jint a = OrgBouncycastlePqcCryptoLmsLM_OTS_coefWithByteArray_withInt_withInt_(Q, i, w);
    
#line 241
    for (jint j = a; j < max_digit; j++) {
      
#line 243
      *IOSByteArray_GetRef(nil_chk(tmp), OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_J) = (jbyte) j;
      [((id<OrgBouncycastleCryptoDigest>) nil_chk(ctx)) updateWithByteArray:tmp withInt:0 withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV + n];
      [ctx doFinalWithByteArray:tmp withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV];
    }
    
#line 248
    [((id<OrgBouncycastleCryptoDigest>) nil_chk(finalContext)) updateWithByteArray:tmp withInt:OrgBouncycastlePqcCryptoLmsLM_OTS_ITER_PREV withInt:n];
  }
  
#line 251
  IOSByteArray *K = [IOSByteArray newArrayWithLength:n];
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(finalContext)) doFinalWithByteArray:K withInt:0];
  
#line 254
  return K;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLM_OTS)

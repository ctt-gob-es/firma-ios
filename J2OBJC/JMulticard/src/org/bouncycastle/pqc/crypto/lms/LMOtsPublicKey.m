//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/DataInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Arrays.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/pqc/crypto/lms/Composer.h"
#include "org/bouncycastle/pqc/crypto/lms/DigestUtil.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey.h"
#include "org/bouncycastle/pqc/crypto/lms/LMOtsSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSContext.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSSignature.h"
#include "org/bouncycastle/pqc/crypto/lms/LM_OTS.h"
#include "org/bouncycastle/pqc/crypto/lms/LmsUtils.h"
#include "org/bouncycastle/util/io/Streams.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoLmsLMOtsPublicKey () {
 @public
  OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter_;
  IOSByteArray *I_;
  jint q_;
  IOSByteArray *K_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey, parameter_, OrgBouncycastlePqcCryptoLmsLMOtsParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey, I_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey, K_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMOtsPublicKey.java"


#line 15
@implementation OrgBouncycastlePqcCryptoLmsLMOtsPublicKey


#line 24
- (instancetype)initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters:(OrgBouncycastlePqcCryptoLmsLMOtsParameters *)parameter
                                                                   withByteArray:(IOSByteArray *)i
                                                                         withInt:(jint)q
                                                                   withByteArray:(IOSByteArray *)k {
  OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(self, parameter, i, q, k);
  return self;
}

+ (OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *)getInstanceWithId:(id)src {
  return OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_getInstanceWithId_(src);
}


#line 73
- (OrgBouncycastlePqcCryptoLmsLMOtsParameters *)getParameter {
  
#line 75
  return parameter_;
}


#line 78
- (IOSByteArray *)getI {
  
#line 80
  return I_;
}


#line 83
- (jint)getQ {
  
#line 85
  return q_;
}


#line 88
- (IOSByteArray *)getK {
  
#line 90
  return K_;
}


#line 93
- (jboolean)isEqual:(id)o {
  
#line 96
  if (JreObjectEqualsEquals(self, o)) {
    
#line 98
    return true;
  }
  if (o == nil || !JreObjectEqualsEquals([self java_getClass], [o java_getClass])) {
    
#line 102
    return false;
  }
  
#line 105
  OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *that = (OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *) cast_chk(o, [OrgBouncycastlePqcCryptoLmsLMOtsPublicKey class]);
  
#line 107
  if (q_ != that->q_) {
    
#line 109
    return false;
  }
  if (parameter_ != nil ? ![parameter_ isEqual:that->parameter_] : that->parameter_ != nil) {
    
#line 113
    return false;
  }
  if (!JavaUtilArrays_equalsWithByteArray_withByteArray_(I_, that->I_)) {
    
#line 117
    return false;
  }
  return JavaUtilArrays_equalsWithByteArray_withByteArray_(K_, that->K_);
}


#line 122
- (NSUInteger)hash {
  
#line 125
  jint result = parameter_ != nil ? ((jint) [parameter_ hash]) : 0;
  result = 31 * result + JavaUtilArrays_hashCodeWithByteArray_(I_);
  result = 31 * result + q_;
  result = 31 * result + JavaUtilArrays_hashCodeWithByteArray_(K_);
  return result;
}

- (IOSByteArray *)getEncoded {
  
#line 136
  return [((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk([((OrgBouncycastlePqcCryptoLmsComposer *) nil_chk(OrgBouncycastlePqcCryptoLmsComposer_compose())) u32strWithInt:
#line 137
  [((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameter_)) getType]])) bytesWithByteArray:
#line 138
  I_])) u32strWithInt:
#line 139
  q_])) bytesWithByteArray:
#line 140
  K_])) build];
}


#line 143
- (OrgBouncycastlePqcCryptoLmsLMSContext *)createOtsContextWithOrgBouncycastlePqcCryptoLmsLMOtsSignature:(OrgBouncycastlePqcCryptoLmsLMOtsSignature *)signature {
  
#line 145
  id<OrgBouncycastleCryptoDigest> ctx = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameter_)) getDigestOID]);
  
#line 147
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_(I_, ctx);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u32strWithInt_withOrgBouncycastleCryptoDigest_(q_, ctx);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u16strWithShort_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLM_OTS_D_MESG, ctx);
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_([((OrgBouncycastlePqcCryptoLmsLMOtsSignature *) nil_chk(signature)) getC], ctx);
  
#line 152
  return new_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(self, signature, ctx);
}


#line 155
- (OrgBouncycastlePqcCryptoLmsLMSContext *)createOtsContextWithOrgBouncycastlePqcCryptoLmsLMSSignature:(OrgBouncycastlePqcCryptoLmsLMSSignature *)signature {
  
#line 157
  id<OrgBouncycastleCryptoDigest> ctx = OrgBouncycastlePqcCryptoLmsDigestUtil_getDigestWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameter_)) getDigestOID]);
  
#line 159
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_(I_, ctx);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u32strWithInt_withOrgBouncycastleCryptoDigest_(q_, ctx);
  OrgBouncycastlePqcCryptoLmsLmsUtils_u16strWithShort_withOrgBouncycastleCryptoDigest_(OrgBouncycastlePqcCryptoLmsLM_OTS_D_MESG, ctx);
  OrgBouncycastlePqcCryptoLmsLmsUtils_byteArrayWithByteArray_withOrgBouncycastleCryptoDigest_([((OrgBouncycastlePqcCryptoLmsLMOtsSignature *) nil_chk([((OrgBouncycastlePqcCryptoLmsLMSSignature *) nil_chk(signature)) getOtsSignature])) getC], ctx);
  
#line 164
  return new_OrgBouncycastlePqcCryptoLmsLMSContext_initWithOrgBouncycastlePqcCryptoLmsLMOtsPublicKey_withId_withOrgBouncycastleCryptoDigest_(self, signature, ctx);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsPublicKey;", 0x9, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSContext;", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoLmsLMSContext;", 0x0, 7, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters:withByteArray:withInt:withByteArray:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(getParameter);
  methods[3].selector = @selector(getI);
  methods[4].selector = @selector(getQ);
  methods[5].selector = @selector(getK);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(getEncoded);
  methods[9].selector = @selector(createOtsContextWithOrgBouncycastlePqcCryptoLmsLMOtsSignature:);
  methods[10].selector = @selector(createOtsContextWithOrgBouncycastlePqcCryptoLmsLMSSignature:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parameter_", "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "I_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "q_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "K_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMOtsParameters;[BI[B", "getInstance", "LNSObject;", "LJavaLangException;", "equals", "hashCode", "LJavaIoIOException;", "createOtsContext", "LOrgBouncycastlePqcCryptoLmsLMOtsSignature;", "LOrgBouncycastlePqcCryptoLmsLMSSignature;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoLmsLMOtsPublicKey = { "LMOtsPublicKey", "org.bouncycastle.pqc.crypto.lms", ptrTable, methods, fields, 7, 0x0, 11, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoLmsLMOtsPublicKey;
}

@end


#line 24
void OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *self, OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter, IOSByteArray *i, jint q, IOSByteArray *k) {
  NSObject_init(self);
  self->parameter_ = parameter;
  self->I_ = i;
  self->q_ = q;
  self->K_ = k;
}


#line 24
OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *new_OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter, IOSByteArray *i, jint q, IOSByteArray *k) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey, initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_, parameter, i, q, k)
}


#line 24
OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *create_OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter, IOSByteArray *i, jint q, IOSByteArray *k) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey, initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_, parameter, i, q, k)
}


#line 32
OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_getInstanceWithId_(id src) {
  OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_initialize();
  
#line 35
  if ([src isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMOtsPublicKey class]]) {
    
#line 37
    return (OrgBouncycastlePqcCryptoLmsLMOtsPublicKey *) src;
  }
  else if ([src isKindOfClass:[JavaIoDataInputStream class]]) {
    
#line 41
    OrgBouncycastlePqcCryptoLmsLMOtsParameters *parameter = OrgBouncycastlePqcCryptoLmsLMOtsParameters_getParametersForTypeWithInt_([((JavaIoDataInputStream *) nil_chk(((JavaIoDataInputStream *) src))) readInt]);
    IOSByteArray *I = [IOSByteArray newArrayWithLength:16];
    [((JavaIoDataInputStream *) nil_chk(((JavaIoDataInputStream *) src))) readFullyWithByteArray:I];
    jint q = [((JavaIoDataInputStream *) nil_chk(((JavaIoDataInputStream *) src))) readInt];
    
#line 46
    IOSByteArray *K = [IOSByteArray newArrayWithLength:[((OrgBouncycastlePqcCryptoLmsLMOtsParameters *) nil_chk(parameter)) getN]];
    [((JavaIoDataInputStream *) nil_chk(((JavaIoDataInputStream *) src))) readFullyWithByteArray:K];
    
#line 49
    return new_OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_initPackagePrivateWithOrgBouncycastlePqcCryptoLmsLMOtsParameters_withByteArray_withInt_withByteArray_(parameter, I, q, K);
  }
  else
#line 52
  if ([src isKindOfClass:[IOSByteArray class]]) {
    
#line 54
    JavaIoInputStream *in = nil;
    @try {
      
#line 57
      in = new_JavaIoDataInputStream_initWithJavaIoInputStream_(new_JavaIoByteArrayInputStream_initWithByteArray_((IOSByteArray *) cast_chk(src, [IOSByteArray class])));
      return OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_getInstanceWithId_(in);
    }
    @finally {
      
#line 62
      if (in != nil) [in close];
    }
  }
  else if ([src isKindOfClass:[JavaIoInputStream class]]) {
    
#line 67
    return OrgBouncycastlePqcCryptoLmsLMOtsPublicKey_getInstanceWithId_(OrgBouncycastleUtilIoStreams_readAllWithJavaIoInputStream_((JavaIoInputStream *) src));
  }
  
#line 70
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"cannot parse ", src));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoLmsLMOtsPublicKey)

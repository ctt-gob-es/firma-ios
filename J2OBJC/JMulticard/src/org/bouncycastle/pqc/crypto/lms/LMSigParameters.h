//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/lms/LMSigParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSigParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoLmsLMSigParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSigParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSigParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoLmsLMSigParameters

#if !defined (OrgBouncycastlePqcCryptoLmsLMSigParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSigParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoLmsLMSigParameters))
#define OrgBouncycastlePqcCryptoLmsLMSigParameters_

@class OrgBouncycastleAsn1ASN1ObjectIdentifier;

@interface OrgBouncycastlePqcCryptoLmsLMSigParameters : NSObject

#pragma mark Public

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getDigestOID;

- (jint)getH;

- (jint)getM;

- (jint)getType;

#pragma mark Protected

- (instancetype)initWithInt:(jint)type
                    withInt:(jint)m
                    withInt:(jint)h
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestOid;

#pragma mark Package-Private

+ (OrgBouncycastlePqcCryptoLmsLMSigParameters *)getParametersForTypeWithInt:(jint)type;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastlePqcCryptoLmsLMSigParameters)

inline OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_get_lms_sha256_n32_h5(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_lms_sha256_n32_h5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMSigParameters, lms_sha256_n32_h5, OrgBouncycastlePqcCryptoLmsLMSigParameters *)

inline OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_get_lms_sha256_n32_h10(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_lms_sha256_n32_h10;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMSigParameters, lms_sha256_n32_h10, OrgBouncycastlePqcCryptoLmsLMSigParameters *)

inline OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_get_lms_sha256_n32_h15(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_lms_sha256_n32_h15;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMSigParameters, lms_sha256_n32_h15, OrgBouncycastlePqcCryptoLmsLMSigParameters *)

inline OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_get_lms_sha256_n32_h20(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_lms_sha256_n32_h20;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMSigParameters, lms_sha256_n32_h20, OrgBouncycastlePqcCryptoLmsLMSigParameters *)

inline OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_get_lms_sha256_n32_h25(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_lms_sha256_n32_h25;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoLmsLMSigParameters, lms_sha256_n32_h25, OrgBouncycastlePqcCryptoLmsLMSigParameters *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoLmsLMSigParameters_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastlePqcCryptoLmsLMSigParameters *self, jint type, jint m, jint h, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestOid);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *new_OrgBouncycastlePqcCryptoLmsLMSigParameters_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(jint type, jint m, jint h, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestOid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *create_OrgBouncycastlePqcCryptoLmsLMSigParameters_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(jint type, jint m, jint h, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestOid);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoLmsLMSigParameters *OrgBouncycastlePqcCryptoLmsLMSigParameters_getParametersForTypeWithInt_(jint type);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoLmsLMSigParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoLmsLMSigParameters")

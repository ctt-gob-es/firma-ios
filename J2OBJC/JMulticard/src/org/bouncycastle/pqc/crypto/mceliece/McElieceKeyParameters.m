//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/mceliece/McElieceParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters () {
 @public
  OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters, params_, OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters.java"


#line 6
@implementation OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters


#line 11
- (instancetype)initWithBoolean:(jboolean)isPrivate
withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters:(OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)params {
  OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(self, isPrivate, params);
  return self;
}


#line 20
- (OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)getParameters {
  
#line 22
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcCryptoMcelieceMcElieceParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters:);
  methods[1].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "params_", "LOrgBouncycastlePqcCryptoMcelieceMcElieceParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ZLOrgBouncycastlePqcCryptoMcelieceMcElieceParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters = { "McElieceKeyParameters", "org.bouncycastle.pqc.crypto.mceliece", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters;
}

@end


#line 11
void OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters *self, jboolean isPrivate, OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params) {
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter_initWithBoolean_(self,
#line 15
  isPrivate);
  self->params_ = params;
}


#line 11
OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters *new_OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(jboolean isPrivate, OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters, initWithBoolean_withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_, isPrivate, params)
}


#line 11
OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters *create_OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_(jboolean isPrivate, OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *params) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters, initWithBoolean_withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters_, isPrivate, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters)

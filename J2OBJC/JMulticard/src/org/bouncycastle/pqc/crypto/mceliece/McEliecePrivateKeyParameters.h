//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/mceliece/McEliecePrivateKeyParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters

#if !defined (OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters || defined(INCLUDE_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters))
#define OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_

#define RESTRICT_OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters 1
#define INCLUDE_OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters 1
#include "org/bouncycastle/pqc/crypto/mceliece/McElieceKeyParameters.h"

@class IOSByteArray;
@class IOSObjectArray;
@class OrgBouncycastlePqcCryptoMcelieceMcElieceParameters;
@class OrgBouncycastlePqcMathLinearalgebraGF2Matrix;
@class OrgBouncycastlePqcMathLinearalgebraGF2mField;
@class OrgBouncycastlePqcMathLinearalgebraPermutation;
@class OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;

@interface OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters : OrgBouncycastlePqcCryptoMcelieceMcElieceKeyParameters

#pragma mark Public

/*!
 @brief Constructor.
 @param n the length of the code
 @param k the dimension of the code
 @param encField the encoded field polynomial defining the finite field                      
  <tt> GF(2 <sup> m </sup> ) </tt>
 @param encGoppaPoly the encoded irreducible Goppa polynomial
 @param encSInv the encoded matrix  <tt> S <sup> -1 </sup> </tt>
 @param encP1 the encoded permutation used to generate the systematic                      check matrix
 @param encP2 the encoded permutation used to compute the public                      generator matrix
 @param encH the encoded canonical check matrix
 @param encQInv the encoded matrix used to compute square roots in                      
  <tt> (GF(2 <sup> m </sup> )) <sup> t </sup> </tt>
 */
- (instancetype)initWithInt:(jint)n
                    withInt:(jint)k
              withByteArray:(IOSByteArray *)encField
              withByteArray:(IOSByteArray *)encGoppaPoly
              withByteArray:(IOSByteArray *)encSInv
              withByteArray:(IOSByteArray *)encP1
              withByteArray:(IOSByteArray *)encP2
              withByteArray:(IOSByteArray *)encH
             withByteArray2:(IOSObjectArray *)encQInv;

/*!
 @brief Constructor.
 @param n the length of the code
 @param k the dimension of the code
 @param field the field polynomial defining the finite field                   
  <tt> GF(2 <sup> m </sup> ) </tt>
 @param gp the irreducible Goppa polynomial
 @param p1 the permutation used to generate the systematic check                   matrix
 @param p2 the permutation used to compute the public generator                   matrix
 @param sInv the matrix  <tt> S <sup> -1 </sup> </tt>
 */
- (instancetype)initWithInt:(jint)n
                    withInt:(jint)k
withOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
withOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)gp
withOrgBouncycastlePqcMathLinearalgebraPermutation:(OrgBouncycastlePqcMathLinearalgebraPermutation *)p1
withOrgBouncycastlePqcMathLinearalgebraPermutation:(OrgBouncycastlePqcMathLinearalgebraPermutation *)p2
withOrgBouncycastlePqcMathLinearalgebraGF2Matrix:(OrgBouncycastlePqcMathLinearalgebraGF2Matrix *)sInv;

/*!
 @return the finite field <tt>GF(2<sup>m</sup>)</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2mField *)getField;

/*!
 @return the irreducible Goppa polynomial
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)getGoppaPoly;

/*!
 @return the canonical check matrix H
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getH;

/*!
 @return the dimension of the code
 */
- (jint)getK;

/*!
 @return the length of the code
 */
- (jint)getN;

/*!
 @return the permutation used to generate the systematic check matrix
 */
- (OrgBouncycastlePqcMathLinearalgebraPermutation *)getP1;

/*!
 @return the permutation used to compute the public generator matrix
 */
- (OrgBouncycastlePqcMathLinearalgebraPermutation *)getP2;

/*!
 @return the matrix used to compute square roots in
          <tt>(GF(2<sup>m</sup>))<sup>t</sup></tt>
 */
- (IOSObjectArray *)getQInv;

/*!
 @return the k x k random binary non-singular matrix S^-1
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getSInv;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0
withOrgBouncycastlePqcCryptoMcelieceMcElieceParameters:(OrgBouncycastlePqcCryptoMcelieceMcElieceParameters *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_initWithInt_withInt_withOrgBouncycastlePqcMathLinearalgebraGF2mField_withOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_withOrgBouncycastlePqcMathLinearalgebraPermutation_withOrgBouncycastlePqcMathLinearalgebraPermutation_withOrgBouncycastlePqcMathLinearalgebraGF2Matrix_(OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *self, jint n, jint k, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *gp, OrgBouncycastlePqcMathLinearalgebraPermutation *p1, OrgBouncycastlePqcMathLinearalgebraPermutation *p2, OrgBouncycastlePqcMathLinearalgebraGF2Matrix *sInv);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *new_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_initWithInt_withInt_withOrgBouncycastlePqcMathLinearalgebraGF2mField_withOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_withOrgBouncycastlePqcMathLinearalgebraPermutation_withOrgBouncycastlePqcMathLinearalgebraPermutation_withOrgBouncycastlePqcMathLinearalgebraGF2Matrix_(jint n, jint k, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *gp, OrgBouncycastlePqcMathLinearalgebraPermutation *p1, OrgBouncycastlePqcMathLinearalgebraPermutation *p2, OrgBouncycastlePqcMathLinearalgebraGF2Matrix *sInv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *create_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_initWithInt_withInt_withOrgBouncycastlePqcMathLinearalgebraGF2mField_withOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_withOrgBouncycastlePqcMathLinearalgebraPermutation_withOrgBouncycastlePqcMathLinearalgebraPermutation_withOrgBouncycastlePqcMathLinearalgebraGF2Matrix_(jint n, jint k, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *gp, OrgBouncycastlePqcMathLinearalgebraPermutation *p1, OrgBouncycastlePqcMathLinearalgebraPermutation *p2, OrgBouncycastlePqcMathLinearalgebraGF2Matrix *sInv);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_initWithInt_withInt_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray2_(OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *self, jint n, jint k, IOSByteArray *encField, IOSByteArray *encGoppaPoly, IOSByteArray *encSInv, IOSByteArray *encP1, IOSByteArray *encP2, IOSByteArray *encH, IOSObjectArray *encQInv);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *new_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_initWithInt_withInt_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray2_(jint n, jint k, IOSByteArray *encField, IOSByteArray *encGoppaPoly, IOSByteArray *encSInv, IOSByteArray *encP1, IOSByteArray *encP2, IOSByteArray *encH, IOSObjectArray *encQInv) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters *create_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters_initWithInt_withInt_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray2_(jint n, jint k, IOSByteArray *encField, IOSByteArray *encGoppaPoly, IOSByteArray *encSInv, IOSByteArray *encP1, IOSByteArray *encP2, IOSByteArray *encH, IOSObjectArray *encQInv);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcEliecePrivateKeyParameters")

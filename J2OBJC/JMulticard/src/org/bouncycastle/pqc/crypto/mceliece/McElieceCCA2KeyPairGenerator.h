//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/mceliece/McElieceCCA2KeyPairGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator

#if !defined (OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator || defined(INCLUDE_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator))
#define OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_

#define RESTRICT_OrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator 1
#define INCLUDE_OrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator 1
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPairGenerator.h"

@class OrgBouncycastleCryptoAsymmetricCipherKeyPair;
@class OrgBouncycastleCryptoKeyGenerationParameters;

/*!
 @brief This class implements key pair generation of the McEliece Public Key
  Cryptosystem (McEliecePKC).
 */
@interface OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator : NSObject < OrgBouncycastleCryptoAsymmetricCipherKeyPairGenerator >

#pragma mark Public

- (instancetype)init;

- (OrgBouncycastleCryptoAsymmetricCipherKeyPair *)generateKeyPair;

- (void)init__WithOrgBouncycastleCryptoKeyGenerationParameters:(OrgBouncycastleCryptoKeyGenerationParameters *)param OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator)

/*!
 @brief The OID of the algorithm.
 */
inline NSString *OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_get_OID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_OID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator, OID, NSString *)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *new_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator *create_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2KeyPairGenerator")

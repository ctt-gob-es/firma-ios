//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/CMCEEngine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceCMCEEngine")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoCmceCMCEEngine
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceCMCEEngine 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceCMCEEngine 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoCmceCMCEEngine

#if !defined (OrgBouncycastlePqcCryptoCmceCMCEEngine_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceCMCEEngine || defined(INCLUDE_OrgBouncycastlePqcCryptoCmceCMCEEngine))
#define OrgBouncycastlePqcCryptoCmceCMCEEngine_

@class IOSByteArray;
@class IOSIntArray;
@class IOSShortArray;
@class JavaSecuritySecureRandom;

@interface OrgBouncycastlePqcCryptoCmceCMCEEngine : NSObject

#pragma mark Public

- (instancetype)initPackagePrivateWithInt:(jint)m
                                  withInt:(jint)n
                                  withInt:(jint)t
                             withIntArray:(IOSIntArray *)p
                              withBoolean:(jboolean)usePivots
                                  withInt:(jint)defaultKeySize;

- (IOSByteArray *)decompress_private_keyWithByteArray:(IOSByteArray *)sk;

- (IOSByteArray *)generate_public_key_from_private_keyWithByteArray:(IOSByteArray *)sk;

- (jint)getCipherTextSize;

- (jint)getCondBytes;

- (jint)getDefaultSessionKeySize;

- (jint)getIrrBytes;

- (jint)getPrivateKeySize;

- (jint)getPublicKeySize;

- (jint)kem_decWithByteArray:(IOSByteArray *)key
               withByteArray:(IOSByteArray *)cipher_text
               withByteArray:(IOSByteArray *)sk;

- (jint)kem_encWithByteArray:(IOSByteArray *)cipher_text
               withByteArray:(IOSByteArray *)key
               withByteArray:(IOSByteArray *)pk
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)kem_keypairWithByteArray:(IOSByteArray *)pk
                   withByteArray:(IOSByteArray *)sk
    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

#pragma mark Package-Private

+ (void)cbrecursionWithByteArray:(IOSByteArray *)outArg
                        withLong:(jlong)pos
                        withLong:(jlong)step
                  withShortArray:(IOSShortArray *)pi
                         withInt:(jint)qIndex
                        withLong:(jlong)w
                        withLong:(jlong)n
                    withIntArray:(IOSIntArray *)temp;

- (jint)check_c_paddingWithByteArray:(IOSByteArray *)c;

- (jint)check_pk_paddingWithByteArray:(IOSByteArray *)pk;

+ (jshort)get_q_shortWithIntArray:(IOSIntArray *)temp
                          withInt:(jint)q_index;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoCmceCMCEEngine)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoCmceCMCEEngine_initPackagePrivateWithInt_withInt_withInt_withIntArray_withBoolean_withInt_(OrgBouncycastlePqcCryptoCmceCMCEEngine *self, jint m, jint n, jint t, IOSIntArray *p, jboolean usePivots, jint defaultKeySize);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoCmceCMCEEngine *new_OrgBouncycastlePqcCryptoCmceCMCEEngine_initPackagePrivateWithInt_withInt_withInt_withIntArray_withBoolean_withInt_(jint m, jint n, jint t, IOSIntArray *p, jboolean usePivots, jint defaultKeySize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoCmceCMCEEngine *create_OrgBouncycastlePqcCryptoCmceCMCEEngine_initPackagePrivateWithInt_withInt_withInt_withIntArray_withBoolean_withInt_(jint m, jint n, jint t, IOSIntArray *p, jboolean usePivots, jint defaultKeySize);

FOUNDATION_EXPORT jshort OrgBouncycastlePqcCryptoCmceCMCEEngine_get_q_shortWithIntArray_withInt_(IOSIntArray *temp, jint q_index);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoCmceCMCEEngine_cbrecursionWithByteArray_withLong_withLong_withShortArray_withInt_withLong_withLong_withIntArray_(IOSByteArray *outArg, jlong pos, jlong step, IOSShortArray *pi, jint qIndex, jlong w, jlong n, IOSIntArray *temp);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoCmceCMCEEngine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceCMCEEngine")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/CMCEPrivateKeyParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEEngine.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEParameters.h"
#include "org/bouncycastle/pqc/crypto/cmce/CMCEPrivateKeyParameters.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/cmce/CMCEPrivateKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters () {
 @public
  IOSByteArray *privateKey_CMCEPrivateKeyParameters_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters, privateKey_CMCEPrivateKeyParameters_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/CMCEPrivateKeyParameters.java"


#line 5
@implementation OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters


#line 11
- (IOSByteArray *)getPrivateKey {
  
#line 13
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey_CMCEPrivateKeyParameters_);
}


#line 16
- (instancetype)initWithOrgBouncycastlePqcCryptoCmceCMCEParameters:(OrgBouncycastlePqcCryptoCmceCMCEParameters *)params
                                                     withByteArray:(IOSByteArray *)privateKey {
  OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_(self, params, privateKey);
  return self;
}


#line 21
- (instancetype)initWithOrgBouncycastlePqcCryptoCmceCMCEParameters:(OrgBouncycastlePqcCryptoCmceCMCEParameters *)params
                                                     withByteArray:(IOSByteArray *)delta
                                                     withByteArray:(IOSByteArray *)C
                                                     withByteArray:(IOSByteArray *)g
                                                     withByteArray:(IOSByteArray *)alpha
                                                     withByteArray:(IOSByteArray *)s {
  OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_(self, params, delta, C, g, alpha, s);
  return self;
}


#line 39
- (IOSByteArray *)reconstructPublicKey {
  
#line 41
  OrgBouncycastlePqcCryptoCmceCMCEEngine *engine = [((OrgBouncycastlePqcCryptoCmceCMCEParameters *) nil_chk([self getParameters])) getEngine];
  IOSByteArray *pk = [IOSByteArray newArrayWithLength:[((OrgBouncycastlePqcCryptoCmceCMCEEngine *) nil_chk(engine)) getPublicKeySize]];
  (void) [engine generate_public_key_from_private_keyWithByteArray:privateKey_CMCEPrivateKeyParameters_];
  return pk;
}


#line 47
- (IOSByteArray *)getEncoded {
  
#line 49
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey_CMCEPrivateKeyParameters_);
}


#line 52
- (IOSByteArray *)getDelta {
  
#line 54
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(privateKey_CMCEPrivateKeyParameters_, 0, 32);
}


#line 57
- (IOSByteArray *)getC {
  
#line 59
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(privateKey_CMCEPrivateKeyParameters_, 32, 32 + 8);
}


#line 62
- (IOSByteArray *)getG {
  
#line 64
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(privateKey_CMCEPrivateKeyParameters_, 40, 40 + [((OrgBouncycastlePqcCryptoCmceCMCEParameters *) nil_chk([self getParameters])) getT] * 2);
}


#line 67
- (IOSByteArray *)getAlpha {
  
#line 69
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(privateKey_CMCEPrivateKeyParameters_, 40 + [((OrgBouncycastlePqcCryptoCmceCMCEParameters *) nil_chk([self getParameters])) getT] * 2, ((IOSByteArray *) nil_chk(privateKey_CMCEPrivateKeyParameters_))->size_ - 32);
}


#line 72
- (IOSByteArray *)getS {
  
#line 74
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(privateKey_CMCEPrivateKeyParameters_, ((IOSByteArray *) nil_chk(privateKey_CMCEPrivateKeyParameters_))->size_ - 32, privateKey_CMCEPrivateKeyParameters_->size_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getPrivateKey);
  methods[1].selector = @selector(initWithOrgBouncycastlePqcCryptoCmceCMCEParameters:withByteArray:);
  methods[2].selector = @selector(initWithOrgBouncycastlePqcCryptoCmceCMCEParameters:withByteArray:withByteArray:withByteArray:withByteArray:withByteArray:);
  methods[3].selector = @selector(reconstructPublicKey);
  methods[4].selector = @selector(getEncoded);
  methods[5].selector = @selector(getDelta);
  methods[6].selector = @selector(getC);
  methods[7].selector = @selector(getG);
  methods[8].selector = @selector(getAlpha);
  methods[9].selector = @selector(getS);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "privateKey_CMCEPrivateKeyParameters_", "[B", .constantValue.asLong = 0, 0x12, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoCmceCMCEParameters;[B", "LOrgBouncycastlePqcCryptoCmceCMCEParameters;[B[B[B[B[B", "privateKey" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters = { "CMCEPrivateKeyParameters", "org.bouncycastle.pqc.crypto.cmce", ptrTable, methods, fields, 7, 0x1, 10, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters;
}

@end


#line 16
void OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *self, OrgBouncycastlePqcCryptoCmceCMCEParameters *params, IOSByteArray *privateKey) {
  OrgBouncycastlePqcCryptoCmceCMCEKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoCmceCMCEParameters_(self,
#line 18
  true, params);
  self->privateKey_CMCEPrivateKeyParameters_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(privateKey);
}


#line 16
OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *new_OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_(OrgBouncycastlePqcCryptoCmceCMCEParameters *params, IOSByteArray *privateKey) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_, params, privateKey)
}


#line 16
OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *create_OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_(OrgBouncycastlePqcCryptoCmceCMCEParameters *params, IOSByteArray *privateKey) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_, params, privateKey)
}


#line 21
void OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *self, OrgBouncycastlePqcCryptoCmceCMCEParameters *params, IOSByteArray *delta, IOSByteArray *C, IOSByteArray *g, IOSByteArray *alpha, IOSByteArray *s) {
  OrgBouncycastlePqcCryptoCmceCMCEKeyParameters_initWithBoolean_withOrgBouncycastlePqcCryptoCmceCMCEParameters_(self,
#line 24
  true, params);
  jint sk_size = ((IOSByteArray *) nil_chk(delta))->size_ + ((IOSByteArray *) nil_chk(C))->size_ + ((IOSByteArray *) nil_chk(g))->size_ + ((IOSByteArray *) nil_chk(alpha))->size_ + ((IOSByteArray *) nil_chk(s))->size_;
  self->privateKey_CMCEPrivateKeyParameters_ = [IOSByteArray newArrayWithLength:sk_size];
  jint offset = 0;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(delta, 0, self->privateKey_CMCEPrivateKeyParameters_, offset, delta->size_);
  offset += delta->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(C, 0, self->privateKey_CMCEPrivateKeyParameters_, offset, C->size_);
  offset += C->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(g, 0, self->privateKey_CMCEPrivateKeyParameters_, offset, g->size_);
  offset += g->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(alpha, 0, self->privateKey_CMCEPrivateKeyParameters_, offset, alpha->size_);
  offset += alpha->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(s, 0, self->privateKey_CMCEPrivateKeyParameters_, offset, s->size_);
}


#line 21
OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *new_OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoCmceCMCEParameters *params, IOSByteArray *delta, IOSByteArray *C, IOSByteArray *g, IOSByteArray *alpha, IOSByteArray *s) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_, params, delta, C, g, alpha, s)
}


#line 21
OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters *create_OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters_initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_(OrgBouncycastlePqcCryptoCmceCMCEParameters *params, IOSByteArray *delta, IOSByteArray *C, IOSByteArray *g, IOSByteArray *alpha, IOSByteArray *s) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters, initWithOrgBouncycastlePqcCryptoCmceCMCEParameters_withByteArray_withByteArray_withByteArray_withByteArray_withByteArray_, params, delta, C, g, alpha, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoCmceCMCEPrivateKeyParameters)

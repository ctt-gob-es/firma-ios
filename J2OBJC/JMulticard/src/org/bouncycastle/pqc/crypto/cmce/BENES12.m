//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/BENES12.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/cmce/BENES.h"
#include "org/bouncycastle/pqc/crypto/cmce/BENES12.h"
#include "org/bouncycastle/pqc/crypto/cmce/Utils.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/cmce/BENES12 must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcCryptoCmceBENES12 ()

- (void)apply_benesWithByteArray:(IOSByteArray *)r
                   withByteArray:(IOSByteArray *)bits
                         withInt:(jint)rev;

@end

__attribute__((unused)) static void OrgBouncycastlePqcCryptoCmceBENES12_apply_benesWithByteArray_withByteArray_withInt_(OrgBouncycastlePqcCryptoCmceBENES12 *self, IOSByteArray *r, IOSByteArray *bits, jint rev);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/BENES12.java"


#line 3
@implementation OrgBouncycastlePqcCryptoCmceBENES12


#line 6
- (instancetype)initPackagePrivateWithInt:(jint)n
                                  withInt:(jint)t
                                  withInt:(jint)m {
  OrgBouncycastlePqcCryptoCmceBENES12_initPackagePrivateWithInt_withInt_withInt_(self, n, t, m);
  return self;
}


#line 12
+ (void)layerBenesWithLongArray:(IOSLongArray *)data
                  withLongArray:(IOSLongArray *)bits
                        withInt:(jint)lgs {
  OrgBouncycastlePqcCryptoCmceBENES12_layerBenesWithLongArray_withLongArray_withInt_(data, bits, lgs);
}


#line 33
- (void)apply_benesWithByteArray:(IOSByteArray *)r
                   withByteArray:(IOSByteArray *)bits
                         withInt:(jint)rev {
  OrgBouncycastlePqcCryptoCmceBENES12_apply_benesWithByteArray_withByteArray_withInt_(self, r, bits, rev);
}


#line 130
- (void)support_genWithShortArray:(IOSShortArray *)s
                    withByteArray:(IOSByteArray *)c {
  
#line 133
  jshort a;
  IOSObjectArray *L = [IOSByteArray newArrayWithDimensions:2 lengths:(jint[]){ GFBITS_, JreIntDiv((JreLShift32(1, GFBITS_)), 8) }];
  
#line 136
  for (jint i = 0; i < GFBITS_; i++) {
    
#line 138
    for (jint j = 0; j < JreIntDiv((JreLShift32(1, GFBITS_)), 8); j++) {
      
#line 140
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(L, i)), j) = 0;
    }
  }
  
#line 144
  for (jint i = 0; i < (JreLShift32(1, GFBITS_)); i++) {
    
#line 146
    a = OrgBouncycastlePqcCryptoCmceUtils_bitrevWithShort_withInt_((jshort) i, GFBITS_);
    
#line 149
    for (jint j = 0; j < GFBITS_; j++) {
      
#line 151
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(L, j)), JreIntDiv(i, 8)) |= JreLShift32(((JreRShift32(a, j)) & 1), (JreIntMod(i, 8)));
    }
  }
  
#line 155
  for (jint j = 0; j < GFBITS_; j++) {
    
#line 157
    OrgBouncycastlePqcCryptoCmceBENES12_apply_benesWithByteArray_withByteArray_withInt_(self, IOSObjectArray_Get(L, j), c, 0);
  }
  
#line 160
  for (jint i = 0; i < SYS_N_; i++) {
    
#line 162
    *IOSShortArray_GetRef(nil_chk(s), i) = 0;
    for (jint j = GFBITS_ - 1; j >= 0; j--) {
      
#line 165
      JreLShiftAssignShort(IOSShortArray_GetRef(s, i), 1);
      *IOSShortArray_GetRef(s, i) |= (JreRShift32(IOSByteArray_Get(nil_chk(IOSObjectArray_Get(L, j)), JreIntDiv(i, 8)), (JreIntMod(i, 8)))) & 1;
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithInt:withInt:withInt:);
  methods[1].selector = @selector(layerBenesWithLongArray:withLongArray:withInt:);
  methods[2].selector = @selector(apply_benesWithByteArray:withByteArray:withInt:);
  methods[3].selector = @selector(support_genWithShortArray:withByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "III", "layerBenes", "[J[JI", "apply_benes", "[B[BI", "support_gen", "[S[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoCmceBENES12 = { "BENES12", "org.bouncycastle.pqc.crypto.cmce", ptrTable, methods, NULL, 7, 0x0, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoCmceBENES12;
}

@end


#line 6
void OrgBouncycastlePqcCryptoCmceBENES12_initPackagePrivateWithInt_withInt_withInt_(OrgBouncycastlePqcCryptoCmceBENES12 *self, jint n, jint t, jint m) {
  OrgBouncycastlePqcCryptoCmceBENES_initPackagePrivateWithInt_withInt_withInt_(self,
#line 8
  n, t, m);
}


#line 6
OrgBouncycastlePqcCryptoCmceBENES12 *new_OrgBouncycastlePqcCryptoCmceBENES12_initPackagePrivateWithInt_withInt_withInt_(jint n, jint t, jint m) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoCmceBENES12, initPackagePrivateWithInt_withInt_withInt_, n, t, m)
}


#line 6
OrgBouncycastlePqcCryptoCmceBENES12 *create_OrgBouncycastlePqcCryptoCmceBENES12_initPackagePrivateWithInt_withInt_withInt_(jint n, jint t, jint m) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoCmceBENES12, initPackagePrivateWithInt_withInt_withInt_, n, t, m)
}


#line 12
void OrgBouncycastlePqcCryptoCmceBENES12_layerBenesWithLongArray_withLongArray_withInt_(IOSLongArray *data, IOSLongArray *bits, jint lgs) {
  OrgBouncycastlePqcCryptoCmceBENES12_initialize();
  jint i;
  
#line 14
  jint j;
  
#line 14
  jint s;
  jint bit_ptr = 0;
  
#line 17
  jlong d;
  
#line 19
  s = JreLShift32(1, lgs);
  
#line 21
  for (i = 0; i < 64; i += s * 2) {
    
#line 23
    for (j = i; j < i + s; j++) {
      
#line 25
      d = (IOSLongArray_Get(nil_chk(data), j + 0) ^ IOSLongArray_Get(data, j + s));
      d &= IOSLongArray_Get(nil_chk(bits), bit_ptr++);
      *IOSLongArray_GetRef(data, j + 0) ^= d;
      *IOSLongArray_GetRef(data, j + s) ^= d;
    }
  }
}


#line 33
void OrgBouncycastlePqcCryptoCmceBENES12_apply_benesWithByteArray_withByteArray_withInt_(OrgBouncycastlePqcCryptoCmceBENES12 *self, IOSByteArray *r, IOSByteArray *bits, jint rev) {
  
#line 35
  jint i;
  
#line 37
  jint cond_ptr;
  jint inc;
  
#line 38
  jint low;
  
#line 40
  IOSLongArray *bs = [IOSLongArray newArrayWithLength:64];
  IOSLongArray *cond = [IOSLongArray newArrayWithLength:64];
  
#line 44
  for (i = 0; i < 64; i++) {
    
#line 47
    *IOSLongArray_GetRef(bs, i) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(r, i * 8);
  }
  
#line 50
  if (rev == 0) {
    
#line 52
    inc = 256;
    cond_ptr = self->SYS_T_ * 2 + 40;
  }
  else {
    
#line 57
    inc = -256;
    cond_ptr = self->SYS_T_ * 2 + 40 + (2 * self->GFBITS_ - 2) * 256;
  }
  
#line 63
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(bs, bs);
  for (low = 0; low <= 5; low++) {
    
#line 66
    for (i = 0; i < 64; i++) {
      
#line 68
      *IOSLongArray_GetRef(cond, i) = OrgBouncycastlePqcCryptoCmceUtils_load4WithByteArray_withInt_(bits, cond_ptr + i * 4);
    }
    
#line 72
    OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(cond, cond);
    OrgBouncycastlePqcCryptoCmceBENES12_layerBenesWithLongArray_withLongArray_withInt_(bs, cond, low);
    
#line 75
    cond_ptr += inc;
  }
  
#line 78
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(bs, bs);
  
#line 80
  for (low = 0; low <= 5; low++) {
    
#line 82
    for (i = 0; i < 32; i++) {
      
#line 84
      *IOSLongArray_GetRef(cond, i) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(bits, cond_ptr + i * 8);
    }
    
#line 87
    OrgBouncycastlePqcCryptoCmceBENES12_layerBenesWithLongArray_withLongArray_withInt_(bs, cond, low);
    cond_ptr += inc;
  }
  for (low = 4; low >= 0; low--) {
    
#line 92
    for (i = 0; i < 32; i++) {
      
#line 94
      *IOSLongArray_GetRef(cond, i) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(bits, cond_ptr + i * 8);
    }
    
#line 98
    OrgBouncycastlePqcCryptoCmceBENES12_layerBenesWithLongArray_withLongArray_withInt_(bs, cond, low);
    cond_ptr += inc;
  }
  
#line 102
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(bs, bs);
  
#line 104
  for (low = 5; low >= 0; low--) {
    
#line 106
    for (i = 0; i < 64; i++) {
      
#line 108
      *IOSLongArray_GetRef(cond, i) = OrgBouncycastlePqcCryptoCmceUtils_load4WithByteArray_withInt_(bits, cond_ptr + i * 4);
    }
    
#line 112
    OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(cond, cond);
    OrgBouncycastlePqcCryptoCmceBENES12_layerBenesWithLongArray_withLongArray_withInt_(bs, cond, low);
    cond_ptr += inc;
  }
  
#line 117
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(bs, bs);
  
#line 120
  for (i = 0; i < 64; i++) {
    
#line 122
    OrgBouncycastlePqcCryptoCmceUtils_store8WithByteArray_withInt_withLong_(r, i * 8, IOSLongArray_Get(bs, i));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoCmceBENES12)

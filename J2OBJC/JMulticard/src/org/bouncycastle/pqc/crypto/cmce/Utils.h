//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/Utils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceUtils")
#ifdef RESTRICT_OrgBouncycastlePqcCryptoCmceUtils
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceUtils 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceUtils 1
#endif
#undef RESTRICT_OrgBouncycastlePqcCryptoCmceUtils

#if !defined (OrgBouncycastlePqcCryptoCmceUtils_) && (INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceUtils || defined(INCLUDE_OrgBouncycastlePqcCryptoCmceUtils))
#define OrgBouncycastlePqcCryptoCmceUtils_

@class IOSByteArray;

@interface OrgBouncycastlePqcCryptoCmceUtils : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

+ (jshort)bitrevWithShort:(jshort)a
                  withInt:(jint)GFBITS;

+ (jint)load4WithByteArray:(IOSByteArray *)inArg
                   withInt:(jint)offset;

+ (jlong)load8WithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)offset;

+ (jshort)load_gfWithByteArray:(IOSByteArray *)src
                       withInt:(jint)offset
                       withInt:(jint)gfmask;

+ (void)store8WithByteArray:(IOSByteArray *)outArg
                    withInt:(jint)offset
                   withLong:(jlong)inArg;

+ (void)store_gfWithByteArray:(IOSByteArray *)dest
                      withInt:(jint)offset
                    withShort:(jshort)a;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcCryptoCmceUtils)

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoCmceUtils_initPackagePrivate(OrgBouncycastlePqcCryptoCmceUtils *self);

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoCmceUtils *new_OrgBouncycastlePqcCryptoCmceUtils_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcCryptoCmceUtils *create_OrgBouncycastlePqcCryptoCmceUtils_initPackagePrivate(void);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoCmceUtils_store_gfWithByteArray_withInt_withShort_(IOSByteArray *dest, jint offset, jshort a);

FOUNDATION_EXPORT jshort OrgBouncycastlePqcCryptoCmceUtils_load_gfWithByteArray_withInt_withInt_(IOSByteArray *src, jint offset, jint gfmask);

FOUNDATION_EXPORT jint OrgBouncycastlePqcCryptoCmceUtils_load4WithByteArray_withInt_(IOSByteArray *inArg, jint offset);

FOUNDATION_EXPORT void OrgBouncycastlePqcCryptoCmceUtils_store8WithByteArray_withInt_withLong_(IOSByteArray *outArg, jint offset, jlong inArg);

FOUNDATION_EXPORT jlong OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(IOSByteArray *inArg, jint offset);

FOUNDATION_EXPORT jshort OrgBouncycastlePqcCryptoCmceUtils_bitrevWithShort_withInt_(jshort a, jint GFBITS);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcCryptoCmceUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcCryptoCmceUtils")

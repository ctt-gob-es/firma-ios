//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/BENES13.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/crypto/cmce/BENES.h"
#include "org/bouncycastle/pqc/crypto/cmce/BENES13.h"
#include "org/bouncycastle/pqc/crypto/cmce/Utils.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/crypto/cmce/BENES13 must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/crypto/cmce/BENES13.java"


#line 3
@implementation OrgBouncycastlePqcCryptoCmceBENES13


#line 6
- (instancetype)initPackagePrivateWithInt:(jint)n
                                  withInt:(jint)t
                                  withInt:(jint)m {
  OrgBouncycastlePqcCryptoCmceBENES13_initPackagePrivateWithInt_withInt_withInt_(self, n, t, m);
  return self;
}


#line 12
+ (void)layer_inWithLongArray:(IOSLongArray *)data
                withLongArray:(IOSLongArray *)bits
                      withInt:(jint)lgs {
  OrgBouncycastlePqcCryptoCmceBENES13_layer_inWithLongArray_withLongArray_withInt_(data, bits, lgs);
}


#line 39
+ (void)layer_exWithLongArray:(IOSLongArray *)data
                withLongArray:(IOSLongArray *)bits
                      withInt:(jint)lgs {
  OrgBouncycastlePqcCryptoCmceBENES13_layer_exWithLongArray_withLongArray_withInt_(data, bits, lgs);
}


#line 65
- (void)apply_benesWithByteArray:(IOSByteArray *)r
                   withByteArray:(IOSByteArray *)bits
                         withInt:(jint)rev {
  
#line 67
  jint i;
  
#line 67
  jint iter;
  
#line 67
  jint inc;
  
#line 69
  jint r_ptr = 0;
  jint bits_ptr = 0;
  
#line 76
  IOSLongArray *r_int_v = [IOSLongArray newArrayWithLength:128];
  IOSLongArray *r_int_h = [IOSLongArray newArrayWithLength:128];
  IOSLongArray *b_int_v = [IOSLongArray newArrayWithLength:64];
  IOSLongArray *b_int_h = [IOSLongArray newArrayWithLength:64];
  
#line 83
  if (rev == 0) {
    
#line 85
    bits_ptr = SYS_T_ * 2 + 40;
    inc = 0;
  }
  else {
    
#line 91
    bits_ptr = SYS_T_ * 2 + 40 + 12288;
    inc = -1024;
  }
  
#line 95
  for (i = 0; i < 64; i++) {
    
#line 97
    *IOSLongArray_GetRef(r_int_v, i + 0) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(r, r_ptr + i * 16 + 0);
    *IOSLongArray_GetRef(r_int_v, i + 64) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(r, r_ptr + i * 16 + 8);
  }
  
#line 101
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_h, r_int_v, 0);
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_h, r_int_v, 64);
  
#line 104
  for (iter = 0; iter <= 6; iter++) {
    
#line 106
    for (i = 0; i < 64; i++) {
      
#line 108
      *IOSLongArray_GetRef(b_int_v, i) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(bits, bits_ptr);
      bits_ptr += 8;
    }
    
#line 112
    bits_ptr += inc;
    
#line 114
    OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(b_int_h, b_int_v);
    
#line 116
    OrgBouncycastlePqcCryptoCmceBENES13_layer_exWithLongArray_withLongArray_withInt_(r_int_h, b_int_h, iter);
  }
  
#line 119
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_v, r_int_h, 0);
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_v, r_int_h, 64);
  
#line 122
  for (iter = 0; iter <= 5; iter++) {
    
#line 124
    for (i = 0; i < 64; i++) {
      
#line 126
      *IOSLongArray_GetRef(b_int_v, i) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(bits, bits_ptr);
      bits_ptr += 8;
    }
    bits_ptr += inc;
    
#line 131
    OrgBouncycastlePqcCryptoCmceBENES13_layer_inWithLongArray_withLongArray_withInt_(r_int_v, b_int_v, iter);
  }
  
#line 134
  for (iter = 4; iter >= 0; iter--) {
    
#line 136
    for (i = 0; i < 64; i++) {
      
#line 138
      *IOSLongArray_GetRef(b_int_v, i) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(bits, bits_ptr);
      bits_ptr += 8;
    }
    bits_ptr += inc;
    
#line 143
    OrgBouncycastlePqcCryptoCmceBENES13_layer_inWithLongArray_withLongArray_withInt_(r_int_v, b_int_v, iter);
  }
  
#line 146
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_h, r_int_v, 0);
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_h, r_int_v, 64);
  
#line 149
  for (iter = 6; iter >= 0; iter--) {
    
#line 151
    for (i = 0; i < 64; i++) {
      
#line 153
      *IOSLongArray_GetRef(b_int_v, i) = OrgBouncycastlePqcCryptoCmceUtils_load8WithByteArray_withInt_(bits, bits_ptr);
      bits_ptr += 8;
    }
    
#line 157
    bits_ptr += inc;
    
#line 159
    OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_(b_int_h, b_int_v);
    
#line 161
    OrgBouncycastlePqcCryptoCmceBENES13_layer_exWithLongArray_withLongArray_withInt_(r_int_h, b_int_h, iter);
  }
  
#line 164
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_v, r_int_h, 0);
  OrgBouncycastlePqcCryptoCmceBENES_transpose_64x64WithLongArray_withLongArray_withInt_(r_int_v, r_int_h, 64);
  
#line 167
  for (i = 0; i < 64; i++) {
    
#line 169
    OrgBouncycastlePqcCryptoCmceUtils_store8WithByteArray_withInt_withLong_(r, r_ptr + i * 16 + 0, IOSLongArray_Get(r_int_v, 0 + i));
    OrgBouncycastlePqcCryptoCmceUtils_store8WithByteArray_withInt_withLong_(r, r_ptr + i * 16 + 8, IOSLongArray_Get(r_int_v, 64 + i));
  }
}


#line 176
- (void)support_genWithShortArray:(IOSShortArray *)s
                    withByteArray:(IOSByteArray *)c {
  
#line 179
  jshort a;
  jint i;
  
#line 180
  jint j;
  IOSObjectArray *L = [IOSByteArray newArrayWithDimensions:2 lengths:(jint[]){ GFBITS_, JreIntDiv((JreLShift32(1, GFBITS_)), 8) }];
  
#line 183
  for (i = 0; i < GFBITS_; i++) {
    
#line 185
    for (j = 0; j < JreIntDiv((JreLShift32(1, GFBITS_)), 8); j++) {
      
#line 187
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(L, i)), j) = 0;
    }
  }
  for (i = 0; i < (JreLShift32(1, GFBITS_)); i++) {
    
#line 192
    a = OrgBouncycastlePqcCryptoCmceUtils_bitrevWithShort_withInt_((jshort) i, GFBITS_);
    
#line 194
    for (j = 0; j < GFBITS_; j++) {
      
#line 196
      *IOSByteArray_GetRef(nil_chk(IOSObjectArray_Get(L, j)), JreIntDiv(i, 8)) |= JreLShift32(((JreRShift32(a, j)) & 1), (JreIntMod(i, 8)));
    }
  }
  
#line 200
  for (j = 0; j < GFBITS_; j++) {
    
#line 202
    [self apply_benesWithByteArray:IOSObjectArray_Get(L, j) withByteArray:c withInt:0];
  }
  for (i = 0; i < SYS_N_; i++) {
    
#line 206
    *IOSShortArray_GetRef(nil_chk(s), i) = 0;
    for (j = GFBITS_ - 1; j >= 0; j--) {
      
#line 209
      JreLShiftAssignShort(IOSShortArray_GetRef(s, i), 1);
      *IOSShortArray_GetRef(s, i) |= (JreRShift32(IOSByteArray_Get(nil_chk(IOSObjectArray_Get(L, j)), JreIntDiv(i, 8)), (JreIntMod(i, 8)))) & 1;
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithInt:withInt:withInt:);
  methods[1].selector = @selector(layer_inWithLongArray:withLongArray:withInt:);
  methods[2].selector = @selector(layer_exWithLongArray:withLongArray:withInt:);
  methods[3].selector = @selector(apply_benesWithByteArray:withByteArray:withInt:);
  methods[4].selector = @selector(support_genWithShortArray:withByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "III", "layer_in", "[J[JI", "layer_ex", "apply_benes", "[B[BI", "support_gen", "[S[B" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcCryptoCmceBENES13 = { "BENES13", "org.bouncycastle.pqc.crypto.cmce", ptrTable, methods, NULL, 7, 0x0, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcCryptoCmceBENES13;
}

@end


#line 6
void OrgBouncycastlePqcCryptoCmceBENES13_initPackagePrivateWithInt_withInt_withInt_(OrgBouncycastlePqcCryptoCmceBENES13 *self, jint n, jint t, jint m) {
  OrgBouncycastlePqcCryptoCmceBENES_initPackagePrivateWithInt_withInt_withInt_(self,
#line 8
  n, t, m);
}


#line 6
OrgBouncycastlePqcCryptoCmceBENES13 *new_OrgBouncycastlePqcCryptoCmceBENES13_initPackagePrivateWithInt_withInt_withInt_(jint n, jint t, jint m) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcCryptoCmceBENES13, initPackagePrivateWithInt_withInt_withInt_, n, t, m)
}


#line 6
OrgBouncycastlePqcCryptoCmceBENES13 *create_OrgBouncycastlePqcCryptoCmceBENES13_initPackagePrivateWithInt_withInt_withInt_(jint n, jint t, jint m) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcCryptoCmceBENES13, initPackagePrivateWithInt_withInt_withInt_, n, t, m)
}


#line 12
void OrgBouncycastlePqcCryptoCmceBENES13_layer_inWithLongArray_withLongArray_withInt_(IOSLongArray *data, IOSLongArray *bits, jint lgs) {
  OrgBouncycastlePqcCryptoCmceBENES13_initialize();
  jint i;
  
#line 14
  jint j;
  
#line 14
  jint s;
  jint bit_ptr = 0;
  jlong d;
  
#line 18
  s = JreLShift32(1, lgs);
  
#line 20
  for (i = 0; i < 64; i += s * 2) {
    
#line 22
    for (j = i; j < i + s; j++) {
      
#line 25
      d = (IOSLongArray_Get(nil_chk(data), j + 0) ^ IOSLongArray_Get(data, j + s));
      d &= IOSLongArray_Get(nil_chk(bits), bit_ptr++);
      *IOSLongArray_GetRef(data, j + 0) ^= d;
      *IOSLongArray_GetRef(data, j + s) ^= d;
      
#line 30
      d = (IOSLongArray_Get(data, 64 + j + 0) ^ IOSLongArray_Get(data, 64 + j + s));
      d &= IOSLongArray_Get(bits, bit_ptr++);
      *IOSLongArray_GetRef(data, 64 + j + 0) ^= d;
      *IOSLongArray_GetRef(data, 64 + j + s) ^= d;
    }
  }
}


#line 39
void OrgBouncycastlePqcCryptoCmceBENES13_layer_exWithLongArray_withLongArray_withInt_(IOSLongArray *data, IOSLongArray *bits, jint lgs) {
  OrgBouncycastlePqcCryptoCmceBENES13_initialize();
  jint i;
  
#line 41
  jint j;
  
#line 41
  jint s;
  jint bit_ptr = 0;
  
#line 44
  jlong d;
  
#line 46
  s = JreLShift32(1, lgs);
  
#line 48
  for (i = 0; i < 128; i += s * 2) {
    
#line 50
    for (j = i; j < i + s; j++) {
      
#line 53
      d = (IOSLongArray_Get(nil_chk(data), j + 0) ^ IOSLongArray_Get(data, j + s));
      d &= IOSLongArray_Get(nil_chk(bits), bit_ptr++);
      *IOSLongArray_GetRef(data, j + 0) ^= d;
      *IOSLongArray_GetRef(data, j + s) ^= d;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcCryptoCmceBENES13)

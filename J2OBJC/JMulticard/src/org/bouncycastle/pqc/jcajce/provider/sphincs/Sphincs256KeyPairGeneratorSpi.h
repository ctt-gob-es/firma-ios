//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincs/Sphincs256KeyPairGeneratorSpi.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi")
#ifdef RESTRICT_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi 1
#endif
#undef RESTRICT_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi

#if !defined (OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi_) && (INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi || defined(INCLUDE_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi))
#define OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi_

#define RESTRICT_JavaSecurityKeyPairGenerator 1
#define INCLUDE_JavaSecurityKeyPairGenerator 1
#include "java/security/KeyPairGenerator.h"

@class JavaSecurityKeyPair;
@class JavaSecuritySecureRandom;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters;
@class OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyPairGenerator;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

@interface OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi : JavaSecurityKeyPairGenerator {
 @public
  OrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest_;
  OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *param_;
  OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyPairGenerator *engine_;
  JavaSecuritySecureRandom *random_;
  jboolean initialised_;
}

#pragma mark Public

- (instancetype)init;

- (JavaSecurityKeyPair *)generateKeyPair;

- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi, treeDigest_, OrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi, param_, OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyGenerationParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi, engine_, OrgBouncycastlePqcCryptoSphincsSPHINCS256KeyPairGenerator *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi, random_, JavaSecuritySecureRandom *)

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi_init(OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi *self);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi *new_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi *create_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyPairGeneratorSpi")

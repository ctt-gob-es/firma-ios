//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcElieceCCA2PrivateKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey")
#ifdef RESTRICT_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey 1
#endif
#undef RESTRICT_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey

#if !defined (OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_) && (INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey || defined(INCLUDE_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey))
#define OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_

#define RESTRICT_JavaSecurityPrivateKey 1
#define INCLUDE_JavaSecurityPrivateKey 1
#include "java/security/PrivateKey.h"

@class IOSByteArray;
@class IOSObjectArray;
@class OrgBouncycastleCryptoParamsAsymmetricKeyParameter;
@class OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters;
@class OrgBouncycastlePqcMathLinearalgebraGF2Matrix;
@class OrgBouncycastlePqcMathLinearalgebraGF2mField;
@class OrgBouncycastlePqcMathLinearalgebraPermutation;
@class OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM;

/*!
 @brief This class implements a McEliece CCA2 private key and is usually instantiated
  by the <code>McElieceCCA2KeyPairGenerator</code> or <code>McElieceCCA2KeyFactorySpi</code>.
 - seealso: McElieceCCA2KeyPairGenerator
 */
@interface OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey : NSObject < JavaSecurityPrivateKey >

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters:(OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *)params;

/*!
 @brief Compare this key with another object.
 @param other the other object
 @return the result of the comparison
 */
- (jboolean)isEqual:(id)other;

/*!
 @brief Return the name of the algorithm.
 @return "McEliece-CCA2"
 */
- (NSString *)getAlgorithm;

/*!
 @brief Return the keyData to encode in the SubjectPublicKeyInfo structure.
 <p>
  The ASN.1 definition of the key structure is 
 @code

    McEliecePrivateKey ::= SEQUENCE {
      m             INTEGER                  -- extension degree of the field
      k             INTEGER                  -- dimension of the code
      field         OCTET STRING             -- field polynomial
      goppaPoly     OCTET STRING             -- irreducible Goppa polynomial
      p             OCTET STRING             -- permutation vector
      matrixH       OCTET STRING             -- canonical check matrix
      sqRootMatrix  SEQUENCE OF OCTET STRING -- square root matrix
    } 
  
@endcode
 @return the keyData to encode in the SubjectPublicKeyInfo structure
 */
- (IOSByteArray *)getEncoded;

/*!
 @return the finite field
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2mField *)getField;

- (NSString *)getFormat;

/*!
 @return the irreducible Goppa polynomial
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)getGoppaPoly;

/*!
 @return the canonical check matrix
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getH;

/*!
 @return the dimension of the code
 */
- (jint)getK;

/*!
 @return the length of the code
 */
- (jint)getN;

/*!
 @return the permutation vector
 */
- (OrgBouncycastlePqcMathLinearalgebraPermutation *)getP;

/*!
 @return the matrix used to compute square roots in <tt>(GF(2^m))^t</tt>
 */
- (IOSObjectArray *)getQInv;

/*!
 @return the degree of the Goppa polynomial (error correcting capability)
 */
- (jint)getT;

/*!
 @return the hash code of this key
 */
- (NSUInteger)hash;

#pragma mark Package-Private

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getKeyParams;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey)

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_initWithOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_(OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *self, OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *params);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *new_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_initWithOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_(OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey *create_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey_initWithOrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters_(OrgBouncycastlePqcCryptoMcelieceMcElieceCCA2PrivateKeyParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceBCMcElieceCCA2PrivateKey")

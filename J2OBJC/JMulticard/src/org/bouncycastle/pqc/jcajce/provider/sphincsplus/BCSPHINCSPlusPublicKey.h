//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPublicKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey")
#ifdef RESTRICT_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey 1
#endif
#undef RESTRICT_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey

#if !defined (OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_) && (INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey || defined(INCLUDE_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey))
#define OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_

#define RESTRICT_JavaSecurityPublicKey 1
#define INCLUDE_JavaSecurityPublicKey 1
#include "java/security/PublicKey.h"

#define RESTRICT_OrgBouncycastlePqcJcajceInterfacesSPHINCSPlusKey 1
#define INCLUDE_OrgBouncycastlePqcJcajceInterfacesSPHINCSPlusKey 1
#include "org/bouncycastle/pqc/jcajce/interfaces/SPHINCSPlusKey.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters;
@class OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec;
@protocol OrgBouncycastleCryptoCipherParameters;

@interface OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey : NSObject < JavaSecurityPublicKey, OrgBouncycastlePqcJcajceInterfacesSPHINCSPlusKey >

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *)params;

- (instancetype)initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo;

/*!
 @brief Compare this SPHINCS-256 public key with another object.
 @param o the other object
 @return the result of the comparison
 */
- (jboolean)isEqual:(id)o;

/*!
 @return name of the algorithm - "SPHINCS+"
 */
- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *)getParameterSpec;

- (NSUInteger)hash;

#pragma mark Package-Private

- (id<OrgBouncycastleCryptoCipherParameters>)getKeyParams;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey)

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *params);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *create_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *params);

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *self, OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *create_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey")

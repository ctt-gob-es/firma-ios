//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPrivateKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "javax/security/auth/Destroyable.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyFactory.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/spec/SPHINCSPlusParameterSpec.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPrivateKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey () {
 @public
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params_;
  OrgBouncycastleAsn1ASN1Set *attributes_;
}

- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey, params_, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey, attributes_, OrgBouncycastleAsn1ASN1Set *)

inline jlong OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_get_serialVersionUID(void);
#define OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey, serialVersionUID, jlong)

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPrivateKey.java"


#line 18
@implementation OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey


#line 26
- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *)params {
  OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(self, params);
  return self;
}


#line 32
- (instancetype)initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
  return self;
}


#line 38
- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 51
- (jboolean)isEqual:(id)o {
  
#line 54
  if (JreObjectEqualsEquals(o, self)) {
    
#line 56
    return true;
  }
  
#line 59
  if ([o isKindOfClass:[OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey class]]) {
    
#line 61
    OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *otherKey = (OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *) o;
    
#line 63
    return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) nil_chk(params_)) getEncoded], [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *) nil_chk(otherKey))->params_)) getEncoded]);
  }
  
#line 66
  return false;
}


#line 69
- (NSUInteger)hash {
  
#line 72
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_([((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) nil_chk(params_)) getEncoded]);
}


#line 78
- (NSString *)getAlgorithm {
  
#line 81
  return @"SPHINCS+";
}

- (IOSByteArray *)getEncoded {
  
#line 88
  @try {
    
#line 90
    OrgBouncycastleAsn1PkcsPrivateKeyInfo *pki = OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleAsn1ASN1Set_(params_, attributes_);
    
#line 92
    return [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(pki)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 96
    return nil;
  }
}


#line 100
- (OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *)getParameterSpec {
  
#line 103
  return OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec_fromNameWithNSString_([((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *) nil_chk([((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) nil_chk(params_)) getParameters])) getName]);
}

- (NSString *)getFormat {
  
#line 109
  return @"PKCS#8";
}

- (id<OrgBouncycastleCryptoCipherParameters>)getKeyParams {
  
#line 114
  return params_;
}


#line 117
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 128
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCipherParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[2].selector = @selector(init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(getAlgorithm);
  methods[6].selector = @selector(getEncoded);
  methods[7].selector = @selector(getParameterSpec);
  methods[8].selector = @selector(getFormat);
  methods[9].selector = @selector(getKeyParams);
  methods[10].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[11].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "params_", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attributes_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters;", "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "LJavaIoIOException;", "init", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey = { "BCSPHINCSPlusPrivateKey", "org.bouncycastle.pqc.jcajce.provider.sphincsplus", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey;
}

@end


#line 26
void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params) {
  NSObject_init(self);
  
#line 29
  self->params_ = params;
}


#line 26
OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey, initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_, params)
}


#line 26
OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *create_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey, initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_, params)
}


#line 32
void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  NSObject_init(self);
  
#line 35
  OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 32
OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 32
OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *create_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 38
void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  
#line 41
  self->attributes_ = [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(keyInfo)) getAttributes];
  self->params_ = (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) cast_chk(OrgBouncycastlePqcCryptoUtilPrivateKeyFactory_createKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(keyInfo), [OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters class]);
}


#line 117
void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, JavaIoObjectInputStream *inArg) {
  
#line 121
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 123
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  
#line 125
  OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, OrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(enc));
}


#line 128
void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  
#line 132
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 134
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey)

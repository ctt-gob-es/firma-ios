//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/qtesla/BCqTESLAPrivateKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "javax/security/auth/Destroyable.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLAPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/qtesla/QTESLASecurityCategory.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyFactory.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.h"
#include "org/bouncycastle/pqc/jcajce/provider/qtesla/BCqTESLAPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/spec/QTESLAParameterSpec.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/qtesla/BCqTESLAPrivateKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey () {
 @public
  OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *keyParams_;
  OrgBouncycastleAsn1ASN1Set *attributes_;
}

- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey, keyParams_, OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey, attributes_, OrgBouncycastleAsn1ASN1Set *)

inline jlong OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_get_serialVersionUID(void);
#define OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey, serialVersionUID, jlong)

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

__attribute__((unused)) static NSString *OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_getAlgorithm(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/qtesla/BCqTESLAPrivateKey.java"


#line 19
@implementation OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey


#line 27
- (instancetype)initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters:(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *)keyParams {
  OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_(self, keyParams);
  return self;
}


#line 33
- (instancetype)initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
  return self;
}


#line 39
- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 49
- (NSString *)getAlgorithm {
  return OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_getAlgorithm(self);
}


#line 55
- (NSString *)getFormat {
  
#line 58
  return @"PKCS#8";
}

- (OrgBouncycastlePqcJcajceSpecQTESLAParameterSpec *)getParams {
  
#line 64
  return new_OrgBouncycastlePqcJcajceSpecQTESLAParameterSpec_initWithNSString_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_getAlgorithm(self));
}

- (IOSByteArray *)getEncoded {
  
#line 70
  OrgBouncycastleAsn1PkcsPrivateKeyInfo *pki;
  @try {
    
#line 73
    pki = OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleAsn1ASN1Set_(keyParams_, attributes_);
    
#line 75
    return [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(pki)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 79
    return nil;
  }
}


#line 83
- (jboolean)isEqual:(id)o {
  
#line 86
  if (JreObjectEqualsEquals(o, self)) {
    
#line 88
    return true;
  }
  
#line 91
  if ([o isKindOfClass:[OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey class]]) {
    
#line 93
    OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *otherKey = (OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *) o;
    
#line 95
    return [((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(keyParams_)) getSecurityCategory] == [((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *) nil_chk(otherKey))->keyParams_)) getSecurityCategory] && OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(
#line 96
    [((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(keyParams_)) getSecret], [((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(otherKey->keyParams_)) getSecret]);
  }
  
#line 99
  return false;
}


#line 102
- (NSUInteger)hash {
  
#line 105
  return [((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(keyParams_)) getSecurityCategory] + 37 * OrgBouncycastleUtilArrays_hashCodeWithByteArray_([((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(keyParams_)) getSecret]);
}

- (id<OrgBouncycastleCryptoCipherParameters>)getKeyParams {
  
#line 110
  return keyParams_;
}


#line 113
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 124
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcJcajceSpecQTESLAParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCipherParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[2].selector = @selector(init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[3].selector = @selector(getAlgorithm);
  methods[4].selector = @selector(getFormat);
  methods[5].selector = @selector(getParams);
  methods[6].selector = @selector(getEncoded);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(getKeyParams);
  methods[10].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[11].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "keyParams_", "LOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attributes_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters;", "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "LJavaIoIOException;", "init", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey = { "BCqTESLAPrivateKey", "org.bouncycastle.pqc.jcajce.provider.qtesla", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey;
}

@end


#line 27
void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *keyParams) {
  NSObject_init(self);
  
#line 30
  self->keyParams_ = keyParams;
}


#line 27
OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *new_OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *keyParams) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey, initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_, keyParams)
}


#line 27
OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *create_OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_(OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *keyParams) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey, initWithOrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters_, keyParams)
}


#line 33
void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  NSObject_init(self);
  
#line 36
  OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 33
OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *new_OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 33
OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *create_OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 39
void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  
#line 42
  self->attributes_ = [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(keyInfo)) getAttributes];
  self->keyParams_ = (OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) cast_chk(OrgBouncycastlePqcCryptoUtilPrivateKeyFactory_createKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(keyInfo), [OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters class]);
}


#line 49
NSString *OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_getAlgorithm(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self) {
  
#line 52
  return OrgBouncycastlePqcCryptoQteslaQTESLASecurityCategory_getNameWithInt_([((OrgBouncycastlePqcCryptoQteslaQTESLAPrivateKeyParameters *) nil_chk(self->keyParams_)) getSecurityCategory]);
}


#line 113
void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, JavaIoObjectInputStream *inArg) {
  
#line 117
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 119
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  
#line 121
  OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, OrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(enc));
}


#line 124
void OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  
#line 128
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 130
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderQteslaBCqTESLAPrivateKey)

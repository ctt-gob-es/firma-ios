//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcEliecePublicKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/StringBuilder.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/asn1/McEliecePublicKey.h"
#include "org/bouncycastle/pqc/asn1/PQCObjectIdentifiers.h"
#include "org/bouncycastle/pqc/crypto/mceliece/McEliecePublicKeyParameters.h"
#include "org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcEliecePublicKey.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2Matrix.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcEliecePublicKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey () {
 @public
  OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *params_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey, params_, OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *)

inline jlong OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey_get_serialVersionUID(void);
#define OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/mceliece/BCMcEliecePublicKey.java"


#line 19
@implementation OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey


#line 26
- (instancetype)initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters:(OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *)params {
  OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey_initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters_(self, params);
  return self;
}


#line 36
- (NSString *)getAlgorithm {
  
#line 39
  return @"McEliece";
}


#line 45
- (jint)getN {
  
#line 47
  return [((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getN];
}


#line 53
- (jint)getK {
  
#line 55
  return [((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getK];
}


#line 61
- (jint)getT {
  
#line 63
  return [((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getT];
}


#line 69
- (OrgBouncycastlePqcMathLinearalgebraGF2Matrix *)getG {
  
#line 71
  return [((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getG];
}


#line 77
- (NSString *)description {
  
#line 80
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_initWithNSString_(@"McEliecePublicKey:\n");
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([result appendWithNSString:@" length of the code         : "])) appendWithInt:[((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getN]])) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([result appendWithNSString:@" error correction capability: "])) appendWithInt:[params_ getT]])) appendWithNSString:@"\n"];
  (void) [((JavaLangStringBuilder *) nil_chk([result appendWithNSString:@" generator matrix           : "])) appendWithId:[params_ getG]];
  return [result description];
}


#line 93
- (jboolean)isEqual:(id)other {
  
#line 96
  if ([other isKindOfClass:[OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey class]]) {
    
#line 98
    OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey *otherKey = (OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey *) other;
    
#line 100
    return [((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getN] == [((OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey *) nil_chk(otherKey)) getN] && [params_ getT] == [otherKey getT] && [((OrgBouncycastlePqcMathLinearalgebraGF2Matrix *) nil_chk([params_ getG])) isEqual:[otherKey getG]];
  }
  
#line 103
  return false;
}

- (NSUInteger)hash {
  
#line 112
  return 37 * ([((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getN] + 37 * [params_ getT]) + ((jint) [((OrgBouncycastlePqcMathLinearalgebraGF2Matrix *) nil_chk([params_ getG])) hash]);
}


#line 129
- (IOSByteArray *)getEncoded {
  
#line 132
  OrgBouncycastlePqcAsn1McEliecePublicKey *key = new_OrgBouncycastlePqcAsn1McEliecePublicKey_initWithInt_withInt_withOrgBouncycastlePqcMathLinearalgebraGF2Matrix_([((OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *) nil_chk(params_)) getN], [params_ getT], [params_ getG]);
  OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier = new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcEliece));
  
#line 135
  @try {
    
#line 137
    OrgBouncycastleAsn1X509SubjectPublicKeyInfo *subjectPublicKeyInfo = new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(algorithmIdentifier, key);
    
#line 139
    return [subjectPublicKeyInfo getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 143
    return nil;
  }
}


#line 147
- (NSString *)getFormat {
  
#line 150
  return @"X.509";
}

- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getKeyParams {
  
#line 155
  return params_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathLinearalgebraGF2Matrix;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters:);
  methods[1].selector = @selector(getAlgorithm);
  methods[2].selector = @selector(getN);
  methods[3].selector = @selector(getK);
  methods[4].selector = @selector(getT);
  methods[5].selector = @selector(getG);
  methods[6].selector = @selector(description);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(getEncoded);
  methods[10].selector = @selector(getFormat);
  methods[11].selector = @selector(getKeyParams);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "params_", "LOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters;", "toString", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey = { "BCMcEliecePublicKey", "org.bouncycastle.pqc.jcajce.provider.mceliece", ptrTable, methods, fields, 7, 0x1, 12, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey;
}

@end


#line 26
void OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey_initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters_(OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey *self, OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *params) {
  NSObject_init(self);
  self->params_ = params;
}


#line 26
OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey *new_OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey_initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters_(OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *params) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey, initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters_, params)
}


#line 26
OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey *create_OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey_initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters_(OrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters *params) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey, initWithOrgBouncycastlePqcCryptoMcelieceMcEliecePublicKeyParameters_, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderMcelieceBCMcEliecePublicKey)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/SignatureSpi.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/PrivateKey.h"
#include "java/security/PublicKey.h"
#include "java/security/SecureRandom.h"
#include "java/security/SignatureException.h"
#include "java/security/SignatureSpi.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/Digest.h"
#include "org/bouncycastle/crypto/digests/NullDigest.h"
#include "org/bouncycastle/crypto/params/ParametersWithRandom.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusSigner.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPublicKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/SignatureSpi.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/sphincsplus/SignatureSpi must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi () {
 @public
  id<OrgBouncycastleCryptoDigest> digest_;
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *signer_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi, digest_, id<OrgBouncycastleCryptoDigest>)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi, signer_, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *)

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi__Annotations$1(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/SignatureSpi.java"


#line 16
@implementation OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi


#line 22
- (instancetype)initWithOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest
withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *)signer {
  OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_initWithOrgBouncycastleCryptoDigest_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_(self, digest, signer);
  return self;
}

- (void)engineInitVerifyWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  
#line 32
  if ([publicKey isKindOfClass:[OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey class]]) {
    
#line 34
    OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *key = (OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *) publicKey;
    
#line 36
    id<OrgBouncycastleCryptoCipherParameters> param = [((OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey *) nil_chk(key)) getKeyParams];
    
#line 38
    [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *) nil_chk(signer_)) init__WithBoolean:false withOrgBouncycastleCryptoCipherParameters:param];
  }
  else {
    
#line 42
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"unknown public key passed to SPHINCS-256");
  }
}


#line 46
- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey
                    withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  
#line 50
  self->appRandom_ = random;
  [self engineInitSignWithJavaSecurityPrivateKey:privateKey];
}

- (void)engineInitSignWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey {
  
#line 58
  if ([privateKey isKindOfClass:[OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey class]]) {
    
#line 60
    OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *key = (OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *) privateKey;
    
#line 62
    id<OrgBouncycastleCryptoCipherParameters> param = [((OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *) nil_chk(key)) getKeyParams];
    
#line 64
    if (appRandom_ != nil) {
      
#line 66
      [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *) nil_chk(signer_)) init__WithBoolean:true withOrgBouncycastleCryptoCipherParameters:new_OrgBouncycastleCryptoParamsParametersWithRandom_initWithOrgBouncycastleCryptoCipherParameters_withJavaSecuritySecureRandom_(param, appRandom_)];
    }
    else {
      
#line 70
      [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *) nil_chk(signer_)) init__WithBoolean:true withOrgBouncycastleCryptoCipherParameters:param];
    }
  }
  else {
    
#line 75
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_(@"unknown private key passed to SPHINCS-256");
  }
}


#line 79
- (void)engineUpdateWithByte:(jbyte)b {
  
#line 83
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByte:b];
}


#line 86
- (void)engineUpdateWithByteArray:(IOSByteArray *)b
                          withInt:(jint)off
                          withInt:(jint)len {
  
#line 90
  [((id<OrgBouncycastleCryptoDigest>) nil_chk(digest_)) updateWithByteArray:b withInt:off withInt:len];
}


#line 93
- (IOSByteArray *)engineSign {
  
#line 97
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:[((id<OrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]];
  [digest_ doFinalWithByteArray:hash_ withInt:0];
  @try {
    
#line 101
    IOSByteArray *sig = [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *) nil_chk(signer_)) generateSignatureWithByteArray:hash_];
    
#line 103
    return sig;
  }
  @catch (JavaLangException *e) {
    
#line 107
    @throw new_JavaSecuritySignatureException_initWithNSString_([e description]);
  }
}


#line 111
- (jboolean)engineVerifyWithByteArray:(IOSByteArray *)sigBytes {
  
#line 115
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:[((id<OrgBouncycastleCryptoDigest>) nil_chk(digest_)) getDigestSize]];
  [digest_ doFinalWithByteArray:hash_ withInt:0];
  
#line 118
  return [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *) nil_chk(signer_)) verifySignatureWithByteArray:hash_ withByteArray:sigBytes];
}

- (void)engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params {
  
#line 125
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}


#line 131
- (void)engineSetParameterWithNSString:(NSString *)param
                                withId:(id)value {
  
#line 135
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}


#line 141
- (id)engineGetParameterWithNSString:(NSString *)param {
  
#line 145
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"engineSetParameter unsupported");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 6, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x4, 7, 10, 9, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 9, -1, -1, -1 },
    { NULL, "Z", 0x4, 11, 12, 9, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 13, 15, -1, -1, 16, -1 },
    { NULL, "LNSObject;", 0x4, 17, 18, -1, -1, 19, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleCryptoDigest:withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner:);
  methods[1].selector = @selector(engineInitVerifyWithJavaSecurityPublicKey:);
  methods[2].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(engineInitSignWithJavaSecurityPrivateKey:);
  methods[4].selector = @selector(engineUpdateWithByte:);
  methods[5].selector = @selector(engineUpdateWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(engineSign);
  methods[7].selector = @selector(engineVerifyWithByteArray:);
  methods[8].selector = @selector(engineSetParameterWithJavaSecuritySpecAlgorithmParameterSpec:);
  methods[9].selector = @selector(engineSetParameterWithNSString:withId:);
  methods[10].selector = @selector(engineGetParameterWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digest_", "LOrgBouncycastleCryptoDigest;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "signer_", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCryptoDigest;LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner;", "engineInitVerify", "LJavaSecurityPublicKey;", "LJavaSecurityInvalidKeyException;", "engineInitSign", "LJavaSecurityPrivateKey;LJavaSecuritySecureRandom;", "LJavaSecurityPrivateKey;", "engineUpdate", "B", "LJavaSecuritySignatureException;", "[BII", "engineVerify", "[B", "engineSetParameter", "LJavaSecuritySpecAlgorithmParameterSpec;", "LNSString;LNSObject;", (void *)&OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi__Annotations$0, "engineGetParameter", "LNSString;", (void *)&OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi__Annotations$1, "LOrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi = { "SignatureSpi", "org.bouncycastle.pqc.jcajce.provider.sphincsplus", ptrTable, methods, fields, 7, 0x1, 11, 2, -1, 20, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi;
}

@end


#line 22
void OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_initWithOrgBouncycastleCryptoDigest_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi *self, id<OrgBouncycastleCryptoDigest> digest, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *signer) {
  JavaSecuritySignatureSpi_init(self);
  self->digest_ = digest;
  self->signer_ = signer;
}


#line 22
OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi *new_OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_initWithOrgBouncycastleCryptoDigest_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_(id<OrgBouncycastleCryptoDigest> digest, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *signer) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi, initWithOrgBouncycastleCryptoDigest_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_, digest, signer)
}


#line 22
OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi *create_OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_initWithOrgBouncycastleCryptoDigest_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_(id<OrgBouncycastleCryptoDigest> digest, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner *signer) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi, initWithOrgBouncycastleCryptoDigest_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_, digest, signer)
}

IOSObjectArray *OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/SignatureSpi.java"


#line 148
@implementation OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct = { "Direct", "org.bouncycastle.pqc.jcajce.provider.sphincsplus", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct;
}

@end


#line 151
void OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct_init(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct *self) {
  OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_initWithOrgBouncycastleCryptoDigest_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_(self, new_OrgBouncycastleCryptoDigestsNullDigest_init(), new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusSigner_init());
}


#line 151
OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct *new_OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct, init)
}


#line 151
OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct *create_OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderSphincsplusSignatureSpi_Direct)

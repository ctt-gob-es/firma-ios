//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPublicKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPublicKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/util/PublicKeyFactory.h"
#include "org/bouncycastle/pqc/crypto/util/SubjectPublicKeyInfoFactory.h"
#include "org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPublicKey.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Encodable.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPublicKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey () {
 @public
  OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams_;
}

- (void)init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey, keyParams_, OrgBouncycastlePqcCryptoLmsLMSKeyParameters *)

inline jlong OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_get_serialVersionUID(void);
#define OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_serialVersionUID -5617456225328969766LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey, serialVersionUID, jlong)

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPublicKey.java"


#line 19
@implementation OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey


#line 26
- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters:(OrgBouncycastlePqcCryptoLmsLMSKeyParameters *)keyParams {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(self, keyParams);
  return self;
}


#line 32
- (instancetype)initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
  return self;
}


#line 38
- (void)init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
}


#line 47
- (NSString *)getAlgorithm {
  
#line 50
  return @"LMS";
}

- (IOSByteArray *)getEncoded {
  
#line 56
  @try {
    
#line 58
    OrgBouncycastleAsn1X509SubjectPublicKeyInfo *pki = OrgBouncycastlePqcCryptoUtilSubjectPublicKeyInfoFactory_createSubjectPublicKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(keyParams_);
    return [((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(pki)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 63
    return nil;
  }
}


#line 67
- (NSString *)getFormat {
  
#line 70
  return @"X.509";
}

- (id<OrgBouncycastleCryptoCipherParameters>)getKeyParams {
  
#line 75
  return keyParams_;
}


#line 78
- (jboolean)isEqual:(id)o {
  
#line 81
  if (JreObjectEqualsEquals(o, self)) {
    
#line 83
    return true;
  }
  
#line 86
  if ([o isKindOfClass:[OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey class]]) {
    
#line 88
    OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *otherKey = (OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *) o;
    
#line 90
    @try {
      
#line 92
      return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((OrgBouncycastlePqcCryptoLmsLMSKeyParameters *) nil_chk(keyParams_)) getEncoded], [((OrgBouncycastlePqcCryptoLmsLMSKeyParameters *) nil_chk(((OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *) nil_chk(otherKey))->keyParams_)) getEncoded]);
    }
    @catch (JavaIoIOException *e) {
      
#line 96
      return false;
    }
  }
  
#line 100
  return false;
}


#line 103
- (NSUInteger)hash {
  
#line 106
  @try {
    
#line 108
    return OrgBouncycastleUtilArrays_hashCodeWithByteArray_([((id<OrgBouncycastleUtilEncodable>) nil_chk((keyParams_))) getEncoded]);
  }
  @catch (JavaIoIOException *e) {
    
#line 113
    return -1;
  }
}


#line 117
- (jint)getLevels {
  
#line 120
  if ([keyParams_ isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPublicKeyParameters class]]) {
    
#line 122
    return 1;
  }
  else {
    
#line 126
    return [((OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters *) cast_chk(keyParams_, [OrgBouncycastlePqcCryptoLmsHSSPublicKeyParameters class])))) getL];
  }
}


#line 130
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 141
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCipherParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 7, 8, 9, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[2].selector = @selector(init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[3].selector = @selector(getAlgorithm);
  methods[4].selector = @selector(getEncoded);
  methods[5].selector = @selector(getFormat);
  methods[6].selector = @selector(getKeyParams);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(getLevels);
  methods[10].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[11].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "keyParams_", "LOrgBouncycastlePqcCryptoLmsLMSKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMSKeyParameters;", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LJavaIoIOException;", "init", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey = { "BCLMSPublicKey", "org.bouncycastle.pqc.jcajce.provider.lms", ptrTable, methods, fields, 7, 0x1, 12, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey;
}

@end


#line 26
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams) {
  NSObject_init(self);
  
#line 29
  self->keyParams_ = keyParams;
}


#line 26
OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *new_OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey, initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_, keyParams)
}


#line 26
OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *create_OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey, initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_, keyParams)
}


#line 32
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  NSObject_init(self);
  
#line 35
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, keyInfo);
}


#line 32
OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *new_OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey, initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, keyInfo)
}


#line 32
OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *create_OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey, initWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_, keyInfo)
}


#line 38
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, OrgBouncycastleAsn1X509SubjectPublicKeyInfo *keyInfo) {
  
#line 41
  self->keyParams_ = (OrgBouncycastlePqcCryptoLmsLMSKeyParameters *) cast_chk(OrgBouncycastlePqcCryptoUtilPublicKeyFactory_createKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(keyInfo), [OrgBouncycastlePqcCryptoLmsLMSKeyParameters class]);
}


#line 130
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, JavaIoObjectInputStream *inArg) {
  
#line 134
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 136
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  
#line 138
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_init__WithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(self, OrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(enc));
}


#line 141
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey *self, JavaIoObjectOutputStream *outArg) {
  
#line 145
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 147
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderLmsBCLMSPublicKey)

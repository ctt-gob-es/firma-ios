//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "javax/security/auth/Destroyable.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/asn1/XMSSMTKeyParams.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyFactory.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTParameters.h"
#include "org/bouncycastle/pqc/crypto/xmss/XMSSMTPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/jcajce/interfaces/XMSSMTPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/xmss/DigestUtil.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey () {
 @public
  OrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest_;
  OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *keyParams_;
  OrgBouncycastleAsn1ASN1Set *attributes_;
}

- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, treeDigest_, OrgBouncycastleAsn1ASN1ObjectIdentifier *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, keyParams_, OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, attributes_, OrgBouncycastleAsn1ASN1Set *)

inline jlong OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_get_serialVersionUID(void);
#define OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_serialVersionUID 7682140473044521395LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, serialVersionUID, jlong)

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/xmss/BCXMSSMTPrivateKey.java"


#line 19
@implementation OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey


#line 28
- (instancetype)initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)treeDigest
     withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters:(OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *)keyParams {
  OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_(self, treeDigest, keyParams);
  return self;
}


#line 36
- (instancetype)initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
  return self;
}


#line 42
- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 51
- (jlong)getIndex {
  
#line 54
  if ([self getUsagesRemaining] == 0) {
    
#line 56
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"key exhausted");
  }
  
#line 59
  return [((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(keyParams_)) getIndex];
}


#line 62
- (jlong)getUsagesRemaining {
  
#line 65
  return [((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(keyParams_)) getUsagesRemaining];
}

- (id<OrgBouncycastlePqcJcajceInterfacesXMSSMTPrivateKey>)extractKeyShardWithInt:(jint)usageCount {
  
#line 71
  return new_OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_(self->treeDigest_, [((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(keyParams_)) extractKeyShardWithInt:usageCount]);
}

- (NSString *)getAlgorithm {
  
#line 77
  return @"XMSSMT";
}

- (NSString *)getFormat {
  
#line 83
  return @"PKCS#8";
}

- (IOSByteArray *)getEncoded {
  
#line 89
  @try {
    
#line 91
    OrgBouncycastleAsn1PkcsPrivateKeyInfo *pki = OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleAsn1ASN1Set_(keyParams_, attributes_);
    
#line 93
    return [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(pki)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 97
    return nil;
  }
}


#line 101
- (id<OrgBouncycastleCryptoCipherParameters>)getKeyParams {
  
#line 103
  return keyParams_;
}


#line 106
- (jboolean)isEqual:(id)o {
  
#line 109
  if (JreObjectEqualsEquals(o, self)) {
    
#line 111
    return true;
  }
  
#line 114
  if ([o isKindOfClass:[OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey class]]) {
    
#line 116
    OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *otherKey = (OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *) o;
    
#line 118
    return [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(treeDigest_)) equalsWithOrgBouncycastleAsn1ASN1Primitive:((OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *) nil_chk(otherKey))->treeDigest_] && OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(keyParams_)) toByteArray], [((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(otherKey->keyParams_)) toByteArray]);
  }
  
#line 121
  return false;
}


#line 124
- (NSUInteger)hash {
  
#line 127
  return ((jint) [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(treeDigest_)) hash]) + 37 * OrgBouncycastleUtilArrays_hashCodeWithByteArray_([((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(keyParams_)) toByteArray]);
}

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getTreeDigestOID {
  
#line 132
  return treeDigest_;
}


#line 135
- (jint)getHeight {
  
#line 138
  return [((OrgBouncycastlePqcCryptoXmssXMSSMTParameters *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(keyParams_)) getParameters])) getHeight];
}

- (jint)getLayers {
  
#line 144
  return [((OrgBouncycastlePqcCryptoXmssXMSSMTParameters *) nil_chk([((OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) nil_chk(keyParams_)) getParameters])) getLayers];
}

- (NSString *)getTreeDigest {
  
#line 150
  return OrgBouncycastlePqcJcajceProviderXmssDigestUtil_getXMSSDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(treeDigest_);
}

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 164
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcJcajceInterfacesXMSSMTPrivateKey;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCipherParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, 11, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[2].selector = @selector(init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[3].selector = @selector(getIndex);
  methods[4].selector = @selector(getUsagesRemaining);
  methods[5].selector = @selector(extractKeyShardWithInt:);
  methods[6].selector = @selector(getAlgorithm);
  methods[7].selector = @selector(getFormat);
  methods[8].selector = @selector(getEncoded);
  methods[9].selector = @selector(getKeyParams);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(getTreeDigestOID);
  methods[13].selector = @selector(getHeight);
  methods[14].selector = @selector(getLayers);
  methods[15].selector = @selector(getTreeDigest);
  methods[16].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[17].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "treeDigest_", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "keyParams_", "LOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attributes_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters;", "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "LJavaIoIOException;", "init", "extractKeyShard", "I", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey = { "BCXMSSMTPrivateKey", "org.bouncycastle.pqc.jcajce.provider.xmss", ptrTable, methods, fields, 7, 0x1, 18, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey;
}

@end


#line 28
void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest, OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *keyParams) {
  NSObject_init(self);
  
#line 32
  self->treeDigest_ = treeDigest;
  self->keyParams_ = keyParams;
}


#line 28
OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *new_OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_(OrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest, OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *keyParams) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_, treeDigest, keyParams)
}


#line 28
OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *create_OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_(OrgBouncycastleAsn1ASN1ObjectIdentifier *treeDigest, OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *keyParams) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters_, treeDigest, keyParams)
}


#line 36
void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  NSObject_init(self);
  
#line 39
  OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 36
OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *new_OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 36
OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *create_OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 42
void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  
#line 45
  self->attributes_ = [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(keyInfo)) getAttributes];
  OrgBouncycastlePqcAsn1XMSSMTKeyParams *keyParams = OrgBouncycastlePqcAsn1XMSSMTKeyParams_getInstanceWithId_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([keyInfo getPrivateKeyAlgorithm])) getParameters]);
  self->treeDigest_ = [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastlePqcAsn1XMSSMTKeyParams *) nil_chk(keyParams)) getTreeDigest])) getAlgorithm];
  self->keyParams_ = (OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters *) cast_chk(OrgBouncycastlePqcCryptoUtilPrivateKeyFactory_createKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(keyInfo), [OrgBouncycastlePqcCryptoXmssXMSSMTPrivateKeyParameters class]);
}


#line 153
void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, JavaIoObjectInputStream *inArg) {
  
#line 157
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 159
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  
#line 161
  OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, OrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(enc));
}


#line 164
void OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  
#line 168
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 170
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderXmssBCXMSSMTPrivateKey)

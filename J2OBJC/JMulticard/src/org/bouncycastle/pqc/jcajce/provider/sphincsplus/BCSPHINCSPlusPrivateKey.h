//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPrivateKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey")
#ifdef RESTRICT_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey 1
#endif
#undef RESTRICT_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey

#if !defined (OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_) && (INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey || defined(INCLUDE_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey))
#define OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_

#define RESTRICT_JavaSecurityPrivateKey 1
#define INCLUDE_JavaSecurityPrivateKey 1
#include "java/security/PrivateKey.h"

#define RESTRICT_OrgBouncycastlePqcJcajceInterfacesSPHINCSPlusKey 1
#define INCLUDE_OrgBouncycastlePqcJcajceInterfacesSPHINCSPlusKey 1
#include "org/bouncycastle/pqc/jcajce/interfaces/SPHINCSPlusKey.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters;
@class OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec;
@protocol OrgBouncycastleCryptoCipherParameters;

@interface OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey : NSObject < JavaSecurityPrivateKey, OrgBouncycastlePqcJcajceInterfacesSPHINCSPlusKey >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo;

- (instancetype)initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters:(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *)params;

/*!
 @brief Compare this SPHINCS-256 private key with another object.
 @param o the other object
 @return the result of the comparison
 */
- (jboolean)isEqual:(id)o;

/*!
 @return name of the algorithm - "SPHINCS+"
 */
- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *)getParameterSpec;

- (NSUInteger)hash;

#pragma mark Package-Private

- (id<OrgBouncycastleCryptoCipherParameters>)getKeyParams;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey)

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *create_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *params);

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey *create_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/IllegalStateException.h"
#include "javax/security/auth/Destroyable.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/lms/HSSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/lms/LMSPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyFactory.h"
#include "org/bouncycastle/pqc/crypto/util/PrivateKeyInfoFactory.h"
#include "org/bouncycastle/pqc/jcajce/interfaces/LMSPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey () {
 @public
  OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams_;
  OrgBouncycastleAsn1ASN1Set *attributes_;
}

- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo OBJC_METHOD_FAMILY_NONE;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey, keyParams_, OrgBouncycastlePqcCryptoLmsLMSKeyParameters *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey, attributes_, OrgBouncycastleAsn1ASN1Set *)

inline jlong OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_get_serialVersionUID(void);
#define OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_serialVersionUID 8568701712864512338LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey, serialVersionUID, jlong)

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/lms/BCLMSPrivateKey.java"


#line 19
@implementation OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey


#line 27
- (instancetype)initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters:(OrgBouncycastlePqcCryptoLmsLMSKeyParameters *)keyParams {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(self, keyParams);
  return self;
}


#line 33
- (instancetype)initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
  return self;
}


#line 39
- (void)init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)keyInfo {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 46
- (jlong)getIndex {
  
#line 49
  if ([self getUsagesRemaining] == 0) {
    
#line 51
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"key exhausted");
  }
  
#line 54
  if ([keyParams_ isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]]) {
    
#line 56
    return [((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) keyParams_))) getIndex];
  }
  return [((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) cast_chk(keyParams_, [OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters class])))) getIndex];
}


#line 61
- (jlong)getUsagesRemaining {
  
#line 64
  if ([keyParams_ isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]]) {
    
#line 66
    return [((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) keyParams_))) getUsagesRemaining];
  }
  return [((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) cast_chk(keyParams_, [OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters class])))) getUsagesRemaining];
}


#line 71
- (id<OrgBouncycastlePqcJcajceInterfacesLMSPrivateKey>)extractKeyShardWithInt:(jint)usageCount {
  
#line 74
  if ([keyParams_ isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]]) {
    
#line 76
    return new_OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_([((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters *) keyParams_))) extractKeyShardWithInt:usageCount]);
  }
  return new_OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_([((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) cast_chk(keyParams_, [OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters class])))) extractKeyShardWithInt:usageCount]);
}


#line 81
- (NSString *)getAlgorithm {
  
#line 84
  return @"LMS";
}

- (NSString *)getFormat {
  
#line 90
  return @"PKCS#8";
}

- (IOSByteArray *)getEncoded {
  
#line 96
  @try {
    
#line 98
    OrgBouncycastleAsn1PkcsPrivateKeyInfo *pki = OrgBouncycastlePqcCryptoUtilPrivateKeyInfoFactory_createPrivateKeyInfoWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleAsn1ASN1Set_(keyParams_, attributes_);
    
#line 100
    return [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(pki)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 104
    return nil;
  }
}


#line 108
- (jboolean)isEqual:(id)o {
  
#line 111
  if (JreObjectEqualsEquals(o, self)) {
    
#line 113
    return true;
  }
  
#line 116
  if ([o isKindOfClass:[OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey class]]) {
    
#line 118
    OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *otherKey = (OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *) o;
    
#line 120
    @try {
      
#line 122
      return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([((OrgBouncycastlePqcCryptoLmsLMSKeyParameters *) nil_chk(keyParams_)) getEncoded], [((OrgBouncycastlePqcCryptoLmsLMSKeyParameters *) nil_chk(((OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *) nil_chk(otherKey))->keyParams_)) getEncoded]);
    }
    @catch (JavaIoIOException *e) {
      
#line 126
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"unable to perform equals");
    }
  }
  
#line 130
  return false;
}


#line 133
- (NSUInteger)hash {
  
#line 136
  @try {
    
#line 138
    return OrgBouncycastleUtilArrays_hashCodeWithByteArray_([((OrgBouncycastlePqcCryptoLmsLMSKeyParameters *) nil_chk(keyParams_)) getEncoded]);
  }
  @catch (JavaIoIOException *e) {
    
#line 142
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"unable to calculate hashCode");
  }
}


#line 146
- (id<OrgBouncycastleCryptoCipherParameters>)getKeyParams {
  
#line 148
  return keyParams_;
}


#line 151
- (jint)getLevels {
  
#line 154
  if ([keyParams_ isKindOfClass:[OrgBouncycastlePqcCryptoLmsLMSPrivateKeyParameters class]]) {
    
#line 156
    return 1;
  }
  else {
    
#line 160
    return [((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) nil_chk(((OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters *) cast_chk(keyParams_, [OrgBouncycastlePqcCryptoLmsHSSPrivateKeyParameters class])))) getL];
  }
}


#line 164
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 175
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 1, 2, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcJcajceInterfacesLMSPrivateKey;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCipherParameters;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, 11, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[2].selector = @selector(init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[3].selector = @selector(getIndex);
  methods[4].selector = @selector(getUsagesRemaining);
  methods[5].selector = @selector(extractKeyShardWithInt:);
  methods[6].selector = @selector(getAlgorithm);
  methods[7].selector = @selector(getFormat);
  methods[8].selector = @selector(getEncoded);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(getKeyParams);
  methods[12].selector = @selector(getLevels);
  methods[13].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[14].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "keyParams_", "LOrgBouncycastlePqcCryptoLmsLMSKeyParameters;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attributes_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcCryptoLmsLMSKeyParameters;", "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "LJavaIoIOException;", "init", "extractKeyShard", "I", "equals", "LNSObject;", "hashCode", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey = { "BCLMSPrivateKey", "org.bouncycastle.pqc.jcajce.provider.lms", ptrTable, methods, fields, 7, 0x1, 15, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey;
}

@end


#line 27
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams) {
  NSObject_init(self);
  
#line 30
  self->keyParams_ = keyParams;
}


#line 27
OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *new_OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey, initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_, keyParams)
}


#line 27
OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *create_OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_(OrgBouncycastlePqcCryptoLmsLMSKeyParameters *keyParams) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey, initWithOrgBouncycastlePqcCryptoLmsLMSKeyParameters_, keyParams)
}


#line 33
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  NSObject_init(self);
  
#line 36
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, keyInfo);
}


#line 33
OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *new_OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 33
OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *create_OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey, initWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_, keyInfo)
}


#line 39
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *keyInfo) {
  
#line 42
  self->attributes_ = [((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(keyInfo)) getAttributes];
  self->keyParams_ = (OrgBouncycastlePqcCryptoLmsLMSKeyParameters *) cast_chk(OrgBouncycastlePqcCryptoUtilPrivateKeyFactory_createKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(keyInfo), [OrgBouncycastlePqcCryptoLmsLMSKeyParameters class]);
}


#line 164
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, JavaIoObjectInputStream *inArg) {
  
#line 168
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 170
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  
#line 172
  OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_init__WithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, OrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(enc));
}


#line 175
void OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  
#line 179
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 181
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderLmsBCLMSPrivateKey)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/org/bouncycastle/pqc/jcajce/provider/rainbow/BCRainbowPublicKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey")
#ifdef RESTRICT_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey 1
#endif
#undef RESTRICT_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey

#if !defined (OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_) && (INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey || defined(INCLUDE_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey))
#define OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_

#define RESTRICT_JavaSecurityPublicKey 1
#define INCLUDE_JavaSecurityPublicKey 1
#include "java/security/PublicKey.h"

@class IOSByteArray;
@class IOSObjectArray;
@class IOSShortArray;
@class OrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters;
@class OrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec;

/*!
 @brief This class implements CipherParameters and PublicKey.
 <p>
  The public key in Rainbow consists of n - v1 polynomial components of the
  private key's F and the field structure of the finite field k. 
 </p><p>
  The quadratic (or mixed) coefficients of the polynomials from the public key
  are stored in the 2-dimensional array in lexicographical order, requiring n *
  (n + 1) / 2 entries for each polynomial. The singular terms are stored in a
  2-dimensional array requiring n entries per polynomial, the scalar term of
  each polynomial is stored in a 1-dimensional array. 
 </p><p>
  More detailed information on the public key is to be found in the paper of
  Jintai Ding, Dieter Schmidt: Rainbow, a New Multivariable Polynomial
  Signature Scheme. ACNS 2005: 164-175 (https://dx.doi.org/10.1007/11496137_12) 
 </p>
 */
@interface OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey : NSObject < JavaSecurityPublicKey >

#pragma mark Public

/*!
 @brief Constructor
 @param docLength
 @param coeffQuadratic
 @param coeffSingular
 @param coeffScalar
 */
- (instancetype)initWithInt:(jint)docLength
            withShortArray2:(IOSObjectArray *)coeffQuadratic
            withShortArray2:(IOSObjectArray *)coeffSingular
             withShortArray:(IOSShortArray *)coeffScalar;

- (instancetype)initWithOrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters:(OrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters *)params;

/*!
 @brief Constructor (used by the <code>RainbowKeyFactorySpi</code>).
 @param keySpec a <code>RainbowPublicKeySpec</code>
 */
- (instancetype)initWithOrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec:(OrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec *)keySpec;

/*!
 @brief Compare this Rainbow public key with another object.
 @param other the other object
 @return the result of the comparison
 */
- (jboolean)isEqual:(id)other;

/*!
 @return name of the algorithm - "Rainbow"
 */
- (NSString *)getAlgorithm;

/*!
 @return the coeffQuadratic
 */
- (IOSObjectArray *)getCoeffQuadratic;

/*!
 @return the coeffScalar
 */
- (IOSShortArray *)getCoeffScalar;

/*!
 @return the coeffSingular
 */
- (IOSObjectArray *)getCoeffSingular;

/*!
 @return the docLength
 */
- (jint)getDocLength;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey)

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithInt_withShortArray2_withShortArray2_withShortArray_(OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *self, jint docLength, IOSObjectArray *coeffQuadratic, IOSObjectArray *coeffSingular, IOSShortArray *coeffScalar);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *new_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithInt_withShortArray2_withShortArray2_withShortArray_(jint docLength, IOSObjectArray *coeffQuadratic, IOSObjectArray *coeffSingular, IOSShortArray *coeffScalar) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *create_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithInt_withShortArray2_withShortArray2_withShortArray_(jint docLength, IOSObjectArray *coeffQuadratic, IOSObjectArray *coeffSingular, IOSShortArray *coeffScalar);

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithOrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec_(OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *self, OrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec *keySpec);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *new_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithOrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec_(OrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec *keySpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *create_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithOrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec_(OrgBouncycastlePqcJcajceSpecRainbowPublicKeySpec *keySpec);

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithOrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters_(OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *self, OrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters *params);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *new_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithOrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters_(OrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters *params) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey *create_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey_initWithOrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters_(OrgBouncycastlePqcCryptoRainbowRainbowPublicKeyParameters *params);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderRainbowBCRainbowPublicKey")

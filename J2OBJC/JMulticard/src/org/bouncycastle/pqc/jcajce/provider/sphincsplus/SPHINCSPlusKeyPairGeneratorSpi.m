//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/SPHINCSPlusKeyPairGeneratorSpi.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/KeyPair.h"
#include "java/security/KeyPairGenerator.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/bouncycastle/crypto/CryptoServicesRegistrar.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyGenerationParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusKeyPairGenerator.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/sphincsplus/SPHINCSPlusPublicKeyParameters.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/BCSPHINCSPlusPublicKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/SPHINCSPlusKeyPairGeneratorSpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/util/SpecUtil.h"
#include "org/bouncycastle/pqc/jcajce/spec/SPHINCSPlusParameterSpec.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/sphincsplus/SPHINCSPlusKeyPairGeneratorSpi must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi ()

+ (NSString *)getNameFromParamsWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec;

@end

inline id<JavaUtilMap> OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_get_parameters(void);
inline id<JavaUtilMap> OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_set_parameters(id<JavaUtilMap> value);
static id<JavaUtilMap> OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi, parameters, id<JavaUtilMap>)

__attribute__((unused)) static NSString *OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_getNameFromParamsWithJavaSecuritySpecAlgorithmParameterSpec_(id<JavaSecuritySpecAlgorithmParameterSpec> paramSpec);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/sphincsplus/SPHINCSPlusKeyPairGeneratorSpi.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi)


#line 20
@implementation OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 62
- (instancetype)init {
  OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 67
- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  
#line 72
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"use AlgorithmParameterSpec");
}


#line 75
- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  
#line 81
  if (!([params isKindOfClass:[OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec class]])) {
    
#line 83
    @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"parameter object not a CMCEParameterSpec");
  }
  
#line 86
  param_ = new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(random, (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) getWithId:OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_getNameFromParamsWithJavaSecuritySpecAlgorithmParameterSpec_(params)], [OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters class]));
  
#line 88
  [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyPairGenerator *) nil_chk(engine_)) init__WithOrgBouncycastleCryptoKeyGenerationParameters:param_];
  initialised_ = true;
}


#line 92
- (JavaSecurityKeyPair *)generateKeyPair {
  
#line 95
  if (!initialised_) {
    
#line 97
    param_ = new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters_initWithJavaSecuritySecureRandom_withOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters_(random_, JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_256s));
    
#line 99
    [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyPairGenerator *) nil_chk(engine_)) init__WithOrgBouncycastleCryptoKeyGenerationParameters:param_];
    initialised_ = true;
  }
  
#line 103
  OrgBouncycastleCryptoAsymmetricCipherKeyPair *pair = [((OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyPairGenerator *) nil_chk(engine_)) generateKeyPair];
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *pub = (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters *) cast_chk([((OrgBouncycastleCryptoAsymmetricCipherKeyPair *) nil_chk(pair)) getPublic], [OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters class]);
  OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *priv = (OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters *) cast_chk([pair getPrivate], [OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters class]);
  
#line 107
  return new_JavaSecurityKeyPair_initWithJavaSecurityPublicKey_withJavaSecurityPrivateKey_(new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPublicKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPublicKeyParameters_(pub), new_OrgBouncycastlePqcJcajceProviderSphincsplusBCSPHINCSPlusPrivateKey_initWithOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusPrivateKeyParameters_(priv));
}


#line 110
+ (NSString *)getNameFromParamsWithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)paramSpec {
  return OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_getNameFromParamsWithJavaSecuritySpecAlgorithmParameterSpec_(paramSpec);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, 3, -1, -1, -1 },
    { NULL, "LJavaSecurityKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialize__WithInt:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(initialize__WithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(generateKeyPair);
  methods[4].selector = @selector(getNameFromParamsWithJavaSecuritySpecAlgorithmParameterSpec:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parameters", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
    { "param_", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyGenerationParameters;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "engine_", "LOrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyPairGenerator;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "initialised_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "ILJavaSecuritySecureRandom;", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;", "getNameFromParams", "LJavaSecuritySpecAlgorithmParameterSpec;", &OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi = { "SPHINCSPlusKeyPairGeneratorSpi", "org.bouncycastle.pqc.jcajce.provider.sphincsplus", ptrTable, methods, fields, 7, 0x1, 5, 5, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi class]) {
    OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters = new_JavaUtilHashMap_init();
    {
      
#line 27
      (void) [OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_128f))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_128f)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_128s))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_128s)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_192f))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_192f)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_192s))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_192s)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_256f))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_256f)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_256s))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_256s)];
      
#line 34
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_128f_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_128f_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_128s_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_128s_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_192f_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_192f_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_192s_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_192s_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_256f_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_256f_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, sha256_256s_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, sha256_256s_simple)];
      
#line 41
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_128f))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_128f)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_128s))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_128s)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_192f))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_192f)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_192s))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_192s)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_256f))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_256f)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_256s))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_256s)];
      
#line 48
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_128f_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_128f_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_128s_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_128s_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_192f_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_192f_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_192s_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_192s_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_256f_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_256f_simple)];
      (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_parameters)) putWithId:[((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(JreLoadStatic(OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec, shake256_256s_simple))) getName] withId:JreLoadStatic(OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusParameters, shake256_256s_simple)];
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi)
  }
}

@end


#line 62
void OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_init(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi *self) {
  JavaSecurityKeyPairGenerator_initWithNSString_(self,
#line 64
  @"SPHINCS+");
  self->engine_ = new_OrgBouncycastlePqcCryptoSphincsplusSPHINCSPlusKeyPairGenerator_init();
  self->random_ = OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  self->initialised_ =
#line 60
  false;
}


#line 62
OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi *new_OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi, init)
}


#line 62
OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi *create_OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi, init)
}


#line 110
NSString *OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_getNameFromParamsWithJavaSecuritySpecAlgorithmParameterSpec_(id<JavaSecuritySpecAlgorithmParameterSpec> paramSpec) {
  OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi_initialize();
  
#line 113
  if ([paramSpec isKindOfClass:[OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec class]]) {
    
#line 115
    OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *params = (OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) paramSpec;
    return [((OrgBouncycastlePqcJcajceSpecSPHINCSPlusParameterSpec *) nil_chk(params)) getName];
  }
  else {
    
#line 120
    return OrgBouncycastlePqcJcajceProviderUtilSpecUtil_getNameFromWithJavaSecuritySpecAlgorithmParameterSpec_(paramSpec);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyPairGeneratorSpi)

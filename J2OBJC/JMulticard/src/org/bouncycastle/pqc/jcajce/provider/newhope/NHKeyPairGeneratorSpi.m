//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/newhope/NHKeyPairGeneratorSpi.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/KeyPair.h"
#include "java/security/KeyPairGenerator.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/bouncycastle/crypto/CryptoServicesRegistrar.h"
#include "org/bouncycastle/crypto/KeyGenerationParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHKeyPairGenerator.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPrivateKeyParameters.h"
#include "org/bouncycastle/pqc/crypto/newhope/NHPublicKeyParameters.h"
#include "org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPrivateKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/newhope/BCNHPublicKey.h"
#include "org/bouncycastle/pqc/jcajce/provider/newhope/NHKeyPairGeneratorSpi.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/jcajce/provider/newhope/NHKeyPairGeneratorSpi must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/newhope/NHKeyPairGeneratorSpi.java"


#line 15
@implementation OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 23
- (instancetype)init {
  OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 28
- (void)initialize__WithInt:(jint)strength
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  
#line 33
  if (strength != 1024) {
    
#line 35
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"strength must be 1024 bits");
  }
  [((OrgBouncycastlePqcCryptoNewhopeNHKeyPairGenerator *) nil_chk(engine_)) init__WithOrgBouncycastleCryptoKeyGenerationParameters:new_OrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(random, 1024)];
  initialised_ = true;
}

- (void)initialize__WithJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
                                  withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  
#line 47
  @throw new_JavaSecurityInvalidAlgorithmParameterException_initWithNSString_(@"parameter object not recognised");
}


#line 50
- (JavaSecurityKeyPair *)generateKeyPair {
  
#line 53
  if (!initialised_) {
    
#line 55
    [((OrgBouncycastlePqcCryptoNewhopeNHKeyPairGenerator *) nil_chk(engine_)) init__WithOrgBouncycastleCryptoKeyGenerationParameters:new_OrgBouncycastleCryptoKeyGenerationParameters_initWithJavaSecuritySecureRandom_withInt_(random_, 1024)];
    initialised_ = true;
  }
  
#line 59
  OrgBouncycastleCryptoAsymmetricCipherKeyPair *pair = [((OrgBouncycastlePqcCryptoNewhopeNHKeyPairGenerator *) nil_chk(engine_)) generateKeyPair];
  OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *pub = (OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters *) cast_chk([((OrgBouncycastleCryptoAsymmetricCipherKeyPair *) nil_chk(pair)) getPublic], [OrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters class]);
  OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *priv = (OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters *) cast_chk([pair getPrivate], [OrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters class]);
  
#line 63
  return new_JavaSecurityKeyPair_initWithJavaSecurityPublicKey_withJavaSecurityPrivateKey_(new_OrgBouncycastlePqcJcajceProviderNewhopeBCNHPublicKey_initWithOrgBouncycastlePqcCryptoNewhopeNHPublicKeyParameters_(pub), new_OrgBouncycastlePqcJcajceProviderNewhopeBCNHPrivateKey_initWithOrgBouncycastlePqcCryptoNewhopeNHPrivateKeyParameters_(priv));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, 3, -1, -1, -1 },
    { NULL, "LJavaSecurityKeyPair;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initialize__WithInt:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(initialize__WithJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[3].selector = @selector(generateKeyPair);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "engine_", "LOrgBouncycastlePqcCryptoNewhopeNHKeyPairGenerator;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "random_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "initialised_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "initialize", "ILJavaSecuritySecureRandom;", "LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidAlgorithmParameterException;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi = { "NHKeyPairGeneratorSpi", "org.bouncycastle.pqc.jcajce.provider.newhope", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi;
}

@end


#line 23
void OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi_init(OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi *self) {
  JavaSecurityKeyPairGenerator_initWithNSString_(self,
#line 25
  @"NH");
  self->engine_ = new_OrgBouncycastlePqcCryptoNewhopeNHKeyPairGenerator_init();
  self->random_ = OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
  self->initialised_ =
#line 21
  false;
}


#line 23
OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi *new_OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi, init)
}


#line 23
OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi *create_OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcJcajceProviderNewhopeNHKeyPairGeneratorSpi)

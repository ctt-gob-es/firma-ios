//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceCCA2KeyFactorySpi.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi")
#ifdef RESTRICT_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi 1
#endif
#undef RESTRICT_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi

#if !defined (OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_) && (INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi || defined(INCLUDE_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi))
#define OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_

#define RESTRICT_JavaSecurityKeyFactorySpi 1
#define INCLUDE_JavaSecurityKeyFactorySpi 1
#include "java/security/KeyFactorySpi.h"

#define RESTRICT_OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter 1
#define INCLUDE_OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter 1
#include "org/bouncycastle/jcajce/provider/util/AsymmetricKeyInfoConverter.h"

@class IOSClass;
@class OrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class OrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@protocol JavaSecurityKey;
@protocol JavaSecurityPrivateKey;
@protocol JavaSecurityPublicKey;
@protocol JavaSecuritySpecKeySpec;

/*!
 @brief This class is used to translate between McEliece CCA2 keys and key
  specifications.
 - seealso: BCMcElieceCCA2PrivateKey
 - seealso: BCMcElieceCCA2PublicKey
 */
@interface OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi : JavaSecurityKeyFactorySpi < OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter >

#pragma mark Public

- (instancetype)init;

- (id<JavaSecurityPrivateKey>)generatePrivateWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)pki;

- (id<JavaSecurityPublicKey>)generatePublicWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)pki;

/*!
 @brief Converts, if possible, a given key into a key specification.Currently,
  the following key specifications are supported:
 @param key the key
 @param keySpec the key specification
 @return the specification of the McEliece CCA2 key
 @throw InvalidKeySpecExceptionif the key type or the key specification is not
  supported.
 - seealso: BCMcElieceCCA2PrivateKey
 - seealso: BCMcElieceCCA2PublicKey
 */
- (id<JavaSecuritySpecKeySpec>)getKeySpecWithJavaSecurityKey:(id<JavaSecurityKey>)key
                                                withIOSClass:(IOSClass *)keySpec;

/*!
 @brief Translates a key into a form known by the FlexiProvider.Currently, only
  the following "source" keys are supported: <code>BCMcElieceCCA2PrivateKey</code>,
  <code>BCMcElieceCCA2PublicKey</code>.
 @param key the key
 @return a key of a known key type
 @throw InvalidKeyExceptionif the key type is not supported.
 */
- (id<JavaSecurityKey>)translateKeyWithJavaSecurityKey:(id<JavaSecurityKey>)key;

#pragma mark Protected

/*!
 @brief Converts, if possible, a key specification into a 
 <code>BCMcElieceCCA2PrivateKey</code>.Currently, the following key
  specifications are supported: 
 <code>PKCS8EncodedKeySpec</code>.
 @param keySpec the key specification
 @return the McEliece CCA2 private key
 @throw InvalidKeySpecExceptionif the KeySpec is not supported.
 */
- (id<JavaSecurityPrivateKey>)engineGeneratePrivateWithJavaSecuritySpecKeySpec:(id<JavaSecuritySpecKeySpec>)keySpec;

/*!
 @brief Converts, if possible, a key specification into a 
 <code>BCMcElieceCCA2PublicKey</code>.Currently, the following key
  specifications are supported: 
 <code>X509EncodedKeySpec</code>.
 @param keySpec the key specification
 @return the McEliece CCA2 public key
 @throw InvalidKeySpecExceptionif the key specification is not supported.
 */
- (id<JavaSecurityPublicKey>)engineGeneratePublicWithJavaSecuritySpecKeySpec:(id<JavaSecuritySpecKeySpec>)keySpec;

- (id<JavaSecuritySpecKeySpec>)engineGetKeySpecWithJavaSecurityKey:(id<JavaSecurityKey>)key
                                                      withIOSClass:(IOSClass *)tClass;

- (id<JavaSecurityKey>)engineTranslateKeyWithJavaSecurityKey:(id<JavaSecurityKey>)key;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi)

/*!
 @brief The OID of the algorithm.
 */
inline NSString *OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_get_OID(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_OID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi, OID, NSString *)

FOUNDATION_EXPORT void OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_init(OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi *self);

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi *new_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi *create_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi")

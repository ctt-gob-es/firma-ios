//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/jcajce/interfaces/XMSSPrivateKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey")
#ifdef RESTRICT_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey 1
#endif
#undef RESTRICT_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey

#if !defined (OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey_) && (INCLUDE_ALL_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey || defined(INCLUDE_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey))
#define OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey_

#define RESTRICT_OrgBouncycastlePqcJcajceInterfacesXMSSKey 1
#define INCLUDE_OrgBouncycastlePqcJcajceInterfacesXMSSKey 1
#include "org/bouncycastle/pqc/jcajce/interfaces/XMSSKey.h"

#define RESTRICT_JavaSecurityPrivateKey 1
#define INCLUDE_JavaSecurityPrivateKey 1
#include "java/security/PrivateKey.h"

/*!
 @brief Base interface for an XMSS private key
 */
@protocol OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey < OrgBouncycastlePqcJcajceInterfacesXMSSKey, JavaSecurityPrivateKey, JavaObject >

/*!
 @brief Return the index of the next signature.
 @return the index number for the next signature.
 */
- (jlong)getIndex;

/*!
 @brief Return the number of usages left for the private key.
 @return the number of times the key can be used before it is exhausted.
 */
- (jlong)getUsagesRemaining;

/*!
 @brief Return a key representing a shard of the key space that can be used usageCount times.
 <p>
  Note: this will use the range [index...index + usageCount) for the current key. 
 </p>
 @param usageCount the number of usages the key should have.
 @return a key based on the current key that can be used usageCount times.
 */
- (id<OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey>)extractKeyShardWithInt:(jint)usageCount;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcJcajceInterfacesXMSSPrivateKey")

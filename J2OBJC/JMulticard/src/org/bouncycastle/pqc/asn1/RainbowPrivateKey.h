//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/asn1/RainbowPrivateKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcAsn1RainbowPrivateKey")
#ifdef RESTRICT_OrgBouncycastlePqcAsn1RainbowPrivateKey
#define INCLUDE_ALL_OrgBouncycastlePqcAsn1RainbowPrivateKey 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcAsn1RainbowPrivateKey 1
#endif
#undef RESTRICT_OrgBouncycastlePqcAsn1RainbowPrivateKey

#if !defined (OrgBouncycastlePqcAsn1RainbowPrivateKey_) && (INCLUDE_ALL_OrgBouncycastlePqcAsn1RainbowPrivateKey || defined(INCLUDE_OrgBouncycastlePqcAsn1RainbowPrivateKey))
#define OrgBouncycastlePqcAsn1RainbowPrivateKey_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

@class IOSIntArray;
@class IOSObjectArray;
@class IOSShortArray;
@class OrgBouncycastleAsn1ASN1Integer;
@class OrgBouncycastleAsn1ASN1Primitive;

/*!
 @brief Return the key data to encode in the PrivateKeyInfo structure.
 <p>
  The ASN.1 definition of the key structure is 
 @code

    RainbowPrivateKey ::= SEQUENCE {
          CHOICE
          {
          oid        OBJECT IDENTIFIER         -- OID identifying the algorithm
          version    INTEGER                    -- 0
          }
      A1inv      SEQUENCE OF OCTET STRING  -- inversed matrix of L1
      b1         OCTET STRING              -- translation vector of L1
      A2inv      SEQUENCE OF OCTET STRING  -- inversed matrix of L2
      b2         OCTET STRING              -- translation vector of L2
      vi         OCTET STRING              -- num of elmts in each Set S
      layers     SEQUENCE OF Layer         -- layers of F
    }
    Layer             ::= SEQUENCE OF Poly
    Poly              ::= SEQUENCE {
      alpha      SEQUENCE OF OCTET STRING
      beta       SEQUENCE OF OCTET STRING
      gamma      OCTET STRING
      eta        INTEGER
    } 
  
@endcode
 */
@interface OrgBouncycastlePqcAsn1RainbowPrivateKey : OrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithShortArray2:(IOSObjectArray *)invA1
                     withShortArray:(IOSShortArray *)b1
                    withShortArray2:(IOSObjectArray *)invA2
                     withShortArray:(IOSShortArray *)b2
                       withIntArray:(IOSIntArray *)vi
withOrgBouncycastlePqcCryptoRainbowLayerArray:(IOSObjectArray *)layers;

/*!
 @brief Getter for the translation part of the private quadratic map L1.
 @return b1 the translation part of L1
 */
- (IOSShortArray *)getB1;

/*!
 @brief Getter for the translation part of the private quadratic map L2.
 @return b2 the translation part of L2
 */
- (IOSShortArray *)getB2;

+ (OrgBouncycastlePqcAsn1RainbowPrivateKey *)getInstanceWithId:(id)o;

/*!
 @brief Getter for the inverse matrix of A1.
 @return the A1inv inverse
 */
- (IOSObjectArray *)getInvA1;

/*!
 @brief Getter for the inverse matrix of A2
 @return the A2inv
 */
- (IOSObjectArray *)getInvA2;

/*!
 @brief Returns the layers contained in the private key
 @return layers
 */
- (IOSObjectArray *)getLayers;

- (OrgBouncycastleAsn1ASN1Integer *)getVersion;

/*!
 @brief Returns the array of vi-s
 @return the vi
 */
- (IOSIntArray *)getVi;

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcAsn1RainbowPrivateKey)

FOUNDATION_EXPORT void OrgBouncycastlePqcAsn1RainbowPrivateKey_initWithShortArray2_withShortArray_withShortArray2_withShortArray_withIntArray_withOrgBouncycastlePqcCryptoRainbowLayerArray_(OrgBouncycastlePqcAsn1RainbowPrivateKey *self, IOSObjectArray *invA1, IOSShortArray *b1, IOSObjectArray *invA2, IOSShortArray *b2, IOSIntArray *vi, IOSObjectArray *layers);

FOUNDATION_EXPORT OrgBouncycastlePqcAsn1RainbowPrivateKey *new_OrgBouncycastlePqcAsn1RainbowPrivateKey_initWithShortArray2_withShortArray_withShortArray2_withShortArray_withIntArray_withOrgBouncycastlePqcCryptoRainbowLayerArray_(IOSObjectArray *invA1, IOSShortArray *b1, IOSObjectArray *invA2, IOSShortArray *b2, IOSIntArray *vi, IOSObjectArray *layers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcAsn1RainbowPrivateKey *create_OrgBouncycastlePqcAsn1RainbowPrivateKey_initWithShortArray2_withShortArray_withShortArray2_withShortArray_withIntArray_withOrgBouncycastlePqcCryptoRainbowLayerArray_(IOSObjectArray *invA1, IOSShortArray *b1, IOSObjectArray *invA2, IOSShortArray *b2, IOSIntArray *vi, IOSObjectArray *layers);

FOUNDATION_EXPORT OrgBouncycastlePqcAsn1RainbowPrivateKey *OrgBouncycastlePqcAsn1RainbowPrivateKey_getInstanceWithId_(id o);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcAsn1RainbowPrivateKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcAsn1RainbowPrivateKey")

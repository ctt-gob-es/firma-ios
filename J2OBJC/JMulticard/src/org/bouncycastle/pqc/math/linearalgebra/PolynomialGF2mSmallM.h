//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM")
#ifdef RESTRICT_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM

#if !defined (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_) && (INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM || defined(INCLUDE_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM))
#define OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_

@class IOSByteArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcMathLinearalgebraGF2mField;
@class OrgBouncycastlePqcMathLinearalgebraGF2mVector;

/*!
 @brief This class describes operations with polynomials from the ring R =
  GF(2^m)[X], where 2 &lt;= m &lt;=31.
 - seealso: GF2mField
 - seealso: PolynomialRingGF2m
 */
@interface OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM : NSObject

#pragma mark Public

/*!
 @brief Construct the zero polynomial over the finite field GF(2^m).
 @param field the finite field GF(2^m)
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field;

/*!
 @brief Create a polynomial over the finite field GF(2^m).
 @param field the finite field GF(2^m)
 @param enc byte[] polynomial in byte array form
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                       withByteArray:(IOSByteArray *)enc;

/*!
 @brief Construct a monomial of the given degree over the finite field GF(2^m).
 @param field the finite field GF(2^m)
 @param degree the degree of the monomial
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                             withInt:(jint)degree;

/*!
 @brief Construct a polynomial over the finite field GF(2^m).
 @param field the finite field GF(2^m)
 @param deg degree of polynomial
 @param typeOfPolynomial type of polynomial
 @param sr PRNG
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                             withInt:(jint)deg
                                                            withChar:(jchar)typeOfPolynomial
                                        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)sr;

/*!
 @brief Construct the polynomial over the given finite field GF(2^m) from the
  given coefficient vector.
 @param field finite field GF2m
 @param coeffs the coefficient vector
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                        withIntArray:(IOSIntArray *)coeffs;

/*!
 @brief Create a polynomial over the finite field GF(2^m) out of the given
  coefficient vector.The finite field is also obtained from the 
 <code>GF2mVector</code>.
 @param vect the coefficient vector
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector:(OrgBouncycastlePqcMathLinearalgebraGF2mVector *)vect;

/*!
 @brief Copy constructor.
 @param other another <code>PolynomialGF2mSmallM</code>
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)other;

/*!
 @brief Compute the sum of this polynomial and the given polynomial.
 @param addend the addend
 @return <tt>this + a</tt> (newly created)
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)addWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)addend;

/*!
 @brief Compute the sum of this polynomial and the monomial of the given degree.
 @param degree the degree of the monomial
 @return <tt>this + X^k</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)addMonomialWithInt:(jint)degree;

/*!
 @brief Add the given polynomial to this polynomial (overwrite this).
 @param addend the addend
 */
- (void)addToThisWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)addend;

/*!
 @brief Divide this polynomial by the given polynomial.
 @param f a polynomial
 @return polynomial pair = {q,r} where this = q*f+r and deg(r) &lt;
          deg(f);
 */
- (IOSObjectArray *)divWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)f;

/*!
 @brief checks if given object is equal to this polynomial.
 <p>
  The method returns false whenever the given object is not polynomial over
  GF(2^m).
 @param other object
 @return true or false
 */
- (jboolean)isEqual:(id)other;

/*!
 @brief Evaluate this polynomial <tt>p</tt> at a value <tt>e</tt> (in 
 <tt>GF(2^m)</tt>) with the Horner scheme.
 @param e the element of the finite field GF(2^m)
 @return <tt>this(e)</tt>
 */
- (jint)evaluateAtWithInt:(jint)e;

/*!
 @brief Return the greatest common divisor of this and a polynomial <i>f</i>
 @param f polynomial
 @return GCD(this, f)
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)gcdWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)f;

/*!
 @brief Return the coefficient with the given index.
 @param index the index
 @return the coefficient with the given index
 */
- (jint)getCoefficientWithInt:(jint)index;

/*!
 @brief Return the degree of this polynomial
 @return int degree of this polynomial if this is zero polynomial return
          -1
 */
- (jint)getDegree;

/*!
 @brief Returns encoded polynomial, i.e., this polynomial in byte array form
 @return the encoded polynomial
 */
- (IOSByteArray *)getEncoded;

/*!
 @return the head coefficient of this polynomial
 */
- (jint)getHeadCoefficient;

/*!
 @return the hash code of this polynomial
 */
- (NSUInteger)hash;

/*!
 @brief Reduce this polynomial modulo another polynomial.
 @param f the reduction polynomial
 @return <tt>this mod f</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)f;

/*!
 @brief Compute the result of the division of this polynomial by another
  polynomial modulo a third polynomial.
 @param divisor the divisor
 @param modulus the reduction polynomial
 @return <tt>this * divisor^(-1) mod modulus</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modDivWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)divisor
                                                                   withOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modulus;

/*!
 @brief Compute the inverse of this polynomial modulo the given polynomial.
 @param a the reduction polynomial
 @return <tt>this^(-1) mod a</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modInverseWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)a;

/*!
 @brief Compute the product of this polynomial and another polynomial modulo a
  third polynomial.
 @param a another polynomial
 @param b the reduction polynomial
 @return <tt>this * a mod b</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modMultiplyWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)a
                                                                        withOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)b;

/*!
 @brief Compute a polynomial pair (a,b) from this polynomial and the given
  polynomial g with the property b*this = a mod g and deg(a)&lt;=deg(g)/2.
 @param g the reduction polynomial
 @return PolynomialGF2mSmallM[] {a,b} with b*this = a mod g and deg(a)&lt;=
          deg(g)/2
 */
- (IOSObjectArray *)modPolynomialToFractonWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)g;

/*!
 @brief Square this polynomial using a squaring matrix.
 @param matrix the squaring matrix
 @return <tt>this^2</tt> modulo the reduction polynomial implicitly
          given via the squaring matrix
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modSquareMatrixWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray:(IOSObjectArray *)matrix;

/*!
 @brief Compute the square root of this polynomial modulo the given polynomial.
 @param a the reduction polynomial
 @return <tt>this^(1/2) mod a</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modSquareRootWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)a;

/*!
 @brief Compute the square root of this polynomial using a square root matrix.
 @param matrix the matrix for computing square roots in                
  <tt> (GF(2^m))^t </tt>  the polynomial ring defining the                square root matrix
 @return <tt>this^(1/2)</tt> modulo the reduction polynomial implicitly
          given via the square root matrix
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)modSquareRootMatrixWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallMArray:(IOSObjectArray *)matrix;

/*!
 @brief Compute the product of this polynomial and the given factor using a
  Karatzuba like scheme.
 @param factor the polynomial
 @return <tt>this * factor</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)multiplyWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM:(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)factor;

/*!
 @brief Multiply this polynomial with an element from GF(2^m).
 @param element an element of the finite field GF(2^m)
 @throw ArithmeticExceptionif <tt>element</tt> is not an element of the finite
  field this polynomial is defined over.
 */
- (void)multThisWithElementWithInt:(jint)element;

/*!
 @brief Compute the product of this polynomial with an element from GF(2^m).
 @param element an element of the finite field GF(2^m)
 @return <tt>this * element</tt> (newly created)
 @throw ArithmeticExceptionif <tt>element</tt> is not an element of the finite
  field this polynomial is defined over.
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)multWithElementWithInt:(jint)element;

/*!
 @brief Compute the product of this polynomial with a monomial X^k.
 @param k the degree of the monomial
 @return <tt>this * X^k</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *)multWithMonomialWithInt:(jint)k;

/*!
 @brief Returns a human readable form of the polynomial.
 @return a human readable form of the polynomial.
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM)

/*!
 @brief Constant used for polynomial construction (see constructor 
 <code>PolynomialGF2mSmallM(GF2mField, int, char, SecureRandom)</code>).
 */
inline jchar OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_get_RANDOM_IRREDUCIBLE_POLYNOMIAL(void);
#define OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_RANDOM_IRREDUCIBLE_POLYNOMIAL 'I'
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM, RANDOM_IRREDUCIBLE_POLYNOMIAL, jchar)

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *new_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *create_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withInt_withChar_withJavaSecuritySecureRandom_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, jint deg, jchar typeOfPolynomial, JavaSecuritySecureRandom *sr);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *new_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withInt_withChar_withJavaSecuritySecureRandom_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, jint deg, jchar typeOfPolynomial, JavaSecuritySecureRandom *sr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *create_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withInt_withChar_withJavaSecuritySecureRandom_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, jint deg, jchar typeOfPolynomial, JavaSecuritySecureRandom *sr);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withInt_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, jint degree);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *new_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withInt_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, jint degree) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *create_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withInt_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, jint degree);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *coeffs);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *new_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *coeffs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *create_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *coeffs);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *enc);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *new_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *enc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *create_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *enc);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *self, OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *other);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *new_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *create_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *other);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *self, OrgBouncycastlePqcMathLinearalgebraGF2mVector *vect);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *new_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *vect) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM *create_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *vect);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialGF2mSmallM")

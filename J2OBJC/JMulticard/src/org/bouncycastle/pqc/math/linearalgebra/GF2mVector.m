//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2mVector.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuffer.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2mField.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2mVector.h"
#include "org/bouncycastle/pqc/math/linearalgebra/IntUtils.h"
#include "org/bouncycastle/pqc/math/linearalgebra/Permutation.h"
#include "org/bouncycastle/pqc/math/linearalgebra/Vector.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/math/linearalgebra/GF2mVector must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcMathLinearalgebraGF2mVector () {
 @public
  /*!
   @brief the finite field this vector is defined over
   */
  OrgBouncycastlePqcMathLinearalgebraGF2mField *field_;
  /*!
   @brief the element array
   */
  IOSIntArray *vector_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathLinearalgebraGF2mVector, field_, OrgBouncycastlePqcMathLinearalgebraGF2mField *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathLinearalgebraGF2mVector, vector_, IOSIntArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2mVector.java"


#line 11
@implementation OrgBouncycastlePqcMathLinearalgebraGF2mVector


#line 32
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                       withByteArray:(IOSByteArray *)v {
  OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(self, field, v);
  return self;
}


#line 75
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                        withIntArray:(IOSIntArray *)vector {
  OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(self, field, vector);
  return self;
}


#line 95
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector:(OrgBouncycastlePqcMathLinearalgebraGF2mVector *)other {
  OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(self, other);
  return self;
}


#line 105
- (OrgBouncycastlePqcMathLinearalgebraGF2mField *)getField {
  
#line 107
  return field_;
}


#line 113
- (IOSIntArray *)getIntArrayForm {
  
#line 115
  return OrgBouncycastlePqcMathLinearalgebraIntUtils_cloneWithIntArray_(vector_);
}


#line 121
- (IOSByteArray *)getEncoded {
  
#line 124
  jint d = 8;
  jint count = 1;
  while ([((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(field_)) getDegree] > d) {
    
#line 128
    count++;
    d += 8;
  }
  
#line 132
  IOSByteArray *res = [IOSByteArray newArrayWithLength:((IOSIntArray *) nil_chk(vector_))->size_ * count];
  count = 0;
  for (jint i = 0; i < vector_->size_; i++) {
    
#line 136
    for (jint j = 0; j < d; j += 8) {
      
#line 138
      *IOSByteArray_GetRef(res, count++) = (jbyte) (JreURShift32(IOSIntArray_Get(vector_, i), j));
    }
  }
  
#line 142
  return res;
}


#line 148
- (jboolean)isZero {
  
#line 151
  for (jint i = ((IOSIntArray *) nil_chk(vector_))->size_ - 1; i >= 0; i--) {
    
#line 153
    if (IOSIntArray_Get(vector_, i) != 0) {
      
#line 155
      return false;
    }
  }
  return true;
}


#line 171
- (OrgBouncycastlePqcMathLinearalgebraVector *)addWithOrgBouncycastlePqcMathLinearalgebraVector:(OrgBouncycastlePqcMathLinearalgebraVector *)addend {
  
#line 174
  @throw new_JavaLangRuntimeException_initWithNSString_(@"not implemented");
}


#line 183
- (OrgBouncycastlePqcMathLinearalgebraVector *)multiplyWithOrgBouncycastlePqcMathLinearalgebraPermutation:(OrgBouncycastlePqcMathLinearalgebraPermutation *)p {
  
#line 186
  IOSIntArray *pVec = [((OrgBouncycastlePqcMathLinearalgebraPermutation *) nil_chk(p)) getVector];
  if (length_ != ((IOSIntArray *) nil_chk(pVec))->size_) {
    
#line 189
    @throw new_JavaLangArithmeticException_initWithNSString_(
#line 190
    @"permutation size and vector size mismatch");
  }
  
#line 193
  IOSIntArray *result = [IOSIntArray newArrayWithLength:length_];
  for (jint i = 0; i < pVec->size_; i++) {
    
#line 196
    *IOSIntArray_GetRef(result, i) = IOSIntArray_Get(nil_chk(vector_), IOSIntArray_Get(pVec, i));
  }
  
#line 199
  return new_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(field_, result);
}


#line 208
- (jboolean)isEqual:(id)other {
  
#line 212
  if (!([other isKindOfClass:[OrgBouncycastlePqcMathLinearalgebraGF2mVector class]])) {
    
#line 214
    return false;
  }
  OrgBouncycastlePqcMathLinearalgebraGF2mVector *otherVec = (OrgBouncycastlePqcMathLinearalgebraGF2mVector *) cast_chk(other, [OrgBouncycastlePqcMathLinearalgebraGF2mVector class]);
  
#line 218
  if (![((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(field_)) isEqual:((OrgBouncycastlePqcMathLinearalgebraGF2mVector *) nil_chk(otherVec))->field_]) {
    
#line 220
    return false;
  }
  
#line 223
  return OrgBouncycastlePqcMathLinearalgebraIntUtils_equalsWithIntArray_withIntArray_(vector_, otherVec->vector_);
}

- (NSUInteger)hash {
  
#line 232
  jint hash_ = ((jint) [((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(self->field_)) hash]);
  hash_ = hash_ * 31 + OrgBouncycastleUtilArrays_hashCodeWithIntArray_(vector_);
  return hash_;
}


#line 240
- (NSString *)description {
  
#line 243
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(vector_))->size_; i++) {
    
#line 246
    for (jint j = 0; j < [((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(field_)) getDegree]; j++) {
      
#line 248
      jint r = j & (jint) 0x1f;
      jint bitMask = JreLShift32(1, r);
      jint coeff = IOSIntArray_Get(nil_chk(vector_), i) & bitMask;
      if (coeff != 0) {
        
#line 253
        (void) [buf appendWithChar:'1'];
      }
      else {
        
#line 257
        (void) [buf appendWithChar:'0'];
      }
    }
    (void) [buf appendWithChar:' '];
  }
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathLinearalgebraGF2mField;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathLinearalgebraVector;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathLinearalgebraVector;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:withByteArray:);
  methods[1].selector = @selector(initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:withIntArray:);
  methods[2].selector = @selector(initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector:);
  methods[3].selector = @selector(getField);
  methods[4].selector = @selector(getIntArrayForm);
  methods[5].selector = @selector(getEncoded);
  methods[6].selector = @selector(isZero);
  methods[7].selector = @selector(addWithOrgBouncycastlePqcMathLinearalgebraVector:);
  methods[8].selector = @selector(multiplyWithOrgBouncycastlePqcMathLinearalgebraPermutation:);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LOrgBouncycastlePqcMathLinearalgebraGF2mField;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "vector_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcMathLinearalgebraGF2mField;[B", "LOrgBouncycastlePqcMathLinearalgebraGF2mField;[I", "LOrgBouncycastlePqcMathLinearalgebraGF2mVector;", "add", "LOrgBouncycastlePqcMathLinearalgebraVector;", "multiply", "LOrgBouncycastlePqcMathLinearalgebraPermutation;", "equals", "LNSObject;", "hashCode", "toString" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcMathLinearalgebraGF2mVector = { "GF2mVector", "org.bouncycastle.pqc.math.linearalgebra", ptrTable, methods, fields, 7, 0x1, 12, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcMathLinearalgebraGF2mVector;
}

@end


#line 32
void OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *v) {
  OrgBouncycastlePqcMathLinearalgebraVector_init(self);
  self->field_ = new_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(field);
  
#line 37
  jint d = 8;
  jint count = 1;
  while ([((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(field)) getDegree] > d) {
    
#line 41
    count++;
    d += 8;
  }
  
#line 45
  if ((JreIntMod(((IOSByteArray *) nil_chk(v))->size_, count)) != 0) {
    
#line 47
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 48
    @"Byte array is not an encoded vector over the given finite field.");
  }
  
#line 51
  self->length_ = JreIntDiv(v->size_, count);
  self->vector_ = [IOSIntArray newArrayWithLength:self->length_];
  count = 0;
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(self->vector_))->size_; i++) {
    
#line 56
    for (jint j = 0; j < d; j += 8) {
      
#line 58
      *IOSIntArray_GetRef(self->vector_, i) |= JreLShift32((IOSByteArray_Get(v, count++) & (jint) 0xff), j);
    }
    if (![field isElementOfThisFieldWithInt:IOSIntArray_Get(self->vector_, i)]) {
      
#line 62
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 63
      @"Byte array is not an encoded vector over the given finite field.");
    }
  }
}


#line 32
OrgBouncycastlePqcMathLinearalgebraGF2mVector *new_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *v) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mVector, initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_, field, v)
}


#line 32
OrgBouncycastlePqcMathLinearalgebraGF2mVector *create_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *v) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mVector, initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_, field, v)
}


#line 75
void OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *vector) {
  OrgBouncycastlePqcMathLinearalgebraVector_init(self);
  self->field_ = field;
  self->length_ = ((IOSIntArray *) nil_chk(vector))->size_;
  for (jint i = vector->size_ - 1; i >= 0; i--) {
    
#line 81
    if (![((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(field)) isElementOfThisFieldWithInt:IOSIntArray_Get(vector, i)]) {
      
#line 83
      @throw new_JavaLangArithmeticException_initWithNSString_(
#line 84
      @"Element array is not specified over the given finite field.");
    }
  }
  self->vector_ = OrgBouncycastlePqcMathLinearalgebraIntUtils_cloneWithIntArray_(vector);
}


#line 75
OrgBouncycastlePqcMathLinearalgebraGF2mVector *new_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *vector) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mVector, initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_, field, vector)
}


#line 75
OrgBouncycastlePqcMathLinearalgebraGF2mVector *create_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *vector) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mVector, initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_, field, vector)
}


#line 95
void OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *self, OrgBouncycastlePqcMathLinearalgebraGF2mVector *other) {
  OrgBouncycastlePqcMathLinearalgebraVector_init(self);
  self->field_ = new_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(((OrgBouncycastlePqcMathLinearalgebraGF2mVector *) nil_chk(other))->field_);
  self->length_ = other->length_;
  self->vector_ = OrgBouncycastlePqcMathLinearalgebraIntUtils_cloneWithIntArray_(other->vector_);
}


#line 95
OrgBouncycastlePqcMathLinearalgebraGF2mVector *new_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *other) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mVector, initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_, other)
}


#line 95
OrgBouncycastlePqcMathLinearalgebraGF2mVector *create_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *other) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mVector, initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_, other)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcMathLinearalgebraGF2mVector)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomialField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField")
#ifdef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField

#if !defined (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_) && (INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField || defined(INCLUDE_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField))
#define OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_

#define RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nField 1
#define INCLUDE_OrgBouncycastlePqcMathLinearalgebraGF2nField 1
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nField.h"

@class IOSIntArray;
@class IOSObjectArray;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcMathLinearalgebraGF2Polynomial;
@class OrgBouncycastlePqcMathLinearalgebraGF2nElement;

/*!
 @brief This class implements the abstract class <tt>GF2nField</tt> for polynomial
  representation.It computes the field polynomial and the squaring matrix.
 GF2nField is used by GF2nPolynomialElement which implements the elements of
  this field.
 - seealso: GF2nField
 - seealso: GF2nPolynomialElement
 */
@interface OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField : OrgBouncycastlePqcMathLinearalgebraGF2nField {
 @public
  /*!
   @brief Matrix used for fast squaring
   */
  IOSObjectArray *squaringMatrix_;
}

#pragma mark Public

/*!
 @brief constructs an instance of the finite field with 2<sup>deg</sup>
  elements and characteristic 2.
 @param deg the extention degree of this field
 @param random source of randomness for generating new polynomials.
 */
- (instancetype)initWithInt:(jint)deg
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

/*!
 @brief constructs an instance of the finite field with 2<sup>deg</sup>
  elements and characteristic 2.
 @param deg the degree of this field
 @param random source of randomness for generating new polynomials.
 @param file true if you want to read the field polynomial from the              file false if you want to use a random fielpolynomial
               (this can take very long for huge degrees)
 */
- (instancetype)initWithInt:(jint)deg
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                withBoolean:(jboolean)file;

/*!
 @brief Creates a new GF2nField of degree <i>i</i> and uses the given 
 <i>polynomial</i> as field polynomial.The <i>polynomial</i> is checked
  whether it is irreducible.
 This can take some time if <i>i</i> is huge!
 @param deg degree of the GF2nField
 @param random source of randomness for generating new polynomials.
 @param polynomial the field polynomial to use
 */
- (instancetype)initWithInt:(jint)deg
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)polynomial;

/*!
 @brief Returns the degree of the middle coefficients of the used field
  pentanomial (x^n + x^(getPc()[2]) + x^(getPc()[1]) + x^(getPc()[0]) + 1).
 @return the middle coefficients of the used field pentanomial
 */
- (IOSIntArray *)getPc;

/*!
 @brief Return row vector i of the squaring matrix.
 @param i the index of the row vector to return
 @return a copy of squaringMatrix[i]
 - seealso: GF2nPolynomialElement#squareMatrix
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)getSquaringVectorWithInt:(jint)i;

/*!
 @brief Returns the degree of the middle coefficient of the used field trinomial
  (x^n + x^(getTc()) + 1).
 @return the middle coefficient of the used field trinomial
 */
- (jint)getTc;

/*!
 @brief Returns true if the field polynomial is a pentanomial.The coefficients
  can be retrieved using getPc().
 @return true if the field polynomial is a pentanomial
 */
- (jboolean)isPentanomial;

/*!
 @brief Returns true if the field polynomial is a trinomial.The coefficient can
  be retrieved using getTc().
 @return true if the field polynomial is a trinomial
 */
- (jboolean)isTrinomial;

#pragma mark Protected

/*!
 @brief Computes the change-of-basis matrix for basis conversion according to
  1363.The result is stored in the lists fields and matrices.
 @param B1 the GF2nField to convert to
 - seealso: "P1363 A.7.3, p111ff"
 */
- (void)computeCOBMatrixWithOrgBouncycastlePqcMathLinearalgebraGF2nField:(OrgBouncycastlePqcMathLinearalgebraGF2nField *)B1;

/*!
 @brief Computes the field polynomial.This can take a long time for big degrees.
 */
- (void)computeFieldPolynomial;

/*!
 @brief Computes the field polynomial.This can take a long time for big degrees.
 */
- (void)computeFieldPolynomial2;

/*!
 @brief Compute a random root of the given GF2Polynomial.
 @param polynomial the polynomial
 @return a random root of <tt>polynomial</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nElement *)getRandomRootWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)polynomial;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, squaringMatrix_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self, jint deg, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_(jint deg, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_(jint deg, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withBoolean_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self, jint deg, JavaSecuritySecureRandom *random, jboolean file);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withBoolean_(jint deg, JavaSecuritySecureRandom *random, jboolean file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withBoolean_(jint deg, JavaSecuritySecureRandom *random, jboolean file);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self, jint deg, JavaSecuritySecureRandom *random, OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(jint deg, JavaSecuritySecureRandom *random, OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(jint deg, JavaSecuritySecureRandom *random, OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField")

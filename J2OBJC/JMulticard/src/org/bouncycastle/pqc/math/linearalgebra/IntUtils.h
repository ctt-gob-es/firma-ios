//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/IntUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraIntUtils")
#ifdef RESTRICT_OrgBouncycastlePqcMathLinearalgebraIntUtils
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraIntUtils 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraIntUtils 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathLinearalgebraIntUtils

#if !defined (OrgBouncycastlePqcMathLinearalgebraIntUtils_) && (INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraIntUtils || defined(INCLUDE_OrgBouncycastlePqcMathLinearalgebraIntUtils))
#define OrgBouncycastlePqcMathLinearalgebraIntUtils_

@class IOSIntArray;

@interface OrgBouncycastlePqcMathLinearalgebraIntUtils : NSObject

#pragma mark Public

/*!
 @brief Return a clone of the given int array.No null checks are performed.
 @param array the array to clone
 @return the clone of the given array
 */
+ (IOSIntArray *)cloneWithIntArray:(IOSIntArray *)array;

/*!
 @brief Compare two int arrays.No null checks are performed.
 @param left the first int array
 @param right the second int array
 @return the result of the comparison
 */
+ (jboolean)equalsWithIntArray:(IOSIntArray *)left
                  withIntArray:(IOSIntArray *)right;

/*!
 @brief Fill the given int array with the given value.
 @param array the array
 @param value the value
 */
+ (void)fillWithIntArray:(IOSIntArray *)array
                 withInt:(jint)value;

/*!
 @brief Sorts this array of integers according to the Quicksort algorithm.After
  calling this method this array is sorted in ascending order with the
  smallest integer taking position 0 in the array.
 <p>
  This implementation is based on the quicksort algorithm as described in 
 <code>Data Structures In Java</code> by Thomas A. Standish, Chapter 10,
  ISBN 0-201-30564-X.
 @param source the array of integers that needs to be sorted.
 */
+ (void)quicksortWithIntArray:(IOSIntArray *)source;

/*!
 @brief Sort a subarray of a source array.The subarray is specified by its start
  and end index.
 @param source the int array to be sorted
 @param left the start index of the subarray
 @param right the end index of the subarray
 */
+ (void)quicksortWithIntArray:(IOSIntArray *)source
                      withInt:(jint)left
                      withInt:(jint)right;

/*!
 @brief Generates a subarray of a given int array.
 @param input -               the input int array
 @param start -               the start index
 @param end -               the end index
 @return a subarray of <tt>input</tt>, ranging from <tt>start</tt> to
          <tt>end</tt>
 */
+ (IOSIntArray *)subArrayWithIntArray:(IOSIntArray *)input
                              withInt:(jint)start
                              withInt:(jint)end;

/*!
 @param input an int arary
 @return the int array as hex string
 */
+ (NSString *)toHexStringWithIntArray:(IOSIntArray *)input;

/*!
 @param input an int array
 @return a human readable form of the given int array
 */
+ (NSString *)toStringWithIntArray:(IOSIntArray *)input;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathLinearalgebraIntUtils)

FOUNDATION_EXPORT jboolean OrgBouncycastlePqcMathLinearalgebraIntUtils_equalsWithIntArray_withIntArray_(IOSIntArray *left, IOSIntArray *right);

FOUNDATION_EXPORT IOSIntArray *OrgBouncycastlePqcMathLinearalgebraIntUtils_cloneWithIntArray_(IOSIntArray *array);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraIntUtils_fillWithIntArray_withInt_(IOSIntArray *array, jint value);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraIntUtils_quicksortWithIntArray_(IOSIntArray *source);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraIntUtils_quicksortWithIntArray_withInt_withInt_(IOSIntArray *source, jint left, jint right);

FOUNDATION_EXPORT IOSIntArray *OrgBouncycastlePqcMathLinearalgebraIntUtils_subArrayWithIntArray_withInt_withInt_(IOSIntArray *input, jint start, jint end);

FOUNDATION_EXPORT NSString *OrgBouncycastlePqcMathLinearalgebraIntUtils_toStringWithIntArray_(IOSIntArray *input);

FOUNDATION_EXPORT NSString *OrgBouncycastlePqcMathLinearalgebraIntUtils_toHexStringWithIntArray_(IOSIntArray *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathLinearalgebraIntUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraIntUtils")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2mVector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2mVector")
#ifdef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2mVector
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2mVector 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2mVector 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2mVector

#if !defined (OrgBouncycastlePqcMathLinearalgebraGF2mVector_) && (INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2mVector || defined(INCLUDE_OrgBouncycastlePqcMathLinearalgebraGF2mVector))
#define OrgBouncycastlePqcMathLinearalgebraGF2mVector_

#define RESTRICT_OrgBouncycastlePqcMathLinearalgebraVector 1
#define INCLUDE_OrgBouncycastlePqcMathLinearalgebraVector 1
#include "org/bouncycastle/pqc/math/linearalgebra/Vector.h"

@class IOSByteArray;
@class IOSIntArray;
@class OrgBouncycastlePqcMathLinearalgebraGF2mField;
@class OrgBouncycastlePqcMathLinearalgebraPermutation;

/*!
 @brief This class implements vectors over the finite field 
 <tt>GF(2<sup>m</sup>)</tt> for small <tt>m</tt> (i.e., 
 <tt>1&lt;m&lt;32</tt>).It extends the abstract class <code>Vector</code>.
 */
@interface OrgBouncycastlePqcMathLinearalgebraGF2mVector : OrgBouncycastlePqcMathLinearalgebraVector

#pragma mark Public

/*!
 @brief creates the vector over GF(2^m) of given length and with elements from
  array v (beginning at the first bit)
 @param field finite field
 @param v array with elements of vector
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                       withByteArray:(IOSByteArray *)v;

/*!
 @brief Create a new vector over <tt>GF(2<sup>m</sup>)</tt> of the given
  length and element array.
 @param field the finite field  <tt> GF(2 <sup> m </sup> ) </tt>
 @param vector the element array
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field
                                                        withIntArray:(IOSIntArray *)vector;

/*!
 @brief Copy constructor.
 @param other another <code>GF2mVector</code>
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector:(OrgBouncycastlePqcMathLinearalgebraGF2mVector *)other;

/*!
 @brief Add another vector to this vector.Method is not yet implemented.
 @param addend the other vector
 @return <tt>this + addend</tt>
 @throw ArithmeticExceptionif the other vector is not defined over the same field as
  this vector. 
 <p>
  TODO: implement this method
 */
- (OrgBouncycastlePqcMathLinearalgebraVector *)addWithOrgBouncycastlePqcMathLinearalgebraVector:(OrgBouncycastlePqcMathLinearalgebraVector *)addend;

/*!
 @brief Compare this vector with another object.
 @param other the other object
 @return the result of the comparison
 */
- (jboolean)isEqual:(id)other;

/*!
 @return a byte array encoding of this vector
 */
- (IOSByteArray *)getEncoded;

/*!
 @return the finite field this vector is defined over
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2mField *)getField;

/*!
 @return int[] form of this vector
 */
- (IOSIntArray *)getIntArrayForm;

/*!
 @return the hash code of this vector
 */
- (NSUInteger)hash;

/*!
 @return whether this is the zero vector (i.e., all elements are zero)
 */
- (jboolean)isZero;

/*!
 @brief Multiply this vector with a permutation.
 @param p the permutation
 @return <tt>this*p = p*this</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraVector *)multiplyWithOrgBouncycastlePqcMathLinearalgebraPermutation:(OrgBouncycastlePqcMathLinearalgebraPermutation *)p;

/*!
 @return a human readable form of this vector
 */
- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathLinearalgebraGF2mVector)

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *v);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2mVector *new_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2mVector *create_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSByteArray *v);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *vector);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2mVector *new_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *vector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2mVector *create_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_withIntArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field, IOSIntArray *vector);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *self, OrgBouncycastlePqcMathLinearalgebraGF2mVector *other);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2mVector *new_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2mVector *create_OrgBouncycastlePqcMathLinearalgebraGF2mVector_initWithOrgBouncycastlePqcMathLinearalgebraGF2mVector_(OrgBouncycastlePqcMathLinearalgebraGF2mVector *other);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathLinearalgebraGF2mVector)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2mVector")

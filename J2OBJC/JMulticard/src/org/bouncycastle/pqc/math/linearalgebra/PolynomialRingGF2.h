//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2")
#ifdef RESTRICT_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2

#if !defined (OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_) && (INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 || defined(INCLUDE_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2))
#define OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_

/*!
 @brief This class describes operations with polynomials over finite field GF(2), i e
  polynomial ring R = GF(2)[X].All operations are defined only for polynomials
  with degree &lt;=32.
 For the polynomial representation the map f: R-&gt;Z,
  poly(X)-&gt;poly(2) is used, where integers have the binary representation. For
  example: X^7+X^3+X+1 -&gt; (00...0010001011)=139 Also for polynomials type
  Integer is used.
 - seealso: GF2mField
 */
@interface OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2 : NSObject

#pragma mark Public

/*!
 @brief Return sum of two polyomials
 @param p polynomial
 @param q polynomial
 @return p+q
 */
+ (jint)addWithInt:(jint)p
           withInt:(jint)q;

/*!
 @brief Return the degree of a polynomial
 @param p polynomial p
 @return degree(p)
 */
+ (jint)degreeWithInt:(jint)p;

/*!
 @brief Return the degree of a polynomial
 @param p polynomial p
 @return degree(p)
 */
+ (jint)degreeWithLong:(jlong)p;

/*!
 @brief Return the greatest common divisor of two polynomials
 @param p polinomial
 @param q polinomial
 @return GCD(p, q)
 */
+ (jint)gcdWithInt:(jint)p
           withInt:(jint)q;

/*!
 @brief Creates irreducible polynomial with degree d
 @param deg polynomial degree
 @return irreducible polynomial p
 */
+ (jint)getIrreduciblePolynomialWithInt:(jint)deg;

/*!
 @brief Checking polynomial for irreducibility
 @param p polinomial
 @return true if p is irreducible and false otherwise
 */
+ (jboolean)isIrreducibleWithInt:(jint)p;

/*!
 @brief Compute the product of two polynomials modulo a third polynomial.
 @param a the first polynomial
 @param b the second polynomial
 @param r the reduction polynomial
 @return <tt>a * b mod r</tt>
 */
+ (jint)modMultiplyWithInt:(jint)a
                   withInt:(jint)b
                   withInt:(jint)r;

/*!
 @brief Return product of two polynomials
 @param p polynomial
 @param q polynomial
 @return p*q
 */
+ (jlong)multiplyWithInt:(jint)p
                 withInt:(jint)q;

/*!
 @brief Return the remainder of a polynomial division of two polynomials.
 @param p dividend
 @param q divisor
 @return <tt>p mod q</tt>
 */
+ (jint)remainderWithInt:(jint)p
                 withInt:(jint)q;

/*!
 @brief Return the rest of devision two polynomials
 @param p polinomial
 @param q polinomial
 @return p mod q
 */
+ (jint)restWithLong:(jlong)p
             withInt:(jint)q;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2)

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_addWithInt_withInt_(jint p, jint q);

FOUNDATION_EXPORT jlong OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_multiplyWithInt_withInt_(jint p, jint q);

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_modMultiplyWithInt_withInt_withInt_(jint a, jint b, jint r);

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(jint p);

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithLong_(jlong p);

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_remainderWithInt_withInt_(jint p, jint q);

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_restWithLong_withInt_(jlong p, jint q);

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_gcdWithInt_withInt_(jint p, jint q);

FOUNDATION_EXPORT jboolean OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(jint p);

FOUNDATION_EXPORT jint OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(jint deg);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2")

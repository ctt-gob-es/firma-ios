//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/ByteUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArrayIndexOutOfBoundsException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/pqc/math/linearalgebra/ByteUtils.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/math/linearalgebra/ByteUtils must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcMathLinearalgebraByteUtils ()

/*!
 @brief Default constructor (private)
 */
- (instancetype)init;

@end

inline IOSCharArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_get_HEX_CHARS(void);
static IOSCharArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_HEX_CHARS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcMathLinearalgebraByteUtils, HEX_CHARS, IOSCharArray *)

__attribute__((unused)) static void OrgBouncycastlePqcMathLinearalgebraByteUtils_init(OrgBouncycastlePqcMathLinearalgebraByteUtils *self);

__attribute__((unused)) static OrgBouncycastlePqcMathLinearalgebraByteUtils *new_OrgBouncycastlePqcMathLinearalgebraByteUtils_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcMathLinearalgebraByteUtils *create_OrgBouncycastlePqcMathLinearalgebraByteUtils_init(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcMathLinearalgebraByteUtils__Annotations$0(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/ByteUtils.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcMathLinearalgebraByteUtils)


#line 8
@implementation OrgBouncycastlePqcMathLinearalgebraByteUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 17
- (instancetype)init {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 29
+ (jboolean)equalsWithByteArray:(IOSByteArray *)left
                  withByteArray:(IOSByteArray *)right {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray_withByteArray_(left, right);
}


#line 59
+ (jboolean)equalsWithByteArray2:(IOSObjectArray *)left
                  withByteArray2:(IOSObjectArray *)right {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray2_withByteArray2_(left, right);
}


#line 82
+ (jboolean)equalsWithByteArray3:(IOSObjectArray *)left
                  withByteArray3:(IOSObjectArray *)right {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray3_withByteArray3_(left, right);
}


#line 112
+ (jint)deepHashCodeWithByteArray:(IOSByteArray *)array {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray_(array);
}


#line 129
+ (jint)deepHashCodeWithByteArray2:(IOSObjectArray *)array {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray2_(array);
}


#line 146
+ (jint)deepHashCodeWithByteArray3:(IOSObjectArray *)array {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray3_(array);
}


#line 164
+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)array {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_cloneWithByteArray_(array);
}


#line 181
+ (IOSByteArray *)fromHexStringWithNSString:(NSString *)s {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_fromHexStringWithNSString_(s);
}


#line 227
+ (NSString *)toHexStringWithByteArray:(IOSByteArray *)input {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_toHexStringWithByteArray_(input);
}


#line 246
+ (NSString *)toHexStringWithByteArray:(IOSByteArray *)input
                          withNSString:(NSString *)prefix
                          withNSString:(NSString *)seperator {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_toHexStringWithByteArray_withNSString_withNSString_(input, prefix, seperator);
}


#line 268
+ (NSString *)toBinaryStringWithByteArray:(IOSByteArray *)input {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_toBinaryStringWithByteArray_(input);
}


#line 296
+ (IOSByteArray *)xor__WithByteArray:(IOSByteArray *)x1
                       withByteArray:(IOSByteArray *)x2 {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_xor__WithByteArray_withByteArray_(x1, x2);
}


#line 315
+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)x1
                             withByteArray:(IOSByteArray *)x2 {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_concatenateWithByteArray_withByteArray_(x1, x2);
}


#line 332
+ (IOSByteArray *)concatenateWithByteArray2:(IOSObjectArray *)array {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_concatenateWithByteArray2_(array);
}


#line 355
+ (IOSObjectArray *)splitWithByteArray:(IOSByteArray *)input
                               withInt:(jint)index {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_splitWithByteArray_withInt_(input, index);
}


#line 379
+ (IOSByteArray *)subArrayWithByteArray:(IOSByteArray *)input
                                withInt:(jint)start
                                withInt:(jint)end {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_subArrayWithByteArray_withInt_withInt_(input, start, end);
}


#line 394
+ (IOSByteArray *)subArrayWithByteArray:(IOSByteArray *)input
                                withInt:(jint)start {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_subArrayWithByteArray_withInt_(input, start);
}


#line 406
+ (IOSCharArray *)toCharArrayWithByteArray:(IOSByteArray *)input {
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_toCharArrayWithByteArray_(input);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 8, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 11, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 13, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 14, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 15, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 15, 6, -1, -1, -1, -1 },
    { NULL, "[[B", 0x9, 16, 17, 18, -1, -1, -1 },
    { NULL, "[B", 0x9, 19, 20, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 19, 17, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 21, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(equalsWithByteArray:withByteArray:);
  methods[2].selector = @selector(equalsWithByteArray2:withByteArray2:);
  methods[3].selector = @selector(equalsWithByteArray3:withByteArray3:);
  methods[4].selector = @selector(deepHashCodeWithByteArray:);
  methods[5].selector = @selector(deepHashCodeWithByteArray2:);
  methods[6].selector = @selector(deepHashCodeWithByteArray3:);
  methods[7].selector = @selector(cloneWithByteArray:);
  methods[8].selector = @selector(fromHexStringWithNSString:);
  methods[9].selector = @selector(toHexStringWithByteArray:);
  methods[10].selector = @selector(toHexStringWithByteArray:withNSString:withNSString:);
  methods[11].selector = @selector(toBinaryStringWithByteArray:);
  methods[12].selector = @selector(xor__WithByteArray:withByteArray:);
  methods[13].selector = @selector(concatenateWithByteArray:withByteArray:);
  methods[14].selector = @selector(concatenateWithByteArray2:);
  methods[15].selector = @selector(splitWithByteArray:withInt:);
  methods[16].selector = @selector(subArrayWithByteArray:withInt:withInt:);
  methods[17].selector = @selector(subArrayWithByteArray:withInt:);
  methods[18].selector = @selector(toCharArrayWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HEX_CHARS", "[C", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
  };
  static const void *ptrTable[] = { "equals", "[B[B", "[[B[[B", "[[[B[[[B", "deepHashCode", "[B", "[[B", "[[[B", "clone", "fromHexString", "LNSString;", "toHexString", "[BLNSString;LNSString;", "toBinaryString", "xor", "concatenate", "split", "[BI", "LJavaLangArrayIndexOutOfBoundsException;", "subArray", "[BII", "toCharArray", &OrgBouncycastlePqcMathLinearalgebraByteUtils_HEX_CHARS, (void *)&OrgBouncycastlePqcMathLinearalgebraByteUtils__Annotations$0 };
  static const J2ObjcClassInfo _OrgBouncycastlePqcMathLinearalgebraByteUtils = { "ByteUtils", "org.bouncycastle.pqc.math.linearalgebra", ptrTable, methods, fields, 7, 0x11, 19, 1, -1, -1, -1, -1, 23 };
  return &_OrgBouncycastlePqcMathLinearalgebraByteUtils;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcMathLinearalgebraByteUtils class]) {
    OrgBouncycastlePqcMathLinearalgebraByteUtils_HEX_CHARS = [IOSCharArray newArrayWithChars:(jchar[]){
#line 11
      '0', '1', '2', '3', '4', '5',
#line 12
      '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' } count:16];
      J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcMathLinearalgebraByteUtils)
    }
  }

@end


#line 17
void OrgBouncycastlePqcMathLinearalgebraByteUtils_init(OrgBouncycastlePqcMathLinearalgebraByteUtils *self) {
  NSObject_init(self);
}


#line 17
OrgBouncycastlePqcMathLinearalgebraByteUtils *new_OrgBouncycastlePqcMathLinearalgebraByteUtils_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraByteUtils, init)
}


#line 17
OrgBouncycastlePqcMathLinearalgebraByteUtils *create_OrgBouncycastlePqcMathLinearalgebraByteUtils_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraByteUtils, init)
}


#line 29
jboolean OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray_withByteArray_(IOSByteArray *left, IOSByteArray *right) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  if (left == nil) {
    
#line 33
    return right == nil;
  }
  if (right == nil) {
    
#line 37
    return false;
  }
  
#line 40
  if (left->size_ != right->size_) {
    
#line 42
    return false;
  }
  jboolean result = true;
  for (jint i = left->size_ - 1; i >= 0; i--) {
    
#line 47
    result &= (IOSByteArray_Get(left, i) == IOSByteArray_Get(right, i));
  }
  return result;
}


#line 59
jboolean OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray2_withByteArray2_(IOSObjectArray *left, IOSObjectArray *right) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  if (((IOSObjectArray *) nil_chk(left))->size_ != ((IOSObjectArray *) nil_chk(right))->size_) {
    
#line 63
    return false;
  }
  
#line 66
  jboolean result = true;
  for (jint i = left->size_ - 1; i >= 0; i--) {
    
#line 69
    result &= OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray_withByteArray_(IOSObjectArray_Get(left, i), IOSObjectArray_Get(right, i));
  }
  
#line 72
  return result;
}


#line 82
jboolean OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray3_withByteArray3_(IOSObjectArray *left, IOSObjectArray *right) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  if (((IOSObjectArray *) nil_chk(left))->size_ != ((IOSObjectArray *) nil_chk(right))->size_) {
    
#line 86
    return false;
  }
  
#line 89
  jboolean result = true;
  for (jint i = left->size_ - 1; i >= 0; i--) {
    
#line 92
    if (((IOSObjectArray *) nil_chk(IOSObjectArray_Get(left, i)))->size_ != ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(right, i)))->size_) {
      
#line 94
      return false;
    }
    for (jint j = ((IOSObjectArray *) nil_chk(IOSObjectArray_Get(left, i)))->size_ - 1; j >= 0; j--) {
      
#line 98
      result &= OrgBouncycastlePqcMathLinearalgebraByteUtils_equalsWithByteArray_withByteArray_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(left, i)), j), IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(right, i)), j));
    }
  }
  
#line 102
  return result;
}


#line 112
jint OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray_(IOSByteArray *array) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  jint result = 1;
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(array))->size_; i++) {
    
#line 117
    result = 31 * result + IOSByteArray_Get(array, i);
  }
  return result;
}


#line 129
jint OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray2_(IOSObjectArray *array) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  jint result = 1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    
#line 134
    result = 31 * result + OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray_(IOSObjectArray_Get(array, i));
  }
  return result;
}


#line 146
jint OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray3_(IOSObjectArray *array) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  jint result = 1;
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    
#line 151
    result = 31 * result + OrgBouncycastlePqcMathLinearalgebraByteUtils_deepHashCodeWithByteArray2_(IOSObjectArray_Get(array, i));
  }
  return result;
}


#line 164
IOSByteArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_cloneWithByteArray_(IOSByteArray *array) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  if (array == nil) {
    
#line 168
    return nil;
  }
  IOSByteArray *result = [IOSByteArray newArrayWithLength:array->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(array, 0, result, 0, array->size_);
  return result;
}


#line 181
IOSByteArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_fromHexStringWithNSString_(NSString *s) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  IOSCharArray *rawChars = [((NSString *) nil_chk([((NSString *) nil_chk(s)) uppercaseString])) java_toCharArray];
  
#line 185
  jint hexChars = 0;
  for (jint i = 0; i < ((IOSCharArray *) nil_chk(rawChars))->size_; i++) {
    
#line 188
    if ((IOSCharArray_Get(rawChars, i) >= '0' && IOSCharArray_Get(rawChars, i) <= '9') ||
#line 189
    (IOSCharArray_Get(rawChars, i) >= 'A' && IOSCharArray_Get(rawChars, i) <= 'F')) {
      
#line 191
      hexChars++;
    }
  }
  
#line 195
  IOSByteArray *byteString = [IOSByteArray newArrayWithLength:JreRShift32((hexChars + 1), 1)];
  
#line 197
  jint pos = hexChars & 1;
  
#line 199
  for (jint i = 0; i < rawChars->size_; i++) {
    
#line 201
    if (IOSCharArray_Get(rawChars, i) >= '0' && IOSCharArray_Get(rawChars, i) <= '9') {
      
#line 203
      JreLShiftAssignByte(IOSByteArray_GetRef(byteString, JreRShift32(pos, 1)), 4);
      *IOSByteArray_GetRef(byteString, JreRShift32(pos, 1)) |= IOSCharArray_Get(rawChars, i) - '0';
    }
    else if (IOSCharArray_Get(rawChars, i) >= 'A' && IOSCharArray_Get(rawChars, i) <= 'F') {
      
#line 208
      JreLShiftAssignByte(IOSByteArray_GetRef(byteString, JreRShift32(pos, 1)), 4);
      *IOSByteArray_GetRef(byteString, JreRShift32(pos, 1)) |= IOSCharArray_Get(rawChars, i) - 'A' + 10;
    }
    else {
      
#line 213
      continue;
    }
    pos++;
  }
  
#line 218
  return byteString;
}


#line 227
NSString *OrgBouncycastlePqcMathLinearalgebraByteUtils_toHexStringWithByteArray_(IOSByteArray *input) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  NSString *result = @"";
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(input))->size_; i++) {
    
#line 232
    (void) JreStrAppendStrong(&result, "C", IOSCharArray_Get(nil_chk(OrgBouncycastlePqcMathLinearalgebraByteUtils_HEX_CHARS), (JreURShift32(IOSByteArray_Get(input, i), 4)) & (jint) 0x0f));
    (void) JreStrAppendStrong(&result, "C", IOSCharArray_Get(OrgBouncycastlePqcMathLinearalgebraByteUtils_HEX_CHARS, (IOSByteArray_Get(input, i)) & (jint) 0x0f));
  }
  return result;
}


#line 246
NSString *OrgBouncycastlePqcMathLinearalgebraByteUtils_toHexStringWithByteArray_withNSString_withNSString_(IOSByteArray *input, NSString *prefix, NSString *seperator) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  
#line 249
  NSString *result = [NSString stringWithString:prefix];
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(input))->size_; i++) {
    
#line 252
    (void) JreStrAppendStrong(&result, "C", IOSCharArray_Get(nil_chk(OrgBouncycastlePqcMathLinearalgebraByteUtils_HEX_CHARS), (JreURShift32(IOSByteArray_Get(input, i), 4)) & (jint) 0x0f));
    (void) JreStrAppendStrong(&result, "C", IOSCharArray_Get(OrgBouncycastlePqcMathLinearalgebraByteUtils_HEX_CHARS, (IOSByteArray_Get(input, i)) & (jint) 0x0f));
    if (i < input->size_ - 1) {
      
#line 256
      (void) JreStrAppendStrong(&result, "$", seperator);
    }
  }
  return result;
}


#line 268
NSString *OrgBouncycastlePqcMathLinearalgebraByteUtils_toBinaryStringWithByteArray_(IOSByteArray *input) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  NSString *result = @"";
  jint i;
  for (i = 0; i < ((IOSByteArray *) nil_chk(input))->size_; i++) {
    
#line 274
    jint e = IOSByteArray_Get(input, i);
    for (jint ii = 0; ii < 8; ii++) {
      
#line 277
      jint b = (JreURShift32(e, ii)) & 1;
      (void) JreStrAppendStrong(&result, "I", b);
    }
    if (i != input->size_ - 1) {
      
#line 282
      (void) JreStrAppendStrong(&result, "$", @" ");
    }
  }
  return result;
}


#line 296
IOSByteArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_xor__WithByteArray_withByteArray_(IOSByteArray *x1, IOSByteArray *x2) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  IOSByteArray *out = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(x1))->size_];
  
#line 300
  for (jint i = x1->size_ - 1; i >= 0; i--) {
    
#line 302
    *IOSByteArray_GetRef(out, i) = (jbyte) (IOSByteArray_Get(x1, i) ^ IOSByteArray_Get(nil_chk(x2), i));
  }
  return out;
}


#line 315
IOSByteArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_concatenateWithByteArray_withByteArray_(IOSByteArray *x1, IOSByteArray *x2) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  IOSByteArray *result = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(x1))->size_ + ((IOSByteArray *) nil_chk(x2))->size_];
  
#line 319
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x1, 0, result, 0, x1->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x2, 0, result, x1->size_, x2->size_);
  
#line 322
  return result;
}


#line 332
IOSByteArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_concatenateWithByteArray2_(IOSObjectArray *array) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  jint rowLength = ((IOSByteArray *) nil_chk(IOSObjectArray_Get(nil_chk(array), 0)))->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:array->size_ * rowLength];
  jint index = 0;
  for (jint i = 0; i < array->size_; i++) {
    
#line 339
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(array, i), 0, result, index, rowLength);
    index += rowLength;
  }
  return result;
}


#line 355
IOSObjectArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_splitWithByteArray_withInt_(IOSByteArray *input, jint index) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  
#line 358
  if (index > ((IOSByteArray *) nil_chk(input))->size_) {
    
#line 360
    @throw new_JavaLangArrayIndexOutOfBoundsException_init();
  }
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:2 type:IOSClass_byteArray(1)];
  (void) IOSObjectArray_SetAndConsume(result, 0, [IOSByteArray newArrayWithLength:index]);
  (void) IOSObjectArray_SetAndConsume(result, 1, [IOSByteArray newArrayWithLength:input->size_ - index]);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(input, 0, IOSObjectArray_Get(result, 0), 0, index);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(input, index, IOSObjectArray_Get(result, 1), 0, input->size_ - index);
  return result;
}


#line 379
IOSByteArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_subArrayWithByteArray_withInt_withInt_(IOSByteArray *input, jint start, jint end) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  IOSByteArray *result = [IOSByteArray newArrayWithLength:end - start];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(input, start, result, 0, end - start);
  return result;
}


#line 394
IOSByteArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_subArrayWithByteArray_withInt_(IOSByteArray *input, jint start) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  return OrgBouncycastlePqcMathLinearalgebraByteUtils_subArrayWithByteArray_withInt_withInt_(input, start, ((IOSByteArray *) nil_chk(input))->size_);
}


#line 406
IOSCharArray *OrgBouncycastlePqcMathLinearalgebraByteUtils_toCharArrayWithByteArray_(IOSByteArray *input) {
  OrgBouncycastlePqcMathLinearalgebraByteUtils_initialize();
  IOSCharArray *result = [IOSCharArray newArrayWithLength:((IOSByteArray *) nil_chk(input))->size_];
  for (jint i = 0; i < input->size_; i++) {
    
#line 411
    *IOSCharArray_GetRef(result, i) = (jchar) IOSByteArray_Get(input, i);
  }
  return result;
}

IOSObjectArray *OrgBouncycastlePqcMathLinearalgebraByteUtils__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcMathLinearalgebraByteUtils)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nONBField")
#ifdef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nONBField
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nONBField 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nONBField 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nONBField

#if !defined (OrgBouncycastlePqcMathLinearalgebraGF2nONBField_) && (INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nONBField || defined(INCLUDE_OrgBouncycastlePqcMathLinearalgebraGF2nONBField))
#define OrgBouncycastlePqcMathLinearalgebraGF2nONBField_

#define RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nField 1
#define INCLUDE_OrgBouncycastlePqcMathLinearalgebraGF2nField 1
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nField.h"

@class IOSObjectArray;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcMathLinearalgebraGF2Polynomial;
@class OrgBouncycastlePqcMathLinearalgebraGF2nElement;

/*!
 @brief This class implements the abstract class <tt>GF2nField</tt> for ONB
  representation.It computes the fieldpolynomial, multiplication matrix and
  one of its roots mONBRoot, (see for example <a href=https://www2.certicom.com/ecc/intro.htm>
 Certicoms Whitepapers</a>).
 GF2nField is used by GF2nONBElement which implements the elements of this
  field.
 - seealso: GF2nField
 - seealso: GF2nONBElement
 */
@interface OrgBouncycastlePqcMathLinearalgebraGF2nONBField : OrgBouncycastlePqcMathLinearalgebraGF2nField {
 @public
  /*!
   @brief holds the multiplication matrix
   */
  IOSObjectArray *mMult_;
}

#pragma mark Public

/*!
 @brief constructs an instance of the finite field with 2<sup>deg</sup>
  elements and characteristic 2.
 @param deg -the extention degree of this field
 @param random - a source of randomness for generating polynomials on the field.
 */
- (instancetype)initWithInt:(jint)deg
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

#pragma mark Protected

/*!
 @brief Computes the change-of-basis matrix for basis conversion according to
  1363.The result is stored in the lists fields and matrices.
 @param B1 the GF2nField to convert to
 - seealso: "P1363 A.7.3, p111ff"
 */
- (void)computeCOBMatrixWithOrgBouncycastlePqcMathLinearalgebraGF2nField:(OrgBouncycastlePqcMathLinearalgebraGF2nField *)B1;

/*!
 @brief Computes the field polynomial for a ONB according to IEEE 1363 A.7.2
  (p110f).
 - seealso: "P1363 A.7.2, p110f"
 */
- (void)computeFieldPolynomial;

/*!
 @brief Computes a random root of the given polynomial.
 @param polynomial a polynomial
 @return a random root of the polynomial
 - seealso: "P1363 A.5.6, p103f"
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nElement *)getRandomRootWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)polynomial;

#pragma mark Package-Private

- (jint)getONBBit;

- (jint)getONBLength;

/*!
 @brief Compute the inverse of a matrix <tt>a</tt>.
 @param a the matrix
 @return <tt>a<sup>-1</sup></tt>
 */
- (IOSObjectArray *)invMatrixWithIntArray2:(IOSObjectArray *)a;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathLinearalgebraGF2nONBField)

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathLinearalgebraGF2nONBField, mMult_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2nONBField_initWithInt_withJavaSecuritySecureRandom_(OrgBouncycastlePqcMathLinearalgebraGF2nONBField *self, jint deg, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nONBField *new_OrgBouncycastlePqcMathLinearalgebraGF2nONBField_initWithInt_withJavaSecuritySecureRandom_(jint deg, JavaSecuritySecureRandom *random) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nONBField *create_OrgBouncycastlePqcMathLinearalgebraGF2nONBField_initWithInt_withJavaSecuritySecureRandom_(jint deg, JavaSecuritySecureRandom *random);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathLinearalgebraGF2nONBField)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nONBField")

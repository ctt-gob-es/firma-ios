//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomialField.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/security/SecureRandom.h"
#include "java/util/Vector.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2Polynomial.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nElement.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nField.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nONBElement.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nONBField.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomialElement.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomialField.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GFElement.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomialField must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField () {
 @public
  jboolean isTrinomial_;
  jboolean isPentanomial_;
  jint tc_;
  IOSIntArray *pc_;
}

/*!
 @brief Computes a new squaring matrix used for fast squaring.
 - seealso: GF2nPolynomialElement#square
 */
- (void)computeSquaringMatrix;

/*!
 @brief Tests all trinomials of degree (n+1) until a irreducible is found and
  stores the result in <i>field polynomial</i>.Returns false if no
  irreducible trinomial exists in GF(2^n).
 This can take very long for huge
  degrees.
 @return true if an irreducible trinomial is found
 */
- (jboolean)testTrinomials;

/*!
 @brief Tests all pentanomials of degree (n+1) until a irreducible is found and
  stores the result in <i>field polynomial</i>.Returns false if no
  irreducible pentanomial exists in GF(2^n).
 This can take very long for
  huge degrees.
 @return true if an irreducible pentanomial is found
 */
- (jboolean)testPentanomials;

/*!
 @brief Tests random polynomials of degree (n+1) until an irreducible is found
  and stores the result in <i>field polynomial</i>.This can take very
  long for huge degrees.
 @return true
 */
- (jboolean)testRandom;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, pc_, IOSIntArray *)

__attribute__((unused)) static void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_computeSquaringMatrix(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self);

__attribute__((unused)) static jboolean OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testTrinomials(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self);

__attribute__((unused)) static jboolean OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testPentanomials(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self);

__attribute__((unused)) static jboolean OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testRandom(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomialField.java"


#line 17
@implementation OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField


#line 45
- (instancetype)initWithInt:(jint)deg
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_(self, deg, random);
  return self;
}


#line 70
- (instancetype)initWithInt:(jint)deg
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
                withBoolean:(jboolean)file {
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withBoolean_(self, deg, random, file);
  return self;
}


#line 101
- (instancetype)initWithInt:(jint)deg
withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random
withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)polynomial {
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(self, deg, random, polynomial);
  return self;
}


#line 156
- (jboolean)isTrinomial {
  
#line 158
  return isTrinomial_;
}


#line 167
- (jboolean)isPentanomial {
  
#line 169
  return isPentanomial_;
}


#line 178
- (jint)getTc {
  
#line 181
  if (!isTrinomial_) {
    
#line 183
    @throw new_JavaLangRuntimeException_init();
  }
  return tc_;
}


#line 194
- (IOSIntArray *)getPc {
  
#line 197
  if (!isPentanomial_) {
    
#line 199
    @throw new_JavaLangRuntimeException_init();
  }
  IOSIntArray *result = [IOSIntArray newArrayWithLength:3];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(pc_, 0, result, 0, 3);
  return result;
}


#line 213
- (OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)getSquaringVectorWithInt:(jint)i {
  
#line 215
  return new_OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(IOSObjectArray_Get(nil_chk(squaringMatrix_), i));
}


#line 224
- (OrgBouncycastlePqcMathLinearalgebraGF2nElement *)getRandomRootWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)polynomial {
  
#line 228
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *c;
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *ut;
  OrgBouncycastlePqcMathLinearalgebraGF2nElement *u;
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *h;
  jint hDegree;
  
#line 234
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *g = new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_withOrgBouncycastlePqcMathLinearalgebraGF2nField_(polynomial, self);
  jint gDegree = [g getDegree];
  jint i;
  
#line 239
  while (gDegree > 1) {
    
#line 241
    do {
      
#line 244
      u = new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialElement_initWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_withJavaUtilRandom_(self, random_);
      ut = new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithInt_withOrgBouncycastlePqcMathLinearalgebraGF2nElement_(2, OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialElement_ZEROWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_(self));
      
#line 247
      [ut setWithInt:1 withOrgBouncycastlePqcMathLinearalgebraGF2nElement:u];
      c = new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_(ut);
      
#line 250
      for (i = 1; i <= mDegree_ - 1; i++) {
        
#line 253
        c = [((OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *) nil_chk(c)) multiplyAndReduceWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:c withOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:g];
        c = [((OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *) nil_chk(c)) addWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:ut];
      }
      
#line 257
      h = [((OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *) nil_chk(c)) gcdWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:g];
      
#line 260
      hDegree = [((OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *) nil_chk(h)) getDegree];
      gDegree = [g getDegree];
    }
    while ((hDegree == 0) || (hDegree == gDegree));
    
#line 265
    if ((JreLShift32(hDegree, 1)) > gDegree) {
      
#line 267
      g = [g quotientWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:h];
    }
    else {
      
#line 272
      g = new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_(h);
    }
    gDegree = [((OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *) nil_chk(g)) getDegree];
  }
  
#line 277
  return [g atWithInt:0];
}


#line 288
- (void)computeCOBMatrixWithOrgBouncycastlePqcMathLinearalgebraGF2nField:(OrgBouncycastlePqcMathLinearalgebraGF2nField *)B1 {
  
#line 292
  if (mDegree_ != ((OrgBouncycastlePqcMathLinearalgebraGF2nField *) nil_chk(B1))->mDegree_) {
    
#line 294
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 295
    @"GF2nPolynomialField.computeCOBMatrix: B1 has a different degree and thus cannot be coverted to!");
  }
  
#line 298
  if ([B1 isKindOfClass:[OrgBouncycastlePqcMathLinearalgebraGF2nONBField class]]) {
    
#line 302
    [B1 computeCOBMatrixWithOrgBouncycastlePqcMathLinearalgebraGF2nField:self];
    return;
  }
  jint i;
  
#line 305
  jint j;
  IOSObjectArray *gamma;
  OrgBouncycastlePqcMathLinearalgebraGF2nElement *u;
  IOSObjectArray *COBMatrix = [IOSObjectArray newArrayWithLength:mDegree_ type:OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_class_()];
  for (i = 0; i < mDegree_; i++) {
    
#line 311
    (void) IOSObjectArray_SetAndConsume(COBMatrix, i, new_OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_(mDegree_));
  }
  
#line 315
  do {
    
#line 318
    u = [B1 getRandomRootWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:fieldPolynomial_];
  }
  while ([((OrgBouncycastlePqcMathLinearalgebraGF2nElement *) nil_chk(u)) isZero]);
  
#line 323
  if ([u isKindOfClass:[OrgBouncycastlePqcMathLinearalgebraGF2nONBElement class]]) {
    
#line 325
    gamma = [IOSObjectArray newArrayWithLength:mDegree_ type:OrgBouncycastlePqcMathLinearalgebraGF2nONBElement_class_()];
    (void) IOSObjectArray_Set(gamma, mDegree_ - 1, OrgBouncycastlePqcMathLinearalgebraGF2nONBElement_ONEWithOrgBouncycastlePqcMathLinearalgebraGF2nONBField_((OrgBouncycastlePqcMathLinearalgebraGF2nONBField *) cast_chk(B1, [OrgBouncycastlePqcMathLinearalgebraGF2nONBField class])));
  }
  else {
    
#line 330
    gamma = [IOSObjectArray newArrayWithLength:mDegree_ type:OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialElement_class_()];
    (void) IOSObjectArray_Set(gamma, mDegree_ - 1, OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialElement_ONEWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_(
#line 332
    (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *) cast_chk(B1, [OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField class])));
  }
  (void) IOSObjectArray_Set(gamma, mDegree_ - 2, u);
  for (i = mDegree_ - 3; i >= 0; i--) {
    
#line 337
    (void) IOSObjectArray_Set(gamma, i, (OrgBouncycastlePqcMathLinearalgebraGF2nElement *) cast_chk([((OrgBouncycastlePqcMathLinearalgebraGF2nElement *) nil_chk(IOSObjectArray_Get(gamma, i + 1))) multiplyWithOrgBouncycastlePqcMathLinearalgebraGFElement:u], [OrgBouncycastlePqcMathLinearalgebraGF2nElement class]));
  }
  if ([B1 isKindOfClass:[OrgBouncycastlePqcMathLinearalgebraGF2nONBField class]]) {
    
#line 342
    for (i = 0; i < mDegree_; i++) {
      
#line 344
      for (j = 0; j < mDegree_; j++) {
        
#line 347
        if ([((OrgBouncycastlePqcMathLinearalgebraGF2nElement *) nil_chk(IOSObjectArray_Get(gamma, i))) testBitWithInt:mDegree_ - j - 1]) {
          
#line 349
          [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(COBMatrix, mDegree_ - j - 1))) setBitWithInt:mDegree_ - i - 1];
        }
      }
    }
  }
  else {
    
#line 357
    for (i = 0; i < mDegree_; i++) {
      
#line 359
      for (j = 0; j < mDegree_; j++) {
        
#line 361
        if ([((OrgBouncycastlePqcMathLinearalgebraGF2nElement *) nil_chk(IOSObjectArray_Get(gamma, i))) testBitWithInt:j]) {
          
#line 363
          [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(COBMatrix, mDegree_ - j - 1))) setBitWithInt:mDegree_ - i - 1];
        }
      }
    }
  }
  
#line 370
  [((JavaUtilVector *) nil_chk(fields_)) addElementWithId:B1];
  [((JavaUtilVector *) nil_chk(matrices_)) addElementWithId:COBMatrix];
  
#line 373
  [((JavaUtilVector *) nil_chk(B1->fields_)) addElementWithId:self];
  [((JavaUtilVector *) nil_chk(B1->matrices_)) addElementWithId:[self invertMatrixWithOrgBouncycastlePqcMathLinearalgebraGF2PolynomialArray:COBMatrix]];
}


#line 382
- (void)computeSquaringMatrix {
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_computeSquaringMatrix(self);
}


#line 417
- (void)computeFieldPolynomial {
  
#line 420
  if (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testTrinomials(self)) {
    
#line 422
    return;
  }
  if (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testPentanomials(self)) {
    
#line 426
    return;
  }
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testRandom(self);
}


#line 434
- (void)computeFieldPolynomial2 {
  
#line 436
  if (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testTrinomials(self)) {
    
#line 438
    return;
  }
  if (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testPentanomials(self)) {
    
#line 442
    return;
  }
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testRandom(self);
}


#line 455
- (jboolean)testTrinomials {
  return OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testTrinomials(self);
}


#line 490
- (jboolean)testPentanomials {
  return OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testPentanomials(self);
}


#line 539
- (jboolean)testRandom {
  return OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testRandom(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathLinearalgebraGF2Polynomial;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathLinearalgebraGF2nElement;", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withJavaSecuritySecureRandom:);
  methods[1].selector = @selector(initWithInt:withJavaSecuritySecureRandom:withBoolean:);
  methods[2].selector = @selector(initWithInt:withJavaSecuritySecureRandom:withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:);
  methods[3].selector = @selector(isTrinomial);
  methods[4].selector = @selector(isPentanomial);
  methods[5].selector = @selector(getTc);
  methods[6].selector = @selector(getPc);
  methods[7].selector = @selector(getSquaringVectorWithInt:);
  methods[8].selector = @selector(getRandomRootWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:);
  methods[9].selector = @selector(computeCOBMatrixWithOrgBouncycastlePqcMathLinearalgebraGF2nField:);
  methods[10].selector = @selector(computeSquaringMatrix);
  methods[11].selector = @selector(computeFieldPolynomial);
  methods[12].selector = @selector(computeFieldPolynomial2);
  methods[13].selector = @selector(testTrinomials);
  methods[14].selector = @selector(testPentanomials);
  methods[15].selector = @selector(testRandom);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "squaringMatrix_", "[LOrgBouncycastlePqcMathLinearalgebraGF2Polynomial;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "isTrinomial_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isPentanomial_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pc_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILJavaSecuritySecureRandom;", "ILJavaSecuritySecureRandom;Z", "ILJavaSecuritySecureRandom;LOrgBouncycastlePqcMathLinearalgebraGF2Polynomial;", "LJavaLangRuntimeException;", "getSquaringVector", "I", "getRandomRoot", "LOrgBouncycastlePqcMathLinearalgebraGF2Polynomial;", "computeCOBMatrix", "LOrgBouncycastlePqcMathLinearalgebraGF2nField;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField = { "GF2nPolynomialField", "org.bouncycastle.pqc.math.linearalgebra", ptrTable, methods, fields, 7, 0x1, 16, 5, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField;
}

@end


#line 45
void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self, jint deg, JavaSecuritySecureRandom *random) {
  OrgBouncycastlePqcMathLinearalgebraGF2nField_initWithJavaSecuritySecureRandom_(self,
#line 47
  random);
  self->isTrinomial_ =
#line 27
  false;
  self->isPentanomial_ =
#line 30
  false;
  self->pc_ = [IOSIntArray newArrayWithLength:
#line 36
  3];
  
#line 49
  if (deg < 3) {
    
#line 51
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"k must be at least 3");
  }
  self->mDegree_ = deg;
  [self computeFieldPolynomial];
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_computeSquaringMatrix(self);
  self->fields_ = new_JavaUtilVector_init();
  self->matrices_ = new_JavaUtilVector_init();
}


#line 45
OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_(jint deg, JavaSecuritySecureRandom *random) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, initWithInt_withJavaSecuritySecureRandom_, deg, random)
}


#line 45
OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_(jint deg, JavaSecuritySecureRandom *random) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, initWithInt_withJavaSecuritySecureRandom_, deg, random)
}


#line 70
void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withBoolean_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self, jint deg, JavaSecuritySecureRandom *random, jboolean file) {
  OrgBouncycastlePqcMathLinearalgebraGF2nField_initWithJavaSecuritySecureRandom_(self,
#line 72
  random);
  self->isTrinomial_ =
#line 27
  false;
  self->isPentanomial_ =
#line 30
  false;
  self->pc_ = [IOSIntArray newArrayWithLength:
#line 36
  3];
  
#line 74
  if (deg < 3) {
    
#line 76
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"k must be at least 3");
  }
  self->mDegree_ = deg;
  if (file) {
    
#line 81
    [self computeFieldPolynomial];
  }
  else {
    
#line 85
    [self computeFieldPolynomial2];
  }
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_computeSquaringMatrix(self);
  self->fields_ = new_JavaUtilVector_init();
  self->matrices_ = new_JavaUtilVector_init();
}


#line 70
OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withBoolean_(jint deg, JavaSecuritySecureRandom *random, jboolean file) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, initWithInt_withJavaSecuritySecureRandom_withBoolean_, deg, random, file)
}


#line 70
OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withBoolean_(jint deg, JavaSecuritySecureRandom *random, jboolean file) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, initWithInt_withJavaSecuritySecureRandom_withBoolean_, deg, random, file)
}


#line 101
void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self, jint deg, JavaSecuritySecureRandom *random, OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial) {
  OrgBouncycastlePqcMathLinearalgebraGF2nField_initWithJavaSecuritySecureRandom_(self,
#line 104
  random);
  self->isTrinomial_ =
#line 27
  false;
  self->isPentanomial_ =
#line 30
  false;
  self->pc_ = [IOSIntArray newArrayWithLength:
#line 36
  3];
  
#line 106
  if (deg < 3) {
    
#line 108
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"degree must be at least 3");
  }
  if ([((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(polynomial)) getLength] != deg + 1) {
    
#line 112
    @throw new_JavaLangRuntimeException_init();
  }
  if (![polynomial isIrreducible]) {
    
#line 116
    @throw new_JavaLangRuntimeException_init();
  }
  self->mDegree_ = deg;
  
#line 120
  self->fieldPolynomial_ = polynomial;
  OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_computeSquaringMatrix(self);
  jint k = 2;
  for (jint j = 1; j < [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) getLength] - 1; j++) {
    
#line 125
    if ([((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) testBitWithInt:j]) {
      
#line 127
      k++;
      if (k == 3) {
        
#line 130
        self->tc_ = j;
      }
      if (k <= 5) {
        
#line 134
        *IOSIntArray_GetRef(nil_chk(self->pc_), k - 3) = j;
      }
    }
  }
  if (k == 3) {
    
#line 140
    self->isTrinomial_ = true;
  }
  if (k == 5) {
    
#line 144
    self->isPentanomial_ = true;
  }
  self->fields_ = new_JavaUtilVector_init();
  self->matrices_ = new_JavaUtilVector_init();
}


#line 101
OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(jint deg, JavaSecuritySecureRandom *random, OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_, deg, random, polynomial)
}


#line 101
OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_(jint deg, JavaSecuritySecureRandom *random, OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField, initWithInt_withJavaSecuritySecureRandom_withOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_, deg, random, polynomial)
}


#line 382
void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_computeSquaringMatrix(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self) {
  
#line 384
  IOSObjectArray *d = [IOSObjectArray newArrayWithLength:self->mDegree_ - 1 type:OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_class_()];
  jint i;
  
#line 385
  jint j;
  self->squaringMatrix_ = [IOSObjectArray newArrayWithLength:self->mDegree_ type:OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_class_()];
  for (i = 0; i < ((IOSObjectArray *) nil_chk(self->squaringMatrix_))->size_; i++) {
    
#line 389
    (void) IOSObjectArray_SetAndConsume(self->squaringMatrix_, i, new_OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_withNSString_(self->mDegree_, @"ZERO"));
  }
  
#line 392
  for (i = 0; i < self->mDegree_ - 1; i++) {
    
#line 394
    (void) IOSObjectArray_Set(d, i, [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk([new_OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_withNSString_(1, @"ONE") shiftLeftWithInt:self->mDegree_ + i])) remainderWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:self->fieldPolynomial_]);
  }
  
#line 397
  for (i = 1; i <= JavaLangMath_absWithInt_(JreRShift32(self->mDegree_, 1)); i++) {
    
#line 399
    for (j = 1; j <= self->mDegree_; j++) {
      
#line 401
      if ([((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(d, self->mDegree_ - (JreLShift32(i, 1))))) testBitWithInt:self->mDegree_ - j]) {
        
#line 403
        [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(nil_chk(self->squaringMatrix_), j - 1))) setBitWithInt:self->mDegree_ - i];
      }
    }
  }
  for (i = JavaLangMath_absWithInt_(JreRShift32(self->mDegree_, 1)) + 1; i <= self->mDegree_; i++) {
    
#line 409
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(IOSObjectArray_Get(nil_chk(self->squaringMatrix_), (JreLShift32(i, 1)) - self->mDegree_ - 1))) setBitWithInt:self->mDegree_ - i];
  }
}


#line 455
jboolean OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testTrinomials(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self) {
  
#line 457
  jint i;
  
#line 457
  jint l;
  jboolean done = false;
  l = 0;
  
#line 461
  self->fieldPolynomial_ = new_OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_(self->mDegree_ + 1);
  [self->fieldPolynomial_ setBitWithInt:0];
  [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:self->mDegree_];
  for (i = 1; (i < self->mDegree_) && !done; i++) {
    
#line 466
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:i];
    done = [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) isIrreducible];
    l++;
    if (done) {
      
#line 471
      self->isTrinomial_ = true;
      self->tc_ = i;
      return done;
    }
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) resetBitWithInt:i];
    done = [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) isIrreducible];
  }
  
#line 479
  return done;
}

jboolean OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testPentanomials(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self) {
  
#line 492
  jint i;
  
#line 492
  jint j;
  
#line 492
  jint k;
  
#line 492
  jint l;
  jboolean done = false;
  l = 0;
  
#line 496
  self->fieldPolynomial_ = new_OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_(self->mDegree_ + 1);
  [self->fieldPolynomial_ setBitWithInt:0];
  [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:self->mDegree_];
  for (i = 1; (i <= (self->mDegree_ - 3)) && !done; i++) {
    
#line 501
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:i];
    for (j = i + 1; (j <= (self->mDegree_ - 2)) && !done; j++) {
      
#line 504
      [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:j];
      for (k = j + 1; (k <= (self->mDegree_ - 1)) && !done; k++) {
        
#line 507
        [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:k];
        if (((self->mDegree_ & 1) != 0) | ((i & 1) != 0) | ((j & 1) != 0) |
#line 509
        ((k & 1) != 0)) {
          
#line 511
          done = [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) isIrreducible];
          l++;
          if (done) {
            
#line 515
            self->isPentanomial_ = true;
            *IOSIntArray_GetRef(nil_chk(self->pc_), 0) = i;
            *IOSIntArray_GetRef(self->pc_, 1) = j;
            *IOSIntArray_GetRef(self->pc_, 2) = k;
            return done;
          }
        }
        [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) resetBitWithInt:k];
      }
      [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) resetBitWithInt:j];
    }
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) resetBitWithInt:i];
  }
  
#line 529
  return done;
}


#line 539
jboolean OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField_testRandom(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField *self) {
  
#line 541
  jint l;
  jboolean done = false;
  
#line 544
  self->fieldPolynomial_ = new_OrgBouncycastlePqcMathLinearalgebraGF2Polynomial_initWithInt_(self->mDegree_ + 1);
  l = 0;
  while (!done) {
    
#line 548
    l++;
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) randomize];
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:self->mDegree_];
    [((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) setBitWithInt:0];
    if ([((OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *) nil_chk(self->fieldPolynomial_)) isIrreducible]) {
      
#line 554
      done = true;
      return done;
    }
  }
  
#line 559
  return done;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomialField)

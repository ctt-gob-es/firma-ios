//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2mField.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/crypto/CryptoServicesRegistrar.h"
#include "org/bouncycastle/pqc/math/linearalgebra/GF2mField.h"
#include "org/bouncycastle/pqc/math/linearalgebra/LittleEndianConversions.h"
#include "org/bouncycastle/pqc/math/linearalgebra/PolynomialRingGF2.h"
#include "org/bouncycastle/pqc/math/linearalgebra/RandUtils.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/math/linearalgebra/GF2mField must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcMathLinearalgebraGF2mField () {
 @public
  jint degree_;
  jint polynomial_;
}

+ (NSString *)polyToStringWithInt:(jint)p;

@end

__attribute__((unused)) static NSString *OrgBouncycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(jint p);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2mField.java"


#line 19
@implementation OrgBouncycastlePqcMathLinearalgebraGF2mField


#line 36
- (instancetype)initWithInt:(jint)degree {
  OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_(self, degree);
  return self;
}


#line 58
- (instancetype)initWithInt:(jint)degree
                    withInt:(jint)poly {
  OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(self, degree, poly);
  return self;
}


#line 75
- (instancetype)initWithByteArray:(IOSByteArray *)enc {
  OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(self, enc);
  return self;
}


#line 92
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:(OrgBouncycastlePqcMathLinearalgebraGF2mField *)field {
  OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(self, field);
  return self;
}


#line 103
- (jint)getDegree {
  
#line 105
  return degree_;
}


#line 113
- (jint)getPolynomial {
  
#line 115
  return polynomial_;
}


#line 123
- (IOSByteArray *)getEncoded {
  
#line 125
  return OrgBouncycastlePqcMathLinearalgebraLittleEndianConversions_I2OSPWithInt_(polynomial_);
}


#line 135
- (jint)addWithInt:(jint)a
           withInt:(jint)b {
  return a ^ b;
}


#line 147
- (jint)multWithInt:(jint)a
            withInt:(jint)b {
  return OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_modMultiplyWithInt_withInt_withInt_(a, b, polynomial_);
}


#line 159
- (jint)expWithInt:(jint)a
           withInt:(jint)k {
  if (k == 0) {
    
#line 163
    return 1;
  }
  if (a == 0) {
    
#line 167
    return 0;
  }
  if (a == 1) {
    
#line 171
    return 1;
  }
  jint result = 1;
  if (k < 0) {
    
#line 176
    a = [self inverseWithInt:a];
    k = -k;
  }
  while (k != 0) {
    
#line 181
    if ((k & 1) == 1) {
      
#line 183
      result = [self multWithInt:result withInt:a];
    }
    a = [self multWithInt:a withInt:a];
    JreURShiftAssignInt(&k, 1);
  }
  return result;
}

- (jint)inverseWithInt:(jint)a {
  
#line 199
  jint d = (JreLShift32(1, degree_)) - 2;
  
#line 201
  return [self expWithInt:a withInt:d];
}


#line 210
- (jint)sqRootWithInt:(jint)a {
  
#line 212
  for (jint i = 1; i < degree_; i++) {
    
#line 214
    a = [self multWithInt:a withInt:a];
  }
  return a;
}


#line 225
- (jint)getRandomElementWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)sr {
  
#line 227
  jint result = OrgBouncycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(sr, JreLShift32(1, degree_));
  return result;
}


#line 236
- (jint)getRandomNonZeroElement {
  
#line 238
  return [self getRandomNonZeroElementWithJavaSecuritySecureRandom:OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom()];
}


#line 247
- (jint)getRandomNonZeroElementWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)sr {
  
#line 249
  jint controltime = JreLShift32(1, 20);
  jint count = 0;
  jint result = OrgBouncycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(sr, JreLShift32(1, degree_));
  while ((result == 0) && (count < controltime)) {
    
#line 254
    result = OrgBouncycastlePqcMathLinearalgebraRandUtils_nextIntWithJavaSecuritySecureRandom_withInt_(sr, JreLShift32(1, degree_));
    count++;
  }
  if (count == controltime) {
    
#line 259
    result = 1;
  }
  return result;
}

- (jboolean)isElementOfThisFieldWithInt:(jint)e {
  
#line 270
  if (degree_ == 31) {
    
#line 272
    return e >= 0;
  }
  return e >= 0 && e < (JreLShift32(1, degree_));
}


#line 280
- (NSString *)elementToStrWithInt:(jint)a {
  
#line 282
  NSString *s = @"";
  for (jint i = 0; i < degree_; i++) {
    
#line 285
    if (((jbyte) a & (jint) 0x01) == 0) {
      
#line 287
      s = JreStrcat("C$", '0', s);
    }
    else {
      
#line 291
      s = JreStrcat("C$", '1', s);
    }
    JreURShiftAssignInt(&a, 1);
  }
  return s;
}


#line 306
- (jboolean)isEqual:(id)other {
  
#line 309
  if ((other == nil) || !([other isKindOfClass:[OrgBouncycastlePqcMathLinearalgebraGF2mField class]])) {
    
#line 311
    return false;
  }
  
#line 314
  OrgBouncycastlePqcMathLinearalgebraGF2mField *otherField = (OrgBouncycastlePqcMathLinearalgebraGF2mField *) cast_chk(other, [OrgBouncycastlePqcMathLinearalgebraGF2mField class]);
  
#line 316
  if ((degree_ == ((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(otherField))->degree_) &&
#line 317
  (polynomial_ == otherField->polynomial_)) {
    
#line 319
    return true;
  }
  
#line 322
  return false;
}


#line 325
- (NSUInteger)hash {
  
#line 328
  return polynomial_;
}


#line 336
- (NSString *)description {
  
#line 339
  NSString *str = JreStrcat("$I$$$", @"Finite Field GF(2^", degree_, @") = GF(2)[X]/<", OrgBouncycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(
#line 340
  polynomial_), @"> ");
  return str;
}


#line 344
+ (NSString *)polyToStringWithInt:(jint)p {
  return OrgBouncycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(p);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 18, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithInt:withInt:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithOrgBouncycastlePqcMathLinearalgebraGF2mField:);
  methods[4].selector = @selector(getDegree);
  methods[5].selector = @selector(getPolynomial);
  methods[6].selector = @selector(getEncoded);
  methods[7].selector = @selector(addWithInt:withInt:);
  methods[8].selector = @selector(multWithInt:withInt:);
  methods[9].selector = @selector(expWithInt:withInt:);
  methods[10].selector = @selector(inverseWithInt:);
  methods[11].selector = @selector(sqRootWithInt:);
  methods[12].selector = @selector(getRandomElementWithJavaSecuritySecureRandom:);
  methods[13].selector = @selector(getRandomNonZeroElement);
  methods[14].selector = @selector(getRandomNonZeroElementWithJavaSecuritySecureRandom:);
  methods[15].selector = @selector(isElementOfThisFieldWithInt:);
  methods[16].selector = @selector(elementToStrWithInt:);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(hash);
  methods[19].selector = @selector(description);
  methods[20].selector = @selector(polyToStringWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "degree_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "polynomial_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "II", "[B", "LOrgBouncycastlePqcMathLinearalgebraGF2mField;", "add", "mult", "exp", "inverse", "sqRoot", "getRandomElement", "LJavaSecuritySecureRandom;", "getRandomNonZeroElement", "isElementOfThisField", "elementToStr", "equals", "LNSObject;", "hashCode", "toString", "polyToString" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcMathLinearalgebraGF2mField = { "GF2mField", "org.bouncycastle.pqc.math.linearalgebra", ptrTable, methods, fields, 7, 0x1, 21, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcMathLinearalgebraGF2mField;
}

@end


#line 36
void OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_(OrgBouncycastlePqcMathLinearalgebraGF2mField *self, jint degree) {
  NSObject_init(self);
  self->degree_ =
#line 27
  0;
  
#line 38
  if (degree >= 32) {
    
#line 40
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 41
    @" Error: the degree of field is too large ");
  }
  if (degree < 1) {
    
#line 45
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 46
    @" Error: the degree of field is non-positive ");
  }
  self->degree_ = degree;
  self->polynomial_ = OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_getIrreduciblePolynomialWithInt_(degree);
}


#line 36
OrgBouncycastlePqcMathLinearalgebraGF2mField *new_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_(jint degree) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithInt_, degree)
}


#line 36
OrgBouncycastlePqcMathLinearalgebraGF2mField *create_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_(jint degree) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithInt_, degree)
}


#line 58
void OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(OrgBouncycastlePqcMathLinearalgebraGF2mField *self, jint degree, jint poly) {
  NSObject_init(self);
  self->degree_ =
#line 27
  0;
  
#line 60
  if (degree != OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(poly)) {
    
#line 62
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 63
    @" Error: the degree is not correct");
  }
  if (!OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(poly)) {
    
#line 67
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 68
    @" Error: given polynomial is reducible");
  }
  self->degree_ = degree;
  self->polynomial_ = poly;
}


#line 58
OrgBouncycastlePqcMathLinearalgebraGF2mField *new_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(jint degree, jint poly) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithInt_withInt_, degree, poly)
}


#line 58
OrgBouncycastlePqcMathLinearalgebraGF2mField *create_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithInt_withInt_(jint degree, jint poly) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithInt_withInt_, degree, poly)
}


#line 75
void OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(OrgBouncycastlePqcMathLinearalgebraGF2mField *self, IOSByteArray *enc) {
  NSObject_init(self);
  self->degree_ =
#line 27
  0;
  
#line 77
  if (((IOSByteArray *) nil_chk(enc))->size_ != 4) {
    
#line 79
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 80
    @"byte array is not an encoded finite field");
  }
  self->polynomial_ = OrgBouncycastlePqcMathLinearalgebraLittleEndianConversions_OS2IPWithByteArray_(enc);
  if (!OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_isIrreducibleWithInt_(self->polynomial_)) {
    
#line 85
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 86
    @"byte array is not an encoded finite field");
  }
  
#line 89
  self->degree_ = OrgBouncycastlePqcMathLinearalgebraPolynomialRingGF2_degreeWithInt_(self->polynomial_);
}


#line 75
OrgBouncycastlePqcMathLinearalgebraGF2mField *new_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(IOSByteArray *enc) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithByteArray_, enc)
}


#line 75
OrgBouncycastlePqcMathLinearalgebraGF2mField *create_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithByteArray_(IOSByteArray *enc) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithByteArray_, enc)
}


#line 92
void OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(OrgBouncycastlePqcMathLinearalgebraGF2mField *self, OrgBouncycastlePqcMathLinearalgebraGF2mField *field) {
  NSObject_init(self);
  self->degree_ =
#line 27
  0;
  
#line 94
  self->degree_ = ((OrgBouncycastlePqcMathLinearalgebraGF2mField *) nil_chk(field))->degree_;
  self->polynomial_ = field->polynomial_;
}


#line 92
OrgBouncycastlePqcMathLinearalgebraGF2mField *new_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_, field)
}


#line 92
OrgBouncycastlePqcMathLinearalgebraGF2mField *create_OrgBouncycastlePqcMathLinearalgebraGF2mField_initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_(OrgBouncycastlePqcMathLinearalgebraGF2mField *field) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathLinearalgebraGF2mField, initWithOrgBouncycastlePqcMathLinearalgebraGF2mField_, field)
}


#line 344
NSString *OrgBouncycastlePqcMathLinearalgebraGF2mField_polyToStringWithInt_(jint p) {
  OrgBouncycastlePqcMathLinearalgebraGF2mField_initialize();
  NSString *str = @"";
  if (p == 0) {
    
#line 349
    str = @"0";
  }
  else {
    
#line 353
    jbyte b = (jbyte) (p & (jint) 0x01);
    if (b == 1) {
      
#line 356
      str = @"1";
    }
    JreURShiftAssignInt(&p, 1);
    jint i = 1;
    while (p != 0) {
      
#line 362
      b = (jbyte) (p & (jint) 0x01);
      if (b == 1) {
        
#line 365
        str = JreStrcat("$$I", str, @"+x^", i);
      }
      JreURShiftAssignInt(&p, 1);
      i++;
    }
  }
  return str;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcMathLinearalgebraGF2mField)

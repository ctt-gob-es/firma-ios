//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/linearalgebra/GF2nPolynomial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial")
#ifdef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial

#if !defined (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_) && (INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial || defined(INCLUDE_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial))
#define OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_

@class IOSObjectArray;
@class OrgBouncycastlePqcMathLinearalgebraGF2Polynomial;
@class OrgBouncycastlePqcMathLinearalgebraGF2nElement;
@class OrgBouncycastlePqcMathLinearalgebraGF2nField;

/*!
 @brief This class implements polynomials over GF2nElements.
 - seealso: GF2nElement
 */
@interface OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial : NSObject

#pragma mark Public

/*!
 @brief Creates a new PolynomialGF2n by cloning the given PolynomialGF2n <i>a</i>.
 @param a the PolynomialGF2n to clone
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)a;

/*!
 @brief Creates a new PolynomialGF2n from the given Bitstring <i>polynomial</i>
  over the GF2nField <i>B1</i>.
 @param polynomial the Bitstring to use
 @param B1 the field
 */
- (instancetype)initWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial:(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *)polynomial
                        withOrgBouncycastlePqcMathLinearalgebraGF2nField:(OrgBouncycastlePqcMathLinearalgebraGF2nField *)B1;

/*!
 @brief Creates a new PolynomialGF2n of size <i>deg</i> and elem as
  coefficients.
 @param deg -              the maximum degree + 1
 @param elem -              a GF2nElement
 */
- (instancetype)initWithInt:(jint)deg
withOrgBouncycastlePqcMathLinearalgebraGF2nElement:(OrgBouncycastlePqcMathLinearalgebraGF2nElement *)elem;

/*!
 @brief Adds the PolynomialGF2n <tt>b</tt> to <tt>this</tt> and returns the
  result in a new <tt>PolynomialGF2n</tt>.
 @param b -           the 
  <tt> PolynomialGF2n </tt>  to add
 @return <tt>this + b</tt>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)addWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)b;

- (void)assignZeroToElements;

/*!
 @brief Returns the coefficient at <i>index</i>.
 @param index the index
 @return the GF2nElement stored as coefficient <i>index</i>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nElement *)atWithInt:(jint)index;

/*!
 @brief Divides <i>this</i> by <i>b</i> and stores the result in a new
  PolynomialGF2n[2], quotient in result[0] and remainder in result[1].
 @param b the divisor
 @return the quotient and remainder of <i>this</i> / <i>b</i>
 */
- (IOSObjectArray *)divideWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)b;

/*!
 @brief Enlarges the size of this PolynomialGF2n to <i>k</i> + 1.
 @param k the new maximum degree
 */
- (void)enlargeWithInt:(jint)k;

- (jboolean)isEqual:(id)other;

/*!
 @brief Computes the greatest common divisor of <i>this</i> and <i>g</i> and
  returns the result in a new PolynomialGF2n.
 @param g -           a GF2nPolynomial
 @return gcd(<i>this</i>, <i>g</i>)
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)gcdWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)g;

/*!
 @brief Returns the degree of this PolynomialGF2n.
 @return the degree of this PolynomialGF2n.
 */
- (jint)getDegree;

/*!
 @return the hash code of this polynomial
 */
- (NSUInteger)hash;

/*!
 @brief Returns true if all coefficients equal zero.
 @return true if all coefficients equal zero.
 */
- (jboolean)isZero;

/*!
 @brief Multiplies <i>this</i> by <i>b</i> and returns the result in a new
  PolynomialGF2n.
 @param b the PolynomialGF2n to multiply
 @return <i>this</i> * <i>b</i>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)multiplyWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)b;

/*!
 @brief Multiplies <i>this</i> by <i>b</i>, reduces the result by <i>g</i> and
  returns it in a new PolynomialGF2n.
 @param b the PolynomialGF2n to multiply
 @param g the modul
 @return <i>this</i> * <i>b</i> mod <i>g</i>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)multiplyAndReduceWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)b
                                                                        withOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)g;

/*!
 @brief Divides <i>this</i> by <i>b</i> and stores the quotient in a new
  PolynomialGF2n.
 @param b the divisor
 @return the quotient <i>this</i> / <i>b</i>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)quotientWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)b;

/*!
 @brief Reduces <i>this</i> by <i>g</i> and returns the result in a new
  PolynomialGF2n.
 @param g -           the modulus
 @return <i>this</i> % <i>g</i>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)reduceWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)g;

/*!
 @brief Divides <i>this</i> by <i>b</i> and stores the remainder in a new
  PolynomialGF2n.
 @param b the divisor
 @return the remainder <i>this</i> % <i>b</i>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)remainderWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial:(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)b;

/*!
 @brief Multiplies the scalar <i>s</i> to each coefficient of this
  PolynomialGF2n and returns the result in a new PolynomialGF2n.
 @param s the scalar to multiply
 @return <i>this</i> x <i>s</i>
 */
- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)scalarMultiplyWithOrgBouncycastlePqcMathLinearalgebraGF2nElement:(OrgBouncycastlePqcMathLinearalgebraGF2nElement *)s;

/*!
 @brief Sets the coefficient at <i>index</i> to <i>elem</i>.
 @param index the index
 @param elem the GF2nElement to store as coefficient  <i> index </i>
 */
- (void)setWithInt:(jint)index
withOrgBouncycastlePqcMathLinearalgebraGF2nElement:(OrgBouncycastlePqcMathLinearalgebraGF2nElement *)elem;

- (OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *)shiftLeftWithInt:(jint)amount;

/*!
 @brief Shifts left <i>this</i> by <i>amount</i> and stores the result in 
 <i>this</i> PolynomialGF2n.
 @param amount the amount to shift the coefficients
 */
- (void)shiftThisLeftWithInt:(jint)amount;

- (void)shrink;

/*!
 @brief Returns the size (=maximum degree + 1) of this PolynomialGF2n.This is
  not the degree, use getDegree instead.
 @return the size (=maximum degree + 1) of this PolynomialGF2n.
 */
- (jint)size;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial)

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithInt_withOrgBouncycastlePqcMathLinearalgebraGF2nElement_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *self, jint deg, OrgBouncycastlePqcMathLinearalgebraGF2nElement *elem);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithInt_withOrgBouncycastlePqcMathLinearalgebraGF2nElement_(jint deg, OrgBouncycastlePqcMathLinearalgebraGF2nElement *elem) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithInt_withOrgBouncycastlePqcMathLinearalgebraGF2nElement_(jint deg, OrgBouncycastlePqcMathLinearalgebraGF2nElement *elem);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *self, OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *a);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *a) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *a);

FOUNDATION_EXPORT void OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_withOrgBouncycastlePqcMathLinearalgebraGF2nField_(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *self, OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial, OrgBouncycastlePqcMathLinearalgebraGF2nField *B1);

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *new_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_withOrgBouncycastlePqcMathLinearalgebraGF2nField_(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial, OrgBouncycastlePqcMathLinearalgebraGF2nField *B1) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial *create_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial_initWithOrgBouncycastlePqcMathLinearalgebraGF2Polynomial_withOrgBouncycastlePqcMathLinearalgebraGF2nField_(OrgBouncycastlePqcMathLinearalgebraGF2Polynomial *polynomial, OrgBouncycastlePqcMathLinearalgebraGF2nField *B1);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathLinearalgebraGF2nPolynomial")

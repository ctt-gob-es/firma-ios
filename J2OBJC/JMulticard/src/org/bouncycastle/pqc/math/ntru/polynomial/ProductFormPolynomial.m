//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/InputStream.h"
#include "java/lang/System.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/SparseTernaryPolynomial.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial () {
 @public
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1_;
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2_;
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial, f1_, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial, f2_, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)
J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial, f3_, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.java"


#line 14
@implementation OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial


#line 19
- (instancetype)initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f1
                    withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f2
                    withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f3 {
  OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(self, f1, f2, f3);
  return self;
}

+ (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *)generateRandomWithInt:(jint)N
                                                                             withInt:(jint)df1
                                                                             withInt:(jint)df2
                                                                             withInt:(jint)df3Ones
                                                                             withInt:(jint)df3NegOnes
                                                        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  return OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_generateRandomWithInt_withInt_withInt_withInt_withInt_withJavaSecuritySecureRandom_(N, df1, df2, df3Ones, df3NegOnes, random);
}


#line 34
+ (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *)fromBinaryWithByteArray:(IOSByteArray *)data
                                                                               withInt:(jint)N
                                                                               withInt:(jint)df1
                                                                               withInt:(jint)df2
                                                                               withInt:(jint)df3Ones
                                                                               withInt:(jint)df3NegOnes {
  return OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithByteArray_withInt_withInt_withInt_withInt_withInt_(data, N, df1, df2, df3Ones, df3NegOnes);
}


#line 40
+ (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *)fromBinaryWithJavaIoInputStream:(JavaIoInputStream *)is
                                                                                       withInt:(jint)N
                                                                                       withInt:(jint)df1
                                                                                       withInt:(jint)df2
                                                                                       withInt:(jint)df3Ones
                                                                                       withInt:(jint)df3NegOnes {
  return OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_withInt_withInt_(is, N, df1, df2, df3Ones, df3NegOnes);
}


#line 51
- (IOSByteArray *)toBinary {
  
#line 53
  IOSByteArray *f1Bin = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f1_)) toBinary];
  IOSByteArray *f2Bin = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f2_)) toBinary];
  IOSByteArray *f3Bin = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f3_)) toBinary];
  
#line 57
  IOSByteArray *all = OrgBouncycastleUtilArrays_copyOfWithByteArray_withInt_(f1Bin, ((IOSByteArray *) nil_chk(f1Bin))->size_ + ((IOSByteArray *) nil_chk(f2Bin))->size_ + ((IOSByteArray *) nil_chk(f3Bin))->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(f2Bin, 0, all, f1Bin->size_, f2Bin->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(f3Bin, 0, all, f1Bin->size_ + f2Bin->size_, f3Bin->size_);
  return all;
}


#line 63
- (OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)b {
  
#line 66
  OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *c = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f1_)) multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:b];
  c = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f2_)) multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:c];
  [((OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(c)) addWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:[((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f3_)) multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:b]];
  return c;
}

- (OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *)b {
  
#line 75
  OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *c = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f1_)) multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:b];
  c = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f2_)) multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:c];
  [((OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *) nil_chk(c)) addWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:[((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f3_)) multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:b]];
  return c;
}

- (OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)toIntegerPolynomial {
  
#line 84
  OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *i = [((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f1_)) multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:[((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f2_)) toIntegerPolynomial]];
  [((OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(i)) addWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:[((OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *) nil_chk(f3_)) toIntegerPolynomial]];
  return i;
}

- (OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)poly2
                                                                                                                 withInt:(jint)modulus {
  
#line 92
  OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *c = [self multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:poly2];
  [((OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(c)) modWithInt:modulus];
  return c;
}


#line 97
- (NSUInteger)hash {
  
#line 100
  jint prime = 31;
  jint result = 1;
  result = prime * result + (f1_ == nil ? 0 : ((jint) [f1_ hash]));
  result = prime * result + (f2_ == nil ? 0 : ((jint) [f2_ hash]));
  return prime * result + (f3_ == nil ? 0 : ((jint) [f3_ hash]));
}

- (jboolean)isEqual:(id)obj {
  
#line 110
  if (JreObjectEqualsEquals(self, obj)) {
    
#line 112
    return true;
  }
  if ((obj == nil) || (!JreObjectEqualsEquals([self java_getClass], [nil_chk(obj) java_getClass]))) {
    
#line 116
    return false;
  }
  OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *other = (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *) cast_chk(obj, [OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial class]);
  if (f1_ == nil) {
    
#line 121
    if (((OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *) nil_chk(other))->f1_ != nil) {
      
#line 123
      return false;
    }
  }
  else if (![f1_ isEqual:((OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *) nil_chk(other))->f1_]) {
    
#line 128
    return false;
  }
  if (f2_ == nil) {
    
#line 132
    if (other->f2_ != nil) {
      
#line 134
      return false;
    }
  }
  else if (![f2_ isEqual:other->f2_]) {
    
#line 139
    return false;
  }
  if (f3_ == nil) {
    
#line 143
    if (other->f3_ != nil) {
      
#line 145
      return false;
    }
  }
  else if (![f3_ isEqual:other->f3_]) {
    
#line 150
    return false;
  }
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial;", 0x9, 3, 4, 5, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial;", 0x9, 3, 6, 5, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial;", 0x1, 7, 9, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;", 0x1, 7, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 13, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:);
  methods[1].selector = @selector(generateRandomWithInt:withInt:withInt:withInt:withInt:withJavaSecuritySecureRandom:);
  methods[2].selector = @selector(fromBinaryWithByteArray:withInt:withInt:withInt:withInt:withInt:);
  methods[3].selector = @selector(fromBinaryWithJavaIoInputStream:withInt:withInt:withInt:withInt:withInt:);
  methods[4].selector = @selector(toBinary);
  methods[5].selector = @selector(multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:);
  methods[6].selector = @selector(multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:);
  methods[7].selector = @selector(toIntegerPolynomial);
  methods[8].selector = @selector(multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:withInt:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "f1_", "LOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "f2_", "LOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "f3_", "LOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial;LOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial;LOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial;", "generateRandom", "IIIIILJavaSecuritySecureRandom;", "fromBinary", "[BIIIII", "LJavaIoIOException;", "LJavaIoInputStream;IIIII", "mult", "LOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;", "LOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial;", "LOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;I", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial = { "ProductFormPolynomial", "org.bouncycastle.pqc.math.ntru.polynomial", ptrTable, methods, fields, 7, 0x1, 11, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial;
}

@end


#line 19
void OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *self, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3) {
  NSObject_init(self);
  self->f1_ = f1;
  self->f2_ = f2;
  self->f3_ = f3;
}


#line 19
OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *new_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial, initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_, f1, f2, f3)
}


#line 19
OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *create_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial, initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_, f1, f2, f3)
}


#line 26
OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_generateRandomWithInt_withInt_withInt_withInt_withInt_withJavaSecuritySecureRandom_(jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes, JavaSecuritySecureRandom *random) {
  OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initialize();
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1 = OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_generateRandomWithInt_withInt_withInt_withJavaSecuritySecureRandom_(N, df1, df1, random);
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2 = OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_generateRandomWithInt_withInt_withInt_withJavaSecuritySecureRandom_(N, df2, df2, random);
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3 = OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_generateRandomWithInt_withInt_withInt_withJavaSecuritySecureRandom_(N, df3Ones, df3NegOnes, random);
  return new_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(f1, f2, f3);
}

OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithByteArray_withInt_withInt_withInt_withInt_withInt_(IOSByteArray *data, jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes) {
  OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initialize();
  
#line 37
  return OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_withInt_withInt_(new_JavaIoByteArrayInputStream_initWithByteArray_(data), N, df1, df2, df3Ones, df3NegOnes);
}


#line 40
OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_withInt_withInt_(JavaIoInputStream *is, jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes) {
  OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initialize();
  
#line 43
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1;
  
#line 45
  f1 = OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_(is, N, df1, df1);
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2 = OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_(is, N, df2, df2);
  OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3 = OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_(is, N, df3Ones, df3NegOnes);
  return new_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(f1, f2, f3);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/ntru/polynomial/ProductFormPolynomial.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial")
#ifdef RESTRICT_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial
#define INCLUDE_ALL_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial 0
#else
#define INCLUDE_ALL_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial 1
#endif
#undef RESTRICT_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial

#if !defined (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_) && (INCLUDE_ALL_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial || defined(INCLUDE_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial))
#define OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_

#define RESTRICT_OrgBouncycastlePqcMathNtruPolynomialPolynomial 1
#define INCLUDE_OrgBouncycastlePqcMathNtruPolynomialPolynomial 1
#include "org/bouncycastle/pqc/math/ntru/polynomial/Polynomial.h"

@class IOSByteArray;
@class JavaIoInputStream;
@class JavaSecuritySecureRandom;
@class OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial;
@class OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;
@class OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial;

/*!
 @brief A polynomial of the form <code>f1*f2+f3</code>, where 
 <code>f1,f2,f3</code> are very sparsely populated ternary polynomials.
 */
@interface OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial : NSObject < OrgBouncycastlePqcMathNtruPolynomialPolynomial >

#pragma mark Public

- (instancetype)initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f1
                    withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f2
                    withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial:(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *)f3;

- (jboolean)isEqual:(id)obj;

+ (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *)fromBinaryWithByteArray:(IOSByteArray *)data
                                                                               withInt:(jint)N
                                                                               withInt:(jint)df1
                                                                               withInt:(jint)df2
                                                                               withInt:(jint)df3Ones
                                                                               withInt:(jint)df3NegOnes;

+ (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *)fromBinaryWithJavaIoInputStream:(JavaIoInputStream *)is
                                                                                       withInt:(jint)N
                                                                                       withInt:(jint)df1
                                                                                       withInt:(jint)df2
                                                                                       withInt:(jint)df3Ones
                                                                                       withInt:(jint)df3NegOnes;

+ (OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *)generateRandomWithInt:(jint)N
                                                                             withInt:(jint)df1
                                                                             withInt:(jint)df2
                                                                             withInt:(jint)df3Ones
                                                                             withInt:(jint)df3NegOnes
                                                        withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (NSUInteger)hash;

- (OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *)b;

- (OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)b;

- (OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)poly2
                                                                                                                 withInt:(jint)modulus;

- (IOSByteArray *)toBinary;

- (OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)toIntegerPolynomial;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial)

FOUNDATION_EXPORT void OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *self, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3);

FOUNDATION_EXPORT OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *new_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *create_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_withOrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial_(OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f1, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f2, OrgBouncycastlePqcMathNtruPolynomialSparseTernaryPolynomial *f3);

FOUNDATION_EXPORT OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_generateRandomWithInt_withInt_withInt_withInt_withInt_withJavaSecuritySecureRandom_(jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes, JavaSecuritySecureRandom *random);

FOUNDATION_EXPORT OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithByteArray_withInt_withInt_withInt_withInt_withInt_(IOSByteArray *data, jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes);

FOUNDATION_EXPORT OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial *OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial_fromBinaryWithJavaIoInputStream_withInt_withInt_withInt_withInt_withInt_(JavaIoInputStream *is, jint N, jint df1, jint df2, jint df3Ones, jint df3NegOnes);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastlePqcMathNtruPolynomialProductFormPolynomial")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/IntegerPolynomial.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/TernaryPolynomial.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5 must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 () {
 @public
  IOSLongArray *coeffs_;
  jint numCoeffs_;
}

- (instancetype)initWithLongArray:(IOSLongArray *)coeffs
                          withInt:(jint)numCoeffs;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5, coeffs_, IOSLongArray *)

__attribute__((unused)) static void OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *self, IOSLongArray *coeffs, jint numCoeffs);

__attribute__((unused)) static OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *new_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(IOSLongArray *coeffs, jint numCoeffs) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *create_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(IOSLongArray *coeffs, jint numCoeffs);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/ntru/polynomial/LongPolynomial5.java"


#line 10
@implementation OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5


#line 20
- (instancetype)initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:(OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)p {
  OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_(self, p);
  return self;
}


#line 39
- (instancetype)initWithLongArray:(IOSLongArray *)coeffs
                          withInt:(jint)numCoeffs {
  OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(self, coeffs, numCoeffs);
  return self;
}


#line 48
- (OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *)multWithOrgBouncycastlePqcMathNtruPolynomialTernaryPolynomial:(id<OrgBouncycastlePqcMathNtruPolynomialTernaryPolynomial>)poly2 {
  
#line 50
  IOSObjectArray *prod = [IOSLongArray newArrayWithDimensions:2 lengths:(jint[]){ 5, ((IOSLongArray *) nil_chk(coeffs_))->size_ + JreIntDiv(([((id<OrgBouncycastlePqcMathNtruPolynomialTernaryPolynomial>) nil_chk(poly2)) size] + 4), 5) - 1 }];
  
#line 53
  IOSIntArray *ones = [poly2 getOnes];
  for (jint idx = 0; idx != ((IOSIntArray *) nil_chk(ones))->size_; idx++) {
    
#line 56
    jint pIdx = IOSIntArray_Get(ones, idx);
    jint cIdx = JreIntDiv(pIdx, 5);
    jint m = pIdx - cIdx * 5;
    for (jint i = 0; i < ((IOSLongArray *) nil_chk(coeffs_))->size_; i++) {
      
#line 61
      *IOSLongArray_GetRef(nil_chk(IOSObjectArray_Get(prod, m)), cIdx) = (IOSLongArray_Get(nil_chk(IOSObjectArray_Get(prod, m)), cIdx) + IOSLongArray_Get(coeffs_, i)) & (jlong) 0x7FF7FF7FF7FF7FFLL;
      cIdx++;
    }
  }
  
#line 67
  IOSIntArray *negOnes = [poly2 getNegOnes];
  for (jint idx = 0; idx != ((IOSIntArray *) nil_chk(negOnes))->size_; idx++) {
    
#line 70
    jint pIdx = IOSIntArray_Get(negOnes, idx);
    jint cIdx = JreIntDiv(pIdx, 5);
    jint m = pIdx - cIdx * 5;
    for (jint i = 0; i < ((IOSLongArray *) nil_chk(coeffs_))->size_; i++) {
      
#line 75
      *IOSLongArray_GetRef(nil_chk(IOSObjectArray_Get(prod, m)), cIdx) = ((jlong) 0x800800800800800LL + IOSLongArray_Get(nil_chk(IOSObjectArray_Get(prod, m)), cIdx) - IOSLongArray_Get(coeffs_, i)) & (jlong) 0x7FF7FF7FF7FF7FFLL;
      cIdx++;
    }
  }
  
#line 81
  IOSLongArray *cCoeffs = OrgBouncycastleUtilArrays_copyOfWithLongArray_withInt_(IOSObjectArray_Get(prod, 0), ((IOSLongArray *) nil_chk(IOSObjectArray_Get(prod, 0)))->size_ + 1);
  for (jint m = 1; m <= 4; m++) {
    
#line 84
    jint shift = m * 12;
    jint shift60 = 60 - shift;
    jlong mask = (JreLShift64(1LL, shift60)) - 1;
    jint pLen = ((IOSLongArray *) nil_chk(IOSObjectArray_Get(prod, m)))->size_;
    for (jint i = 0; i < pLen; i++) {
      
#line 90
      jlong upper;
      
#line 90
      jlong lower;
      upper = JreRShift64(IOSLongArray_Get(nil_chk(IOSObjectArray_Get(prod, m)), i), shift60);
      lower = IOSLongArray_Get(nil_chk(IOSObjectArray_Get(prod, m)), i) & mask;
      
#line 94
      *IOSLongArray_GetRef(nil_chk(cCoeffs), i) = (IOSLongArray_Get(cCoeffs, i) + (JreLShift64(lower, shift))) & (jlong) 0x7FF7FF7FF7FF7FFLL;
      jint nextIdx = i + 1;
      *IOSLongArray_GetRef(cCoeffs, nextIdx) = (IOSLongArray_Get(cCoeffs, nextIdx) + upper) & (jlong) 0x7FF7FF7FF7FF7FFLL;
    }
  }
  
#line 101
  jint shift = 12 * (JreIntMod(numCoeffs_, 5));
  for (jint cIdx = ((IOSLongArray *) nil_chk(coeffs_))->size_ - 1; cIdx < ((IOSLongArray *) nil_chk(cCoeffs))->size_; cIdx++) {
    
#line 104
    jlong iCoeff;
    jint newIdx;
    if (cIdx == coeffs_->size_ - 1) {
      
#line 108
      iCoeff = numCoeffs_ == 5 ? 0 : JreRShift64(IOSLongArray_Get(cCoeffs, cIdx), shift);
      newIdx = 0;
    }
    else {
      
#line 113
      iCoeff = IOSLongArray_Get(cCoeffs, cIdx);
      newIdx = cIdx * 5 - numCoeffs_;
    }
    
#line 117
    jint base = JreIntDiv(newIdx, 5);
    jint m = newIdx - base * 5;
    jlong lower = JreLShift64(iCoeff, (12 * m));
    jlong upper = JreRShift64(iCoeff, (12 * (5 - m)));
    *IOSLongArray_GetRef(cCoeffs, base) = (IOSLongArray_Get(cCoeffs, base) + lower) & (jlong) 0x7FF7FF7FF7FF7FFLL;
    jint base1 = base + 1;
    if (base1 < coeffs_->size_) {
      
#line 125
      *IOSLongArray_GetRef(cCoeffs, base1) = (IOSLongArray_Get(cCoeffs, base1) + upper) & (jlong) 0x7FF7FF7FF7FF7FFLL;
    }
  }
  
#line 129
  return new_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(cCoeffs, numCoeffs_);
}


#line 132
- (OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *)toIntegerPolynomial {
  
#line 134
  IOSIntArray *intCoeffs = [IOSIntArray newArrayWithLength:numCoeffs_];
  jint cIdx = 0;
  jint shift = 0;
  for (jint i = 0; i < numCoeffs_; i++) {
    
#line 139
    *IOSIntArray_GetRef(intCoeffs, i) = (jint) ((JreRShift64(IOSLongArray_Get(nil_chk(coeffs_), cIdx), shift)) & 2047);
    shift += 12;
    if (shift >= 60) {
      
#line 143
      shift = 0;
      cIdx++;
    }
  }
  return new_OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_initWithIntArray_(intCoeffs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialLongPolynomial5;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial:);
  methods[1].selector = @selector(initWithLongArray:withInt:);
  methods[2].selector = @selector(multWithOrgBouncycastlePqcMathNtruPolynomialTernaryPolynomial:);
  methods[3].selector = @selector(toIntegerPolynomial);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "coeffs_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numCoeffs_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial;", "[JI", "mult", "LOrgBouncycastlePqcMathNtruPolynomialTernaryPolynomial;" };
  static const J2ObjcClassInfo _OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 = { "LongPolynomial5", "org.bouncycastle.pqc.math.ntru.polynomial", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5;
}

@end


#line 20
void OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *self, OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *p) {
  NSObject_init(self);
  self->numCoeffs_ = ((IOSIntArray *) nil_chk(((OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *) nil_chk(p))->coeffs_))->size_;
  
#line 24
  self->coeffs_ = [IOSLongArray newArrayWithLength:JreIntDiv((self->numCoeffs_ + 4), 5)];
  jint cIdx = 0;
  jint shift = 0;
  for (jint i = 0; i < self->numCoeffs_; i++) {
    
#line 29
    *IOSLongArray_GetRef(self->coeffs_, cIdx) |= JreLShift64(((jlong) IOSIntArray_Get(p->coeffs_, i)), shift);
    shift += 12;
    if (shift >= 60) {
      
#line 33
      shift = 0;
      cIdx++;
    }
  }
}


#line 20
OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *new_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *p) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5, initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_, p)
}


#line 20
OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *create_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_(OrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial *p) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5, initWithOrgBouncycastlePqcMathNtruPolynomialIntegerPolynomial_, p)
}


#line 39
void OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *self, IOSLongArray *coeffs, jint numCoeffs) {
  NSObject_init(self);
  self->coeffs_ = coeffs;
  self->numCoeffs_ = numCoeffs;
}


#line 39
OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *new_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(IOSLongArray *coeffs, jint numCoeffs) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5, initWithLongArray_withInt_, coeffs, numCoeffs)
}


#line 39
OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5 *create_OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5_initWithLongArray_withInt_(IOSLongArray *coeffs, jint numCoeffs) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5, initWithLongArray_withInt_, coeffs, numCoeffs)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcMathNtruPolynomialLongPolynomial5)

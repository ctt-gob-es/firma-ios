//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial.h"
#include "org/bouncycastle/pqc/math/ntru/polynomial/BigIntPolynomial.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial ()

/*!
 @brief Karazuba multiplication
 */
- (OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)poly2;

- (IOSObjectArray *)copyOfWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                              withInt:(jint)length OBJC_METHOD_FAMILY_NONE;

- (IOSObjectArray *)copyOfRangeWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                                   withInt:(jint)from
                                                   withInt:(jint)to OBJC_METHOD_FAMILY_NONE;

@end

inline JavaMathBigDecimal *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_get_ZERO(void);
static JavaMathBigDecimal *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, ZERO, JavaMathBigDecimal *)

inline JavaMathBigDecimal *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_get_ONE_HALF(void);
static JavaMathBigDecimal *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, ONE_HALF, JavaMathBigDecimal *)

__attribute__((unused)) static OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *poly2);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint length);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint from, jint to);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial)


#line 10
@implementation OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial


#line 22
- (instancetype)initWithInt:(jint)N {
  OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(self, N);
  return self;
}


#line 36
- (instancetype)initWithJavaMathBigDecimalArray:(IOSObjectArray *)coeffs {
  OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(self, coeffs);
  return self;
}


#line 46
- (instancetype)initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *)p {
  OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_(self, p);
  return self;
}


#line 59
- (void)halve {
  
#line 61
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(coeffs_))->size_; i++) {
    
#line 63
    (void) IOSObjectArray_Set(coeffs_, i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(coeffs_, i))) multiplyWithJavaMathBigDecimal:OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF]);
  }
}


#line 74
- (OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *)poly2 {
  
#line 76
  return [self multWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_(poly2)];
}


#line 86
- (OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)poly2 {
  
#line 88
  jint N = ((IOSObjectArray *) nil_chk(coeffs_))->size_;
  if (((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(poly2))->coeffs_->size_ != N) {
    
#line 91
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Number of coefficients must be the same");
  }
  
#line 94
  OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *c = OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_(self, poly2);
  
#line 96
  if (((IOSObjectArray *) nil_chk(((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c))->coeffs_))->size_ > N) {
    
#line 98
    for (jint k = N; k < ((IOSObjectArray *) nil_chk(c->coeffs_))->size_; k++) {
      
#line 100
      (void) IOSObjectArray_Set(c->coeffs_, k - N, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c->coeffs_, k - N))) addWithJavaMathBigDecimal:IOSObjectArray_Get(c->coeffs_, k)]);
    }
    c->coeffs_ = OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, c->coeffs_, N);
  }
  return c;
}


#line 110
- (OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)poly2 {
  return OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_(self, poly2);
}


#line 167
- (void)addWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)b {
  
#line 169
  if (((IOSObjectArray *) nil_chk(((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(b))->coeffs_))->size_ > coeffs_->size_) {
    
#line 171
    jint N = coeffs_->size_;
    coeffs_ = OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, coeffs_, b->coeffs_->size_);
    for (jint i = N; i < ((IOSObjectArray *) nil_chk(coeffs_))->size_; i++) {
      
#line 175
      (void) IOSObjectArray_Set(coeffs_, i, OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO);
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(b->coeffs_))->size_; i++) {
    
#line 180
    (void) IOSObjectArray_Set(coeffs_, i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(coeffs_, i))) addWithJavaMathBigDecimal:IOSObjectArray_Get(b->coeffs_, i)]);
  }
}


#line 189
- (void)subWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *)b {
  
#line 191
  if (((IOSObjectArray *) nil_chk(((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(b))->coeffs_))->size_ > coeffs_->size_) {
    
#line 193
    jint N = coeffs_->size_;
    coeffs_ = OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, coeffs_, b->coeffs_->size_);
    for (jint i = N; i < ((IOSObjectArray *) nil_chk(coeffs_))->size_; i++) {
      
#line 197
      (void) IOSObjectArray_Set(coeffs_, i, OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO);
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(b->coeffs_))->size_; i++) {
    
#line 202
    (void) IOSObjectArray_Set(coeffs_, i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(coeffs_, i))) subtractWithJavaMathBigDecimal:IOSObjectArray_Get(b->coeffs_, i)]);
  }
}


#line 211
- (OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *)round {
  
#line 213
  jint N = ((IOSObjectArray *) nil_chk(coeffs_))->size_;
  OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *p = new_OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_initWithInt_(N);
  for (jint i = 0; i < N; i++) {
    
#line 217
    (void) IOSObjectArray_Set(nil_chk(p->coeffs_), i, [((JavaMathBigDecimal *) nil_chk([((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(nil_chk(coeffs_), i))) setScaleWithInt:0 withInt:JavaMathBigDecimal_ROUND_HALF_EVEN])) toBigInteger]);
  }
  return p;
}


#line 225
- (id)java_clone {
  
#line 228
  return new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_([((IOSObjectArray *) nil_chk(coeffs_)) java_clone]);
}

- (IOSObjectArray *)copyOfWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                              withInt:(jint)length {
  return OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, a, length);
}


#line 240
- (IOSObjectArray *)copyOfRangeWithJavaMathBigDecimalArray:(IOSObjectArray *)a
                                                   withInt:(jint)from
                                                   withInt:(jint)to {
  return OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(self, a, from, to);
}


#line 250
- (IOSObjectArray *)getCoeffs {
  
#line 252
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(coeffs_))->size_ type:JavaMathBigDecimal_class_()];
  
#line 254
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(coeffs_, 0, tmp, 0, coeffs_->size_);
  
#line 256
  return tmp;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial;", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial;", 0x2, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigDecimal;", 0x2, 9, 10, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigDecimal;", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigDecimal;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithJavaMathBigDecimalArray:);
  methods[2].selector = @selector(initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:);
  methods[3].selector = @selector(halve);
  methods[4].selector = @selector(multWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial:);
  methods[5].selector = @selector(multWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[6].selector = @selector(multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[7].selector = @selector(addWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[8].selector = @selector(subWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:);
  methods[9].selector = @selector(round);
  methods[10].selector = @selector(java_clone);
  methods[11].selector = @selector(copyOfWithJavaMathBigDecimalArray:withInt:);
  methods[12].selector = @selector(copyOfRangeWithJavaMathBigDecimalArray:withInt:withInt:);
  methods[13].selector = @selector(getCoeffs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ZERO", "LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "ONE_HALF", "LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "coeffs_", "[LJavaMathBigDecimal;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "[LJavaMathBigDecimal;", "LOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial;", "mult", "LOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial;", "multRecursive", "add", "sub", "clone", "copyOf", "[LJavaMathBigDecimal;I", "copyOfRange", "[LJavaMathBigDecimal;II", &OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO, &OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF };
  static const J2ObjcClassInfo _OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial = { "BigDecimalPolynomial", "org.bouncycastle.pqc.math.ntru.polynomial", ptrTable, methods, fields, 7, 0x1, 14, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial;
}

+ (void)initialize {
  if (self == [OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial class]) {
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO = new_JavaMathBigDecimal_initWithNSString_(
#line 12
    @"0");
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ONE_HALF = new_JavaMathBigDecimal_initWithNSString_(
#line 13
    @"0.5");
    J2OBJC_SET_INITIALIZED(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial)
  }
}

@end


#line 22
void OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, jint N) {
  NSObject_init(self);
  self->coeffs_ = [IOSObjectArray newArrayWithLength:N type:JavaMathBigDecimal_class_()];
  for (jint i = 0; i < N; i++) {
    
#line 27
    (void) IOSObjectArray_Set(self->coeffs_, i, OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_ZERO);
  }
}


#line 22
OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(jint N) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithInt_, N)
}


#line 22
OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *create_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(jint N) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithInt_, N)
}


#line 36
void OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *coeffs) {
  NSObject_init(self);
  self->coeffs_ = coeffs;
}


#line 36
OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(IOSObjectArray *coeffs) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithJavaMathBigDecimalArray_, coeffs)
}


#line 36
OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *create_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(IOSObjectArray *coeffs) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithJavaMathBigDecimalArray_, coeffs)
}


#line 46
void OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *p) {
  NSObject_init(self);
  jint N = ((IOSObjectArray *) nil_chk(((OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *) nil_chk(p))->coeffs_))->size_;
  self->coeffs_ = [IOSObjectArray newArrayWithLength:N type:JavaMathBigDecimal_class_()];
  for (jint i = 0; i < N; i++) {
    
#line 52
    (void) IOSObjectArray_SetAndConsume(nil_chk(self->coeffs_), i, new_JavaMathBigDecimal_initWithJavaMathBigInteger_(IOSObjectArray_Get(nil_chk(p->coeffs_), i)));
  }
}


#line 46
OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *p) {
  J2OBJC_NEW_IMPL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_, p)
}


#line 46
OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *create_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_(OrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial *p) {
  J2OBJC_CREATE_IMPL(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial, initWithOrgBouncycastlePqcMathNtruPolynomialBigIntPolynomial_, p)
}


#line 110
OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *poly2) {
  
#line 112
  IOSObjectArray *a = self->coeffs_;
  IOSObjectArray *b = ((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(poly2))->coeffs_;
  
#line 115
  jint n = ((IOSObjectArray *) nil_chk(poly2->coeffs_))->size_;
  if (n <= 1) {
    
#line 118
    IOSObjectArray *c = [self->coeffs_ java_clone];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(self->coeffs_))->size_; i++) {
      
#line 121
      (void) IOSObjectArray_Set(nil_chk(c), i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c, i))) multiplyWithJavaMathBigDecimal:IOSObjectArray_Get(poly2->coeffs_, 0)]);
    }
    return new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(c);
  }
  else {
    
#line 127
    jint n1 = JreIntDiv(n, 2);
    
#line 129
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *a1 = new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, a, n1));
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *a2 = new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(self, a, n1, n));
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *b1 = new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(self, b, n1));
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *b2 = new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithJavaMathBigDecimalArray_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(self, b, n1, n));
    
#line 134
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *A = (OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) cast_chk([a1 java_clone], [OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial class]);
    [((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(A)) addWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:a2];
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *B = (OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) cast_chk([b1 java_clone], [OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial class]);
    [((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(B)) addWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:b2];
    
#line 139
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *c1 = OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_(a1, b1);
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *c2 = OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_(a2, b2);
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *c3 = OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_multRecursiveWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_(A, B);
    [((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c3)) subWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:c1];
    [c3 subWithOrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial:c2];
    
#line 145
    OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *c = new_OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_initWithInt_(2 * n - 1);
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c1))->coeffs_))->size_; i++) {
      
#line 148
      (void) IOSObjectArray_Set(c->coeffs_, i, IOSObjectArray_Get(c1->coeffs_, i));
    }
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(c3->coeffs_))->size_; i++) {
      
#line 152
      (void) IOSObjectArray_Set(c->coeffs_, n1 + i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c->coeffs_, n1 + i))) addWithJavaMathBigDecimal:IOSObjectArray_Get(c3->coeffs_, i)]);
    }
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *) nil_chk(c2))->coeffs_))->size_; i++) {
      
#line 156
      (void) IOSObjectArray_Set(c->coeffs_, 2 * n1 + i, [((JavaMathBigDecimal *) nil_chk(IOSObjectArray_Get(c->coeffs_, 2 * n1 + i))) addWithJavaMathBigDecimal:IOSObjectArray_Get(c2->coeffs_, i)]);
    }
    return c;
  }
}


#line 231
IOSObjectArray *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfWithJavaMathBigDecimalArray_withInt_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint length) {
  
#line 233
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:length type:JavaMathBigDecimal_class_()];
  
#line 235
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, tmp, 0, ((IOSObjectArray *) nil_chk(a))->size_ < length ? a->size_ : length);
  
#line 237
  return tmp;
}


#line 240
IOSObjectArray *OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial_copyOfRangeWithJavaMathBigDecimalArray_withInt_withInt_(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial *self, IOSObjectArray *a, jint from, jint to) {
  
#line 242
  jint newLength = to - from;
  IOSObjectArray *tmp = [IOSObjectArray newArrayWithLength:to - from type:JavaMathBigDecimal_class_()];
  
#line 245
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, from, tmp, 0, (((IOSObjectArray *) nil_chk(a))->size_ - from) < newLength ? (a->size_ - from) : newLength);
  
#line 247
  return tmp;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastlePqcMathNtruPolynomialBigDecimalPolynomial)

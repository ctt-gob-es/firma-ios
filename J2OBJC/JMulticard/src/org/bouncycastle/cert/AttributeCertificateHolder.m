//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/AttributeCertificateHolder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Enumerated.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/x500/X500Name.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/GeneralName.h"
#include "org/bouncycastle/asn1/x509/GeneralNames.h"
#include "org/bouncycastle/asn1/x509/Holder.h"
#include "org/bouncycastle/asn1/x509/IssuerSerial.h"
#include "org/bouncycastle/asn1/x509/ObjectDigestInfo.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/cert/AttributeCertificateHolder.h"
#include "org/bouncycastle/cert/X509CertificateHolder.h"
#include "org/bouncycastle/operator/DigestCalculator.h"
#include "org/bouncycastle/operator/DigestCalculatorProvider.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cert/AttributeCertificateHolder must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCertAttributeCertificateHolder ()

- (OrgBouncycastleAsn1X509GeneralNames *)generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)principal;

- (jboolean)matchesDNWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)subject
                 withOrgBouncycastleAsn1X509GeneralNames:(OrgBouncycastleAsn1X509GeneralNames *)targets;

- (IOSObjectArray *)getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names;

@end

inline id<OrgBouncycastleOperatorDigestCalculatorProvider> OrgBouncycastleCertAttributeCertificateHolder_get_digestCalculatorProvider(void);
inline id<OrgBouncycastleOperatorDigestCalculatorProvider> OrgBouncycastleCertAttributeCertificateHolder_set_digestCalculatorProvider(id<OrgBouncycastleOperatorDigestCalculatorProvider> value);
static id<OrgBouncycastleOperatorDigestCalculatorProvider> OrgBouncycastleCertAttributeCertificateHolder_digestCalculatorProvider;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCertAttributeCertificateHolder, digestCalculatorProvider, id<OrgBouncycastleOperatorDigestCalculatorProvider>)

__attribute__((unused)) static OrgBouncycastleAsn1X509GeneralNames *OrgBouncycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleAsn1X500X500Name *principal);

__attribute__((unused)) static jboolean OrgBouncycastleCertAttributeCertificateHolder_matchesDNWithOrgBouncycastleAsn1X500X500Name_withOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleAsn1X500X500Name *subject, OrgBouncycastleAsn1X509GeneralNames *targets);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleCertAttributeCertificateHolder_getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray_(OrgBouncycastleCertAttributeCertificateHolder *self, IOSObjectArray *names);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/AttributeCertificateHolder.java"


#line 44
@implementation OrgBouncycastleCertAttributeCertificateHolder


#line 51
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 62
- (instancetype)initWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)issuerName
                                 withJavaMathBigInteger:(JavaMathBigInteger *)serialNumber {
  OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(self, issuerName, serialNumber);
  return self;
}


#line 75
- (instancetype)initWithOrgBouncycastleCertX509CertificateHolder:(OrgBouncycastleCertX509CertificateHolder *)cert {
  OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleCertX509CertificateHolder_(self, cert);
  return self;
}


#line 86
- (instancetype)initWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)principal {
  OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_(self, principal);
  return self;
}


#line 114
- (instancetype)initWithInt:(jint)digestedObjectType
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestAlgorithm
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)otherObjectTypeID
              withByteArray:(IOSByteArray *)objectDigest {
  OrgBouncycastleCertAttributeCertificateHolder_initWithInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(self, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest);
  return self;
}


#line 136
- (jint)getDigestedObjectType {
  
#line 138
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 140
    return [((OrgBouncycastleAsn1ASN1Enumerated *) nil_chk([((OrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestedObjectType])) intValueExact];
  }
  return -1;
}


#line 150
- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getDigestAlgorithm {
  
#line 152
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 154
    return [((OrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestAlgorithm];
  }
  return nil;
}


#line 164
- (IOSByteArray *)getObjectDigest {
  
#line 166
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 168
    return [((OrgBouncycastleAsn1ASN1BitString *) nil_chk([((OrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getObjectDigest])) getBytes];
  }
  return nil;
}


#line 179
- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getOtherObjectTypeID {
  
#line 181
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getObjectDigestInfo] != nil) {
    
#line 183
    (void) new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getOtherObjectTypeID])) getId]);
  }
  return nil;
}


#line 188
- (OrgBouncycastleAsn1X509GeneralNames *)generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)principal {
  return OrgBouncycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name_(self, principal);
}


#line 193
- (jboolean)matchesDNWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)subject
                 withOrgBouncycastleAsn1X509GeneralNames:(OrgBouncycastleAsn1X509GeneralNames *)targets {
  return OrgBouncycastleCertAttributeCertificateHolder_matchesDNWithOrgBouncycastleAsn1X500X500Name_withOrgBouncycastleAsn1X509GeneralNames_(self, subject, targets);
}


#line 213
- (IOSObjectArray *)getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray:(IOSObjectArray *)names {
  return OrgBouncycastleCertAttributeCertificateHolder_getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray_(self, names);
}


#line 235
- (IOSObjectArray *)getEntityNames {
  
#line 237
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getEntityName] != nil) {
    
#line 239
    return OrgBouncycastleCertAttributeCertificateHolder_getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray_(self, [((OrgBouncycastleAsn1X509GeneralNames *) nil_chk([holder_ getEntityName])) getNames]);
  }
  
#line 242
  return nil;
}


#line 250
- (IOSObjectArray *)getIssuer {
  
#line 252
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 254
    return OrgBouncycastleCertAttributeCertificateHolder_getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray_(self, [((OrgBouncycastleAsn1X509GeneralNames *) nil_chk([((OrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer])) getNames]);
  }
  
#line 257
  return nil;
}


#line 267
- (JavaMathBigInteger *)getSerialNumber {
  
#line 269
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 271
    return [((OrgBouncycastleAsn1ASN1Integer *) nil_chk([((OrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) getValue];
  }
  
#line 274
  return nil;
}


#line 277
- (id)java_clone {
  
#line 280
  return new_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1ASN1Sequence_((OrgBouncycastleAsn1ASN1Sequence *) cast_chk([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) toASN1Primitive], [OrgBouncycastleAsn1ASN1Sequence class]));
}

- (jboolean)matchWithId:(id)obj {
  
#line 286
  if (!([obj isKindOfClass:[OrgBouncycastleCertX509CertificateHolder class]])) {
    
#line 288
    return false;
  }
  
#line 291
  OrgBouncycastleCertX509CertificateHolder *x509Cert = (OrgBouncycastleCertX509CertificateHolder *) cast_chk(obj, [OrgBouncycastleCertX509CertificateHolder class]);
  
#line 293
  if ([((OrgBouncycastleAsn1X509Holder *) nil_chk(holder_)) getBaseCertificateID] != nil) {
    
#line 295
    return [((OrgBouncycastleAsn1ASN1Integer *) nil_chk([((OrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getSerial])) hasValueWithJavaMathBigInteger:[((OrgBouncycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getSerialNumber]] && OrgBouncycastleCertAttributeCertificateHolder_matchesDNWithOrgBouncycastleAsn1X500X500Name_withOrgBouncycastleAsn1X509GeneralNames_(self,
#line 296
    [x509Cert getIssuer], [((OrgBouncycastleAsn1X509IssuerSerial *) nil_chk([holder_ getBaseCertificateID])) getIssuer]);
  }
  
#line 299
  if ([holder_ getEntityName] != nil) {
    
#line 301
    if (OrgBouncycastleCertAttributeCertificateHolder_matchesDNWithOrgBouncycastleAsn1X500X500Name_withOrgBouncycastleAsn1X509GeneralNames_(self, [((OrgBouncycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getSubject],
#line 302
    [holder_ getEntityName])) {
      
#line 304
      return true;
    }
  }
  
#line 308
  if ([holder_ getObjectDigestInfo] != nil) {
    
#line 310
    @try {
      
#line 312
      id<OrgBouncycastleOperatorDigestCalculator> digCalc = [((id<OrgBouncycastleOperatorDigestCalculatorProvider>) nil_chk(OrgBouncycastleCertAttributeCertificateHolder_digestCalculatorProvider)) getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:[((OrgBouncycastleAsn1X509ObjectDigestInfo *) nil_chk([holder_ getObjectDigestInfo])) getDigestAlgorithm]];
      JavaIoOutputStream *digOut = [((id<OrgBouncycastleOperatorDigestCalculator>) nil_chk(digCalc)) getOutputStream];
      
#line 315
      switch ([self getDigestedObjectType]) {
        
#line 317
        case OrgBouncycastleAsn1X509ObjectDigestInfo_publicKey:
        
#line 319
        [((JavaIoOutputStream *) nil_chk(digOut)) writeWithByteArray:[((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk([((OrgBouncycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getSubjectPublicKeyInfo])) getEncoded]];
        break;
        case OrgBouncycastleAsn1X509ObjectDigestInfo_publicKeyCert:
        [((JavaIoOutputStream *) nil_chk(digOut)) writeWithByteArray:[((OrgBouncycastleCertX509CertificateHolder *) nil_chk(x509Cert)) getEncoded]];
        break;
      }
      
#line 326
      [((JavaIoOutputStream *) nil_chk(digOut)) close];
      
#line 328
      if (!OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_([digCalc getDigest], [self getObjectDigest])) {
        
#line 330
        return false;
      }
    }
    @catch (JavaLangException *e) {
      
#line 335
      return false;
    }
  }
  
#line 339
  return false;
}


#line 342
- (jboolean)isEqual:(id)obj {
  
#line 345
  if (JreObjectEqualsEquals(obj, self)) {
    
#line 347
    return true;
  }
  
#line 350
  if (!([obj isKindOfClass:[OrgBouncycastleCertAttributeCertificateHolder class]])) {
    
#line 352
    return false;
  }
  
#line 355
  OrgBouncycastleCertAttributeCertificateHolder *other = (OrgBouncycastleCertAttributeCertificateHolder *) cast_chk(obj, [OrgBouncycastleCertAttributeCertificateHolder class]);
  
#line 357
  return [((OrgBouncycastleAsn1X509Holder *) nil_chk(self->holder_)) isEqual:((OrgBouncycastleCertAttributeCertificateHolder *) nil_chk(other))->holder_];
}


#line 360
- (NSUInteger)hash {
  
#line 363
  return ((jint) [((OrgBouncycastleAsn1X509Holder *) nil_chk(self->holder_)) hash]);
}


#line 372
+ (void)setDigestCalculatorProviderWithOrgBouncycastleOperatorDigestCalculatorProvider:(id<OrgBouncycastleOperatorDigestCalculatorProvider>)digCalcProvider {
  OrgBouncycastleCertAttributeCertificateHolder_setDigestCalculatorProviderWithOrgBouncycastleOperatorDigestCalculatorProvider_(digCalcProvider);
}

- (id)clone {
  return [self java_clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509GeneralNames;", 0x2, 5, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1X500X500Name;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 15, 16, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1X500X500Name:withJavaMathBigInteger:);
  methods[2].selector = @selector(initWithOrgBouncycastleCertX509CertificateHolder:);
  methods[3].selector = @selector(initWithOrgBouncycastleAsn1X500X500Name:);
  methods[4].selector = @selector(initWithInt:withOrgBouncycastleAsn1ASN1ObjectIdentifier:withOrgBouncycastleAsn1ASN1ObjectIdentifier:withByteArray:);
  methods[5].selector = @selector(getDigestedObjectType);
  methods[6].selector = @selector(getDigestAlgorithm);
  methods[7].selector = @selector(getObjectDigest);
  methods[8].selector = @selector(getOtherObjectTypeID);
  methods[9].selector = @selector(generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name:);
  methods[10].selector = @selector(matchesDNWithOrgBouncycastleAsn1X500X500Name:withOrgBouncycastleAsn1X509GeneralNames:);
  methods[11].selector = @selector(getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray:);
  methods[12].selector = @selector(getEntityNames);
  methods[13].selector = @selector(getIssuer);
  methods[14].selector = @selector(getSerialNumber);
  methods[15].selector = @selector(java_clone);
  methods[16].selector = @selector(matchWithId:);
  methods[17].selector = @selector(isEqual:);
  methods[18].selector = @selector(hash);
  methods[19].selector = @selector(setDigestCalculatorProviderWithOrgBouncycastleOperatorDigestCalculatorProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digestCalculatorProvider", "LOrgBouncycastleOperatorDigestCalculatorProvider;", .constantValue.asLong = 0, 0xa, -1, 17, -1, -1 },
    { "holder_", "LOrgBouncycastleAsn1X509Holder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1ASN1Sequence;", "LOrgBouncycastleAsn1X500X500Name;LJavaMathBigInteger;", "LOrgBouncycastleCertX509CertificateHolder;", "LOrgBouncycastleAsn1X500X500Name;", "ILOrgBouncycastleAsn1ASN1ObjectIdentifier;LOrgBouncycastleAsn1ASN1ObjectIdentifier;[B", "generateGeneralNames", "matchesDN", "LOrgBouncycastleAsn1X500X500Name;LOrgBouncycastleAsn1X509GeneralNames;", "getPrincipals", "[LOrgBouncycastleAsn1X509GeneralName;", "clone", "match", "LNSObject;", "equals", "hashCode", "setDigestCalculatorProvider", "LOrgBouncycastleOperatorDigestCalculatorProvider;", &OrgBouncycastleCertAttributeCertificateHolder_digestCalculatorProvider };
  static const J2ObjcClassInfo _OrgBouncycastleCertAttributeCertificateHolder = { "AttributeCertificateHolder", "org.bouncycastle.cert", ptrTable, methods, fields, 7, 0x1, 20, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCertAttributeCertificateHolder;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end


#line 51
void OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  NSObject_init(self);
  self->holder_ = OrgBouncycastleAsn1X509Holder_getInstanceWithId_(seq);
}


#line 51
OrgBouncycastleCertAttributeCertificateHolder *new_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 51
OrgBouncycastleCertAttributeCertificateHolder *create_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 62
void OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleAsn1X500X500Name *issuerName, JavaMathBigInteger *serialNumber) {
  NSObject_init(self);
  
#line 65
  self->holder_ = new_OrgBouncycastleAsn1X509Holder_initWithOrgBouncycastleAsn1X509IssuerSerial_(new_OrgBouncycastleAsn1X509IssuerSerial_initWithOrgBouncycastleAsn1X509GeneralNames_withOrgBouncycastleAsn1ASN1Integer_(OrgBouncycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name_(self,
#line 66
  issuerName), new_OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(
#line 67
  serialNumber)));
}


#line 62
OrgBouncycastleCertAttributeCertificateHolder *new_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgBouncycastleAsn1X500X500Name *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 62
OrgBouncycastleCertAttributeCertificateHolder *create_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_(OrgBouncycastleAsn1X500X500Name *issuerName, JavaMathBigInteger *serialNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleAsn1X500X500Name_withJavaMathBigInteger_, issuerName, serialNumber)
}


#line 75
void OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleCertX509CertificateHolder_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleCertX509CertificateHolder *cert) {
  NSObject_init(self);
  self->holder_ = new_OrgBouncycastleAsn1X509Holder_initWithOrgBouncycastleAsn1X509IssuerSerial_(new_OrgBouncycastleAsn1X509IssuerSerial_initWithOrgBouncycastleAsn1X509GeneralNames_withOrgBouncycastleAsn1ASN1Integer_(OrgBouncycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name_(self, [((OrgBouncycastleCertX509CertificateHolder *) nil_chk(cert)) getIssuer]), new_OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(
#line 78
  [cert getSerialNumber])));
}


#line 75
OrgBouncycastleCertAttributeCertificateHolder *new_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleCertX509CertificateHolder_(OrgBouncycastleCertX509CertificateHolder *cert) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleCertX509CertificateHolder_, cert)
}


#line 75
OrgBouncycastleCertAttributeCertificateHolder *create_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleCertX509CertificateHolder_(OrgBouncycastleCertX509CertificateHolder *cert) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleCertX509CertificateHolder_, cert)
}


#line 86
void OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleAsn1X500X500Name *principal) {
  NSObject_init(self);
  self->holder_ = new_OrgBouncycastleAsn1X509Holder_initWithOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name_(self, principal));
}


#line 86
OrgBouncycastleCertAttributeCertificateHolder *new_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X500X500Name *principal) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleAsn1X500X500Name_, principal)
}


#line 86
OrgBouncycastleCertAttributeCertificateHolder *create_OrgBouncycastleCertAttributeCertificateHolder_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X500X500Name *principal) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithOrgBouncycastleAsn1X500X500Name_, principal)
}


#line 114
void OrgBouncycastleCertAttributeCertificateHolder_initWithInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(OrgBouncycastleCertAttributeCertificateHolder *self, jint digestedObjectType, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestAlgorithm, OrgBouncycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, IOSByteArray *objectDigest) {
  NSObject_init(self);
  
#line 117
  self->holder_ = new_OrgBouncycastleAsn1X509Holder_initWithOrgBouncycastleAsn1X509ObjectDigestInfo_(new_OrgBouncycastleAsn1X509ObjectDigestInfo_initWithInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(digestedObjectType,
#line 118
  otherObjectTypeID, new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(digestAlgorithm), OrgBouncycastleUtilArrays_cloneWithByteArray_(
#line 119
  objectDigest)));
}


#line 114
OrgBouncycastleCertAttributeCertificateHolder *new_OrgBouncycastleCertAttributeCertificateHolder_initWithInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(jint digestedObjectType, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestAlgorithm, OrgBouncycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}


#line 114
OrgBouncycastleCertAttributeCertificateHolder *create_OrgBouncycastleCertAttributeCertificateHolder_initWithInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_(jint digestedObjectType, OrgBouncycastleAsn1ASN1ObjectIdentifier *digestAlgorithm, OrgBouncycastleAsn1ASN1ObjectIdentifier *otherObjectTypeID, IOSByteArray *objectDigest) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertAttributeCertificateHolder, initWithInt_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withByteArray_, digestedObjectType, digestAlgorithm, otherObjectTypeID, objectDigest)
}


#line 188
OrgBouncycastleAsn1X509GeneralNames *OrgBouncycastleCertAttributeCertificateHolder_generateGeneralNamesWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleAsn1X500X500Name *principal) {
  
#line 190
  return new_OrgBouncycastleAsn1X509GeneralNames_initWithOrgBouncycastleAsn1X509GeneralName_(new_OrgBouncycastleAsn1X509GeneralName_initWithOrgBouncycastleAsn1X500X500Name_(principal));
}


#line 193
jboolean OrgBouncycastleCertAttributeCertificateHolder_matchesDNWithOrgBouncycastleAsn1X500X500Name_withOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleCertAttributeCertificateHolder *self, OrgBouncycastleAsn1X500X500Name *subject, OrgBouncycastleAsn1X509GeneralNames *targets) {
  
#line 195
  IOSObjectArray *names = [((OrgBouncycastleAsn1X509GeneralNames *) nil_chk(targets)) getNames];
  
#line 197
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(names))->size_; i++) {
    
#line 199
    OrgBouncycastleAsn1X509GeneralName *gn = IOSObjectArray_Get(names, i);
    
#line 201
    if ([((OrgBouncycastleAsn1X509GeneralName *) nil_chk(gn)) getTagNo] == OrgBouncycastleAsn1X509GeneralName_directoryName) {
      
#line 203
      if ([((OrgBouncycastleAsn1X500X500Name *) nil_chk(OrgBouncycastleAsn1X500X500Name_getInstanceWithId_([gn getName]))) isEqual:subject]) {
        
#line 205
        return true;
      }
    }
  }
  
#line 210
  return false;
}


#line 213
IOSObjectArray *OrgBouncycastleCertAttributeCertificateHolder_getPrincipalsWithOrgBouncycastleAsn1X509GeneralNameArray_(OrgBouncycastleCertAttributeCertificateHolder *self, IOSObjectArray *names) {
  
#line 215
  id<JavaUtilList> l = new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(names))->size_);
  
#line 217
  for (jint i = 0; i != names->size_; i++) {
    
#line 219
    if ([((OrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getTagNo] == OrgBouncycastleAsn1X509GeneralName_directoryName) {
      
#line 221
      [l addWithId:OrgBouncycastleAsn1X500X500Name_getInstanceWithId_([((OrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getName])];
    }
  }
  
#line 225
  return (IOSObjectArray *) cast_check([l toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[l size] type:OrgBouncycastleAsn1X500X500Name_class_()]], IOSClass_arrayType(OrgBouncycastleAsn1X500X500Name_class_(), 1));
}


#line 372
void OrgBouncycastleCertAttributeCertificateHolder_setDigestCalculatorProviderWithOrgBouncycastleOperatorDigestCalculatorProvider_(id<OrgBouncycastleOperatorDigestCalculatorProvider> digCalcProvider) {
  OrgBouncycastleCertAttributeCertificateHolder_initialize();
  OrgBouncycastleCertAttributeCertificateHolder_digestCalculatorProvider = digCalcProvider;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCertAttributeCertificateHolder)

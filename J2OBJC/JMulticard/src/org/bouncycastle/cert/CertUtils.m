//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/CertUtils.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/text/ParseException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1GeneralizedTime.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DERBitString.h"
#include "org/bouncycastle/asn1/DERNull.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/AttributeCertificate.h"
#include "org/bouncycastle/asn1/x509/AttributeCertificateInfo.h"
#include "org/bouncycastle/asn1/x509/Certificate.h"
#include "org/bouncycastle/asn1/x509/CertificateList.h"
#include "org/bouncycastle/asn1/x509/Extension.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"
#include "org/bouncycastle/asn1/x509/ExtensionsGenerator.h"
#include "org/bouncycastle/asn1/x509/TBSCertList.h"
#include "org/bouncycastle/asn1/x509/TBSCertificate.h"
#include "org/bouncycastle/cert/CertIOException.h"
#include "org/bouncycastle/cert/CertUtils.h"
#include "org/bouncycastle/cert/X509AttributeCertificateHolder.h"
#include "org/bouncycastle/cert/X509CRLHolder.h"
#include "org/bouncycastle/cert/X509CertificateHolder.h"
#include "org/bouncycastle/operator/ContentSigner.h"
#include "org/bouncycastle/util/Properties.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cert/CertUtils must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCertCertUtils ()

+ (IOSByteArray *)generateSigWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                    withOrgBouncycastleAsn1ASN1Object:(OrgBouncycastleAsn1ASN1Object *)tbsObj;

+ (OrgBouncycastleAsn1X509Certificate *)generateStructureWithOrgBouncycastleAsn1X509TBSCertificate:(OrgBouncycastleAsn1X509TBSCertificate *)tbsCert
                                                    withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                     withByteArray:(IOSByteArray *)signature;

+ (OrgBouncycastleAsn1X509AttributeCertificate *)generateAttrStructureWithOrgBouncycastleAsn1X509AttributeCertificateInfo:(OrgBouncycastleAsn1X509AttributeCertificateInfo *)attrInfo
                                                                           withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                                            withByteArray:(IOSByteArray *)signature;

+ (OrgBouncycastleAsn1X509CertificateList *)generateCRLStructureWithOrgBouncycastleAsn1X509TBSCertList:(OrgBouncycastleAsn1X509TBSCertList *)tbsCertList
                                                        withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                         withByteArray:(IOSByteArray *)signature;

@end

inline id<JavaUtilSet> OrgBouncycastleCertCertUtils_get_EMPTY_SET(void);
inline id<JavaUtilSet> OrgBouncycastleCertCertUtils_set_EMPTY_SET(id<JavaUtilSet> value);
static id<JavaUtilSet> OrgBouncycastleCertCertUtils_EMPTY_SET;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCertCertUtils, EMPTY_SET, id<JavaUtilSet>)

inline id<JavaUtilList> OrgBouncycastleCertCertUtils_get_EMPTY_LIST(void);
inline id<JavaUtilList> OrgBouncycastleCertCertUtils_set_EMPTY_LIST(id<JavaUtilList> value);
static id<JavaUtilList> OrgBouncycastleCertCertUtils_EMPTY_LIST;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCertCertUtils, EMPTY_LIST, id<JavaUtilList>)

__attribute__((unused)) static IOSByteArray *OrgBouncycastleCertCertUtils_generateSigWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1ASN1Object_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1ASN1Object *tbsObj);

__attribute__((unused)) static OrgBouncycastleAsn1X509Certificate *OrgBouncycastleCertCertUtils_generateStructureWithOrgBouncycastleAsn1X509TBSCertificate_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509TBSCertificate *tbsCert, OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature);

__attribute__((unused)) static OrgBouncycastleAsn1X509AttributeCertificate *OrgBouncycastleCertCertUtils_generateAttrStructureWithOrgBouncycastleAsn1X509AttributeCertificateInfo_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509AttributeCertificateInfo *attrInfo, OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature);

__attribute__((unused)) static OrgBouncycastleAsn1X509CertificateList *OrgBouncycastleCertCertUtils_generateCRLStructureWithOrgBouncycastleAsn1X509TBSCertList_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509TBSCertList *tbsCertList, OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/CertUtils.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleCertCertUtils)


#line 39
@implementation OrgBouncycastleCertCertUtils


#line 39
- (instancetype)initPackagePrivate {
  OrgBouncycastleCertCertUtils_initPackagePrivate(self);
  return self;
}

+ (OrgBouncycastleAsn1ASN1Primitive *)parseNonEmptyASN1WithByteArray:(IOSByteArray *)encoding {
  return OrgBouncycastleCertCertUtils_parseNonEmptyASN1WithByteArray_(encoding);
}


#line 57
+ (OrgBouncycastleCertX509CertificateHolder *)generateFullCertWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                                             withOrgBouncycastleAsn1X509TBSCertificate:(OrgBouncycastleAsn1X509TBSCertificate *)tbsCert {
  return OrgBouncycastleCertCertUtils_generateFullCertWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509TBSCertificate_(signer, tbsCert);
}


#line 69
+ (OrgBouncycastleCertX509AttributeCertificateHolder *)generateFullAttrCertWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                                                withOrgBouncycastleAsn1X509AttributeCertificateInfo:(OrgBouncycastleAsn1X509AttributeCertificateInfo *)attrInfo {
  return OrgBouncycastleCertCertUtils_generateFullAttrCertWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509AttributeCertificateInfo_(signer, attrInfo);
}


#line 81
+ (OrgBouncycastleCertX509CRLHolder *)generateFullCRLWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                                       withOrgBouncycastleAsn1X509TBSCertList:(OrgBouncycastleAsn1X509TBSCertList *)tbsCertList {
  return OrgBouncycastleCertCertUtils_generateFullCRLWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509TBSCertList_(signer, tbsCertList);
}


#line 93
+ (IOSByteArray *)generateSigWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                    withOrgBouncycastleAsn1ASN1Object:(OrgBouncycastleAsn1ASN1Object *)tbsObj {
  return OrgBouncycastleCertCertUtils_generateSigWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1ASN1Object_(signer, tbsObj);
}


#line 103
+ (OrgBouncycastleAsn1X509Certificate *)generateStructureWithOrgBouncycastleAsn1X509TBSCertificate:(OrgBouncycastleAsn1X509TBSCertificate *)tbsCert
                                                    withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                     withByteArray:(IOSByteArray *)signature {
  return OrgBouncycastleCertCertUtils_generateStructureWithOrgBouncycastleAsn1X509TBSCertificate_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCert, sigAlgId, signature);
}


#line 114
+ (OrgBouncycastleAsn1X509AttributeCertificate *)generateAttrStructureWithOrgBouncycastleAsn1X509AttributeCertificateInfo:(OrgBouncycastleAsn1X509AttributeCertificateInfo *)attrInfo
                                                                           withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                                            withByteArray:(IOSByteArray *)signature {
  return OrgBouncycastleCertCertUtils_generateAttrStructureWithOrgBouncycastleAsn1X509AttributeCertificateInfo_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(attrInfo, sigAlgId, signature);
}


#line 125
+ (OrgBouncycastleAsn1X509CertificateList *)generateCRLStructureWithOrgBouncycastleAsn1X509TBSCertList:(OrgBouncycastleAsn1X509TBSCertList *)tbsCertList
                                                        withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId
                                                                                         withByteArray:(IOSByteArray *)signature {
  return OrgBouncycastleCertCertUtils_generateCRLStructureWithOrgBouncycastleAsn1X509TBSCertList_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCertList, sigAlgId, signature);
}


#line 136
+ (id<JavaUtilSet>)getCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions {
  return OrgBouncycastleCertCertUtils_getCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(extensions);
}


#line 146
+ (id<JavaUtilSet>)getNonCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions {
  return OrgBouncycastleCertCertUtils_getNonCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(extensions);
}


#line 157
+ (id<JavaUtilList>)getExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions {
  return OrgBouncycastleCertCertUtils_getExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(extensions);
}


#line 167
+ (void)addExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:(OrgBouncycastleAsn1X509ExtensionsGenerator *)extGenerator
                       withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                       withBoolean:(jboolean)isCritical
                              withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)value {
  OrgBouncycastleCertCertUtils_addExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withOrgBouncycastleAsn1ASN1Encodable_(extGenerator, oid, isCritical, value);
}


#line 180
+ (OrgBouncycastleAsn1DERBitString *)booleanToBitStringWithBooleanArray:(IOSBooleanArray *)id_ {
  return OrgBouncycastleCertCertUtils_booleanToBitStringWithBooleanArray_(id_);
}


#line 201
+ (IOSBooleanArray *)bitStringToBooleanWithOrgBouncycastleAsn1ASN1BitString:(OrgBouncycastleAsn1ASN1BitString *)bitString {
  return OrgBouncycastleCertCertUtils_bitStringToBooleanWithOrgBouncycastleAsn1ASN1BitString_(bitString);
}


#line 219
+ (JavaUtilDate *)recoverDateWithOrgBouncycastleAsn1ASN1GeneralizedTime:(OrgBouncycastleAsn1ASN1GeneralizedTime *)time {
  return OrgBouncycastleCertCertUtils_recoverDateWithOrgBouncycastleAsn1ASN1GeneralizedTime_(time);
}


#line 231
+ (jboolean)isAlgIdEqualWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)id1
                        withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)id2 {
  return OrgBouncycastleCertCertUtils_isAlgIdEqualWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1X509AlgorithmIdentifier_(id1, id2);
}


#line 274
+ (OrgBouncycastleAsn1X509ExtensionsGenerator *)doReplaceExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:(OrgBouncycastleAsn1X509ExtensionsGenerator *)extGenerator
                                                                            withOrgBouncycastleAsn1X509Extension:(OrgBouncycastleAsn1X509Extension *)ext {
  return OrgBouncycastleCertCertUtils_doReplaceExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1X509Extension_(extGenerator, ext);
}


#line 303
+ (OrgBouncycastleAsn1X509ExtensionsGenerator *)doRemoveExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:(OrgBouncycastleAsn1X509ExtensionsGenerator *)extGenerator
                                                                    withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleCertCertUtils_doRemoveExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(extGenerator, oid);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x8, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCertX509CertificateHolder;", 0x8, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCertX509AttributeCertificateHolder;", 0x8, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCertX509CRLHolder;", 0x8, 7, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0xa, 9, 10, 2, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Certificate;", 0xa, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AttributeCertificate;", 0xa, 13, 14, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509CertificateList;", 0xa, 15, 16, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x8, 17, 18, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x8, 19, 18, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x8, 20, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 21, 22, 23, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1DERBitString;", 0x8, 24, 25, -1, -1, -1, -1 },
    { NULL, "[Z", 0x8, 26, 27, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x8, 28, 29, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 30, 31, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509ExtensionsGenerator;", 0x8, 32, 33, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509ExtensionsGenerator;", 0x8, 34, 35, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(parseNonEmptyASN1WithByteArray:);
  methods[2].selector = @selector(generateFullCertWithOrgBouncycastleOperatorContentSigner:withOrgBouncycastleAsn1X509TBSCertificate:);
  methods[3].selector = @selector(generateFullAttrCertWithOrgBouncycastleOperatorContentSigner:withOrgBouncycastleAsn1X509AttributeCertificateInfo:);
  methods[4].selector = @selector(generateFullCRLWithOrgBouncycastleOperatorContentSigner:withOrgBouncycastleAsn1X509TBSCertList:);
  methods[5].selector = @selector(generateSigWithOrgBouncycastleOperatorContentSigner:withOrgBouncycastleAsn1ASN1Object:);
  methods[6].selector = @selector(generateStructureWithOrgBouncycastleAsn1X509TBSCertificate:withOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[7].selector = @selector(generateAttrStructureWithOrgBouncycastleAsn1X509AttributeCertificateInfo:withOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[8].selector = @selector(generateCRLStructureWithOrgBouncycastleAsn1X509TBSCertList:withOrgBouncycastleAsn1X509AlgorithmIdentifier:withByteArray:);
  methods[9].selector = @selector(getCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:);
  methods[10].selector = @selector(getNonCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:);
  methods[11].selector = @selector(getExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:);
  methods[12].selector = @selector(addExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:withOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[13].selector = @selector(booleanToBitStringWithBooleanArray:);
  methods[14].selector = @selector(bitStringToBooleanWithOrgBouncycastleAsn1ASN1BitString:);
  methods[15].selector = @selector(recoverDateWithOrgBouncycastleAsn1ASN1GeneralizedTime:);
  methods[16].selector = @selector(isAlgIdEqualWithOrgBouncycastleAsn1X509AlgorithmIdentifier:withOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[17].selector = @selector(doReplaceExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:withOrgBouncycastleAsn1X509Extension:);
  methods[18].selector = @selector(doRemoveExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:withOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_SET", "LJavaUtilSet;", .constantValue.asLong = 0, 0xa, -1, 36, -1, -1 },
    { "EMPTY_LIST", "LJavaUtilList;", .constantValue.asLong = 0, 0xa, -1, 37, -1, -1 },
  };
  static const void *ptrTable[] = { "parseNonEmptyASN1", "[B", "LJavaIoIOException;", "generateFullCert", "LOrgBouncycastleOperatorContentSigner;LOrgBouncycastleAsn1X509TBSCertificate;", "generateFullAttrCert", "LOrgBouncycastleOperatorContentSigner;LOrgBouncycastleAsn1X509AttributeCertificateInfo;", "generateFullCRL", "LOrgBouncycastleOperatorContentSigner;LOrgBouncycastleAsn1X509TBSCertList;", "generateSig", "LOrgBouncycastleOperatorContentSigner;LOrgBouncycastleAsn1ASN1Object;", "generateStructure", "LOrgBouncycastleAsn1X509TBSCertificate;LOrgBouncycastleAsn1X509AlgorithmIdentifier;[B", "generateAttrStructure", "LOrgBouncycastleAsn1X509AttributeCertificateInfo;LOrgBouncycastleAsn1X509AlgorithmIdentifier;[B", "generateCRLStructure", "LOrgBouncycastleAsn1X509TBSCertList;LOrgBouncycastleAsn1X509AlgorithmIdentifier;[B", "getCriticalExtensionOIDs", "LOrgBouncycastleAsn1X509Extensions;", "getNonCriticalExtensionOIDs", "getExtensionOIDs", "addExtension", "LOrgBouncycastleAsn1X509ExtensionsGenerator;LOrgBouncycastleAsn1ASN1ObjectIdentifier;ZLOrgBouncycastleAsn1ASN1Encodable;", "LOrgBouncycastleCertCertIOException;", "booleanToBitString", "[Z", "bitStringToBoolean", "LOrgBouncycastleAsn1ASN1BitString;", "recoverDate", "LOrgBouncycastleAsn1ASN1GeneralizedTime;", "isAlgIdEqual", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;LOrgBouncycastleAsn1X509AlgorithmIdentifier;", "doReplaceExtension", "LOrgBouncycastleAsn1X509ExtensionsGenerator;LOrgBouncycastleAsn1X509Extension;", "doRemoveExtension", "LOrgBouncycastleAsn1X509ExtensionsGenerator;LOrgBouncycastleAsn1ASN1ObjectIdentifier;", &OrgBouncycastleCertCertUtils_EMPTY_SET, &OrgBouncycastleCertCertUtils_EMPTY_LIST };
  static const J2ObjcClassInfo _OrgBouncycastleCertCertUtils = { "CertUtils", "org.bouncycastle.cert", ptrTable, methods, fields, 7, 0x0, 19, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCertCertUtils;
}

+ (void)initialize {
  if (self == [OrgBouncycastleCertCertUtils class]) {
    OrgBouncycastleCertCertUtils_EMPTY_SET = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_JavaUtilHashSet_init());
    OrgBouncycastleCertCertUtils_EMPTY_LIST = JavaUtilCollections_unmodifiableListWithJavaUtilList_(new_JavaUtilArrayList_init());
    J2OBJC_SET_INITIALIZED(OrgBouncycastleCertCertUtils)
  }
}

@end


#line 39
void OrgBouncycastleCertCertUtils_initPackagePrivate(OrgBouncycastleCertCertUtils *self) {
  NSObject_init(self);
}


#line 39
OrgBouncycastleCertCertUtils *new_OrgBouncycastleCertCertUtils_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertCertUtils, initPackagePrivate)
}


#line 39
OrgBouncycastleCertCertUtils *create_OrgBouncycastleCertCertUtils_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertCertUtils, initPackagePrivate)
}


#line 44
OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleCertCertUtils_parseNonEmptyASN1WithByteArray_(IOSByteArray *encoding) {
  OrgBouncycastleCertCertUtils_initialize();
  
#line 47
  OrgBouncycastleAsn1ASN1Primitive *p = OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(encoding);
  
#line 49
  if (p == nil) {
    
#line 51
    @throw new_JavaIoIOException_initWithNSString_(@"no content found");
  }
  return p;
}


#line 57
OrgBouncycastleCertX509CertificateHolder *OrgBouncycastleCertCertUtils_generateFullCertWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509TBSCertificate_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1X509TBSCertificate *tbsCert) {
  OrgBouncycastleCertCertUtils_initialize();
  @try {
    
#line 61
    return new_OrgBouncycastleCertX509CertificateHolder_initWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleCertCertUtils_generateStructureWithOrgBouncycastleAsn1X509TBSCertificate_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCert, [((id<OrgBouncycastleOperatorContentSigner>) nil_chk(signer)) getAlgorithmIdentifier], OrgBouncycastleCertCertUtils_generateSigWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1ASN1Object_(signer, tbsCert)));
  }
  @catch (JavaIoIOException *e) {
    
#line 65
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"cannot produce certificate signature");
  }
}


#line 69
OrgBouncycastleCertX509AttributeCertificateHolder *OrgBouncycastleCertCertUtils_generateFullAttrCertWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509AttributeCertificateInfo_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1X509AttributeCertificateInfo *attrInfo) {
  OrgBouncycastleCertCertUtils_initialize();
  @try {
    
#line 73
    return new_OrgBouncycastleCertX509AttributeCertificateHolder_initWithOrgBouncycastleAsn1X509AttributeCertificate_(OrgBouncycastleCertCertUtils_generateAttrStructureWithOrgBouncycastleAsn1X509AttributeCertificateInfo_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(attrInfo, [((id<OrgBouncycastleOperatorContentSigner>) nil_chk(signer)) getAlgorithmIdentifier], OrgBouncycastleCertCertUtils_generateSigWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1ASN1Object_(signer, attrInfo)));
  }
  @catch (JavaIoIOException *e) {
    
#line 77
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"cannot produce attribute certificate signature");
  }
}


#line 81
OrgBouncycastleCertX509CRLHolder *OrgBouncycastleCertCertUtils_generateFullCRLWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509TBSCertList_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1X509TBSCertList *tbsCertList) {
  OrgBouncycastleCertCertUtils_initialize();
  @try {
    
#line 85
    return new_OrgBouncycastleCertX509CRLHolder_initWithOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleCertCertUtils_generateCRLStructureWithOrgBouncycastleAsn1X509TBSCertList_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(tbsCertList, [((id<OrgBouncycastleOperatorContentSigner>) nil_chk(signer)) getAlgorithmIdentifier], OrgBouncycastleCertCertUtils_generateSigWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1ASN1Object_(signer, tbsCertList)));
  }
  @catch (JavaIoIOException *e) {
    
#line 89
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"cannot produce certificate signature");
  }
}


#line 93
IOSByteArray *OrgBouncycastleCertCertUtils_generateSigWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1ASN1Object_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1ASN1Object *tbsObj) {
  OrgBouncycastleCertCertUtils_initialize();
  
#line 96
  JavaIoOutputStream *sOut = [((id<OrgBouncycastleOperatorContentSigner>) nil_chk(signer)) getOutputStream];
  [((OrgBouncycastleAsn1ASN1Object *) nil_chk(tbsObj)) encodeToWithJavaIoOutputStream:sOut withNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
  [((JavaIoOutputStream *) nil_chk(sOut)) close];
  
#line 100
  return [signer getSignature];
}


#line 103
OrgBouncycastleAsn1X509Certificate *OrgBouncycastleCertCertUtils_generateStructureWithOrgBouncycastleAsn1X509TBSCertificate_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509TBSCertificate *tbsCert, OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature) {
  OrgBouncycastleCertCertUtils_initialize();
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_init();
  
#line 107
  [v addWithOrgBouncycastleAsn1ASN1Encodable:tbsCert];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:sigAlgId];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERBitString_initWithByteArray_(signature)];
  
#line 111
  return OrgBouncycastleAsn1X509Certificate_getInstanceWithId_(new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v));
}


#line 114
OrgBouncycastleAsn1X509AttributeCertificate *OrgBouncycastleCertCertUtils_generateAttrStructureWithOrgBouncycastleAsn1X509AttributeCertificateInfo_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509AttributeCertificateInfo *attrInfo, OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature) {
  OrgBouncycastleCertCertUtils_initialize();
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_init();
  
#line 118
  [v addWithOrgBouncycastleAsn1ASN1Encodable:attrInfo];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:sigAlgId];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERBitString_initWithByteArray_(signature)];
  
#line 122
  return OrgBouncycastleAsn1X509AttributeCertificate_getInstanceWithId_(new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v));
}


#line 125
OrgBouncycastleAsn1X509CertificateList *OrgBouncycastleCertCertUtils_generateCRLStructureWithOrgBouncycastleAsn1X509TBSCertList_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509TBSCertList *tbsCertList, OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId, IOSByteArray *signature) {
  OrgBouncycastleCertCertUtils_initialize();
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_init();
  
#line 129
  [v addWithOrgBouncycastleAsn1ASN1Encodable:tbsCertList];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:sigAlgId];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERBitString_initWithByteArray_(signature)];
  
#line 133
  return OrgBouncycastleAsn1X509CertificateList_getInstanceWithId_(new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v));
}


#line 136
id<JavaUtilSet> OrgBouncycastleCertCertUtils_getCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(OrgBouncycastleAsn1X509Extensions *extensions) {
  OrgBouncycastleCertCertUtils_initialize();
  if (extensions == nil) {
    
#line 140
    return OrgBouncycastleCertCertUtils_EMPTY_SET;
  }
  
#line 143
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([extensions getCriticalExtensionOIDs])));
}


#line 146
id<JavaUtilSet> OrgBouncycastleCertCertUtils_getNonCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(OrgBouncycastleAsn1X509Extensions *extensions) {
  OrgBouncycastleCertCertUtils_initialize();
  if (extensions == nil) {
    
#line 150
    return OrgBouncycastleCertCertUtils_EMPTY_SET;
  }
  
#line 154
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(new_JavaUtilHashSet_initWithJavaUtilCollection_(JavaUtilArrays_asListWithNSObjectArray_([extensions getNonCriticalExtensionOIDs])));
}


#line 157
id<JavaUtilList> OrgBouncycastleCertCertUtils_getExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(OrgBouncycastleAsn1X509Extensions *extensions) {
  OrgBouncycastleCertCertUtils_initialize();
  if (extensions == nil) {
    
#line 161
    return OrgBouncycastleCertCertUtils_EMPTY_LIST;
  }
  
#line 164
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_([extensions getExtensionOIDs]));
}


#line 167
void OrgBouncycastleCertCertUtils_addExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X509ExtensionsGenerator *extGenerator, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, jboolean isCritical, id<OrgBouncycastleAsn1ASN1Encodable> value) {
  OrgBouncycastleCertCertUtils_initialize();
  
#line 170
  @try {
    
#line 172
    [((OrgBouncycastleAsn1X509ExtensionsGenerator *) nil_chk(extGenerator)) addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withBoolean:isCritical withOrgBouncycastleAsn1ASN1Encodable:value];
  }
  @catch (JavaIoIOException *e) {
    
#line 176
    @throw new_OrgBouncycastleCertCertIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot encode extension: ", [e getMessage]), e);
  }
}


#line 180
OrgBouncycastleAsn1DERBitString *OrgBouncycastleCertCertUtils_booleanToBitStringWithBooleanArray_(IOSBooleanArray *id_) {
  OrgBouncycastleCertCertUtils_initialize();
  IOSByteArray *bytes = [IOSByteArray newArrayWithLength:JreIntDiv((((IOSBooleanArray *) nil_chk(id_))->size_ + 7), 8)];
  
#line 184
  for (jint i = 0; i != id_->size_; i++) {
    
#line 186
    *IOSByteArray_GetRef(bytes, JreIntDiv(i, 8)) |= (IOSBooleanArray_Get(id_, i)) ? (JreLShift32(1, ((7 - (JreIntMod(i, 8)))))) : 0;
  }
  
#line 189
  jint pad = JreIntMod(id_->size_, 8);
  
#line 191
  if (pad == 0) {
    
#line 193
    return new_OrgBouncycastleAsn1DERBitString_initWithByteArray_(bytes);
  }
  else {
    
#line 197
    return new_OrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(bytes, 8 - pad);
  }
}


#line 201
IOSBooleanArray *OrgBouncycastleCertCertUtils_bitStringToBooleanWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString *bitString) {
  OrgBouncycastleCertCertUtils_initialize();
  if (bitString != nil) {
    
#line 205
    IOSByteArray *bytes = [bitString getBytes];
    IOSBooleanArray *boolId = [IOSBooleanArray newArrayWithLength:((IOSByteArray *) nil_chk(bytes))->size_ * 8 - [bitString getPadBits]];
    
#line 208
    for (jint i = 0; i != boolId->size_; i++) {
      
#line 210
      *IOSBooleanArray_GetRef(boolId, i) = ((IOSByteArray_Get(bytes, JreIntDiv(i, 8)) & (JreURShift32((jint) 0x80, (JreIntMod(i, 8))))) != 0);
    }
    
#line 213
    return boolId;
  }
  
#line 216
  return nil;
}


#line 219
JavaUtilDate *OrgBouncycastleCertCertUtils_recoverDateWithOrgBouncycastleAsn1ASN1GeneralizedTime_(OrgBouncycastleAsn1ASN1GeneralizedTime *time) {
  OrgBouncycastleCertCertUtils_initialize();
  @try {
    
#line 223
    return [((OrgBouncycastleAsn1ASN1GeneralizedTime *) nil_chk(time)) getDate];
  }
  @catch (JavaTextParseException *e) {
    
#line 227
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"unable to recover date: ", [e getMessage]));
  }
}


#line 231
jboolean OrgBouncycastleCertCertUtils_isAlgIdEqualWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastleAsn1X509AlgorithmIdentifier *id1, OrgBouncycastleAsn1X509AlgorithmIdentifier *id2) {
  OrgBouncycastleCertCertUtils_initialize();
  if (![((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(id1)) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:[((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(id2)) getAlgorithm]]) {
    
#line 235
    return false;
  }
  
#line 238
  if (OrgBouncycastleUtilProperties_isOverrideSetWithNSString_(@"org.bouncycastle.x509.allow_absent_equiv_NULL")) {
    
#line 240
    if ([id1 getParameters] == nil) {
      
#line 242
      if ([id2 getParameters] != nil && ![((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([id2 getParameters])) isEqual:JreLoadStatic(OrgBouncycastleAsn1DERNull, INSTANCE)]) {
        
#line 244
        return false;
      }
      
#line 247
      return true;
    }
    
#line 250
    if ([id2 getParameters] == nil) {
      
#line 252
      if ([id1 getParameters] != nil && ![((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([id1 getParameters])) isEqual:JreLoadStatic(OrgBouncycastleAsn1DERNull, INSTANCE)]) {
        
#line 254
        return false;
      }
      
#line 257
      return true;
    }
  }
  
#line 261
  if ([id1 getParameters] != nil) {
    
#line 263
    return [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([id1 getParameters])) isEqual:[id2 getParameters]];
  }
  
#line 266
  if ([id2 getParameters] != nil) {
    
#line 268
    return [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([id2 getParameters])) isEqual:[id1 getParameters]];
  }
  
#line 271
  return true;
}


#line 274
OrgBouncycastleAsn1X509ExtensionsGenerator *OrgBouncycastleCertCertUtils_doReplaceExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1X509Extension_(OrgBouncycastleAsn1X509ExtensionsGenerator *extGenerator, OrgBouncycastleAsn1X509Extension *ext) {
  OrgBouncycastleCertCertUtils_initialize();
  jboolean isReplaced = false;
  OrgBouncycastleAsn1X509Extensions *exts = [((OrgBouncycastleAsn1X509ExtensionsGenerator *) nil_chk(extGenerator)) generate];
  extGenerator = new_OrgBouncycastleAsn1X509ExtensionsGenerator_init();
  
#line 280
  for (id<JavaUtilEnumeration> en = [((OrgBouncycastleAsn1X509Extensions *) nil_chk(exts)) oids]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
    
#line 282
    OrgBouncycastleAsn1ASN1ObjectIdentifier *extOid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([en nextElement], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    
#line 284
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(extOid)) equalsWithOrgBouncycastleAsn1ASN1Primitive:[((OrgBouncycastleAsn1X509Extension *) nil_chk(ext)) getExtnId]]) {
      
#line 286
      isReplaced = true;
      [extGenerator addExtensionWithOrgBouncycastleAsn1X509Extension:ext];
    }
    else {
      
#line 291
      [extGenerator addExtensionWithOrgBouncycastleAsn1X509Extension:[exts getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:extOid]];
    }
  }
  
#line 295
  if (!isReplaced) {
    
#line 297
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"replace - original extension (OID = ", [((OrgBouncycastleAsn1X509Extension *) nil_chk(ext)) getExtnId], @") not found"));
  }
  
#line 300
  return extGenerator;
}


#line 303
OrgBouncycastleAsn1X509ExtensionsGenerator *OrgBouncycastleCertCertUtils_doRemoveExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1X509ExtensionsGenerator *extGenerator, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleCertCertUtils_initialize();
  jboolean isRemoved = false;
  OrgBouncycastleAsn1X509Extensions *exts = [((OrgBouncycastleAsn1X509ExtensionsGenerator *) nil_chk(extGenerator)) generate];
  extGenerator = new_OrgBouncycastleAsn1X509ExtensionsGenerator_init();
  
#line 309
  for (id<JavaUtilEnumeration> en = [((OrgBouncycastleAsn1X509Extensions *) nil_chk(exts)) oids]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
    
#line 311
    OrgBouncycastleAsn1ASN1ObjectIdentifier *extOid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([en nextElement], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    
#line 313
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(extOid)) equalsWithOrgBouncycastleAsn1ASN1Primitive:oid]) {
      
#line 315
      isRemoved = true;
    }
    else {
      
#line 319
      [extGenerator addExtensionWithOrgBouncycastleAsn1X509Extension:[exts getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:extOid]];
    }
  }
  
#line 323
  if (!isRemoved) {
    
#line 325
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"remove - extension (OID = ", oid, @") not found"));
  }
  
#line 328
  return extGenerator;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCertCertUtils)

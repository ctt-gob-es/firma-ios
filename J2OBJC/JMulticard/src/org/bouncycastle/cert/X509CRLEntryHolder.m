//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/X509CRLEntryHolder.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/x509/Extension.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"
#include "org/bouncycastle/asn1/x509/GeneralNames.h"
#include "org/bouncycastle/asn1/x509/TBSCertList.h"
#include "org/bouncycastle/asn1/x509/Time.h"
#include "org/bouncycastle/cert/CertUtils.h"
#include "org/bouncycastle/cert/X509CRLEntryHolder.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cert/X509CRLEntryHolder must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCertX509CRLEntryHolder () {
 @public
  OrgBouncycastleAsn1X509TBSCertList_CRLEntry *entry__;
  OrgBouncycastleAsn1X509GeneralNames *ca_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCertX509CRLEntryHolder, entry__, OrgBouncycastleAsn1X509TBSCertList_CRLEntry *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCertX509CRLEntryHolder, ca_, OrgBouncycastleAsn1X509GeneralNames *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/X509CRLEntryHolder.java"


#line 17
@implementation OrgBouncycastleCertX509CRLEntryHolder


#line 22
- (instancetype)initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry:(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *)entry_
                                                        withBoolean:(jboolean)isIndirect
                            withOrgBouncycastleAsn1X509GeneralNames:(OrgBouncycastleAsn1X509GeneralNames *)previousCA {
  OrgBouncycastleCertX509CRLEntryHolder_initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X509GeneralNames_(self, entry_, isIndirect, previousCA);
  return self;
}


#line 43
- (JavaMathBigInteger *)getSerialNumber {
  
#line 45
  return [((OrgBouncycastleAsn1ASN1Integer *) nil_chk([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) getUserCertificate])) getValue];
}


#line 53
- (JavaUtilDate *)getRevocationDate {
  
#line 55
  return [((OrgBouncycastleAsn1X509Time *) nil_chk([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) getRevocationDate])) getDate];
}


#line 63
- (jboolean)hasExtensions {
  
#line 65
  return [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) hasExtensions];
}


#line 78
- (OrgBouncycastleAsn1X509GeneralNames *)getCertificateIssuer {
  
#line 80
  return self->ca_;
}


#line 90
- (OrgBouncycastleAsn1X509Extension *)getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 92
  OrgBouncycastleAsn1X509Extensions *extensions = [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) getExtensions];
  
#line 94
  if (extensions != nil) {
    
#line 96
    return [extensions getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
  }
  
#line 99
  return nil;
}


#line 107
- (OrgBouncycastleAsn1X509Extensions *)getExtensions {
  
#line 109
  return [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) getExtensions];
}


#line 118
- (id<JavaUtilList>)getExtensionOIDs {
  
#line 120
  return OrgBouncycastleCertCertUtils_getExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) getExtensions]);
}


#line 129
- (id<JavaUtilSet>)getCriticalExtensionOIDs {
  
#line 131
  return OrgBouncycastleCertCertUtils_getCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) getExtensions]);
}


#line 140
- (id<JavaUtilSet>)getNonCriticalExtensionOIDs {
  
#line 142
  return OrgBouncycastleCertCertUtils_getNonCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry__)) getExtensions]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509GeneralNames;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extension;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extensions;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry:withBoolean:withOrgBouncycastleAsn1X509GeneralNames:);
  methods[1].selector = @selector(getSerialNumber);
  methods[2].selector = @selector(getRevocationDate);
  methods[3].selector = @selector(hasExtensions);
  methods[4].selector = @selector(getCertificateIssuer);
  methods[5].selector = @selector(getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[6].selector = @selector(getExtensions);
  methods[7].selector = @selector(getExtensionOIDs);
  methods[8].selector = @selector(getCriticalExtensionOIDs);
  methods[9].selector = @selector(getNonCriticalExtensionOIDs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "entry__", "LOrgBouncycastleAsn1X509TBSCertList_CRLEntry;", .constantValue.asLong = 0, 0x2, 3, -1, -1, -1 },
    { "ca_", "LOrgBouncycastleAsn1X509GeneralNames;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1X509TBSCertList_CRLEntry;ZLOrgBouncycastleAsn1X509GeneralNames;", "getExtension", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "entry" };
  static const J2ObjcClassInfo _OrgBouncycastleCertX509CRLEntryHolder = { "X509CRLEntryHolder", "org.bouncycastle.cert", ptrTable, methods, fields, 7, 0x1, 10, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCertX509CRLEntryHolder;
}

@end


#line 22
void OrgBouncycastleCertX509CRLEntryHolder_initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleCertX509CRLEntryHolder *self, OrgBouncycastleAsn1X509TBSCertList_CRLEntry *entry_, jboolean isIndirect, OrgBouncycastleAsn1X509GeneralNames *previousCA) {
  NSObject_init(self);
  self->entry__ = entry_;
  self->ca_ = previousCA;
  
#line 27
  if (isIndirect && [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry_)) hasExtensions]) {
    
#line 29
    OrgBouncycastleAsn1X509Extension *currentCaName = [((OrgBouncycastleAsn1X509Extensions *) nil_chk([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(entry_)) getExtensions])) getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1X509Extension, certificateIssuer)];
    
#line 31
    if (currentCaName != nil) {
      
#line 33
      self->ca_ = OrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_([currentCaName getParsedValue]);
    }
  }
}


#line 22
OrgBouncycastleCertX509CRLEntryHolder *new_OrgBouncycastleCertX509CRLEntryHolder_initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *entry_, jboolean isIndirect, OrgBouncycastleAsn1X509GeneralNames *previousCA) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertX509CRLEntryHolder, initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X509GeneralNames_, entry_, isIndirect, previousCA)
}


#line 22
OrgBouncycastleCertX509CRLEntryHolder *create_OrgBouncycastleCertX509CRLEntryHolder_initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *entry_, jboolean isIndirect, OrgBouncycastleAsn1X509GeneralNames *previousCA) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertX509CRLEntryHolder, initWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X509GeneralNames_, entry_, isIndirect, previousCA)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCertX509CRLEntryHolder)

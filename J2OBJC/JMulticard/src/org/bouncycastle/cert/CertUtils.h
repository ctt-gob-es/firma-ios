//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/CertUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCertCertUtils")
#ifdef RESTRICT_OrgBouncycastleCertCertUtils
#define INCLUDE_ALL_OrgBouncycastleCertCertUtils 0
#else
#define INCLUDE_ALL_OrgBouncycastleCertCertUtils 1
#endif
#undef RESTRICT_OrgBouncycastleCertCertUtils

#if !defined (OrgBouncycastleCertCertUtils_) && (INCLUDE_ALL_OrgBouncycastleCertCertUtils || defined(INCLUDE_OrgBouncycastleCertCertUtils))
#define OrgBouncycastleCertCertUtils_

@class IOSBooleanArray;
@class IOSByteArray;
@class JavaUtilDate;
@class OrgBouncycastleAsn1ASN1BitString;
@class OrgBouncycastleAsn1ASN1GeneralizedTime;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1DERBitString;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;
@class OrgBouncycastleAsn1X509AttributeCertificateInfo;
@class OrgBouncycastleAsn1X509Extension;
@class OrgBouncycastleAsn1X509Extensions;
@class OrgBouncycastleAsn1X509ExtensionsGenerator;
@class OrgBouncycastleAsn1X509TBSCertList;
@class OrgBouncycastleAsn1X509TBSCertificate;
@class OrgBouncycastleCertX509AttributeCertificateHolder;
@class OrgBouncycastleCertX509CRLHolder;
@class OrgBouncycastleCertX509CertificateHolder;
@protocol JavaUtilList;
@protocol JavaUtilSet;
@protocol OrgBouncycastleAsn1ASN1Encodable;
@protocol OrgBouncycastleOperatorContentSigner;

@interface OrgBouncycastleCertCertUtils : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

+ (void)addExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:(OrgBouncycastleAsn1X509ExtensionsGenerator *)extGenerator
                       withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                       withBoolean:(jboolean)isCritical
                              withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)value;

+ (IOSBooleanArray *)bitStringToBooleanWithOrgBouncycastleAsn1ASN1BitString:(OrgBouncycastleAsn1ASN1BitString *)bitString;

+ (OrgBouncycastleAsn1DERBitString *)booleanToBitStringWithBooleanArray:(IOSBooleanArray *)id_;

+ (OrgBouncycastleAsn1X509ExtensionsGenerator *)doRemoveExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:(OrgBouncycastleAsn1X509ExtensionsGenerator *)extGenerator
                                                                    withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (OrgBouncycastleAsn1X509ExtensionsGenerator *)doReplaceExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator:(OrgBouncycastleAsn1X509ExtensionsGenerator *)extGenerator
                                                                            withOrgBouncycastleAsn1X509Extension:(OrgBouncycastleAsn1X509Extension *)ext;

+ (OrgBouncycastleCertX509AttributeCertificateHolder *)generateFullAttrCertWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                                                withOrgBouncycastleAsn1X509AttributeCertificateInfo:(OrgBouncycastleAsn1X509AttributeCertificateInfo *)attrInfo;

+ (OrgBouncycastleCertX509CertificateHolder *)generateFullCertWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                                             withOrgBouncycastleAsn1X509TBSCertificate:(OrgBouncycastleAsn1X509TBSCertificate *)tbsCert;

+ (OrgBouncycastleCertX509CRLHolder *)generateFullCRLWithOrgBouncycastleOperatorContentSigner:(id<OrgBouncycastleOperatorContentSigner>)signer
                                                       withOrgBouncycastleAsn1X509TBSCertList:(OrgBouncycastleAsn1X509TBSCertList *)tbsCertList;

+ (id<JavaUtilSet>)getCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions;

+ (id<JavaUtilList>)getExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions;

+ (id<JavaUtilSet>)getNonCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions;

+ (jboolean)isAlgIdEqualWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)id1
                        withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)id2;

+ (OrgBouncycastleAsn1ASN1Primitive *)parseNonEmptyASN1WithByteArray:(IOSByteArray *)encoding;

+ (JavaUtilDate *)recoverDateWithOrgBouncycastleAsn1ASN1GeneralizedTime:(OrgBouncycastleAsn1ASN1GeneralizedTime *)time;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleCertCertUtils)

FOUNDATION_EXPORT void OrgBouncycastleCertCertUtils_initPackagePrivate(OrgBouncycastleCertCertUtils *self);

FOUNDATION_EXPORT OrgBouncycastleCertCertUtils *new_OrgBouncycastleCertCertUtils_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCertCertUtils *create_OrgBouncycastleCertCertUtils_initPackagePrivate(void);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleCertCertUtils_parseNonEmptyASN1WithByteArray_(IOSByteArray *encoding);

FOUNDATION_EXPORT OrgBouncycastleCertX509CertificateHolder *OrgBouncycastleCertCertUtils_generateFullCertWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509TBSCertificate_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1X509TBSCertificate *tbsCert);

FOUNDATION_EXPORT OrgBouncycastleCertX509AttributeCertificateHolder *OrgBouncycastleCertCertUtils_generateFullAttrCertWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509AttributeCertificateInfo_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1X509AttributeCertificateInfo *attrInfo);

FOUNDATION_EXPORT OrgBouncycastleCertX509CRLHolder *OrgBouncycastleCertCertUtils_generateFullCRLWithOrgBouncycastleOperatorContentSigner_withOrgBouncycastleAsn1X509TBSCertList_(id<OrgBouncycastleOperatorContentSigner> signer, OrgBouncycastleAsn1X509TBSCertList *tbsCertList);

FOUNDATION_EXPORT id<JavaUtilSet> OrgBouncycastleCertCertUtils_getCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(OrgBouncycastleAsn1X509Extensions *extensions);

FOUNDATION_EXPORT id<JavaUtilSet> OrgBouncycastleCertCertUtils_getNonCriticalExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(OrgBouncycastleAsn1X509Extensions *extensions);

FOUNDATION_EXPORT id<JavaUtilList> OrgBouncycastleCertCertUtils_getExtensionOIDsWithOrgBouncycastleAsn1X509Extensions_(OrgBouncycastleAsn1X509Extensions *extensions);

FOUNDATION_EXPORT void OrgBouncycastleCertCertUtils_addExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X509ExtensionsGenerator *extGenerator, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, jboolean isCritical, id<OrgBouncycastleAsn1ASN1Encodable> value);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *OrgBouncycastleCertCertUtils_booleanToBitStringWithBooleanArray_(IOSBooleanArray *id_);

FOUNDATION_EXPORT IOSBooleanArray *OrgBouncycastleCertCertUtils_bitStringToBooleanWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString *bitString);

FOUNDATION_EXPORT JavaUtilDate *OrgBouncycastleCertCertUtils_recoverDateWithOrgBouncycastleAsn1ASN1GeneralizedTime_(OrgBouncycastleAsn1ASN1GeneralizedTime *time);

FOUNDATION_EXPORT jboolean OrgBouncycastleCertCertUtils_isAlgIdEqualWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastleAsn1X509AlgorithmIdentifier *id1, OrgBouncycastleAsn1X509AlgorithmIdentifier *id2);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509ExtensionsGenerator *OrgBouncycastleCertCertUtils_doReplaceExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1X509Extension_(OrgBouncycastleAsn1X509ExtensionsGenerator *extGenerator, OrgBouncycastleAsn1X509Extension *ext);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509ExtensionsGenerator *OrgBouncycastleCertCertUtils_doRemoveExtensionWithOrgBouncycastleAsn1X509ExtensionsGenerator_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1X509ExtensionsGenerator *extGenerator, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCertCertUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCertCertUtils")

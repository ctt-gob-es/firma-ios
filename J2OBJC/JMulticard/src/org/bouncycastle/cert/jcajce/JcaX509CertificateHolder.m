//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/jcajce/JcaX509CertificateHolder.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/security/cert/X509Certificate.h"
#include "org/bouncycastle/asn1/x509/Certificate.h"
#include "org/bouncycastle/cert/X509CertificateHolder.h"
#include "org/bouncycastle/cert/jcajce/JcaX509CertificateHolder.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cert/jcajce/JcaX509CertificateHolder must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/jcajce/JcaX509CertificateHolder.java"


#line 12
@implementation OrgBouncycastleCertJcajceJcaX509CertificateHolder


#line 21
- (instancetype)initWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert {
  OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(self, cert);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecurityCertX509Certificate:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaSecurityCertX509Certificate;", "LJavaSecurityCertCertificateEncodingException;" };
  static const J2ObjcClassInfo _OrgBouncycastleCertJcajceJcaX509CertificateHolder = { "JcaX509CertificateHolder", "org.bouncycastle.cert.jcajce", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCertJcajceJcaX509CertificateHolder;
}

@end


#line 21
void OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(OrgBouncycastleCertJcajceJcaX509CertificateHolder *self, JavaSecurityCertX509Certificate *cert) {
  OrgBouncycastleCertX509CertificateHolder_initWithOrgBouncycastleAsn1X509Certificate_(self, OrgBouncycastleAsn1X509Certificate_getInstanceWithId_(
#line 24
  [((JavaSecurityCertX509Certificate *) nil_chk(cert)) getEncoded]));
}


#line 21
OrgBouncycastleCertJcajceJcaX509CertificateHolder *new_OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertJcajceJcaX509CertificateHolder, initWithJavaSecurityCertX509Certificate_, cert)
}


#line 21
OrgBouncycastleCertJcajceJcaX509CertificateHolder *create_OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertJcajceJcaX509CertificateHolder, initWithJavaSecurityCertX509Certificate_, cert)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCertJcajceJcaX509CertificateHolder)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/jcajce/JcaX509CertificateHolder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCertJcajceJcaX509CertificateHolder")
#ifdef RESTRICT_OrgBouncycastleCertJcajceJcaX509CertificateHolder
#define INCLUDE_ALL_OrgBouncycastleCertJcajceJcaX509CertificateHolder 0
#else
#define INCLUDE_ALL_OrgBouncycastleCertJcajceJcaX509CertificateHolder 1
#endif
#undef RESTRICT_OrgBouncycastleCertJcajceJcaX509CertificateHolder

#if !defined (OrgBouncycastleCertJcajceJcaX509CertificateHolder_) && (INCLUDE_ALL_OrgBouncycastleCertJcajceJcaX509CertificateHolder || defined(INCLUDE_OrgBouncycastleCertJcajceJcaX509CertificateHolder))
#define OrgBouncycastleCertJcajceJcaX509CertificateHolder_

#define RESTRICT_OrgBouncycastleCertX509CertificateHolder 1
#define INCLUDE_OrgBouncycastleCertX509CertificateHolder 1
#include "org/bouncycastle/cert/X509CertificateHolder.h"

@class IOSByteArray;
@class JavaSecurityCertX509Certificate;
@class OrgBouncycastleAsn1X509Certificate;

/*!
 @brief JCA helper class for converting an X509Certificate into a X509CertificateHolder object.
 */
@interface OrgBouncycastleCertJcajceJcaX509CertificateHolder : OrgBouncycastleCertX509CertificateHolder

#pragma mark Public

/*!
 @brief Base constructor.
 @param cert certificate to be used a the source for the holder creation.
 @throw CertificateEncodingExceptionif there is a problem extracting the certificate information.
 */
- (instancetype)initWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCertJcajceJcaX509CertificateHolder)

FOUNDATION_EXPORT void OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(OrgBouncycastleCertJcajceJcaX509CertificateHolder *self, JavaSecurityCertX509Certificate *cert);

FOUNDATION_EXPORT OrgBouncycastleCertJcajceJcaX509CertificateHolder *new_OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCertJcajceJcaX509CertificateHolder *create_OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(JavaSecurityCertX509Certificate *cert);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCertJcajceJcaX509CertificateHolder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCertJcajceJcaX509CertificateHolder")

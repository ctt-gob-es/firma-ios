//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/AttributeCertificateIssuer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCertAttributeCertificateIssuer")
#ifdef RESTRICT_OrgBouncycastleCertAttributeCertificateIssuer
#define INCLUDE_ALL_OrgBouncycastleCertAttributeCertificateIssuer 0
#else
#define INCLUDE_ALL_OrgBouncycastleCertAttributeCertificateIssuer 1
#endif
#undef RESTRICT_OrgBouncycastleCertAttributeCertificateIssuer

#if !defined (OrgBouncycastleCertAttributeCertificateIssuer_) && (INCLUDE_ALL_OrgBouncycastleCertAttributeCertificateIssuer || defined(INCLUDE_OrgBouncycastleCertAttributeCertificateIssuer))
#define OrgBouncycastleCertAttributeCertificateIssuer_

#define RESTRICT_OrgBouncycastleUtilSelector 1
#define INCLUDE_OrgBouncycastleUtilSelector 1
#include "org/bouncycastle/util/Selector.h"

@class IOSObjectArray;
@class OrgBouncycastleAsn1X500X500Name;
@class OrgBouncycastleAsn1X509AttCertIssuer;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief Carrying class for an attribute certificate issuer.
 */
@interface OrgBouncycastleCertAttributeCertificateIssuer : NSObject < OrgBouncycastleUtilSelector > {
 @public
  id<OrgBouncycastleAsn1ASN1Encodable> form_;
}

#pragma mark Public

/*!
 @brief Set the issuer directly with the ASN.1 structure.
 @param issuer The issuer
 */
- (instancetype)initWithOrgBouncycastleAsn1X509AttCertIssuer:(OrgBouncycastleAsn1X509AttCertIssuer *)issuer;

- (instancetype)initWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)principal;

- (id)java_clone;

- (jboolean)isEqual:(id)obj;

- (IOSObjectArray *)getNames;

- (NSUInteger)hash;

- (jboolean)matchWithId:(id)obj;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCertAttributeCertificateIssuer)

J2OBJC_FIELD_SETTER(OrgBouncycastleCertAttributeCertificateIssuer, form_, id<OrgBouncycastleAsn1ASN1Encodable>)

FOUNDATION_EXPORT void OrgBouncycastleCertAttributeCertificateIssuer_initWithOrgBouncycastleAsn1X509AttCertIssuer_(OrgBouncycastleCertAttributeCertificateIssuer *self, OrgBouncycastleAsn1X509AttCertIssuer *issuer);

FOUNDATION_EXPORT OrgBouncycastleCertAttributeCertificateIssuer *new_OrgBouncycastleCertAttributeCertificateIssuer_initWithOrgBouncycastleAsn1X509AttCertIssuer_(OrgBouncycastleAsn1X509AttCertIssuer *issuer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCertAttributeCertificateIssuer *create_OrgBouncycastleCertAttributeCertificateIssuer_initWithOrgBouncycastleAsn1X509AttCertIssuer_(OrgBouncycastleAsn1X509AttCertIssuer *issuer);

FOUNDATION_EXPORT void OrgBouncycastleCertAttributeCertificateIssuer_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleCertAttributeCertificateIssuer *self, OrgBouncycastleAsn1X500X500Name *principal);

FOUNDATION_EXPORT OrgBouncycastleCertAttributeCertificateIssuer *new_OrgBouncycastleCertAttributeCertificateIssuer_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X500X500Name *principal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCertAttributeCertificateIssuer *create_OrgBouncycastleCertAttributeCertificateIssuer_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X500X500Name *principal);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCertAttributeCertificateIssuer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCertAttributeCertificateIssuer")

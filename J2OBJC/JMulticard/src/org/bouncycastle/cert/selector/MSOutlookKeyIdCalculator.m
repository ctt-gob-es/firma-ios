//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/System.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest : NSObject {
 @public
  IOSByteArray *xBuf_;
  jint xBufOff_;
  jlong byteCount_;
}

/*!
 @brief Standard constructor
 */
- (instancetype)init;

/*!
 @brief Copy constructor.We are using copy constructors in place
  of the Object.clone() interface as this interface is not
  supported by J2ME.
 */
- (instancetype)initWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest:(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *)t;

- (void)copyInWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest:(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *)t OBJC_METHOD_FAMILY_NONE;

- (void)updateWithByte:(jbyte)inArg;

- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len;

- (void)finish;

- (void)reset;

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff;

- (void)processLengthWithLong:(jlong)bitLength;

- (void)processBlock;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest)

J2OBJC_FIELD_SETTER(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest, xBuf_, IOSByteArray *)

inline jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_get_BYTE_LENGTH(void);
#define OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_BYTE_LENGTH 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest, BYTE_LENGTH, jint)

__attribute__((unused)) static void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_init(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *self);

__attribute__((unused)) static void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_initWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *self, OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *t);

__attribute__((unused)) static void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_reset(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest)

@interface OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest : OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest {
 @public
  jint H1_;
  jint H2_;
  jint H3_;
  jint H4_;
  jint H5_;
  IOSIntArray *X_;
  jint xOff_;
}

/*!
 @brief Standard constructor
 */
- (instancetype)init;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff;

- (void)processLengthWithLong:(jlong)bitLength;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

/*!
 @brief reset the chaining variables
 */
- (void)reset;

- (jint)fWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

- (jint)hWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

- (jint)gWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

- (void)processBlock;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest)

J2OBJC_FIELD_SETTER(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, X_, IOSIntArray *)

inline jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_get_DIGEST_LENGTH(void);
#define OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_DIGEST_LENGTH 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, DIGEST_LENGTH, jint)

inline jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_get_Y1(void);
#define OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y1 1518500249
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, Y1, jint)

inline jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_get_Y2(void);
#define OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y2 1859775393
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, Y2, jint)

inline jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_get_Y3(void);
#define OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y3 -1894007588
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, Y3, jint)

inline jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_get_Y4(void);
#define OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y4 -899497514
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, Y4, jint)

__attribute__((unused)) static void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self);

__attribute__((unused)) static OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *new_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *create_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init(void);

__attribute__((unused)) static jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self, jint u, jint v, jint w);

__attribute__((unused)) static jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self, jint u, jint v, jint w);

__attribute__((unused)) static jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self, jint u, jint v, jint w);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator.java"


#line 9
@implementation OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator


#line 9
- (instancetype)initPackagePrivate {
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_initPackagePrivate(self);
  return self;
}

+ (IOSByteArray *)calculateKeyIdWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info {
  return OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_calculateKeyIdWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(info);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(calculateKeyIdWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "calculateKeyId", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest;LOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest;" };
  static const J2ObjcClassInfo _OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator = { "MSOutlookKeyIdCalculator", "org.bouncycastle.cert.selector", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, 2, -1, -1, -1 };
  return &_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator;
}

@end


#line 9
void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_initPackagePrivate(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator *self) {
  NSObject_init(self);
}


#line 9
OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator *new_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator, initPackagePrivate)
}


#line 9
OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator *create_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator, initPackagePrivate)
}


#line 14
IOSByteArray *OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_calculateKeyIdWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *info) {
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_initialize();
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *dig = new_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init();
  IOSByteArray *hash_ = [IOSByteArray newArrayWithLength:[dig getDigestSize]];
  IOSByteArray *spkiEnc = [IOSByteArray newArrayWithLength:0];
  @try {
    
#line 21
    spkiEnc = [((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    
#line 25
    return [IOSByteArray newArrayWithLength:0];
  }
  
#line 29
  [dig updateWithByteArray:spkiEnc withInt:0 withInt:((IOSByteArray *) nil_chk(spkiEnc))->size_];
  
#line 31
  [dig doFinalWithByteArray:hash_ withInt:0];
  
#line 33
  return hash_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator.java"


#line 36
@implementation OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 47
- (instancetype)init {
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 58
- (instancetype)initWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest:(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *)t {
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_initWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_(self, t);
  return self;
}


#line 65
- (void)copyInWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest:(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *)t {
  
#line 67
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(((OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *) nil_chk(t))->xBuf_, 0, xBuf_, 0, ((IOSByteArray *) nil_chk(t->xBuf_))->size_);
  
#line 69
  xBufOff_ = t->xBufOff_;
  byteCount_ = t->byteCount_;
}


#line 73
- (void)updateWithByte:(jbyte)inArg {
  
#line 76
  *IOSByteArray_GetRef(nil_chk(xBuf_), xBufOff_++) = inArg;
  
#line 78
  if (xBufOff_ == xBuf_->size_) {
    
#line 80
    [self processWordWithByteArray:xBuf_ withInt:0];
    xBufOff_ = 0;
  }
  
#line 84
  byteCount_++;
}


#line 87
- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  
#line 95
  while ((xBufOff_ != 0) && (len > 0)) {
    
#line 97
    [self updateWithByte:IOSByteArray_Get(nil_chk(inArg), inOff)];
    
#line 99
    inOff++;
    len--;
  }
  
#line 106
  while (len > ((IOSByteArray *) nil_chk(xBuf_))->size_) {
    
#line 108
    [self processWordWithByteArray:inArg withInt:inOff];
    
#line 110
    inOff += ((IOSByteArray *) nil_chk(xBuf_))->size_;
    len -= xBuf_->size_;
    byteCount_ += xBuf_->size_;
  }
  
#line 118
  while (len > 0) {
    
#line 120
    [self updateWithByte:IOSByteArray_Get(nil_chk(inArg), inOff)];
    
#line 122
    inOff++;
    len--;
  }
}


#line 127
- (void)finish {
  
#line 129
  jlong bitLength = (JreLShift64(byteCount_, 3));
  
#line 134
  [self updateWithByte:(jbyte) 128];
  
#line 136
  while (xBufOff_ != 0) {
    
#line 138
    [self updateWithByte:(jbyte) 0];
  }
  
#line 141
  [self processLengthWithLong:bitLength];
  
#line 143
  [self processBlock];
}


#line 146
- (void)reset {
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_reset(self);
}


#line 157
- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 159
- (void)processLengthWithLong:(jlong)bitLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 161
- (void)processBlock {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest:);
  methods[2].selector = @selector(copyInWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest:);
  methods[3].selector = @selector(updateWithByte:);
  methods[4].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(finish);
  methods[6].selector = @selector(reset);
  methods[7].selector = @selector(processWordWithByteArray:withInt:);
  methods[8].selector = @selector(processLengthWithLong:);
  methods[9].selector = @selector(processBlock);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTE_LENGTH", "I", .constantValue.asInt = OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_BYTE_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "xBuf_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xBufOff_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "byteCount_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest;", "copyIn", "update", "B", "[BII", "processWord", "[BI", "processLength", "J", "LOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator;" };
  static const J2ObjcClassInfo _OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest = { "GeneralDigest", "org.bouncycastle.cert.selector", ptrTable, methods, fields, 7, 0x40a, 10, 4, 9, -1, -1, -1, -1 };
  return &_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest;
}

@end


#line 47
void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_init(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *self) {
  NSObject_init(self);
  self->xBuf_ = [IOSByteArray newArrayWithLength:4];
  self->xBufOff_ = 0;
}


#line 58
void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_initWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *self, OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *t) {
  NSObject_init(self);
  self->xBuf_ = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(((OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *) nil_chk(t))->xBuf_))->size_];
  
#line 62
  [self copyInWithOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest:t];
}


#line 146
void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_reset(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest *self) {
  
#line 148
  self->byteCount_ = 0;
  
#line 150
  self->xBufOff_ = 0;
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(self->xBuf_))->size_; i++) {
    
#line 153
    *IOSByteArray_GetRef(self->xBuf_, i) = 0;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/cert/selector/MSOutlookKeyIdCalculator.java"


#line 164
@implementation OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 177
- (instancetype)init {
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 182
- (NSString *)getAlgorithmName {
  
#line 184
  return @"SHA-1";
}


#line 187
- (jint)getDigestSize {
  
#line 189
  return OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_DIGEST_LENGTH;
}


#line 192
- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff {
  
#line 199
  jint n = JreLShift32(IOSByteArray_Get(nil_chk(inArg), inOff), 24);
  n |= JreLShift32((IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff), 16);
  n |= JreLShift32((IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff);
  *IOSIntArray_GetRef(nil_chk(X_), xOff_) = n;
  
#line 205
  if (++xOff_ == 16) {
    
#line 207
    [self processBlock];
  }
}


#line 211
- (void)processLengthWithLong:(jlong)bitLength {
  
#line 215
  if (xOff_ > 14) {
    
#line 217
    [self processBlock];
  }
  
#line 220
  *IOSIntArray_GetRef(nil_chk(X_), 14) = (jint) (JreURShift64(bitLength, 32));
  *IOSIntArray_GetRef(X_, 15) = (jint) (bitLength & (jint) 0xffffffff);
}


#line 224
- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  
#line 228
  [self finish];
  
#line 230
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H1_, outArg, outOff);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H2_, outArg, outOff + 4);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H3_, outArg, outOff + 8);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H4_, outArg, outOff + 12);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H5_, outArg, outOff + 16);
  
#line 236
  [self reset];
  
#line 238
  return OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_DIGEST_LENGTH;
}

- (void)reset {
  
#line 247
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_reset(self);
  
#line 249
  H1_ = (jint) 0x67452301;
  H2_ = (jint) 0xefcdab89;
  H3_ = (jint) 0x98badcfe;
  H4_ = (jint) 0x10325476;
  H5_ = (jint) 0xc3d2e1f0;
  
#line 255
  xOff_ = 0;
  for (jint i = 0; i != ((IOSIntArray *) nil_chk(X_))->size_; i++) {
    
#line 258
    *IOSIntArray_GetRef(X_, i) = 0;
  }
}


#line 270
- (jint)fWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(self, u, v, w);
}


#line 278
- (jint)hWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, u, v, w);
}


#line 286
- (jint)gWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(self, u, v, w);
}


#line 294
- (void)processBlock {
  
#line 300
  for (jint i = 16; i < 80; i++) {
    
#line 302
    jint t = IOSIntArray_Get(nil_chk(X_), i - 3) ^ IOSIntArray_Get(X_, i - 8) ^ IOSIntArray_Get(X_, i - 14) ^ IOSIntArray_Get(X_, i - 16);
    *IOSIntArray_GetRef(X_, i) = (JreLShift32(t, 1)) | (JreURShift32(t, 31));
  }
  
#line 309
  jint A = H1_;
  jint B = H2_;
  jint C = H3_;
  jint D = H4_;
  jint E = H5_;
  
#line 318
  jint idx = 0;
  
#line 320
  for (jint j = 0; j < 4; j++) {
    
#line 324
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y1;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 327
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y1;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 330
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y1;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 333
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y1;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 336
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y1;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 343
  for (jint j = 0; j < 4; j++) {
    
#line 347
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y2;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 350
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y2;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 353
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y2;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 356
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y2;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 359
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y2;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 366
  for (jint j = 0; j < 4; j++) {
    
#line 370
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y3;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 373
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y3;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 376
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y3;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 379
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y3;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 382
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y3;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 389
  for (jint j = 0; j <= 3; j++) {
    
#line 393
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y4;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 396
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y4;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 399
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y4;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 402
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y4;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 405
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y4;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 410
  H1_ += A;
  H2_ += B;
  H3_ += C;
  H4_ += D;
  H5_ += E;
  
#line 419
  xOff_ = 0;
  for (jint i = 0; i < 16; i++) {
    
#line 422
    *IOSIntArray_GetRef(nil_chk(X_), i) = 0;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAlgorithmName);
  methods[2].selector = @selector(getDigestSize);
  methods[3].selector = @selector(processWordWithByteArray:withInt:);
  methods[4].selector = @selector(processLengthWithLong:);
  methods[5].selector = @selector(doFinalWithByteArray:withInt:);
  methods[6].selector = @selector(reset);
  methods[7].selector = @selector(fWithInt:withInt:withInt:);
  methods[8].selector = @selector(hWithInt:withInt:withInt:);
  methods[9].selector = @selector(gWithInt:withInt:withInt:);
  methods[10].selector = @selector(processBlock);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DIGEST_LENGTH", "I", .constantValue.asInt = OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_DIGEST_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "H1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H3_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H4_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H5_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "X_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xOff_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "Y1", "I", .constantValue.asInt = OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y1, 0x1a, -1, -1, -1, -1 },
    { "Y2", "I", .constantValue.asInt = OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y2, 0x1a, -1, -1, -1, -1 },
    { "Y3", "I", .constantValue.asInt = OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y3, 0x1a, -1, -1, -1, -1 },
    { "Y4", "I", .constantValue.asInt = OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_Y4, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "processWord", "[BI", "processLength", "J", "doFinal", "f", "III", "h", "g", "LOrgBouncycastleCertSelectorMSOutlookKeyIdCalculator;" };
  static const J2ObjcClassInfo _OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest = { "SHA1Digest", "org.bouncycastle.cert.selector", ptrTable, methods, fields, 7, 0xa, 11, 12, 9, -1, -1, -1, -1 };
  return &_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest;
}

@end


#line 177
void OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self) {
  OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_GeneralDigest_init(self);
  self->X_ = [IOSIntArray newArrayWithLength:
#line 171
  80];
  
#line 179
  [self reset];
}


#line 177
OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *new_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, init)
}


#line 177
OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *create_OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest, init)
}


#line 270
jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_fWithInt_withInt_withInt_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self, jint u, jint v, jint w) {
  
#line 275
  return ((u & v) | ((~u) & w));
}


#line 278
jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_hWithInt_withInt_withInt_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self, jint u, jint v, jint w) {
  
#line 283
  return (u ^ v ^ w);
}


#line 286
jint OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest_gWithInt_withInt_withInt_(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest *self, jint u, jint v, jint w) {
  
#line 291
  return ((u & v) | (u & w) | (v & w));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCertSelectorMSOutlookKeyIdCalculator_SHA1Digest)

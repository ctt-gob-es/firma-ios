//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/AsymmetricCipherKeyPair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricCipherKeyPair")
#ifdef RESTRICT_OrgBouncycastleCryptoAsymmetricCipherKeyPair
#define INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricCipherKeyPair 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricCipherKeyPair 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoAsymmetricCipherKeyPair

#if !defined (OrgBouncycastleCryptoAsymmetricCipherKeyPair_) && (INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricCipherKeyPair || defined(INCLUDE_OrgBouncycastleCryptoAsymmetricCipherKeyPair))
#define OrgBouncycastleCryptoAsymmetricCipherKeyPair_

@class OrgBouncycastleCryptoParamsAsymmetricKeyParameter;
@protocol OrgBouncycastleCryptoCipherParameters;

/*!
 @brief a holding class for public/private parameter pairs.
 */
@interface OrgBouncycastleCryptoAsymmetricCipherKeyPair : NSObject

#pragma mark Public

/*!
 @brief basic constructor.
 @param publicParam a public key parameters object.
 @param privateParam the corresponding private key parameters.
 */
- (instancetype)initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicParam
                    withOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateParam;

/*!
 @brief basic constructor.
 @param publicParam a public key parameters object.
 @param privateParam the corresponding private key parameters.
 */
- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)publicParam
                    withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)privateParam;

/*!
 @brief return the private key parameters.
 @return the private key parameters.
 */
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPrivate;

/*!
 @brief return the public key parameters.
 @return the public key parameters.
 */
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublic;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoAsymmetricCipherKeyPair)

FOUNDATION_EXPORT void OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoAsymmetricCipherKeyPair *self, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam);

FOUNDATION_EXPORT OrgBouncycastleCryptoAsymmetricCipherKeyPair *new_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoAsymmetricCipherKeyPair *create_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam);

FOUNDATION_EXPORT void OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(OrgBouncycastleCryptoAsymmetricCipherKeyPair *self, id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam);

FOUNDATION_EXPORT OrgBouncycastleCryptoAsymmetricCipherKeyPair *new_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoAsymmetricCipherKeyPair *create_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoAsymmetricCipherKeyPair)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricCipherKeyPair")

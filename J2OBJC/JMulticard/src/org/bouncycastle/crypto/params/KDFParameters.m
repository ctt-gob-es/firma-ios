//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/KDFParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/params/KDFParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/params/KDFParameters must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/KDFParameters.java"


#line 8
@implementation OrgBouncycastleCryptoParamsKDFParameters


#line 14
- (instancetype)initWithByteArray:(IOSByteArray *)shared
                    withByteArray:(IOSByteArray *)iv {
  OrgBouncycastleCryptoParamsKDFParameters_initWithByteArray_withByteArray_(self, shared, iv);
  return self;
}


#line 22
- (IOSByteArray *)getSharedSecret {
  
#line 24
  return shared_;
}


#line 27
- (IOSByteArray *)getIV {
  
#line 29
  return iv_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:withByteArray:);
  methods[1].selector = @selector(getSharedSecret);
  methods[2].selector = @selector(getIV);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iv_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "shared_", "[B", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B[B" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoParamsKDFParameters = { "KDFParameters", "org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoParamsKDFParameters;
}

@end


#line 14
void OrgBouncycastleCryptoParamsKDFParameters_initWithByteArray_withByteArray_(OrgBouncycastleCryptoParamsKDFParameters *self, IOSByteArray *shared, IOSByteArray *iv) {
  NSObject_init(self);
  
#line 18
  self->shared_ = shared;
  self->iv_ = iv;
}


#line 14
OrgBouncycastleCryptoParamsKDFParameters *new_OrgBouncycastleCryptoParamsKDFParameters_initWithByteArray_withByteArray_(IOSByteArray *shared, IOSByteArray *iv) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoParamsKDFParameters, initWithByteArray_withByteArray_, shared, iv)
}


#line 14
OrgBouncycastleCryptoParamsKDFParameters *create_OrgBouncycastleCryptoParamsKDFParameters_initWithByteArray_withByteArray_(IOSByteArray *shared, IOSByteArray *iv) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoParamsKDFParameters, initWithByteArray_withByteArray_, shared, iv)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsKDFParameters)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/ParametersWithSBox.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/ParametersWithSBox.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/params/ParametersWithSBox must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoParamsParametersWithSBox () {
 @public
  id<OrgBouncycastleCryptoCipherParameters> parameters_;
  IOSByteArray *sBox_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsParametersWithSBox, parameters_, id<OrgBouncycastleCryptoCipherParameters>)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsParametersWithSBox, sBox_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/ParametersWithSBox.java"


#line 5
@implementation OrgBouncycastleCryptoParamsParametersWithSBox


#line 11
- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)parameters
                                                withByteArray:(IOSByteArray *)sBox {
  OrgBouncycastleCryptoParamsParametersWithSBox_initWithOrgBouncycastleCryptoCipherParameters_withByteArray_(self, parameters, sBox);
  return self;
}


#line 19
- (IOSByteArray *)getSBox {
  
#line 21
  return sBox_;
}


#line 24
- (id<OrgBouncycastleCryptoCipherParameters>)getParameters {
  
#line 26
  return parameters_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCipherParameters;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleCryptoCipherParameters:withByteArray:);
  methods[1].selector = @selector(getSBox);
  methods[2].selector = @selector(getParameters);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parameters_", "LOrgBouncycastleCryptoCipherParameters;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sBox_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCryptoCipherParameters;[B" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoParamsParametersWithSBox = { "ParametersWithSBox", "org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoParamsParametersWithSBox;
}

@end


#line 11
void OrgBouncycastleCryptoParamsParametersWithSBox_initWithOrgBouncycastleCryptoCipherParameters_withByteArray_(OrgBouncycastleCryptoParamsParametersWithSBox *self, id<OrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *sBox) {
  NSObject_init(self);
  
#line 15
  self->parameters_ = parameters;
  self->sBox_ = sBox;
}


#line 11
OrgBouncycastleCryptoParamsParametersWithSBox *new_OrgBouncycastleCryptoParamsParametersWithSBox_initWithOrgBouncycastleCryptoCipherParameters_withByteArray_(id<OrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *sBox) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoParamsParametersWithSBox, initWithOrgBouncycastleCryptoCipherParameters_withByteArray_, parameters, sBox)
}


#line 11
OrgBouncycastleCryptoParamsParametersWithSBox *create_OrgBouncycastleCryptoParamsParametersWithSBox_initWithOrgBouncycastleCryptoCipherParameters_withByteArray_(id<OrgBouncycastleCryptoCipherParameters> parameters, IOSByteArray *sBox) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoParamsParametersWithSBox, initWithOrgBouncycastleCryptoCipherParameters_withByteArray_, parameters, sBox)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsParametersWithSBox)

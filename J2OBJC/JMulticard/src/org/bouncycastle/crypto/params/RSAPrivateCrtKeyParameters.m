//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/crypto/params/RSAKeyParameters.h"
#include "org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters () {
 @public
  JavaMathBigInteger *e_;
  JavaMathBigInteger *p_;
  JavaMathBigInteger *q_;
  JavaMathBigInteger *dP_;
  JavaMathBigInteger *dQ_;
  JavaMathBigInteger *qInv_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, e_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, p_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, q_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, dP_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, dQ_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, qInv_, JavaMathBigInteger *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/RSAPrivateCrtKeyParameters.java"


#line 5
@implementation OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters


#line 18
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)modulus
                    withJavaMathBigInteger:(JavaMathBigInteger *)publicExponent
                    withJavaMathBigInteger:(JavaMathBigInteger *)privateExponent
                    withJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                    withJavaMathBigInteger:(JavaMathBigInteger *)dP
                    withJavaMathBigInteger:(JavaMathBigInteger *)dQ
                    withJavaMathBigInteger:(JavaMathBigInteger *)qInv {
  OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(self, modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv);
  return self;
}


#line 31
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)modulus
                    withJavaMathBigInteger:(JavaMathBigInteger *)publicExponent
                    withJavaMathBigInteger:(JavaMathBigInteger *)privateExponent
                    withJavaMathBigInteger:(JavaMathBigInteger *)p
                    withJavaMathBigInteger:(JavaMathBigInteger *)q
                    withJavaMathBigInteger:(JavaMathBigInteger *)dP
                    withJavaMathBigInteger:(JavaMathBigInteger *)dQ
                    withJavaMathBigInteger:(JavaMathBigInteger *)qInv
                               withBoolean:(jboolean)isInternal {
  OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(self, modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv, isInternal);
  return self;
}


#line 52
- (JavaMathBigInteger *)getPublicExponent {
  
#line 54
  return e_;
}


#line 57
- (JavaMathBigInteger *)getP {
  
#line 59
  return p_;
}


#line 62
- (JavaMathBigInteger *)getQ {
  
#line 64
  return q_;
}


#line 67
- (JavaMathBigInteger *)getDP {
  
#line 69
  return dP_;
}


#line 72
- (JavaMathBigInteger *)getDQ {
  
#line 74
  return dQ_;
}


#line 77
- (JavaMathBigInteger *)getQInv {
  
#line 79
  return qInv_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[1].selector = @selector(initWithJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withJavaMathBigInteger:withBoolean:);
  methods[2].selector = @selector(getPublicExponent);
  methods[3].selector = @selector(getP);
  methods[4].selector = @selector(getQ);
  methods[5].selector = @selector(getDP);
  methods[6].selector = @selector(getDQ);
  methods[7].selector = @selector(getQInv);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "e_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "p_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "q_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dP_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dQ_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "qInv_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;", "LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;LJavaMathBigInteger;Z" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters = { "RSAPrivateCrtKeyParameters", "org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 8, 6, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters;
}

@end


#line 18
void OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *self, JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv) {
  OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(self,
#line 28
  modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv, false);
}


#line 18
OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *new_OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv)
}


#line 18
OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *create_OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_, modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv)
}


#line 31
void OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *self, JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv, jboolean isInternal) {
  OrgBouncycastleCryptoParamsRSAKeyParameters_initWithBoolean_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(self,
#line 42
  true, modulus, privateExponent, isInternal);
  
#line 44
  self->e_ = publicExponent;
  self->p_ = p;
  self->q_ = q;
  self->dP_ = dP;
  self->dQ_ = dQ;
  self->qInv_ = qInv;
}


#line 31
OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *new_OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv, jboolean isInternal) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_, modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv, isInternal)
}


#line 31
OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters *create_OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(JavaMathBigInteger *modulus, JavaMathBigInteger *publicExponent, JavaMathBigInteger *privateExponent, JavaMathBigInteger *p, JavaMathBigInteger *q, JavaMathBigInteger *dP, JavaMathBigInteger *dQ, JavaMathBigInteger *qInv, jboolean isInternal) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters, initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_, modulus, publicExponent, privateExponent, p, q, dP, dQ, qInv, isInternal)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsRSAPrivateCrtKeyParameters)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/MGFParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoParamsMGFParameters")
#ifdef RESTRICT_OrgBouncycastleCryptoParamsMGFParameters
#define INCLUDE_ALL_OrgBouncycastleCryptoParamsMGFParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoParamsMGFParameters 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoParamsMGFParameters

#if !defined (OrgBouncycastleCryptoParamsMGFParameters_) && (INCLUDE_ALL_OrgBouncycastleCryptoParamsMGFParameters || defined(INCLUDE_OrgBouncycastleCryptoParamsMGFParameters))
#define OrgBouncycastleCryptoParamsMGFParameters_

#define RESTRICT_OrgBouncycastleCryptoDerivationParameters 1
#define INCLUDE_OrgBouncycastleCryptoDerivationParameters 1
#include "org/bouncycastle/crypto/DerivationParameters.h"

@class IOSByteArray;

/*!
 @brief parameters for mask derivation functions.
 */
@interface OrgBouncycastleCryptoParamsMGFParameters : NSObject < OrgBouncycastleCryptoDerivationParameters > {
 @public
  IOSByteArray *seed_;
}

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)seed;

- (instancetype)initWithByteArray:(IOSByteArray *)seed
                          withInt:(jint)off
                          withInt:(jint)len;

- (IOSByteArray *)getSeed;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoParamsMGFParameters)

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsMGFParameters, seed_, IOSByteArray *)

FOUNDATION_EXPORT void OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(OrgBouncycastleCryptoParamsMGFParameters *self, IOSByteArray *seed);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsMGFParameters *new_OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsMGFParameters *create_OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_(IOSByteArray *seed);

FOUNDATION_EXPORT void OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(OrgBouncycastleCryptoParamsMGFParameters *self, IOSByteArray *seed, jint off, jint len);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsMGFParameters *new_OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(IOSByteArray *seed, jint off, jint len) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsMGFParameters *create_OrgBouncycastleCryptoParamsMGFParameters_initWithByteArray_withInt_withInt_(IOSByteArray *seed, jint off, jint len);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoParamsMGFParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoParamsMGFParameters")

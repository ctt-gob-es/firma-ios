//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/ECPrivateKeyParameters.java
//

#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/crypto/params/ECDomainParameters.h"
#include "org/bouncycastle/crypto/params/ECKeyParameters.h"
#include "org/bouncycastle/crypto/params/ECPrivateKeyParameters.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/params/ECPrivateKeyParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoParamsECPrivateKeyParameters () {
 @public
  JavaMathBigInteger *d_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoParamsECPrivateKeyParameters, d_, JavaMathBigInteger *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/ECPrivateKeyParameters.java"


#line 5
@implementation OrgBouncycastleCryptoParamsECPrivateKeyParameters


#line 10
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)d
withOrgBouncycastleCryptoParamsECDomainParameters:(OrgBouncycastleCryptoParamsECDomainParameters *)parameters {
  OrgBouncycastleCryptoParamsECPrivateKeyParameters_initWithJavaMathBigInteger_withOrgBouncycastleCryptoParamsECDomainParameters_(self, d, parameters);
  return self;
}


#line 19
- (JavaMathBigInteger *)getD {
  
#line 21
  return d_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaMathBigInteger:withOrgBouncycastleCryptoParamsECDomainParameters:);
  methods[1].selector = @selector(getD);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "d_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaMathBigInteger;LOrgBouncycastleCryptoParamsECDomainParameters;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoParamsECPrivateKeyParameters = { "ECPrivateKeyParameters", "org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoParamsECPrivateKeyParameters;
}

@end


#line 10
void OrgBouncycastleCryptoParamsECPrivateKeyParameters_initWithJavaMathBigInteger_withOrgBouncycastleCryptoParamsECDomainParameters_(OrgBouncycastleCryptoParamsECPrivateKeyParameters *self, JavaMathBigInteger *d, OrgBouncycastleCryptoParamsECDomainParameters *parameters) {
  OrgBouncycastleCryptoParamsECKeyParameters_initWithBoolean_withOrgBouncycastleCryptoParamsECDomainParameters_(self,
#line 14
  true, parameters);
  
#line 16
  self->d_ = [((OrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(parameters)) validatePrivateScalarWithJavaMathBigInteger:d];
}


#line 10
OrgBouncycastleCryptoParamsECPrivateKeyParameters *new_OrgBouncycastleCryptoParamsECPrivateKeyParameters_initWithJavaMathBigInteger_withOrgBouncycastleCryptoParamsECDomainParameters_(JavaMathBigInteger *d, OrgBouncycastleCryptoParamsECDomainParameters *parameters) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoParamsECPrivateKeyParameters, initWithJavaMathBigInteger_withOrgBouncycastleCryptoParamsECDomainParameters_, d, parameters)
}


#line 10
OrgBouncycastleCryptoParamsECPrivateKeyParameters *create_OrgBouncycastleCryptoParamsECPrivateKeyParameters_initWithJavaMathBigInteger_withOrgBouncycastleCryptoParamsECDomainParameters_(JavaMathBigInteger *d, OrgBouncycastleCryptoParamsECDomainParameters *parameters) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoParamsECPrivateKeyParameters, initWithJavaMathBigInteger_withOrgBouncycastleCryptoParamsECDomainParameters_, d, parameters)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsECPrivateKeyParameters)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/DESParameters.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/crypto/params/DESParameters.h"
#include "org/bouncycastle/crypto/params/KeyParameter.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/params/DESParameters must be compiled with ARC (-fobjc-arc)"
#endif

inline jint OrgBouncycastleCryptoParamsDESParameters_get_N_DES_WEAK_KEYS(void);
#define OrgBouncycastleCryptoParamsDESParameters_N_DES_WEAK_KEYS 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoParamsDESParameters, N_DES_WEAK_KEYS, jint)

inline IOSByteArray *OrgBouncycastleCryptoParamsDESParameters_get_DES_weak_keys(void);
inline IOSByteArray *OrgBouncycastleCryptoParamsDESParameters_set_DES_weak_keys(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoParamsDESParameters_DES_weak_keys;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoParamsDESParameters, DES_weak_keys, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/DESParameters.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleCryptoParamsDESParameters)


#line 3
@implementation OrgBouncycastleCryptoParamsDESParameters


#line 6
- (instancetype)initWithByteArray:(IOSByteArray *)key {
  OrgBouncycastleCryptoParamsDESParameters_initWithByteArray_(self, key);
  return self;
}


#line 61
+ (jboolean)isWeakKeyWithByteArray:(IOSByteArray *)key
                           withInt:(jint)offset {
  return OrgBouncycastleCryptoParamsDESParameters_isWeakKeyWithByteArray_withInt_(key, offset);
}


#line 91
+ (void)setOddParityWithByteArray:(IOSByteArray *)bytes {
  OrgBouncycastleCryptoParamsDESParameters_setOddParityWithByteArray_(bytes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(isWeakKeyWithByteArray:withInt:);
  methods[2].selector = @selector(setOddParityWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DES_KEY_LENGTH", "I", .constantValue.asInt = OrgBouncycastleCryptoParamsDESParameters_DES_KEY_LENGTH, 0x19, -1, -1, -1, -1 },
    { "N_DES_WEAK_KEYS", "I", .constantValue.asInt = OrgBouncycastleCryptoParamsDESParameters_N_DES_WEAK_KEYS, 0x1a, -1, -1, -1, -1 },
    { "DES_weak_keys", "[B", .constantValue.asLong = 0, 0xa, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "isWeakKey", "[BI", "setOddParity", &OrgBouncycastleCryptoParamsDESParameters_DES_weak_keys };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoParamsDESParameters = { "DESParameters", "org.bouncycastle.crypto.params", ptrTable, methods, fields, 7, 0x1, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoParamsDESParameters;
}

+ (void)initialize {
  if (self == [OrgBouncycastleCryptoParamsDESParameters class]) {
    OrgBouncycastleCryptoParamsDESParameters_DES_weak_keys = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 30
      (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01, (jbyte) (jint) 0x01,
#line 31
      (jbyte) (jint) 0x1f, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x0e,
#line 32
      (jbyte) (jint) 0xe0, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xf1,
#line 33
      (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xfe,
#line 36
      (jbyte) (jint) 0x01, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x01, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x01, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x01, (jbyte) (jint) 0xfe,
#line 37
      (jbyte) (jint) 0x1f, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xf1,
#line 38
      (jbyte) (jint) 0x01, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x01, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf1,
#line 39
      (jbyte) (jint) 0x1f, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xfe,
#line 40
      (jbyte) (jint) 0x01, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x01, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x01, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x01, (jbyte) (jint) 0x0e,
#line 41
      (jbyte) (jint) 0xe0, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xfe,
#line 42
      (jbyte) (jint) 0xfe, (jbyte) (jint) 0x01, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x01, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x01, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x01,
#line 43
      (jbyte) (jint) 0xe0, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x0e,
#line 44
      (jbyte) (jint) 0xe0, (jbyte) (jint) 0x01, (jbyte) (jint) 0xe0, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x01, (jbyte) (jint) 0xf1, (jbyte) (jint) 0x01,
#line 45
      (jbyte) (jint) 0xfe, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x1f, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x0e, (jbyte) (jint) 0xfe, (jbyte) (jint) 0x0e,
#line 46
      (jbyte) (jint) 0x1f, (jbyte) (jint) 0x01, (jbyte) (jint) 0x1f, (jbyte) (jint) 0x01, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x01, (jbyte) (jint) 0x0e, (jbyte) (jint) 0x01,
#line 47
      (jbyte) (jint) 0xfe, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xe0, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xf1, (jbyte) (jint) 0xfe, (jbyte) (jint) 0xf1 } count:128];
      J2OBJC_SET_INITIALIZED(OrgBouncycastleCryptoParamsDESParameters)
    }
  }

@end


#line 6
void OrgBouncycastleCryptoParamsDESParameters_initWithByteArray_(OrgBouncycastleCryptoParamsDESParameters *self, IOSByteArray *key) {
  OrgBouncycastleCryptoParamsKeyParameter_initWithByteArray_(self,
#line 9
  key);
  
#line 11
  if (OrgBouncycastleCryptoParamsDESParameters_isWeakKeyWithByteArray_withInt_(key, 0)) {
    
#line 13
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"attempt to create weak DES key");
  }
}


#line 6
OrgBouncycastleCryptoParamsDESParameters *new_OrgBouncycastleCryptoParamsDESParameters_initWithByteArray_(IOSByteArray *key) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoParamsDESParameters, initWithByteArray_, key)
}


#line 6
OrgBouncycastleCryptoParamsDESParameters *create_OrgBouncycastleCryptoParamsDESParameters_initWithByteArray_(IOSByteArray *key) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoParamsDESParameters, initWithByteArray_, key)
}


#line 61
jboolean OrgBouncycastleCryptoParamsDESParameters_isWeakKeyWithByteArray_withInt_(IOSByteArray *key, jint offset) {
  OrgBouncycastleCryptoParamsDESParameters_initialize();
  
#line 65
  if (((IOSByteArray *) nil_chk(key))->size_ - offset < OrgBouncycastleCryptoParamsDESParameters_DES_KEY_LENGTH) {
    
#line 67
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"key material too short.");
  }
  
#line 70
  for (jint i = 0; i < OrgBouncycastleCryptoParamsDESParameters_N_DES_WEAK_KEYS; i++) {
    {
      for (jint j = 0; j < OrgBouncycastleCryptoParamsDESParameters_DES_KEY_LENGTH; j++) {
        
#line 74
        if (IOSByteArray_Get(key, j + offset) != IOSByteArray_Get(nil_chk(OrgBouncycastleCryptoParamsDESParameters_DES_weak_keys), i * OrgBouncycastleCryptoParamsDESParameters_DES_KEY_LENGTH + j)) {
          
#line 76
          goto continue_nextkey;
        }
      }
      
#line 80
      return true;
    }
    continue_nextkey: ;
  }
  
#line 82
  return false;
}


#line 91
void OrgBouncycastleCryptoParamsDESParameters_setOddParityWithByteArray_(IOSByteArray *bytes) {
  OrgBouncycastleCryptoParamsDESParameters_initialize();
  
#line 94
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_; i++) {
    
#line 96
    jint b = IOSByteArray_Get(bytes, i);
    *IOSByteArray_GetRef(bytes, i) = (jbyte) ((b & (jint) 0xfe) |
#line 98
    ((((JreRShift32(b, 1)) ^
#line 99
    (JreRShift32(b, 2)) ^
#line 100
    (JreRShift32(b, 3)) ^
#line 101
    (JreRShift32(b, 4)) ^
#line 102
    (JreRShift32(b, 5)) ^
#line 103
    (JreRShift32(b, 6)) ^
#line 104
    (JreRShift32(b, 7))) ^ (jint) 0x01) & (jint) 0x01));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoParamsDESParameters)

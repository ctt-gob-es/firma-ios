//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/params/ECDomainParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoParamsECDomainParameters")
#ifdef RESTRICT_OrgBouncycastleCryptoParamsECDomainParameters
#define INCLUDE_ALL_OrgBouncycastleCryptoParamsECDomainParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoParamsECDomainParameters 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoParamsECDomainParameters

#if !defined (OrgBouncycastleCryptoParamsECDomainParameters_) && (INCLUDE_ALL_OrgBouncycastleCryptoParamsECDomainParameters || defined(INCLUDE_OrgBouncycastleCryptoParamsECDomainParameters))
#define OrgBouncycastleCryptoParamsECDomainParameters_

#define RESTRICT_OrgBouncycastleMathEcECConstants 1
#define INCLUDE_OrgBouncycastleMathEcECConstants 1
#include "org/bouncycastle/math/ec/ECConstants.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class OrgBouncycastleAsn1X9X9ECParameters;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECPoint;

@interface OrgBouncycastleCryptoParamsECDomainParameters : NSObject < OrgBouncycastleMathEcECConstants >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h
                                       withByteArray:(IOSByteArray *)seed;

- (instancetype)initWithOrgBouncycastleAsn1X9X9ECParameters:(OrgBouncycastleAsn1X9X9ECParameters *)x9;

- (jboolean)isEqual:(id)obj;

- (OrgBouncycastleMathEcECCurve *)getCurve;

- (OrgBouncycastleMathEcECPoint *)getG;

- (JavaMathBigInteger *)getH;

- (JavaMathBigInteger *)getHInv;

- (JavaMathBigInteger *)getN;

- (IOSByteArray *)getSeed;

- (NSUInteger)hash;

- (JavaMathBigInteger *)validatePrivateScalarWithJavaMathBigInteger:(JavaMathBigInteger *)d;

- (OrgBouncycastleMathEcECPoint *)validatePublicPointWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)q;

#pragma mark Package-Private

+ (OrgBouncycastleMathEcECPoint *)validatePublicPointWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)c
                                                     withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)q;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoParamsECDomainParameters)

FOUNDATION_EXPORT void OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleAsn1X9X9ECParameters_(OrgBouncycastleCryptoParamsECDomainParameters *self, OrgBouncycastleAsn1X9X9ECParameters *x9);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *new_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleAsn1X9X9ECParameters_(OrgBouncycastleAsn1X9X9ECParameters *x9) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *create_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleAsn1X9X9ECParameters_(OrgBouncycastleAsn1X9X9ECParameters *x9);

FOUNDATION_EXPORT void OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(OrgBouncycastleCryptoParamsECDomainParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *new_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *create_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT void OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleCryptoParamsECDomainParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *new_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *create_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleCryptoParamsECDomainParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *new_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *create_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint *OrgBouncycastleCryptoParamsECDomainParameters_validatePublicPointWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_(OrgBouncycastleMathEcECCurve *c, OrgBouncycastleMathEcECPoint *q);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoParamsECDomainParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoParamsECDomainParameters")

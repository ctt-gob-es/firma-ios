//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/StreamCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoStreamCipher")
#ifdef RESTRICT_OrgBouncycastleCryptoStreamCipher
#define INCLUDE_ALL_OrgBouncycastleCryptoStreamCipher 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoStreamCipher 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoStreamCipher

#if !defined (OrgBouncycastleCryptoStreamCipher_) && (INCLUDE_ALL_OrgBouncycastleCryptoStreamCipher || defined(INCLUDE_OrgBouncycastleCryptoStreamCipher))
#define OrgBouncycastleCryptoStreamCipher_

@class IOSByteArray;
@protocol OrgBouncycastleCryptoCipherParameters;

/*!
 @brief the interface stream ciphers conform to.
 */
@protocol OrgBouncycastleCryptoStreamCipher < JavaObject >

/*!
 @brief Initialise the cipher.
 @param forEncryption if true the cipher is initialised for   encryption, if false for decryption.
 @param params the key and other data required by the cipher.
 @throw IllegalArgumentExceptionif the params argument is
  inappropriate.
 */
- (void)init__WithBoolean:(jboolean)forEncryption
withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Return the name of the algorithm the cipher implements.
 @return the name of the algorithm the cipher implements.
 */
- (NSString *)getAlgorithmName;

/*!
 @brief encrypt/decrypt a single byte returning the result.
 @param inArg the byte to be processed.
 @return the result of processing the input byte.
 */
- (jbyte)returnByteWithByte:(jbyte)inArg;

/*!
 @brief process a block of bytes from in putting the result into out.
 @param inArg the input byte array.
 @param inOff the offset into the in array where the data to be processed starts.
 @param len the number of bytes to be processed.
 @param outArg the output buffer the processed bytes go into.
 @param outOff the offset into the output byte array the processed data starts at.
 @return the number of bytes produced - should always be len.
 @throw DataLengthExceptionif the output buffer is too small.
 */
- (jint)processBytesWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                          withInt:(jint)len
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

/*!
 @brief reset the cipher.This leaves it in the same state
  it was at after the last init (if there was one).
 */
- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoStreamCipher)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoStreamCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoStreamCipher")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/digests/SHA1Digest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoDigestsSHA1Digest")
#ifdef RESTRICT_OrgBouncycastleCryptoDigestsSHA1Digest
#define INCLUDE_ALL_OrgBouncycastleCryptoDigestsSHA1Digest 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoDigestsSHA1Digest 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoDigestsSHA1Digest

#if !defined (OrgBouncycastleCryptoDigestsSHA1Digest_) && (INCLUDE_ALL_OrgBouncycastleCryptoDigestsSHA1Digest || defined(INCLUDE_OrgBouncycastleCryptoDigestsSHA1Digest))
#define OrgBouncycastleCryptoDigestsSHA1Digest_

#define RESTRICT_OrgBouncycastleCryptoDigestsGeneralDigest 1
#define INCLUDE_OrgBouncycastleCryptoDigestsGeneralDigest 1
#include "org/bouncycastle/crypto/digests/GeneralDigest.h"

#define RESTRICT_OrgBouncycastleCryptoDigestsEncodableDigest 1
#define INCLUDE_OrgBouncycastleCryptoDigestsEncodableDigest 1
#include "org/bouncycastle/crypto/digests/EncodableDigest.h"

@class IOSByteArray;
@protocol OrgBouncycastleUtilMemoable;

/*!
 @brief implementation of SHA-1 as outlined in "Handbook of Applied Cryptography", pages 346 - 349.
 It is interesting to ponder why the, apart from the extra IV, the other difference here from MD5
  is the "endianness" of the word processing!
 */
@interface OrgBouncycastleCryptoDigestsSHA1Digest : OrgBouncycastleCryptoDigestsGeneralDigest < OrgBouncycastleCryptoDigestsEncodableDigest >

#pragma mark Public

/*!
 @brief Standard constructor
 */
- (instancetype)init;

/*!
 @brief State constructor - create a digest initialised with the state of a previous one.
 @param encodedState the encoded state from the originating digest.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)encodedState;

/*!
 @brief Copy constructor.This will copy the state of the provided
  message digest.
 */
- (instancetype)initWithOrgBouncycastleCryptoDigestsSHA1Digest:(OrgBouncycastleCryptoDigestsSHA1Digest *)t;

- (id<OrgBouncycastleUtilMemoable>)copy__ OBJC_METHOD_FAMILY_NONE;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

- (IOSByteArray *)getEncodedState;

/*!
 @brief reset the chaining variables
 */
- (void)reset;

- (void)resetWithOrgBouncycastleUtilMemoable:(id<OrgBouncycastleUtilMemoable>)other;

#pragma mark Protected

- (void)processBlock;

- (void)processLengthWithLong:(jlong)bitLength;

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgBouncycastleCryptoDigestsGeneralDigest:(OrgBouncycastleCryptoDigestsGeneralDigest *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoDigestsSHA1Digest)

FOUNDATION_EXPORT void OrgBouncycastleCryptoDigestsSHA1Digest_init(OrgBouncycastleCryptoDigestsSHA1Digest *self);

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsSHA1Digest *create_OrgBouncycastleCryptoDigestsSHA1Digest_init(void);

FOUNDATION_EXPORT void OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *self, OrgBouncycastleCryptoDigestsSHA1Digest *t);

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsSHA1Digest *create_OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *t);

FOUNDATION_EXPORT void OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(OrgBouncycastleCryptoDigestsSHA1Digest *self, IOSByteArray *encodedState);

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(IOSByteArray *encodedState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsSHA1Digest *create_OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(IOSByteArray *encodedState);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoDigestsSHA1Digest)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoDigestsSHA1Digest")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/digests/XofUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoDigestsXofUtils")
#ifdef RESTRICT_OrgBouncycastleCryptoDigestsXofUtils
#define INCLUDE_ALL_OrgBouncycastleCryptoDigestsXofUtils 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoDigestsXofUtils 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoDigestsXofUtils

#if !defined (OrgBouncycastleCryptoDigestsXofUtils_) && (INCLUDE_ALL_OrgBouncycastleCryptoDigestsXofUtils || defined(INCLUDE_OrgBouncycastleCryptoDigestsXofUtils))
#define OrgBouncycastleCryptoDigestsXofUtils_

@class IOSByteArray;

@interface OrgBouncycastleCryptoDigestsXofUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)leftEncodeWithLong:(jlong)strLen;

+ (IOSByteArray *)rightEncodeWithLong:(jlong)strLen;

#pragma mark Package-Private

+ (IOSByteArray *)encodeWithByte:(jbyte)X;

+ (IOSByteArray *)encodeWithByteArray:(IOSByteArray *)inArg
                              withInt:(jint)inOff
                              withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoDigestsXofUtils)

FOUNDATION_EXPORT void OrgBouncycastleCryptoDigestsXofUtils_init(OrgBouncycastleCryptoDigestsXofUtils *self);

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsXofUtils *new_OrgBouncycastleCryptoDigestsXofUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoDigestsXofUtils *create_OrgBouncycastleCryptoDigestsXofUtils_init(void);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleCryptoDigestsXofUtils_leftEncodeWithLong_(jlong strLen);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleCryptoDigestsXofUtils_rightEncodeWithLong_(jlong strLen);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleCryptoDigestsXofUtils_encodeWithByte_(jbyte X);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleCryptoDigestsXofUtils_encodeWithByteArray_withInt_withInt_(IOSByteArray *inArg, jint inOff, jint len);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoDigestsXofUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoDigestsXofUtils")

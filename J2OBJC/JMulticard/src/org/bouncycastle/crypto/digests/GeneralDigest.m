//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/digests/GeneralDigest.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "org/bouncycastle/crypto/digests/GeneralDigest.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/digests/GeneralDigest must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgBouncycastleCryptoDigestsGeneralDigest () {
 @public
  IOSByteArray *xBuf_;
  jint xBufOff_;
  jlong byteCount_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoDigestsGeneralDigest, xBuf_, IOSByteArray *)

inline jint OrgBouncycastleCryptoDigestsGeneralDigest_get_BYTE_LENGTH(void);
#define OrgBouncycastleCryptoDigestsGeneralDigest_BYTE_LENGTH 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoDigestsGeneralDigest, BYTE_LENGTH, jint)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/digests/GeneralDigest.java"


#line 11
@implementation OrgBouncycastleCryptoDigestsGeneralDigest

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 24
- (instancetype)init {
  OrgBouncycastleCryptoDigestsGeneralDigest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 34
- (instancetype)initWithOrgBouncycastleCryptoDigestsGeneralDigest:(OrgBouncycastleCryptoDigestsGeneralDigest *)t {
  OrgBouncycastleCryptoDigestsGeneralDigest_initWithOrgBouncycastleCryptoDigestsGeneralDigest_(self, t);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)encodedState {
  OrgBouncycastleCryptoDigestsGeneralDigest_initWithByteArray_(self, encodedState);
  return self;
}


#line 46
- (void)copyInWithOrgBouncycastleCryptoDigestsGeneralDigest:(OrgBouncycastleCryptoDigestsGeneralDigest *)t {
  
#line 48
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(((OrgBouncycastleCryptoDigestsGeneralDigest *) nil_chk(t))->xBuf_, 0, xBuf_, 0, ((IOSByteArray *) nil_chk(t->xBuf_))->size_);
  
#line 50
  xBufOff_ = t->xBufOff_;
  byteCount_ = t->byteCount_;
}


#line 54
- (void)updateWithByte:(jbyte)inArg {
  
#line 58
  *IOSByteArray_GetRef(nil_chk(xBuf_), xBufOff_++) = inArg;
  
#line 60
  if (xBufOff_ == xBuf_->size_) {
    
#line 62
    [self processWordWithByteArray:xBuf_ withInt:0];
    xBufOff_ = 0;
  }
  
#line 66
  byteCount_++;
}


#line 69
- (void)updateWithByteArray:(IOSByteArray *)inArg
                    withInt:(jint)inOff
                    withInt:(jint)len {
  
#line 75
  len = JavaLangMath_maxWithInt_withInt_(0, len);
  
#line 80
  jint i = 0;
  if (xBufOff_ != 0) {
    
#line 83
    while (i < len) {
      
#line 85
      *IOSByteArray_GetRef(nil_chk(xBuf_), xBufOff_++) = IOSByteArray_Get(nil_chk(inArg), inOff + i++);
      if (xBufOff_ == 4) {
        
#line 88
        [self processWordWithByteArray:xBuf_ withInt:0];
        xBufOff_ = 0;
        break;
      }
    }
  }
  
#line 98
  jint limit = ((len - i) & ~3) + i;
  for (; i < limit; i += 4) {
    
#line 101
    [self processWordWithByteArray:inArg withInt:inOff + i];
  }
  
#line 107
  while (i < len) {
    
#line 109
    *IOSByteArray_GetRef(nil_chk(xBuf_), xBufOff_++) = IOSByteArray_Get(nil_chk(inArg), inOff + i++);
  }
  
#line 112
  byteCount_ += len;
}


#line 115
- (void)finish {
  
#line 117
  jlong bitLength = (JreLShift64(byteCount_, 3));
  
#line 122
  [self updateWithByte:(jbyte) 128];
  
#line 124
  while (xBufOff_ != 0) {
    
#line 126
    [self updateWithByte:(jbyte) 0];
  }
  
#line 129
  [self processLengthWithLong:bitLength];
  
#line 131
  [self processBlock];
}


#line 134
- (void)reset {
  
#line 137
  byteCount_ = 0;
  
#line 139
  xBufOff_ = 0;
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(xBuf_))->size_; i++) {
    
#line 142
    *IOSByteArray_GetRef(xBuf_, i) = 0;
  }
}


#line 146
- (void)populateStateWithByteArray:(IOSByteArray *)state {
  
#line 148
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(xBuf_, 0, state, 0, xBufOff_);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(xBufOff_, state, 4);
  OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(byteCount_, state, 8);
}


#line 153
- (jint)getByteLength {
  
#line 156
  return OrgBouncycastleCryptoDigestsGeneralDigest_BYTE_LENGTH;
}

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 161
- (void)processLengthWithLong:(jlong)bitLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}


#line 163
- (void)processBlock {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x404, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgBouncycastleCryptoDigestsGeneralDigest:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(copyInWithOrgBouncycastleCryptoDigestsGeneralDigest:);
  methods[4].selector = @selector(updateWithByte:);
  methods[5].selector = @selector(updateWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(finish);
  methods[7].selector = @selector(reset);
  methods[8].selector = @selector(populateStateWithByteArray:);
  methods[9].selector = @selector(getByteLength);
  methods[10].selector = @selector(processWordWithByteArray:withInt:);
  methods[11].selector = @selector(processLengthWithLong:);
  methods[12].selector = @selector(processBlock);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTE_LENGTH", "I", .constantValue.asInt = OrgBouncycastleCryptoDigestsGeneralDigest_BYTE_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "xBuf_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "xBufOff_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "byteCount_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCryptoDigestsGeneralDigest;", "[B", "copyIn", "update", "B", "[BII", "populateState", "processWord", "[BI", "processLength", "J" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoDigestsGeneralDigest = { "GeneralDigest", "org.bouncycastle.crypto.digests", ptrTable, methods, fields, 7, 0x401, 13, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoDigestsGeneralDigest;
}

@end


#line 24
void OrgBouncycastleCryptoDigestsGeneralDigest_init(OrgBouncycastleCryptoDigestsGeneralDigest *self) {
  NSObject_init(self);
  self->xBuf_ = [IOSByteArray newArrayWithLength:
#line 16
  4];
  
#line 26
  self->xBufOff_ = 0;
}

void OrgBouncycastleCryptoDigestsGeneralDigest_initWithOrgBouncycastleCryptoDigestsGeneralDigest_(OrgBouncycastleCryptoDigestsGeneralDigest *self, OrgBouncycastleCryptoDigestsGeneralDigest *t) {
  NSObject_init(self);
  self->xBuf_ = [IOSByteArray newArrayWithLength:
#line 16
  4];
  
#line 36
  [self copyInWithOrgBouncycastleCryptoDigestsGeneralDigest:t];
}


#line 39
void OrgBouncycastleCryptoDigestsGeneralDigest_initWithByteArray_(OrgBouncycastleCryptoDigestsGeneralDigest *self, IOSByteArray *encodedState) {
  NSObject_init(self);
  self->xBuf_ = [IOSByteArray newArrayWithLength:
#line 16
  4];
  
#line 41
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(encodedState, 0, self->xBuf_, 0, self->xBuf_->size_);
  self->xBufOff_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 4);
  self->byteCount_ = OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(encodedState, 8);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoDigestsGeneralDigest)

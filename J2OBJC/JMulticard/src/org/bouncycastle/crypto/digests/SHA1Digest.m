//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/digests/SHA1Digest.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/bouncycastle/crypto/digests/GeneralDigest.h"
#include "org/bouncycastle/crypto/digests/SHA1Digest.h"
#include "org/bouncycastle/util/Memoable.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/digests/SHA1Digest must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoDigestsSHA1Digest () {
 @public
  jint H1_;
  jint H2_;
  jint H3_;
  jint H4_;
  jint H5_;
  IOSIntArray *X_;
  jint xOff_;
}

- (void)copyInWithOrgBouncycastleCryptoDigestsSHA1Digest:(OrgBouncycastleCryptoDigestsSHA1Digest *)t OBJC_METHOD_FAMILY_NONE;

- (jint)fWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

- (jint)hWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

- (jint)gWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoDigestsSHA1Digest, X_, IOSIntArray *)

inline jint OrgBouncycastleCryptoDigestsSHA1Digest_get_DIGEST_LENGTH(void);
#define OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoDigestsSHA1Digest, DIGEST_LENGTH, jint)

inline jint OrgBouncycastleCryptoDigestsSHA1Digest_get_Y1(void);
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y1 1518500249
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoDigestsSHA1Digest, Y1, jint)

inline jint OrgBouncycastleCryptoDigestsSHA1Digest_get_Y2(void);
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y2 1859775393
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoDigestsSHA1Digest, Y2, jint)

inline jint OrgBouncycastleCryptoDigestsSHA1Digest_get_Y3(void);
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y3 -1894007588
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoDigestsSHA1Digest, Y3, jint)

inline jint OrgBouncycastleCryptoDigestsSHA1Digest_get_Y4(void);
#define OrgBouncycastleCryptoDigestsSHA1Digest_Y4 -899497514
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoDigestsSHA1Digest, Y4, jint)

__attribute__((unused)) static void OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *self, OrgBouncycastleCryptoDigestsSHA1Digest *t);

__attribute__((unused)) static jint OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w);

__attribute__((unused)) static jint OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w);

__attribute__((unused)) static jint OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/digests/SHA1Digest.java"


#line 12
@implementation OrgBouncycastleCryptoDigestsSHA1Digest

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 26
- (instancetype)init {
  OrgBouncycastleCryptoDigestsSHA1Digest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 35
- (instancetype)initWithOrgBouncycastleCryptoDigestsSHA1Digest:(OrgBouncycastleCryptoDigestsSHA1Digest *)t {
  OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, t);
  return self;
}


#line 47
- (instancetype)initWithByteArray:(IOSByteArray *)encodedState {
  OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(self, encodedState);
  return self;
}


#line 64
- (void)copyInWithOrgBouncycastleCryptoDigestsSHA1Digest:(OrgBouncycastleCryptoDigestsSHA1Digest *)t {
  OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, t);
}


#line 76
- (NSString *)getAlgorithmName {
  
#line 79
  return @"SHA-1";
}

- (jint)getDigestSize {
  
#line 85
  return OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH;
}

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff {
  
#line 95
  jint n = JreLShift32(IOSByteArray_Get(nil_chk(inArg), inOff), 24);
  n |= JreLShift32((IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff), 16);
  n |= JreLShift32((IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff), 8);
  n |= (IOSByteArray_Get(inArg, ++inOff) & (jint) 0xff);
  *IOSIntArray_GetRef(nil_chk(X_), xOff_) = n;
  
#line 101
  if (++xOff_ == 16) {
    
#line 103
    [self processBlock];
  }
}


#line 107
- (void)processLengthWithLong:(jlong)bitLength {
  
#line 111
  if (xOff_ > 14) {
    
#line 113
    [self processBlock];
  }
  
#line 116
  *IOSIntArray_GetRef(nil_chk(X_), 14) = (jint) (JreURShift64(bitLength, 32));
  *IOSIntArray_GetRef(X_, 15) = (jint) bitLength;
}


#line 120
- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff {
  
#line 125
  [self finish];
  
#line 127
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H1_, outArg, outOff);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H2_, outArg, outOff + 4);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H3_, outArg, outOff + 8);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H4_, outArg, outOff + 12);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H5_, outArg, outOff + 16);
  
#line 133
  [self reset];
  
#line 135
  return OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH;
}


#line 141
- (void)reset {
  
#line 144
  [super reset];
  
#line 146
  H1_ = (jint) 0x67452301;
  H2_ = (jint) 0xefcdab89;
  H3_ = (jint) 0x98badcfe;
  H4_ = (jint) 0x10325476;
  H5_ = (jint) 0xc3d2e1f0;
  
#line 152
  xOff_ = 0;
  for (jint i = 0; i != ((IOSIntArray *) nil_chk(X_))->size_; i++) {
    
#line 155
    *IOSIntArray_GetRef(X_, i) = 0;
  }
}


#line 167
- (jint)fWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, u, v, w);
}


#line 175
- (jint)hWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, u, v, w);
}


#line 183
- (jint)gWithInt:(jint)u
         withInt:(jint)v
         withInt:(jint)w {
  return OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, u, v, w);
}


#line 191
- (void)processBlock {
  
#line 197
  for (jint i = 16; i < 80; i++) {
    
#line 199
    jint t = IOSIntArray_Get(nil_chk(X_), i - 3) ^ IOSIntArray_Get(X_, i - 8) ^ IOSIntArray_Get(X_, i - 14) ^ IOSIntArray_Get(X_, i - 16);
    *IOSIntArray_GetRef(X_, i) = (JreLShift32(t, 1)) | (JreURShift32(t, 31));
  }
  
#line 206
  jint A = H1_;
  jint B = H2_;
  jint C = H3_;
  jint D = H4_;
  jint E = H5_;
  
#line 215
  jint idx = 0;
  
#line 217
  for (jint j = 0; j < 4; j++) {
    
#line 221
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 224
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 227
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 230
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 233
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y1;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 240
  for (jint j = 0; j < 4; j++) {
    
#line 244
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 247
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 250
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 253
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 256
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y2;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 263
  for (jint j = 0; j < 4; j++) {
    
#line 267
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 270
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 273
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 276
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 279
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y3;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 286
  for (jint j = 0; j <= 3; j++) {
    
#line 290
    E += ((JreLShift32(A, 5)) | (JreURShift32(A, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, B, C, D) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    B = (JreLShift32(B, 30)) | (JreURShift32(B, 2));
    
#line 293
    D += ((JreLShift32(E, 5)) | (JreURShift32(E, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, A, B, C) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    A = (JreLShift32(A, 30)) | (JreURShift32(A, 2));
    
#line 296
    C += ((JreLShift32(D, 5)) | (JreURShift32(D, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, E, A, B) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    E = (JreLShift32(E, 30)) | (JreURShift32(E, 2));
    
#line 299
    B += ((JreLShift32(C, 5)) | (JreURShift32(C, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, D, E, A) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    D = (JreLShift32(D, 30)) | (JreURShift32(D, 2));
    
#line 302
    A += ((JreLShift32(B, 5)) | (JreURShift32(B, 27))) + OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(self, C, D, E) + IOSIntArray_Get(nil_chk(X_), idx++) + OrgBouncycastleCryptoDigestsSHA1Digest_Y4;
    C = (JreLShift32(C, 30)) | (JreURShift32(C, 2));
  }
  
#line 307
  H1_ += A;
  H2_ += B;
  H3_ += C;
  H4_ += D;
  H5_ += E;
  
#line 316
  xOff_ = 0;
  for (jint i = 0; i < 16; i++) {
    
#line 319
    *IOSIntArray_GetRef(nil_chk(X_), i) = 0;
  }
}

- (id<OrgBouncycastleUtilMemoable>)copy__ {
  
#line 326
  return new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(self);
}

- (void)resetWithOrgBouncycastleUtilMemoable:(id<OrgBouncycastleUtilMemoable>)other {
  
#line 332
  OrgBouncycastleCryptoDigestsSHA1Digest *d = (OrgBouncycastleCryptoDigestsSHA1Digest *) cast_chk(other, [OrgBouncycastleCryptoDigestsSHA1Digest class]);
  
#line 334
  [super copyInWithOrgBouncycastleCryptoDigestsGeneralDigest:d];
  OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, d);
}


#line 338
- (IOSByteArray *)getEncodedState {
  
#line 341
  IOSByteArray *state = [IOSByteArray newArrayWithLength:40 + xOff_ * 4];
  
#line 343
  [super populateStateWithByteArray:state];
  
#line 345
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H1_, state, 16);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H2_, state, 20);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H3_, state, 24);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H4_, state, 28);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(H5_, state, 32);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(xOff_, state, 36);
  
#line 352
  for (jint i = 0; i != xOff_; i++) {
    
#line 354
    OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(nil_chk(X_), i), state, 40 + (i * 4));
  }
  
#line 357
  return state;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 10, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleUtilMemoable;", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgBouncycastleCryptoDigestsSHA1Digest:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(copyInWithOrgBouncycastleCryptoDigestsSHA1Digest:);
  methods[4].selector = @selector(getAlgorithmName);
  methods[5].selector = @selector(getDigestSize);
  methods[6].selector = @selector(processWordWithByteArray:withInt:);
  methods[7].selector = @selector(processLengthWithLong:);
  methods[8].selector = @selector(doFinalWithByteArray:withInt:);
  methods[9].selector = @selector(reset);
  methods[10].selector = @selector(fWithInt:withInt:withInt:);
  methods[11].selector = @selector(hWithInt:withInt:withInt:);
  methods[12].selector = @selector(gWithInt:withInt:withInt:);
  methods[13].selector = @selector(processBlock);
  methods[14].selector = @selector(copy__);
  methods[15].selector = @selector(resetWithOrgBouncycastleUtilMemoable:);
  methods[16].selector = @selector(getEncodedState);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DIGEST_LENGTH", "I", .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_DIGEST_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "H1_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H2_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H3_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H4_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "H5_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "X_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "xOff_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "Y1", "I", .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y1, 0x1a, -1, -1, -1, -1 },
    { "Y2", "I", .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y2, 0x1a, -1, -1, -1, -1 },
    { "Y3", "I", .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y3, 0x1a, -1, -1, -1, -1 },
    { "Y4", "I", .constantValue.asInt = OrgBouncycastleCryptoDigestsSHA1Digest_Y4, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCryptoDigestsSHA1Digest;", "[B", "copyIn", "processWord", "[BI", "processLength", "J", "doFinal", "f", "III", "h", "g", "copy", "reset", "LOrgBouncycastleUtilMemoable;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoDigestsSHA1Digest = { "SHA1Digest", "org.bouncycastle.crypto.digests", ptrTable, methods, fields, 7, 0x1, 17, 12, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoDigestsSHA1Digest;
}

@end


#line 26
void OrgBouncycastleCryptoDigestsSHA1Digest_init(OrgBouncycastleCryptoDigestsSHA1Digest *self) {
  OrgBouncycastleCryptoDigestsGeneralDigest_init(self);
  self->X_ = [IOSIntArray newArrayWithLength:
#line 20
  80];
  
#line 28
  [self reset];
}


#line 26
OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoDigestsSHA1Digest, init)
}


#line 26
OrgBouncycastleCryptoDigestsSHA1Digest *create_OrgBouncycastleCryptoDigestsSHA1Digest_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoDigestsSHA1Digest, init)
}


#line 35
void OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *self, OrgBouncycastleCryptoDigestsSHA1Digest *t) {
  OrgBouncycastleCryptoDigestsGeneralDigest_initWithOrgBouncycastleCryptoDigestsGeneralDigest_(self,
#line 37
  t);
  self->X_ = [IOSIntArray newArrayWithLength:
#line 20
  80];
  
#line 39
  OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(self, t);
}


#line 35
OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *t) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoDigestsSHA1Digest, initWithOrgBouncycastleCryptoDigestsSHA1Digest_, t)
}


#line 35
OrgBouncycastleCryptoDigestsSHA1Digest *create_OrgBouncycastleCryptoDigestsSHA1Digest_initWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *t) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoDigestsSHA1Digest, initWithOrgBouncycastleCryptoDigestsSHA1Digest_, t)
}


#line 47
void OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(OrgBouncycastleCryptoDigestsSHA1Digest *self, IOSByteArray *encodedState) {
  OrgBouncycastleCryptoDigestsGeneralDigest_initWithByteArray_(self,
#line 49
  encodedState);
  self->X_ = [IOSIntArray newArrayWithLength:
#line 20
  80];
  
#line 51
  self->H1_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 16);
  self->H2_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 20);
  self->H3_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 24);
  self->H4_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 28);
  self->H5_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 32);
  
#line 57
  self->xOff_ = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 36);
  for (jint i = 0; i != self->xOff_; i++) {
    
#line 60
    *IOSIntArray_GetRef(nil_chk(self->X_), i) = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(encodedState, 40 + (i * 4));
  }
}


#line 47
OrgBouncycastleCryptoDigestsSHA1Digest *new_OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(IOSByteArray *encodedState) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoDigestsSHA1Digest, initWithByteArray_, encodedState)
}


#line 47
OrgBouncycastleCryptoDigestsSHA1Digest *create_OrgBouncycastleCryptoDigestsSHA1Digest_initWithByteArray_(IOSByteArray *encodedState) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoDigestsSHA1Digest, initWithByteArray_, encodedState)
}


#line 64
void OrgBouncycastleCryptoDigestsSHA1Digest_copyInWithOrgBouncycastleCryptoDigestsSHA1Digest_(OrgBouncycastleCryptoDigestsSHA1Digest *self, OrgBouncycastleCryptoDigestsSHA1Digest *t) {
  
#line 66
  self->H1_ = ((OrgBouncycastleCryptoDigestsSHA1Digest *) nil_chk(t))->H1_;
  self->H2_ = t->H2_;
  self->H3_ = t->H3_;
  self->H4_ = t->H4_;
  self->H5_ = t->H5_;
  
#line 72
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(t->X_, 0, self->X_, 0, ((IOSIntArray *) nil_chk(t->X_))->size_);
  self->xOff_ = t->xOff_;
}


#line 167
jint OrgBouncycastleCryptoDigestsSHA1Digest_fWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w) {
  
#line 172
  return ((u & v) | ((~u) & w));
}


#line 175
jint OrgBouncycastleCryptoDigestsSHA1Digest_hWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w) {
  
#line 180
  return (u ^ v ^ w);
}


#line 183
jint OrgBouncycastleCryptoDigestsSHA1Digest_gWithInt_withInt_withInt_(OrgBouncycastleCryptoDigestsSHA1Digest *self, jint u, jint v, jint w) {
  
#line 188
  return ((u & v) | (u & w) | (v & w));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoDigestsSHA1Digest)

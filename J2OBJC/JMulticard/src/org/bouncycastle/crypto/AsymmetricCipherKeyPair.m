//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/AsymmetricCipherKeyPair.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/crypto/AsymmetricCipherKeyPair.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/params/AsymmetricKeyParameter.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/AsymmetricCipherKeyPair must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoAsymmetricCipherKeyPair () {
 @public
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam_;
  OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoAsymmetricCipherKeyPair, publicParam_, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoAsymmetricCipherKeyPair, privateParam_, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleCryptoAsymmetricCipherKeyPair__Annotations$0(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/AsymmetricCipherKeyPair.java"


#line 8
@implementation OrgBouncycastleCryptoAsymmetricCipherKeyPair


#line 19
- (instancetype)initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)publicParam
                    withOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)privateParam {
  OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(self, publicParam, privateParam);
  return self;
}


#line 34
- (instancetype)initWithOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)publicParam
                    withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)privateParam {
  OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(self, publicParam, privateParam);
  return self;
}


#line 48
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPublic {
  
#line 50
  return publicParam_;
}


#line 58
- (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)getPrivate {
  
#line 60
  return privateParam_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, 2, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:withOrgBouncycastleCryptoParamsAsymmetricKeyParameter:);
  methods[1].selector = @selector(initWithOrgBouncycastleCryptoCipherParameters:withOrgBouncycastleCryptoCipherParameters:);
  methods[2].selector = @selector(getPublic);
  methods[3].selector = @selector(getPrivate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "publicParam_", "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "privateParam_", "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;LOrgBouncycastleCryptoParamsAsymmetricKeyParameter;", "LOrgBouncycastleCryptoCipherParameters;LOrgBouncycastleCryptoCipherParameters;", (void *)&OrgBouncycastleCryptoAsymmetricCipherKeyPair__Annotations$0 };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoAsymmetricCipherKeyPair = { "AsymmetricCipherKeyPair", "org.bouncycastle.crypto", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoAsymmetricCipherKeyPair;
}

@end


#line 19
void OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoAsymmetricCipherKeyPair *self, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam) {
  NSObject_init(self);
  
#line 23
  self->publicParam_ = publicParam;
  self->privateParam_ = privateParam;
}


#line 19
OrgBouncycastleCryptoAsymmetricCipherKeyPair *new_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoAsymmetricCipherKeyPair, initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_, publicParam, privateParam)
}


#line 19
OrgBouncycastleCryptoAsymmetricCipherKeyPair *create_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *publicParam, OrgBouncycastleCryptoParamsAsymmetricKeyParameter *privateParam) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoAsymmetricCipherKeyPair, initWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter_withOrgBouncycastleCryptoParamsAsymmetricKeyParameter_, publicParam, privateParam)
}


#line 34
void OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(OrgBouncycastleCryptoAsymmetricCipherKeyPair *self, id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam) {
  NSObject_init(self);
  
#line 39
  self->publicParam_ = (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *) cast_chk(publicParam, [OrgBouncycastleCryptoParamsAsymmetricKeyParameter class]);
  self->privateParam_ = (OrgBouncycastleCryptoParamsAsymmetricKeyParameter *) cast_chk(privateParam, [OrgBouncycastleCryptoParamsAsymmetricKeyParameter class]);
}


#line 34
OrgBouncycastleCryptoAsymmetricCipherKeyPair *new_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoAsymmetricCipherKeyPair, initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_, publicParam, privateParam)
}


#line 34
OrgBouncycastleCryptoAsymmetricCipherKeyPair *create_OrgBouncycastleCryptoAsymmetricCipherKeyPair_initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_(id<OrgBouncycastleCryptoCipherParameters> publicParam, id<OrgBouncycastleCryptoCipherParameters> privateParam) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoAsymmetricCipherKeyPair, initWithOrgBouncycastleCryptoCipherParameters_withOrgBouncycastleCryptoCipherParameters_, publicParam, privateParam)
}

IOSObjectArray *OrgBouncycastleCryptoAsymmetricCipherKeyPair__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoAsymmetricCipherKeyPair)

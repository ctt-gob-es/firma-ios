//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/RuntimeCryptoException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoRuntimeCryptoException")
#ifdef RESTRICT_OrgBouncycastleCryptoRuntimeCryptoException
#define INCLUDE_ALL_OrgBouncycastleCryptoRuntimeCryptoException 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoRuntimeCryptoException 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoRuntimeCryptoException

#if !defined (OrgBouncycastleCryptoRuntimeCryptoException_) && (INCLUDE_ALL_OrgBouncycastleCryptoRuntimeCryptoException || defined(INCLUDE_OrgBouncycastleCryptoRuntimeCryptoException))
#define OrgBouncycastleCryptoRuntimeCryptoException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

/*!
 @brief the foundation class for the exceptions thrown by the crypto packages.
 */
@interface OrgBouncycastleCryptoRuntimeCryptoException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief base constructor.
 */
- (instancetype)init;

/*!
 @brief create a RuntimeCryptoException with the given message.
 @param message the message to be carried with the exception.
 */
- (instancetype)initWithNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoRuntimeCryptoException)

FOUNDATION_EXPORT void OrgBouncycastleCryptoRuntimeCryptoException_init(OrgBouncycastleCryptoRuntimeCryptoException *self);

FOUNDATION_EXPORT OrgBouncycastleCryptoRuntimeCryptoException *new_OrgBouncycastleCryptoRuntimeCryptoException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoRuntimeCryptoException *create_OrgBouncycastleCryptoRuntimeCryptoException_init(void);

FOUNDATION_EXPORT void OrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(OrgBouncycastleCryptoRuntimeCryptoException *self, NSString *message);

FOUNDATION_EXPORT OrgBouncycastleCryptoRuntimeCryptoException *new_OrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoRuntimeCryptoException *create_OrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoRuntimeCryptoException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoRuntimeCryptoException")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServicesRegistrar.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/SecurityManager.h"
#include "java/lang/System.h"
#include "java/lang/ThreadLocal.h"
#include "java/math/BigInteger.h"
#include "java/security/AccessController.h"
#include "java/security/Permission.h"
#include "java/security/PrivilegedAction.h"
#include "java/security/SecureRandom.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "java/util/logging/Logger.h"
#include "org/bouncycastle/asn1/x9/X9ECParameters.h"
#include "org/bouncycastle/crypto/CryptoServiceProperties.h"
#include "org/bouncycastle/crypto/CryptoServicesConstraints.h"
#include "org/bouncycastle/crypto/CryptoServicesPermission.h"
#include "org/bouncycastle/crypto/CryptoServicesRegistrar.h"
#include "org/bouncycastle/crypto/SecureRandomProvider.h"
#include "org/bouncycastle/crypto/params/DHParameters.h"
#include "org/bouncycastle/crypto/params/DHValidationParameters.h"
#include "org/bouncycastle/crypto/params/DSAParameters.h"
#include "org/bouncycastle/crypto/params/DSAValidationParameters.h"
#include "org/bouncycastle/util/Properties.h"
#include "org/bouncycastle/util/encoders/Hex.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/CryptoServicesRegistrar must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoCryptoServicesRegistrar ()

- (instancetype)init;

+ (IOSObjectArray *)lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property;

+ (void)localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property
                                                              withNSObjectArray:(IOSObjectArray *)propertyValue;

+ (void)localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property
                                                                      withNSObjectArray:(IOSObjectArray *)propertyValue;

+ (IOSObjectArray *)localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property;

+ (void)checkPermissionWithJavaSecurityPermission:(JavaSecurityPermission *)permission;

+ (OrgBouncycastleCryptoParamsDHParameters *)toDHWithOrgBouncycastleCryptoParamsDSAParameters:(OrgBouncycastleCryptoParamsDSAParameters *)dsaParams;

+ (jint)chooseLowerBoundWithInt:(jint)pSize;

+ (id<OrgBouncycastleCryptoCryptoServicesConstraints>)getDefaultConstraints;

@end

inline JavaUtilLoggingLogger *OrgBouncycastleCryptoCryptoServicesRegistrar_get_LOG(void);
static JavaUtilLoggingLogger *OrgBouncycastleCryptoCryptoServicesRegistrar_LOG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, LOG, JavaUtilLoggingLogger *)

inline JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_get_CanSetDefaultProperty(void);
static JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultProperty;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, CanSetDefaultProperty, JavaSecurityPermission *)

inline JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_get_CanSetThreadProperty(void);
static JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetThreadProperty;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, CanSetThreadProperty, JavaSecurityPermission *)

inline JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_get_CanSetDefaultRandom(void);
static JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultRandom;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, CanSetDefaultRandom, JavaSecurityPermission *)

inline JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_get_CanSetConstraints(void);
static JavaSecurityPermission *OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetConstraints;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, CanSetConstraints, JavaSecurityPermission *)

inline JavaLangThreadLocal *OrgBouncycastleCryptoCryptoServicesRegistrar_get_threadProperties(void);
static JavaLangThreadLocal *OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, threadProperties, JavaLangThreadLocal *)

inline id<JavaUtilMap> OrgBouncycastleCryptoCryptoServicesRegistrar_get_globalProperties(void);
static id<JavaUtilMap> OrgBouncycastleCryptoCryptoServicesRegistrar_globalProperties;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, globalProperties, id<JavaUtilMap>)

inline id<OrgBouncycastleCryptoSecureRandomProvider> OrgBouncycastleCryptoCryptoServicesRegistrar_get_defaultRandomProviderImpl(void);
static id<OrgBouncycastleCryptoSecureRandomProvider> OrgBouncycastleCryptoCryptoServicesRegistrar_defaultRandomProviderImpl;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, defaultRandomProviderImpl, id<OrgBouncycastleCryptoSecureRandomProvider>)

inline id<OrgBouncycastleCryptoCryptoServicesConstraints> OrgBouncycastleCryptoCryptoServicesRegistrar_get_noConstraintsImpl(void);
static id<OrgBouncycastleCryptoCryptoServicesConstraints> OrgBouncycastleCryptoCryptoServicesRegistrar_noConstraintsImpl;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, noConstraintsImpl, id<OrgBouncycastleCryptoCryptoServicesConstraints>)

inline JavaUtilConcurrentAtomicAtomicReference *OrgBouncycastleCryptoCryptoServicesRegistrar_get_defaultSecureRandomProvider(void);
static JavaUtilConcurrentAtomicAtomicReference *OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, defaultSecureRandomProvider, JavaUtilConcurrentAtomicAtomicReference *)

inline jboolean OrgBouncycastleCryptoCryptoServicesRegistrar_get_preconfiguredConstraints(void);
static jboolean OrgBouncycastleCryptoCryptoServicesRegistrar_preconfiguredConstraints;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, preconfiguredConstraints, jboolean)

inline JavaUtilConcurrentAtomicAtomicReference *OrgBouncycastleCryptoCryptoServicesRegistrar_get_servicesConstraints(void);
static JavaUtilConcurrentAtomicAtomicReference *OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleCryptoCryptoServicesRegistrar, servicesConstraints, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_init(OrgBouncycastleCryptoCryptoServicesRegistrar *self);

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar *new_OrgBouncycastleCryptoCryptoServicesRegistrar_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar *create_OrgBouncycastleCryptoCryptoServicesRegistrar_init(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleCryptoCryptoServicesRegistrar_lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property);

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property, IOSObjectArray *propertyValue);

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property, IOSObjectArray *propertyValue);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleCryptoCryptoServicesRegistrar_localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property);

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(JavaSecurityPermission *permission);

__attribute__((unused)) static OrgBouncycastleCryptoParamsDHParameters *OrgBouncycastleCryptoCryptoServicesRegistrar_toDHWithOrgBouncycastleCryptoParamsDSAParameters_(OrgBouncycastleCryptoParamsDSAParameters *dsaParams);

__attribute__((unused)) static jint OrgBouncycastleCryptoCryptoServicesRegistrar_chooseLowerBoundWithInt_(jint pSize);

__attribute__((unused)) static id<OrgBouncycastleCryptoCryptoServicesConstraints> OrgBouncycastleCryptoCryptoServicesRegistrar_getDefaultConstraints(void);

@interface OrgBouncycastleCryptoCryptoServicesRegistrar_1 : NSObject < OrgBouncycastleCryptoSecureRandomProvider >

- (instancetype)init;

- (JavaSecuritySecureRandom *)get;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoCryptoServicesRegistrar_1)

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_1_init(OrgBouncycastleCryptoCryptoServicesRegistrar_1 *self);

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_1 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_1 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_1_init(void);

@interface OrgBouncycastleCryptoCryptoServicesRegistrar_2 : NSObject < OrgBouncycastleCryptoCryptoServicesConstraints >

- (instancetype)init;

- (void)checkWithOrgBouncycastleCryptoCryptoServiceProperties:(id<OrgBouncycastleCryptoCryptoServiceProperties>)service;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoCryptoServicesRegistrar_2)

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_2_init(OrgBouncycastleCryptoCryptoServicesRegistrar_2 *self);

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_2 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_2 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_2_init(void);

@interface OrgBouncycastleCryptoCryptoServicesRegistrar_3 : NSObject < OrgBouncycastleCryptoSecureRandomProvider > {
 @public
  JavaSecuritySecureRandom *val$secureRandom_;
}

- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)capture$0;

- (JavaSecuritySecureRandom *)get;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoCryptoServicesRegistrar_3)

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(OrgBouncycastleCryptoCryptoServicesRegistrar_3 *self, JavaSecuritySecureRandom *capture$0);

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_3 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_3 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *capture$0);

@interface OrgBouncycastleCryptoCryptoServicesRegistrar_4 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  JavaLangSecurityManager *val$securityManager_;
  JavaSecurityPermission *val$permission_;
}

- (instancetype)initWithJavaLangSecurityManager:(JavaLangSecurityManager *)capture$0
                     withJavaSecurityPermission:(JavaSecurityPermission *)capture$1;

- (id)run;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoCryptoServicesRegistrar_4)

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_4 *self, JavaLangSecurityManager *capture$0, JavaSecurityPermission *capture$1);

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_4 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(JavaLangSecurityManager *capture$0, JavaSecurityPermission *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_4 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(JavaLangSecurityManager *capture$0, JavaSecurityPermission *capture$1);

@interface OrgBouncycastleCryptoCryptoServicesRegistrar_Property () {
 @public
  NSString *name_;
  IOSClass *type_;
}

- (instancetype)initWithNSString:(NSString *)name
                    withIOSClass:(IOSClass *)type;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoCryptoServicesRegistrar_Property, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoCryptoServicesRegistrar_Property, type_, IOSClass *)

__attribute__((unused)) static void OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *self, NSString *name, IOSClass *type);

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_Property *new_OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(NSString *name, IOSClass *type) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCryptoCryptoServicesRegistrar_Property *create_OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(NSString *name, IOSClass *type);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServicesRegistrar.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleCryptoCryptoServicesRegistrar)


#line 25
@implementation OrgBouncycastleCryptoCryptoServicesRegistrar

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 125
- (instancetype)init {
  OrgBouncycastleCryptoCryptoServicesRegistrar_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 135
+ (JavaSecuritySecureRandom *)getSecureRandom {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom();
}


#line 148
+ (JavaSecuritySecureRandom *)getSecureRandomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandomWithJavaSecuritySecureRandom_(secureRandom);
}


#line 158
+ (void)setSecureRandomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)secureRandom {
  OrgBouncycastleCryptoCryptoServicesRegistrar_setSecureRandomWithJavaSecuritySecureRandom_(secureRandom);
}


#line 184
+ (void)setSecureRandomProviderWithOrgBouncycastleCryptoSecureRandomProvider:(id<OrgBouncycastleCryptoSecureRandomProvider>)secureRandomProvider {
  OrgBouncycastleCryptoCryptoServicesRegistrar_setSecureRandomProviderWithOrgBouncycastleCryptoSecureRandomProvider_(secureRandomProvider);
}


#line 196
+ (id<OrgBouncycastleCryptoCryptoServicesConstraints>)getServicesConstraints {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_getServicesConstraints();
}


#line 207
+ (void)checkConstraintsWithOrgBouncycastleCryptoCryptoServiceProperties:(id<OrgBouncycastleCryptoCryptoServiceProperties>)cryptoService {
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkConstraintsWithOrgBouncycastleCryptoCryptoServiceProperties_(cryptoService);
}


#line 215
+ (void)setServicesConstraintsWithOrgBouncycastleCryptoCryptoServicesConstraints:(id<OrgBouncycastleCryptoCryptoServicesConstraints>)constraints {
  OrgBouncycastleCryptoCryptoServicesRegistrar_setServicesConstraintsWithOrgBouncycastleCryptoCryptoServicesConstraints_(constraints);
}


#line 239
+ (id)getPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_getPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
}


#line 251
+ (IOSObjectArray *)lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
}


#line 275
+ (IOSObjectArray *)getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
}


#line 296
+ (id)getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property
                                                                        withInt:(jint)size {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withInt_(property, size);
}


#line 340
+ (void)setThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property
                                                                 withNSObjectArray:(IOSObjectArray *)propertyValue {
  OrgBouncycastleCryptoCryptoServicesRegistrar_setThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(property, propertyValue);
}


#line 361
+ (void)setGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property
                                                                 withNSObjectArray:(IOSObjectArray *)propertyValue {
  OrgBouncycastleCryptoCryptoServicesRegistrar_setGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(property, propertyValue);
}


#line 368
+ (void)localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property
                                                              withNSObjectArray:(IOSObjectArray *)propertyValue {
  OrgBouncycastleCryptoCryptoServicesRegistrar_localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(property, propertyValue);
}


#line 381
+ (void)localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property
                                                                      withNSObjectArray:(IOSObjectArray *)propertyValue {
  OrgBouncycastleCryptoCryptoServicesRegistrar_localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(property, propertyValue);
}


#line 401
+ (IOSObjectArray *)clearGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_clearGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
}


#line 418
+ (IOSObjectArray *)clearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_clearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
}


#line 425
+ (IOSObjectArray *)localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *)property {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
}


#line 438
+ (void)checkPermissionWithJavaSecurityPermission:(JavaSecurityPermission *)permission {
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(permission);
}


#line 457
+ (OrgBouncycastleCryptoParamsDHParameters *)toDHWithOrgBouncycastleCryptoParamsDSAParameters:(OrgBouncycastleCryptoParamsDSAParameters *)dsaParams {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_toDHWithOrgBouncycastleCryptoParamsDSAParameters_(dsaParams);
}


#line 466
+ (jint)chooseLowerBoundWithInt:(jint)pSize {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_chooseLowerBoundWithInt_(pSize);
}


#line 491
+ (id<OrgBouncycastleCryptoCryptoServicesConstraints>)getDefaultConstraints {
  return OrgBouncycastleCryptoCryptoServicesRegistrar_getDefaultConstraints();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCryptoServicesConstraints;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 9, 10, -1, 11, -1, -1 },
    { NULL, "[LNSObject;", 0xa, 12, 10, -1, -1, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 13, 10, -1, 14, -1, -1 },
    { NULL, "LNSObject;", 0x9, 13, 15, -1, 16, -1, -1 },
    { NULL, "V", 0x89, 17, 18, -1, 19, -1, -1 },
    { NULL, "V", 0x89, 20, 18, -1, 19, -1, -1 },
    { NULL, "V", 0xa, 21, 18, -1, 19, -1, -1 },
    { NULL, "V", 0x8a, 22, 18, -1, 19, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 23, 10, -1, 14, -1, -1 },
    { NULL, "[LNSObject;", 0x9, 24, 10, -1, 14, -1, -1 },
    { NULL, "[LNSObject;", 0xa, 25, 10, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 26, 27, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsDHParameters;", 0xa, 28, 29, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 30, 31, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCryptoServicesConstraints;", 0xa, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getSecureRandom);
  methods[2].selector = @selector(getSecureRandomWithJavaSecuritySecureRandom:);
  methods[3].selector = @selector(setSecureRandomWithJavaSecuritySecureRandom:);
  methods[4].selector = @selector(setSecureRandomProviderWithOrgBouncycastleCryptoSecureRandomProvider:);
  methods[5].selector = @selector(getServicesConstraints);
  methods[6].selector = @selector(checkConstraintsWithOrgBouncycastleCryptoCryptoServiceProperties:);
  methods[7].selector = @selector(setServicesConstraintsWithOrgBouncycastleCryptoCryptoServicesConstraints:);
  methods[8].selector = @selector(getPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:);
  methods[9].selector = @selector(lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:);
  methods[10].selector = @selector(getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:);
  methods[11].selector = @selector(getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:withInt:);
  methods[12].selector = @selector(setThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:withNSObjectArray:);
  methods[13].selector = @selector(setGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:withNSObjectArray:);
  methods[14].selector = @selector(localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:withNSObjectArray:);
  methods[15].selector = @selector(localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:withNSObjectArray:);
  methods[16].selector = @selector(clearGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:);
  methods[17].selector = @selector(clearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:);
  methods[18].selector = @selector(localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property:);
  methods[19].selector = @selector(checkPermissionWithJavaSecurityPermission:);
  methods[20].selector = @selector(toDHWithOrgBouncycastleCryptoParamsDSAParameters:);
  methods[21].selector = @selector(chooseLowerBoundWithInt:);
  methods[22].selector = @selector(getDefaultConstraints);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOG", "LJavaUtilLoggingLogger;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "CanSetDefaultProperty", "LJavaSecurityPermission;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "CanSetThreadProperty", "LJavaSecurityPermission;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "CanSetDefaultRandom", "LJavaSecurityPermission;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "CanSetConstraints", "LJavaSecurityPermission;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "threadProperties", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x1a, -1, 37, 38, -1 },
    { "globalProperties", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 39, 40, -1 },
    { "defaultRandomProviderImpl", "LOrgBouncycastleCryptoSecureRandomProvider;", .constantValue.asLong = 0, 0x1a, -1, 41, -1, -1 },
    { "noConstraintsImpl", "LOrgBouncycastleCryptoCryptoServicesConstraints;", .constantValue.asLong = 0, 0x1a, -1, 42, -1, -1 },
    { "defaultSecureRandomProvider", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1a, -1, 43, 44, -1 },
    { "preconfiguredConstraints", "Z", .constantValue.asLong = 0, 0x1a, -1, 45, -1, -1 },
    { "servicesConstraints", "LJavaUtilConcurrentAtomicAtomicReference;", .constantValue.asLong = 0, 0x1a, -1, 46, 47, -1 },
  };
  static const void *ptrTable[] = { "getSecureRandom", "LJavaSecuritySecureRandom;", "setSecureRandom", "setSecureRandomProvider", "LOrgBouncycastleCryptoSecureRandomProvider;", "checkConstraints", "LOrgBouncycastleCryptoCryptoServiceProperties;", "setServicesConstraints", "LOrgBouncycastleCryptoCryptoServicesConstraints;", "getProperty", "LOrgBouncycastleCryptoCryptoServicesRegistrar_Property;", "<T:Ljava/lang/Object;>(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)TT;", "lookupProperty", "getSizedProperty", "<T:Ljava/lang/Object;>(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;)[TT;", "LOrgBouncycastleCryptoCryptoServicesRegistrar_Property;I", "<T:Ljava/lang/Object;>(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;I)TT;", "setThreadProperty", "LOrgBouncycastleCryptoCryptoServicesRegistrar_Property;[LNSObject;", "<T:Ljava/lang/Object;>(Lorg/bouncycastle/crypto/CryptoServicesRegistrar$Property;[TT;)V", "setGlobalProperty", "localSetThread", "localSetGlobalProperty", "clearGlobalProperty", "clearThreadProperty", "localClearThreadProperty", "checkPermission", "LJavaSecurityPermission;", "toDH", "LOrgBouncycastleCryptoParamsDSAParameters;", "chooseLowerBound", "I", &OrgBouncycastleCryptoCryptoServicesRegistrar_LOG, &OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultProperty, &OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetThreadProperty, &OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultRandom, &OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetConstraints, &OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties, "Ljava/lang/ThreadLocal<Ljava/util/Map<Ljava/lang/String;[Ljava/lang/Object;>;>;", &OrgBouncycastleCryptoCryptoServicesRegistrar_globalProperties, "Ljava/util/Map<Ljava/lang/String;[Ljava/lang/Object;>;", &OrgBouncycastleCryptoCryptoServicesRegistrar_defaultRandomProviderImpl, &OrgBouncycastleCryptoCryptoServicesRegistrar_noConstraintsImpl, &OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider, "Ljava/util/concurrent/atomic/AtomicReference<Lorg/bouncycastle/crypto/SecureRandomProvider;>;", &OrgBouncycastleCryptoCryptoServicesRegistrar_preconfiguredConstraints, &OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints, "Ljava/util/concurrent/atomic/AtomicReference<Lorg/bouncycastle/crypto/CryptoServicesConstraints;>;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoCryptoServicesRegistrar = { "CryptoServicesRegistrar", "org.bouncycastle.crypto", ptrTable, methods, fields, 7, 0x11, 23, 12, -1, 10, -1, -1, -1 };
  return &_OrgBouncycastleCryptoCryptoServicesRegistrar;
}

+ (void)initialize {
  if (self == [OrgBouncycastleCryptoCryptoServicesRegistrar class]) {
    OrgBouncycastleCryptoCryptoServicesRegistrar_LOG = JavaUtilLoggingLogger_getLoggerWithNSString_(
#line 27
    [OrgBouncycastleCryptoCryptoServicesRegistrar_class_() getName]);
    OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultProperty = new_OrgBouncycastleCryptoCryptoServicesPermission_initWithNSString_(
#line 29
    OrgBouncycastleCryptoCryptoServicesPermission_GLOBAL_CONFIG);
    OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetThreadProperty = new_OrgBouncycastleCryptoCryptoServicesPermission_initWithNSString_(
#line 30
    OrgBouncycastleCryptoCryptoServicesPermission_THREAD_LOCAL_CONFIG);
    OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultRandom = new_OrgBouncycastleCryptoCryptoServicesPermission_initWithNSString_(
#line 31
    OrgBouncycastleCryptoCryptoServicesPermission_DEFAULT_RANDOM);
    OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetConstraints = new_OrgBouncycastleCryptoCryptoServicesPermission_initWithNSString_(
#line 32
    OrgBouncycastleCryptoCryptoServicesPermission_CONSTRAINTS);
    OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties = new_JavaLangThreadLocal_init();
    OrgBouncycastleCryptoCryptoServicesRegistrar_globalProperties = JavaUtilCollections_synchronizedMapWithJavaUtilMap_(new_JavaUtilHashMap_init());
    OrgBouncycastleCryptoCryptoServicesRegistrar_defaultRandomProviderImpl = new_OrgBouncycastleCryptoCryptoServicesRegistrar_1_init();
    OrgBouncycastleCryptoCryptoServicesRegistrar_noConstraintsImpl = new_OrgBouncycastleCryptoCryptoServicesRegistrar_2_init();
    OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider = new_JavaUtilConcurrentAtomicAtomicReference_init();
    OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints = new_JavaUtilConcurrentAtomicAtomicReference_init();
    {
      
#line 62
      OrgBouncycastleCryptoParamsDSAParameters *def512Params = new_OrgBouncycastleCryptoParamsDSAParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleCryptoParamsDSAValidationParameters_(new_JavaMathBigInteger_initWithNSString_withInt_(
#line 63
      @"fca682ce8e12caba26efccf7110e526db078b05edecbcd1eb4a208f3ae1617ae01f35b91a47e6df63413c5e12ed0899bcd132acd50d99151bdc43ee737592e17", 16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 64
      @"962eddcc369cba8ebb260ee6b6a126d9346e38c5", 16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 65
      @"678471b27a9cf44ee91a49c5147db1a9aaf244f05a434d6486931d2d14271b9e35030b71fd73da179069b32e2935630e1c2062354d0da20a6c416e50be794ca4", 16), new_OrgBouncycastleCryptoParamsDSAValidationParameters_initWithByteArray_withInt_(OrgBouncycastleUtilEncodersHex_decodeStrictWithNSString_(
#line 66
      @"b869c82b35d70e1b1ff91b28e37a62ecdc34409b"), 123));
      
#line 68
      OrgBouncycastleCryptoParamsDSAParameters *def768Params = new_OrgBouncycastleCryptoParamsDSAParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleCryptoParamsDSAValidationParameters_(new_JavaMathBigInteger_initWithNSString_withInt_(
#line 69
      @"e9e642599d355f37c97ffd3567120b8e25c9cd43e927b3a9670fbec5d890141922d2c3b3ad2480093799869d1e846aab49fab0ad26d2ce6a22219d470bce7d777d4a21fbe9c270b57f607002f3cef8393694cf45ee3688c11a8c56ab127a3daf",
#line 72
      16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 73
      @"9cdbd84c9f1ac2f38d0f80f42ab952e7338bf511", 16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 74
      @"30470ad5a005fb14ce2d9dcd87e38bc7d1b1c5facbaecbe95f190aa7a31d23c4dbbcbe06174544401a5b2c020965d8c2bd2171d3668445771f74ba084d2029d83c1c158547f3a9f1a2715be23d51ae4d3e5a1f6a7064f316933a346d3f529252",
#line 77
      16), new_OrgBouncycastleCryptoParamsDSAValidationParameters_initWithByteArray_withInt_(OrgBouncycastleUtilEncodersHex_decodeStrictWithNSString_(
#line 78
      @"77d0f8c4dad15eb8c4f2f8d6726cefd96d5bb399"), 263));
      
#line 80
      OrgBouncycastleCryptoParamsDSAParameters *def1024Params = new_OrgBouncycastleCryptoParamsDSAParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleCryptoParamsDSAValidationParameters_(new_JavaMathBigInteger_initWithNSString_withInt_(
#line 81
      @"fd7f53811d75122952df4a9c2eece4e7f611b7523cef4400c31e3f80b6512669455d402251fb593d8d58fabfc5f5ba30f6cb9b556cd7813b801d346ff26660b76b9950a5a49f9fe8047b1022c24fbba9d7feb7c61bf83b57e7c6a8a6150f04fb83f6d3c51ec3023554135a169132f675f3ae2b61d72aeff22203199dd14801c7",
#line 85
      16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 86
      @"9760508f15230bccb292b982a2eb840bf0581cf5", 16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 87
      @"f7e1a085d69b3ddecbbcab5c36b857b97994afbbfa3aea82f9574c0b3d0782675159578ebad4594fe67107108180b449167123e84c281613b7cf09328cc8a6e13c167a8b547c8d28e0a3ae1e2bb3a675916ea37f0bfa213562f1fb627a01243bcca4f1bea8519089a883dfe15ae59f06928b665e807b552564014c3bfecf492a",
#line 91
      16), new_OrgBouncycastleCryptoParamsDSAValidationParameters_initWithByteArray_withInt_(OrgBouncycastleUtilEncodersHex_decodeStrictWithNSString_(
#line 92
      @"8d5155894229d5e689ee01e6018a237e2cae64cd"), 92));
      
#line 94
      OrgBouncycastleCryptoParamsDSAParameters *def2048Params = new_OrgBouncycastleCryptoParamsDSAParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleCryptoParamsDSAValidationParameters_(new_JavaMathBigInteger_initWithNSString_withInt_(
#line 95
      @"95475cf5d93e596c3fcd1d902add02f427f5f3c7210313bb45fb4d5bb2e5fe1cbd678cd4bbdd84c9836be1f31c0777725aeb6c2fc38b85f48076fa76bcd8146cc89a6fb2f706dd719898c2083dc8d896f84062e2c9c94d137b054a8d8096adb8d51952398eeca852a0af12df83e475aa65d4ec0c38a9560d5661186ff98b9fc9eb60eee8b030376b236bc73be3acdbd74fd61c1d2475fa3077b8f080467881ff7e1ca56fee066d79506ade51edbb5443a563927dbc4ba520086746175c8885925ebc64c6147906773496990cb714ec667304e261faee33b3cbdf008e0c3fa90650d97d3909c9275bf4ac86ffcb3d03e6dfc8ada5934242dd6d3bcca2a406cb0b",
#line 104
      16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 105
      @"f8183668ba5fc5bb06b5981e6d8b795d30b8978d43ca0ec572e37e09939a9773", 16), new_JavaMathBigInteger_initWithNSString_withInt_(
#line 106
      @"42debb9da5b3d88cc956e08787ec3f3a09bba5f48b889a74aaf53174aa0fbe7e3c5b8fcd7a53bef563b0e98560328960a9517f4014d3325fc7962bf1e049370d76d1314a76137e792f3f0db859d095e4a5b932024f079ecf2ef09c797452b0770e1350782ed57ddf794979dcef23cb96f183061965c4ebc93c9c71c56b925955a75f94cccf1449ac43d586d0beee43251b0b2287349d68de0d144403f13e802f4146d882e057af19b6f6275c6676c8fa0e3ca2713a3257fd1b27d0639f695e347d8d1cf9ac819a26ca9b04cb0eb9b7b035988d15bbac65212a55239cfc7e58fae38d7250ab9991ffbc97134025fe8ce04c4399ad96569be91a546f4978693c7a",
#line 115
      16), new_OrgBouncycastleCryptoParamsDSAValidationParameters_initWithByteArray_withInt_(OrgBouncycastleUtilEncodersHex_decodeStrictWithNSString_(
#line 116
      @"b0b4417601b59cbc9d8ac8f935cadaec4f5fbb2f23785609ae466748d9b5a536"), 497));
      
#line 118
      OrgBouncycastleCryptoCryptoServicesRegistrar_localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(JreLoadStatic(OrgBouncycastleCryptoCryptoServicesRegistrar_Property, DSA_DEFAULT_PARAMS), [IOSObjectArray newArrayWithObjects:(id[]){ def512Params, def768Params, def1024Params, def2048Params } count:4 type:OrgBouncycastleCryptoParamsDSAParameters_class_()]);
      OrgBouncycastleCryptoCryptoServicesRegistrar_localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(JreLoadStatic(OrgBouncycastleCryptoCryptoServicesRegistrar_Property, DH_DEFAULT_PARAMS), [IOSObjectArray newArrayWithObjects:(id[]){ OrgBouncycastleCryptoCryptoServicesRegistrar_toDHWithOrgBouncycastleCryptoParamsDSAParameters_(def512Params), OrgBouncycastleCryptoCryptoServicesRegistrar_toDHWithOrgBouncycastleCryptoParamsDSAParameters_(def768Params), OrgBouncycastleCryptoCryptoServicesRegistrar_toDHWithOrgBouncycastleCryptoParamsDSAParameters_(def1024Params), OrgBouncycastleCryptoCryptoServicesRegistrar_toDHWithOrgBouncycastleCryptoParamsDSAParameters_(def2048Params) } count:4 type:OrgBouncycastleCryptoParamsDHParameters_class_()]);
      
#line 121
      [OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints setWithId:OrgBouncycastleCryptoCryptoServicesRegistrar_getDefaultConstraints()];
      OrgBouncycastleCryptoCryptoServicesRegistrar_preconfiguredConstraints = !JreObjectEqualsEquals([OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints get], OrgBouncycastleCryptoCryptoServicesRegistrar_noConstraintsImpl);
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastleCryptoCryptoServicesRegistrar)
  }
}

@end


#line 125
void OrgBouncycastleCryptoCryptoServicesRegistrar_init(OrgBouncycastleCryptoCryptoServicesRegistrar *self) {
  NSObject_init(self);
}


#line 125
OrgBouncycastleCryptoCryptoServicesRegistrar *new_OrgBouncycastleCryptoCryptoServicesRegistrar_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar, init)
}


#line 125
OrgBouncycastleCryptoCryptoServicesRegistrar *create_OrgBouncycastleCryptoCryptoServicesRegistrar_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar, init)
}


#line 135
JavaSecuritySecureRandom *OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom() {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider)) compareAndSetWithId:nil withId:OrgBouncycastleCryptoCryptoServicesRegistrar_defaultRandomProviderImpl];
  
#line 139
  return [((id<OrgBouncycastleCryptoSecureRandomProvider>) nil_chk([OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider get])) get];
}


#line 148
JavaSecuritySecureRandom *OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandomWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *secureRandom) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  return nil == secureRandom ? OrgBouncycastleCryptoCryptoServicesRegistrar_getSecureRandom() : secureRandom;
}


#line 158
void OrgBouncycastleCryptoCryptoServicesRegistrar_setSecureRandomWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *secureRandom) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultRandom);
  
#line 162
  if (secureRandom == nil) {
    
#line 164
    [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider)) setWithId:OrgBouncycastleCryptoCryptoServicesRegistrar_defaultRandomProviderImpl];
  }
  else {
    
#line 168
    [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider)) setWithId:new_OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(secureRandom)];
  }
}


#line 184
void OrgBouncycastleCryptoCryptoServicesRegistrar_setSecureRandomProviderWithOrgBouncycastleCryptoSecureRandomProvider_(id<OrgBouncycastleCryptoSecureRandomProvider> secureRandomProvider) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultRandom);
  
#line 188
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_defaultSecureRandomProvider)) setWithId:secureRandomProvider];
}


#line 196
id<OrgBouncycastleCryptoCryptoServicesConstraints> OrgBouncycastleCryptoCryptoServicesRegistrar_getServicesConstraints() {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  return [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints)) get];
}


#line 207
void OrgBouncycastleCryptoCryptoServicesRegistrar_checkConstraintsWithOrgBouncycastleCryptoCryptoServiceProperties_(id<OrgBouncycastleCryptoCryptoServiceProperties> cryptoService) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  [((id<OrgBouncycastleCryptoCryptoServicesConstraints>) nil_chk([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints)) get])) checkWithOrgBouncycastleCryptoCryptoServiceProperties:cryptoService];
}


#line 215
void OrgBouncycastleCryptoCryptoServicesRegistrar_setServicesConstraintsWithOrgBouncycastleCryptoCryptoServicesConstraints_(id<OrgBouncycastleCryptoCryptoServicesConstraints> constraints) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetConstraints);
  
#line 219
  id<OrgBouncycastleCryptoCryptoServicesConstraints> newConstraints = constraints == nil ? OrgBouncycastleCryptoCryptoServicesRegistrar_noConstraintsImpl : constraints;
  
#line 221
  if (!OrgBouncycastleCryptoCryptoServicesRegistrar_preconfiguredConstraints || OrgBouncycastleUtilProperties_isOverrideSetWithNSString_(@"org.bouncycastle.constraints.allow_override")) {
    
#line 223
    [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_servicesConstraints)) setWithId:newConstraints];
  }
  else {
    
#line 227
    [((JavaUtilLoggingLogger *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_LOG)) warningWithNSString:@"attempt to override pre-configured constraints ignored"];
  }
}


#line 239
id OrgBouncycastleCryptoCryptoServicesRegistrar_getPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  IOSObjectArray *values = OrgBouncycastleCryptoCryptoServicesRegistrar_lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
  
#line 243
  if (values != nil) {
    
#line 245
    return IOSObjectArray_Get(values, 0);
  }
  
#line 248
  return nil;
}


#line 251
IOSObjectArray *OrgBouncycastleCryptoCryptoServicesRegistrar_lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  id<JavaUtilMap> properties = [((JavaLangThreadLocal *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties)) get];
  IOSObjectArray *values;
  
#line 256
  if (properties == nil || ![properties containsKeyWithId:((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->name_]) {
    
#line 258
    values = [((id<JavaUtilMap>) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_globalProperties)) getWithId:((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->name_];
  }
  else {
    
#line 262
    values = [properties getWithId:((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->name_];
  }
  return values;
}


#line 275
IOSObjectArray *OrgBouncycastleCryptoCryptoServicesRegistrar_getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  IOSObjectArray *values = OrgBouncycastleCryptoCryptoServicesRegistrar_lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
  
#line 279
  if (values == nil) {
    
#line 281
    return nil;
  }
  
#line 284
  return [values java_clone];
}


#line 296
id OrgBouncycastleCryptoCryptoServicesRegistrar_getSizedPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withInt_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property, jint size) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  IOSObjectArray *values = OrgBouncycastleCryptoCryptoServicesRegistrar_lookupPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
  
#line 300
  if (values == nil) {
    
#line 302
    return nil;
  }
  
#line 305
  if ([((IOSClass *) nil_chk(((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->type_)) isAssignableFrom:OrgBouncycastleCryptoParamsDHParameters_class_()]) {
    {
      IOSObjectArray *a__ = values;
      id const *b__ = a__->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id value = *b__++;
        
#line 308
        OrgBouncycastleCryptoParamsDHParameters *params = (OrgBouncycastleCryptoParamsDHParameters *) cast_chk(value, [OrgBouncycastleCryptoParamsDHParameters class]);
        
#line 310
        if ([((JavaMathBigInteger *) nil_chk([((OrgBouncycastleCryptoParamsDHParameters *) nil_chk(params)) getP])) bitLength] == size) {
          
#line 312
          return params;
        }
      }
    }
  }
  else
#line 316
  if ([property->type_ isAssignableFrom:OrgBouncycastleCryptoParamsDSAParameters_class_()]) {
    {
      IOSObjectArray *a__ = values;
      id const *b__ = a__->buffer_;
      id const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        id value = *b__++;
        
#line 319
        OrgBouncycastleCryptoParamsDSAParameters *params = (OrgBouncycastleCryptoParamsDSAParameters *) cast_chk(value, [OrgBouncycastleCryptoParamsDSAParameters class]);
        
#line 321
        if ([((JavaMathBigInteger *) nil_chk([((OrgBouncycastleCryptoParamsDSAParameters *) nil_chk(params)) getP])) bitLength] == size) {
          
#line 323
          return params;
        }
      }
    }
  }
  return nil;
}


#line 340
void OrgBouncycastleCryptoCryptoServicesRegistrar_setThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property, IOSObjectArray *propertyValue) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetThreadProperty);
  
#line 344
  if (![((IOSClass *) nil_chk(((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->type_)) isAssignableFrom:[nil_chk(IOSObjectArray_Get(nil_chk(propertyValue), 0)) java_getClass]]) {
    
#line 346
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Bad property value passed");
  }
  
#line 349
  OrgBouncycastleCryptoCryptoServicesRegistrar_localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(property, [propertyValue java_clone]);
}


#line 361
void OrgBouncycastleCryptoCryptoServicesRegistrar_setGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property, IOSObjectArray *propertyValue) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultProperty);
  
#line 365
  OrgBouncycastleCryptoCryptoServicesRegistrar_localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(property, [((IOSObjectArray *) nil_chk(propertyValue)) java_clone]);
}


#line 368
void OrgBouncycastleCryptoCryptoServicesRegistrar_localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property, IOSObjectArray *propertyValue) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  id<JavaUtilMap> properties = [((JavaLangThreadLocal *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties)) get];
  
#line 372
  if (properties == nil) {
    
#line 374
    properties = new_JavaUtilHashMap_init();
    [OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties setWithId:properties];
  }
  
#line 378
  (void) [properties putWithId:((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->name_ withId:propertyValue];
}


#line 381
void OrgBouncycastleCryptoCryptoServicesRegistrar_localSetGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property, IOSObjectArray *propertyValue) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  if (![((IOSClass *) nil_chk(((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->type_)) isAssignableFrom:[nil_chk(IOSObjectArray_Get(nil_chk(propertyValue), 0)) java_getClass]]) {
    
#line 385
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Bad property value passed");
  }
  
#line 389
  OrgBouncycastleCryptoCryptoServicesRegistrar_localSetThreadWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_withNSObjectArray_(property, propertyValue);
  
#line 391
  (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_globalProperties)) putWithId:property->name_ withId:propertyValue];
}


#line 401
IOSObjectArray *OrgBouncycastleCryptoCryptoServicesRegistrar_clearGlobalPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetDefaultProperty);
  
#line 406
  (void) OrgBouncycastleCryptoCryptoServicesRegistrar_localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
  
#line 408
  return [((id<JavaUtilMap>) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_globalProperties)) removeWithId:((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->name_];
}


#line 418
IOSObjectArray *OrgBouncycastleCryptoCryptoServicesRegistrar_clearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_CanSetThreadProperty);
  
#line 422
  return OrgBouncycastleCryptoCryptoServicesRegistrar_localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(property);
}


#line 425
IOSObjectArray *OrgBouncycastleCryptoCryptoServicesRegistrar_localClearThreadPropertyWithOrgBouncycastleCryptoCryptoServicesRegistrar_Property_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *property) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  id<JavaUtilMap> properties = [((JavaLangThreadLocal *) nil_chk(OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties)) get];
  
#line 429
  if (properties == nil) {
    
#line 431
    properties = new_JavaUtilHashMap_init();
    [OrgBouncycastleCryptoCryptoServicesRegistrar_threadProperties setWithId:properties];
  }
  
#line 435
  return [properties removeWithId:((OrgBouncycastleCryptoCryptoServicesRegistrar_Property *) nil_chk(property))->name_];
}


#line 438
void OrgBouncycastleCryptoCryptoServicesRegistrar_checkPermissionWithJavaSecurityPermission_(JavaSecurityPermission *permission) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  JavaLangSecurityManager *securityManager = JavaLangSystem_getSecurityManager();
  
#line 442
  if (securityManager != nil) {
    
#line 444
    (void) JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(securityManager, permission));
  }
}


#line 457
OrgBouncycastleCryptoParamsDHParameters *OrgBouncycastleCryptoCryptoServicesRegistrar_toDHWithOrgBouncycastleCryptoParamsDSAParameters_(OrgBouncycastleCryptoParamsDSAParameters *dsaParams) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  jint pSize = [((JavaMathBigInteger *) nil_chk([((OrgBouncycastleCryptoParamsDSAParameters *) nil_chk(dsaParams)) getP])) bitLength];
  jint m = OrgBouncycastleCryptoCryptoServicesRegistrar_chooseLowerBoundWithInt_(pSize);
  return new_OrgBouncycastleCryptoParamsDHParameters_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withInt_withInt_withJavaMathBigInteger_withOrgBouncycastleCryptoParamsDHValidationParameters_([dsaParams getP], [dsaParams getG], [dsaParams getQ], m, 0, nil, new_OrgBouncycastleCryptoParamsDHValidationParameters_initWithByteArray_withInt_(
#line 462
  [((OrgBouncycastleCryptoParamsDSAValidationParameters *) nil_chk([dsaParams getValidationParameters])) getSeed], [((OrgBouncycastleCryptoParamsDSAValidationParameters *) nil_chk([dsaParams getValidationParameters])) getCounter]));
}

jint OrgBouncycastleCryptoCryptoServicesRegistrar_chooseLowerBoundWithInt_(jint pSize) {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  jint m = 160;
  if (pSize > 1024) {
    
#line 471
    if (pSize <= 2048) {
      
#line 473
      m = 224;
    }
    else if (pSize <= 3072) {
      
#line 477
      m = 256;
    }
    else if (pSize <= 7680) {
      
#line 481
      m = 384;
    }
    else {
      
#line 485
      m = 512;
    }
  }
  return m;
}


#line 491
id<OrgBouncycastleCryptoCryptoServicesConstraints> OrgBouncycastleCryptoCryptoServicesRegistrar_getDefaultConstraints() {
  OrgBouncycastleCryptoCryptoServicesRegistrar_initialize();
  
#line 495
  return OrgBouncycastleCryptoCryptoServicesRegistrar_noConstraintsImpl;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoCryptoServicesRegistrar)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServicesRegistrar.java"


#line 37
@implementation OrgBouncycastleCryptoCryptoServicesRegistrar_1

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 37
- (instancetype)init {
  OrgBouncycastleCryptoCryptoServicesRegistrar_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 38
- (JavaSecuritySecureRandom *)get {
  
#line 41
  return new_JavaSecuritySecureRandom_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgBouncycastleCryptoCryptoServicesRegistrar;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoCryptoServicesRegistrar_1 = { "", "org.bouncycastle.crypto", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 0, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoCryptoServicesRegistrar_1;
}

@end


#line 37
void OrgBouncycastleCryptoCryptoServicesRegistrar_1_init(OrgBouncycastleCryptoCryptoServicesRegistrar_1 *self) {
  NSObject_init(self);
}


#line 37
OrgBouncycastleCryptoCryptoServicesRegistrar_1 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_1_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_1, init)
}


#line 37
OrgBouncycastleCryptoCryptoServicesRegistrar_1 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_1_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_1, init)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServicesRegistrar.java"


#line 46
@implementation OrgBouncycastleCryptoCryptoServicesRegistrar_2

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 46
- (instancetype)init {
  OrgBouncycastleCryptoCryptoServicesRegistrar_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 47
- (void)checkWithOrgBouncycastleCryptoCryptoServiceProperties:(id<OrgBouncycastleCryptoCryptoServiceProperties>)service {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(checkWithOrgBouncycastleCryptoCryptoServiceProperties:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "check", "LOrgBouncycastleCryptoCryptoServiceProperties;", "LOrgBouncycastleCryptoCryptoServicesRegistrar;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoCryptoServicesRegistrar_2 = { "", "org.bouncycastle.crypto", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 2, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoCryptoServicesRegistrar_2;
}

@end


#line 46
void OrgBouncycastleCryptoCryptoServicesRegistrar_2_init(OrgBouncycastleCryptoCryptoServicesRegistrar_2 *self) {
  NSObject_init(self);
}


#line 46
OrgBouncycastleCryptoCryptoServicesRegistrar_2 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_2_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_2, init)
}


#line 46
OrgBouncycastleCryptoCryptoServicesRegistrar_2 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_2_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_2, init)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServicesRegistrar.java"


#line 169
@implementation OrgBouncycastleCryptoCryptoServicesRegistrar_3


#line 169
- (instancetype)initWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)capture$0 {
  OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(self, capture$0);
  return self;
}


#line 170
- (JavaSecuritySecureRandom *)get {
  
#line 173
  return JreRetainedLocalValue(val$secureRandom_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySecureRandom;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySecureRandom:);
  methods[1].selector = @selector(get);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$secureRandom_", "LJavaSecuritySecureRandom;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecuritySecureRandom;", "LOrgBouncycastleCryptoCryptoServicesRegistrar;", "setSecureRandomWithJavaSecuritySecureRandom:" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoCryptoServicesRegistrar_3 = { "", "org.bouncycastle.crypto", ptrTable, methods, fields, 7, 0x8000, 2, 1, 1, -1, 2, -1, -1 };
  return &_OrgBouncycastleCryptoCryptoServicesRegistrar_3;
}

@end


#line 169
void OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(OrgBouncycastleCryptoCryptoServicesRegistrar_3 *self, JavaSecuritySecureRandom *capture$0) {
  self->val$secureRandom_ = capture$0;
  NSObject_init(self);
}


#line 169
OrgBouncycastleCryptoCryptoServicesRegistrar_3 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *capture$0) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_3, initWithJavaSecuritySecureRandom_, capture$0)
}


#line 169
OrgBouncycastleCryptoCryptoServicesRegistrar_3 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_3_initWithJavaSecuritySecureRandom_(JavaSecuritySecureRandom *capture$0) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_3, initWithJavaSecuritySecureRandom_, capture$0)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServicesRegistrar.java"


#line 445
@implementation OrgBouncycastleCryptoCryptoServicesRegistrar_4


#line 445
- (instancetype)initWithJavaLangSecurityManager:(JavaLangSecurityManager *)capture$0
                     withJavaSecurityPermission:(JavaSecurityPermission *)capture$1 {
  OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(self, capture$0, capture$1);
  return self;
}


#line 446
- (id)run {
  
#line 449
  [((JavaLangSecurityManager *) nil_chk(val$securityManager_)) checkPermissionWithJavaSecurityPermission:val$permission_];
  
#line 451
  return JreRetainedLocalValue(nil);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangSecurityManager:withJavaSecurityPermission:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$securityManager_", "LJavaLangSecurityManager;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$permission_", "LJavaSecurityPermission;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangSecurityManager;LJavaSecurityPermission;", "LOrgBouncycastleCryptoCryptoServicesRegistrar;", "checkPermissionWithJavaSecurityPermission:", "Ljava/lang/Object;Ljava/security/PrivilegedAction<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoCryptoServicesRegistrar_4 = { "", "org.bouncycastle.crypto", ptrTable, methods, fields, 7, 0x8000, 2, 2, 1, -1, 2, 3, -1 };
  return &_OrgBouncycastleCryptoCryptoServicesRegistrar_4;
}

@end


#line 445
void OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(OrgBouncycastleCryptoCryptoServicesRegistrar_4 *self, JavaLangSecurityManager *capture$0, JavaSecurityPermission *capture$1) {
  self->val$securityManager_ = capture$0;
  self->val$permission_ = capture$1;
  NSObject_init(self);
}


#line 445
OrgBouncycastleCryptoCryptoServicesRegistrar_4 *new_OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(JavaLangSecurityManager *capture$0, JavaSecurityPermission *capture$1) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_4, initWithJavaLangSecurityManager_withJavaSecurityPermission_, capture$0, capture$1)
}


#line 445
OrgBouncycastleCryptoCryptoServicesRegistrar_4 *create_OrgBouncycastleCryptoCryptoServicesRegistrar_4_initWithJavaLangSecurityManager_withJavaSecurityPermission_(JavaLangSecurityManager *capture$0, JavaSecurityPermission *capture$1) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_4, initWithJavaLangSecurityManager_withJavaSecurityPermission_, capture$0, capture$1)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServicesRegistrar.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleCryptoCryptoServicesRegistrar_Property)

OrgBouncycastleCryptoCryptoServicesRegistrar_Property *OrgBouncycastleCryptoCryptoServicesRegistrar_Property_EC_IMPLICITLY_CA;
OrgBouncycastleCryptoCryptoServicesRegistrar_Property *OrgBouncycastleCryptoCryptoServicesRegistrar_Property_DH_DEFAULT_PARAMS;
OrgBouncycastleCryptoCryptoServicesRegistrar_Property *OrgBouncycastleCryptoCryptoServicesRegistrar_Property_DSA_DEFAULT_PARAMS;


#line 501
@implementation OrgBouncycastleCryptoCryptoServicesRegistrar_Property


#line 518
- (instancetype)initWithNSString:(NSString *)name
                    withIOSClass:(IOSClass *)type {
  OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(self, name, type);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EC_IMPLICITLY_CA", "LOrgBouncycastleCryptoCryptoServicesRegistrar_Property;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "DH_DEFAULT_PARAMS", "LOrgBouncycastleCryptoCryptoServicesRegistrar_Property;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "DSA_DEFAULT_PARAMS", "LOrgBouncycastleCryptoCryptoServicesRegistrar_Property;", .constantValue.asLong = 0, 0x19, -1, 3, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "type_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LIOSClass;", &OrgBouncycastleCryptoCryptoServicesRegistrar_Property_EC_IMPLICITLY_CA, &OrgBouncycastleCryptoCryptoServicesRegistrar_Property_DH_DEFAULT_PARAMS, &OrgBouncycastleCryptoCryptoServicesRegistrar_Property_DSA_DEFAULT_PARAMS, "LOrgBouncycastleCryptoCryptoServicesRegistrar;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoCryptoServicesRegistrar_Property = { "Property", "org.bouncycastle.crypto", ptrTable, methods, fields, 7, 0x19, 1, 5, 4, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoCryptoServicesRegistrar_Property;
}

+ (void)initialize {
  if (self == [OrgBouncycastleCryptoCryptoServicesRegistrar_Property class]) {
    OrgBouncycastleCryptoCryptoServicesRegistrar_Property_EC_IMPLICITLY_CA = new_OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(
#line 506
    @"ecImplicitlyCA", OrgBouncycastleAsn1X9X9ECParameters_class_());
    OrgBouncycastleCryptoCryptoServicesRegistrar_Property_DH_DEFAULT_PARAMS = new_OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(
#line 510
    @"dhDefaultParams", OrgBouncycastleCryptoParamsDHParameters_class_());
    OrgBouncycastleCryptoCryptoServicesRegistrar_Property_DSA_DEFAULT_PARAMS = new_OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(
#line 514
    @"dsaDefaultParams", OrgBouncycastleCryptoParamsDSAParameters_class_());
    J2OBJC_SET_INITIALIZED(OrgBouncycastleCryptoCryptoServicesRegistrar_Property)
  }
}

@end


#line 518
void OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(OrgBouncycastleCryptoCryptoServicesRegistrar_Property *self, NSString *name, IOSClass *type) {
  NSObject_init(self);
  self->name_ = name;
  self->type_ = type;
}


#line 518
OrgBouncycastleCryptoCryptoServicesRegistrar_Property *new_OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(NSString *name, IOSClass *type) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_Property, initWithNSString_withIOSClass_, name, type)
}


#line 518
OrgBouncycastleCryptoCryptoServicesRegistrar_Property *create_OrgBouncycastleCryptoCryptoServicesRegistrar_Property_initWithNSString_withIOSClass_(NSString *name, IOSClass *type) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoCryptoServicesRegistrar_Property, initWithNSString_withIOSClass_, name, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoCryptoServicesRegistrar_Property)

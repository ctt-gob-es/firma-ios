//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/agreement/kdf/DHKEKGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator")
#ifdef RESTRICT_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator
#define INCLUDE_ALL_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator

#if !defined (OrgBouncycastleCryptoAgreementKdfDHKEKGenerator_) && (INCLUDE_ALL_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator || defined(INCLUDE_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator))
#define OrgBouncycastleCryptoAgreementKdfDHKEKGenerator_

#define RESTRICT_OrgBouncycastleCryptoDerivationFunction 1
#define INCLUDE_OrgBouncycastleCryptoDerivationFunction 1
#include "org/bouncycastle/crypto/DerivationFunction.h"

@class IOSByteArray;
@protocol OrgBouncycastleCryptoDerivationParameters;
@protocol OrgBouncycastleCryptoDigest;

/*!
 @brief RFC 2631 Diffie-hellman KEK derivation function.
 */
@interface OrgBouncycastleCryptoAgreementKdfDHKEKGenerator : NSObject < OrgBouncycastleCryptoDerivationFunction >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleCryptoDigest:(id<OrgBouncycastleCryptoDigest>)digest;

- (jint)generateBytesWithByteArray:(IOSByteArray *)outArg
                           withInt:(jint)outOff
                           withInt:(jint)len;

- (id<OrgBouncycastleCryptoDigest>)getDigest;

- (void)init__WithOrgBouncycastleCryptoDerivationParameters:(id<OrgBouncycastleCryptoDerivationParameters>)param OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoAgreementKdfDHKEKGenerator)

FOUNDATION_EXPORT void OrgBouncycastleCryptoAgreementKdfDHKEKGenerator_initWithOrgBouncycastleCryptoDigest_(OrgBouncycastleCryptoAgreementKdfDHKEKGenerator *self, id<OrgBouncycastleCryptoDigest> digest);

FOUNDATION_EXPORT OrgBouncycastleCryptoAgreementKdfDHKEKGenerator *new_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator_initWithOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> digest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoAgreementKdfDHKEKGenerator *create_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator_initWithOrgBouncycastleCryptoDigest_(id<OrgBouncycastleCryptoDigest> digest);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoAgreementKdfDHKEKGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoAgreementKdfDHKEKGenerator")

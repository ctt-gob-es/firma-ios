//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/util/DEROtherInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoUtilDEROtherInfo")
#ifdef RESTRICT_OrgBouncycastleCryptoUtilDEROtherInfo
#define INCLUDE_ALL_OrgBouncycastleCryptoUtilDEROtherInfo 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoUtilDEROtherInfo 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoUtilDEROtherInfo

#if !defined (OrgBouncycastleCryptoUtilDEROtherInfo_) && (INCLUDE_ALL_OrgBouncycastleCryptoUtilDEROtherInfo || defined(INCLUDE_OrgBouncycastleCryptoUtilDEROtherInfo))
#define OrgBouncycastleCryptoUtilDEROtherInfo_

@class IOSByteArray;
@class OrgBouncycastleAsn1DERSequence;

/*!
 @brief Builder and holder class for preparing SP 800-56A compliant OtherInfo.The data is ultimately encoded as a DER SEQUENCE.
 Empty octet strings are used to represent nulls in compulsory fields.
 */
@interface OrgBouncycastleCryptoUtilDEROtherInfo : NSObject

#pragma mark Public

- (IOSByteArray *)getEncoded;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastleAsn1DERSequence:(OrgBouncycastleAsn1DERSequence *)sequence;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoUtilDEROtherInfo)

FOUNDATION_EXPORT void OrgBouncycastleCryptoUtilDEROtherInfo_initWithOrgBouncycastleAsn1DERSequence_(OrgBouncycastleCryptoUtilDEROtherInfo *self, OrgBouncycastleAsn1DERSequence *sequence);

FOUNDATION_EXPORT OrgBouncycastleCryptoUtilDEROtherInfo *new_OrgBouncycastleCryptoUtilDEROtherInfo_initWithOrgBouncycastleAsn1DERSequence_(OrgBouncycastleAsn1DERSequence *sequence) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoUtilDEROtherInfo *create_OrgBouncycastleCryptoUtilDEROtherInfo_initWithOrgBouncycastleAsn1DERSequence_(OrgBouncycastleAsn1DERSequence *sequence);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoUtilDEROtherInfo)

#endif

#if !defined (OrgBouncycastleCryptoUtilDEROtherInfo_Builder_) && (INCLUDE_ALL_OrgBouncycastleCryptoUtilDEROtherInfo || defined(INCLUDE_OrgBouncycastleCryptoUtilDEROtherInfo_Builder))
#define OrgBouncycastleCryptoUtilDEROtherInfo_Builder_

@class IOSByteArray;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;
@class OrgBouncycastleCryptoUtilDEROtherInfo;

/*!
 @brief Builder to create OtherInfo
 */
@interface OrgBouncycastleCryptoUtilDEROtherInfo_Builder : NSObject

#pragma mark Public

/*!
 @brief Create a basic builder with just the compulsory fields.
 @param algorithmID the algorithm associated with this invocation of the KDF.
 @param partyUInfo sender party info.
 @param partyVInfo receiver party info.
 */
- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithmID
                                                     withByteArray:(IOSByteArray *)partyUInfo
                                                     withByteArray:(IOSByteArray *)partyVInfo;

/*!
 @brief Build the KTSOtherInfo.
 @return an KTSOtherInfo containing the data.
 */
- (OrgBouncycastleCryptoUtilDEROtherInfo *)build;

/*!
 @brief Add optional supplementary private info (DER tagged, implicit, 1).
 @param suppPrivInfo supplementary private info.
 @return the current builder instance.
 */
- (OrgBouncycastleCryptoUtilDEROtherInfo_Builder *)withSuppPrivInfoWithByteArray:(IOSByteArray *)suppPrivInfo;

/*!
 @brief Add optional supplementary public info (DER tagged, implicit, 0).
 @param suppPubInfo supplementary public info.
 @return the current builder instance.
 */
- (OrgBouncycastleCryptoUtilDEROtherInfo_Builder *)withSuppPubInfoWithByteArray:(IOSByteArray *)suppPubInfo;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoUtilDEROtherInfo_Builder)

FOUNDATION_EXPORT void OrgBouncycastleCryptoUtilDEROtherInfo_Builder_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgBouncycastleCryptoUtilDEROtherInfo_Builder *self, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo);

FOUNDATION_EXPORT OrgBouncycastleCryptoUtilDEROtherInfo_Builder *new_OrgBouncycastleCryptoUtilDEROtherInfo_Builder_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoUtilDEROtherInfo_Builder *create_OrgBouncycastleCryptoUtilDEROtherInfo_Builder_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_withByteArray_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmID, IOSByteArray *partyUInfo, IOSByteArray *partyVInfo);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoUtilDEROtherInfo_Builder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoUtilDEROtherInfo")

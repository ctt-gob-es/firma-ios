//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/util/DerUtil.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Throwable.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/crypto/util/DerUtil.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/util/DerUtil must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoUtilDerUtil_1 : JavaLangIllegalStateException {
 @public
  JavaIoIOException *val$e_;
}

- (instancetype)initWithJavaIoIOException:(JavaIoIOException *)capture$0
                             withNSString:(NSString *)arg0;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoUtilDerUtil_1)

__attribute__((unused)) static void OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(OrgBouncycastleCryptoUtilDerUtil_1 *self, JavaIoIOException *capture$0, NSString *arg0);

__attribute__((unused)) static OrgBouncycastleCryptoUtilDerUtil_1 *new_OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *arg0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleCryptoUtilDerUtil_1 *create_OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *arg0);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/util/DerUtil.java"


#line 10
@implementation OrgBouncycastleCryptoUtilDerUtil


#line 10
- (instancetype)initPackagePrivate {
  OrgBouncycastleCryptoUtilDerUtil_initPackagePrivate(self);
  return self;
}


#line 12
+ (OrgBouncycastleAsn1ASN1OctetString *)getOctetStringWithByteArray:(IOSByteArray *)data {
  return OrgBouncycastleCryptoUtilDerUtil_getOctetStringWithByteArray_(data);
}


#line 22
+ (IOSByteArray *)toByteArrayWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive {
  return OrgBouncycastleCryptoUtilDerUtil_toByteArrayWithOrgBouncycastleAsn1ASN1Primitive_(primitive);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1OctetString;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x8, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(getOctetStringWithByteArray:);
  methods[2].selector = @selector(toByteArrayWithOrgBouncycastleAsn1ASN1Primitive:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getOctetString", "[B", "toByteArray", "LOrgBouncycastleAsn1ASN1Primitive;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoUtilDerUtil = { "DerUtil", "org.bouncycastle.crypto.util", ptrTable, methods, NULL, 7, 0x0, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoUtilDerUtil;
}

@end


#line 10
void OrgBouncycastleCryptoUtilDerUtil_initPackagePrivate(OrgBouncycastleCryptoUtilDerUtil *self) {
  NSObject_init(self);
}


#line 10
OrgBouncycastleCryptoUtilDerUtil *new_OrgBouncycastleCryptoUtilDerUtil_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoUtilDerUtil, initPackagePrivate)
}


#line 10
OrgBouncycastleCryptoUtilDerUtil *create_OrgBouncycastleCryptoUtilDerUtil_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoUtilDerUtil, initPackagePrivate)
}


#line 12
OrgBouncycastleAsn1ASN1OctetString *OrgBouncycastleCryptoUtilDerUtil_getOctetStringWithByteArray_(IOSByteArray *data) {
  OrgBouncycastleCryptoUtilDerUtil_initialize();
  if (data == nil) {
    
#line 16
    return new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_([IOSByteArray newArrayWithLength:0]);
  }
  
#line 19
  return new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(OrgBouncycastleUtilArrays_cloneWithByteArray_(data));
}


#line 22
IOSByteArray *OrgBouncycastleCryptoUtilDerUtil_toByteArrayWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1Primitive *primitive) {
  OrgBouncycastleCryptoUtilDerUtil_initialize();
  @try {
    
#line 26
    return [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) getEncoded];
  }
  @catch (JavaIoIOException *e) {
    
#line 30
    @throw new_OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(e, JreStrcat("$$", @"Cannot get encoding: ", [e getMessage]));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoUtilDerUtil)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/util/DerUtil.java"


#line 31
@implementation OrgBouncycastleCryptoUtilDerUtil_1


#line 31
- (instancetype)initWithJavaIoIOException:(JavaIoIOException *)capture$0
                             withNSString:(NSString *)arg0 {
  OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(self, capture$0, arg0);
  return self;
}


#line 32
- (JavaLangThrowable *)getCause {
  
#line 35
  return JreRetainedLocalValue(val$e_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoIOException:withNSString:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$e_", "LJavaIoIOException;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;LNSString;", "LOrgBouncycastleCryptoUtilDerUtil;", "toByteArrayWithOrgBouncycastleAsn1ASN1Primitive:" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoUtilDerUtil_1 = { "", "org.bouncycastle.crypto.util", ptrTable, methods, fields, 7, 0x8000, 2, 1, 1, -1, 2, -1, -1 };
  return &_OrgBouncycastleCryptoUtilDerUtil_1;
}

@end


#line 31
void OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(OrgBouncycastleCryptoUtilDerUtil_1 *self, JavaIoIOException *capture$0, NSString *arg0) {
  self->val$e_ = capture$0;
  JavaLangIllegalStateException_initWithNSString_(self,
#line 31
  arg0);
}


#line 31
OrgBouncycastleCryptoUtilDerUtil_1 *new_OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *arg0) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoUtilDerUtil_1, initWithJavaIoIOException_withNSString_, capture$0, arg0)
}


#line 31
OrgBouncycastleCryptoUtilDerUtil_1 *create_OrgBouncycastleCryptoUtilDerUtil_1_initWithJavaIoIOException_withNSString_(JavaIoIOException *capture$0, NSString *arg0) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoUtilDerUtil_1, initWithJavaIoIOException_withNSString_, capture$0, arg0)
}

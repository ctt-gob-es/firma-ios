//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServiceProperties.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/crypto/CryptoServiceProperties.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/CryptoServiceProperties must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoCryptoServiceProperties : NSObject

@end

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/CryptoServiceProperties.java"


#line 3
@implementation OrgBouncycastleCryptoCryptoServiceProperties

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoCryptoServicePurpose;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(bitsOfSecurity);
  methods[1].selector = @selector(getServiceName);
  methods[2].selector = @selector(getPurpose);
  methods[3].selector = @selector(getParams);
  #pragma clang diagnostic pop
  static const J2ObjcClassInfo _OrgBouncycastleCryptoCryptoServiceProperties = { "CryptoServiceProperties", "org.bouncycastle.crypto", NULL, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoCryptoServiceProperties;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoCryptoServiceProperties)

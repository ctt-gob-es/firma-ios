//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/engines/GOST28147Engine.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoEnginesGOST28147Engine")
#ifdef RESTRICT_OrgBouncycastleCryptoEnginesGOST28147Engine
#define INCLUDE_ALL_OrgBouncycastleCryptoEnginesGOST28147Engine 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoEnginesGOST28147Engine 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoEnginesGOST28147Engine

#if !defined (OrgBouncycastleCryptoEnginesGOST28147Engine_) && (INCLUDE_ALL_OrgBouncycastleCryptoEnginesGOST28147Engine || defined(INCLUDE_OrgBouncycastleCryptoEnginesGOST28147Engine))
#define OrgBouncycastleCryptoEnginesGOST28147Engine_

#define RESTRICT_OrgBouncycastleCryptoBlockCipher 1
#define INCLUDE_OrgBouncycastleCryptoBlockCipher 1
#include "org/bouncycastle/crypto/BlockCipher.h"

@class IOSByteArray;
@protocol OrgBouncycastleCryptoCipherParameters;

/*!
 @brief implementation of GOST 28147-89
 */
@interface OrgBouncycastleCryptoEnginesGOST28147Engine : NSObject < OrgBouncycastleCryptoBlockCipher >

#pragma mark Public

/*!
 @brief standard constructor.
 */
- (instancetype)init;

- (NSString *)getAlgorithmName;

- (jint)getBlockSize;

/*!
 @brief Return the S-Box associated with SBoxName
 @param sBoxName name of the S-Box
 @return byte array representing the S-Box
 */
+ (IOSByteArray *)getSBoxWithNSString:(NSString *)sBoxName;

+ (NSString *)getSBoxNameWithByteArray:(IOSByteArray *)sBox;

/*!
 @brief initialise an GOST28147 cipher.
 @param forEncryption whether or not we are for encryption.
 @param params the parameters required to set up the cipher.
 @throw IllegalArgumentExceptionif the params argument is
  inappropriate.
 */
- (void)init__WithBoolean:(jboolean)forEncryption
withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)params OBJC_METHOD_FAMILY_NONE;

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (void)reset;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleCryptoEnginesGOST28147Engine)

inline jint OrgBouncycastleCryptoEnginesGOST28147Engine_get_BLOCK_SIZE(void);
#define OrgBouncycastleCryptoEnginesGOST28147Engine_BLOCK_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleCryptoEnginesGOST28147Engine, BLOCK_SIZE, jint)

FOUNDATION_EXPORT void OrgBouncycastleCryptoEnginesGOST28147Engine_init(OrgBouncycastleCryptoEnginesGOST28147Engine *self);

FOUNDATION_EXPORT OrgBouncycastleCryptoEnginesGOST28147Engine *new_OrgBouncycastleCryptoEnginesGOST28147Engine_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleCryptoEnginesGOST28147Engine *create_OrgBouncycastleCryptoEnginesGOST28147Engine_init(void);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_getSBoxWithNSString_(NSString *sBoxName);

FOUNDATION_EXPORT NSString *OrgBouncycastleCryptoEnginesGOST28147Engine_getSBoxNameWithByteArray_(IOSByteArray *sBox);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoEnginesGOST28147Engine)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoEnginesGOST28147Engine")

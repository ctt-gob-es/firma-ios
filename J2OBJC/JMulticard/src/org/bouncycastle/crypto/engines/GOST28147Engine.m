//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/engines/GOST28147Engine.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "org/bouncycastle/crypto/CipherParameters.h"
#include "org/bouncycastle/crypto/DataLengthException.h"
#include "org/bouncycastle/crypto/OutputLengthException.h"
#include "org/bouncycastle/crypto/engines/GOST28147Engine.h"
#include "org/bouncycastle/crypto/params/KeyParameter.h"
#include "org/bouncycastle/crypto/params/ParametersWithSBox.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Strings.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/engines/GOST28147Engine must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleCryptoEnginesGOST28147Engine () {
 @public
  IOSIntArray *workingKey_;
  jboolean forEncryption_;
  IOSByteArray *S_;
}

+ (void)addSBoxWithNSString:(NSString *)sBoxName
              withByteArray:(IOSByteArray *)sBox;

- (IOSIntArray *)generateWorkingKeyWithBoolean:(jboolean)forEncryption
                                 withByteArray:(IOSByteArray *)userKey;

- (jint)GOST28147_mainStepWithInt:(jint)n1
                          withInt:(jint)key;

- (void)GOST28147FuncWithIntArray:(IOSIntArray *)workingKey
                    withByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff;

- (jint)bytesTointWithByteArray:(IOSByteArray *)inArg
                        withInt:(jint)inOff;

- (void)intTobytesWithInt:(jint)num
            withByteArray:(IOSByteArray *)outArg
                  withInt:(jint)outOff;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoEnginesGOST28147Engine, workingKey_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleCryptoEnginesGOST28147Engine, S_, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_Sbox_Default(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_Sbox_Default(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_Sbox_Default;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, Sbox_Default, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_ESbox_Test(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_ESbox_Test(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_Test;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, ESbox_Test, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_ESbox_A(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_ESbox_A(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_A;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, ESbox_A, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_ESbox_B(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_ESbox_B(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_B;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, ESbox_B, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_ESbox_C(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_ESbox_C(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_C;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, ESbox_C, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_ESbox_D(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_ESbox_D(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_D;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, ESbox_D, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_Param_Z(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_Param_Z(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_Param_Z;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, Param_Z, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_DSbox_Test(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_DSbox_Test(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_Test;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, DSbox_Test, IOSByteArray *)

inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_get_DSbox_A(void);
inline IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_set_DSbox_A(IOSByteArray *value);
static IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_A;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, DSbox_A, IOSByteArray *)

inline JavaUtilHashtable *OrgBouncycastleCryptoEnginesGOST28147Engine_get_sBoxes(void);
inline JavaUtilHashtable *OrgBouncycastleCryptoEnginesGOST28147Engine_set_sBoxes(JavaUtilHashtable *value);
static JavaUtilHashtable *OrgBouncycastleCryptoEnginesGOST28147Engine_sBoxes;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleCryptoEnginesGOST28147Engine, sBoxes, JavaUtilHashtable *)

__attribute__((unused)) static void OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(NSString *sBoxName, IOSByteArray *sBox);

__attribute__((unused)) static IOSIntArray *OrgBouncycastleCryptoEnginesGOST28147Engine_generateWorkingKeyWithBoolean_withByteArray_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, jboolean forEncryption, IOSByteArray *userKey);

__attribute__((unused)) static jint OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, jint n1, jint key);

__attribute__((unused)) static void OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147FuncWithIntArray_withByteArray_withInt_withByteArray_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, IOSIntArray *workingKey, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff);

__attribute__((unused)) static jint OrgBouncycastleCryptoEnginesGOST28147Engine_bytesTointWithByteArray_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, IOSByteArray *inArg, jint inOff);

__attribute__((unused)) static void OrgBouncycastleCryptoEnginesGOST28147Engine_intTobytesWithInt_withByteArray_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, jint num, IOSByteArray *outArg, jint outOff);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/engines/GOST28147Engine.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleCryptoEnginesGOST28147Engine)


#line 18
@implementation OrgBouncycastleCryptoEnginesGOST28147Engine


#line 153
+ (void)addSBoxWithNSString:(NSString *)sBoxName
              withByteArray:(IOSByteArray *)sBox {
  OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(sBoxName, sBox);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 161
- (instancetype)init {
  OrgBouncycastleCryptoEnginesGOST28147Engine_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 173
- (void)init__WithBoolean:(jboolean)forEncryption
withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)params {
  
#line 178
  if ([params isKindOfClass:[OrgBouncycastleCryptoParamsParametersWithSBox class]]) {
    
#line 180
    OrgBouncycastleCryptoParamsParametersWithSBox *param = (OrgBouncycastleCryptoParamsParametersWithSBox *) params;
    
#line 185
    IOSByteArray *sBox = [((OrgBouncycastleCryptoParamsParametersWithSBox *) nil_chk(param)) getSBox];
    if (((IOSByteArray *) nil_chk(sBox))->size_ != ((IOSByteArray *) nil_chk(OrgBouncycastleCryptoEnginesGOST28147Engine_Sbox_Default))->size_) {
      
#line 188
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"invalid S-box passed to GOST28147 init");
    }
    self->S_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(sBox);
    
#line 195
    if ([param getParameters] != nil) {
      
#line 197
      workingKey_ = OrgBouncycastleCryptoEnginesGOST28147Engine_generateWorkingKeyWithBoolean_withByteArray_(self, forEncryption,
#line 198
      [((OrgBouncycastleCryptoParamsKeyParameter *) nil_chk(((OrgBouncycastleCryptoParamsKeyParameter *) cast_chk([param getParameters], [OrgBouncycastleCryptoParamsKeyParameter class])))) getKey]);
    }
  }
  else if ([params isKindOfClass:[OrgBouncycastleCryptoParamsKeyParameter class]]) {
    
#line 203
    workingKey_ = OrgBouncycastleCryptoEnginesGOST28147Engine_generateWorkingKeyWithBoolean_withByteArray_(self, forEncryption,
#line 204
    [((OrgBouncycastleCryptoParamsKeyParameter *) nil_chk(((OrgBouncycastleCryptoParamsKeyParameter *) params))) getKey]);
  }
  else if (params != nil) {
    
#line 208
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid parameter passed to GOST28147 init - ", [[params java_getClass] getName]));
  }
}


#line 212
- (NSString *)getAlgorithmName {
  
#line 215
  return @"GOST28147";
}

- (jint)getBlockSize {
  
#line 221
  return OrgBouncycastleCryptoEnginesGOST28147Engine_BLOCK_SIZE;
}

- (jint)processBlockWithByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  
#line 231
  if (workingKey_ == nil) {
    
#line 233
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"GOST28147 engine not initialised");
  }
  
#line 236
  if ((inOff + OrgBouncycastleCryptoEnginesGOST28147Engine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(inArg))->size_) {
    
#line 238
    @throw new_OrgBouncycastleCryptoDataLengthException_initWithNSString_(@"input buffer too short");
  }
  
#line 241
  if ((outOff + OrgBouncycastleCryptoEnginesGOST28147Engine_BLOCK_SIZE) > ((IOSByteArray *) nil_chk(outArg))->size_) {
    
#line 243
    @throw new_OrgBouncycastleCryptoOutputLengthException_initWithNSString_(@"output buffer too short");
  }
  
#line 246
  OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147FuncWithIntArray_withByteArray_withInt_withByteArray_withInt_(self, workingKey_, inArg, inOff, outArg, outOff);
  
#line 248
  return OrgBouncycastleCryptoEnginesGOST28147Engine_BLOCK_SIZE;
}


#line 251
- (void)reset {
}


#line 256
- (IOSIntArray *)generateWorkingKeyWithBoolean:(jboolean)forEncryption
                                 withByteArray:(IOSByteArray *)userKey {
  return OrgBouncycastleCryptoEnginesGOST28147Engine_generateWorkingKeyWithBoolean_withByteArray_(self, forEncryption, userKey);
}


#line 276
- (jint)GOST28147_mainStepWithInt:(jint)n1
                          withInt:(jint)key {
  return OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(self, n1, key);
}


#line 294
- (void)GOST28147FuncWithIntArray:(IOSIntArray *)workingKey
                    withByteArray:(IOSByteArray *)inArg
                          withInt:(jint)inOff
                    withByteArray:(IOSByteArray *)outArg
                          withInt:(jint)outOff {
  OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147FuncWithIntArray_withByteArray_withInt_withByteArray_withInt_(self, workingKey, inArg, inOff, outArg, outOff);
}


#line 353
- (jint)bytesTointWithByteArray:(IOSByteArray *)inArg
                        withInt:(jint)inOff {
  return OrgBouncycastleCryptoEnginesGOST28147Engine_bytesTointWithByteArray_withInt_(self, inArg, inOff);
}


#line 362
- (void)intTobytesWithInt:(jint)num
            withByteArray:(IOSByteArray *)outArg
                  withInt:(jint)outOff {
  OrgBouncycastleCryptoEnginesGOST28147Engine_intTobytesWithInt_withByteArray_withInt_(self, num, outArg, outOff);
}


#line 378
+ (IOSByteArray *)getSBoxWithNSString:(NSString *)sBoxName {
  return OrgBouncycastleCryptoEnginesGOST28147Engine_getSBoxWithNSString_(sBoxName);
}


#line 392
+ (NSString *)getSBoxNameWithByteArray:(IOSByteArray *)sBox {
  return OrgBouncycastleCryptoEnginesGOST28147Engine_getSBoxNameWithByteArray_(sBox);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 18, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(addSBoxWithNSString:withByteArray:);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(init__WithBoolean:withOrgBouncycastleCryptoCipherParameters:);
  methods[3].selector = @selector(getAlgorithmName);
  methods[4].selector = @selector(getBlockSize);
  methods[5].selector = @selector(processBlockWithByteArray:withInt:withByteArray:withInt:);
  methods[6].selector = @selector(reset);
  methods[7].selector = @selector(generateWorkingKeyWithBoolean:withByteArray:);
  methods[8].selector = @selector(GOST28147_mainStepWithInt:withInt:);
  methods[9].selector = @selector(GOST28147FuncWithIntArray:withByteArray:withInt:withByteArray:withInt:);
  methods[10].selector = @selector(bytesTointWithByteArray:withInt:);
  methods[11].selector = @selector(intTobytesWithInt:withByteArray:withInt:);
  methods[12].selector = @selector(getSBoxWithNSString:);
  methods[13].selector = @selector(getSBoxNameWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgBouncycastleCryptoEnginesGOST28147Engine_BLOCK_SIZE, 0x1c, -1, -1, -1, -1 },
    { "workingKey_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "forEncryption_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "S_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "Sbox_Default", "[B", .constantValue.asLong = 0, 0xa, -1, 20, -1, -1 },
    { "ESbox_Test", "[B", .constantValue.asLong = 0, 0xa, -1, 21, -1, -1 },
    { "ESbox_A", "[B", .constantValue.asLong = 0, 0xa, -1, 22, -1, -1 },
    { "ESbox_B", "[B", .constantValue.asLong = 0, 0xa, -1, 23, -1, -1 },
    { "ESbox_C", "[B", .constantValue.asLong = 0, 0xa, -1, 24, -1, -1 },
    { "ESbox_D", "[B", .constantValue.asLong = 0, 0xa, -1, 25, -1, -1 },
    { "Param_Z", "[B", .constantValue.asLong = 0, 0xa, -1, 26, -1, -1 },
    { "DSbox_Test", "[B", .constantValue.asLong = 0, 0xa, -1, 27, -1, -1 },
    { "DSbox_A", "[B", .constantValue.asLong = 0, 0xa, -1, 28, -1, -1 },
    { "sBoxes", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0xa, -1, 29, -1, -1 },
  };
  static const void *ptrTable[] = { "addSBox", "LNSString;[B", "init", "ZLOrgBouncycastleCryptoCipherParameters;", "processBlock", "[BI[BI", "generateWorkingKey", "Z[B", "GOST28147_mainStep", "II", "GOST28147Func", "[I[BI[BI", "bytesToint", "[BI", "intTobytes", "I[BI", "getSBox", "LNSString;", "getSBoxName", "[B", &OrgBouncycastleCryptoEnginesGOST28147Engine_Sbox_Default, &OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_Test, &OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_A, &OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_B, &OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_C, &OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_D, &OrgBouncycastleCryptoEnginesGOST28147Engine_Param_Z, &OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_Test, &OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_A, &OrgBouncycastleCryptoEnginesGOST28147Engine_sBoxes };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoEnginesGOST28147Engine = { "GOST28147Engine", "org.bouncycastle.crypto.engines", ptrTable, methods, fields, 7, 0x1, 14, 14, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoEnginesGOST28147Engine;
}

+ (void)initialize {
  if (self == [OrgBouncycastleCryptoEnginesGOST28147Engine class]) {
    OrgBouncycastleCryptoEnginesGOST28147Engine_Sbox_Default = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 30
      (jint) 0x4, (jint) 0xA, (jint) 0x9, (jint) 0x2, (jint) 0xD, (jint) 0x8, (jint) 0x0, (jint) 0xE, (jint) 0x6, (jint) 0xB, (jint) 0x1, (jint) 0xC, (jint) 0x7, (jint) 0xF, (jint) 0x5, (jint) 0x3,
#line 31
      (jint) 0xE, (jint) 0xB, (jint) 0x4, (jint) 0xC, (jint) 0x6, (jint) 0xD, (jint) 0xF, (jint) 0xA, (jint) 0x2, (jint) 0x3, (jint) 0x8, (jint) 0x1, (jint) 0x0, (jint) 0x7, (jint) 0x5, (jint) 0x9,
#line 32
      (jint) 0x5, (jint) 0x8, (jint) 0x1, (jint) 0xD, (jint) 0xA, (jint) 0x3, (jint) 0x4, (jint) 0x2, (jint) 0xE, (jint) 0xF, (jint) 0xC, (jint) 0x7, (jint) 0x6, (jint) 0x0, (jint) 0x9, (jint) 0xB,
#line 33
      (jint) 0x7, (jint) 0xD, (jint) 0xA, (jint) 0x1, (jint) 0x0, (jint) 0x8, (jint) 0x9, (jint) 0xF, (jint) 0xE, (jint) 0x4, (jint) 0x6, (jint) 0xC, (jint) 0xB, (jint) 0x2, (jint) 0x5, (jint) 0x3,
#line 34
      (jint) 0x6, (jint) 0xC, (jint) 0x7, (jint) 0x1, (jint) 0x5, (jint) 0xF, (jint) 0xD, (jint) 0x8, (jint) 0x4, (jint) 0xA, (jint) 0x9, (jint) 0xE, (jint) 0x0, (jint) 0x3, (jint) 0xB, (jint) 0x2,
#line 35
      (jint) 0x4, (jint) 0xB, (jint) 0xA, (jint) 0x0, (jint) 0x7, (jint) 0x2, (jint) 0x1, (jint) 0xD, (jint) 0x3, (jint) 0x6, (jint) 0x8, (jint) 0x5, (jint) 0x9, (jint) 0xC, (jint) 0xF, (jint) 0xE,
#line 36
      (jint) 0xD, (jint) 0xB, (jint) 0x4, (jint) 0x1, (jint) 0x3, (jint) 0xF, (jint) 0x5, (jint) 0x9, (jint) 0x0, (jint) 0xA, (jint) 0xE, (jint) 0x7, (jint) 0x6, (jint) 0x8, (jint) 0x2, (jint) 0xC,
#line 37
      (jint) 0x1, (jint) 0xF, (jint) 0xD, (jint) 0x0, (jint) 0x5, (jint) 0x7, (jint) 0xA, (jint) 0x4, (jint) 0x9, (jint) 0x2, (jint) 0x3, (jint) 0xE, (jint) 0x6, (jint) 0xB, (jint) 0x8, (jint) 0xC } count:128];
      OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_Test = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 46
        (jint) 0x4, (jint) 0x2, (jint) 0xF, (jint) 0x5, (jint) 0x9, (jint) 0x1, (jint) 0x0, (jint) 0x8, (jint) 0xE, (jint) 0x3, (jint) 0xB, (jint) 0xC, (jint) 0xD, (jint) 0x7, (jint) 0xA, (jint) 0x6,
#line 47
        (jint) 0xC, (jint) 0x9, (jint) 0xF, (jint) 0xE, (jint) 0x8, (jint) 0x1, (jint) 0x3, (jint) 0xA, (jint) 0x2, (jint) 0x7, (jint) 0x4, (jint) 0xD, (jint) 0x6, (jint) 0x0, (jint) 0xB, (jint) 0x5,
#line 48
        (jint) 0xD, (jint) 0x8, (jint) 0xE, (jint) 0xC, (jint) 0x7, (jint) 0x3, (jint) 0x9, (jint) 0xA, (jint) 0x1, (jint) 0x5, (jint) 0x2, (jint) 0x4, (jint) 0x6, (jint) 0xF, (jint) 0x0, (jint) 0xB,
#line 49
        (jint) 0xE, (jint) 0x9, (jint) 0xB, (jint) 0x2, (jint) 0x5, (jint) 0xF, (jint) 0x7, (jint) 0x1, (jint) 0x0, (jint) 0xD, (jint) 0xC, (jint) 0x6, (jint) 0xA, (jint) 0x4, (jint) 0x3, (jint) 0x8,
#line 50
        (jint) 0x3, (jint) 0xE, (jint) 0x5, (jint) 0x9, (jint) 0x6, (jint) 0x8, (jint) 0x0, (jint) 0xD, (jint) 0xA, (jint) 0xB, (jint) 0x7, (jint) 0xC, (jint) 0x2, (jint) 0x1, (jint) 0xF, (jint) 0x4,
#line 51
        (jint) 0x8, (jint) 0xF, (jint) 0x6, (jint) 0xB, (jint) 0x1, (jint) 0x9, (jint) 0xC, (jint) 0x5, (jint) 0xD, (jint) 0x3, (jint) 0x7, (jint) 0xA, (jint) 0x0, (jint) 0xE, (jint) 0x2, (jint) 0x4,
#line 52
        (jint) 0x9, (jint) 0xB, (jint) 0xC, (jint) 0x0, (jint) 0x3, (jint) 0x6, (jint) 0x7, (jint) 0x5, (jint) 0x4, (jint) 0x8, (jint) 0xE, (jint) 0xF, (jint) 0x1, (jint) 0xA, (jint) 0x2, (jint) 0xD,
#line 53
        (jint) 0xC, (jint) 0x6, (jint) 0x5, (jint) 0x2, (jint) 0xB, (jint) 0x0, (jint) 0x9, (jint) 0xD, (jint) 0x3, (jint) 0xE, (jint) 0x7, (jint) 0xA, (jint) 0xF, (jint) 0x4, (jint) 0x1, (jint) 0x8 } count:128];
        OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_A = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 57
          (jint) 0x9, (jint) 0x6, (jint) 0x3, (jint) 0x2, (jint) 0x8, (jint) 0xB, (jint) 0x1, (jint) 0x7, (jint) 0xA, (jint) 0x4, (jint) 0xE, (jint) 0xF, (jint) 0xC, (jint) 0x0, (jint) 0xD, (jint) 0x5,
#line 58
          (jint) 0x3, (jint) 0x7, (jint) 0xE, (jint) 0x9, (jint) 0x8, (jint) 0xA, (jint) 0xF, (jint) 0x0, (jint) 0x5, (jint) 0x2, (jint) 0x6, (jint) 0xC, (jint) 0xB, (jint) 0x4, (jint) 0xD, (jint) 0x1,
#line 59
          (jint) 0xE, (jint) 0x4, (jint) 0x6, (jint) 0x2, (jint) 0xB, (jint) 0x3, (jint) 0xD, (jint) 0x8, (jint) 0xC, (jint) 0xF, (jint) 0x5, (jint) 0xA, (jint) 0x0, (jint) 0x7, (jint) 0x1, (jint) 0x9,
#line 60
          (jint) 0xE, (jint) 0x7, (jint) 0xA, (jint) 0xC, (jint) 0xD, (jint) 0x1, (jint) 0x3, (jint) 0x9, (jint) 0x0, (jint) 0x2, (jint) 0xB, (jint) 0x4, (jint) 0xF, (jint) 0x8, (jint) 0x5, (jint) 0x6,
#line 61
          (jint) 0xB, (jint) 0x5, (jint) 0x1, (jint) 0x9, (jint) 0x8, (jint) 0xD, (jint) 0xF, (jint) 0x0, (jint) 0xE, (jint) 0x4, (jint) 0x2, (jint) 0x3, (jint) 0xC, (jint) 0x7, (jint) 0xA, (jint) 0x6,
#line 62
          (jint) 0x3, (jint) 0xA, (jint) 0xD, (jint) 0xC, (jint) 0x1, (jint) 0x2, (jint) 0x0, (jint) 0xB, (jint) 0x7, (jint) 0x5, (jint) 0x9, (jint) 0x4, (jint) 0x8, (jint) 0xF, (jint) 0xE, (jint) 0x6,
#line 63
          (jint) 0x1, (jint) 0xD, (jint) 0x2, (jint) 0x9, (jint) 0x7, (jint) 0xA, (jint) 0x6, (jint) 0x0, (jint) 0x8, (jint) 0xC, (jint) 0x4, (jint) 0x5, (jint) 0xF, (jint) 0x3, (jint) 0xB, (jint) 0xE,
#line 64
          (jint) 0xB, (jint) 0xA, (jint) 0xF, (jint) 0x5, (jint) 0x0, (jint) 0xC, (jint) 0xE, (jint) 0x8, (jint) 0x6, (jint) 0x2, (jint) 0x3, (jint) 0x9, (jint) 0x1, (jint) 0x7, (jint) 0xD, (jint) 0x4 } count:128];
          OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_B = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 68
            (jint) 0x8, (jint) 0x4, (jint) 0xB, (jint) 0x1, (jint) 0x3, (jint) 0x5, (jint) 0x0, (jint) 0x9, (jint) 0x2, (jint) 0xE, (jint) 0xA, (jint) 0xC, (jint) 0xD, (jint) 0x6, (jint) 0x7, (jint) 0xF,
#line 69
            (jint) 0x0, (jint) 0x1, (jint) 0x2, (jint) 0xA, (jint) 0x4, (jint) 0xD, (jint) 0x5, (jint) 0xC, (jint) 0x9, (jint) 0x7, (jint) 0x3, (jint) 0xF, (jint) 0xB, (jint) 0x8, (jint) 0x6, (jint) 0xE,
#line 70
            (jint) 0xE, (jint) 0xC, (jint) 0x0, (jint) 0xA, (jint) 0x9, (jint) 0x2, (jint) 0xD, (jint) 0xB, (jint) 0x7, (jint) 0x5, (jint) 0x8, (jint) 0xF, (jint) 0x3, (jint) 0x6, (jint) 0x1, (jint) 0x4,
#line 71
            (jint) 0x7, (jint) 0x5, (jint) 0x0, (jint) 0xD, (jint) 0xB, (jint) 0x6, (jint) 0x1, (jint) 0x2, (jint) 0x3, (jint) 0xA, (jint) 0xC, (jint) 0xF, (jint) 0x4, (jint) 0xE, (jint) 0x9, (jint) 0x8,
#line 72
            (jint) 0x2, (jint) 0x7, (jint) 0xC, (jint) 0xF, (jint) 0x9, (jint) 0x5, (jint) 0xA, (jint) 0xB, (jint) 0x1, (jint) 0x4, (jint) 0x0, (jint) 0xD, (jint) 0x6, (jint) 0x8, (jint) 0xE, (jint) 0x3,
#line 73
            (jint) 0x8, (jint) 0x3, (jint) 0x2, (jint) 0x6, (jint) 0x4, (jint) 0xD, (jint) 0xE, (jint) 0xB, (jint) 0xC, (jint) 0x1, (jint) 0x7, (jint) 0xF, (jint) 0xA, (jint) 0x0, (jint) 0x9, (jint) 0x5,
#line 74
            (jint) 0x5, (jint) 0x2, (jint) 0xA, (jint) 0xB, (jint) 0x9, (jint) 0x1, (jint) 0xC, (jint) 0x3, (jint) 0x7, (jint) 0x4, (jint) 0xD, (jint) 0x0, (jint) 0x6, (jint) 0xF, (jint) 0x8, (jint) 0xE,
#line 75
            (jint) 0x0, (jint) 0x4, (jint) 0xB, (jint) 0xE, (jint) 0x8, (jint) 0x3, (jint) 0x7, (jint) 0x1, (jint) 0xA, (jint) 0x2, (jint) 0x9, (jint) 0x6, (jint) 0xF, (jint) 0xD, (jint) 0x5, (jint) 0xC } count:128];
            OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_C = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 79
              (jint) 0x1, (jint) 0xB, (jint) 0xC, (jint) 0x2, (jint) 0x9, (jint) 0xD, (jint) 0x0, (jint) 0xF, (jint) 0x4, (jint) 0x5, (jint) 0x8, (jint) 0xE, (jint) 0xA, (jint) 0x7, (jint) 0x6, (jint) 0x3,
#line 80
              (jint) 0x0, (jint) 0x1, (jint) 0x7, (jint) 0xD, (jint) 0xB, (jint) 0x4, (jint) 0x5, (jint) 0x2, (jint) 0x8, (jint) 0xE, (jint) 0xF, (jint) 0xC, (jint) 0x9, (jint) 0xA, (jint) 0x6, (jint) 0x3,
#line 81
              (jint) 0x8, (jint) 0x2, (jint) 0x5, (jint) 0x0, (jint) 0x4, (jint) 0x9, (jint) 0xF, (jint) 0xA, (jint) 0x3, (jint) 0x7, (jint) 0xC, (jint) 0xD, (jint) 0x6, (jint) 0xE, (jint) 0x1, (jint) 0xB,
#line 82
              (jint) 0x3, (jint) 0x6, (jint) 0x0, (jint) 0x1, (jint) 0x5, (jint) 0xD, (jint) 0xA, (jint) 0x8, (jint) 0xB, (jint) 0x2, (jint) 0x9, (jint) 0x7, (jint) 0xE, (jint) 0xF, (jint) 0xC, (jint) 0x4,
#line 83
              (jint) 0x8, (jint) 0xD, (jint) 0xB, (jint) 0x0, (jint) 0x4, (jint) 0x5, (jint) 0x1, (jint) 0x2, (jint) 0x9, (jint) 0x3, (jint) 0xC, (jint) 0xE, (jint) 0x6, (jint) 0xF, (jint) 0xA, (jint) 0x7,
#line 84
              (jint) 0xC, (jint) 0x9, (jint) 0xB, (jint) 0x1, (jint) 0x8, (jint) 0xE, (jint) 0x2, (jint) 0x4, (jint) 0x7, (jint) 0x3, (jint) 0x6, (jint) 0x5, (jint) 0xA, (jint) 0x0, (jint) 0xF, (jint) 0xD,
#line 85
              (jint) 0xA, (jint) 0x9, (jint) 0x6, (jint) 0x8, (jint) 0xD, (jint) 0xE, (jint) 0x2, (jint) 0x0, (jint) 0xF, (jint) 0x3, (jint) 0x5, (jint) 0xB, (jint) 0x4, (jint) 0x1, (jint) 0xC, (jint) 0x7,
#line 86
              (jint) 0x7, (jint) 0x4, (jint) 0x0, (jint) 0x5, (jint) 0xA, (jint) 0x2, (jint) 0xF, (jint) 0xE, (jint) 0xC, (jint) 0x6, (jint) 0x1, (jint) 0xB, (jint) 0xD, (jint) 0x9, (jint) 0x3, (jint) 0x8 } count:128];
              OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_D = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 90
                (jint) 0xF, (jint) 0xC, (jint) 0x2, (jint) 0xA, (jint) 0x6, (jint) 0x4, (jint) 0x5, (jint) 0x0, (jint) 0x7, (jint) 0x9, (jint) 0xE, (jint) 0xD, (jint) 0x1, (jint) 0xB, (jint) 0x8, (jint) 0x3,
#line 91
                (jint) 0xB, (jint) 0x6, (jint) 0x3, (jint) 0x4, (jint) 0xC, (jint) 0xF, (jint) 0xE, (jint) 0x2, (jint) 0x7, (jint) 0xD, (jint) 0x8, (jint) 0x0, (jint) 0x5, (jint) 0xA, (jint) 0x9, (jint) 0x1,
#line 92
                (jint) 0x1, (jint) 0xC, (jint) 0xB, (jint) 0x0, (jint) 0xF, (jint) 0xE, (jint) 0x6, (jint) 0x5, (jint) 0xA, (jint) 0xD, (jint) 0x4, (jint) 0x8, (jint) 0x9, (jint) 0x3, (jint) 0x7, (jint) 0x2,
#line 93
                (jint) 0x1, (jint) 0x5, (jint) 0xE, (jint) 0xC, (jint) 0xA, (jint) 0x7, (jint) 0x0, (jint) 0xD, (jint) 0x6, (jint) 0x2, (jint) 0xB, (jint) 0x4, (jint) 0x9, (jint) 0x3, (jint) 0xF, (jint) 0x8,
#line 94
                (jint) 0x0, (jint) 0xC, (jint) 0x8, (jint) 0x9, (jint) 0xD, (jint) 0x2, (jint) 0xA, (jint) 0xB, (jint) 0x7, (jint) 0x3, (jint) 0x6, (jint) 0x5, (jint) 0x4, (jint) 0xE, (jint) 0xF, (jint) 0x1,
#line 95
                (jint) 0x8, (jint) 0x0, (jint) 0xF, (jint) 0x3, (jint) 0x2, (jint) 0x5, (jint) 0xE, (jint) 0xB, (jint) 0x1, (jint) 0xA, (jint) 0x4, (jint) 0x7, (jint) 0xC, (jint) 0x9, (jint) 0xD, (jint) 0x6,
#line 96
                (jint) 0x3, (jint) 0x0, (jint) 0x6, (jint) 0xF, (jint) 0x1, (jint) 0xE, (jint) 0x9, (jint) 0x2, (jint) 0xD, (jint) 0x8, (jint) 0xC, (jint) 0x4, (jint) 0xB, (jint) 0xA, (jint) 0x5, (jint) 0x7,
#line 97
                (jint) 0x1, (jint) 0xA, (jint) 0x6, (jint) 0x8, (jint) 0xF, (jint) 0xB, (jint) 0x0, (jint) 0x4, (jint) 0xC, (jint) 0x3, (jint) 0x5, (jint) 0x9, (jint) 0x7, (jint) 0xD, (jint) 0x2, (jint) 0xE } count:128];
                OrgBouncycastleCryptoEnginesGOST28147Engine_Param_Z = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 102
                  (jint) 0xc, (jint) 0x4, (jint) 0x6, (jint) 0x2, (jint) 0xa, (jint) 0x5, (jint) 0xb, (jint) 0x9, (jint) 0xe, (jint) 0x8, (jint) 0xd, (jint) 0x7, (jint) 0x0, (jint) 0x3, (jint) 0xf, (jint) 0x1,
#line 103
                  (jint) 0x6, (jint) 0x8, (jint) 0x2, (jint) 0x3, (jint) 0x9, (jint) 0xa, (jint) 0x5, (jint) 0xc, (jint) 0x1, (jint) 0xe, (jint) 0x4, (jint) 0x7, (jint) 0xb, (jint) 0xd, (jint) 0x0, (jint) 0xf,
#line 104
                  (jint) 0xb, (jint) 0x3, (jint) 0x5, (jint) 0x8, (jint) 0x2, (jint) 0xf, (jint) 0xa, (jint) 0xd, (jint) 0xe, (jint) 0x1, (jint) 0x7, (jint) 0x4, (jint) 0xc, (jint) 0x9, (jint) 0x6, (jint) 0x0,
#line 105
                  (jint) 0xc, (jint) 0x8, (jint) 0x2, (jint) 0x1, (jint) 0xd, (jint) 0x4, (jint) 0xf, (jint) 0x6, (jint) 0x7, (jint) 0x0, (jint) 0xa, (jint) 0x5, (jint) 0x3, (jint) 0xe, (jint) 0x9, (jint) 0xb,
#line 106
                  (jint) 0x7, (jint) 0xf, (jint) 0x5, (jint) 0xa, (jint) 0x8, (jint) 0x1, (jint) 0x6, (jint) 0xd, (jint) 0x0, (jint) 0x9, (jint) 0x3, (jint) 0xe, (jint) 0xb, (jint) 0x4, (jint) 0x2, (jint) 0xc,
#line 107
                  (jint) 0x5, (jint) 0xd, (jint) 0xf, (jint) 0x6, (jint) 0x9, (jint) 0x2, (jint) 0xc, (jint) 0xa, (jint) 0xb, (jint) 0x7, (jint) 0x8, (jint) 0x1, (jint) 0x4, (jint) 0x3, (jint) 0xe, (jint) 0x0,
#line 108
                  (jint) 0x8, (jint) 0xe, (jint) 0x2, (jint) 0x5, (jint) 0x6, (jint) 0x9, (jint) 0x1, (jint) 0xc, (jint) 0xf, (jint) 0x4, (jint) 0xb, (jint) 0x0, (jint) 0xd, (jint) 0xa, (jint) 0x3, (jint) 0x7,
#line 109
                  (jint) 0x1, (jint) 0x7, (jint) 0xe, (jint) 0xd, (jint) 0x0, (jint) 0x5, (jint) 0x8, (jint) 0x3, (jint) 0x4, (jint) 0xf, (jint) 0xa, (jint) 0x6, (jint) 0x9, (jint) 0xc, (jint) 0xb, (jint) 0x2 } count:128];
                  OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_Test = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 114
                    (jint) 0x4, (jint) 0xA, (jint) 0x9, (jint) 0x2, (jint) 0xD, (jint) 0x8, (jint) 0x0, (jint) 0xE, (jint) 0x6, (jint) 0xB, (jint) 0x1, (jint) 0xC, (jint) 0x7, (jint) 0xF, (jint) 0x5, (jint) 0x3,
#line 115
                    (jint) 0xE, (jint) 0xB, (jint) 0x4, (jint) 0xC, (jint) 0x6, (jint) 0xD, (jint) 0xF, (jint) 0xA, (jint) 0x2, (jint) 0x3, (jint) 0x8, (jint) 0x1, (jint) 0x0, (jint) 0x7, (jint) 0x5, (jint) 0x9,
#line 116
                    (jint) 0x5, (jint) 0x8, (jint) 0x1, (jint) 0xD, (jint) 0xA, (jint) 0x3, (jint) 0x4, (jint) 0x2, (jint) 0xE, (jint) 0xF, (jint) 0xC, (jint) 0x7, (jint) 0x6, (jint) 0x0, (jint) 0x9, (jint) 0xB,
#line 117
                    (jint) 0x7, (jint) 0xD, (jint) 0xA, (jint) 0x1, (jint) 0x0, (jint) 0x8, (jint) 0x9, (jint) 0xF, (jint) 0xE, (jint) 0x4, (jint) 0x6, (jint) 0xC, (jint) 0xB, (jint) 0x2, (jint) 0x5, (jint) 0x3,
#line 118
                    (jint) 0x6, (jint) 0xC, (jint) 0x7, (jint) 0x1, (jint) 0x5, (jint) 0xF, (jint) 0xD, (jint) 0x8, (jint) 0x4, (jint) 0xA, (jint) 0x9, (jint) 0xE, (jint) 0x0, (jint) 0x3, (jint) 0xB, (jint) 0x2,
#line 119
                    (jint) 0x4, (jint) 0xB, (jint) 0xA, (jint) 0x0, (jint) 0x7, (jint) 0x2, (jint) 0x1, (jint) 0xD, (jint) 0x3, (jint) 0x6, (jint) 0x8, (jint) 0x5, (jint) 0x9, (jint) 0xC, (jint) 0xF, (jint) 0xE,
#line 120
                    (jint) 0xD, (jint) 0xB, (jint) 0x4, (jint) 0x1, (jint) 0x3, (jint) 0xF, (jint) 0x5, (jint) 0x9, (jint) 0x0, (jint) 0xA, (jint) 0xE, (jint) 0x7, (jint) 0x6, (jint) 0x8, (jint) 0x2, (jint) 0xC,
#line 121
                    (jint) 0x1, (jint) 0xF, (jint) 0xD, (jint) 0x0, (jint) 0x5, (jint) 0x7, (jint) 0xA, (jint) 0x4, (jint) 0x9, (jint) 0x2, (jint) 0x3, (jint) 0xE, (jint) 0x6, (jint) 0xB, (jint) 0x8, (jint) 0xC } count:128];
                    OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_A = [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 125
                      (jint) 0xA, (jint) 0x4, (jint) 0x5, (jint) 0x6, (jint) 0x8, (jint) 0x1, (jint) 0x3, (jint) 0x7, (jint) 0xD, (jint) 0xC, (jint) 0xE, (jint) 0x0, (jint) 0x9, (jint) 0x2, (jint) 0xB, (jint) 0xF,
#line 126
                      (jint) 0x5, (jint) 0xF, (jint) 0x4, (jint) 0x0, (jint) 0x2, (jint) 0xD, (jint) 0xB, (jint) 0x9, (jint) 0x1, (jint) 0x7, (jint) 0x6, (jint) 0x3, (jint) 0xC, (jint) 0xE, (jint) 0xA, (jint) 0x8,
#line 127
                      (jint) 0x7, (jint) 0xF, (jint) 0xC, (jint) 0xE, (jint) 0x9, (jint) 0x4, (jint) 0x1, (jint) 0x0, (jint) 0x3, (jint) 0xB, (jint) 0x5, (jint) 0x2, (jint) 0x6, (jint) 0xA, (jint) 0x8, (jint) 0xD,
#line 128
                      (jint) 0x4, (jint) 0xA, (jint) 0x7, (jint) 0xC, (jint) 0x0, (jint) 0xF, (jint) 0x2, (jint) 0x8, (jint) 0xE, (jint) 0x1, (jint) 0x6, (jint) 0x5, (jint) 0xD, (jint) 0xB, (jint) 0x9, (jint) 0x3,
#line 129
                      (jint) 0x7, (jint) 0x6, (jint) 0x4, (jint) 0xB, (jint) 0x9, (jint) 0xC, (jint) 0x2, (jint) 0xA, (jint) 0x1, (jint) 0x8, (jint) 0x0, (jint) 0xE, (jint) 0xF, (jint) 0xD, (jint) 0x3, (jint) 0x5,
#line 130
                      (jint) 0x7, (jint) 0x6, (jint) 0x2, (jint) 0x4, (jint) 0xD, (jint) 0x9, (jint) 0xF, (jint) 0x0, (jint) 0xA, (jint) 0x1, (jint) 0x5, (jint) 0xB, (jint) 0x8, (jint) 0xE, (jint) 0xC, (jint) 0x3,
#line 131
                      (jint) 0xD, (jint) 0xE, (jint) 0x4, (jint) 0x1, (jint) 0x7, (jint) 0x0, (jint) 0x5, (jint) 0xA, (jint) 0x3, (jint) 0xC, (jint) 0x8, (jint) 0xF, (jint) 0x6, (jint) 0x2, (jint) 0x9, (jint) 0xB,
#line 132
                      (jint) 0x1, (jint) 0x3, (jint) 0xA, (jint) 0x9, (jint) 0x5, (jint) 0xB, (jint) 0x4, (jint) 0xF, (jint) 0x8, (jint) 0x6, (jint) 0x7, (jint) 0xE, (jint) 0xD, (jint) 0x0, (jint) 0x2, (jint) 0xC } count:128];
                      OrgBouncycastleCryptoEnginesGOST28147Engine_sBoxes = new_JavaUtilHashtable_init();
                      {
                        
#line 142
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"Default", OrgBouncycastleCryptoEnginesGOST28147Engine_Sbox_Default);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"E-TEST", OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_Test);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"E-A", OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_A);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"E-B", OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_B);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"E-C", OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_C);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"E-D", OrgBouncycastleCryptoEnginesGOST28147Engine_ESbox_D);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"Param-Z", OrgBouncycastleCryptoEnginesGOST28147Engine_Param_Z);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"D-TEST", OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_Test);
                        OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(@"D-A", OrgBouncycastleCryptoEnginesGOST28147Engine_DSbox_A);
                      }
                      J2OBJC_SET_INITIALIZED(OrgBouncycastleCryptoEnginesGOST28147Engine)
                    }
                  }

@end


#line 153
void OrgBouncycastleCryptoEnginesGOST28147Engine_addSBoxWithNSString_withByteArray_(NSString *sBoxName, IOSByteArray *sBox) {
  OrgBouncycastleCryptoEnginesGOST28147Engine_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(OrgBouncycastleCryptoEnginesGOST28147Engine_sBoxes)) putWithId:OrgBouncycastleUtilStrings_toUpperCaseWithNSString_(sBoxName) withId:sBox];
}


#line 161
void OrgBouncycastleCryptoEnginesGOST28147Engine_init(OrgBouncycastleCryptoEnginesGOST28147Engine *self) {
  NSObject_init(self);
  self->workingKey_ =
#line 22
  nil;
  self->S_ = OrgBouncycastleCryptoEnginesGOST28147Engine_Sbox_Default;
}


#line 161
OrgBouncycastleCryptoEnginesGOST28147Engine *new_OrgBouncycastleCryptoEnginesGOST28147Engine_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoEnginesGOST28147Engine, init)
}


#line 161
OrgBouncycastleCryptoEnginesGOST28147Engine *create_OrgBouncycastleCryptoEnginesGOST28147Engine_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoEnginesGOST28147Engine, init)
}


#line 256
IOSIntArray *OrgBouncycastleCryptoEnginesGOST28147Engine_generateWorkingKeyWithBoolean_withByteArray_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, jboolean forEncryption, IOSByteArray *userKey) {
  
#line 260
  self->forEncryption_ = forEncryption;
  
#line 262
  if (((IOSByteArray *) nil_chk(userKey))->size_ != 32) {
    
#line 264
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Key length invalid. Key needs to be 32 byte - 256 bit!!!");
  }
  
#line 267
  IOSIntArray *key = [IOSIntArray newArrayWithLength:8];
  for (jint i = 0; i != 8; i++) {
    
#line 270
    *IOSIntArray_GetRef(key, i) = OrgBouncycastleCryptoEnginesGOST28147Engine_bytesTointWithByteArray_withInt_(self, userKey, i * 4);
  }
  
#line 273
  return key;
}


#line 276
jint OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, jint n1, jint key) {
  
#line 278
  jint cm = (key + n1);
  
#line 282
  jint om = JreLShift32(IOSByteArray_Get(nil_chk(self->S_), 0 + ((JreRShift32(cm, (0 * 4))) & (jint) 0xF)), (0 * 4));
  om += JreLShift32(IOSByteArray_Get(self->S_, 16 + ((JreRShift32(cm, (1 * 4))) & (jint) 0xF)), (1 * 4));
  om += JreLShift32(IOSByteArray_Get(self->S_, 32 + ((JreRShift32(cm, (2 * 4))) & (jint) 0xF)), (2 * 4));
  om += JreLShift32(IOSByteArray_Get(self->S_, 48 + ((JreRShift32(cm, (3 * 4))) & (jint) 0xF)), (3 * 4));
  om += JreLShift32(IOSByteArray_Get(self->S_, 64 + ((JreRShift32(cm, (4 * 4))) & (jint) 0xF)), (4 * 4));
  om += JreLShift32(IOSByteArray_Get(self->S_, 80 + ((JreRShift32(cm, (5 * 4))) & (jint) 0xF)), (5 * 4));
  om += JreLShift32(IOSByteArray_Get(self->S_, 96 + ((JreRShift32(cm, (6 * 4))) & (jint) 0xF)), (6 * 4));
  om += JreLShift32(IOSByteArray_Get(self->S_, 112 + ((JreRShift32(cm, (7 * 4))) & (jint) 0xF)), (7 * 4));
  
#line 291
  return (JreLShift32(om, 11)) | (JreURShift32(om, (32 - 11)));
}


#line 294
void OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147FuncWithIntArray_withByteArray_withInt_withByteArray_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, IOSIntArray *workingKey, IOSByteArray *inArg, jint inOff, IOSByteArray *outArg, jint outOff) {
  
#line 301
  jint N1;
  
#line 301
  jint N2;
  
#line 301
  jint tmp;
  N1 = OrgBouncycastleCryptoEnginesGOST28147Engine_bytesTointWithByteArray_withInt_(self, inArg, inOff);
  N2 = OrgBouncycastleCryptoEnginesGOST28147Engine_bytesTointWithByteArray_withInt_(self, inArg, inOff + 4);
  
#line 305
  if (self->forEncryption_) {
    
#line 307
    for (jint k = 0; k < 3; k++) {
      
#line 309
      for (jint j = 0; j < 8; j++) {
        
#line 311
        tmp = N1;
        N1 = N2 ^ OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(self, N1, IOSIntArray_Get(nil_chk(workingKey), j));
        N2 = tmp;
      }
    }
    for (jint j = 7; j > 0; j--) {
      
#line 318
      tmp = N1;
      N1 = N2 ^ OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(self, N1, IOSIntArray_Get(nil_chk(workingKey), j));
      N2 = tmp;
    }
  }
  else {
    
#line 325
    for (jint j = 0; j < 8; j++) {
      
#line 327
      tmp = N1;
      N1 = N2 ^ OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(self, N1, IOSIntArray_Get(nil_chk(workingKey), j));
      N2 = tmp;
    }
    for (jint k = 0; k < 3; k++) {
      
#line 333
      for (jint j = 7; j >= 0; j--) {
        
#line 335
        if ((k == 2) && (j == 0)) {
          
#line 337
          break;
        }
        tmp = N1;
        N1 = N2 ^ OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(self, N1, IOSIntArray_Get(nil_chk(workingKey), j));
        N2 = tmp;
      }
    }
  }
  
#line 346
  N2 = N2 ^ OrgBouncycastleCryptoEnginesGOST28147Engine_GOST28147_mainStepWithInt_withInt_(self, N1, IOSIntArray_Get(nil_chk(workingKey), 0));
  
#line 348
  OrgBouncycastleCryptoEnginesGOST28147Engine_intTobytesWithInt_withByteArray_withInt_(self, N1, outArg, outOff);
  OrgBouncycastleCryptoEnginesGOST28147Engine_intTobytesWithInt_withByteArray_withInt_(self, N2, outArg, outOff + 4);
}


#line 353
jint OrgBouncycastleCryptoEnginesGOST28147Engine_bytesTointWithByteArray_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, IOSByteArray *inArg, jint inOff) {
  
#line 357
  return ((JreLShift32(IOSByteArray_Get(nil_chk(inArg), inOff + 3), 24)) & (jint) 0xff000000) + ((JreLShift32(IOSByteArray_Get(inArg, inOff + 2), 16)) & (jint) 0xff0000) +
#line 358
  ((JreLShift32(IOSByteArray_Get(inArg, inOff + 1), 8)) & (jint) 0xff00) + (IOSByteArray_Get(inArg, inOff) & (jint) 0xff);
}


#line 362
void OrgBouncycastleCryptoEnginesGOST28147Engine_intTobytesWithInt_withByteArray_withInt_(OrgBouncycastleCryptoEnginesGOST28147Engine *self, jint num, IOSByteArray *outArg, jint outOff) {
  
#line 367
  *IOSByteArray_GetRef(nil_chk(outArg), outOff + 3) = (jbyte) (JreURShift32(num, 24));
  *IOSByteArray_GetRef(outArg, outOff + 2) = (jbyte) (JreURShift32(num, 16));
  *IOSByteArray_GetRef(outArg, outOff + 1) = (jbyte) (JreURShift32(num, 8));
  *IOSByteArray_GetRef(outArg, outOff) = (jbyte) num;
}


#line 378
IOSByteArray *OrgBouncycastleCryptoEnginesGOST28147Engine_getSBoxWithNSString_(NSString *sBoxName) {
  OrgBouncycastleCryptoEnginesGOST28147Engine_initialize();
  
#line 381
  IOSByteArray *sBox = (IOSByteArray *) cast_chk([((JavaUtilHashtable *) nil_chk(OrgBouncycastleCryptoEnginesGOST28147Engine_sBoxes)) getWithId:OrgBouncycastleUtilStrings_toUpperCaseWithNSString_(sBoxName)], [IOSByteArray class]);
  
#line 383
  if (sBox == nil) {
    
#line 385
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unknown S-Box - possible types: \"Default\", \"E-Test\", \"E-A\", \"E-B\", \"E-C\", \"E-D\", \"Param-Z\", \"D-Test\", \"D-A\".");
  }
  
#line 389
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(sBox);
}


#line 392
NSString *OrgBouncycastleCryptoEnginesGOST28147Engine_getSBoxNameWithByteArray_(IOSByteArray *sBox) {
  OrgBouncycastleCryptoEnginesGOST28147Engine_initialize();
  for (id<JavaUtilEnumeration> en = [((JavaUtilHashtable *) nil_chk(OrgBouncycastleCryptoEnginesGOST28147Engine_sBoxes)) keys]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
    
#line 396
    NSString *name = (NSString *) cast_chk([en nextElement], [NSString class]);
    IOSByteArray *sb = (IOSByteArray *) cast_chk([((JavaUtilHashtable *) nil_chk(OrgBouncycastleCryptoEnginesGOST28147Engine_sBoxes)) getWithId:name], [IOSByteArray class]);
    if (OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(sb, sBox)) {
      
#line 400
      return name;
    }
  }
  
#line 404
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"SBOX provided did not map to a known one");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoEnginesGOST28147Engine)

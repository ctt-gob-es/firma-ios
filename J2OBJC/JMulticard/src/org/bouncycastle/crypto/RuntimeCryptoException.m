//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/RuntimeCryptoException.java
//

#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "org/bouncycastle/crypto/RuntimeCryptoException.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/RuntimeCryptoException must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/RuntimeCryptoException.java"


#line 6
@implementation OrgBouncycastleCryptoRuntimeCryptoException

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 12
- (instancetype)init {
  OrgBouncycastleCryptoRuntimeCryptoException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 21
- (instancetype)initWithNSString:(NSString *)message {
  OrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoRuntimeCryptoException = { "RuntimeCryptoException", "org.bouncycastle.crypto", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoRuntimeCryptoException;
}

@end


#line 12
void OrgBouncycastleCryptoRuntimeCryptoException_init(OrgBouncycastleCryptoRuntimeCryptoException *self) {
  JavaLangRuntimeException_init(self);
}


#line 12
OrgBouncycastleCryptoRuntimeCryptoException *new_OrgBouncycastleCryptoRuntimeCryptoException_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoRuntimeCryptoException, init)
}


#line 12
OrgBouncycastleCryptoRuntimeCryptoException *create_OrgBouncycastleCryptoRuntimeCryptoException_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoRuntimeCryptoException, init)
}


#line 21
void OrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(OrgBouncycastleCryptoRuntimeCryptoException *self, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self,
#line 24
  message);
}


#line 21
OrgBouncycastleCryptoRuntimeCryptoException *new_OrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoRuntimeCryptoException, initWithNSString_, message)
}


#line 21
OrgBouncycastleCryptoRuntimeCryptoException *create_OrgBouncycastleCryptoRuntimeCryptoException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoRuntimeCryptoException, initWithNSString_, message)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoRuntimeCryptoException)

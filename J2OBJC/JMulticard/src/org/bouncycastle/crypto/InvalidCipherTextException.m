//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/InvalidCipherTextException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "org/bouncycastle/crypto/CryptoException.h"
#include "org/bouncycastle/crypto/InvalidCipherTextException.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/crypto/InvalidCipherTextException must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/InvalidCipherTextException.java"


#line 7
@implementation OrgBouncycastleCryptoInvalidCipherTextException

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 13
- (instancetype)init {
  OrgBouncycastleCryptoInvalidCipherTextException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 22
- (instancetype)initWithNSString:(NSString *)message {
  OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_(self, message);
  return self;
}


#line 34
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;" };
  static const J2ObjcClassInfo _OrgBouncycastleCryptoInvalidCipherTextException = { "InvalidCipherTextException", "org.bouncycastle.crypto", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleCryptoInvalidCipherTextException;
}

@end


#line 13
void OrgBouncycastleCryptoInvalidCipherTextException_init(OrgBouncycastleCryptoInvalidCipherTextException *self) {
  OrgBouncycastleCryptoCryptoException_init(self);
}


#line 13
OrgBouncycastleCryptoInvalidCipherTextException *new_OrgBouncycastleCryptoInvalidCipherTextException_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoInvalidCipherTextException, init)
}


#line 13
OrgBouncycastleCryptoInvalidCipherTextException *create_OrgBouncycastleCryptoInvalidCipherTextException_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoInvalidCipherTextException, init)
}


#line 22
void OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_(OrgBouncycastleCryptoInvalidCipherTextException *self, NSString *message) {
  OrgBouncycastleCryptoCryptoException_initWithNSString_(self,
#line 25
  message);
}


#line 22
OrgBouncycastleCryptoInvalidCipherTextException *new_OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoInvalidCipherTextException, initWithNSString_, message)
}


#line 22
OrgBouncycastleCryptoInvalidCipherTextException *create_OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoInvalidCipherTextException, initWithNSString_, message)
}


#line 34
void OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleCryptoInvalidCipherTextException *self, NSString *message, JavaLangThrowable *cause) {
  OrgBouncycastleCryptoCryptoException_initWithNSString_withJavaLangThrowable_(self,
#line 38
  message, cause);
}


#line 34
OrgBouncycastleCryptoInvalidCipherTextException *new_OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgBouncycastleCryptoInvalidCipherTextException, initWithNSString_withJavaLangThrowable_, message, cause)
}


#line 34
OrgBouncycastleCryptoInvalidCipherTextException *create_OrgBouncycastleCryptoInvalidCipherTextException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleCryptoInvalidCipherTextException, initWithNSString_withJavaLangThrowable_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleCryptoInvalidCipherTextException)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/EncapsulatedSecretGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretGenerator")
#ifdef RESTRICT_OrgBouncycastleCryptoEncapsulatedSecretGenerator
#define INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretGenerator 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretGenerator 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoEncapsulatedSecretGenerator

#if !defined (OrgBouncycastleCryptoEncapsulatedSecretGenerator_) && (INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretGenerator || defined(INCLUDE_OrgBouncycastleCryptoEncapsulatedSecretGenerator))
#define OrgBouncycastleCryptoEncapsulatedSecretGenerator_

@class OrgBouncycastleCryptoParamsAsymmetricKeyParameter;
@protocol OrgBouncycastleCryptoSecretWithEncapsulation;

@protocol OrgBouncycastleCryptoEncapsulatedSecretGenerator < JavaObject >

/*!
 @brief Generate an exchange pair based on the recipient public key.
 @return An SecretWithEncapsulation derived from the recipient public key.
 */
- (id<OrgBouncycastleCryptoSecretWithEncapsulation>)generateEncapsulatedWithOrgBouncycastleCryptoParamsAsymmetricKeyParameter:(OrgBouncycastleCryptoParamsAsymmetricKeyParameter *)recipientKey;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoEncapsulatedSecretGenerator)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoEncapsulatedSecretGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretGenerator")

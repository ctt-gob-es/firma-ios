//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/EncapsulatedSecretExtractor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretExtractor")
#ifdef RESTRICT_OrgBouncycastleCryptoEncapsulatedSecretExtractor
#define INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretExtractor 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretExtractor 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoEncapsulatedSecretExtractor

#if !defined (OrgBouncycastleCryptoEncapsulatedSecretExtractor_) && (INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretExtractor || defined(INCLUDE_OrgBouncycastleCryptoEncapsulatedSecretExtractor))
#define OrgBouncycastleCryptoEncapsulatedSecretExtractor_

@class IOSByteArray;

@protocol OrgBouncycastleCryptoEncapsulatedSecretExtractor < JavaObject >

/*!
 @brief Generate an exchange pair based on the recipient public key.
 @param encapsulation the encapsulated secret.
 */
- (IOSByteArray *)extractSecretWithByteArray:(IOSByteArray *)encapsulation;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoEncapsulatedSecretExtractor)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoEncapsulatedSecretExtractor)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoEncapsulatedSecretExtractor")

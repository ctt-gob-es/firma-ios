//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/crypto/AsymmetricBlockCipher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricBlockCipher")
#ifdef RESTRICT_OrgBouncycastleCryptoAsymmetricBlockCipher
#define INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricBlockCipher 0
#else
#define INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricBlockCipher 1
#endif
#undef RESTRICT_OrgBouncycastleCryptoAsymmetricBlockCipher

#if !defined (OrgBouncycastleCryptoAsymmetricBlockCipher_) && (INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricBlockCipher || defined(INCLUDE_OrgBouncycastleCryptoAsymmetricBlockCipher))
#define OrgBouncycastleCryptoAsymmetricBlockCipher_

@class IOSByteArray;
@protocol OrgBouncycastleCryptoCipherParameters;

/*!
 @brief base interface that a public/private key block cipher needs
  to conform to.
 */
@protocol OrgBouncycastleCryptoAsymmetricBlockCipher < JavaObject >

/*!
 @brief initialise the cipher.
 @param forEncryption if true the cipher is initialised for    encryption, if false for decryption.
 @param param the key and other data required by the cipher.
 */
- (void)init__WithBoolean:(jboolean)forEncryption
withOrgBouncycastleCryptoCipherParameters:(id<OrgBouncycastleCryptoCipherParameters>)param OBJC_METHOD_FAMILY_NONE;

/*!
 @brief returns the largest size an input block can be.
 @return maximum size for an input block.
 */
- (jint)getInputBlockSize;

/*!
 @brief returns the maximum size of the block produced by this cipher.
 @return maximum size of the output block produced by the cipher.
 */
- (jint)getOutputBlockSize;

/*!
 @brief process the block of len bytes stored in in from offset inOff.
 @param inArg the input data
 @param inOff offset into the in array where the data starts
 @param len the length of the block to be processed.
 @return the resulting byte array of the encryption/decryption process.
 @throw InvalidCipherTextExceptiondata decrypts improperly.
 @throw DataLengthExceptionthe input data is too large for the cipher.
 */
- (IOSByteArray *)processBlockWithByteArray:(IOSByteArray *)inArg
                                    withInt:(jint)inOff
                                    withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleCryptoAsymmetricBlockCipher)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleCryptoAsymmetricBlockCipher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleCryptoAsymmetricBlockCipher")

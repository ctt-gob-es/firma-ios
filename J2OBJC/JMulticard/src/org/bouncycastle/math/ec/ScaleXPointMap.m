//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/ScaleXPointMap.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/math/ec/ECFieldElement.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/ec/ScaleXPointMap.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/ec/ScaleXPointMap must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/ScaleXPointMap.java"


#line 3
@implementation OrgBouncycastleMathEcScaleXPointMap


#line 7
- (instancetype)initWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_ {
  OrgBouncycastleMathEcScaleXPointMap_initWithOrgBouncycastleMathEcECFieldElement_(self, scale_);
  return self;
}

- (OrgBouncycastleMathEcECPoint *)mapWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)p {
  
#line 15
  return [((OrgBouncycastleMathEcECPoint *) nil_chk(p)) scaleXWithOrgBouncycastleMathEcECFieldElement:scale__];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleMathEcECFieldElement:);
  methods[1].selector = @selector(mapWithOrgBouncycastleMathEcECPoint:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scale__", "LOrgBouncycastleMathEcECFieldElement;", .constantValue.asLong = 0, 0x14, 3, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleMathEcECFieldElement;", "map", "LOrgBouncycastleMathEcECPoint;", "scale" };
  static const J2ObjcClassInfo _OrgBouncycastleMathEcScaleXPointMap = { "ScaleXPointMap", "org.bouncycastle.math.ec", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathEcScaleXPointMap;
}

@end


#line 7
void OrgBouncycastleMathEcScaleXPointMap_initWithOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcScaleXPointMap *self, OrgBouncycastleMathEcECFieldElement *scale_) {
  NSObject_init(self);
  self->scale__ = scale_;
}


#line 7
OrgBouncycastleMathEcScaleXPointMap *new_OrgBouncycastleMathEcScaleXPointMap_initWithOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECFieldElement *scale_) {
  J2OBJC_NEW_IMPL(OrgBouncycastleMathEcScaleXPointMap, initWithOrgBouncycastleMathEcECFieldElement_, scale_)
}


#line 7
OrgBouncycastleMathEcScaleXPointMap *create_OrgBouncycastleMathEcScaleXPointMap_initWithOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECFieldElement *scale_) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleMathEcScaleXPointMap, initWithOrgBouncycastleMathEcECFieldElement_, scale_)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcScaleXPointMap)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/custom/sec/SecP384R1Field.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathEcCustomSecSecP384R1Field")
#ifdef RESTRICT_OrgBouncycastleMathEcCustomSecSecP384R1Field
#define INCLUDE_ALL_OrgBouncycastleMathEcCustomSecSecP384R1Field 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathEcCustomSecSecP384R1Field 1
#endif
#undef RESTRICT_OrgBouncycastleMathEcCustomSecSecP384R1Field

#if !defined (OrgBouncycastleMathEcCustomSecSecP384R1Field_) && (INCLUDE_ALL_OrgBouncycastleMathEcCustomSecSecP384R1Field || defined(INCLUDE_OrgBouncycastleMathEcCustomSecSecP384R1Field))
#define OrgBouncycastleMathEcCustomSecSecP384R1Field_

@class IOSIntArray;
@class JavaMathBigInteger;
@class JavaSecuritySecureRandom;

@interface OrgBouncycastleMathEcCustomSecSecP384R1Field : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z;

+ (void)addExtWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)yy
              withIntArray:(IOSIntArray *)zz;

+ (void)addOneWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (IOSIntArray *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x;

+ (void)halfWithIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)z;

+ (void)invWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)z;

+ (jint)isZeroWithIntArray:(IOSIntArray *)x;

+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z;

+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z
                withIntArray:(IOSIntArray *)tt;

+ (void)negateWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (void)randomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)r
                              withIntArray:(IOSIntArray *)z;

+ (void)randomMultWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)r
                                  withIntArray:(IOSIntArray *)z;

+ (void)reduceWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)z;

+ (void)reduce32WithInt:(jint)x
           withIntArray:(IOSIntArray *)z;

+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z;

+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z
              withIntArray:(IOSIntArray *)tt;

+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z;

+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z
               withIntArray:(IOSIntArray *)tt;

+ (void)subtractWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z;

+ (void)subtractExtWithIntArray:(IOSIntArray *)xx
                   withIntArray:(IOSIntArray *)yy
                   withIntArray:(IOSIntArray *)zz;

+ (void)twiceWithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)z;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleMathEcCustomSecSecP384R1Field)

inline IOSIntArray *OrgBouncycastleMathEcCustomSecSecP384R1Field_get_P(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *OrgBouncycastleMathEcCustomSecSecP384R1Field_P;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleMathEcCustomSecSecP384R1Field, P, IOSIntArray *)

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_init(OrgBouncycastleMathEcCustomSecSecP384R1Field *self);

FOUNDATION_EXPORT OrgBouncycastleMathEcCustomSecSecP384R1Field *new_OrgBouncycastleMathEcCustomSecSecP384R1Field_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcCustomSecSecP384R1Field *create_OrgBouncycastleMathEcCustomSecSecP384R1Field_init(void);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_addExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_addOneWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSIntArray *OrgBouncycastleMathEcCustomSecSecP384R1Field_fromBigIntegerWithJavaMathBigInteger_(JavaMathBigInteger *x);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_halfWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_invWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgBouncycastleMathEcCustomSecSecP384R1Field_isZeroWithIntArray_(IOSIntArray *x);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_multiplyWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_multiplyWithIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z, IOSIntArray *tt);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_negateWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_randomWithJavaSecuritySecureRandom_withIntArray_(JavaSecuritySecureRandom *r, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_randomMultWithJavaSecuritySecureRandom_withIntArray_(JavaSecuritySecureRandom *r, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_reduceWithIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_reduce32WithInt_withIntArray_(jint x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_squareWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z, IOSIntArray *tt);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_squareNWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_squareNWithIntArray_withInt_withIntArray_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z, IOSIntArray *tt);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_subtractWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_subtractExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz);

FOUNDATION_EXPORT void OrgBouncycastleMathEcCustomSecSecP384R1Field_twiceWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcCustomSecSecP384R1Field)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathEcCustomSecSecP384R1Field")

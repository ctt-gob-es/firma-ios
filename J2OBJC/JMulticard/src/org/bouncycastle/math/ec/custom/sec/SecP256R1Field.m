//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/custom/sec/SecP256R1Field.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/math/ec/custom/sec/SecP256R1Field.h"
#include "org/bouncycastle/math/raw/Mod.h"
#include "org/bouncycastle/math/raw/Nat.h"
#include "org/bouncycastle/math/raw/Nat256.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/ec/custom/sec/SecP256R1Field must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleMathEcCustomSecSecP256R1Field ()

+ (void)addPInvToWithIntArray:(IOSIntArray *)z;

+ (void)subPInvFromWithIntArray:(IOSIntArray *)z;

@end

inline jlong OrgBouncycastleMathEcCustomSecSecP256R1Field_get_M(void);
#define OrgBouncycastleMathEcCustomSecSecP256R1Field_M 4294967295LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathEcCustomSecSecP256R1Field, M, jlong)

inline IOSIntArray *OrgBouncycastleMathEcCustomSecSecP256R1Field_get_PExt(void);
static IOSIntArray *OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleMathEcCustomSecSecP256R1Field, PExt, IOSIntArray *)

inline jint OrgBouncycastleMathEcCustomSecSecP256R1Field_get_P7(void);
#define OrgBouncycastleMathEcCustomSecSecP256R1Field_P7 -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathEcCustomSecSecP256R1Field, P7, jint)

inline jint OrgBouncycastleMathEcCustomSecSecP256R1Field_get_PExt15s1(void);
#define OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt15s1 2147483647
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathEcCustomSecSecP256R1Field, PExt15s1, jint)

__attribute__((unused)) static void OrgBouncycastleMathEcCustomSecSecP256R1Field_addPInvToWithIntArray_(IOSIntArray *z);

__attribute__((unused)) static void OrgBouncycastleMathEcCustomSecSecP256R1Field_subPInvFromWithIntArray_(IOSIntArray *z);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/custom/sec/SecP256R1Field.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleMathEcCustomSecSecP256R1Field)

IOSIntArray *OrgBouncycastleMathEcCustomSecSecP256R1Field_P;


#line 11
@implementation OrgBouncycastleMathEcCustomSecSecP256R1Field

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 11
- (instancetype)init {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 24
+ (void)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_addWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 33
+ (void)addExtWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)yy
              withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_addExtWithIntArray_withIntArray_withIntArray_(xx, yy, zz);
}


#line 42
+ (void)addOneWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_addOneWithIntArray_withIntArray_(x, z);
}


#line 51
+ (IOSIntArray *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  return OrgBouncycastleMathEcCustomSecSecP256R1Field_fromBigIntegerWithJavaMathBigInteger_(x);
}


#line 61
+ (void)halfWithIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_halfWithIntArray_withIntArray_(x, z);
}


#line 74
+ (void)invWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_invWithIntArray_withIntArray_(x, z);
}

+ (jint)isZeroWithIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathEcCustomSecSecP256R1Field_isZeroWithIntArray_(x);
}


#line 90
+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 97
+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z
                withIntArray:(IOSIntArray *)tt {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_withIntArray_(x, y, z, tt);
}


#line 103
+ (void)multiplyAddToExtWithIntArray:(IOSIntArray *)x
                        withIntArray:(IOSIntArray *)y
                        withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyAddToExtWithIntArray_withIntArray_withIntArray_(x, y, zz);
}


#line 112
+ (void)negateWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_negateWithIntArray_withIntArray_(x, z);
}


#line 124
+ (void)randomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)r
                              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_randomWithJavaSecuritySecureRandom_withIntArray_(r, z);
}


#line 135
+ (void)randomMultWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)r
                                  withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_randomMultWithJavaSecuritySecureRandom_withIntArray_(r, z);
}


#line 144
+ (void)reduceWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(xx, z);
}


#line 194
+ (void)reduce32WithInt:(jint)x
           withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduce32WithInt_withIntArray_(x, z);
}


#line 242
+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareWithIntArray_withIntArray_(x, z);
}


#line 249
+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z
              withIntArray:(IOSIntArray *)tt {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareWithIntArray_withIntArray_withIntArray_(x, z, tt);
}

+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(x, n, z);
}


#line 270
+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z
               withIntArray:(IOSIntArray *)tt {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_withIntArray_(x, n, z, tt);
}


#line 284
+ (void)subtractWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_subtractWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 293
+ (void)subtractExtWithIntArray:(IOSIntArray *)xx
                   withIntArray:(IOSIntArray *)yy
                   withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_subtractExtWithIntArray_withIntArray_withIntArray_(xx, yy, zz);
}


#line 302
+ (void)twiceWithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_twiceWithIntArray_withIntArray_(x, z);
}


#line 311
+ (void)addPInvToWithIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_addPInvToWithIntArray_(z);
}


#line 345
+ (void)subPInvFromWithIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_subPInvFromWithIntArray_(z);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 14, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 18, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 22, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 22, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 25, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 26, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 27, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 28, 10, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 29, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithIntArray:withIntArray:withIntArray:);
  methods[2].selector = @selector(addExtWithIntArray:withIntArray:withIntArray:);
  methods[3].selector = @selector(addOneWithIntArray:withIntArray:);
  methods[4].selector = @selector(fromBigIntegerWithJavaMathBigInteger:);
  methods[5].selector = @selector(halfWithIntArray:withIntArray:);
  methods[6].selector = @selector(invWithIntArray:withIntArray:);
  methods[7].selector = @selector(isZeroWithIntArray:);
  methods[8].selector = @selector(multiplyWithIntArray:withIntArray:withIntArray:);
  methods[9].selector = @selector(multiplyWithIntArray:withIntArray:withIntArray:withIntArray:);
  methods[10].selector = @selector(multiplyAddToExtWithIntArray:withIntArray:withIntArray:);
  methods[11].selector = @selector(negateWithIntArray:withIntArray:);
  methods[12].selector = @selector(randomWithJavaSecuritySecureRandom:withIntArray:);
  methods[13].selector = @selector(randomMultWithJavaSecuritySecureRandom:withIntArray:);
  methods[14].selector = @selector(reduceWithIntArray:withIntArray:);
  methods[15].selector = @selector(reduce32WithInt:withIntArray:);
  methods[16].selector = @selector(squareWithIntArray:withIntArray:);
  methods[17].selector = @selector(squareWithIntArray:withIntArray:withIntArray:);
  methods[18].selector = @selector(squareNWithIntArray:withInt:withIntArray:);
  methods[19].selector = @selector(squareNWithIntArray:withInt:withIntArray:withIntArray:);
  methods[20].selector = @selector(subtractWithIntArray:withIntArray:withIntArray:);
  methods[21].selector = @selector(subtractExtWithIntArray:withIntArray:withIntArray:);
  methods[22].selector = @selector(twiceWithIntArray:withIntArray:);
  methods[23].selector = @selector(addPInvToWithIntArray:);
  methods[24].selector = @selector(subPInvFromWithIntArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "M", "J", .constantValue.asLong = OrgBouncycastleMathEcCustomSecSecP256R1Field_M, 0x1a, -1, -1, -1, -1 },
    { "P", "[I", .constantValue.asLong = 0, 0x18, -1, 30, -1, -1 },
    { "PExt", "[I", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "P7", "I", .constantValue.asInt = OrgBouncycastleMathEcCustomSecSecP256R1Field_P7, 0x1a, -1, -1, -1, -1 },
    { "PExt15s1", "I", .constantValue.asInt = OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt15s1, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "[I[I[I", "addExt", "addOne", "[I[I", "fromBigInteger", "LJavaMathBigInteger;", "half", "inv", "isZero", "[I", "multiply", "[I[I[I[I", "multiplyAddToExt", "negate", "random", "LJavaSecuritySecureRandom;[I", "randomMult", "reduce", "reduce32", "I[I", "square", "squareN", "[II[I", "[II[I[I", "subtract", "subtractExt", "twice", "addPInvTo", "subPInvFrom", &OrgBouncycastleMathEcCustomSecSecP256R1Field_P, &OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt };
  static const J2ObjcClassInfo _OrgBouncycastleMathEcCustomSecSecP256R1Field = { "SecP256R1Field", "org.bouncycastle.math.ec.custom.sec", ptrTable, methods, fields, 7, 0x1, 25, 5, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathEcCustomSecSecP256R1Field;
}

+ (void)initialize {
  if (self == [OrgBouncycastleMathEcCustomSecSecP256R1Field class]) {
    OrgBouncycastleMathEcCustomSecSecP256R1Field_P = [IOSIntArray newArrayWithInts:(jint[]){
#line 16
      (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0x00000000, (jint) 0x00000000, (jint) 0x00000000,
#line 17
      (jint) 0x00000001, (jint) 0xFFFFFFFF } count:8];
      OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt = [IOSIntArray newArrayWithInts:(jint[]){
#line 18
        (jint) 0x00000001, (jint) 0x00000000, (jint) 0x00000000, (jint) 0xFFFFFFFE, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF,
#line 19
        (jint) 0xFFFFFFFE, (jint) 0x00000001, (jint) 0xFFFFFFFE, (jint) 0x00000001, (jint) 0xFFFFFFFE, (jint) 0x00000001, (jint) 0x00000001, (jint) 0xFFFFFFFE, (jint) 0x00000002,
#line 20
        (jint) 0xFFFFFFFE } count:16];
        J2OBJC_SET_INITIALIZED(OrgBouncycastleMathEcCustomSecSecP256R1Field)
      }
    }

@end


#line 11
void OrgBouncycastleMathEcCustomSecSecP256R1Field_init(OrgBouncycastleMathEcCustomSecSecP256R1Field *self) {
  NSObject_init(self);
}


#line 11
OrgBouncycastleMathEcCustomSecSecP256R1Field *new_OrgBouncycastleMathEcCustomSecSecP256R1Field_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleMathEcCustomSecSecP256R1Field, init)
}


#line 11
OrgBouncycastleMathEcCustomSecSecP256R1Field *create_OrgBouncycastleMathEcCustomSecSecP256R1Field_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleMathEcCustomSecSecP256R1Field, init)
}


#line 24
void OrgBouncycastleMathEcCustomSecSecP256R1Field_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat256_addWithIntArray_withIntArray_withIntArray_(x, y, z);
  if (c != 0 || (IOSIntArray_Get(nil_chk(z), 7) == OrgBouncycastleMathEcCustomSecSecP256R1Field_P7 && OrgBouncycastleMathRawNat256_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP256R1Field_P))) {
    
#line 29
    OrgBouncycastleMathEcCustomSecSecP256R1Field_addPInvToWithIntArray_(z);
  }
}


#line 33
void OrgBouncycastleMathEcCustomSecSecP256R1Field_addExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat_addWithInt_withIntArray_withIntArray_withIntArray_(16, xx, yy, zz);
  if (c != 0 || ((JreURShift32(IOSIntArray_Get(nil_chk(zz), 15), 1)) >= OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt15s1 && OrgBouncycastleMathRawNat_gteWithInt_withIntArray_withIntArray_(16, zz, OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt))) {
    
#line 38
    OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withIntArray_(16, OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt, zz);
  }
}


#line 42
void OrgBouncycastleMathEcCustomSecSecP256R1Field_addOneWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat_incWithInt_withIntArray_withIntArray_(8, x, z);
  if (c != 0 || (IOSIntArray_Get(nil_chk(z), 7) == OrgBouncycastleMathEcCustomSecSecP256R1Field_P7 && OrgBouncycastleMathRawNat256_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP256R1Field_P))) {
    
#line 47
    OrgBouncycastleMathEcCustomSecSecP256R1Field_addPInvToWithIntArray_(z);
  }
}


#line 51
IOSIntArray *OrgBouncycastleMathEcCustomSecSecP256R1Field_fromBigIntegerWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  IOSIntArray *z = OrgBouncycastleMathRawNat256_fromBigIntegerWithJavaMathBigInteger_(x);
  if (IOSIntArray_Get(nil_chk(z), 7) == OrgBouncycastleMathEcCustomSecSecP256R1Field_P7 && OrgBouncycastleMathRawNat256_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP256R1Field_P)) {
    
#line 56
    OrgBouncycastleMathRawNat256_subFromWithIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP256R1Field_P, z);
  }
  return z;
}


#line 61
void OrgBouncycastleMathEcCustomSecSecP256R1Field_halfWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  if ((IOSIntArray_Get(nil_chk(x), 0) & 1) == 0) {
    
#line 65
    OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withIntArray_(8, x, 0, z);
  }
  else {
    
#line 69
    jint c = OrgBouncycastleMathRawNat256_addWithIntArray_withIntArray_withIntArray_(x, OrgBouncycastleMathEcCustomSecSecP256R1Field_P, z);
    OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_(8, z, c);
  }
}


#line 74
void OrgBouncycastleMathEcCustomSecSecP256R1Field_invWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  OrgBouncycastleMathRawMod_checkedModOddInverseWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP256R1Field_P, x, z);
}

jint OrgBouncycastleMathEcCustomSecSecP256R1Field_isZeroWithIntArray_(IOSIntArray *x) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint d = 0;
  for (jint i = 0; i < 8; ++i) {
    
#line 84
    d |= IOSIntArray_Get(nil_chk(x), i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 90
void OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  IOSIntArray *tt = OrgBouncycastleMathRawNat256_createExt();
  OrgBouncycastleMathRawNat256_mulWithIntArray_withIntArray_withIntArray_(x, y, tt);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyWithIntArray_withIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z, IOSIntArray *tt) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  OrgBouncycastleMathRawNat256_mulWithIntArray_withIntArray_withIntArray_(x, y, tt);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void OrgBouncycastleMathEcCustomSecSecP256R1Field_multiplyAddToExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat256_mulAddToWithIntArray_withIntArray_withIntArray_(x, y, zz);
  if (c != 0 || ((JreURShift32(IOSIntArray_Get(nil_chk(zz), 15), 1)) >= OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt15s1 && OrgBouncycastleMathRawNat_gteWithInt_withIntArray_withIntArray_(16, zz, OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt))) {
    
#line 108
    OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withIntArray_(16, OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt, zz);
  }
}


#line 112
void OrgBouncycastleMathEcCustomSecSecP256R1Field_negateWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  if (0 != OrgBouncycastleMathEcCustomSecSecP256R1Field_isZeroWithIntArray_(x)) {
    
#line 116
    OrgBouncycastleMathRawNat256_subWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP256R1Field_P, OrgBouncycastleMathEcCustomSecSecP256R1Field_P, z);
  }
  else {
    
#line 120
    OrgBouncycastleMathRawNat256_subWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP256R1Field_P, x, z);
  }
}


#line 124
void OrgBouncycastleMathEcCustomSecSecP256R1Field_randomWithJavaSecuritySecureRandom_withIntArray_(JavaSecuritySecureRandom *r, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  IOSByteArray *bb = [IOSByteArray newArrayWithLength:8 * 4];
  do {
    
#line 129
    [((JavaSecuritySecureRandom *) nil_chk(r)) nextBytesWithByteArray:bb];
    OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bb, 0, z, 0, 8);
  }
  while (0 == OrgBouncycastleMathRawNat_lessThanWithInt_withIntArray_withIntArray_(8, z, OrgBouncycastleMathEcCustomSecSecP256R1Field_P));
}


#line 135
void OrgBouncycastleMathEcCustomSecSecP256R1Field_randomMultWithJavaSecuritySecureRandom_withIntArray_(JavaSecuritySecureRandom *r, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  do {
    
#line 139
    OrgBouncycastleMathEcCustomSecSecP256R1Field_randomWithJavaSecuritySecureRandom_withIntArray_(r, z);
  }
  while (0 != OrgBouncycastleMathEcCustomSecSecP256R1Field_isZeroWithIntArray_(z));
}


#line 144
void OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jlong xx08 = IOSIntArray_Get(nil_chk(xx), 8) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  
#line 146
  jlong xx09 = IOSIntArray_Get(xx, 9) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  
#line 146
  jlong xx10 = IOSIntArray_Get(xx, 10) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  
#line 146
  jlong xx11 = IOSIntArray_Get(xx, 11) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  jlong xx12 = IOSIntArray_Get(xx, 12) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  
#line 147
  jlong xx13 = IOSIntArray_Get(xx, 13) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  
#line 147
  jlong xx14 = IOSIntArray_Get(xx, 14) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  
#line 147
  jlong xx15 = IOSIntArray_Get(xx, 15) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
  
#line 149
  jlong n = 6;
  
#line 151
  xx08 -= n;
  
#line 153
  jlong t0 = xx08 + xx09;
  jlong t1 = xx09 + xx10;
  jlong t2 = xx10 + xx11 - xx15;
  jlong t3 = xx11 + xx12;
  jlong t4 = xx12 + xx13;
  jlong t5 = xx13 + xx14;
  jlong t6 = xx14 + xx15;
  jlong t7 = t5 - t0;
  
#line 162
  jlong cc = 0;
  cc += (IOSIntArray_Get(xx, 0) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) - t3 - t7;
  *IOSIntArray_GetRef(nil_chk(z), 0) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += (IOSIntArray_Get(xx, 1) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + t1 - t4 - t6;
  *IOSIntArray_GetRef(z, 1) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += (IOSIntArray_Get(xx, 2) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + t2 - t5;
  *IOSIntArray_GetRef(z, 2) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += (IOSIntArray_Get(xx, 3) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + (JreLShift64(t3, 1)) + t7 - t6;
  *IOSIntArray_GetRef(z, 3) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += (IOSIntArray_Get(xx, 4) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + (JreLShift64(t4, 1)) + xx14 - t1;
  *IOSIntArray_GetRef(z, 4) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += (IOSIntArray_Get(xx, 5) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + (JreLShift64(t5, 1)) - t2;
  *IOSIntArray_GetRef(z, 5) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += (IOSIntArray_Get(xx, 6) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + (JreLShift64(t6, 1)) + t7;
  *IOSIntArray_GetRef(z, 6) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += (IOSIntArray_Get(xx, 7) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + (JreLShift64(xx15, 1)) + xx08 - t2 - t4;
  *IOSIntArray_GetRef(z, 7) = (jint) cc;
  JreRShiftAssignLong(&cc, 32);
  cc += n;
  
#line 191
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduce32WithInt_withIntArray_((jint) cc, z);
}


#line 194
void OrgBouncycastleMathEcCustomSecSecP256R1Field_reduce32WithInt_withIntArray_(jint x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jlong cc = 0;
  
#line 198
  if (x != 0) {
    
#line 200
    jlong xx08 = x & OrgBouncycastleMathEcCustomSecSecP256R1Field_M;
    
#line 202
    cc += (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + xx08;
    *IOSIntArray_GetRef(z, 0) = (jint) cc;
    JreRShiftAssignLong(&cc, 32);
    if (cc != 0) {
      
#line 207
      cc += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
      *IOSIntArray_GetRef(z, 1) = (jint) cc;
      JreRShiftAssignLong(&cc, 32);
      cc += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
      *IOSIntArray_GetRef(z, 2) = (jint) cc;
      JreRShiftAssignLong(&cc, 32);
    }
    cc += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) - xx08;
    *IOSIntArray_GetRef(z, 3) = (jint) cc;
    JreRShiftAssignLong(&cc, 32);
    if (cc != 0) {
      
#line 219
      cc += (IOSIntArray_Get(z, 4) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
      *IOSIntArray_GetRef(z, 4) = (jint) cc;
      JreRShiftAssignLong(&cc, 32);
      cc += (IOSIntArray_Get(z, 5) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
      *IOSIntArray_GetRef(z, 5) = (jint) cc;
      JreRShiftAssignLong(&cc, 32);
    }
    cc += (IOSIntArray_Get(z, 6) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) - xx08;
    *IOSIntArray_GetRef(z, 6) = (jint) cc;
    JreRShiftAssignLong(&cc, 32);
    cc += (IOSIntArray_Get(z, 7) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + xx08;
    *IOSIntArray_GetRef(z, 7) = (jint) cc;
    JreRShiftAssignLong(&cc, 32);
  }
  
#line 236
  if (cc != 0 || (IOSIntArray_Get(nil_chk(z), 7) == OrgBouncycastleMathEcCustomSecSecP256R1Field_P7 && OrgBouncycastleMathRawNat256_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP256R1Field_P))) {
    
#line 238
    OrgBouncycastleMathEcCustomSecSecP256R1Field_addPInvToWithIntArray_(z);
  }
}


#line 242
void OrgBouncycastleMathEcCustomSecSecP256R1Field_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  IOSIntArray *tt = OrgBouncycastleMathRawNat256_createExt();
  OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(x, tt);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void OrgBouncycastleMathEcCustomSecSecP256R1Field_squareWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z, IOSIntArray *tt) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(x, tt);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  
#line 259
  IOSIntArray *tt = OrgBouncycastleMathRawNat256_createExt();
  OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(x, tt);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
  
#line 263
  while (--n > 0) {
    
#line 265
    OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(z, tt);
    OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
  }
}


#line 270
void OrgBouncycastleMathEcCustomSecSecP256R1Field_squareNWithIntArray_withInt_withIntArray_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z, IOSIntArray *tt) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  
#line 274
  OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(x, tt);
  OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
  
#line 277
  while (--n > 0) {
    
#line 279
    OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(z, tt);
    OrgBouncycastleMathEcCustomSecSecP256R1Field_reduceWithIntArray_withIntArray_(tt, z);
  }
}


#line 284
void OrgBouncycastleMathEcCustomSecSecP256R1Field_subtractWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat256_subWithIntArray_withIntArray_withIntArray_(x, y, z);
  if (c != 0) {
    
#line 289
    OrgBouncycastleMathEcCustomSecSecP256R1Field_subPInvFromWithIntArray_(z);
  }
}


#line 293
void OrgBouncycastleMathEcCustomSecSecP256R1Field_subtractExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat_subWithInt_withIntArray_withIntArray_withIntArray_(16, xx, yy, zz);
  if (c != 0) {
    
#line 298
    OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withIntArray_(16, OrgBouncycastleMathEcCustomSecSecP256R1Field_PExt, zz);
  }
}


#line 302
void OrgBouncycastleMathEcCustomSecSecP256R1Field_twiceWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withIntArray_(8, x, 0, z);
  if (c != 0 || (IOSIntArray_Get(nil_chk(z), 7) == OrgBouncycastleMathEcCustomSecSecP256R1Field_P7 && OrgBouncycastleMathRawNat256_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP256R1Field_P))) {
    
#line 307
    OrgBouncycastleMathEcCustomSecSecP256R1Field_addPInvToWithIntArray_(z);
  }
}


#line 311
void OrgBouncycastleMathEcCustomSecSecP256R1Field_addPInvToWithIntArray_(IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + 1;
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  if (c != 0) {
    
#line 318
    c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 1) = (jint) c;
    JreRShiftAssignLong(&c, 32);
    c += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 2) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  c += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) - 1;
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  if (c != 0) {
    
#line 330
    c += (IOSIntArray_Get(z, 4) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 4) = (jint) c;
    JreRShiftAssignLong(&c, 32);
    c += (IOSIntArray_Get(z, 5) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 5) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  c += (IOSIntArray_Get(z, 6) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) - 1;
  *IOSIntArray_GetRef(z, 6) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 7) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + 1;
  *IOSIntArray_GetRef(z, 7) = (jint) c;
}


#line 345
void OrgBouncycastleMathEcCustomSecSecP256R1Field_subPInvFromWithIntArray_(IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP256R1Field_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) - 1;
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  if (c != 0) {
    
#line 352
    c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 1) = (jint) c;
    JreRShiftAssignLong(&c, 32);
    c += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 2) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  c += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + 1;
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  if (c != 0) {
    
#line 364
    c += (IOSIntArray_Get(z, 4) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 4) = (jint) c;
    JreRShiftAssignLong(&c, 32);
    c += (IOSIntArray_Get(z, 5) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M);
    *IOSIntArray_GetRef(z, 5) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  c += (IOSIntArray_Get(z, 6) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) + 1;
  *IOSIntArray_GetRef(z, 6) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 7) & OrgBouncycastleMathEcCustomSecSecP256R1Field_M) - 1;
  *IOSIntArray_GetRef(z, 7) = (jint) c;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcCustomSecSecP256R1Field)

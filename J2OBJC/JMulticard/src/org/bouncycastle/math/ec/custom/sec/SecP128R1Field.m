//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/custom/sec/SecP128R1Field.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/SecureRandom.h"
#include "org/bouncycastle/math/ec/custom/sec/SecP128R1Field.h"
#include "org/bouncycastle/math/raw/Mod.h"
#include "org/bouncycastle/math/raw/Nat.h"
#include "org/bouncycastle/math/raw/Nat128.h"
#include "org/bouncycastle/math/raw/Nat256.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/ec/custom/sec/SecP128R1Field must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleMathEcCustomSecSecP128R1Field ()

+ (void)addPInvToWithIntArray:(IOSIntArray *)z;

+ (void)subPInvFromWithIntArray:(IOSIntArray *)z;

@end

inline jlong OrgBouncycastleMathEcCustomSecSecP128R1Field_get_M(void);
#define OrgBouncycastleMathEcCustomSecSecP128R1Field_M 4294967295LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathEcCustomSecSecP128R1Field, M, jlong)

inline IOSIntArray *OrgBouncycastleMathEcCustomSecSecP128R1Field_get_PExt(void);
static IOSIntArray *OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleMathEcCustomSecSecP128R1Field, PExt, IOSIntArray *)

inline IOSIntArray *OrgBouncycastleMathEcCustomSecSecP128R1Field_get_PExtInv(void);
static IOSIntArray *OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleMathEcCustomSecSecP128R1Field, PExtInv, IOSIntArray *)

inline jint OrgBouncycastleMathEcCustomSecSecP128R1Field_get_P3s1(void);
#define OrgBouncycastleMathEcCustomSecSecP128R1Field_P3s1 2147483646
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathEcCustomSecSecP128R1Field, P3s1, jint)

inline jint OrgBouncycastleMathEcCustomSecSecP128R1Field_get_PExt7s1(void);
#define OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt7s1 2147483646
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathEcCustomSecSecP128R1Field, PExt7s1, jint)

__attribute__((unused)) static void OrgBouncycastleMathEcCustomSecSecP128R1Field_addPInvToWithIntArray_(IOSIntArray *z);

__attribute__((unused)) static void OrgBouncycastleMathEcCustomSecSecP128R1Field_subPInvFromWithIntArray_(IOSIntArray *z);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/custom/sec/SecP128R1Field.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleMathEcCustomSecSecP128R1Field)

IOSIntArray *OrgBouncycastleMathEcCustomSecSecP128R1Field_P;


#line 12
@implementation OrgBouncycastleMathEcCustomSecSecP128R1Field

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 12
- (instancetype)init {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 25
+ (void)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_addWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 34
+ (void)addExtWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)yy
              withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_addExtWithIntArray_withIntArray_withIntArray_(xx, yy, zz);
}


#line 43
+ (void)addOneWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_addOneWithIntArray_withIntArray_(x, z);
}


#line 52
+ (IOSIntArray *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  return OrgBouncycastleMathEcCustomSecSecP128R1Field_fromBigIntegerWithJavaMathBigInteger_(x);
}


#line 62
+ (void)halfWithIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_halfWithIntArray_withIntArray_(x, z);
}


#line 75
+ (void)invWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_invWithIntArray_withIntArray_(x, z);
}

+ (jint)isZeroWithIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathEcCustomSecSecP128R1Field_isZeroWithIntArray_(x);
}


#line 91
+ (void)multiplyWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 98
+ (void)multiplyAddToExtWithIntArray:(IOSIntArray *)x
                        withIntArray:(IOSIntArray *)y
                        withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_multiplyAddToExtWithIntArray_withIntArray_withIntArray_(x, y, zz);
}


#line 107
+ (void)negateWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_negateWithIntArray_withIntArray_(x, z);
}


#line 119
+ (void)randomWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)r
                              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_randomWithJavaSecuritySecureRandom_withIntArray_(r, z);
}


#line 130
+ (void)randomMultWithJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)r
                                  withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_randomMultWithJavaSecuritySecureRandom_withIntArray_(r, z);
}


#line 139
+ (void)reduceWithIntArray:(IOSIntArray *)xx
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_reduceWithIntArray_withIntArray_(xx, z);
}


#line 157
+ (void)reduce32WithInt:(jint)x
           withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_reduce32WithInt_withIntArray_(x, z);
}


#line 186
+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_squareWithIntArray_withIntArray_(x, z);
}


#line 193
+ (void)squareNWithIntArray:(IOSIntArray *)x
                    withInt:(jint)n
               withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(x, n, z);
}


#line 208
+ (void)subtractWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_subtractWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 217
+ (void)subtractExtWithIntArray:(IOSIntArray *)xx
                   withIntArray:(IOSIntArray *)yy
                   withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_subtractExtWithIntArray_withIntArray_withIntArray_(xx, yy, zz);
}


#line 226
+ (void)twiceWithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_twiceWithIntArray_withIntArray_(x, z);
}


#line 235
+ (void)addPInvToWithIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_addPInvToWithIntArray_(z);
}


#line 250
+ (void)subPInvFromWithIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_subPInvFromWithIntArray_(z);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 12, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 13, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 16, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 17, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 23, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 24, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 25, 4, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 26, 10, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 27, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithIntArray:withIntArray:withIntArray:);
  methods[2].selector = @selector(addExtWithIntArray:withIntArray:withIntArray:);
  methods[3].selector = @selector(addOneWithIntArray:withIntArray:);
  methods[4].selector = @selector(fromBigIntegerWithJavaMathBigInteger:);
  methods[5].selector = @selector(halfWithIntArray:withIntArray:);
  methods[6].selector = @selector(invWithIntArray:withIntArray:);
  methods[7].selector = @selector(isZeroWithIntArray:);
  methods[8].selector = @selector(multiplyWithIntArray:withIntArray:withIntArray:);
  methods[9].selector = @selector(multiplyAddToExtWithIntArray:withIntArray:withIntArray:);
  methods[10].selector = @selector(negateWithIntArray:withIntArray:);
  methods[11].selector = @selector(randomWithJavaSecuritySecureRandom:withIntArray:);
  methods[12].selector = @selector(randomMultWithJavaSecuritySecureRandom:withIntArray:);
  methods[13].selector = @selector(reduceWithIntArray:withIntArray:);
  methods[14].selector = @selector(reduce32WithInt:withIntArray:);
  methods[15].selector = @selector(squareWithIntArray:withIntArray:);
  methods[16].selector = @selector(squareNWithIntArray:withInt:withIntArray:);
  methods[17].selector = @selector(subtractWithIntArray:withIntArray:withIntArray:);
  methods[18].selector = @selector(subtractExtWithIntArray:withIntArray:withIntArray:);
  methods[19].selector = @selector(twiceWithIntArray:withIntArray:);
  methods[20].selector = @selector(addPInvToWithIntArray:);
  methods[21].selector = @selector(subPInvFromWithIntArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "M", "J", .constantValue.asLong = OrgBouncycastleMathEcCustomSecSecP128R1Field_M, 0x1a, -1, -1, -1, -1 },
    { "P", "[I", .constantValue.asLong = 0, 0x18, -1, 28, -1, -1 },
    { "PExt", "[I", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "PExtInv", "[I", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "P3s1", "I", .constantValue.asInt = OrgBouncycastleMathEcCustomSecSecP128R1Field_P3s1, 0x1a, -1, -1, -1, -1 },
    { "PExt7s1", "I", .constantValue.asInt = OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt7s1, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "[I[I[I", "addExt", "addOne", "[I[I", "fromBigInteger", "LJavaMathBigInteger;", "half", "inv", "isZero", "[I", "multiply", "multiplyAddToExt", "negate", "random", "LJavaSecuritySecureRandom;[I", "randomMult", "reduce", "reduce32", "I[I", "square", "squareN", "[II[I", "subtract", "subtractExt", "twice", "addPInvTo", "subPInvFrom", &OrgBouncycastleMathEcCustomSecSecP128R1Field_P, &OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt, &OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv };
  static const J2ObjcClassInfo _OrgBouncycastleMathEcCustomSecSecP128R1Field = { "SecP128R1Field", "org.bouncycastle.math.ec.custom.sec", ptrTable, methods, fields, 7, 0x1, 22, 6, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathEcCustomSecSecP128R1Field;
}

+ (void)initialize {
  if (self == [OrgBouncycastleMathEcCustomSecSecP128R1Field class]) {
    OrgBouncycastleMathEcCustomSecSecP128R1Field_P = [IOSIntArray newArrayWithInts:(jint[]){
#line 17
      (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFD } count:4];
      OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt = [IOSIntArray newArrayWithInts:(jint[]){
#line 18
        (jint) 0x00000001, (jint) 0x00000000, (jint) 0x00000000, (jint) 0x00000004, (jint) 0xFFFFFFFE, (jint) 0xFFFFFFFF,
#line 19
        (jint) 0x00000003, (jint) 0xFFFFFFFC } count:8];
        OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv = [IOSIntArray newArrayWithInts:(jint[]){
#line 20
          (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFF, (jint) 0xFFFFFFFB, (jint) 0x00000001,
#line 21
          (jint) 0x00000000, (jint) 0xFFFFFFFC, (jint) 0x00000003 } count:8];
          J2OBJC_SET_INITIALIZED(OrgBouncycastleMathEcCustomSecSecP128R1Field)
        }
      }

@end


#line 12
void OrgBouncycastleMathEcCustomSecSecP128R1Field_init(OrgBouncycastleMathEcCustomSecSecP128R1Field *self) {
  NSObject_init(self);
}


#line 12
OrgBouncycastleMathEcCustomSecSecP128R1Field *new_OrgBouncycastleMathEcCustomSecSecP128R1Field_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleMathEcCustomSecSecP128R1Field, init)
}


#line 12
OrgBouncycastleMathEcCustomSecSecP128R1Field *create_OrgBouncycastleMathEcCustomSecSecP128R1Field_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleMathEcCustomSecSecP128R1Field, init)
}


#line 25
void OrgBouncycastleMathEcCustomSecSecP128R1Field_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat128_addWithIntArray_withIntArray_withIntArray_(x, y, z);
  if (c != 0 || ((JreURShift32(IOSIntArray_Get(nil_chk(z), 3), 1)) >= OrgBouncycastleMathEcCustomSecSecP128R1Field_P3s1 && OrgBouncycastleMathRawNat128_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP128R1Field_P))) {
    
#line 30
    OrgBouncycastleMathEcCustomSecSecP128R1Field_addPInvToWithIntArray_(z);
  }
}


#line 34
void OrgBouncycastleMathEcCustomSecSecP128R1Field_addExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat256_addWithIntArray_withIntArray_withIntArray_(xx, yy, zz);
  if (c != 0 || ((JreURShift32(IOSIntArray_Get(nil_chk(zz), 7), 1)) >= OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt7s1 && OrgBouncycastleMathRawNat256_gteWithIntArray_withIntArray_(zz, OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt))) {
    
#line 39
    OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withIntArray_(((IOSIntArray *) nil_chk(OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv))->size_, OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv, zz);
  }
}


#line 43
void OrgBouncycastleMathEcCustomSecSecP128R1Field_addOneWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat_incWithInt_withIntArray_withIntArray_(4, x, z);
  if (c != 0 || ((JreURShift32(IOSIntArray_Get(nil_chk(z), 3), 1)) >= OrgBouncycastleMathEcCustomSecSecP128R1Field_P3s1 && OrgBouncycastleMathRawNat128_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP128R1Field_P))) {
    
#line 48
    OrgBouncycastleMathEcCustomSecSecP128R1Field_addPInvToWithIntArray_(z);
  }
}


#line 52
IOSIntArray *OrgBouncycastleMathEcCustomSecSecP128R1Field_fromBigIntegerWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  IOSIntArray *z = OrgBouncycastleMathRawNat128_fromBigIntegerWithJavaMathBigInteger_(x);
  if ((JreURShift32(IOSIntArray_Get(nil_chk(z), 3), 1)) >= OrgBouncycastleMathEcCustomSecSecP128R1Field_P3s1 && OrgBouncycastleMathRawNat128_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP128R1Field_P)) {
    
#line 57
    OrgBouncycastleMathRawNat128_subFromWithIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP128R1Field_P, z);
  }
  return z;
}


#line 62
void OrgBouncycastleMathEcCustomSecSecP128R1Field_halfWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  if ((IOSIntArray_Get(nil_chk(x), 0) & 1) == 0) {
    
#line 66
    OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withIntArray_(4, x, 0, z);
  }
  else {
    
#line 70
    jint c = OrgBouncycastleMathRawNat128_addWithIntArray_withIntArray_withIntArray_(x, OrgBouncycastleMathEcCustomSecSecP128R1Field_P, z);
    OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_(4, z, c);
  }
}


#line 75
void OrgBouncycastleMathEcCustomSecSecP128R1Field_invWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  OrgBouncycastleMathRawMod_checkedModOddInverseWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP128R1Field_P, x, z);
}

jint OrgBouncycastleMathEcCustomSecSecP128R1Field_isZeroWithIntArray_(IOSIntArray *x) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint d = 0;
  for (jint i = 0; i < 4; ++i) {
    
#line 85
    d |= IOSIntArray_Get(nil_chk(x), i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 91
void OrgBouncycastleMathEcCustomSecSecP128R1Field_multiplyWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  IOSIntArray *tt = OrgBouncycastleMathRawNat128_createExt();
  OrgBouncycastleMathRawNat128_mulWithIntArray_withIntArray_withIntArray_(x, y, tt);
  OrgBouncycastleMathEcCustomSecSecP128R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void OrgBouncycastleMathEcCustomSecSecP128R1Field_multiplyAddToExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat128_mulAddToWithIntArray_withIntArray_withIntArray_(x, y, zz);
  if (c != 0 || ((JreURShift32(IOSIntArray_Get(nil_chk(zz), 7), 1)) >= OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt7s1 && OrgBouncycastleMathRawNat256_gteWithIntArray_withIntArray_(zz, OrgBouncycastleMathEcCustomSecSecP128R1Field_PExt))) {
    
#line 103
    OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withIntArray_(((IOSIntArray *) nil_chk(OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv))->size_, OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv, zz);
  }
}


#line 107
void OrgBouncycastleMathEcCustomSecSecP128R1Field_negateWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  if (0 != OrgBouncycastleMathEcCustomSecSecP128R1Field_isZeroWithIntArray_(x)) {
    
#line 111
    OrgBouncycastleMathRawNat128_subWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP128R1Field_P, OrgBouncycastleMathEcCustomSecSecP128R1Field_P, z);
  }
  else {
    
#line 115
    OrgBouncycastleMathRawNat128_subWithIntArray_withIntArray_withIntArray_(OrgBouncycastleMathEcCustomSecSecP128R1Field_P, x, z);
  }
}


#line 119
void OrgBouncycastleMathEcCustomSecSecP128R1Field_randomWithJavaSecuritySecureRandom_withIntArray_(JavaSecuritySecureRandom *r, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  IOSByteArray *bb = [IOSByteArray newArrayWithLength:4 * 4];
  do {
    
#line 124
    [((JavaSecuritySecureRandom *) nil_chk(r)) nextBytesWithByteArray:bb];
    OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bb, 0, z, 0, 4);
  }
  while (0 == OrgBouncycastleMathRawNat_lessThanWithInt_withIntArray_withIntArray_(4, z, OrgBouncycastleMathEcCustomSecSecP128R1Field_P));
}


#line 130
void OrgBouncycastleMathEcCustomSecSecP128R1Field_randomMultWithJavaSecuritySecureRandom_withIntArray_(JavaSecuritySecureRandom *r, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  do {
    
#line 134
    OrgBouncycastleMathEcCustomSecSecP128R1Field_randomWithJavaSecuritySecureRandom_withIntArray_(r, z);
  }
  while (0 != OrgBouncycastleMathEcCustomSecSecP128R1Field_isZeroWithIntArray_(z));
}


#line 139
void OrgBouncycastleMathEcCustomSecSecP128R1Field_reduceWithIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jlong x0 = IOSIntArray_Get(nil_chk(xx), 0) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  
#line 141
  jlong x1 = IOSIntArray_Get(xx, 1) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  
#line 141
  jlong x2 = IOSIntArray_Get(xx, 2) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  
#line 141
  jlong x3 = IOSIntArray_Get(xx, 3) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  jlong x4 = IOSIntArray_Get(xx, 4) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  
#line 142
  jlong x5 = IOSIntArray_Get(xx, 5) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  
#line 142
  jlong x6 = IOSIntArray_Get(xx, 6) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  
#line 142
  jlong x7 = IOSIntArray_Get(xx, 7) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
  
#line 144
  x3 += x7;
  
#line 144
  x6 += (JreLShift64(x7, 1));
  x2 += x6;
  
#line 145
  x5 += (JreLShift64(x6, 1));
  x1 += x5;
  
#line 146
  x4 += (JreLShift64(x5, 1));
  x0 += x4;
  
#line 147
  x3 += (JreLShift64(x4, 1));
  
#line 149
  *IOSIntArray_GetRef(nil_chk(z), 0) = (jint) x0;
  
#line 149
  x1 += (JreURShift64(x0, 32));
  *IOSIntArray_GetRef(z, 1) = (jint) x1;
  
#line 150
  x2 += (JreURShift64(x1, 32));
  *IOSIntArray_GetRef(z, 2) = (jint) x2;
  
#line 151
  x3 += (JreURShift64(x2, 32));
  *IOSIntArray_GetRef(z, 3) = (jint) x3;
  
#line 154
  OrgBouncycastleMathEcCustomSecSecP128R1Field_reduce32WithInt_withIntArray_((jint) (JreURShift64(x3, 32)), z);
}


#line 157
void OrgBouncycastleMathEcCustomSecSecP128R1Field_reduce32WithInt_withIntArray_(jint x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  while (x != 0) {
    
#line 161
    jlong c;
    
#line 161
    jlong x4 = x & OrgBouncycastleMathEcCustomSecSecP128R1Field_M;
    
#line 163
    c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M) + x4;
    *IOSIntArray_GetRef(z, 0) = (jint) c;
    
#line 164
    JreRShiftAssignLong(&c, 32);
    if (c != 0) {
      
#line 167
      c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M);
      *IOSIntArray_GetRef(z, 1) = (jint) c;
      
#line 168
      JreRShiftAssignLong(&c, 32);
      c += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M);
      *IOSIntArray_GetRef(z, 2) = (jint) c;
      
#line 170
      JreRShiftAssignLong(&c, 32);
    }
    c += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M) + (JreLShift64(x4, 1));
    *IOSIntArray_GetRef(z, 3) = (jint) c;
    
#line 173
    JreRShiftAssignLong(&c, 32);
    
#line 177
    x = (jint) c;
  }
  
#line 180
  if ((JreURShift32(IOSIntArray_Get(nil_chk(z), 3), 1)) >= OrgBouncycastleMathEcCustomSecSecP128R1Field_P3s1 && OrgBouncycastleMathRawNat128_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP128R1Field_P)) {
    
#line 182
    OrgBouncycastleMathEcCustomSecSecP128R1Field_addPInvToWithIntArray_(z);
  }
}


#line 186
void OrgBouncycastleMathEcCustomSecSecP128R1Field_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  IOSIntArray *tt = OrgBouncycastleMathRawNat128_createExt();
  OrgBouncycastleMathRawNat128_squareWithIntArray_withIntArray_(x, tt);
  OrgBouncycastleMathEcCustomSecSecP128R1Field_reduceWithIntArray_withIntArray_(tt, z);
}

void OrgBouncycastleMathEcCustomSecSecP128R1Field_squareNWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint n, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  
#line 197
  IOSIntArray *tt = OrgBouncycastleMathRawNat128_createExt();
  OrgBouncycastleMathRawNat128_squareWithIntArray_withIntArray_(x, tt);
  OrgBouncycastleMathEcCustomSecSecP128R1Field_reduceWithIntArray_withIntArray_(tt, z);
  
#line 201
  while (--n > 0) {
    
#line 203
    OrgBouncycastleMathRawNat128_squareWithIntArray_withIntArray_(z, tt);
    OrgBouncycastleMathEcCustomSecSecP128R1Field_reduceWithIntArray_withIntArray_(tt, z);
  }
}


#line 208
void OrgBouncycastleMathEcCustomSecSecP128R1Field_subtractWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat128_subWithIntArray_withIntArray_withIntArray_(x, y, z);
  if (c != 0) {
    
#line 213
    OrgBouncycastleMathEcCustomSecSecP128R1Field_subPInvFromWithIntArray_(z);
  }
}


#line 217
void OrgBouncycastleMathEcCustomSecSecP128R1Field_subtractExtWithIntArray_withIntArray_withIntArray_(IOSIntArray *xx, IOSIntArray *yy, IOSIntArray *zz) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat_subWithInt_withIntArray_withIntArray_withIntArray_(10, xx, yy, zz);
  if (c != 0) {
    
#line 222
    OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withIntArray_(((IOSIntArray *) nil_chk(OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv))->size_, OrgBouncycastleMathEcCustomSecSecP128R1Field_PExtInv, zz);
  }
}


#line 226
void OrgBouncycastleMathEcCustomSecSecP128R1Field_twiceWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jint c = OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withIntArray_(4, x, 0, z);
  if (c != 0 || ((JreURShift32(IOSIntArray_Get(nil_chk(z), 3), 1)) >= OrgBouncycastleMathEcCustomSecSecP128R1Field_P3s1 && OrgBouncycastleMathRawNat128_gteWithIntArray_withIntArray_(z, OrgBouncycastleMathEcCustomSecSecP128R1Field_P))) {
    
#line 231
    OrgBouncycastleMathEcCustomSecSecP128R1Field_addPInvToWithIntArray_(z);
  }
}


#line 235
void OrgBouncycastleMathEcCustomSecSecP128R1Field_addPInvToWithIntArray_(IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M) + 1;
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  
#line 238
  JreRShiftAssignLong(&c, 32);
  if (c != 0) {
    
#line 241
    c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M);
    *IOSIntArray_GetRef(z, 1) = (jint) c;
    
#line 242
    JreRShiftAssignLong(&c, 32);
    c += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M);
    *IOSIntArray_GetRef(z, 2) = (jint) c;
    
#line 244
    JreRShiftAssignLong(&c, 32);
  }
  c += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M) + 2;
  *IOSIntArray_GetRef(z, 3) = (jint) c;
}


#line 250
void OrgBouncycastleMathEcCustomSecSecP128R1Field_subPInvFromWithIntArray_(IOSIntArray *z) {
  OrgBouncycastleMathEcCustomSecSecP128R1Field_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M) - 1;
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  
#line 253
  JreRShiftAssignLong(&c, 32);
  if (c != 0) {
    
#line 256
    c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M);
    *IOSIntArray_GetRef(z, 1) = (jint) c;
    
#line 257
    JreRShiftAssignLong(&c, 32);
    c += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M);
    *IOSIntArray_GetRef(z, 2) = (jint) c;
    
#line 259
    JreRShiftAssignLong(&c, 32);
  }
  c += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathEcCustomSecSecP128R1Field_M) - 2;
  *IOSIntArray_GetRef(z, 3) = (jint) c;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcCustomSecSecP128R1Field)

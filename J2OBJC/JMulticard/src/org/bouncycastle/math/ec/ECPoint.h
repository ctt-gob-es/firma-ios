//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/ECPoint.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathEcECPoint")
#ifdef RESTRICT_OrgBouncycastleMathEcECPoint
#define INCLUDE_ALL_OrgBouncycastleMathEcECPoint 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathEcECPoint 1
#endif
#undef RESTRICT_OrgBouncycastleMathEcECPoint
#ifdef INCLUDE_OrgBouncycastleMathEcECPoint_F2m
#define INCLUDE_OrgBouncycastleMathEcECPoint_AbstractF2m 1
#endif
#ifdef INCLUDE_OrgBouncycastleMathEcECPoint_AbstractF2m
#define INCLUDE_OrgBouncycastleMathEcECPoint 1
#endif
#ifdef INCLUDE_OrgBouncycastleMathEcECPoint_Fp
#define INCLUDE_OrgBouncycastleMathEcECPoint_AbstractFp 1
#endif
#ifdef INCLUDE_OrgBouncycastleMathEcECPoint_AbstractFp
#define INCLUDE_OrgBouncycastleMathEcECPoint 1
#endif

#if !defined (OrgBouncycastleMathEcECPoint_) && (INCLUDE_ALL_OrgBouncycastleMathEcECPoint || defined(INCLUDE_OrgBouncycastleMathEcECPoint))
#define OrgBouncycastleMathEcECPoint_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaMathBigInteger;
@class JavaUtilHashtable;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECFieldElement;

/*!
 @brief base class for points on elliptic curves.
 */
@interface OrgBouncycastleMathEcECPoint : NSObject {
 @public
  OrgBouncycastleMathEcECCurve *curve_;
  OrgBouncycastleMathEcECFieldElement *x_;
  OrgBouncycastleMathEcECFieldElement *y_;
  IOSObjectArray *zs_;
  JavaUtilHashtable *preCompTable_;
}

#pragma mark Public

- (OrgBouncycastleMathEcECPoint *)addWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

- (jboolean)equalsWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)other;

- (jboolean)isEqual:(id)other;

/*!
 @brief Returns the affine x-coordinate after checking that this point is normalized.
 @return The affine x-coordinate of this point
 @throw IllegalStateExceptionif the point is not normalized
 */
- (OrgBouncycastleMathEcECFieldElement *)getAffineXCoord;

/*!
 @brief Returns the affine y-coordinate after checking that this point is normalized
 @return The affine y-coordinate of this point
 @throw IllegalStateExceptionif the point is not normalized
 */
- (OrgBouncycastleMathEcECFieldElement *)getAffineYCoord;

- (OrgBouncycastleMathEcECCurve *)getCurve;

- (OrgBouncycastleMathEcECPoint *)getDetachedPoint;

/*!
 @brief Get an encoding of the point value, optionally in compressed format.
 @param compressed whether to generate a compressed point encoding.
 @return the point encoding
 */
- (IOSByteArray *)getEncodedWithBoolean:(jboolean)compressed;

- (OrgBouncycastleMathEcECFieldElement *)getRawXCoord;

- (OrgBouncycastleMathEcECFieldElement *)getRawYCoord;

/*!
 @brief Returns the x-coordinate.
 Caution: depending on the curve's coordinate system, this may not be the same value as in an
  affine coordinate system; use normalize() to get a point where the coordinates have their
  affine values, or use getAffineXCoord() if you expect the point to already have been
  normalized.
 @return the x-coordinate of this point
 */
- (OrgBouncycastleMathEcECFieldElement *)getXCoord;

/*!
 @brief Returns the y-coordinate.
 Caution: depending on the curve's coordinate system, this may not be the same value as in an
  affine coordinate system; use normalize() to get a point where the coordinates have their
  affine values, or use getAffineYCoord() if you expect the point to already have been
  normalized.
 @return the y-coordinate of this point
 */
- (OrgBouncycastleMathEcECFieldElement *)getYCoord;

- (OrgBouncycastleMathEcECFieldElement *)getZCoordWithInt:(jint)index;

- (IOSObjectArray *)getZCoords;

- (NSUInteger)hash;

- (jboolean)isInfinity;

- (jboolean)isNormalized;

- (jboolean)isValid;

/*!
 @brief Multiplies this <code>ECPoint</code> by the given number.
 @param k The multiplicator.
 @return <code>k * this</code>.
 */
- (OrgBouncycastleMathEcECPoint *)multiplyWithJavaMathBigInteger:(JavaMathBigInteger *)k;

- (OrgBouncycastleMathEcECPoint *)negate;

/*!
 @brief Normalization ensures that any projective coordinate is 1, and therefore that the x, y
  coordinates reflect those of the equivalent point in an affine coordinate system.
 @return a new ECPoint instance representing the same point, but with normalized coordinates
 */
- (OrgBouncycastleMathEcECPoint *)normalize;

- (OrgBouncycastleMathEcECPoint *)scaleXWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)scaleXNegateYWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)scaleYWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)scaleYNegateXWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)subtractWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

- (OrgBouncycastleMathEcECPoint *)threeTimes;

- (OrgBouncycastleMathEcECPoint *)timesPow2WithInt:(jint)e;

- (NSString *)description;

- (OrgBouncycastleMathEcECPoint *)twice;

- (OrgBouncycastleMathEcECPoint *)twicePlusWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

#pragma mark Protected

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y
        withOrgBouncycastleMathEcECFieldElementArray:(IOSObjectArray *)zs;

- (void)checkNormalized;

- (OrgBouncycastleMathEcECPoint *)createScaledPointWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)sx
                                                   withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)sy;

- (OrgBouncycastleMathEcECPoint *)detach;

- (jboolean)getCompressionYTilde;

- (jint)getCurveCoordinateSystem;

+ (IOSObjectArray *)getInitialZCoordsWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve;

- (IOSObjectArray *)getRawZCoords;

- (jboolean)satisfiesCurveEquation;

- (jboolean)satisfiesOrder;

#pragma mark Package-Private

- (jboolean)implIsValidWithBoolean:(jboolean)decompressed
                       withBoolean:(jboolean)checkOrder;

- (jboolean)isValidPartial;

- (OrgBouncycastleMathEcECPoint *)normalizeWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)zInv;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleMathEcECPoint)

J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECPoint, curve_, OrgBouncycastleMathEcECCurve *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECPoint, x_, OrgBouncycastleMathEcECFieldElement *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECPoint, y_, OrgBouncycastleMathEcECFieldElement *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECPoint, zs_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcECPoint, preCompTable_, JavaUtilHashtable *)

inline IOSObjectArray *OrgBouncycastleMathEcECPoint_get_EMPTY_ZS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *OrgBouncycastleMathEcECPoint_EMPTY_ZS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleMathEcECPoint, EMPTY_ZS, IOSObjectArray *)

FOUNDATION_EXPORT IOSObjectArray *OrgBouncycastleMathEcECPoint_getInitialZCoordsWithOrgBouncycastleMathEcECCurve_(OrgBouncycastleMathEcECCurve *curve);

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECPoint *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y);

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECPoint *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECPoint)

#endif

#if !defined (OrgBouncycastleMathEcECPoint_AbstractFp_) && (INCLUDE_ALL_OrgBouncycastleMathEcECPoint || defined(INCLUDE_OrgBouncycastleMathEcECPoint_AbstractFp))
#define OrgBouncycastleMathEcECPoint_AbstractFp_

@class IOSObjectArray;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECFieldElement;
@class OrgBouncycastleMathEcECPoint;

@interface OrgBouncycastleMathEcECPoint_AbstractFp : OrgBouncycastleMathEcECPoint

#pragma mark Public

- (OrgBouncycastleMathEcECPoint *)subtractWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

#pragma mark Protected

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y
        withOrgBouncycastleMathEcECFieldElementArray:(IOSObjectArray *)zs;

- (jboolean)getCompressionYTilde;

- (jboolean)satisfiesCurveEquation;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcECPoint_AbstractFp)

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_AbstractFp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECPoint_AbstractFp *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y);

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_AbstractFp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECPoint_AbstractFp *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECPoint_AbstractFp)

#endif

#if !defined (OrgBouncycastleMathEcECPoint_Fp_) && (INCLUDE_ALL_OrgBouncycastleMathEcECPoint || defined(INCLUDE_OrgBouncycastleMathEcECPoint_Fp))
#define OrgBouncycastleMathEcECPoint_Fp_

@class IOSObjectArray;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECFieldElement;
@class OrgBouncycastleMathEcECPoint;

/*!
 @brief Elliptic curve points over Fp
 */
@interface OrgBouncycastleMathEcECPoint_Fp : OrgBouncycastleMathEcECPoint_AbstractFp

#pragma mark Public

- (OrgBouncycastleMathEcECPoint *)addWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

- (OrgBouncycastleMathEcECFieldElement *)getZCoordWithInt:(jint)index;

- (OrgBouncycastleMathEcECPoint *)negate;

- (OrgBouncycastleMathEcECPoint *)threeTimes;

- (OrgBouncycastleMathEcECPoint *)timesPow2WithInt:(jint)e;

- (OrgBouncycastleMathEcECPoint *)twice;

- (OrgBouncycastleMathEcECPoint *)twicePlusWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

#pragma mark Protected

- (OrgBouncycastleMathEcECFieldElement *)calculateJacobianModifiedWWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)Z
                                                                   withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)ZSquared;

- (OrgBouncycastleMathEcECPoint *)detach;

- (OrgBouncycastleMathEcECFieldElement *)doubleProductFromSquaresWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)a
                                                                 withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)b
                                                                 withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)aSquared
                                                                 withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)bSquared;

- (OrgBouncycastleMathEcECFieldElement *)eightWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x;

- (OrgBouncycastleMathEcECFieldElement *)fourWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x;

- (OrgBouncycastleMathEcECFieldElement *)getJacobianModifiedW;

- (OrgBouncycastleMathEcECFieldElement *)threeWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x;

- (OrgBouncycastleMathEcECPoint_Fp *)twiceJacobianModifiedWithBoolean:(jboolean)calculateW;

- (OrgBouncycastleMathEcECFieldElement *)twoWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y
        withOrgBouncycastleMathEcECFieldElementArray:(IOSObjectArray *)zs;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcECPoint_Fp)

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_Fp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECPoint_Fp *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_Fp *new_OrgBouncycastleMathEcECPoint_Fp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_Fp *create_OrgBouncycastleMathEcECPoint_Fp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y);

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_Fp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECPoint_Fp *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_Fp *new_OrgBouncycastleMathEcECPoint_Fp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_Fp *create_OrgBouncycastleMathEcECPoint_Fp_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECPoint_Fp)

#endif

#if !defined (OrgBouncycastleMathEcECPoint_AbstractF2m_) && (INCLUDE_ALL_OrgBouncycastleMathEcECPoint || defined(INCLUDE_OrgBouncycastleMathEcECPoint_AbstractF2m))
#define OrgBouncycastleMathEcECPoint_AbstractF2m_

@class IOSObjectArray;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECFieldElement;
@class OrgBouncycastleMathEcECPoint;

@interface OrgBouncycastleMathEcECPoint_AbstractF2m : OrgBouncycastleMathEcECPoint

#pragma mark Public

- (OrgBouncycastleMathEcECPoint *)scaleXWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)scaleXNegateYWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)scaleYWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)scaleYNegateXWithOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)scale_;

- (OrgBouncycastleMathEcECPoint *)subtractWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

- (OrgBouncycastleMathEcECPoint_AbstractF2m *)tau;

- (OrgBouncycastleMathEcECPoint_AbstractF2m *)tauPowWithInt:(jint)pow;

#pragma mark Protected

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y
        withOrgBouncycastleMathEcECFieldElementArray:(IOSObjectArray *)zs;

- (jboolean)satisfiesCurveEquation;

- (jboolean)satisfiesOrder;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcECPoint_AbstractF2m)

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_AbstractF2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECPoint_AbstractF2m *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y);

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_AbstractF2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECPoint_AbstractF2m *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECPoint_AbstractF2m)

#endif

#if !defined (OrgBouncycastleMathEcECPoint_F2m_) && (INCLUDE_ALL_OrgBouncycastleMathEcECPoint || defined(INCLUDE_OrgBouncycastleMathEcECPoint_F2m))
#define OrgBouncycastleMathEcECPoint_F2m_

@class IOSObjectArray;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECFieldElement;
@class OrgBouncycastleMathEcECPoint;

/*!
 @brief Elliptic curve points over F2m
 */
@interface OrgBouncycastleMathEcECPoint_F2m : OrgBouncycastleMathEcECPoint_AbstractF2m

#pragma mark Public

- (OrgBouncycastleMathEcECPoint *)addWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

- (OrgBouncycastleMathEcECFieldElement *)getYCoord;

- (OrgBouncycastleMathEcECPoint *)negate;

- (OrgBouncycastleMathEcECPoint *)twice;

- (OrgBouncycastleMathEcECPoint *)twicePlusWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)b;

#pragma mark Protected

- (OrgBouncycastleMathEcECPoint *)detach;

- (jboolean)getCompressionYTilde;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)x
             withOrgBouncycastleMathEcECFieldElement:(OrgBouncycastleMathEcECFieldElement *)y
        withOrgBouncycastleMathEcECFieldElementArray:(IOSObjectArray *)zs;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcECPoint_F2m)

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_F2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECPoint_F2m *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_F2m *new_OrgBouncycastleMathEcECPoint_F2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_F2m *create_OrgBouncycastleMathEcECPoint_F2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y);

FOUNDATION_EXPORT void OrgBouncycastleMathEcECPoint_F2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECPoint_F2m *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_F2m *new_OrgBouncycastleMathEcECPoint_F2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint_F2m *create_OrgBouncycastleMathEcECPoint_F2m_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElement_withOrgBouncycastleMathEcECFieldElementArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECFieldElement *x, OrgBouncycastleMathEcECFieldElement *y, IOSObjectArray *zs);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcECPoint_F2m)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathEcECPoint")

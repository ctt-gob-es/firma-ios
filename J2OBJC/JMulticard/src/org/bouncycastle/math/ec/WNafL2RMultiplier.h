//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/WNafL2RMultiplier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathEcWNafL2RMultiplier")
#ifdef RESTRICT_OrgBouncycastleMathEcWNafL2RMultiplier
#define INCLUDE_ALL_OrgBouncycastleMathEcWNafL2RMultiplier 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathEcWNafL2RMultiplier 1
#endif
#undef RESTRICT_OrgBouncycastleMathEcWNafL2RMultiplier

#if !defined (OrgBouncycastleMathEcWNafL2RMultiplier_) && (INCLUDE_ALL_OrgBouncycastleMathEcWNafL2RMultiplier || defined(INCLUDE_OrgBouncycastleMathEcWNafL2RMultiplier))
#define OrgBouncycastleMathEcWNafL2RMultiplier_

#define RESTRICT_OrgBouncycastleMathEcAbstractECMultiplier 1
#define INCLUDE_OrgBouncycastleMathEcAbstractECMultiplier 1
#include "org/bouncycastle/math/ec/AbstractECMultiplier.h"

@class JavaMathBigInteger;
@class OrgBouncycastleMathEcECPoint;

/*!
 @brief Class implementing the WNAF (Window Non-Adjacent Form) multiplication
  algorithm.
 */
@interface OrgBouncycastleMathEcWNafL2RMultiplier : OrgBouncycastleMathEcAbstractECMultiplier

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

/*!
 @brief Multiplies <code>this</code> by an integer <code>k</code> using the
  Window NAF method.
 @param k The integer by which  <code> this </code>  is multiplied.
 @return A new <code>ECPoint</code> which equals <code>this</code>
  multiplied by <code>k</code>.
 */
- (OrgBouncycastleMathEcECPoint *)multiplyPositiveWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)p
                                                            withJavaMathBigInteger:(JavaMathBigInteger *)k;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcWNafL2RMultiplier)

FOUNDATION_EXPORT void OrgBouncycastleMathEcWNafL2RMultiplier_init(OrgBouncycastleMathEcWNafL2RMultiplier *self);

FOUNDATION_EXPORT OrgBouncycastleMathEcWNafL2RMultiplier *new_OrgBouncycastleMathEcWNafL2RMultiplier_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcWNafL2RMultiplier *create_OrgBouncycastleMathEcWNafL2RMultiplier_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcWNafL2RMultiplier)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathEcWNafL2RMultiplier")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/FixedPointPreCompInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathEcFixedPointPreCompInfo")
#ifdef RESTRICT_OrgBouncycastleMathEcFixedPointPreCompInfo
#define INCLUDE_ALL_OrgBouncycastleMathEcFixedPointPreCompInfo 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathEcFixedPointPreCompInfo 1
#endif
#undef RESTRICT_OrgBouncycastleMathEcFixedPointPreCompInfo

#if !defined (OrgBouncycastleMathEcFixedPointPreCompInfo_) && (INCLUDE_ALL_OrgBouncycastleMathEcFixedPointPreCompInfo || defined(INCLUDE_OrgBouncycastleMathEcFixedPointPreCompInfo))
#define OrgBouncycastleMathEcFixedPointPreCompInfo_

#define RESTRICT_OrgBouncycastleMathEcPreCompInfo 1
#define INCLUDE_OrgBouncycastleMathEcPreCompInfo 1
#include "org/bouncycastle/math/ec/PreCompInfo.h"

@class OrgBouncycastleMathEcECPoint;
@protocol OrgBouncycastleMathEcECLookupTable;

/*!
 @brief Class holding precomputation data for fixed-point multiplications.
 */
@interface OrgBouncycastleMathEcFixedPointPreCompInfo : NSObject < OrgBouncycastleMathEcPreCompInfo > {
 @public
  OrgBouncycastleMathEcECPoint *offset_;
  /*!
   @brief Lookup table for the precomputed <code>ECPoint</code>s used for a fixed point multiplication.
   */
  id<OrgBouncycastleMathEcECLookupTable> lookupTable_;
  /*!
   @brief The width used for the precomputation.If a larger width precomputation
  is already available this may be larger than was requested, so calling
  code should refer to the actual width.
   */
  jint width_;
}

#pragma mark Public

- (instancetype)init;

- (id<OrgBouncycastleMathEcECLookupTable>)getLookupTable;

- (OrgBouncycastleMathEcECPoint *)getOffset;

- (jint)getWidth;

- (void)setLookupTableWithOrgBouncycastleMathEcECLookupTable:(id<OrgBouncycastleMathEcECLookupTable>)lookupTable;

- (void)setOffsetWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)offset;

- (void)setWidthWithInt:(jint)width;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcFixedPointPreCompInfo)

J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcFixedPointPreCompInfo, offset_, OrgBouncycastleMathEcECPoint *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcFixedPointPreCompInfo, lookupTable_, id<OrgBouncycastleMathEcECLookupTable>)

FOUNDATION_EXPORT void OrgBouncycastleMathEcFixedPointPreCompInfo_init(OrgBouncycastleMathEcFixedPointPreCompInfo *self);

FOUNDATION_EXPORT OrgBouncycastleMathEcFixedPointPreCompInfo *new_OrgBouncycastleMathEcFixedPointPreCompInfo_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcFixedPointPreCompInfo *create_OrgBouncycastleMathEcFixedPointPreCompInfo_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcFixedPointPreCompInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathEcFixedPointPreCompInfo")

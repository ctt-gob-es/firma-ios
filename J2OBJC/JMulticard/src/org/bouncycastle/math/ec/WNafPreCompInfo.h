//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/WNafPreCompInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathEcWNafPreCompInfo")
#ifdef RESTRICT_OrgBouncycastleMathEcWNafPreCompInfo
#define INCLUDE_ALL_OrgBouncycastleMathEcWNafPreCompInfo 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathEcWNafPreCompInfo 1
#endif
#undef RESTRICT_OrgBouncycastleMathEcWNafPreCompInfo

#if !defined (OrgBouncycastleMathEcWNafPreCompInfo_) && (INCLUDE_ALL_OrgBouncycastleMathEcWNafPreCompInfo || defined(INCLUDE_OrgBouncycastleMathEcWNafPreCompInfo))
#define OrgBouncycastleMathEcWNafPreCompInfo_

#define RESTRICT_OrgBouncycastleMathEcPreCompInfo 1
#define INCLUDE_OrgBouncycastleMathEcPreCompInfo 1
#include "org/bouncycastle/math/ec/PreCompInfo.h"

@class IOSObjectArray;
@class OrgBouncycastleMathEcECPoint;

/*!
 @brief Class holding precomputation data for the WNAF (Window Non-Adjacent Form)
  algorithm.
 */
@interface OrgBouncycastleMathEcWNafPreCompInfo : NSObject < OrgBouncycastleMathEcPreCompInfo > {
 @public
  volatile_jint promotionCountdown_;
  jint confWidth_;
  /*!
   @brief Array holding the precomputed <code>ECPoint</code>s used for a Window
  NAF multiplication.
   */
  IOSObjectArray *preComp_;
  /*!
   @brief Array holding the negations of the precomputed <code>ECPoint</code>s used
  for a Window NAF multiplication.
   */
  IOSObjectArray *preCompNeg_;
  /*!
   @brief Holds an <code>ECPoint</code> representing twice(this).Used for the
  Window NAF multiplication to create or extend the precomputed values.
   */
  OrgBouncycastleMathEcECPoint *twice_;
  jint width_;
}

#pragma mark Public

- (instancetype)init;

- (jint)getConfWidth;

- (IOSObjectArray *)getPreComp;

- (IOSObjectArray *)getPreCompNeg;

- (OrgBouncycastleMathEcECPoint *)getTwice;

- (jint)getWidth;

- (jboolean)isPromoted;

- (void)setConfWidthWithInt:(jint)confWidth;

- (void)setPreCompWithOrgBouncycastleMathEcECPointArray:(IOSObjectArray *)preComp;

- (void)setPreCompNegWithOrgBouncycastleMathEcECPointArray:(IOSObjectArray *)preCompNeg;

- (void)setTwiceWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)twice;

- (void)setWidthWithInt:(jint)width;

#pragma mark Package-Private

- (jint)decrementPromotionCountdown;

- (jint)getPromotionCountdown;

- (void)setPromotionCountdownWithInt:(jint)promotionCountdown;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcWNafPreCompInfo)

J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcWNafPreCompInfo, preComp_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcWNafPreCompInfo, preCompNeg_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleMathEcWNafPreCompInfo, twice_, OrgBouncycastleMathEcECPoint *)

FOUNDATION_EXPORT void OrgBouncycastleMathEcWNafPreCompInfo_init(OrgBouncycastleMathEcWNafPreCompInfo *self);

FOUNDATION_EXPORT OrgBouncycastleMathEcWNafPreCompInfo *new_OrgBouncycastleMathEcWNafPreCompInfo_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathEcWNafPreCompInfo *create_OrgBouncycastleMathEcWNafPreCompInfo_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcWNafPreCompInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathEcWNafPreCompInfo")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/endo/EndoUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathEcEndoEndoUtil")
#ifdef RESTRICT_OrgBouncycastleMathEcEndoEndoUtil
#define INCLUDE_ALL_OrgBouncycastleMathEcEndoEndoUtil 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathEcEndoEndoUtil 1
#endif
#undef RESTRICT_OrgBouncycastleMathEcEndoEndoUtil

#if !defined (OrgBouncycastleMathEcEndoEndoUtil_) && (INCLUDE_ALL_OrgBouncycastleMathEcEndoEndoUtil || defined(INCLUDE_OrgBouncycastleMathEcEndoEndoUtil))
#define OrgBouncycastleMathEcEndoEndoUtil_

@class IOSObjectArray;
@class JavaMathBigInteger;
@class OrgBouncycastleMathEcECPoint;
@class OrgBouncycastleMathEcEndoScalarSplitParameters;
@protocol OrgBouncycastleMathEcEndoECEndomorphism;

@interface OrgBouncycastleMathEcEndoEndoUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSObjectArray *)decomposeScalarWithOrgBouncycastleMathEcEndoScalarSplitParameters:(OrgBouncycastleMathEcEndoScalarSplitParameters *)p
                                                               withJavaMathBigInteger:(JavaMathBigInteger *)k;

+ (OrgBouncycastleMathEcECPoint *)mapPointWithOrgBouncycastleMathEcEndoECEndomorphism:(id<OrgBouncycastleMathEcEndoECEndomorphism>)endomorphism
                                                     withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)p;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathEcEndoEndoUtil)

inline NSString *OrgBouncycastleMathEcEndoEndoUtil_get_PRECOMP_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgBouncycastleMathEcEndoEndoUtil_PRECOMP_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleMathEcEndoEndoUtil, PRECOMP_NAME, NSString *)

FOUNDATION_EXPORT void OrgBouncycastleMathEcEndoEndoUtil_init(OrgBouncycastleMathEcEndoEndoUtil *self);

FOUNDATION_EXPORT IOSObjectArray *OrgBouncycastleMathEcEndoEndoUtil_decomposeScalarWithOrgBouncycastleMathEcEndoScalarSplitParameters_withJavaMathBigInteger_(OrgBouncycastleMathEcEndoScalarSplitParameters *p, JavaMathBigInteger *k);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint *OrgBouncycastleMathEcEndoEndoUtil_mapPointWithOrgBouncycastleMathEcEndoECEndomorphism_withOrgBouncycastleMathEcECPoint_(id<OrgBouncycastleMathEcEndoECEndomorphism> endomorphism, OrgBouncycastleMathEcECPoint *p);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathEcEndoEndoUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathEcEndoEndoUtil")

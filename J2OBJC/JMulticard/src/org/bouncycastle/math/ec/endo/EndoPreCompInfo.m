//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/endo/EndoPreCompInfo.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/ec/endo/ECEndomorphism.h"
#include "org/bouncycastle/math/ec/endo/EndoPreCompInfo.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/ec/endo/EndoPreCompInfo must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/endo/EndoPreCompInfo.java"


#line 6
@implementation OrgBouncycastleMathEcEndoEndoPreCompInfo

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 6
- (instancetype)init {
  OrgBouncycastleMathEcEndoEndoPreCompInfo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgBouncycastleMathEcEndoECEndomorphism>)getEndomorphism {
  
#line 14
  return endomorphism_;
}


#line 17
- (void)setEndomorphismWithOrgBouncycastleMathEcEndoECEndomorphism:(id<OrgBouncycastleMathEcEndoECEndomorphism>)endomorphism {
  
#line 19
  self->endomorphism_ = endomorphism;
}


#line 22
- (OrgBouncycastleMathEcECPoint *)getMappedPoint {
  
#line 24
  return mappedPoint_;
}


#line 27
- (void)setMappedPointWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)mappedPoint {
  
#line 29
  self->mappedPoint_ = mappedPoint;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcEndoECEndomorphism;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getEndomorphism);
  methods[2].selector = @selector(setEndomorphismWithOrgBouncycastleMathEcEndoECEndomorphism:);
  methods[3].selector = @selector(getMappedPoint);
  methods[4].selector = @selector(setMappedPointWithOrgBouncycastleMathEcECPoint:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "endomorphism_", "LOrgBouncycastleMathEcEndoECEndomorphism;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "mappedPoint_", "LOrgBouncycastleMathEcECPoint;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setEndomorphism", "LOrgBouncycastleMathEcEndoECEndomorphism;", "setMappedPoint", "LOrgBouncycastleMathEcECPoint;" };
  static const J2ObjcClassInfo _OrgBouncycastleMathEcEndoEndoPreCompInfo = { "EndoPreCompInfo", "org.bouncycastle.math.ec.endo", ptrTable, methods, fields, 7, 0x1, 5, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathEcEndoEndoPreCompInfo;
}

@end


#line 6
void OrgBouncycastleMathEcEndoEndoPreCompInfo_init(OrgBouncycastleMathEcEndoEndoPreCompInfo *self) {
  NSObject_init(self);
}


#line 6
OrgBouncycastleMathEcEndoEndoPreCompInfo *new_OrgBouncycastleMathEcEndoEndoPreCompInfo_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleMathEcEndoEndoPreCompInfo, init)
}


#line 6
OrgBouncycastleMathEcEndoEndoPreCompInfo *create_OrgBouncycastleMathEcEndoEndoPreCompInfo_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleMathEcEndoEndoPreCompInfo, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcEndoEndoPreCompInfo)

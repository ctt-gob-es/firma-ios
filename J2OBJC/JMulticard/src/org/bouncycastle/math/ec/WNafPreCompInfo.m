//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/WNafPreCompInfo.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/ec/WNafPreCompInfo.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/ec/WNafPreCompInfo must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/WNafPreCompInfo.java"


#line 7
@implementation OrgBouncycastleMathEcWNafPreCompInfo

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 7
- (instancetype)init {
  OrgBouncycastleMathEcWNafPreCompInfo_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 33
- (jint)decrementPromotionCountdown {
  
#line 35
  jint t = JreLoadVolatileInt(&promotionCountdown_);
  if (t > 0) {
    
#line 38
    JreAssignVolatileInt(&promotionCountdown_, --t);
  }
  return t;
}


#line 43
- (jint)getPromotionCountdown {
  
#line 45
  return JreLoadVolatileInt(&promotionCountdown_);
}


#line 48
- (void)setPromotionCountdownWithInt:(jint)promotionCountdown {
  
#line 50
  JreAssignVolatileInt(&self->promotionCountdown_, promotionCountdown);
}


#line 53
- (jboolean)isPromoted {
  
#line 55
  return JreLoadVolatileInt(&promotionCountdown_) <= 0;
}


#line 58
- (jint)getConfWidth {
  
#line 60
  return confWidth_;
}


#line 63
- (void)setConfWidthWithInt:(jint)confWidth {
  
#line 65
  self->confWidth_ = confWidth;
}


#line 68
- (IOSObjectArray *)getPreComp {
  
#line 70
  return preComp_;
}


#line 73
- (void)setPreCompWithOrgBouncycastleMathEcECPointArray:(IOSObjectArray *)preComp {
  
#line 75
  self->preComp_ = preComp;
}


#line 78
- (IOSObjectArray *)getPreCompNeg {
  
#line 80
  return preCompNeg_;
}


#line 83
- (void)setPreCompNegWithOrgBouncycastleMathEcECPointArray:(IOSObjectArray *)preCompNeg {
  
#line 85
  self->preCompNeg_ = preCompNeg;
}


#line 88
- (OrgBouncycastleMathEcECPoint *)getTwice {
  
#line 90
  return twice_;
}


#line 93
- (void)setTwiceWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)twice {
  
#line 95
  self->twice_ = twice;
}


#line 98
- (jint)getWidth {
  
#line 100
  return width_;
}


#line 103
- (void)setWidthWithInt:(jint)width {
  
#line 105
  self->width_ = width;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(decrementPromotionCountdown);
  methods[2].selector = @selector(getPromotionCountdown);
  methods[3].selector = @selector(setPromotionCountdownWithInt:);
  methods[4].selector = @selector(isPromoted);
  methods[5].selector = @selector(getConfWidth);
  methods[6].selector = @selector(setConfWidthWithInt:);
  methods[7].selector = @selector(getPreComp);
  methods[8].selector = @selector(setPreCompWithOrgBouncycastleMathEcECPointArray:);
  methods[9].selector = @selector(getPreCompNeg);
  methods[10].selector = @selector(setPreCompNegWithOrgBouncycastleMathEcECPointArray:);
  methods[11].selector = @selector(getTwice);
  methods[12].selector = @selector(setTwiceWithOrgBouncycastleMathEcECPoint:);
  methods[13].selector = @selector(getWidth);
  methods[14].selector = @selector(setWidthWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "promotionCountdown_", "I", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "confWidth_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "preComp_", "[LOrgBouncycastleMathEcECPoint;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "preCompNeg_", "[LOrgBouncycastleMathEcECPoint;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "twice_", "LOrgBouncycastleMathEcECPoint;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "width_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setPromotionCountdown", "I", "setConfWidth", "setPreComp", "[LOrgBouncycastleMathEcECPoint;", "setPreCompNeg", "setTwice", "LOrgBouncycastleMathEcECPoint;", "setWidth" };
  static const J2ObjcClassInfo _OrgBouncycastleMathEcWNafPreCompInfo = { "WNafPreCompInfo", "org.bouncycastle.math.ec", ptrTable, methods, fields, 7, 0x1, 15, 6, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathEcWNafPreCompInfo;
}

@end


#line 7
void OrgBouncycastleMathEcWNafPreCompInfo_init(OrgBouncycastleMathEcWNafPreCompInfo *self) {
  NSObject_init(self);
  JreAssignVolatileInt(&self->promotionCountdown_, 4);
  self->confWidth_ =
#line 11
  -1;
  self->preComp_ =
#line 17
  nil;
  self->preCompNeg_ =
#line 23
  nil;
  self->twice_ =
#line 29
  nil;
  self->width_ =
#line 31
  -1;
}


#line 7
OrgBouncycastleMathEcWNafPreCompInfo *new_OrgBouncycastleMathEcWNafPreCompInfo_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleMathEcWNafPreCompInfo, init)
}


#line 7
OrgBouncycastleMathEcWNafPreCompInfo *create_OrgBouncycastleMathEcWNafPreCompInfo_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleMathEcWNafPreCompInfo, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcWNafPreCompInfo)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/GLVMultiplier.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/math/ec/AbstractECMultiplier.h"
#include "org/bouncycastle/math/ec/ECAlgorithms.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/ec/GLVMultiplier.h"
#include "org/bouncycastle/math/ec/endo/EndoUtil.h"
#include "org/bouncycastle/math/ec/endo/GLVEndomorphism.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/ec/GLVMultiplier must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/ec/GLVMultiplier.java"


#line 8
@implementation OrgBouncycastleMathEcGLVMultiplier


#line 13
- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
        withOrgBouncycastleMathEcEndoGLVEndomorphism:(id<OrgBouncycastleMathEcEndoGLVEndomorphism>)glvEndomorphism {
  OrgBouncycastleMathEcGLVMultiplier_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVEndomorphism_(self, curve, glvEndomorphism);
  return self;
}


#line 24
- (OrgBouncycastleMathEcECPoint *)multiplyPositiveWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)p
                                                            withJavaMathBigInteger:(JavaMathBigInteger *)k {
  
#line 27
  if (![((OrgBouncycastleMathEcECCurve *) nil_chk(curve_)) equalsWithOrgBouncycastleMathEcECCurve:[((OrgBouncycastleMathEcECPoint *) nil_chk(p)) getCurve]]) {
    
#line 29
    @throw new_JavaLangIllegalStateException_init();
  }
  
#line 32
  JavaMathBigInteger *n = [((OrgBouncycastleMathEcECCurve *) nil_chk([p getCurve])) getOrder];
  IOSObjectArray *ab = [((id<OrgBouncycastleMathEcEndoGLVEndomorphism>) nil_chk(glvEndomorphism_)) decomposeScalarWithJavaMathBigInteger:[((JavaMathBigInteger *) nil_chk(k)) modWithJavaMathBigInteger:n]];
  JavaMathBigInteger *a = IOSObjectArray_Get(nil_chk(ab), 0);
  
#line 34
  JavaMathBigInteger *b = IOSObjectArray_Get(ab, 1);
  
#line 36
  if ([glvEndomorphism_ hasEfficientPointMap]) {
    
#line 38
    return OrgBouncycastleMathEcECAlgorithms_implShamirsTrickWNafWithOrgBouncycastleMathEcEndoECEndomorphism_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(glvEndomorphism_, p, a, b);
  }
  
#line 41
  OrgBouncycastleMathEcECPoint *q = OrgBouncycastleMathEcEndoEndoUtil_mapPointWithOrgBouncycastleMathEcEndoECEndomorphism_withOrgBouncycastleMathEcECPoint_(glvEndomorphism_, p);
  
#line 43
  return OrgBouncycastleMathEcECAlgorithms_implShamirsTrickWNafWithOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(p, a, q, b);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleMathEcECCurve:withOrgBouncycastleMathEcEndoGLVEndomorphism:);
  methods[1].selector = @selector(multiplyPositiveWithOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "curve_", "LOrgBouncycastleMathEcECCurve;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "glvEndomorphism_", "LOrgBouncycastleMathEcEndoGLVEndomorphism;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleMathEcECCurve;LOrgBouncycastleMathEcEndoGLVEndomorphism;", "multiplyPositive", "LOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;" };
  static const J2ObjcClassInfo _OrgBouncycastleMathEcGLVMultiplier = { "GLVMultiplier", "org.bouncycastle.math.ec", ptrTable, methods, fields, 7, 0x1, 2, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathEcGLVMultiplier;
}

@end


#line 13
void OrgBouncycastleMathEcGLVMultiplier_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVEndomorphism_(OrgBouncycastleMathEcGLVMultiplier *self, OrgBouncycastleMathEcECCurve *curve, id<OrgBouncycastleMathEcEndoGLVEndomorphism> glvEndomorphism) {
  OrgBouncycastleMathEcAbstractECMultiplier_init(self);
  if (curve == nil || [curve getOrder] == nil) {
    
#line 17
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Need curve with known group order");
  }
  
#line 20
  self->curve_ = curve;
  self->glvEndomorphism_ = glvEndomorphism;
}


#line 13
OrgBouncycastleMathEcGLVMultiplier *new_OrgBouncycastleMathEcGLVMultiplier_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVEndomorphism_(OrgBouncycastleMathEcECCurve *curve, id<OrgBouncycastleMathEcEndoGLVEndomorphism> glvEndomorphism) {
  J2OBJC_NEW_IMPL(OrgBouncycastleMathEcGLVMultiplier, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVEndomorphism_, curve, glvEndomorphism)
}


#line 13
OrgBouncycastleMathEcGLVMultiplier *create_OrgBouncycastleMathEcGLVMultiplier_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVEndomorphism_(OrgBouncycastleMathEcECCurve *curve, id<OrgBouncycastleMathEcEndoGLVEndomorphism> glvEndomorphism) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleMathEcGLVMultiplier, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcEndoGLVEndomorphism_, curve, glvEndomorphism)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathEcGLVMultiplier)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Nat.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/math/raw/Nat.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/raw/Nat must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong OrgBouncycastleMathRawNat_get_M(void);
#define OrgBouncycastleMathRawNat_M 4294967295LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathRawNat, M, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Nat.java"


#line 7
@implementation OrgBouncycastleMathRawNat

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 7
- (instancetype)init {
  OrgBouncycastleMathRawNat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 11
+ (jint)addWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)y
      withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_addWithInt_withIntArray_withIntArray_withIntArray_(len, x, y, z);
}


#line 23
+ (jint)add33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_add33AtWithInt_withInt_withIntArray_withInt_(len, x, z, zPos);
}


#line 35
+ (jint)add33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff
               withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_add33AtWithInt_withInt_withIntArray_withInt_withInt_(len, x, z, zOff, zPos);
}


#line 47
+ (jint)add33ToWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_add33ToWithInt_withInt_withIntArray_(len, x, z);
}


#line 58
+ (jint)add33ToWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_add33ToWithInt_withInt_withIntArray_withInt_(len, x, z, zOff);
}


#line 69
+ (jint)addBothToWithInt:(jint)len
            withIntArray:(IOSIntArray *)x
            withIntArray:(IOSIntArray *)y
            withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_addBothToWithInt_withIntArray_withIntArray_withIntArray_(len, x, y, z);
}


#line 81
+ (jint)addBothToWithInt:(jint)len
            withIntArray:(IOSIntArray *)x
                 withInt:(jint)xOff
            withIntArray:(IOSIntArray *)y
                 withInt:(jint)yOff
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_addBothToWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff, z, zOff);
}


#line 93
+ (jint)addDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_addDWordAtWithInt_withLong_withIntArray_withInt_(len, x, z, zPos);
}


#line 105
+ (jint)addDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff
                  withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_addDWordAtWithInt_withLong_withIntArray_withInt_withInt_(len, x, z, zOff, zPos);
}


#line 117
+ (jint)addDWordToWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_addDWordToWithInt_withLong_withIntArray_(len, x, z);
}


#line 128
+ (jint)addDWordToWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_addDWordToWithInt_withLong_withIntArray_withInt_(len, x, z, zOff);
}


#line 139
+ (jint)addToWithInt:(jint)len
        withIntArray:(IOSIntArray *)x
        withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withIntArray_(len, x, z);
}


#line 151
+ (jint)addToWithInt:(jint)len
        withIntArray:(IOSIntArray *)x
             withInt:(jint)xOff
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, z, zOff);
}


#line 163
+ (jint)addToWithInt:(jint)len
        withIntArray:(IOSIntArray *)x
             withInt:(jint)xOff
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zOff
             withInt:(jint)cIn {
  return OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withInt_withIntArray_withInt_withInt_(len, x, xOff, z, zOff, cIn);
}


#line 175
+ (jint)addToEachOtherWithInt:(jint)len
                 withIntArray:(IOSIntArray *)u
                      withInt:(jint)uOff
                 withIntArray:(IOSIntArray *)v
                      withInt:(jint)vOff {
  return OrgBouncycastleMathRawNat_addToEachOtherWithInt_withIntArray_withInt_withIntArray_withInt_(len, u, uOff, v, vOff);
}


#line 188
+ (jint)addWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_(len, x, z, zPos);
}


#line 197
+ (jint)addWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff
                 withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_withInt_(len, x, z, zOff, zPos);
}


#line 206
+ (jint)addWordToWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_addWordToWithInt_withInt_withIntArray_(len, x, z);
}


#line 214
+ (jint)addWordToWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_addWordToWithInt_withInt_withIntArray_withInt_(len, x, z, zOff);
}


#line 222
+ (jint)caddWithInt:(jint)len
            withInt:(jint)mask
       withIntArray:(IOSIntArray *)x
       withIntArray:(IOSIntArray *)y
       withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_caddWithInt_withInt_withIntArray_withIntArray_withIntArray_(len, mask, x, y, z);
}


#line 235
+ (void)cmovWithInt:(jint)len
            withInt:(jint)mask
       withIntArray:(IOSIntArray *)x
            withInt:(jint)xOff
       withIntArray:(IOSIntArray *)z
            withInt:(jint)zOff {
  OrgBouncycastleMathRawNat_cmovWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, mask, x, xOff, z, zOff);
}


#line 257
+ (jint)compareWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
          withIntArray:(IOSIntArray *)y {
  return OrgBouncycastleMathRawNat_compareWithInt_withIntArray_withIntArray_(len, x, y);
}


#line 271
+ (jint)compareWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
               withInt:(jint)xOff
          withIntArray:(IOSIntArray *)y
               withInt:(jint)yOff {
  return OrgBouncycastleMathRawNat_compareWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff);
}


#line 285
+ (IOSIntArray *)copy__WithInt:(jint)len
                  withIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat_copy__WithInt_withIntArray_(len, x);
}


#line 292
+ (void)copy__WithInt:(jint)len
         withIntArray:(IOSIntArray *)x
         withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathRawNat_copy__WithInt_withIntArray_withIntArray_(len, x, z);
}


#line 297
+ (void)copy__WithInt:(jint)len
         withIntArray:(IOSIntArray *)x
              withInt:(jint)xOff
         withIntArray:(IOSIntArray *)z
              withInt:(jint)zOff {
  OrgBouncycastleMathRawNat_copy__WithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, z, zOff);
}


#line 302
+ (IOSLongArray *)copy64WithInt:(jint)len
                  withLongArray:(IOSLongArray *)x {
  return OrgBouncycastleMathRawNat_copy64WithInt_withLongArray_(len, x);
}


#line 309
+ (void)copy64WithInt:(jint)len
        withLongArray:(IOSLongArray *)x
        withLongArray:(IOSLongArray *)z {
  OrgBouncycastleMathRawNat_copy64WithInt_withLongArray_withLongArray_(len, x, z);
}


#line 314
+ (void)copy64WithInt:(jint)len
        withLongArray:(IOSLongArray *)x
              withInt:(jint)xOff
        withLongArray:(IOSLongArray *)z
              withInt:(jint)zOff {
  OrgBouncycastleMathRawNat_copy64WithInt_withLongArray_withInt_withLongArray_withInt_(len, x, xOff, z, zOff);
}


#line 319
+ (IOSIntArray *)createWithInt:(jint)len {
  return OrgBouncycastleMathRawNat_createWithInt_(len);
}


#line 324
+ (IOSLongArray *)create64WithInt:(jint)len {
  return OrgBouncycastleMathRawNat_create64WithInt_(len);
}


#line 329
+ (jint)csubWithInt:(jint)len
            withInt:(jint)mask
       withIntArray:(IOSIntArray *)x
       withIntArray:(IOSIntArray *)y
       withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_csubWithInt_withInt_withIntArray_withIntArray_withIntArray_(len, mask, x, y, z);
}


#line 342
+ (jint)csubWithInt:(jint)len
            withInt:(jint)mask
       withIntArray:(IOSIntArray *)x
            withInt:(jint)xOff
       withIntArray:(IOSIntArray *)y
            withInt:(jint)yOff
       withIntArray:(IOSIntArray *)z
            withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_csubWithInt_withInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, mask, x, xOff, y, yOff, z, zOff);
}


#line 355
+ (jint)decWithInt:(jint)len
      withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_decWithInt_withIntArray_(len, z);
}


#line 367
+ (jint)decWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_decWithInt_withIntArray_withIntArray_(len, x, z);
}


#line 388
+ (jint)decAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(len, z, zPos);
}


#line 401
+ (jint)decAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zOff
             withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos);
}


#line 414
+ (jboolean)diffWithInt:(jint)len
           withIntArray:(IOSIntArray *)x
                withInt:(jint)xOff
           withIntArray:(IOSIntArray *)y
                withInt:(jint)yOff
           withIntArray:(IOSIntArray *)z
                withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_diffWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff, z, zOff);
}


#line 428
+ (jboolean)eqWithInt:(jint)len
         withIntArray:(IOSIntArray *)x
         withIntArray:(IOSIntArray *)y {
  return OrgBouncycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(len, x, y);
}


#line 440
+ (jint)equalToWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
               withInt:(jint)y {
  return OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withInt_(len, x, y);
}


#line 451
+ (jint)equalToWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
               withInt:(jint)xOff
               withInt:(jint)y {
  return OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withInt_withInt_(len, x, xOff, y);
}


#line 462
+ (jint)equalToWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
          withIntArray:(IOSIntArray *)y {
  return OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withIntArray_(len, x, y);
}


#line 473
+ (jint)equalToWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
               withInt:(jint)xOff
          withIntArray:(IOSIntArray *)y
               withInt:(jint)yOff {
  return OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff);
}


#line 484
+ (jint)equalToZeroWithInt:(jint)len
              withIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat_equalToZeroWithInt_withIntArray_(len, x);
}


#line 495
+ (jint)equalToZeroWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff {
  return OrgBouncycastleMathRawNat_equalToZeroWithInt_withIntArray_withInt_(len, x, xOff);
}


#line 506
+ (IOSIntArray *)fromBigIntegerWithInt:(jint)bits
                withJavaMathBigInteger:(JavaMathBigInteger *)x {
  return OrgBouncycastleMathRawNat_fromBigIntegerWithInt_withJavaMathBigInteger_(bits, x);
}


#line 525
+ (IOSLongArray *)fromBigInteger64WithInt:(jint)bits
                   withJavaMathBigInteger:(JavaMathBigInteger *)x {
  return OrgBouncycastleMathRawNat_fromBigInteger64WithInt_withJavaMathBigInteger_(bits, x);
}


#line 544
+ (jint)getBitWithIntArray:(IOSIntArray *)x
                   withInt:(jint)bit {
  return OrgBouncycastleMathRawNat_getBitWithIntArray_withInt_(x, bit);
}


#line 559
+ (jboolean)gteWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
          withIntArray:(IOSIntArray *)y {
  return OrgBouncycastleMathRawNat_gteWithInt_withIntArray_withIntArray_(len, x, y);
}


#line 573
+ (jboolean)gteWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
               withInt:(jint)xOff
          withIntArray:(IOSIntArray *)y
               withInt:(jint)yOff {
  return OrgBouncycastleMathRawNat_gteWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff);
}


#line 587
+ (jint)incWithInt:(jint)len
      withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_incWithInt_withIntArray_(len, z);
}


#line 599
+ (jint)incWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_incWithInt_withIntArray_withIntArray_(len, x, z);
}


#line 620
+ (jint)incAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, zPos);
}


#line 633
+ (jint)incAtWithInt:(jint)len
        withIntArray:(IOSIntArray *)z
             withInt:(jint)zOff
             withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos);
}


#line 646
+ (jboolean)isOneWithInt:(jint)len
            withIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat_isOneWithInt_withIntArray_(len, x);
}


#line 662
+ (jboolean)isZeroWithInt:(jint)len
             withIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat_isZeroWithInt_withIntArray_(len, x);
}


#line 674
+ (jint)lessThanWithInt:(jint)len
           withIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y {
  return OrgBouncycastleMathRawNat_lessThanWithInt_withIntArray_withIntArray_(len, x, y);
}


#line 686
+ (jint)lessThanWithInt:(jint)len
           withIntArray:(IOSIntArray *)x
                withInt:(jint)xOff
           withIntArray:(IOSIntArray *)y
                withInt:(jint)yOff {
  return OrgBouncycastleMathRawNat_lessThanWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff);
}


#line 698
+ (void)mulWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)y
      withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathRawNat_mulWithInt_withIntArray_withIntArray_withIntArray_(len, x, y, zz);
}


#line 708
+ (void)mulWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
           withInt:(jint)xOff
      withIntArray:(IOSIntArray *)y
           withInt:(jint)yOff
      withIntArray:(IOSIntArray *)zz
           withInt:(jint)zzOff {
  OrgBouncycastleMathRawNat_mulWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff, zz, zzOff);
}

+ (void)mulWithIntArray:(IOSIntArray *)x
                withInt:(jint)xOff
                withInt:(jint)xLen
           withIntArray:(IOSIntArray *)y
                withInt:(jint)yOff
                withInt:(jint)yLen
           withIntArray:(IOSIntArray *)zz
                withInt:(jint)zzOff {
  OrgBouncycastleMathRawNat_mulWithIntArray_withInt_withInt_withIntArray_withInt_withInt_withIntArray_withInt_(x, xOff, xLen, y, yOff, yLen, zz, zzOff);
}


#line 728
+ (jint)mulAddToWithInt:(jint)len
           withIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)zz {
  return OrgBouncycastleMathRawNat_mulAddToWithInt_withIntArray_withIntArray_withIntArray_(len, x, y, zz);
}


#line 741
+ (jint)mulAddToWithInt:(jint)len
           withIntArray:(IOSIntArray *)x
                withInt:(jint)xOff
           withIntArray:(IOSIntArray *)y
                withInt:(jint)yOff
           withIntArray:(IOSIntArray *)zz
                withInt:(jint)zzOff {
  return OrgBouncycastleMathRawNat_mulAddToWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff, zz, zzOff);
}


#line 755
+ (jint)mul31BothAddWithInt:(jint)len
                    withInt:(jint)a
               withIntArray:(IOSIntArray *)x
                    withInt:(jint)b
               withIntArray:(IOSIntArray *)y
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_mul31BothAddWithInt_withInt_withIntArray_withInt_withIntArray_withIntArray_withInt_(len, a, x, b, y, z, zOff);
}


#line 769
+ (jint)mulWordWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)y
          withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withIntArray_(len, x, y, z);
}


#line 783
+ (jint)mulWordWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)y
               withInt:(jint)yOff
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, y, yOff, z, zOff);
}


#line 797
+ (jint)mulWordAddToWithInt:(jint)len
                    withInt:(jint)x
               withIntArray:(IOSIntArray *)y
                    withInt:(jint)yOff
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, y, yOff, z, zOff);
}


#line 811
+ (jint)mulWordDwordAddAtWithInt:(jint)len
                         withInt:(jint)x
                        withLong:(jlong)y
                    withIntArray:(IOSIntArray *)z
                         withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_mulWordDwordAddAtWithInt_withInt_withLong_withIntArray_withInt_(len, x, y, z, zPos);
}


#line 827
+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_(len, z, c);
}


#line 839
+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff
                    withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withInt_(len, z, zOff, c);
}


#line 851
+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)x
                    withInt:(jint)c
               withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withIntArray_(len, x, c, z);
}


#line 863
+ (jint)shiftDownBitWithInt:(jint)len
               withIntArray:(IOSIntArray *)x
                    withInt:(jint)xOff
                    withInt:(jint)c
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withInt_withIntArray_withInt_(len, x, xOff, c, z, zOff);
}


#line 875
+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)bits
                     withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_(len, z, bits, c);
}


#line 888
+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)zOff
                     withInt:(jint)bits
                     withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withInt_(len, z, zOff, bits, c);
}


#line 901
+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)x
                     withInt:(jint)bits
                     withInt:(jint)c
                withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withIntArray_(len, x, bits, c, z);
}


#line 914
+ (jint)shiftDownBitsWithInt:(jint)len
                withIntArray:(IOSIntArray *)x
                     withInt:(jint)xOff
                     withInt:(jint)bits
                     withInt:(jint)c
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withInt_withIntArray_withInt_(len, x, xOff, bits, c, z, zOff);
}


#line 927
+ (jint)shiftDownWordWithInt:(jint)len
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftDownWordWithInt_withIntArray_withInt_(len, z, c);
}


#line 939
+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_(len, z, c);
}


#line 950
+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff
                  withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withInt_(len, z, zOff, c);
}


#line 961
+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)x
                  withInt:(jint)c
             withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withIntArray_(len, x, c, z);
}


#line 972
+ (jint)shiftUpBitWithInt:(jint)len
             withIntArray:(IOSIntArray *)x
                  withInt:(jint)xOff
                  withInt:(jint)c
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withInt_withIntArray_withInt_(len, x, xOff, c, z, zOff);
}


#line 983
+ (jlong)shiftUpBit64WithInt:(jint)len
               withLongArray:(IOSLongArray *)x
                     withInt:(jint)xOff
                    withLong:(jlong)c
               withLongArray:(IOSLongArray *)z
                     withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_shiftUpBit64WithInt_withLongArray_withInt_withLong_withLongArray_withInt_(len, x, xOff, c, z, zOff);
}


#line 994
+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)bits
                   withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_(len, z, bits, c);
}


#line 1006
+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff
                   withInt:(jint)bits
                   withInt:(jint)c {
  return OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withInt_(len, z, zOff, bits, c);
}


#line 1018
+ (jlong)shiftUpBits64WithInt:(jint)len
                withLongArray:(IOSLongArray *)z
                      withInt:(jint)zOff
                      withInt:(jint)bits
                     withLong:(jlong)c {
  return OrgBouncycastleMathRawNat_shiftUpBits64WithInt_withLongArray_withInt_withInt_withLong_(len, z, zOff, bits, c);
}


#line 1030
+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
                   withInt:(jint)bits
                   withInt:(jint)c
              withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withIntArray_(len, x, bits, c, z);
}


#line 1042
+ (jint)shiftUpBitsWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff
                   withInt:(jint)bits
                   withInt:(jint)c
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withInt_withIntArray_withInt_(len, x, xOff, bits, c, z, zOff);
}


#line 1054
+ (jlong)shiftUpBits64WithInt:(jint)len
                withLongArray:(IOSLongArray *)x
                      withInt:(jint)xOff
                      withInt:(jint)bits
                     withLong:(jlong)c
                withLongArray:(IOSLongArray *)z
                      withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_shiftUpBits64WithInt_withLongArray_withInt_withInt_withLong_withLongArray_withInt_(len, x, xOff, bits, c, z, zOff);
}


#line 1066
+ (void)squareWithInt:(jint)len
         withIntArray:(IOSIntArray *)x
         withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathRawNat_squareWithInt_withIntArray_withIntArray_(len, x, zz);
}


#line 1097
+ (void)squareWithInt:(jint)len
         withIntArray:(IOSIntArray *)x
              withInt:(jint)xOff
         withIntArray:(IOSIntArray *)zz
              withInt:(jint)zzOff {
  OrgBouncycastleMathRawNat_squareWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, zz, zzOff);
}


#line 1128
+ (jint)squareWordAddToWithIntArray:(IOSIntArray *)x
                            withInt:(jint)xPos
                       withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_squareWordAddToWithIntArray_withInt_withIntArray_(x, xPos, z);
}


#line 1142
+ (jint)squareWordAddToWithIntArray:(IOSIntArray *)x
                            withInt:(jint)xOff
                            withInt:(jint)xPos
                       withIntArray:(IOSIntArray *)z
                            withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_squareWordAddToWithIntArray_withInt_withInt_withIntArray_withInt_(x, xOff, xPos, z, zOff);
}


#line 1157
+ (jint)subWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
      withIntArray:(IOSIntArray *)y
      withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_subWithInt_withIntArray_withIntArray_withIntArray_(len, x, y, z);
}


#line 1169
+ (jint)subWithInt:(jint)len
      withIntArray:(IOSIntArray *)x
           withInt:(jint)xOff
      withIntArray:(IOSIntArray *)y
           withInt:(jint)yOff
      withIntArray:(IOSIntArray *)z
           withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_subWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff, z, zOff);
}


#line 1181
+ (jint)sub33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_sub33AtWithInt_withInt_withIntArray_withInt_(len, x, z, zPos);
}


#line 1193
+ (jint)sub33AtWithInt:(jint)len
               withInt:(jint)x
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff
               withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_sub33AtWithInt_withInt_withIntArray_withInt_withInt_(len, x, z, zOff, zPos);
}


#line 1205
+ (jint)sub33FromWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_sub33FromWithInt_withInt_withIntArray_(len, x, z);
}


#line 1216
+ (jint)sub33FromWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_sub33FromWithInt_withInt_withIntArray_withInt_(len, x, z, zOff);
}


#line 1227
+ (jint)subBothFromWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)y
              withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_subBothFromWithInt_withIntArray_withIntArray_withIntArray_(len, x, y, z);
}


#line 1239
+ (jint)subBothFromWithInt:(jint)len
              withIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff
              withIntArray:(IOSIntArray *)y
                   withInt:(jint)yOff
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_subBothFromWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff, z, zOff);
}


#line 1251
+ (jint)subDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_subDWordAtWithInt_withLong_withIntArray_withInt_(len, x, z, zPos);
}


#line 1263
+ (jint)subDWordAtWithInt:(jint)len
                 withLong:(jlong)x
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff
                  withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_subDWordAtWithInt_withLong_withIntArray_withInt_withInt_(len, x, z, zOff, zPos);
}


#line 1275
+ (jint)subDWordFromWithInt:(jint)len
                   withLong:(jlong)x
               withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_subDWordFromWithInt_withLong_withIntArray_(len, x, z);
}


#line 1286
+ (jint)subDWordFromWithInt:(jint)len
                   withLong:(jlong)x
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_subDWordFromWithInt_withLong_withIntArray_withInt_(len, x, z, zOff);
}


#line 1297
+ (jint)subFromWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
          withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withIntArray_(len, x, z);
}


#line 1309
+ (jint)subFromWithInt:(jint)len
          withIntArray:(IOSIntArray *)x
               withInt:(jint)xOff
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, z, zOff);
}


#line 1321
+ (jint)subWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_subWordAtWithInt_withInt_withIntArray_withInt_(len, x, z, zPos);
}


#line 1330
+ (jint)subWordAtWithInt:(jint)len
                 withInt:(jint)x
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff
                 withInt:(jint)zPos {
  return OrgBouncycastleMathRawNat_subWordAtWithInt_withInt_withIntArray_withInt_withInt_(len, x, z, zOff, zPos);
}


#line 1339
+ (jint)subWordFromWithInt:(jint)len
                   withInt:(jint)x
              withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat_subWordFromWithInt_withInt_withIntArray_(len, x, z);
}


#line 1347
+ (jint)subWordFromWithInt:(jint)len
                   withInt:(jint)x
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat_subWordFromWithInt_withInt_withIntArray_withInt_(len, x, z, zOff);
}


#line 1355
+ (JavaMathBigInteger *)toBigIntegerWithInt:(jint)len
                               withIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat_toBigIntegerWithInt_withIntArray_(len, x);
}


#line 1369
+ (void)zeroWithInt:(jint)len
       withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathRawNat_zeroWithInt_withIntArray_(len, z);
}


#line 1377
+ (void)zeroWithInt:(jint)len
       withIntArray:(IOSIntArray *)z
            withInt:(jint)zOff {
  OrgBouncycastleMathRawNat_zeroWithInt_withIntArray_withInt_(len, z, zOff);
}


#line 1385
+ (void)zero64WithInt:(jint)len
        withLongArray:(IOSLongArray *)z {
  OrgBouncycastleMathRawNat_zero64WithInt_withLongArray_(len, z);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 5, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 9, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 12, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 14, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 14, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 18, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 19, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 19, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 20, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 20, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 23, 24, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 25, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 25, 16, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 26, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 26, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 26, 16, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 28, 29, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 28, 30, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 28, 31, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 32, 33, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 34, 33, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 35, 22, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 35, 36, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 37, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 37, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 38, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 38, 40, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 41, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 42, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 43, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 43, 40, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 43, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 43, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 44, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 44, 39, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 45, 46, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 47, 46, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 48, 49, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 50, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 50, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 51, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 51, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 52, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 52, 40, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 53, 27, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 54, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 55, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 55, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 56, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 56, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 56, 57, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 58, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 58, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 59, 60, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 61, 62, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 61, 24, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 63, 24, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 64, 65, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 66, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 66, 40, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 66, 67, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 66, 68, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 69, 40, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 69, 70, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 69, 71, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 69, 72, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 73, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 74, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 74, 40, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 74, 67, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 74, 68, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 75, 76, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 77, 40, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 77, 70, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 78, 79, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 77, 71, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 77, 72, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 78, 80, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 81, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 81, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 83, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 82, 84, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 85, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 85, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 86, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 86, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 87, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 87, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 88, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 88, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 89, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 89, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 90, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 90, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 91, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 91, 16, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 92, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 92, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 93, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 93, 3, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 94, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 95, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 95, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 96, 29, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithInt:withIntArray:withIntArray:withIntArray:);
  methods[2].selector = @selector(add33AtWithInt:withInt:withIntArray:withInt:);
  methods[3].selector = @selector(add33AtWithInt:withInt:withIntArray:withInt:withInt:);
  methods[4].selector = @selector(add33ToWithInt:withInt:withIntArray:);
  methods[5].selector = @selector(add33ToWithInt:withInt:withIntArray:withInt:);
  methods[6].selector = @selector(addBothToWithInt:withIntArray:withIntArray:withIntArray:);
  methods[7].selector = @selector(addBothToWithInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[8].selector = @selector(addDWordAtWithInt:withLong:withIntArray:withInt:);
  methods[9].selector = @selector(addDWordAtWithInt:withLong:withIntArray:withInt:withInt:);
  methods[10].selector = @selector(addDWordToWithInt:withLong:withIntArray:);
  methods[11].selector = @selector(addDWordToWithInt:withLong:withIntArray:withInt:);
  methods[12].selector = @selector(addToWithInt:withIntArray:withIntArray:);
  methods[13].selector = @selector(addToWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[14].selector = @selector(addToWithInt:withIntArray:withInt:withIntArray:withInt:withInt:);
  methods[15].selector = @selector(addToEachOtherWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[16].selector = @selector(addWordAtWithInt:withInt:withIntArray:withInt:);
  methods[17].selector = @selector(addWordAtWithInt:withInt:withIntArray:withInt:withInt:);
  methods[18].selector = @selector(addWordToWithInt:withInt:withIntArray:);
  methods[19].selector = @selector(addWordToWithInt:withInt:withIntArray:withInt:);
  methods[20].selector = @selector(caddWithInt:withInt:withIntArray:withIntArray:withIntArray:);
  methods[21].selector = @selector(cmovWithInt:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[22].selector = @selector(compareWithInt:withIntArray:withIntArray:);
  methods[23].selector = @selector(compareWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[24].selector = @selector(copy__WithInt:withIntArray:);
  methods[25].selector = @selector(copy__WithInt:withIntArray:withIntArray:);
  methods[26].selector = @selector(copy__WithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[27].selector = @selector(copy64WithInt:withLongArray:);
  methods[28].selector = @selector(copy64WithInt:withLongArray:withLongArray:);
  methods[29].selector = @selector(copy64WithInt:withLongArray:withInt:withLongArray:withInt:);
  methods[30].selector = @selector(createWithInt:);
  methods[31].selector = @selector(create64WithInt:);
  methods[32].selector = @selector(csubWithInt:withInt:withIntArray:withIntArray:withIntArray:);
  methods[33].selector = @selector(csubWithInt:withInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[34].selector = @selector(decWithInt:withIntArray:);
  methods[35].selector = @selector(decWithInt:withIntArray:withIntArray:);
  methods[36].selector = @selector(decAtWithInt:withIntArray:withInt:);
  methods[37].selector = @selector(decAtWithInt:withIntArray:withInt:withInt:);
  methods[38].selector = @selector(diffWithInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[39].selector = @selector(eqWithInt:withIntArray:withIntArray:);
  methods[40].selector = @selector(equalToWithInt:withIntArray:withInt:);
  methods[41].selector = @selector(equalToWithInt:withIntArray:withInt:withInt:);
  methods[42].selector = @selector(equalToWithInt:withIntArray:withIntArray:);
  methods[43].selector = @selector(equalToWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[44].selector = @selector(equalToZeroWithInt:withIntArray:);
  methods[45].selector = @selector(equalToZeroWithInt:withIntArray:withInt:);
  methods[46].selector = @selector(fromBigIntegerWithInt:withJavaMathBigInteger:);
  methods[47].selector = @selector(fromBigInteger64WithInt:withJavaMathBigInteger:);
  methods[48].selector = @selector(getBitWithIntArray:withInt:);
  methods[49].selector = @selector(gteWithInt:withIntArray:withIntArray:);
  methods[50].selector = @selector(gteWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[51].selector = @selector(incWithInt:withIntArray:);
  methods[52].selector = @selector(incWithInt:withIntArray:withIntArray:);
  methods[53].selector = @selector(incAtWithInt:withIntArray:withInt:);
  methods[54].selector = @selector(incAtWithInt:withIntArray:withInt:withInt:);
  methods[55].selector = @selector(isOneWithInt:withIntArray:);
  methods[56].selector = @selector(isZeroWithInt:withIntArray:);
  methods[57].selector = @selector(lessThanWithInt:withIntArray:withIntArray:);
  methods[58].selector = @selector(lessThanWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[59].selector = @selector(mulWithInt:withIntArray:withIntArray:withIntArray:);
  methods[60].selector = @selector(mulWithInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[61].selector = @selector(mulWithIntArray:withInt:withInt:withIntArray:withInt:withInt:withIntArray:withInt:);
  methods[62].selector = @selector(mulAddToWithInt:withIntArray:withIntArray:withIntArray:);
  methods[63].selector = @selector(mulAddToWithInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[64].selector = @selector(mul31BothAddWithInt:withInt:withIntArray:withInt:withIntArray:withIntArray:withInt:);
  methods[65].selector = @selector(mulWordWithInt:withInt:withIntArray:withIntArray:);
  methods[66].selector = @selector(mulWordWithInt:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[67].selector = @selector(mulWordAddToWithInt:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[68].selector = @selector(mulWordDwordAddAtWithInt:withInt:withLong:withIntArray:withInt:);
  methods[69].selector = @selector(shiftDownBitWithInt:withIntArray:withInt:);
  methods[70].selector = @selector(shiftDownBitWithInt:withIntArray:withInt:withInt:);
  methods[71].selector = @selector(shiftDownBitWithInt:withIntArray:withInt:withIntArray:);
  methods[72].selector = @selector(shiftDownBitWithInt:withIntArray:withInt:withInt:withIntArray:withInt:);
  methods[73].selector = @selector(shiftDownBitsWithInt:withIntArray:withInt:withInt:);
  methods[74].selector = @selector(shiftDownBitsWithInt:withIntArray:withInt:withInt:withInt:);
  methods[75].selector = @selector(shiftDownBitsWithInt:withIntArray:withInt:withInt:withIntArray:);
  methods[76].selector = @selector(shiftDownBitsWithInt:withIntArray:withInt:withInt:withInt:withIntArray:withInt:);
  methods[77].selector = @selector(shiftDownWordWithInt:withIntArray:withInt:);
  methods[78].selector = @selector(shiftUpBitWithInt:withIntArray:withInt:);
  methods[79].selector = @selector(shiftUpBitWithInt:withIntArray:withInt:withInt:);
  methods[80].selector = @selector(shiftUpBitWithInt:withIntArray:withInt:withIntArray:);
  methods[81].selector = @selector(shiftUpBitWithInt:withIntArray:withInt:withInt:withIntArray:withInt:);
  methods[82].selector = @selector(shiftUpBit64WithInt:withLongArray:withInt:withLong:withLongArray:withInt:);
  methods[83].selector = @selector(shiftUpBitsWithInt:withIntArray:withInt:withInt:);
  methods[84].selector = @selector(shiftUpBitsWithInt:withIntArray:withInt:withInt:withInt:);
  methods[85].selector = @selector(shiftUpBits64WithInt:withLongArray:withInt:withInt:withLong:);
  methods[86].selector = @selector(shiftUpBitsWithInt:withIntArray:withInt:withInt:withIntArray:);
  methods[87].selector = @selector(shiftUpBitsWithInt:withIntArray:withInt:withInt:withInt:withIntArray:withInt:);
  methods[88].selector = @selector(shiftUpBits64WithInt:withLongArray:withInt:withInt:withLong:withLongArray:withInt:);
  methods[89].selector = @selector(squareWithInt:withIntArray:withIntArray:);
  methods[90].selector = @selector(squareWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[91].selector = @selector(squareWordAddToWithIntArray:withInt:withIntArray:);
  methods[92].selector = @selector(squareWordAddToWithIntArray:withInt:withInt:withIntArray:withInt:);
  methods[93].selector = @selector(subWithInt:withIntArray:withIntArray:withIntArray:);
  methods[94].selector = @selector(subWithInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[95].selector = @selector(sub33AtWithInt:withInt:withIntArray:withInt:);
  methods[96].selector = @selector(sub33AtWithInt:withInt:withIntArray:withInt:withInt:);
  methods[97].selector = @selector(sub33FromWithInt:withInt:withIntArray:);
  methods[98].selector = @selector(sub33FromWithInt:withInt:withIntArray:withInt:);
  methods[99].selector = @selector(subBothFromWithInt:withIntArray:withIntArray:withIntArray:);
  methods[100].selector = @selector(subBothFromWithInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[101].selector = @selector(subDWordAtWithInt:withLong:withIntArray:withInt:);
  methods[102].selector = @selector(subDWordAtWithInt:withLong:withIntArray:withInt:withInt:);
  methods[103].selector = @selector(subDWordFromWithInt:withLong:withIntArray:);
  methods[104].selector = @selector(subDWordFromWithInt:withLong:withIntArray:withInt:);
  methods[105].selector = @selector(subFromWithInt:withIntArray:withIntArray:);
  methods[106].selector = @selector(subFromWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[107].selector = @selector(subWordAtWithInt:withInt:withIntArray:withInt:);
  methods[108].selector = @selector(subWordAtWithInt:withInt:withIntArray:withInt:withInt:);
  methods[109].selector = @selector(subWordFromWithInt:withInt:withIntArray:);
  methods[110].selector = @selector(subWordFromWithInt:withInt:withIntArray:withInt:);
  methods[111].selector = @selector(toBigIntegerWithInt:withIntArray:);
  methods[112].selector = @selector(zeroWithInt:withIntArray:);
  methods[113].selector = @selector(zeroWithInt:withIntArray:withInt:);
  methods[114].selector = @selector(zero64WithInt:withLongArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "M", "J", .constantValue.asLong = OrgBouncycastleMathRawNat_M, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "I[I[I[I", "add33At", "II[II", "II[III", "add33To", "II[I", "addBothTo", "I[II[II[II", "addDWordAt", "IJ[II", "IJ[III", "addDWordTo", "IJ[I", "addTo", "I[I[I", "I[II[II", "I[II[III", "addToEachOther", "addWordAt", "addWordTo", "cadd", "II[I[I[I", "cmov", "II[II[II", "compare", "copy", "I[I", "copy64", "I[J", "I[J[J", "I[JI[JI", "create", "I", "create64", "csub", "II[II[II[II", "dec", "decAt", "I[II", "I[III", "diff", "eq", "equalTo", "equalToZero", "fromBigInteger", "ILJavaMathBigInteger;", "fromBigInteger64", "getBit", "[II", "gte", "inc", "incAt", "isOne", "isZero", "lessThan", "mul", "[III[III[II", "mulAddTo", "mul31BothAdd", "II[II[I[II", "mulWord", "II[I[I", "mulWordAddTo", "mulWordDwordAddAt", "IIJ[II", "shiftDownBit", "I[II[I", "I[III[II", "shiftDownBits", "I[IIII", "I[III[I", "I[IIII[II", "shiftDownWord", "shiftUpBit", "shiftUpBit64", "I[JIJ[JI", "shiftUpBits", "shiftUpBits64", "I[JIIJ", "I[JIIJ[JI", "square", "squareWordAddTo", "[II[I", "[III[II", "sub", "sub33At", "sub33From", "subBothFrom", "subDWordAt", "subDWordFrom", "subFrom", "subWordAt", "subWordFrom", "toBigInteger", "zero", "zero64" };
  static const J2ObjcClassInfo _OrgBouncycastleMathRawNat = { "Nat", "org.bouncycastle.math.raw", ptrTable, methods, fields, 7, 0x401, 115, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathRawNat;
}

@end


#line 7
void OrgBouncycastleMathRawNat_init(OrgBouncycastleMathRawNat *self) {
  NSObject_init(self);
}

jint OrgBouncycastleMathRawNat_addWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 16
    c += (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(nil_chk(z), i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 23
jint OrgBouncycastleMathRawNat_add33AtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 26
  jlong c = (IOSIntArray_Get(nil_chk(z), zPos + 0) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zPos + 1) & OrgBouncycastleMathRawNat_M) + 1LL;
  *IOSIntArray_GetRef(z, zPos + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, zPos + 2);
}


#line 35
jint OrgBouncycastleMathRawNat_add33AtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 38
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + zPos) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + zPos) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + zPos + 1) & OrgBouncycastleMathRawNat_M) + 1LL;
  *IOSIntArray_GetRef(z, zOff + zPos + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos + 2);
}


#line 47
jint OrgBouncycastleMathRawNat_add33ToWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat_M) + 1LL;
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, 2);
}

jint OrgBouncycastleMathRawNat_add33ToWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat_M) + 1LL;
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, 2);
}

jint OrgBouncycastleMathRawNat_addBothToWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 74
    c += (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 81
jint OrgBouncycastleMathRawNat_addBothToWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 86
    c += (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(y), yOff + i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, zOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 93
jint OrgBouncycastleMathRawNat_addDWordAtWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 96
  jlong c = (IOSIntArray_Get(nil_chk(z), zPos + 0) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zPos + 1) & OrgBouncycastleMathRawNat_M) + (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, zPos + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, zPos + 2);
}


#line 105
jint OrgBouncycastleMathRawNat_addDWordAtWithInt_withLong_withIntArray_withInt_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 108
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + zPos) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + zPos) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + zPos + 1) & OrgBouncycastleMathRawNat_M) + (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, zOff + zPos + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos + 2);
}


#line 117
jint OrgBouncycastleMathRawNat_addDWordToWithInt_withLong_withIntArray_(jint len, jlong x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat_M) + (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, 2);
}

jint OrgBouncycastleMathRawNat_addDWordToWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat_M) + (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat_M) + (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, 2);
}

jint OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 144
    c += (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 151
jint OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 156
    c += (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, zOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 163
jint OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff, jint cIn) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = cIn & OrgBouncycastleMathRawNat_M;
  for (jint i = 0; i < len; ++i) {
    
#line 168
    c += (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, zOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 175
jint OrgBouncycastleMathRawNat_addToEachOtherWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *u, jint uOff, IOSIntArray *v, jint vOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 180
    c += (IOSIntArray_Get(nil_chk(u), uOff + i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(v), vOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(u, uOff + i) = (jint) c;
    *IOSIntArray_GetRef(v, vOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 188
jint OrgBouncycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 191
  jlong c = (x & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zPos) & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, zPos + 1);
}


#line 197
jint OrgBouncycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 200
  jlong c = (x & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zOff + zPos) & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + zPos) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos + 1);
}


#line 206
jint OrgBouncycastleMathRawNat_addWordToWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (x & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, 1);
}

jint OrgBouncycastleMathRawNat_addWordToWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (x & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zOff) & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, 1);
}

jint OrgBouncycastleMathRawNat_caddWithInt_withInt_withIntArray_withIntArray_withIntArray_(jint len, jint mask, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong MASK = -(mask & 1) & OrgBouncycastleMathRawNat_M;
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 228
    c += (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(y), i) & MASK);
    *IOSIntArray_GetRef(nil_chk(z), i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 235
void OrgBouncycastleMathRawNat_cmovWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, jint mask, IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  mask = -(mask & 1);
  
#line 239
  for (jint i = 0; i < len; ++i) {
    
#line 241
    jint z_i = IOSIntArray_Get(nil_chk(z), zOff + i);
    
#line 241
    jint diff = z_i ^ IOSIntArray_Get(nil_chk(x), xOff + i);
    z_i ^= (diff & mask);
    *IOSIntArray_GetRef(z, zOff + i) = z_i;
  }
}


#line 257
jint OrgBouncycastleMathRawNat_compareWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = len - 1; i >= 0; --i) {
    
#line 261
    jint x_i = IOSIntArray_Get(nil_chk(x), i) ^ JavaLangInteger_MIN_VALUE;
    jint y_i = IOSIntArray_Get(nil_chk(y), i) ^ JavaLangInteger_MIN_VALUE;
    if (x_i < y_i)
#line 264
    return -1;
    if (x_i > y_i)
#line 266
    return 1;
  }
  return 0;
}


#line 271
jint OrgBouncycastleMathRawNat_compareWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = len - 1; i >= 0; --i) {
    
#line 275
    jint x_i = IOSIntArray_Get(nil_chk(x), xOff + i) ^ JavaLangInteger_MIN_VALUE;
    jint y_i = IOSIntArray_Get(nil_chk(y), yOff + i) ^ JavaLangInteger_MIN_VALUE;
    if (x_i < y_i)
#line 278
    return -1;
    if (x_i > y_i)
#line 280
    return 1;
  }
  return 0;
}


#line 285
IOSIntArray *OrgBouncycastleMathRawNat_copy__WithInt_withIntArray_(jint len, IOSIntArray *x) {
  OrgBouncycastleMathRawNat_initialize();
  IOSIntArray *z = [IOSIntArray newArrayWithLength:len];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x, 0, z, 0, len);
  return z;
}

void OrgBouncycastleMathRawNat_copy__WithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x, 0, z, 0, len);
}

void OrgBouncycastleMathRawNat_copy__WithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x, xOff, z, zOff, len);
}

IOSLongArray *OrgBouncycastleMathRawNat_copy64WithInt_withLongArray_(jint len, IOSLongArray *x) {
  OrgBouncycastleMathRawNat_initialize();
  IOSLongArray *z = [IOSLongArray newArrayWithLength:len];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x, 0, z, 0, len);
  return z;
}

void OrgBouncycastleMathRawNat_copy64WithInt_withLongArray_withLongArray_(jint len, IOSLongArray *x, IOSLongArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x, 0, z, 0, len);
}

void OrgBouncycastleMathRawNat_copy64WithInt_withLongArray_withInt_withLongArray_withInt_(jint len, IOSLongArray *x, jint xOff, IOSLongArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(x, xOff, z, zOff, len);
}

IOSIntArray *OrgBouncycastleMathRawNat_createWithInt_(jint len) {
  OrgBouncycastleMathRawNat_initialize();
  return [IOSIntArray newArrayWithLength:len];
}

IOSLongArray *OrgBouncycastleMathRawNat_create64WithInt_(jint len) {
  OrgBouncycastleMathRawNat_initialize();
  return [IOSLongArray newArrayWithLength:len];
}

jint OrgBouncycastleMathRawNat_csubWithInt_withInt_withIntArray_withIntArray_withIntArray_(jint len, jint mask, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong MASK = -(mask & 1) & OrgBouncycastleMathRawNat_M;
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 335
    c += (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), i) & MASK);
    *IOSIntArray_GetRef(nil_chk(z), i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 342
jint OrgBouncycastleMathRawNat_csubWithInt_withInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, jint mask, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong MASK = -(mask & 1) & OrgBouncycastleMathRawNat_M;
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 348
    c += (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), yOff + i) & MASK);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 355
jint OrgBouncycastleMathRawNat_decWithInt_withIntArray_(jint len, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 359
    if (--(*IOSIntArray_GetRef(nil_chk(z), i)) != -1) {
      
#line 361
      return 0;
    }
  }
  return -1;
}


#line 367
jint OrgBouncycastleMathRawNat_decWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jint i = 0;
  while (i < len) {
    
#line 372
    jint c = IOSIntArray_Get(nil_chk(x), i) - 1;
    *IOSIntArray_GetRef(nil_chk(z), i) = c;
    ++i;
    if (c != -1) {
      
#line 377
      while (i < len) {
        
#line 379
        *IOSIntArray_GetRef(z, i) = IOSIntArray_Get(x, i);
        ++i;
      }
      return 0;
    }
  }
  return -1;
}


#line 388
jint OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 391
  for (jint i = zPos; i < len; ++i) {
    
#line 393
    if (--(*IOSIntArray_GetRef(nil_chk(z), i)) != -1) {
      
#line 395
      return 0;
    }
  }
  return -1;
}


#line 401
jint OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 404
  for (jint i = zPos; i < len; ++i) {
    
#line 406
    if (--(*IOSIntArray_GetRef(nil_chk(z), zOff + i)) != -1) {
      
#line 408
      return 0;
    }
  }
  return -1;
}


#line 414
jboolean OrgBouncycastleMathRawNat_diffWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jboolean pos = OrgBouncycastleMathRawNat_gteWithInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff);
  if (pos) {
    
#line 419
    OrgBouncycastleMathRawNat_subWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, x, xOff, y, yOff, z, zOff);
  }
  else {
    
#line 423
    OrgBouncycastleMathRawNat_subWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(len, y, yOff, x, xOff, z, zOff);
  }
  return pos;
}


#line 428
jboolean OrgBouncycastleMathRawNat_eqWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = len - 1; i >= 0; --i) {
    
#line 432
    if (IOSIntArray_Get(nil_chk(x), i) != IOSIntArray_Get(nil_chk(y), i)) {
      
#line 434
      return false;
    }
  }
  return true;
}


#line 440
jint OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint y) {
  OrgBouncycastleMathRawNat_initialize();
  jint d = IOSIntArray_Get(nil_chk(x), 0) ^ y;
  for (jint i = 1; i < len; ++i) {
    
#line 445
    d |= IOSIntArray_Get(x, i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 451
jint OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *x, jint xOff, jint y) {
  OrgBouncycastleMathRawNat_initialize();
  jint d = IOSIntArray_Get(nil_chk(x), xOff) ^ y;
  for (jint i = 1; i < len; ++i) {
    
#line 456
    d |= IOSIntArray_Get(x, xOff + i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 462
jint OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y) {
  OrgBouncycastleMathRawNat_initialize();
  jint d = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 467
    d |= IOSIntArray_Get(nil_chk(x), i) ^ IOSIntArray_Get(nil_chk(y), i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 473
jint OrgBouncycastleMathRawNat_equalToWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff) {
  OrgBouncycastleMathRawNat_initialize();
  jint d = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 478
    d |= IOSIntArray_Get(nil_chk(x), xOff + i) ^ IOSIntArray_Get(nil_chk(y), yOff + i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 484
jint OrgBouncycastleMathRawNat_equalToZeroWithInt_withIntArray_(jint len, IOSIntArray *x) {
  OrgBouncycastleMathRawNat_initialize();
  jint d = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 489
    d |= IOSIntArray_Get(nil_chk(x), i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 495
jint OrgBouncycastleMathRawNat_equalToZeroWithInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff) {
  OrgBouncycastleMathRawNat_initialize();
  jint d = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 500
    d |= IOSIntArray_Get(nil_chk(x), xOff + i);
  }
  d = (JreURShift32(d, 1)) | (d & 1);
  return JreRShift32((d - 1), 31);
}


#line 506
IOSIntArray *OrgBouncycastleMathRawNat_fromBigIntegerWithInt_withJavaMathBigInteger_(jint bits, JavaMathBigInteger *x) {
  OrgBouncycastleMathRawNat_initialize();
  if ([((JavaMathBigInteger *) nil_chk(x)) signum] < 0 || [x bitLength] > bits) {
    
#line 510
    @throw new_JavaLangIllegalArgumentException_init();
  }
  
#line 513
  jint len = JreRShift32((bits + 31), 5);
  IOSIntArray *z = OrgBouncycastleMathRawNat_createWithInt_(len);
  
#line 517
  for (jint i = 0; i < len; ++i) {
    
#line 519
    *IOSIntArray_GetRef(nil_chk(z), i) = [((JavaMathBigInteger *) nil_chk(x)) intValue];
    x = [x shiftRightWithInt:32];
  }
  return z;
}


#line 525
IOSLongArray *OrgBouncycastleMathRawNat_fromBigInteger64WithInt_withJavaMathBigInteger_(jint bits, JavaMathBigInteger *x) {
  OrgBouncycastleMathRawNat_initialize();
  if ([((JavaMathBigInteger *) nil_chk(x)) signum] < 0 || [x bitLength] > bits) {
    
#line 529
    @throw new_JavaLangIllegalArgumentException_init();
  }
  
#line 532
  jint len = JreRShift32((bits + 63), 6);
  IOSLongArray *z = OrgBouncycastleMathRawNat_create64WithInt_(len);
  
#line 536
  for (jint i = 0; i < len; ++i) {
    
#line 538
    *IOSLongArray_GetRef(nil_chk(z), i) = [((JavaMathBigInteger *) nil_chk(x)) longLongValue];
    x = [x shiftRightWithInt:64];
  }
  return z;
}


#line 544
jint OrgBouncycastleMathRawNat_getBitWithIntArray_withInt_(IOSIntArray *x, jint bit) {
  OrgBouncycastleMathRawNat_initialize();
  if (bit == 0) {
    
#line 548
    return IOSIntArray_Get(nil_chk(x), 0) & 1;
  }
  jint w = JreRShift32(bit, 5);
  if (w < 0 || w >= ((IOSIntArray *) nil_chk(x))->size_) {
    
#line 553
    return 0;
  }
  jint b = bit & 31;
  return (JreURShift32(IOSIntArray_Get(nil_chk(x), w), b)) & 1;
}


#line 559
jboolean OrgBouncycastleMathRawNat_gteWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = len - 1; i >= 0; --i) {
    
#line 563
    jint x_i = IOSIntArray_Get(nil_chk(x), i) ^ JavaLangInteger_MIN_VALUE;
    jint y_i = IOSIntArray_Get(nil_chk(y), i) ^ JavaLangInteger_MIN_VALUE;
    if (x_i < y_i)
#line 566
    return false;
    if (x_i > y_i)
#line 568
    return true;
  }
  return true;
}


#line 573
jboolean OrgBouncycastleMathRawNat_gteWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = len - 1; i >= 0; --i) {
    
#line 577
    jint x_i = IOSIntArray_Get(nil_chk(x), xOff + i) ^ JavaLangInteger_MIN_VALUE;
    jint y_i = IOSIntArray_Get(nil_chk(y), yOff + i) ^ JavaLangInteger_MIN_VALUE;
    if (x_i < y_i)
#line 580
    return false;
    if (x_i > y_i)
#line 582
    return true;
  }
  return true;
}


#line 587
jint OrgBouncycastleMathRawNat_incWithInt_withIntArray_(jint len, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 591
    if (++(*IOSIntArray_GetRef(nil_chk(z), i)) != 0) {
      
#line 593
      return 0;
    }
  }
  return 1;
}


#line 599
jint OrgBouncycastleMathRawNat_incWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jint i = 0;
  while (i < len) {
    
#line 604
    jint c = IOSIntArray_Get(nil_chk(x), i) + 1;
    *IOSIntArray_GetRef(nil_chk(z), i) = c;
    ++i;
    if (c != 0) {
      
#line 609
      while (i < len) {
        
#line 611
        *IOSIntArray_GetRef(z, i) = IOSIntArray_Get(x, i);
        ++i;
      }
      return 0;
    }
  }
  return 1;
}


#line 620
jint OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 623
  for (jint i = zPos; i < len; ++i) {
    
#line 625
    if (++(*IOSIntArray_GetRef(nil_chk(z), i)) != 0) {
      
#line 627
      return 0;
    }
  }
  return 1;
}


#line 633
jint OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 636
  for (jint i = zPos; i < len; ++i) {
    
#line 638
    if (++(*IOSIntArray_GetRef(nil_chk(z), zOff + i)) != 0) {
      
#line 640
      return 0;
    }
  }
  return 1;
}


#line 646
jboolean OrgBouncycastleMathRawNat_isOneWithInt_withIntArray_(jint len, IOSIntArray *x) {
  OrgBouncycastleMathRawNat_initialize();
  if (IOSIntArray_Get(nil_chk(x), 0) != 1) {
    
#line 650
    return false;
  }
  for (jint i = 1; i < len; ++i) {
    
#line 654
    if (IOSIntArray_Get(x, i) != 0) {
      
#line 656
      return false;
    }
  }
  return true;
}


#line 662
jboolean OrgBouncycastleMathRawNat_isZeroWithInt_withIntArray_(jint len, IOSIntArray *x) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 666
    if (IOSIntArray_Get(nil_chk(x), i) != 0) {
      
#line 668
      return false;
    }
  }
  return true;
}


#line 674
jint OrgBouncycastleMathRawNat_lessThanWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 679
    c += (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat_M);
    JreRShiftAssignLong(&c, 32);
  }
  
#line 683
  return (jint) c;
}


#line 686
jint OrgBouncycastleMathRawNat_lessThanWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 691
    c += (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), yOff + i) & OrgBouncycastleMathRawNat_M);
    JreRShiftAssignLong(&c, 32);
  }
  
#line 695
  return (jint) c;
}


#line 698
void OrgBouncycastleMathRawNat_mulWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat_initialize();
  *IOSIntArray_GetRef(nil_chk(zz), len) = OrgBouncycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withIntArray_(len, IOSIntArray_Get(nil_chk(x), 0), y, zz);
  
#line 702
  for (jint i = 1; i < len; ++i) {
    
#line 704
    *IOSIntArray_GetRef(zz, i + len) = OrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, IOSIntArray_Get(x, i), y, 0, zz, i);
  }
}


#line 708
void OrgBouncycastleMathRawNat_mulWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat_initialize();
  *IOSIntArray_GetRef(nil_chk(zz), zzOff + len) = OrgBouncycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, IOSIntArray_Get(nil_chk(x), xOff), y, yOff, zz, zzOff);
  
#line 712
  for (jint i = 1; i < len; ++i) {
    
#line 714
    *IOSIntArray_GetRef(zz, zzOff + i + len) = OrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, IOSIntArray_Get(x, xOff + i), y, yOff, zz, zzOff + i);
  }
}


#line 718
void OrgBouncycastleMathRawNat_mulWithIntArray_withInt_withInt_withIntArray_withInt_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, jint xLen, IOSIntArray *y, jint yOff, jint yLen, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat_initialize();
  *IOSIntArray_GetRef(nil_chk(zz), zzOff + yLen) = OrgBouncycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(yLen, IOSIntArray_Get(nil_chk(x), xOff), y, yOff, zz, zzOff);
  
#line 722
  for (jint i = 1; i < xLen; ++i) {
    
#line 724
    *IOSIntArray_GetRef(zz, zzOff + i + yLen) = OrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(yLen, IOSIntArray_Get(x, xOff + i), y, yOff, zz, zzOff + i);
  }
}


#line 728
jint OrgBouncycastleMathRawNat_mulAddToWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat_initialize();
  jlong zc = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 733
    zc += OrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, IOSIntArray_Get(nil_chk(x), i), y, 0, zz, i) & OrgBouncycastleMathRawNat_M;
    zc += IOSIntArray_Get(nil_chk(zz), i + len) & OrgBouncycastleMathRawNat_M;
    *IOSIntArray_GetRef(zz, i + len) = (jint) zc;
    JreURShiftAssignLong(&zc, 32);
  }
  return (jint) zc;
}


#line 741
jint OrgBouncycastleMathRawNat_mulAddToWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong zc = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 746
    zc += OrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(len, IOSIntArray_Get(nil_chk(x), xOff + i), y, yOff, zz, zzOff) & OrgBouncycastleMathRawNat_M;
    zc += IOSIntArray_Get(nil_chk(zz), zzOff + len) & OrgBouncycastleMathRawNat_M;
    *IOSIntArray_GetRef(zz, zzOff + len) = (jint) zc;
    JreURShiftAssignLong(&zc, 32);
    ++zzOff;
  }
  return (jint) zc;
}


#line 755
jint OrgBouncycastleMathRawNat_mul31BothAddWithInt_withInt_withIntArray_withInt_withIntArray_withIntArray_withInt_(jint len, jint a, IOSIntArray *x, jint b, IOSIntArray *y, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  
#line 757
  jlong aVal = a & OrgBouncycastleMathRawNat_M;
  
#line 757
  jlong bVal = b & OrgBouncycastleMathRawNat_M;
  jint i = 0;
  do {
    
#line 761
    c += aVal * (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) + bVal * (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, zOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  while (++i < len);
  return (jint) c;
}


#line 769
jint OrgBouncycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withIntArray_(jint len, jint x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  
#line 771
  jlong xVal = x & OrgBouncycastleMathRawNat_M;
  jint i = 0;
  do {
    
#line 775
    c += xVal * (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(nil_chk(z), i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  while (++i < len);
  return (jint) c;
}


#line 783
jint OrgBouncycastleMathRawNat_mulWordWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  
#line 785
  jlong xVal = x & OrgBouncycastleMathRawNat_M;
  jint i = 0;
  do {
    
#line 789
    c += xVal * (IOSIntArray_Get(nil_chk(y), yOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  while (++i < len);
  return (jint) c;
}


#line 797
jint OrgBouncycastleMathRawNat_mulWordAddToWithInt_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  
#line 799
  jlong xVal = x & OrgBouncycastleMathRawNat_M;
  jint i = 0;
  do {
    
#line 803
    c += xVal * (IOSIntArray_Get(nil_chk(y), yOff + i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, zOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  while (++i < len);
  return (jint) c;
}


#line 811
jint OrgBouncycastleMathRawNat_mulWordDwordAddAtWithInt_withInt_withLong_withIntArray_withInt_(jint len, jint x, jlong y, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 814
  jlong c = 0;
  
#line 814
  jlong xVal = x & OrgBouncycastleMathRawNat_M;
  c += xVal * (y & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), zPos + 0) & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += xVal * (JreURShift64(y, 32)) + (IOSIntArray_Get(z, zPos + 1) & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zPos + 2) & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_(len, z, zPos + 3);
}


#line 827
jint OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  jint i = len;
  while (--i >= 0) {
    
#line 832
    jint next = IOSIntArray_Get(nil_chk(z), i);
    *IOSIntArray_GetRef(z, i) = (JreURShift32(next, 1)) | (JreLShift32(c, 31));
    c = next;
  }
  return JreLShift32(c, 31);
}


#line 839
jint OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  jint i = len;
  while (--i >= 0) {
    
#line 844
    jint next = IOSIntArray_Get(nil_chk(z), zOff + i);
    *IOSIntArray_GetRef(z, zOff + i) = (JreURShift32(next, 1)) | (JreLShift32(c, 31));
    c = next;
  }
  return JreLShift32(c, 31);
}


#line 851
jint OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withIntArray_(jint len, IOSIntArray *x, jint c, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jint i = len;
  while (--i >= 0) {
    
#line 856
    jint next = IOSIntArray_Get(nil_chk(x), i);
    *IOSIntArray_GetRef(nil_chk(z), i) = (JreURShift32(next, 1)) | (JreLShift32(c, 31));
    c = next;
  }
  return JreLShift32(c, 31);
}


#line 863
jint OrgBouncycastleMathRawNat_shiftDownBitWithInt_withIntArray_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint c, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jint i = len;
  while (--i >= 0) {
    
#line 868
    jint next = IOSIntArray_Get(nil_chk(x), xOff + i);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (JreURShift32(next, 1)) | (JreLShift32(c, 31));
    c = next;
  }
  return JreLShift32(c, 31);
}


#line 875
jint OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint bits, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 878
  jint i = len;
  while (--i >= 0) {
    
#line 881
    jint next = IOSIntArray_Get(nil_chk(z), i);
    *IOSIntArray_GetRef(z, i) = (JreURShift32(next, bits)) | (JreLShift32(c, -bits));
    c = next;
  }
  return JreLShift32(c, -bits);
}


#line 888
jint OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint bits, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 891
  jint i = len;
  while (--i >= 0) {
    
#line 894
    jint next = IOSIntArray_Get(nil_chk(z), zOff + i);
    *IOSIntArray_GetRef(z, zOff + i) = (JreURShift32(next, bits)) | (JreLShift32(c, -bits));
    c = next;
  }
  return JreLShift32(c, -bits);
}


#line 901
jint OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withIntArray_(jint len, IOSIntArray *x, jint bits, jint c, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 904
  jint i = len;
  while (--i >= 0) {
    
#line 907
    jint next = IOSIntArray_Get(nil_chk(x), i);
    *IOSIntArray_GetRef(nil_chk(z), i) = (JreURShift32(next, bits)) | (JreLShift32(c, -bits));
    c = next;
  }
  return JreLShift32(c, -bits);
}


#line 914
jint OrgBouncycastleMathRawNat_shiftDownBitsWithInt_withIntArray_withInt_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint bits, jint c, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 917
  jint i = len;
  while (--i >= 0) {
    
#line 920
    jint next = IOSIntArray_Get(nil_chk(x), xOff + i);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (JreURShift32(next, bits)) | (JreLShift32(c, -bits));
    c = next;
  }
  return JreLShift32(c, -bits);
}


#line 927
jint OrgBouncycastleMathRawNat_shiftDownWordWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  jint i = len;
  while (--i >= 0) {
    
#line 932
    jint next = IOSIntArray_Get(nil_chk(z), i);
    *IOSIntArray_GetRef(z, i) = c;
    c = next;
  }
  return c;
}


#line 939
jint OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 943
    jint next = IOSIntArray_Get(nil_chk(z), i);
    *IOSIntArray_GetRef(z, i) = (JreLShift32(next, 1)) | (JreURShift32(c, 31));
    c = next;
  }
  return JreURShift32(c, 31);
}


#line 950
jint OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 954
    jint next = IOSIntArray_Get(nil_chk(z), zOff + i);
    *IOSIntArray_GetRef(z, zOff + i) = (JreLShift32(next, 1)) | (JreURShift32(c, 31));
    c = next;
  }
  return JreURShift32(c, 31);
}


#line 961
jint OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withIntArray_(jint len, IOSIntArray *x, jint c, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 965
    jint next = IOSIntArray_Get(nil_chk(x), i);
    *IOSIntArray_GetRef(nil_chk(z), i) = (JreLShift32(next, 1)) | (JreURShift32(c, 31));
    c = next;
  }
  return JreURShift32(c, 31);
}


#line 972
jint OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint c, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 976
    jint next = IOSIntArray_Get(nil_chk(x), xOff + i);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (JreLShift32(next, 1)) | (JreURShift32(c, 31));
    c = next;
  }
  return JreURShift32(c, 31);
}


#line 983
jlong OrgBouncycastleMathRawNat_shiftUpBit64WithInt_withLongArray_withInt_withLong_withLongArray_withInt_(jint len, IOSLongArray *x, jint xOff, jlong c, IOSLongArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 987
    jlong next = IOSLongArray_Get(nil_chk(x), xOff + i);
    *IOSLongArray_GetRef(nil_chk(z), zOff + i) = (JreLShift64(next, 1)) | (JreURShift64(c, 63));
    c = next;
  }
  return JreURShift64(c, 63);
}


#line 994
jint OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_(jint len, IOSIntArray *z, jint bits, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 997
  for (jint i = 0; i < len; ++i) {
    
#line 999
    jint next = IOSIntArray_Get(nil_chk(z), i);
    *IOSIntArray_GetRef(z, i) = (JreLShift32(next, bits)) | (JreURShift32(c, -bits));
    c = next;
  }
  return JreURShift32(c, -bits);
}


#line 1006
jint OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withInt_(jint len, IOSIntArray *z, jint zOff, jint bits, jint c) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1009
  for (jint i = 0; i < len; ++i) {
    
#line 1011
    jint next = IOSIntArray_Get(nil_chk(z), zOff + i);
    *IOSIntArray_GetRef(z, zOff + i) = (JreLShift32(next, bits)) | (JreURShift32(c, -bits));
    c = next;
  }
  return JreURShift32(c, -bits);
}


#line 1018
jlong OrgBouncycastleMathRawNat_shiftUpBits64WithInt_withLongArray_withInt_withInt_withLong_(jint len, IOSLongArray *z, jint zOff, jint bits, jlong c) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1021
  for (jint i = 0; i < len; ++i) {
    
#line 1023
    jlong next = IOSLongArray_Get(nil_chk(z), zOff + i);
    *IOSLongArray_GetRef(z, zOff + i) = (JreLShift64(next, bits)) | (JreURShift64(c, -bits));
    c = next;
  }
  return JreURShift64(c, -bits);
}


#line 1030
jint OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withIntArray_(jint len, IOSIntArray *x, jint bits, jint c, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1033
  for (jint i = 0; i < len; ++i) {
    
#line 1035
    jint next = IOSIntArray_Get(nil_chk(x), i);
    *IOSIntArray_GetRef(nil_chk(z), i) = (JreLShift32(next, bits)) | (JreURShift32(c, -bits));
    c = next;
  }
  return JreURShift32(c, -bits);
}


#line 1042
jint OrgBouncycastleMathRawNat_shiftUpBitsWithInt_withIntArray_withInt_withInt_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, jint bits, jint c, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1045
  for (jint i = 0; i < len; ++i) {
    
#line 1047
    jint next = IOSIntArray_Get(nil_chk(x), xOff + i);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (JreLShift32(next, bits)) | (JreURShift32(c, -bits));
    c = next;
  }
  return JreURShift32(c, -bits);
}


#line 1054
jlong OrgBouncycastleMathRawNat_shiftUpBits64WithInt_withLongArray_withInt_withInt_withLong_withLongArray_withInt_(jint len, IOSLongArray *x, jint xOff, jint bits, jlong c, IOSLongArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1057
  for (jint i = 0; i < len; ++i) {
    
#line 1059
    jlong next = IOSLongArray_Get(nil_chk(x), xOff + i);
    *IOSLongArray_GetRef(nil_chk(z), zOff + i) = (JreLShift64(next, bits)) | (JreURShift64(c, -bits));
    c = next;
  }
  return JreURShift64(c, -bits);
}


#line 1066
void OrgBouncycastleMathRawNat_squareWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat_initialize();
  jint extLen = JreLShift32(len, 1);
  jint c = 0;
  jint j = len;
  
#line 1070
  jint k = extLen;
  do {
    
#line 1073
    jlong xVal = (IOSIntArray_Get(nil_chk(x), --j) & OrgBouncycastleMathRawNat_M);
    jlong p = xVal * xVal;
    *IOSIntArray_GetRef(nil_chk(zz), --k) = (JreLShift32(c, 31)) | (jint) (JreURShift64(p, 33));
    *IOSIntArray_GetRef(zz, --k) = (jint) (JreURShift64(p, 1));
    c = (jint) p;
  }
  while (j > 0);
  
#line 1081
  jlong d = 0LL;
  jint zzPos = 2;
  
#line 1084
  for (jint i = 1; i < len; ++i) {
    
#line 1086
    d += OrgBouncycastleMathRawNat_squareWordAddToWithIntArray_withInt_withIntArray_(x, i, zz) & OrgBouncycastleMathRawNat_M;
    d += IOSIntArray_Get(zz, zzPos) & OrgBouncycastleMathRawNat_M;
    *IOSIntArray_GetRef(zz, zzPos++) = (jint) d;
    
#line 1088
    JreURShiftAssignLong(&d, 32);
    d += IOSIntArray_Get(zz, zzPos) & OrgBouncycastleMathRawNat_M;
    *IOSIntArray_GetRef(zz, zzPos++) = (jint) d;
    
#line 1090
    JreURShiftAssignLong(&d, 32);
  }
  
#line 1094
  OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_(extLen, zz, JreLShift32(IOSIntArray_Get(x, 0), 31));
}


#line 1097
void OrgBouncycastleMathRawNat_squareWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat_initialize();
  jint extLen = JreLShift32(len, 1);
  jint c = 0;
  jint j = len;
  
#line 1101
  jint k = extLen;
  do {
    
#line 1104
    jlong xVal = (IOSIntArray_Get(nil_chk(x), xOff + --j) & OrgBouncycastleMathRawNat_M);
    jlong p = xVal * xVal;
    *IOSIntArray_GetRef(nil_chk(zz), zzOff + --k) = (JreLShift32(c, 31)) | (jint) (JreURShift64(p, 33));
    *IOSIntArray_GetRef(zz, zzOff + --k) = (jint) (JreURShift64(p, 1));
    c = (jint) p;
  }
  while (j > 0);
  
#line 1112
  jlong d = 0LL;
  jint zzPos = zzOff + 2;
  
#line 1115
  for (jint i = 1; i < len; ++i) {
    
#line 1117
    d += OrgBouncycastleMathRawNat_squareWordAddToWithIntArray_withInt_withInt_withIntArray_withInt_(x, xOff, i, zz, zzOff) & OrgBouncycastleMathRawNat_M;
    d += IOSIntArray_Get(zz, zzPos) & OrgBouncycastleMathRawNat_M;
    *IOSIntArray_GetRef(zz, zzPos++) = (jint) d;
    
#line 1119
    JreURShiftAssignLong(&d, 32);
    d += IOSIntArray_Get(zz, zzPos) & OrgBouncycastleMathRawNat_M;
    *IOSIntArray_GetRef(zz, zzPos++) = (jint) d;
    
#line 1121
    JreURShiftAssignLong(&d, 32);
  }
  
#line 1125
  OrgBouncycastleMathRawNat_shiftUpBitWithInt_withIntArray_withInt_withInt_(extLen, zz, zzOff, JreLShift32(IOSIntArray_Get(x, xOff), 31));
}


#line 1128
jint OrgBouncycastleMathRawNat_squareWordAddToWithIntArray_withInt_withIntArray_(IOSIntArray *x, jint xPos, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  
#line 1130
  jlong xVal = IOSIntArray_Get(nil_chk(x), xPos) & OrgBouncycastleMathRawNat_M;
  jint i = 0;
  do {
    
#line 1134
    c += xVal * (IOSIntArray_Get(x, i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), xPos + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, xPos + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  while (++i < xPos);
  return (jint) c;
}


#line 1142
jint OrgBouncycastleMathRawNat_squareWordAddToWithIntArray_withInt_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, jint xPos, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  
#line 1144
  jlong xVal = IOSIntArray_Get(nil_chk(x), xOff + xPos) & OrgBouncycastleMathRawNat_M;
  jint i = 0;
  do {
    
#line 1148
    c += xVal * (IOSIntArray_Get(x, xOff + i) & OrgBouncycastleMathRawNat_M) + (IOSIntArray_Get(nil_chk(z), xPos + zOff) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, xPos + zOff) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    ++zOff;
  }
  while (++i < xPos);
  return (jint) c;
}


#line 1157
jint OrgBouncycastleMathRawNat_subWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 1162
    c += (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(nil_chk(z), i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 1169
jint OrgBouncycastleMathRawNat_subWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 1174
    c += (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), yOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 1181
jint OrgBouncycastleMathRawNat_sub33AtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1184
  jlong c = (IOSIntArray_Get(nil_chk(z), zPos + 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos + 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zPos + 1) & OrgBouncycastleMathRawNat_M) - 1;
  *IOSIntArray_GetRef(z, zPos + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(len, z, zPos + 2);
}


#line 1193
jint OrgBouncycastleMathRawNat_sub33AtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1196
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + zPos) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + zPos) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + zPos + 1) & OrgBouncycastleMathRawNat_M) - 1;
  *IOSIntArray_GetRef(z, zOff + zPos + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos + 2);
}


#line 1205
jint OrgBouncycastleMathRawNat_sub33FromWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat_M) - 1;
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(len, z, 2);
}

jint OrgBouncycastleMathRawNat_sub33FromWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat_M) - 1;
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, 2);
}

jint OrgBouncycastleMathRawNat_subBothFromWithInt_withIntArray_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 1232
    c += (IOSIntArray_Get(nil_chk(z), i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 1239
jint OrgBouncycastleMathRawNat_subBothFromWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 1244
    c += (IOSIntArray_Get(nil_chk(z), zOff + i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(y), yOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, zOff + i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 1251
jint OrgBouncycastleMathRawNat_subDWordAtWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1254
  jlong c = (IOSIntArray_Get(nil_chk(z), zPos + 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos + 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zPos + 1) & OrgBouncycastleMathRawNat_M) - (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, zPos + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(len, z, zPos + 2);
}


#line 1263
jint OrgBouncycastleMathRawNat_subDWordAtWithInt_withLong_withIntArray_withInt_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1266
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + zPos) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + zPos) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + zPos + 1) & OrgBouncycastleMathRawNat_M) - (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, zOff + zPos + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos + 2);
}


#line 1275
jint OrgBouncycastleMathRawNat_subDWordFromWithInt_withLong_withIntArray_(jint len, jlong x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat_M) - (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(len, z, 2);
}

jint OrgBouncycastleMathRawNat_subDWordFromWithInt_withLong_withIntArray_withInt_(jint len, jlong x, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat_M) - (JreURShift64(x, 32));
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, 2);
}

jint OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withIntArray_(jint len, IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 1302
    c += (IOSIntArray_Get(nil_chk(z), i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 1309
jint OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withInt_withIntArray_withInt_(jint len, IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 1314
    c += (IOSIntArray_Get(nil_chk(z), zOff + i) & OrgBouncycastleMathRawNat_M) - (IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat_M);
    *IOSIntArray_GetRef(z, zOff + i) = (jint) c;
    JreRShiftAssignLong(&c, 32);
  }
  return (jint) c;
}


#line 1321
jint OrgBouncycastleMathRawNat_subWordAtWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1324
  jlong c = (IOSIntArray_Get(nil_chk(z), zPos) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zPos) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(len, z, zPos + 1);
}


#line 1330
jint OrgBouncycastleMathRawNat_subWordAtWithInt_withInt_withIntArray_withInt_withInt_(jint len, jint x, IOSIntArray *z, jint zOff, jint zPos) {
  OrgBouncycastleMathRawNat_initialize();
  
#line 1333
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + zPos) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + zPos) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, zPos + 1);
}


#line 1339
jint OrgBouncycastleMathRawNat_subWordFromWithInt_withInt_withIntArray_(jint len, jint x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_(len, z, 1);
}

jint OrgBouncycastleMathRawNat_subWordFromWithInt_withInt_withIntArray_withInt_(jint len, jint x, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  jlong c = (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat_M) - (x & OrgBouncycastleMathRawNat_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_decAtWithInt_withIntArray_withInt_withInt_(len, z, zOff, 1);
}

JavaMathBigInteger *OrgBouncycastleMathRawNat_toBigIntegerWithInt_withIntArray_(jint len, IOSIntArray *x) {
  OrgBouncycastleMathRawNat_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:JreLShift32(len, 2)];
  for (jint i = 0; i < len; ++i) {
    
#line 1360
    jint x_i = IOSIntArray_Get(nil_chk(x), i);
    if (x_i != 0) {
      
#line 1363
      OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(x_i, bs, JreLShift32((len - 1 - i), 2));
    }
  }
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, bs);
}


#line 1369
void OrgBouncycastleMathRawNat_zeroWithInt_withIntArray_(jint len, IOSIntArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 1373
    *IOSIntArray_GetRef(nil_chk(z), i) = 0;
  }
}


#line 1377
void OrgBouncycastleMathRawNat_zeroWithInt_withIntArray_withInt_(jint len, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 1381
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = 0;
  }
}


#line 1385
void OrgBouncycastleMathRawNat_zero64WithInt_withLongArray_(jint len, IOSLongArray *z) {
  OrgBouncycastleMathRawNat_initialize();
  for (jint i = 0; i < len; ++i) {
    
#line 1389
    *IOSLongArray_GetRef(nil_chk(z), i) = 0LL;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathRawNat)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Interleave.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathRawInterleave")
#ifdef RESTRICT_OrgBouncycastleMathRawInterleave
#define INCLUDE_ALL_OrgBouncycastleMathRawInterleave 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathRawInterleave 1
#endif
#undef RESTRICT_OrgBouncycastleMathRawInterleave

#if !defined (OrgBouncycastleMathRawInterleave_) && (INCLUDE_ALL_OrgBouncycastleMathRawInterleave || defined(INCLUDE_OrgBouncycastleMathRawInterleave))
#define OrgBouncycastleMathRawInterleave_

@class IOSLongArray;

@interface OrgBouncycastleMathRawInterleave : NSObject

#pragma mark Public

- (instancetype)init;

+ (jint)expand16to32WithInt:(jint)x;

+ (jlong)expand32to64WithInt:(jint)x;

+ (void)expand64To128WithLong:(jlong)x
                withLongArray:(IOSLongArray *)z
                      withInt:(jint)zOff;

+ (void)expand64To128WithLongArray:(IOSLongArray *)xs
                           withInt:(jint)xsOff
                           withInt:(jint)xsLen
                     withLongArray:(IOSLongArray *)zs
                           withInt:(jint)zsOff;

+ (void)expand64To128RevWithLong:(jlong)x
                   withLongArray:(IOSLongArray *)z
                         withInt:(jint)zOff;

+ (jint)expand8to16WithInt:(jint)x;

+ (jint)shuffleWithInt:(jint)x;

+ (jlong)shuffleWithLong:(jlong)x;

+ (jint)shuffle2WithInt:(jint)x;

+ (jlong)shuffle2WithLong:(jlong)x;

+ (jlong)shuffle3WithLong:(jlong)x;

+ (jint)unshuffleWithInt:(jint)x;

+ (jlong)unshuffleWithLong:(jlong)x;

+ (jint)unshuffle2WithInt:(jint)x;

+ (jlong)unshuffle2WithLong:(jlong)x;

+ (jlong)unshuffle3WithLong:(jlong)x;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathRawInterleave)

FOUNDATION_EXPORT void OrgBouncycastleMathRawInterleave_init(OrgBouncycastleMathRawInterleave *self);

FOUNDATION_EXPORT OrgBouncycastleMathRawInterleave *new_OrgBouncycastleMathRawInterleave_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleMathRawInterleave *create_OrgBouncycastleMathRawInterleave_init(void);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawInterleave_expand8to16WithInt_(jint x);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawInterleave_expand16to32WithInt_(jint x);

FOUNDATION_EXPORT jlong OrgBouncycastleMathRawInterleave_expand32to64WithInt_(jint x);

FOUNDATION_EXPORT void OrgBouncycastleMathRawInterleave_expand64To128WithLong_withLongArray_withInt_(jlong x, IOSLongArray *z, jint zOff);

FOUNDATION_EXPORT void OrgBouncycastleMathRawInterleave_expand64To128WithLongArray_withInt_withInt_withLongArray_withInt_(IOSLongArray *xs, jint xsOff, jint xsLen, IOSLongArray *zs, jint zsOff);

FOUNDATION_EXPORT void OrgBouncycastleMathRawInterleave_expand64To128RevWithLong_withLongArray_withInt_(jlong x, IOSLongArray *z, jint zOff);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawInterleave_shuffleWithInt_(jint x);

FOUNDATION_EXPORT jlong OrgBouncycastleMathRawInterleave_shuffleWithLong_(jlong x);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawInterleave_shuffle2WithInt_(jint x);

FOUNDATION_EXPORT jlong OrgBouncycastleMathRawInterleave_shuffle2WithLong_(jlong x);

FOUNDATION_EXPORT jlong OrgBouncycastleMathRawInterleave_shuffle3WithLong_(jlong x);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawInterleave_unshuffleWithInt_(jint x);

FOUNDATION_EXPORT jlong OrgBouncycastleMathRawInterleave_unshuffleWithLong_(jlong x);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawInterleave_unshuffle2WithInt_(jint x);

FOUNDATION_EXPORT jlong OrgBouncycastleMathRawInterleave_unshuffle2WithLong_(jlong x);

FOUNDATION_EXPORT jlong OrgBouncycastleMathRawInterleave_unshuffle3WithLong_(jlong x);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathRawInterleave)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathRawInterleave")

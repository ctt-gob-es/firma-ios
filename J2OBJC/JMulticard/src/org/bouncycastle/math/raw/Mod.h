//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Mod.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleMathRawMod")
#ifdef RESTRICT_OrgBouncycastleMathRawMod
#define INCLUDE_ALL_OrgBouncycastleMathRawMod 0
#else
#define INCLUDE_ALL_OrgBouncycastleMathRawMod 1
#endif
#undef RESTRICT_OrgBouncycastleMathRawMod

#if !defined (OrgBouncycastleMathRawMod_) && (INCLUDE_ALL_OrgBouncycastleMathRawMod || defined(INCLUDE_OrgBouncycastleMathRawMod))
#define OrgBouncycastleMathRawMod_

@class IOSIntArray;

@interface OrgBouncycastleMathRawMod : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)checkedModOddInverseWithIntArray:(IOSIntArray *)m
                            withIntArray:(IOSIntArray *)x
                            withIntArray:(IOSIntArray *)z;

+ (void)checkedModOddInverseVarWithIntArray:(IOSIntArray *)m
                               withIntArray:(IOSIntArray *)x
                               withIntArray:(IOSIntArray *)z;

+ (jint)inverse32WithInt:(jint)d;

+ (jint)modOddInverseWithIntArray:(IOSIntArray *)m
                     withIntArray:(IOSIntArray *)x
                     withIntArray:(IOSIntArray *)z;

+ (jboolean)modOddInverseVarWithIntArray:(IOSIntArray *)m
                            withIntArray:(IOSIntArray *)x
                            withIntArray:(IOSIntArray *)z;

+ (IOSIntArray *)randomWithIntArray:(IOSIntArray *)p;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleMathRawMod)

FOUNDATION_EXPORT void OrgBouncycastleMathRawMod_init(OrgBouncycastleMathRawMod *self);

FOUNDATION_EXPORT void OrgBouncycastleMathRawMod_checkedModOddInverseWithIntArray_withIntArray_withIntArray_(IOSIntArray *m, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT void OrgBouncycastleMathRawMod_checkedModOddInverseVarWithIntArray_withIntArray_withIntArray_(IOSIntArray *m, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawMod_inverse32WithInt_(jint d);

FOUNDATION_EXPORT jint OrgBouncycastleMathRawMod_modOddInverseWithIntArray_withIntArray_withIntArray_(IOSIntArray *m, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT jboolean OrgBouncycastleMathRawMod_modOddInverseVarWithIntArray_withIntArray_withIntArray_(IOSIntArray *m, IOSIntArray *x, IOSIntArray *z);

FOUNDATION_EXPORT IOSIntArray *OrgBouncycastleMathRawMod_randomWithIntArray_(IOSIntArray *p);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleMathRawMod)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleMathRawMod")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Interleave.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/math/raw/Bits.h"
#include "org/bouncycastle/math/raw/Interleave.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/raw/Interleave must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong OrgBouncycastleMathRawInterleave_get_M32(void);
#define OrgBouncycastleMathRawInterleave_M32 1431655765LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathRawInterleave, M32, jlong)

inline jlong OrgBouncycastleMathRawInterleave_get_M64(void);
#define OrgBouncycastleMathRawInterleave_M64 6148914691236517205LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathRawInterleave, M64, jlong)

inline jlong OrgBouncycastleMathRawInterleave_get_M64R(void);
#define OrgBouncycastleMathRawInterleave_M64R -6148914691236517206LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathRawInterleave, M64R, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Interleave.java"


#line 3
@implementation OrgBouncycastleMathRawInterleave

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 3
- (instancetype)init {
  OrgBouncycastleMathRawInterleave_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 51
+ (jint)expand8to16WithInt:(jint)x {
  return OrgBouncycastleMathRawInterleave_expand8to16WithInt_(x);
}


#line 60
+ (jint)expand16to32WithInt:(jint)x {
  return OrgBouncycastleMathRawInterleave_expand16to32WithInt_(x);
}


#line 70
+ (jlong)expand32to64WithInt:(jint)x {
  return OrgBouncycastleMathRawInterleave_expand32to64WithInt_(x);
}


#line 81
+ (void)expand64To128WithLong:(jlong)x
                withLongArray:(IOSLongArray *)z
                      withInt:(jint)zOff {
  OrgBouncycastleMathRawInterleave_expand64To128WithLong_withLongArray_withInt_(x, z, zOff);
}


#line 94
+ (void)expand64To128WithLongArray:(IOSLongArray *)xs
                           withInt:(jint)xsOff
                           withInt:(jint)xsLen
                     withLongArray:(IOSLongArray *)zs
                           withInt:(jint)zsOff {
  OrgBouncycastleMathRawInterleave_expand64To128WithLongArray_withInt_withInt_withLongArray_withInt_(xs, xsOff, xsLen, zs, zsOff);
}


#line 103
+ (void)expand64To128RevWithLong:(jlong)x
                   withLongArray:(IOSLongArray *)z
                         withInt:(jint)zOff {
  OrgBouncycastleMathRawInterleave_expand64To128RevWithLong_withLongArray_withInt_(x, z, zOff);
}


#line 116
+ (jint)shuffleWithInt:(jint)x {
  return OrgBouncycastleMathRawInterleave_shuffleWithInt_(x);
}


#line 126
+ (jlong)shuffleWithLong:(jlong)x {
  return OrgBouncycastleMathRawInterleave_shuffleWithLong_(x);
}


#line 137
+ (jint)shuffle2WithInt:(jint)x {
  return OrgBouncycastleMathRawInterleave_shuffle2WithInt_(x);
}


#line 147
+ (jlong)shuffle2WithLong:(jlong)x {
  return OrgBouncycastleMathRawInterleave_shuffle2WithLong_(x);
}


#line 157
+ (jlong)shuffle3WithLong:(jlong)x {
  return OrgBouncycastleMathRawInterleave_shuffle3WithLong_(x);
}


#line 166
+ (jint)unshuffleWithInt:(jint)x {
  return OrgBouncycastleMathRawInterleave_unshuffleWithInt_(x);
}


#line 176
+ (jlong)unshuffleWithLong:(jlong)x {
  return OrgBouncycastleMathRawInterleave_unshuffleWithLong_(x);
}


#line 187
+ (jint)unshuffle2WithInt:(jint)x {
  return OrgBouncycastleMathRawInterleave_unshuffle2WithInt_(x);
}


#line 197
+ (jlong)unshuffle2WithLong:(jlong)x {
  return OrgBouncycastleMathRawInterleave_unshuffle2WithLong_(x);
}


#line 207
+ (jlong)unshuffle3WithLong:(jlong)x {
  return OrgBouncycastleMathRawInterleave_unshuffle3WithLong_(x);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 7, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 8, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 10, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 10, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 11, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 12, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 12, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 13, 1, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 13, 9, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 14, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(expand8to16WithInt:);
  methods[2].selector = @selector(expand16to32WithInt:);
  methods[3].selector = @selector(expand32to64WithInt:);
  methods[4].selector = @selector(expand64To128WithLong:withLongArray:withInt:);
  methods[5].selector = @selector(expand64To128WithLongArray:withInt:withInt:withLongArray:withInt:);
  methods[6].selector = @selector(expand64To128RevWithLong:withLongArray:withInt:);
  methods[7].selector = @selector(shuffleWithInt:);
  methods[8].selector = @selector(shuffleWithLong:);
  methods[9].selector = @selector(shuffle2WithInt:);
  methods[10].selector = @selector(shuffle2WithLong:);
  methods[11].selector = @selector(shuffle3WithLong:);
  methods[12].selector = @selector(unshuffleWithInt:);
  methods[13].selector = @selector(unshuffleWithLong:);
  methods[14].selector = @selector(unshuffle2WithInt:);
  methods[15].selector = @selector(unshuffle2WithLong:);
  methods[16].selector = @selector(unshuffle3WithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "M32", "J", .constantValue.asLong = OrgBouncycastleMathRawInterleave_M32, 0x1a, -1, -1, -1, -1 },
    { "M64", "J", .constantValue.asLong = OrgBouncycastleMathRawInterleave_M64, 0x1a, -1, -1, -1, -1 },
    { "M64R", "J", .constantValue.asLong = OrgBouncycastleMathRawInterleave_M64R, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "expand8to16", "I", "expand16to32", "expand32to64", "expand64To128", "J[JI", "[JII[JI", "expand64To128Rev", "shuffle", "J", "shuffle2", "shuffle3", "unshuffle", "unshuffle2", "unshuffle3" };
  static const J2ObjcClassInfo _OrgBouncycastleMathRawInterleave = { "Interleave", "org.bouncycastle.math.raw", ptrTable, methods, fields, 7, 0x1, 17, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathRawInterleave;
}

@end


#line 3
void OrgBouncycastleMathRawInterleave_init(OrgBouncycastleMathRawInterleave *self) {
  NSObject_init(self);
}


#line 3
OrgBouncycastleMathRawInterleave *new_OrgBouncycastleMathRawInterleave_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleMathRawInterleave, init)
}


#line 3
OrgBouncycastleMathRawInterleave *create_OrgBouncycastleMathRawInterleave_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleMathRawInterleave, init)
}


#line 51
jint OrgBouncycastleMathRawInterleave_expand8to16WithInt_(jint x) {
  OrgBouncycastleMathRawInterleave_initialize();
  x &= (jint) 0xFF;
  x = (x | (JreLShift32(x, 4))) & (jint) 0x0F0F;
  x = (x | (JreLShift32(x, 2))) & (jint) 0x3333;
  x = (x | (JreLShift32(x, 1))) & (jint) 0x5555;
  return x;
}

jint OrgBouncycastleMathRawInterleave_expand16to32WithInt_(jint x) {
  OrgBouncycastleMathRawInterleave_initialize();
  x &= (jint) 0xFFFF;
  x = (x | (JreLShift32(x, 8))) & (jint) 0x00FF00FF;
  x = (x | (JreLShift32(x, 4))) & (jint) 0x0F0F0F0F;
  x = (x | (JreLShift32(x, 2))) & (jint) 0x33333333;
  x = (x | (JreLShift32(x, 1))) & (jint) 0x55555555;
  return x;
}

jlong OrgBouncycastleMathRawInterleave_expand32to64WithInt_(jint x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 73
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0000FF00, 8);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x00F000F0, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0C0C0C0C, 2);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x22222222, 1);
  
#line 78
  return (JreLShift64(((JreURShift32(x, 1)) & OrgBouncycastleMathRawInterleave_M32), 32)) | (x & OrgBouncycastleMathRawInterleave_M32);
}


#line 81
void OrgBouncycastleMathRawInterleave_expand64To128WithLong_withLongArray_withInt_(jlong x, IOSLongArray *z, jint zOff) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 84
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00000000FFFF0000LL, 16);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0000FF000000FF00LL, 8);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00F000F000F000F0LL, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0C0C0C0C0C0C0C0CLL, 2);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x2222222222222222LL, 1);
  
#line 90
  *IOSLongArray_GetRef(nil_chk(z), zOff) = (x) & OrgBouncycastleMathRawInterleave_M64;
  *IOSLongArray_GetRef(z, zOff + 1) = (JreURShift64(x, 1)) & OrgBouncycastleMathRawInterleave_M64;
}


#line 94
void OrgBouncycastleMathRawInterleave_expand64To128WithLongArray_withInt_withInt_withLongArray_withInt_(IOSLongArray *xs, jint xsOff, jint xsLen, IOSLongArray *zs, jint zsOff) {
  OrgBouncycastleMathRawInterleave_initialize();
  for (jint i = 0; i < xsLen; ++i) {
    
#line 98
    OrgBouncycastleMathRawInterleave_expand64To128WithLong_withLongArray_withInt_(IOSLongArray_Get(nil_chk(xs), xsOff + i), zs, zsOff);
    zsOff += 2;
  }
}


#line 103
void OrgBouncycastleMathRawInterleave_expand64To128RevWithLong_withLongArray_withInt_(jlong x, IOSLongArray *z, jint zOff) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 106
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00000000FFFF0000LL, 16);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0000FF000000FF00LL, 8);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00F000F000F000F0LL, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0C0C0C0C0C0C0C0CLL, 2);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x2222222222222222LL, 1);
  
#line 112
  *IOSLongArray_GetRef(nil_chk(z), zOff) = (x) & OrgBouncycastleMathRawInterleave_M64R;
  *IOSLongArray_GetRef(z, zOff + 1) = (JreLShift64(x, 1)) & OrgBouncycastleMathRawInterleave_M64R;
}


#line 116
jint OrgBouncycastleMathRawInterleave_shuffleWithInt_(jint x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 119
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0000FF00, 8);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x00F000F0, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0C0C0C0C, 2);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x22222222, 1);
  return x;
}


#line 126
jlong OrgBouncycastleMathRawInterleave_shuffleWithLong_(jlong x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 129
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00000000FFFF0000LL, 16);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0000FF000000FF00LL, 8);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00F000F000F000F0LL, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0C0C0C0C0C0C0C0CLL, 2);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x2222222222222222LL, 1);
  return x;
}


#line 137
jint OrgBouncycastleMathRawInterleave_shuffle2WithInt_(jint x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 140
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x00AA00AA, 7);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0000CCCC, 14);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x00F000F0, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0000FF00, 8);
  return x;
}


#line 147
jlong OrgBouncycastleMathRawInterleave_shuffle2WithLong_(jlong x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 150
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00000000FF00FF00LL, 24);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00CC00CC00CC00CCLL, 6);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0000F0F00000F0F0LL, 12);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0A0A0A0A0A0A0A0ALL, 3);
  return x;
}


#line 157
jlong OrgBouncycastleMathRawInterleave_shuffle3WithLong_(jlong x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 160
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00AA00AA00AA00AALL, 7);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0000CCCC0000CCCCLL, 14);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00000000F0F0F0F0LL, 28);
  return x;
}


#line 166
jint OrgBouncycastleMathRawInterleave_unshuffleWithInt_(jint x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 169
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x22222222, 1);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0C0C0C0C, 2);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x00F000F0, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0000FF00, 8);
  return x;
}


#line 176
jlong OrgBouncycastleMathRawInterleave_unshuffleWithLong_(jlong x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 179
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x2222222222222222LL, 1);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0C0C0C0C0C0C0C0CLL, 2);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00F000F000F000F0LL, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0000FF000000FF00LL, 8);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00000000FFFF0000LL, 16);
  return x;
}


#line 187
jint OrgBouncycastleMathRawInterleave_unshuffle2WithInt_(jint x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 190
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0000FF00, 8);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x00F000F0, 4);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x0000CCCC, 14);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithInt_withInt_withInt_(x, (jint) 0x00AA00AA, 7);
  return x;
}


#line 197
jlong OrgBouncycastleMathRawInterleave_unshuffle2WithLong_(jlong x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 200
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0A0A0A0A0A0A0A0ALL, 3);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x0000F0F00000F0F0LL, 12);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00CC00CC00CC00CCLL, 6);
  x = OrgBouncycastleMathRawBits_bitPermuteStepWithLong_withLong_withInt_(x, (jlong) 0x00000000FF00FF00LL, 24);
  return x;
}


#line 207
jlong OrgBouncycastleMathRawInterleave_unshuffle3WithLong_(jlong x) {
  OrgBouncycastleMathRawInterleave_initialize();
  
#line 210
  return OrgBouncycastleMathRawInterleave_shuffle3WithLong_(x);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathRawInterleave)

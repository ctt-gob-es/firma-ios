//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Nat512.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/math/raw/Nat.h"
#include "org/bouncycastle/math/raw/Nat256.h"
#include "org/bouncycastle/math/raw/Nat512.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/raw/Nat512 must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Nat512.java"


#line 4
@implementation OrgBouncycastleMathRawNat512

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 4
- (instancetype)init {
  OrgBouncycastleMathRawNat512_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 6
+ (void)mulWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathRawNat512_mulWithIntArray_withIntArray_withIntArray_(x, y, zz);
}


#line 25
+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathRawNat512_squareWithIntArray_withIntArray_(x, zz);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mulWithIntArray:withIntArray:withIntArray:);
  methods[2].selector = @selector(squareWithIntArray:withIntArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "mul", "[I[I[I", "square", "[I[I" };
  static const J2ObjcClassInfo _OrgBouncycastleMathRawNat512 = { "Nat512", "org.bouncycastle.math.raw", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathRawNat512;
}

@end


#line 4
void OrgBouncycastleMathRawNat512_init(OrgBouncycastleMathRawNat512 *self) {
  NSObject_init(self);
}


#line 6
void OrgBouncycastleMathRawNat512_mulWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat512_initialize();
  OrgBouncycastleMathRawNat256_mulWithIntArray_withIntArray_withIntArray_(x, y, zz);
  OrgBouncycastleMathRawNat256_mulWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, 8, y, 8, zz, 16);
  
#line 11
  jint c24 = OrgBouncycastleMathRawNat256_addToEachOtherWithIntArray_withInt_withIntArray_withInt_(zz, 8, zz, 16);
  jint c16 = c24 + OrgBouncycastleMathRawNat256_addToWithIntArray_withInt_withIntArray_withInt_withInt_(zz, 0, zz, 8, 0);
  c24 += OrgBouncycastleMathRawNat256_addToWithIntArray_withInt_withIntArray_withInt_withInt_(zz, 24, zz, 16, c16);
  
#line 15
  IOSIntArray *dx = OrgBouncycastleMathRawNat256_create();
  
#line 15
  IOSIntArray *dy = OrgBouncycastleMathRawNat256_create();
  jboolean neg = OrgBouncycastleMathRawNat256_diffWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, 8, x, 0, dx, 0) != OrgBouncycastleMathRawNat256_diffWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(y, 8, y, 0, dy, 0);
  
#line 18
  IOSIntArray *tt = OrgBouncycastleMathRawNat256_createExt();
  OrgBouncycastleMathRawNat256_mulWithIntArray_withIntArray_withIntArray_(dx, dy, tt);
  
#line 21
  c24 += neg ? OrgBouncycastleMathRawNat_addToWithInt_withIntArray_withInt_withIntArray_withInt_(16, tt, 0, zz, 8) : OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withInt_withIntArray_withInt_(16, tt, 0, zz, 8);
  OrgBouncycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_(32, c24, zz, 24);
}


#line 25
void OrgBouncycastleMathRawNat512_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat512_initialize();
  OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(x, zz);
  OrgBouncycastleMathRawNat256_squareWithIntArray_withInt_withIntArray_withInt_(x, 8, zz, 16);
  
#line 30
  jint c24 = OrgBouncycastleMathRawNat256_addToEachOtherWithIntArray_withInt_withIntArray_withInt_(zz, 8, zz, 16);
  jint c16 = c24 + OrgBouncycastleMathRawNat256_addToWithIntArray_withInt_withIntArray_withInt_withInt_(zz, 0, zz, 8, 0);
  c24 += OrgBouncycastleMathRawNat256_addToWithIntArray_withInt_withIntArray_withInt_withInt_(zz, 24, zz, 16, c16);
  
#line 34
  IOSIntArray *dx = OrgBouncycastleMathRawNat256_create();
  OrgBouncycastleMathRawNat256_diffWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, 8, x, 0, dx, 0);
  
#line 37
  IOSIntArray *tt = OrgBouncycastleMathRawNat256_createExt();
  OrgBouncycastleMathRawNat256_squareWithIntArray_withIntArray_(dx, tt);
  
#line 40
  c24 += OrgBouncycastleMathRawNat_subFromWithInt_withIntArray_withInt_withIntArray_withInt_(16, tt, 0, zz, 8);
  OrgBouncycastleMathRawNat_addWordAtWithInt_withInt_withIntArray_withInt_(32, c24, zz, 24);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathRawNat512)

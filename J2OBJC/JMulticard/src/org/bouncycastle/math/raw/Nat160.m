//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Nat160.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/math/raw/Nat.h"
#include "org/bouncycastle/math/raw/Nat160.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/math/raw/Nat160 must be compiled with ARC (-fobjc-arc)"
#endif

inline jlong OrgBouncycastleMathRawNat160_get_M(void);
#define OrgBouncycastleMathRawNat160_M 4294967295LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleMathRawNat160, M, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/math/raw/Nat160.java"


#line 7
@implementation OrgBouncycastleMathRawNat160

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 7
- (instancetype)init {
  OrgBouncycastleMathRawNat160_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 11
+ (jint)addWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat160_addWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 32
+ (jint)addBothToWithIntArray:(IOSIntArray *)x
                 withIntArray:(IOSIntArray *)y
                 withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat160_addBothToWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 53
+ (jint)addToWithIntArray:(IOSIntArray *)x
             withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat160_addToWithIntArray_withIntArray_(x, z);
}


#line 74
+ (jint)addToWithIntArray:(IOSIntArray *)x
                  withInt:(jint)xOff
             withIntArray:(IOSIntArray *)z
                  withInt:(jint)zOff
                  withInt:(jint)cIn {
  return OrgBouncycastleMathRawNat160_addToWithIntArray_withInt_withIntArray_withInt_withInt_(x, xOff, z, zOff, cIn);
}


#line 95
+ (jint)addToEachOtherWithIntArray:(IOSIntArray *)u
                           withInt:(jint)uOff
                      withIntArray:(IOSIntArray *)v
                           withInt:(jint)vOff {
  return OrgBouncycastleMathRawNat160_addToEachOtherWithIntArray_withInt_withIntArray_withInt_(u, uOff, v, vOff);
}


#line 121
+ (void)copy__WithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathRawNat160_copy__WithIntArray_withIntArray_(x, z);
}


#line 130
+ (void)copy__WithIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff {
  OrgBouncycastleMathRawNat160_copy__WithIntArray_withInt_withIntArray_withInt_(x, xOff, z, zOff);
}


#line 139
+ (IOSIntArray *)create {
  return OrgBouncycastleMathRawNat160_create();
}


#line 144
+ (IOSIntArray *)createExt {
  return OrgBouncycastleMathRawNat160_createExt();
}


#line 149
+ (jboolean)diffWithIntArray:(IOSIntArray *)x
                     withInt:(jint)xOff
                withIntArray:(IOSIntArray *)y
                     withInt:(jint)yOff
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_diffWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, xOff, y, yOff, z, zOff);
}


#line 163
+ (jboolean)eqWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)y {
  return OrgBouncycastleMathRawNat160_eqWithIntArray_withIntArray_(x, y);
}


#line 175
+ (IOSIntArray *)fromBigIntegerWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  return OrgBouncycastleMathRawNat160_fromBigIntegerWithJavaMathBigInteger_(x);
}


#line 193
+ (jint)getBitWithIntArray:(IOSIntArray *)x
                   withInt:(jint)bit {
  return OrgBouncycastleMathRawNat160_getBitWithIntArray_withInt_(x, bit);
}


#line 208
+ (jboolean)gteWithIntArray:(IOSIntArray *)x
               withIntArray:(IOSIntArray *)y {
  return OrgBouncycastleMathRawNat160_gteWithIntArray_withIntArray_(x, y);
}


#line 222
+ (jboolean)gteWithIntArray:(IOSIntArray *)x
                    withInt:(jint)xOff
               withIntArray:(IOSIntArray *)y
                    withInt:(jint)yOff {
  return OrgBouncycastleMathRawNat160_gteWithIntArray_withInt_withIntArray_withInt_(x, xOff, y, yOff);
}


#line 236
+ (jboolean)isOneWithIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat160_isOneWithIntArray_(x);
}


#line 252
+ (jboolean)isZeroWithIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat160_isZeroWithIntArray_(x);
}


#line 264
+ (void)mulWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathRawNat160_mulWithIntArray_withIntArray_withIntArray_(x, y, zz);
}


#line 314
+ (void)mulWithIntArray:(IOSIntArray *)x
                withInt:(jint)xOff
           withIntArray:(IOSIntArray *)y
                withInt:(jint)yOff
           withIntArray:(IOSIntArray *)zz
                withInt:(jint)zzOff {
  OrgBouncycastleMathRawNat160_mulWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, xOff, y, yOff, zz, zzOff);
}


#line 365
+ (jint)mulAddToWithIntArray:(IOSIntArray *)x
                withIntArray:(IOSIntArray *)y
                withIntArray:(IOSIntArray *)zz {
  return OrgBouncycastleMathRawNat160_mulAddToWithIntArray_withIntArray_withIntArray_(x, y, zz);
}


#line 400
+ (jint)mulAddToWithIntArray:(IOSIntArray *)x
                     withInt:(jint)xOff
                withIntArray:(IOSIntArray *)y
                     withInt:(jint)yOff
                withIntArray:(IOSIntArray *)zz
                     withInt:(jint)zzOff {
  return OrgBouncycastleMathRawNat160_mulAddToWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, xOff, y, yOff, zz, zzOff);
}


#line 436
+ (jlong)mul33AddWithInt:(jint)w
            withIntArray:(IOSIntArray *)x
                 withInt:(jint)xOff
            withIntArray:(IOSIntArray *)y
                 withInt:(jint)yOff
            withIntArray:(IOSIntArray *)z
                 withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_mul33AddWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(w, x, xOff, y, yOff, z, zOff);
}


#line 465
+ (jint)mulWordAddExtWithInt:(jint)x
                withIntArray:(IOSIntArray *)yy
                     withInt:(jint)yyOff
                withIntArray:(IOSIntArray *)zz
                     withInt:(jint)zzOff {
  return OrgBouncycastleMathRawNat160_mulWordAddExtWithInt_withIntArray_withInt_withIntArray_withInt_(x, yy, yyOff, zz, zzOff);
}


#line 488
+ (jint)mul33DWordAddWithInt:(jint)x
                    withLong:(jlong)y
                withIntArray:(IOSIntArray *)z
                     withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_mul33DWordAddWithInt_withLong_withIntArray_withInt_(x, y, z, zOff);
}


#line 511
+ (jint)mul33WordAddWithInt:(jint)x
                    withInt:(jint)y
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_mul33WordAddWithInt_withInt_withIntArray_withInt_(x, y, z, zOff);
}


#line 529
+ (jint)mulWordDwordAddWithInt:(jint)x
                      withLong:(jlong)y
                  withIntArray:(IOSIntArray *)z
                       withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_mulWordDwordAddWithInt_withLong_withIntArray_withInt_(x, y, z, zOff);
}


#line 545
+ (jint)mulWordsAddWithInt:(jint)x
                   withInt:(jint)y
              withIntArray:(IOSIntArray *)z
                   withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_mulWordsAddWithInt_withInt_withIntArray_withInt_(x, y, z, zOff);
}


#line 559
+ (jint)mulWordWithInt:(jint)x
          withIntArray:(IOSIntArray *)y
          withIntArray:(IOSIntArray *)z
               withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_mulWordWithInt_withIntArray_withIntArray_withInt_(x, y, z, zOff);
}


#line 573
+ (void)squareWithIntArray:(IOSIntArray *)x
              withIntArray:(IOSIntArray *)zz {
  OrgBouncycastleMathRawNat160_squareWithIntArray_withIntArray_(x, zz);
}


#line 668
+ (void)squareWithIntArray:(IOSIntArray *)x
                   withInt:(jint)xOff
              withIntArray:(IOSIntArray *)zz
                   withInt:(jint)zzOff {
  OrgBouncycastleMathRawNat160_squareWithIntArray_withInt_withIntArray_withInt_(x, xOff, zz, zzOff);
}


#line 763
+ (jint)subWithIntArray:(IOSIntArray *)x
           withIntArray:(IOSIntArray *)y
           withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat160_subWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 784
+ (jint)subWithIntArray:(IOSIntArray *)x
                withInt:(jint)xOff
           withIntArray:(IOSIntArray *)y
                withInt:(jint)yOff
           withIntArray:(IOSIntArray *)z
                withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_subWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, xOff, y, yOff, z, zOff);
}


#line 805
+ (jint)subBothFromWithIntArray:(IOSIntArray *)x
                   withIntArray:(IOSIntArray *)y
                   withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat160_subBothFromWithIntArray_withIntArray_withIntArray_(x, y, z);
}


#line 826
+ (jint)subFromWithIntArray:(IOSIntArray *)x
               withIntArray:(IOSIntArray *)z {
  return OrgBouncycastleMathRawNat160_subFromWithIntArray_withIntArray_(x, z);
}


#line 847
+ (jint)subFromWithIntArray:(IOSIntArray *)x
                    withInt:(jint)xOff
               withIntArray:(IOSIntArray *)z
                    withInt:(jint)zOff {
  return OrgBouncycastleMathRawNat160_subFromWithIntArray_withInt_withIntArray_withInt_(x, xOff, z, zOff);
}


#line 868
+ (JavaMathBigInteger *)toBigIntegerWithIntArray:(IOSIntArray *)x {
  return OrgBouncycastleMathRawNat160_toBigIntegerWithIntArray_(x);
}


#line 882
+ (void)zeroWithIntArray:(IOSIntArray *)z {
  OrgBouncycastleMathRawNat160_zeroWithIntArray_(z);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 7, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 11, 4, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 16, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 16, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 17, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 19, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 20, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 21, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 21, 10, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 22, 23, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 24, 25, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 26, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 28, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 31, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 32, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 34, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 34, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 35, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 35, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 36, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 37, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 37, 7, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x9, 38, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 39, 18, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithIntArray:withIntArray:withIntArray:);
  methods[2].selector = @selector(addBothToWithIntArray:withIntArray:withIntArray:);
  methods[3].selector = @selector(addToWithIntArray:withIntArray:);
  methods[4].selector = @selector(addToWithIntArray:withInt:withIntArray:withInt:withInt:);
  methods[5].selector = @selector(addToEachOtherWithIntArray:withInt:withIntArray:withInt:);
  methods[6].selector = @selector(copy__WithIntArray:withIntArray:);
  methods[7].selector = @selector(copy__WithIntArray:withInt:withIntArray:withInt:);
  methods[8].selector = @selector(create);
  methods[9].selector = @selector(createExt);
  methods[10].selector = @selector(diffWithIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[11].selector = @selector(eqWithIntArray:withIntArray:);
  methods[12].selector = @selector(fromBigIntegerWithJavaMathBigInteger:);
  methods[13].selector = @selector(getBitWithIntArray:withInt:);
  methods[14].selector = @selector(gteWithIntArray:withIntArray:);
  methods[15].selector = @selector(gteWithIntArray:withInt:withIntArray:withInt:);
  methods[16].selector = @selector(isOneWithIntArray:);
  methods[17].selector = @selector(isZeroWithIntArray:);
  methods[18].selector = @selector(mulWithIntArray:withIntArray:withIntArray:);
  methods[19].selector = @selector(mulWithIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[20].selector = @selector(mulAddToWithIntArray:withIntArray:withIntArray:);
  methods[21].selector = @selector(mulAddToWithIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[22].selector = @selector(mul33AddWithInt:withIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[23].selector = @selector(mulWordAddExtWithInt:withIntArray:withInt:withIntArray:withInt:);
  methods[24].selector = @selector(mul33DWordAddWithInt:withLong:withIntArray:withInt:);
  methods[25].selector = @selector(mul33WordAddWithInt:withInt:withIntArray:withInt:);
  methods[26].selector = @selector(mulWordDwordAddWithInt:withLong:withIntArray:withInt:);
  methods[27].selector = @selector(mulWordsAddWithInt:withInt:withIntArray:withInt:);
  methods[28].selector = @selector(mulWordWithInt:withIntArray:withIntArray:withInt:);
  methods[29].selector = @selector(squareWithIntArray:withIntArray:);
  methods[30].selector = @selector(squareWithIntArray:withInt:withIntArray:withInt:);
  methods[31].selector = @selector(subWithIntArray:withIntArray:withIntArray:);
  methods[32].selector = @selector(subWithIntArray:withInt:withIntArray:withInt:withIntArray:withInt:);
  methods[33].selector = @selector(subBothFromWithIntArray:withIntArray:withIntArray:);
  methods[34].selector = @selector(subFromWithIntArray:withIntArray:);
  methods[35].selector = @selector(subFromWithIntArray:withInt:withIntArray:withInt:);
  methods[36].selector = @selector(toBigIntegerWithIntArray:);
  methods[37].selector = @selector(zeroWithIntArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "M", "J", .constantValue.asLong = OrgBouncycastleMathRawNat160_M, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "[I[I[I", "addBothTo", "addTo", "[I[I", "[II[III", "addToEachOther", "[II[II", "copy", "diff", "[II[II[II", "eq", "fromBigInteger", "LJavaMathBigInteger;", "getBit", "[II", "gte", "isOne", "[I", "isZero", "mul", "mulAddTo", "mul33Add", "I[II[II[II", "mulWordAddExt", "I[II[II", "mul33DWordAdd", "IJ[II", "mul33WordAdd", "II[II", "mulWordDwordAdd", "mulWordsAdd", "mulWord", "I[I[II", "square", "sub", "subBothFrom", "subFrom", "toBigInteger", "zero" };
  static const J2ObjcClassInfo _OrgBouncycastleMathRawNat160 = { "Nat160", "org.bouncycastle.math.raw", ptrTable, methods, fields, 7, 0x401, 38, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleMathRawNat160;
}

@end


#line 7
void OrgBouncycastleMathRawNat160_init(OrgBouncycastleMathRawNat160 *self) {
  NSObject_init(self);
}

jint OrgBouncycastleMathRawNat160_addWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(y), 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(nil_chk(z), 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 1) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 2) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 3) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 4) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 4) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_addBothToWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(y), 0) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 1) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 1) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 2) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 2) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 3) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 3) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 4) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(y, 4) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 4) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_addToWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 1) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 2) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 3) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 4) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 4) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_addToWithIntArray_withInt_withIntArray_withInt_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff, jint cIn) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = cIn & OrgBouncycastleMathRawNat160_M;
  c += (IOSIntArray_Get(nil_chk(x), xOff + 0) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 1) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 2) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, zOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 3) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, zOff + 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 4) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(z, zOff + 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 4) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_addToEachOtherWithIntArray_withInt_withIntArray_withInt_(IOSIntArray *u, jint uOff, IOSIntArray *v, jint vOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(u), uOff + 0) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(v), vOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(u, uOff + 0) = (jint) c;
  *IOSIntArray_GetRef(v, vOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(u, uOff + 1) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(v, vOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(u, uOff + 1) = (jint) c;
  *IOSIntArray_GetRef(v, vOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(u, uOff + 2) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(v, vOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(u, uOff + 2) = (jint) c;
  *IOSIntArray_GetRef(v, vOff + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(u, uOff + 3) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(v, vOff + 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(u, uOff + 3) = (jint) c;
  *IOSIntArray_GetRef(v, vOff + 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(u, uOff + 4) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(v, vOff + 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(u, uOff + 4) = (jint) c;
  *IOSIntArray_GetRef(v, vOff + 4) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return (jint) c;
}

void OrgBouncycastleMathRawNat160_copy__WithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  *IOSIntArray_GetRef(nil_chk(z), 0) = IOSIntArray_Get(nil_chk(x), 0);
  *IOSIntArray_GetRef(z, 1) = IOSIntArray_Get(x, 1);
  *IOSIntArray_GetRef(z, 2) = IOSIntArray_Get(x, 2);
  *IOSIntArray_GetRef(z, 3) = IOSIntArray_Get(x, 3);
  *IOSIntArray_GetRef(z, 4) = IOSIntArray_Get(x, 4);
}

void OrgBouncycastleMathRawNat160_copy__WithIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  *IOSIntArray_GetRef(nil_chk(z), zOff + 0) = IOSIntArray_Get(nil_chk(x), xOff + 0);
  *IOSIntArray_GetRef(z, zOff + 1) = IOSIntArray_Get(x, xOff + 1);
  *IOSIntArray_GetRef(z, zOff + 2) = IOSIntArray_Get(x, xOff + 2);
  *IOSIntArray_GetRef(z, zOff + 3) = IOSIntArray_Get(x, xOff + 3);
  *IOSIntArray_GetRef(z, zOff + 4) = IOSIntArray_Get(x, xOff + 4);
}

IOSIntArray *OrgBouncycastleMathRawNat160_create() {
  OrgBouncycastleMathRawNat160_initialize();
  return [IOSIntArray newArrayWithLength:5];
}

IOSIntArray *OrgBouncycastleMathRawNat160_createExt() {
  OrgBouncycastleMathRawNat160_initialize();
  return [IOSIntArray newArrayWithLength:10];
}

jboolean OrgBouncycastleMathRawNat160_diffWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jboolean pos = OrgBouncycastleMathRawNat160_gteWithIntArray_withInt_withIntArray_withInt_(x, xOff, y, yOff);
  if (pos) {
    
#line 154
    OrgBouncycastleMathRawNat160_subWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(x, xOff, y, yOff, z, zOff);
  }
  else {
    
#line 158
    OrgBouncycastleMathRawNat160_subWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(y, yOff, x, xOff, z, zOff);
  }
  return pos;
}


#line 163
jboolean OrgBouncycastleMathRawNat160_eqWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y) {
  OrgBouncycastleMathRawNat160_initialize();
  for (jint i = 4; i >= 0; --i) {
    
#line 167
    if (IOSIntArray_Get(nil_chk(x), i) != IOSIntArray_Get(nil_chk(y), i)) {
      
#line 169
      return false;
    }
  }
  return true;
}


#line 175
IOSIntArray *OrgBouncycastleMathRawNat160_fromBigIntegerWithJavaMathBigInteger_(JavaMathBigInteger *x) {
  OrgBouncycastleMathRawNat160_initialize();
  if ([((JavaMathBigInteger *) nil_chk(x)) signum] < 0 || [x bitLength] > 160) {
    
#line 179
    @throw new_JavaLangIllegalArgumentException_init();
  }
  
#line 182
  IOSIntArray *z = OrgBouncycastleMathRawNat160_create();
  
#line 185
  for (jint i = 0; i < 5; ++i) {
    
#line 187
    *IOSIntArray_GetRef(nil_chk(z), i) = [((JavaMathBigInteger *) nil_chk(x)) intValue];
    x = [x shiftRightWithInt:32];
  }
  return z;
}


#line 193
jint OrgBouncycastleMathRawNat160_getBitWithIntArray_withInt_(IOSIntArray *x, jint bit) {
  OrgBouncycastleMathRawNat160_initialize();
  if (bit == 0) {
    
#line 197
    return IOSIntArray_Get(nil_chk(x), 0) & 1;
  }
  jint w = JreRShift32(bit, 5);
  if (w < 0 || w >= 5) {
    
#line 202
    return 0;
  }
  jint b = bit & 31;
  return (JreURShift32(IOSIntArray_Get(nil_chk(x), w), b)) & 1;
}


#line 208
jboolean OrgBouncycastleMathRawNat160_gteWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y) {
  OrgBouncycastleMathRawNat160_initialize();
  for (jint i = 4; i >= 0; --i) {
    
#line 212
    jint x_i = IOSIntArray_Get(nil_chk(x), i) ^ JavaLangInteger_MIN_VALUE;
    jint y_i = IOSIntArray_Get(nil_chk(y), i) ^ JavaLangInteger_MIN_VALUE;
    if (x_i < y_i)
#line 215
    return false;
    if (x_i > y_i)
#line 217
    return true;
  }
  return true;
}


#line 222
jboolean OrgBouncycastleMathRawNat160_gteWithIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff) {
  OrgBouncycastleMathRawNat160_initialize();
  for (jint i = 4; i >= 0; --i) {
    
#line 226
    jint x_i = IOSIntArray_Get(nil_chk(x), xOff + i) ^ JavaLangInteger_MIN_VALUE;
    jint y_i = IOSIntArray_Get(nil_chk(y), yOff + i) ^ JavaLangInteger_MIN_VALUE;
    if (x_i < y_i)
#line 229
    return false;
    if (x_i > y_i)
#line 231
    return true;
  }
  return true;
}


#line 236
jboolean OrgBouncycastleMathRawNat160_isOneWithIntArray_(IOSIntArray *x) {
  OrgBouncycastleMathRawNat160_initialize();
  if (IOSIntArray_Get(nil_chk(x), 0) != 1) {
    
#line 240
    return false;
  }
  for (jint i = 1; i < 5; ++i) {
    
#line 244
    if (IOSIntArray_Get(x, i) != 0) {
      
#line 246
      return false;
    }
  }
  return true;
}


#line 252
jboolean OrgBouncycastleMathRawNat160_isZeroWithIntArray_(IOSIntArray *x) {
  OrgBouncycastleMathRawNat160_initialize();
  for (jint i = 0; i < 5; ++i) {
    
#line 256
    if (IOSIntArray_Get(nil_chk(x), i) != 0) {
      
#line 258
      return false;
    }
  }
  return true;
}


#line 264
void OrgBouncycastleMathRawNat160_mulWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong y_0 = IOSIntArray_Get(nil_chk(y), 0) & OrgBouncycastleMathRawNat160_M;
  jlong y_1 = IOSIntArray_Get(y, 1) & OrgBouncycastleMathRawNat160_M;
  jlong y_2 = IOSIntArray_Get(y, 2) & OrgBouncycastleMathRawNat160_M;
  jlong y_3 = IOSIntArray_Get(y, 3) & OrgBouncycastleMathRawNat160_M;
  jlong y_4 = IOSIntArray_Get(y, 4) & OrgBouncycastleMathRawNat160_M;
  {
    
#line 273
    jlong c = 0;
    
#line 273
    jlong x_0 = IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M;
    c += x_0 * y_0;
    *IOSIntArray_GetRef(nil_chk(zz), 0) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_1;
    *IOSIntArray_GetRef(zz, 1) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_2;
    *IOSIntArray_GetRef(zz, 2) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_3;
    *IOSIntArray_GetRef(zz, 3) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_4;
    *IOSIntArray_GetRef(zz, 4) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    *IOSIntArray_GetRef(zz, 5) = (jint) c;
  }
  
#line 292
  for (jint i = 1; i < 5; ++i) {
    
#line 294
    jlong c = 0;
    
#line 294
    jlong x_i = IOSIntArray_Get(x, i) & OrgBouncycastleMathRawNat160_M;
    c += x_i * y_0 + (IOSIntArray_Get(zz, i + 0) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 0) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_1 + (IOSIntArray_Get(zz, i + 1) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 1) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_2 + (IOSIntArray_Get(zz, i + 2) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 2) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_3 + (IOSIntArray_Get(zz, i + 3) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 3) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_4 + (IOSIntArray_Get(zz, i + 4) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 4) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    *IOSIntArray_GetRef(zz, i + 5) = (jint) c;
  }
}


#line 314
void OrgBouncycastleMathRawNat160_mulWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong y_0 = IOSIntArray_Get(nil_chk(y), yOff + 0) & OrgBouncycastleMathRawNat160_M;
  jlong y_1 = IOSIntArray_Get(y, yOff + 1) & OrgBouncycastleMathRawNat160_M;
  jlong y_2 = IOSIntArray_Get(y, yOff + 2) & OrgBouncycastleMathRawNat160_M;
  jlong y_3 = IOSIntArray_Get(y, yOff + 3) & OrgBouncycastleMathRawNat160_M;
  jlong y_4 = IOSIntArray_Get(y, yOff + 4) & OrgBouncycastleMathRawNat160_M;
  {
    
#line 323
    jlong c = 0;
    
#line 323
    jlong x_0 = IOSIntArray_Get(nil_chk(x), xOff + 0) & OrgBouncycastleMathRawNat160_M;
    c += x_0 * y_0;
    *IOSIntArray_GetRef(nil_chk(zz), zzOff + 0) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_1;
    *IOSIntArray_GetRef(zz, zzOff + 1) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_2;
    *IOSIntArray_GetRef(zz, zzOff + 2) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_3;
    *IOSIntArray_GetRef(zz, zzOff + 3) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_0 * y_4;
    *IOSIntArray_GetRef(zz, zzOff + 4) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    *IOSIntArray_GetRef(zz, zzOff + 5) = (jint) c;
  }
  
#line 342
  for (jint i = 1; i < 5; ++i) {
    
#line 344
    ++zzOff;
    jlong c = 0;
    
#line 345
    jlong x_i = IOSIntArray_Get(x, xOff + i) & OrgBouncycastleMathRawNat160_M;
    c += x_i * y_0 + (IOSIntArray_Get(zz, zzOff + 0) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 0) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_1 + (IOSIntArray_Get(zz, zzOff + 1) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 1) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_2 + (IOSIntArray_Get(zz, zzOff + 2) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 2) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_3 + (IOSIntArray_Get(zz, zzOff + 3) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 3) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_4 + (IOSIntArray_Get(zz, zzOff + 4) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 4) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    *IOSIntArray_GetRef(zz, zzOff + 5) = (jint) c;
  }
}


#line 365
jint OrgBouncycastleMathRawNat160_mulAddToWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong y_0 = IOSIntArray_Get(nil_chk(y), 0) & OrgBouncycastleMathRawNat160_M;
  jlong y_1 = IOSIntArray_Get(y, 1) & OrgBouncycastleMathRawNat160_M;
  jlong y_2 = IOSIntArray_Get(y, 2) & OrgBouncycastleMathRawNat160_M;
  jlong y_3 = IOSIntArray_Get(y, 3) & OrgBouncycastleMathRawNat160_M;
  jlong y_4 = IOSIntArray_Get(y, 4) & OrgBouncycastleMathRawNat160_M;
  
#line 373
  jlong zc = 0;
  for (jint i = 0; i < 5; ++i) {
    
#line 376
    jlong c = 0;
    
#line 376
    jlong x_i = IOSIntArray_Get(nil_chk(x), i) & OrgBouncycastleMathRawNat160_M;
    c += x_i * y_0 + (IOSIntArray_Get(nil_chk(zz), i + 0) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 0) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_1 + (IOSIntArray_Get(zz, i + 1) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 1) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_2 + (IOSIntArray_Get(zz, i + 2) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 2) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_3 + (IOSIntArray_Get(zz, i + 3) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 3) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_4 + (IOSIntArray_Get(zz, i + 4) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 4) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    
#line 393
    zc += c + (IOSIntArray_Get(zz, i + 5) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, i + 5) = (jint) zc;
    JreURShiftAssignLong(&zc, 32);
  }
  return (jint) zc;
}


#line 400
jint OrgBouncycastleMathRawNat160_mulAddToWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong y_0 = IOSIntArray_Get(nil_chk(y), yOff + 0) & OrgBouncycastleMathRawNat160_M;
  jlong y_1 = IOSIntArray_Get(y, yOff + 1) & OrgBouncycastleMathRawNat160_M;
  jlong y_2 = IOSIntArray_Get(y, yOff + 2) & OrgBouncycastleMathRawNat160_M;
  jlong y_3 = IOSIntArray_Get(y, yOff + 3) & OrgBouncycastleMathRawNat160_M;
  jlong y_4 = IOSIntArray_Get(y, yOff + 4) & OrgBouncycastleMathRawNat160_M;
  
#line 408
  jlong zc = 0;
  for (jint i = 0; i < 5; ++i) {
    
#line 411
    jlong c = 0;
    
#line 411
    jlong x_i = IOSIntArray_Get(nil_chk(x), xOff + i) & OrgBouncycastleMathRawNat160_M;
    c += x_i * y_0 + (IOSIntArray_Get(nil_chk(zz), zzOff + 0) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 0) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_1 + (IOSIntArray_Get(zz, zzOff + 1) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 1) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_2 + (IOSIntArray_Get(zz, zzOff + 2) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 2) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_3 + (IOSIntArray_Get(zz, zzOff + 3) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 3) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    c += x_i * y_4 + (IOSIntArray_Get(zz, zzOff + 4) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 4) = (jint) c;
    JreURShiftAssignLong(&c, 32);
    
#line 428
    zc += c + (IOSIntArray_Get(zz, zzOff + 5) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(zz, zzOff + 5) = (jint) zc;
    JreURShiftAssignLong(&zc, 32);
    ++zzOff;
  }
  return (jint) zc;
}


#line 436
jlong OrgBouncycastleMathRawNat160_mul33AddWithInt_withIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(jint w, IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  
#line 440
  jlong c = 0;
  
#line 440
  jlong wVal = w & OrgBouncycastleMathRawNat160_M;
  jlong x0 = IOSIntArray_Get(nil_chk(x), xOff + 0) & OrgBouncycastleMathRawNat160_M;
  c += wVal * x0 + (IOSIntArray_Get(nil_chk(y), yOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(nil_chk(z), zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  jlong x1 = IOSIntArray_Get(x, xOff + 1) & OrgBouncycastleMathRawNat160_M;
  c += wVal * x1 + x0 + (IOSIntArray_Get(y, yOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  jlong x2 = IOSIntArray_Get(x, xOff + 2) & OrgBouncycastleMathRawNat160_M;
  c += wVal * x2 + x1 + (IOSIntArray_Get(y, yOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  jlong x3 = IOSIntArray_Get(x, xOff + 3) & OrgBouncycastleMathRawNat160_M;
  c += wVal * x3 + x2 + (IOSIntArray_Get(y, yOff + 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  jlong x4 = IOSIntArray_Get(x, xOff + 4) & OrgBouncycastleMathRawNat160_M;
  c += wVal * x4 + x3 + (IOSIntArray_Get(y, yOff + 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 4) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += x4;
  return c;
}


#line 465
jint OrgBouncycastleMathRawNat160_mulWordAddExtWithInt_withIntArray_withInt_withIntArray_withInt_(jint x, IOSIntArray *yy, jint yyOff, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat160_initialize();
  
#line 469
  jlong c = 0;
  
#line 469
  jlong xVal = x & OrgBouncycastleMathRawNat160_M;
  c += xVal * (IOSIntArray_Get(nil_chk(yy), yyOff + 0) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(zz), zzOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(zz, zzOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += xVal * (IOSIntArray_Get(yy, yyOff + 1) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(zz, zzOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(zz, zzOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += xVal * (IOSIntArray_Get(yy, yyOff + 2) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(zz, zzOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(zz, zzOff + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += xVal * (IOSIntArray_Get(yy, yyOff + 3) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(zz, zzOff + 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(zz, zzOff + 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += xVal * (IOSIntArray_Get(yy, yyOff + 4) & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(zz, zzOff + 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(zz, zzOff + 4) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return (jint) c;
}


#line 488
jint OrgBouncycastleMathRawNat160_mul33DWordAddWithInt_withLong_withIntArray_withInt_(jint x, jlong y, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  
#line 493
  jlong c = 0;
  
#line 493
  jlong xVal = x & OrgBouncycastleMathRawNat160_M;
  jlong y00 = y & OrgBouncycastleMathRawNat160_M;
  c += xVal * y00 + (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  jlong y01 = JreURShift64(y, 32);
  c += xVal * y01 + y00 + (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += y01 + (IOSIntArray_Get(z, zOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 3) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(5, z, zOff, 4);
}


#line 511
jint OrgBouncycastleMathRawNat160_mul33WordAddWithInt_withInt_withIntArray_withInt_(jint x, jint y, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  
#line 516
  jlong c = 0;
  
#line 516
  jlong xVal = x & OrgBouncycastleMathRawNat160_M;
  
#line 516
  jlong yVal = y & OrgBouncycastleMathRawNat160_M;
  c += yVal * xVal + (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += yVal + (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(5, z, zOff, 3);
}


#line 529
jint OrgBouncycastleMathRawNat160_mulWordDwordAddWithInt_withLong_withIntArray_withInt_(jint x, jlong y, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  
#line 532
  jlong c = 0;
  
#line 532
  jlong xVal = x & OrgBouncycastleMathRawNat160_M;
  c += xVal * (y & OrgBouncycastleMathRawNat160_M) + (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += xVal * (JreURShift64(y, 32)) + (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 2) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(5, z, zOff, 3);
}


#line 545
jint OrgBouncycastleMathRawNat160_mulWordsAddWithInt_withInt_withIntArray_withInt_(jint x, jint y, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  
#line 549
  jlong c = 0;
  
#line 549
  jlong xVal = x & OrgBouncycastleMathRawNat160_M;
  
#line 549
  jlong yVal = y & OrgBouncycastleMathRawNat160_M;
  c += yVal * xVal + (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreURShiftAssignLong(&c, 32);
  return c == 0 ? 0 : OrgBouncycastleMathRawNat_incAtWithInt_withIntArray_withInt_withInt_(5, z, zOff, 2);
}


#line 559
jint OrgBouncycastleMathRawNat160_mulWordWithInt_withIntArray_withIntArray_withInt_(jint x, IOSIntArray *y, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  
#line 561
  jlong xVal = x & OrgBouncycastleMathRawNat160_M;
  jint i = 0;
  do {
    
#line 565
    c += xVal * (IOSIntArray_Get(nil_chk(y), i) & OrgBouncycastleMathRawNat160_M);
    *IOSIntArray_GetRef(nil_chk(z), zOff + i) = (jint) c;
    JreURShiftAssignLong(&c, 32);
  }
  while (++i < 5);
  return (jint) c;
}


#line 573
void OrgBouncycastleMathRawNat160_squareWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *zz) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong x_0 = IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M;
  jlong zz_1;
  
#line 578
  jint c = 0;
  
#line 578
  jint w;
  {
    jint i = 4;
    
#line 580
    jint j = 10;
    do {
      
#line 583
      jlong xVal = (IOSIntArray_Get(x, i--) & OrgBouncycastleMathRawNat160_M);
      jlong p = xVal * xVal;
      *IOSIntArray_GetRef(nil_chk(zz), --j) = (JreLShift32(c, 31)) | (jint) (JreURShift64(p, 33));
      *IOSIntArray_GetRef(zz, --j) = (jint) (JreURShift64(p, 1));
      c = (jint) p;
    }
    while (i > 0);
    {
      
#line 592
      jlong p = x_0 * x_0;
      zz_1 = ((JreLShift32(c, 31)) & OrgBouncycastleMathRawNat160_M) | (JreURShift64(p, 33));
      *IOSIntArray_GetRef(zz, 0) = (jint) p;
      c = (jint) (JreURShift64(p, 32)) & 1;
    }
  }
  
#line 599
  jlong x_1 = IOSIntArray_Get(x, 1) & OrgBouncycastleMathRawNat160_M;
  jlong zz_2 = IOSIntArray_Get(zz, 2) & OrgBouncycastleMathRawNat160_M;
  {
    
#line 603
    zz_1 += x_1 * x_0;
    w = (jint) zz_1;
    *IOSIntArray_GetRef(zz, 1) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_2 += JreURShift64(zz_1, 32);
  }
  
#line 610
  jlong x_2 = IOSIntArray_Get(x, 2) & OrgBouncycastleMathRawNat160_M;
  jlong zz_3 = IOSIntArray_Get(zz, 3) & OrgBouncycastleMathRawNat160_M;
  jlong zz_4 = IOSIntArray_Get(zz, 4) & OrgBouncycastleMathRawNat160_M;
  {
    zz_2 += x_2 * x_0;
    w = (jint) zz_2;
    *IOSIntArray_GetRef(zz, 2) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_3 += (JreURShift64(zz_2, 32)) + x_2 * x_1;
    zz_4 += JreURShift64(zz_3, 32);
    zz_3 &= OrgBouncycastleMathRawNat160_M;
  }
  
#line 623
  jlong x_3 = IOSIntArray_Get(x, 3) & OrgBouncycastleMathRawNat160_M;
  jlong zz_5 = (IOSIntArray_Get(zz, 5) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_4, 32));
  
#line 624
  zz_4 &= OrgBouncycastleMathRawNat160_M;
  jlong zz_6 = (IOSIntArray_Get(zz, 6) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_5, 32));
  
#line 625
  zz_5 &= OrgBouncycastleMathRawNat160_M;
  {
    zz_3 += x_3 * x_0;
    w = (jint) zz_3;
    *IOSIntArray_GetRef(zz, 3) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_4 += (JreURShift64(zz_3, 32)) + x_3 * x_1;
    zz_5 += (JreURShift64(zz_4, 32)) + x_3 * x_2;
    zz_4 &= OrgBouncycastleMathRawNat160_M;
    zz_6 += JreURShift64(zz_5, 32);
    zz_5 &= OrgBouncycastleMathRawNat160_M;
  }
  
#line 638
  jlong x_4 = IOSIntArray_Get(x, 4) & OrgBouncycastleMathRawNat160_M;
  jlong zz_7 = (IOSIntArray_Get(zz, 7) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_6, 32));
  
#line 639
  zz_6 &= OrgBouncycastleMathRawNat160_M;
  jlong zz_8 = (IOSIntArray_Get(zz, 8) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_7, 32));
  
#line 640
  zz_7 &= OrgBouncycastleMathRawNat160_M;
  {
    zz_4 += x_4 * x_0;
    w = (jint) zz_4;
    *IOSIntArray_GetRef(zz, 4) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_5 += (JreURShift64(zz_4, 32)) + x_4 * x_1;
    zz_6 += (JreURShift64(zz_5, 32)) + x_4 * x_2;
    zz_7 += (JreURShift64(zz_6, 32)) + x_4 * x_3;
    zz_8 += JreURShift64(zz_7, 32);
  }
  
#line 652
  w = (jint) zz_5;
  *IOSIntArray_GetRef(zz, 5) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = (jint) zz_6;
  *IOSIntArray_GetRef(zz, 6) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = (jint) zz_7;
  *IOSIntArray_GetRef(zz, 7) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = (jint) zz_8;
  *IOSIntArray_GetRef(zz, 8) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = IOSIntArray_Get(zz, 9) + (jint) (JreURShift64(zz_8, 32));
  *IOSIntArray_GetRef(zz, 9) = (JreLShift32(w, 1)) | c;
}


#line 668
void OrgBouncycastleMathRawNat160_squareWithIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *zz, jint zzOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong x_0 = IOSIntArray_Get(nil_chk(x), xOff + 0) & OrgBouncycastleMathRawNat160_M;
  jlong zz_1;
  
#line 673
  jint c = 0;
  
#line 673
  jint w;
  {
    jint i = 4;
    
#line 675
    jint j = 10;
    do {
      
#line 678
      jlong xVal = (IOSIntArray_Get(x, xOff + i--) & OrgBouncycastleMathRawNat160_M);
      jlong p = xVal * xVal;
      *IOSIntArray_GetRef(nil_chk(zz), zzOff + --j) = (JreLShift32(c, 31)) | (jint) (JreURShift64(p, 33));
      *IOSIntArray_GetRef(zz, zzOff + --j) = (jint) (JreURShift64(p, 1));
      c = (jint) p;
    }
    while (i > 0);
    {
      
#line 687
      jlong p = x_0 * x_0;
      zz_1 = ((JreLShift32(c, 31)) & OrgBouncycastleMathRawNat160_M) | (JreURShift64(p, 33));
      *IOSIntArray_GetRef(zz, zzOff + 0) = (jint) p;
      c = (jint) (JreURShift64(p, 32)) & 1;
    }
  }
  
#line 694
  jlong x_1 = IOSIntArray_Get(x, xOff + 1) & OrgBouncycastleMathRawNat160_M;
  jlong zz_2 = IOSIntArray_Get(zz, zzOff + 2) & OrgBouncycastleMathRawNat160_M;
  {
    
#line 698
    zz_1 += x_1 * x_0;
    w = (jint) zz_1;
    *IOSIntArray_GetRef(zz, zzOff + 1) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_2 += JreURShift64(zz_1, 32);
  }
  
#line 705
  jlong x_2 = IOSIntArray_Get(x, xOff + 2) & OrgBouncycastleMathRawNat160_M;
  jlong zz_3 = IOSIntArray_Get(zz, zzOff + 3) & OrgBouncycastleMathRawNat160_M;
  jlong zz_4 = IOSIntArray_Get(zz, zzOff + 4) & OrgBouncycastleMathRawNat160_M;
  {
    zz_2 += x_2 * x_0;
    w = (jint) zz_2;
    *IOSIntArray_GetRef(zz, zzOff + 2) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_3 += (JreURShift64(zz_2, 32)) + x_2 * x_1;
    zz_4 += JreURShift64(zz_3, 32);
    zz_3 &= OrgBouncycastleMathRawNat160_M;
  }
  
#line 718
  jlong x_3 = IOSIntArray_Get(x, xOff + 3) & OrgBouncycastleMathRawNat160_M;
  jlong zz_5 = (IOSIntArray_Get(zz, zzOff + 5) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_4, 32));
  
#line 719
  zz_4 &= OrgBouncycastleMathRawNat160_M;
  jlong zz_6 = (IOSIntArray_Get(zz, zzOff + 6) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_5, 32));
  
#line 720
  zz_5 &= OrgBouncycastleMathRawNat160_M;
  {
    zz_3 += x_3 * x_0;
    w = (jint) zz_3;
    *IOSIntArray_GetRef(zz, zzOff + 3) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_4 += (JreURShift64(zz_3, 32)) + x_3 * x_1;
    zz_5 += (JreURShift64(zz_4, 32)) + x_3 * x_2;
    zz_4 &= OrgBouncycastleMathRawNat160_M;
    zz_6 += JreURShift64(zz_5, 32);
    zz_5 &= OrgBouncycastleMathRawNat160_M;
  }
  
#line 733
  jlong x_4 = IOSIntArray_Get(x, xOff + 4) & OrgBouncycastleMathRawNat160_M;
  jlong zz_7 = (IOSIntArray_Get(zz, zzOff + 7) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_6, 32));
  
#line 734
  zz_6 &= OrgBouncycastleMathRawNat160_M;
  jlong zz_8 = (IOSIntArray_Get(zz, zzOff + 8) & OrgBouncycastleMathRawNat160_M) + (JreURShift64(zz_7, 32));
  
#line 735
  zz_7 &= OrgBouncycastleMathRawNat160_M;
  {
    zz_4 += x_4 * x_0;
    w = (jint) zz_4;
    *IOSIntArray_GetRef(zz, zzOff + 4) = (JreLShift32(w, 1)) | c;
    c = JreURShift32(w, 31);
    zz_5 += (JreURShift64(zz_4, 32)) + x_4 * x_1;
    zz_6 += (JreURShift64(zz_5, 32)) + x_4 * x_2;
    zz_7 += (JreURShift64(zz_6, 32)) + x_4 * x_3;
    zz_8 += JreURShift64(zz_7, 32);
  }
  
#line 747
  w = (jint) zz_5;
  *IOSIntArray_GetRef(zz, zzOff + 5) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = (jint) zz_6;
  *IOSIntArray_GetRef(zz, zzOff + 6) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = (jint) zz_7;
  *IOSIntArray_GetRef(zz, zzOff + 7) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = (jint) zz_8;
  *IOSIntArray_GetRef(zz, zzOff + 8) = (JreLShift32(w, 1)) | c;
  c = JreURShift32(w, 31);
  w = IOSIntArray_Get(zz, zzOff + 9) + (jint) (JreURShift64(zz_8, 32));
  *IOSIntArray_GetRef(zz, zzOff + 9) = (JreLShift32(w, 1)) | c;
}


#line 763
jint OrgBouncycastleMathRawNat160_subWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(nil_chk(y), 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(nil_chk(z), 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 1) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 2) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 2) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 3) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, 4) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 4) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_subWithIntArray_withInt_withIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *y, jint yOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(x), xOff + 0) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(nil_chk(y), yOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(nil_chk(z), zOff + 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 1) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, yOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 2) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, yOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 2) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 3) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, yOff + 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 3) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(x, xOff + 4) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, yOff + 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 4) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_subBothFromWithIntArray_withIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *y, IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(nil_chk(y), 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 1) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 2) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 2) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 3) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 4) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 4) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(y, 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 4) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_subFromWithIntArray_withIntArray_(IOSIntArray *x, IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(z), 0) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(nil_chk(x), 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 1) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 2) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 2) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 3) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 3) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, 4) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, 4) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return (jint) c;
}

jint OrgBouncycastleMathRawNat160_subFromWithIntArray_withInt_withIntArray_withInt_(IOSIntArray *x, jint xOff, IOSIntArray *z, jint zOff) {
  OrgBouncycastleMathRawNat160_initialize();
  jlong c = 0;
  c += (IOSIntArray_Get(nil_chk(z), zOff + 0) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(nil_chk(x), xOff + 0) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 0) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 1) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, xOff + 1) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 1) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 2) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, xOff + 2) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 2) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 3) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, xOff + 3) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 3) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  c += (IOSIntArray_Get(z, zOff + 4) & OrgBouncycastleMathRawNat160_M) - (IOSIntArray_Get(x, xOff + 4) & OrgBouncycastleMathRawNat160_M);
  *IOSIntArray_GetRef(z, zOff + 4) = (jint) c;
  JreRShiftAssignLong(&c, 32);
  return (jint) c;
}

JavaMathBigInteger *OrgBouncycastleMathRawNat160_toBigIntegerWithIntArray_(IOSIntArray *x) {
  OrgBouncycastleMathRawNat160_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:20];
  for (jint i = 0; i < 5; ++i) {
    
#line 873
    jint x_i = IOSIntArray_Get(nil_chk(x), i);
    if (x_i != 0) {
      
#line 876
      OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(x_i, bs, JreLShift32((4 - i), 2));
    }
  }
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, bs);
}


#line 882
void OrgBouncycastleMathRawNat160_zeroWithIntArray_(IOSIntArray *z) {
  OrgBouncycastleMathRawNat160_initialize();
  *IOSIntArray_GetRef(nil_chk(z), 0) = 0;
  *IOSIntArray_GetRef(z, 1) = 0;
  *IOSIntArray_GetRef(z, 2) = 0;
  *IOSIntArray_GetRef(z, 3) = 0;
  *IOSIntArray_GetRef(z, 4) = 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleMathRawNat160)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Objects.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/util/Objects.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/util/Objects must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Objects.java"


#line 3
@implementation OrgBouncycastleUtilObjects

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 3
- (instancetype)init {
  OrgBouncycastleUtilObjects_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 5
+ (jboolean)areEqualWithId:(id)a
                    withId:(id)b {
  return OrgBouncycastleUtilObjects_areEqualWithId_withId_(a, b);
}

+ (jint)hashCodeWithId:(id)obj {
  return OrgBouncycastleUtilObjects_hashCodeWithId_(obj);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(areEqualWithId:withId:);
  methods[2].selector = @selector(hashCodeWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "areEqual", "LNSObject;LNSObject;", "hashCode", "LNSObject;" };
  static const J2ObjcClassInfo _OrgBouncycastleUtilObjects = { "Objects", "org.bouncycastle.util", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleUtilObjects;
}

@end


#line 3
void OrgBouncycastleUtilObjects_init(OrgBouncycastleUtilObjects *self) {
  NSObject_init(self);
}


#line 3
OrgBouncycastleUtilObjects *new_OrgBouncycastleUtilObjects_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleUtilObjects, init)
}


#line 3
OrgBouncycastleUtilObjects *create_OrgBouncycastleUtilObjects_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleUtilObjects, init)
}


#line 5
jboolean OrgBouncycastleUtilObjects_areEqualWithId_withId_(id a, id b) {
  OrgBouncycastleUtilObjects_initialize();
  return JreObjectEqualsEquals(a, b) || (nil != a && nil != b && [a isEqual:b]);
}

jint OrgBouncycastleUtilObjects_hashCodeWithId_(id obj) {
  OrgBouncycastleUtilObjects_initialize();
  return nil == obj ? 0 : ((jint) [obj hash]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleUtilObjects)

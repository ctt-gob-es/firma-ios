//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/io/pem/PemWriter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/BufferedWriter.h"
#include "java/io/Writer.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "org/bouncycastle/util/Strings.h"
#include "org/bouncycastle/util/encoders/Base64.h"
#include "org/bouncycastle/util/io/pem/PemHeader.h"
#include "org/bouncycastle/util/io/pem/PemObject.h"
#include "org/bouncycastle/util/io/pem/PemObjectGenerator.h"
#include "org/bouncycastle/util/io/pem/PemWriter.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/util/io/pem/PemWriter must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleUtilIoPemPemWriter () {
 @public
  jint nlLength_;
  IOSCharArray *buf_;
}

- (void)writeEncodedWithByteArray:(IOSByteArray *)bytes;

- (void)writePreEncapsulationBoundaryWithNSString:(NSString *)type;

- (void)writePostEncapsulationBoundaryWithNSString:(NSString *)type;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleUtilIoPemPemWriter, buf_, IOSCharArray *)

inline jint OrgBouncycastleUtilIoPemPemWriter_get_LINE_LENGTH(void);
#define OrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH 64
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleUtilIoPemPemWriter, LINE_LENGTH, jint)

__attribute__((unused)) static void OrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(OrgBouncycastleUtilIoPemPemWriter *self, IOSByteArray *bytes);

__attribute__((unused)) static void OrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(OrgBouncycastleUtilIoPemPemWriter *self, NSString *type);

__attribute__((unused)) static void OrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(OrgBouncycastleUtilIoPemPemWriter *self, NSString *type);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/io/pem/PemWriter.java"


#line 14
@implementation OrgBouncycastleUtilIoPemPemWriter


#line 27
- (instancetype)initWithJavaIoWriter:(JavaIoWriter *)outArg {
  OrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(self, outArg);
  return self;
}


#line 49
- (jint)getOutputSizeWithOrgBouncycastleUtilIoPemPemObject:(OrgBouncycastleUtilIoPemPemObject *)obj {
  
#line 52
  jint size = (2 * ([((NSString *) nil_chk([((OrgBouncycastleUtilIoPemPemObject *) nil_chk(obj)) getType])) java_length] + 10 + nlLength_)) + 6 + 4;
  
#line 54
  if (![((id<JavaUtilList>) nil_chk([obj getHeaders])) isEmpty]) {
    
#line 56
    for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk([obj getHeaders])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      
#line 58
      OrgBouncycastleUtilIoPemPemHeader *hdr = (OrgBouncycastleUtilIoPemPemHeader *) cast_chk([it next], [OrgBouncycastleUtilIoPemPemHeader class]);
      
#line 60
      size += [((NSString *) nil_chk([((OrgBouncycastleUtilIoPemPemHeader *) nil_chk(hdr)) getName])) java_length] + [@": " java_length] + [((NSString *) nil_chk([hdr getValue])) java_length] + nlLength_;
    }
    
#line 63
    size += nlLength_;
  }
  
#line 67
  jint dataLen = (JreIntDiv((((IOSByteArray *) nil_chk([obj getContent]))->size_ + 2), 3)) * 4;
  
#line 69
  size += dataLen + ((JreIntDiv((dataLen + OrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH - 1), OrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH)) * nlLength_);
  
#line 71
  return size;
}


#line 74
- (void)writeObjectWithOrgBouncycastleUtilIoPemPemObjectGenerator:(id<OrgBouncycastleUtilIoPemPemObjectGenerator>)objGen {
  
#line 77
  OrgBouncycastleUtilIoPemPemObject *obj = [((id<OrgBouncycastleUtilIoPemPemObjectGenerator>) nil_chk(objGen)) generate];
  
#line 79
  OrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(self, [((OrgBouncycastleUtilIoPemPemObject *) nil_chk(obj)) getType]);
  
#line 81
  if (![((id<JavaUtilList>) nil_chk([obj getHeaders])) isEmpty]) {
    
#line 83
    for (id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk([obj getHeaders])) iterator]; [((id<JavaUtilIterator>) nil_chk(it)) hasNext]; ) {
      
#line 85
      OrgBouncycastleUtilIoPemPemHeader *hdr = (OrgBouncycastleUtilIoPemPemHeader *) cast_chk([it next], [OrgBouncycastleUtilIoPemPemHeader class]);
      
#line 87
      [self writeWithNSString:[((OrgBouncycastleUtilIoPemPemHeader *) nil_chk(hdr)) getName]];
      [self writeWithNSString:@": "];
      [self writeWithNSString:[hdr getValue]];
      [self newLine];
    }
    
#line 93
    [self newLine];
  }
  
#line 96
  OrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(self, [obj getContent]);
  OrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(self, [obj getType]);
}


#line 100
- (void)writeEncodedWithByteArray:(IOSByteArray *)bytes {
  OrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(self, bytes);
}


#line 123
- (void)writePreEncapsulationBoundaryWithNSString:(NSString *)type {
  OrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(self, type);
}


#line 131
- (void)writePostEncapsulationBoundaryWithNSString:(NSString *)type {
  OrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(self, type);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 8, 9, 5, -1, -1, -1 },
    { NULL, "V", 0x2, 10, 9, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoWriter:);
  methods[1].selector = @selector(getOutputSizeWithOrgBouncycastleUtilIoPemPemObject:);
  methods[2].selector = @selector(writeObjectWithOrgBouncycastleUtilIoPemPemObjectGenerator:);
  methods[3].selector = @selector(writeEncodedWithByteArray:);
  methods[4].selector = @selector(writePreEncapsulationBoundaryWithNSString:);
  methods[5].selector = @selector(writePostEncapsulationBoundaryWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LINE_LENGTH", "I", .constantValue.asInt = OrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH, 0x1a, -1, -1, -1, -1 },
    { "nlLength_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "buf_", "[C", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoWriter;", "getOutputSize", "LOrgBouncycastleUtilIoPemPemObject;", "writeObject", "LOrgBouncycastleUtilIoPemPemObjectGenerator;", "LJavaIoIOException;", "writeEncoded", "[B", "writePreEncapsulationBoundary", "LNSString;", "writePostEncapsulationBoundary" };
  static const J2ObjcClassInfo _OrgBouncycastleUtilIoPemPemWriter = { "PemWriter", "org.bouncycastle.util.io.pem", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleUtilIoPemPemWriter;
}

@end


#line 27
void OrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(OrgBouncycastleUtilIoPemPemWriter *self, JavaIoWriter *outArg) {
  JavaIoBufferedWriter_initWithJavaIoWriter_(self,
#line 29
  outArg);
  self->buf_ = [IOSCharArray newArrayWithLength:OrgBouncycastleUtilIoPemPemWriter_LINE_LENGTH];
  NSString *nl = OrgBouncycastleUtilStrings_lineSeparator();
  if (nl != nil) {
    
#line 34
    self->nlLength_ = [nl java_length];
  }
  else {
    
#line 38
    self->nlLength_ = 2;
  }
}


#line 27
OrgBouncycastleUtilIoPemPemWriter *new_OrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) {
  J2OBJC_NEW_IMPL(OrgBouncycastleUtilIoPemPemWriter, initWithJavaIoWriter_, outArg)
}


#line 27
OrgBouncycastleUtilIoPemPemWriter *create_OrgBouncycastleUtilIoPemPemWriter_initWithJavaIoWriter_(JavaIoWriter *outArg) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleUtilIoPemPemWriter, initWithJavaIoWriter_, outArg)
}


#line 100
void OrgBouncycastleUtilIoPemPemWriter_writeEncodedWithByteArray_(OrgBouncycastleUtilIoPemPemWriter *self, IOSByteArray *bytes) {
  
#line 103
  bytes = OrgBouncycastleUtilEncodersBase64_encodeWithByteArray_(bytes);
  
#line 105
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(bytes))->size_; i += ((IOSCharArray *) nil_chk(self->buf_))->size_) {
    
#line 107
    jint index = 0;
    
#line 109
    while (index != ((IOSCharArray *) nil_chk(self->buf_))->size_) {
      
#line 111
      if ((i + index) >= bytes->size_) {
        
#line 113
        break;
      }
      *IOSCharArray_GetRef(self->buf_, index) = (jchar) IOSByteArray_Get(bytes, i + index);
      index++;
    }
    [self writeWithCharArray:self->buf_ withInt:0 withInt:index];
    [self newLine];
  }
}


#line 123
void OrgBouncycastleUtilIoPemPemWriter_writePreEncapsulationBoundaryWithNSString_(OrgBouncycastleUtilIoPemPemWriter *self, NSString *type) {
  
#line 127
  [self writeWithNSString:JreStrcat("$$$", @"-----BEGIN ", type, @"-----")];
  [self newLine];
}


#line 131
void OrgBouncycastleUtilIoPemPemWriter_writePostEncapsulationBoundaryWithNSString_(OrgBouncycastleUtilIoPemPemWriter *self, NSString *type) {
  
#line 135
  [self writeWithNSString:JreStrcat("$$$", @"-----END ", type, @"-----")];
  [self newLine];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleUtilIoPemPemWriter)

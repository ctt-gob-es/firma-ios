//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/io/pem/PemHeader.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/util/io/pem/PemHeader.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/util/io/pem/PemHeader must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleUtilIoPemPemHeader () {
 @public
  NSString *name_;
  NSString *value_;
}

- (jint)getHashCodeWithNSString:(NSString *)s;

- (jboolean)isEqualWithNSString:(NSString *)s1
                   withNSString:(NSString *)s2;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleUtilIoPemPemHeader, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleUtilIoPemPemHeader, value_, NSString *)

__attribute__((unused)) static jint OrgBouncycastleUtilIoPemPemHeader_getHashCodeWithNSString_(OrgBouncycastleUtilIoPemPemHeader *self, NSString *s);

__attribute__((unused)) static jboolean OrgBouncycastleUtilIoPemPemHeader_isEqualWithNSString_withNSString_(OrgBouncycastleUtilIoPemPemHeader *self, NSString *s1, NSString *s2);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/io/pem/PemHeader.java"


#line 6
@implementation OrgBouncycastleUtilIoPemPemHeader


#line 17
- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  OrgBouncycastleUtilIoPemPemHeader_initWithNSString_withNSString_(self, name, value);
  return self;
}

- (NSString *)getName {
  
#line 25
  return name_;
}


#line 28
- (NSString *)getValue {
  
#line 30
  return value_;
}


#line 33
- (NSUInteger)hash {
  
#line 36
  return OrgBouncycastleUtilIoPemPemHeader_getHashCodeWithNSString_(self, self->name_) + 31 * OrgBouncycastleUtilIoPemPemHeader_getHashCodeWithNSString_(self, self->value_);
}

- (jboolean)isEqual:(id)o {
  
#line 42
  if (!([o isKindOfClass:[OrgBouncycastleUtilIoPemPemHeader class]])) {
    
#line 44
    return false;
  }
  
#line 47
  OrgBouncycastleUtilIoPemPemHeader *other = (OrgBouncycastleUtilIoPemPemHeader *) cast_chk(o, [OrgBouncycastleUtilIoPemPemHeader class]);
  
#line 49
  return JreObjectEqualsEquals(other, self) || (OrgBouncycastleUtilIoPemPemHeader_isEqualWithNSString_withNSString_(self, self->name_, ((OrgBouncycastleUtilIoPemPemHeader *) nil_chk(other))->name_) && OrgBouncycastleUtilIoPemPemHeader_isEqualWithNSString_withNSString_(self, self->value_, other->value_));
}


#line 52
- (jint)getHashCodeWithNSString:(NSString *)s {
  return OrgBouncycastleUtilIoPemPemHeader_getHashCodeWithNSString_(self, s);
}


#line 62
- (jboolean)isEqualWithNSString:(NSString *)s1
                   withNSString:(NSString *)s2 {
  return OrgBouncycastleUtilIoPemPemHeader_isEqualWithNSString_withNSString_(self, s1, s2);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 6, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:);
  methods[1].selector = @selector(getName);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(getHashCodeWithNSString:);
  methods[6].selector = @selector(isEqualWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;", "hashCode", "equals", "LNSObject;", "getHashCode", "LNSString;", "isEqual" };
  static const J2ObjcClassInfo _OrgBouncycastleUtilIoPemPemHeader = { "PemHeader", "org.bouncycastle.util.io.pem", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleUtilIoPemPemHeader;
}

@end


#line 17
void OrgBouncycastleUtilIoPemPemHeader_initWithNSString_withNSString_(OrgBouncycastleUtilIoPemPemHeader *self, NSString *name, NSString *value) {
  NSObject_init(self);
  self->name_ = name;
  self->value_ = value;
}


#line 17
OrgBouncycastleUtilIoPemPemHeader *new_OrgBouncycastleUtilIoPemPemHeader_initWithNSString_withNSString_(NSString *name, NSString *value) {
  J2OBJC_NEW_IMPL(OrgBouncycastleUtilIoPemPemHeader, initWithNSString_withNSString_, name, value)
}


#line 17
OrgBouncycastleUtilIoPemPemHeader *create_OrgBouncycastleUtilIoPemPemHeader_initWithNSString_withNSString_(NSString *name, NSString *value) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleUtilIoPemPemHeader, initWithNSString_withNSString_, name, value)
}


#line 52
jint OrgBouncycastleUtilIoPemPemHeader_getHashCodeWithNSString_(OrgBouncycastleUtilIoPemPemHeader *self, NSString *s) {
  
#line 54
  if (s == nil) {
    
#line 56
    return 1;
  }
  
#line 59
  return ((jint) [s hash]);
}


#line 62
jboolean OrgBouncycastleUtilIoPemPemHeader_isEqualWithNSString_withNSString_(OrgBouncycastleUtilIoPemPemHeader *self, NSString *s1, NSString *s2) {
  
#line 64
  if (JreStringEqualsEquals(s1, s2)) {
    
#line 66
    return true;
  }
  
#line 69
  if (s1 == nil || s2 == nil) {
    
#line 71
    return false;
  }
  
#line 74
  return [s1 isEqual:s2];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleUtilIoPemPemHeader)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Exceptions.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleUtilExceptions")
#ifdef RESTRICT_OrgBouncycastleUtilExceptions
#define INCLUDE_ALL_OrgBouncycastleUtilExceptions 0
#else
#define INCLUDE_ALL_OrgBouncycastleUtilExceptions 1
#endif
#undef RESTRICT_OrgBouncycastleUtilExceptions

#if !defined (OrgBouncycastleUtilExceptions_) && (INCLUDE_ALL_OrgBouncycastleUtilExceptions || defined(INCLUDE_OrgBouncycastleUtilExceptions))
#define OrgBouncycastleUtilExceptions_

@class JavaLangIllegalArgumentException;
@class JavaLangIllegalStateException;
@class JavaLangThrowable;

@interface OrgBouncycastleUtilExceptions : NSObject

#pragma mark Public

- (instancetype)init;

+ (JavaLangIllegalArgumentException *)illegalArgumentExceptionWithNSString:(NSString *)message
                                                     withJavaLangThrowable:(JavaLangThrowable *)cause;

+ (JavaLangIllegalStateException *)illegalStateExceptionWithNSString:(NSString *)message
                                               withJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleUtilExceptions)

FOUNDATION_EXPORT void OrgBouncycastleUtilExceptions_init(OrgBouncycastleUtilExceptions *self);

FOUNDATION_EXPORT OrgBouncycastleUtilExceptions *new_OrgBouncycastleUtilExceptions_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleUtilExceptions *create_OrgBouncycastleUtilExceptions_init(void);

FOUNDATION_EXPORT JavaLangIllegalArgumentException *OrgBouncycastleUtilExceptions_illegalArgumentExceptionWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaLangIllegalStateException *OrgBouncycastleUtilExceptions_illegalStateExceptionWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleUtilExceptions)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleUtilExceptions")

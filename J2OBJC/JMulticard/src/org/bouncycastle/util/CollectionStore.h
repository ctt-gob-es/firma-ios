//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/CollectionStore.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleUtilCollectionStore")
#ifdef RESTRICT_OrgBouncycastleUtilCollectionStore
#define INCLUDE_ALL_OrgBouncycastleUtilCollectionStore 0
#else
#define INCLUDE_ALL_OrgBouncycastleUtilCollectionStore 1
#endif
#undef RESTRICT_OrgBouncycastleUtilCollectionStore

#if !defined (OrgBouncycastleUtilCollectionStore_) && (INCLUDE_ALL_OrgBouncycastleUtilCollectionStore || defined(INCLUDE_OrgBouncycastleUtilCollectionStore))
#define OrgBouncycastleUtilCollectionStore_

#define RESTRICT_OrgBouncycastleUtilStore 1
#define INCLUDE_OrgBouncycastleUtilStore 1
#include "org/bouncycastle/util/Store.h"

#define RESTRICT_OrgBouncycastleUtilIterable 1
#define INCLUDE_OrgBouncycastleUtilIterable 1
#include "org/bouncycastle/util/Iterable.h"

@protocol JavaUtilCollection;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;
@protocol OrgBouncycastleUtilSelector;

/*!
 @brief A simple collection backed store.
 */
@interface OrgBouncycastleUtilCollectionStore : NSObject < OrgBouncycastleUtilStore, OrgBouncycastleUtilIterable >

#pragma mark Public

/*!
 @brief Basic constructor.
 @param collection - initial contents for the store, this is copied.
 */
- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

/*!
 @brief Return the matches in the collection for the passed in selector.
 @param selector the selector to match against.
 @return a possibly empty collection of matching objects.
 */
- (id<JavaUtilCollection>)getMatchesWithOrgBouncycastleUtilSelector:(id<OrgBouncycastleUtilSelector>)selector;

- (id<JavaUtilIterator>)iterator;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleUtilCollectionStore)

FOUNDATION_EXPORT void OrgBouncycastleUtilCollectionStore_initWithJavaUtilCollection_(OrgBouncycastleUtilCollectionStore *self, id<JavaUtilCollection> collection);

FOUNDATION_EXPORT OrgBouncycastleUtilCollectionStore *new_OrgBouncycastleUtilCollectionStore_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleUtilCollectionStore *create_OrgBouncycastleUtilCollectionStore_initWithJavaUtilCollection_(id<JavaUtilCollection> collection);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleUtilCollectionStore)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleUtilCollectionStore")

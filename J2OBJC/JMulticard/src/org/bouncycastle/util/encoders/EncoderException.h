//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/encoders/EncoderException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleUtilEncodersEncoderException")
#ifdef RESTRICT_OrgBouncycastleUtilEncodersEncoderException
#define INCLUDE_ALL_OrgBouncycastleUtilEncodersEncoderException 0
#else
#define INCLUDE_ALL_OrgBouncycastleUtilEncodersEncoderException 1
#endif
#undef RESTRICT_OrgBouncycastleUtilEncodersEncoderException

#if !defined (OrgBouncycastleUtilEncodersEncoderException_) && (INCLUDE_ALL_OrgBouncycastleUtilEncodersEncoderException || defined(INCLUDE_OrgBouncycastleUtilEncodersEncoderException))
#define OrgBouncycastleUtilEncodersEncoderException_

#define RESTRICT_JavaLangIllegalStateException 1
#define INCLUDE_JavaLangIllegalStateException 1
#include "java/lang/IllegalStateException.h"

@class JavaLangThrowable;

/*!
 @brief Exception thrown if an attempt is made to encode invalid data, or some other failure occurs.
 */
@interface OrgBouncycastleUtilEncodersEncoderException : JavaLangIllegalStateException

#pragma mark Public

- (JavaLangThrowable *)getCause;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleUtilEncodersEncoderException)

FOUNDATION_EXPORT void OrgBouncycastleUtilEncodersEncoderException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleUtilEncodersEncoderException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgBouncycastleUtilEncodersEncoderException *new_OrgBouncycastleUtilEncodersEncoderException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleUtilEncodersEncoderException *create_OrgBouncycastleUtilEncodersEncoderException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleUtilEncodersEncoderException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleUtilEncodersEncoderException")

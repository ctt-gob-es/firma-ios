//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/encoders/HexEncoder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleUtilEncodersHexEncoder")
#ifdef RESTRICT_OrgBouncycastleUtilEncodersHexEncoder
#define INCLUDE_ALL_OrgBouncycastleUtilEncodersHexEncoder 0
#else
#define INCLUDE_ALL_OrgBouncycastleUtilEncodersHexEncoder 1
#endif
#undef RESTRICT_OrgBouncycastleUtilEncodersHexEncoder

#if !defined (OrgBouncycastleUtilEncodersHexEncoder_) && (INCLUDE_ALL_OrgBouncycastleUtilEncodersHexEncoder || defined(INCLUDE_OrgBouncycastleUtilEncodersHexEncoder))
#define OrgBouncycastleUtilEncodersHexEncoder_

#define RESTRICT_OrgBouncycastleUtilEncodersEncoder 1
#define INCLUDE_OrgBouncycastleUtilEncodersEncoder 1
#include "org/bouncycastle/util/encoders/Encoder.h"

@class IOSByteArray;
@class JavaIoOutputStream;

/*!
 @brief A streaming Hex encoder.
 */
@interface OrgBouncycastleUtilEncodersHexEncoder : NSObject < OrgBouncycastleUtilEncodersEncoder > {
 @public
  IOSByteArray *encodingTable_;
  IOSByteArray *decodingTable_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief decode the Hex encoded byte data writing it to the given output stream,
  whitespace characters will be ignored.
 @return the number of bytes produced.
 */
- (jint)decodeWithByteArray:(IOSByteArray *)data
                    withInt:(jint)off
                    withInt:(jint)length
     withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

/*!
 @brief decode the Hex encoded String data writing it to the given output stream,
  whitespace characters will be ignored.
 @return the number of bytes produced.
 */
- (jint)decodeWithNSString:(NSString *)data
    withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (jint)encodeWithByteArray:(IOSByteArray *)inBuf
                    withInt:(jint)inOff
                    withInt:(jint)inLen
              withByteArray:(IOSByteArray *)outBuf
                    withInt:(jint)outOff;

/*!
 @brief encode the input data producing a Hex output stream.
 @return the number of bytes produced.
 */
- (jint)encodeWithByteArray:(IOSByteArray *)buf
                    withInt:(jint)off
                    withInt:(jint)len
     withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (jint)getEncodedLengthWithInt:(jint)inputLength;

- (jint)getMaxDecodedLengthWithInt:(jint)inputLength;

#pragma mark Protected

- (void)initialiseDecodingTable OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (IOSByteArray *)decodeStrictWithNSString:(NSString *)str
                                   withInt:(jint)off
                                   withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleUtilEncodersHexEncoder)

J2OBJC_FIELD_SETTER(OrgBouncycastleUtilEncodersHexEncoder, encodingTable_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleUtilEncodersHexEncoder, decodingTable_, IOSByteArray *)

FOUNDATION_EXPORT void OrgBouncycastleUtilEncodersHexEncoder_init(OrgBouncycastleUtilEncodersHexEncoder *self);

FOUNDATION_EXPORT OrgBouncycastleUtilEncodersHexEncoder *new_OrgBouncycastleUtilEncodersHexEncoder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleUtilEncodersHexEncoder *create_OrgBouncycastleUtilEncodersHexEncoder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleUtilEncodersHexEncoder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleUtilEncodersHexEncoder")

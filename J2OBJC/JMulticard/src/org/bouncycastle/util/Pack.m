//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Pack.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/util/Pack.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/util/Pack must be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleUtilPack__Annotations$0(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Pack.java"


#line 6
@implementation OrgBouncycastleUtilPack

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 6
- (instancetype)init {
  OrgBouncycastleUtilPack_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 8
+ (jshort)bigEndianToShortWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)off {
  return OrgBouncycastleUtilPack_bigEndianToShortWithByteArray_withInt_(bs, off);
}


#line 14
+ (jint)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off {
  return OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
}


#line 23
+ (void)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off
                       withIntArray:(IOSIntArray *)ns {
  OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}


#line 32
+ (void)bigEndianToIntWithByteArray:(IOSByteArray *)bs
                            withInt:(jint)off
                       withIntArray:(IOSIntArray *)ns
                            withInt:(jint)nsOff
                            withInt:(jint)nsLen {
  OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bs, off, ns, nsOff, nsLen);
}


#line 41
+ (IOSByteArray *)intToBigEndianWithInt:(jint)n {
  return OrgBouncycastleUtilPack_intToBigEndianWithInt_(n);
}


#line 48
+ (void)intToBigEndianWithInt:(jint)n
                withByteArray:(IOSByteArray *)bs
                      withInt:(jint)off {
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, off);
}


#line 56
+ (IOSByteArray *)intToBigEndianWithIntArray:(IOSIntArray *)ns {
  return OrgBouncycastleUtilPack_intToBigEndianWithIntArray_(ns);
}


#line 63
+ (void)intToBigEndianWithIntArray:(IOSIntArray *)ns
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}


#line 71
+ (void)intToBigEndianWithIntArray:(IOSIntArray *)ns
                           withInt:(jint)nsOff
                           withInt:(jint)nsLen
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)bsOff {
  OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withInt_withInt_withByteArray_withInt_(ns, nsOff, nsLen, bs, bsOff);
}


#line 80
+ (jlong)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  return OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
}


#line 87
+ (void)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                             withInt:(jint)off
                       withLongArray:(IOSLongArray *)ns {
  OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}


#line 96
+ (void)bigEndianToLongWithByteArray:(IOSByteArray *)bs
                             withInt:(jint)bsOff
                       withLongArray:(IOSLongArray *)ns
                             withInt:(jint)nsOff
                             withInt:(jint)nsLen {
  OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_withInt_withInt_(bs, bsOff, ns, nsOff, nsLen);
}


#line 105
+ (IOSByteArray *)longToBigEndianWithLong:(jlong)n {
  return OrgBouncycastleUtilPack_longToBigEndianWithLong_(n);
}


#line 112
+ (void)longToBigEndianWithLong:(jlong)n
                  withByteArray:(IOSByteArray *)bs
                        withInt:(jint)off {
  OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToBigEndianWithLongArray:(IOSLongArray *)ns {
  return OrgBouncycastleUtilPack_longToBigEndianWithLongArray_(ns);
}


#line 125
+ (void)longToBigEndianWithLongArray:(IOSLongArray *)ns
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)off {
  OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}


#line 133
+ (void)longToBigEndianWithLongArray:(IOSLongArray *)ns
                             withInt:(jint)nsOff
                             withInt:(jint)nsLen
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)bsOff {
  OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withInt_withInt_withByteArray_withInt_(ns, nsOff, nsLen, bs, bsOff);
}


#line 150
+ (void)longToBigEndianWithLong:(jlong)value
                  withByteArray:(IOSByteArray *)bs
                        withInt:(jint)off
                        withInt:(jint)bytes {
  OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_withInt_(value, bs, off, bytes);
}


#line 160
+ (jshort)littleEndianToShortWithByteArray:(IOSByteArray *)bs
                                   withInt:(jint)off {
  return OrgBouncycastleUtilPack_littleEndianToShortWithByteArray_withInt_(bs, off);
}


#line 167
+ (jint)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off {
  return OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
}


#line 176
+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)off
                          withIntArray:(IOSIntArray *)ns {
  OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(bs, off, ns);
}


#line 185
+ (void)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                               withInt:(jint)bOff
                          withIntArray:(IOSIntArray *)ns
                               withInt:(jint)nOff
                               withInt:(jint)count {
  OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(bs, bOff, ns, nOff, count);
}


#line 194
+ (IOSIntArray *)littleEndianToIntWithByteArray:(IOSByteArray *)bs
                                        withInt:(jint)off
                                        withInt:(jint)count {
  return OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withInt_(bs, off, count);
}


#line 205
+ (IOSByteArray *)shortToLittleEndianWithShort:(jshort)n {
  return OrgBouncycastleUtilPack_shortToLittleEndianWithShort_(n);
}


#line 212
+ (void)shortToLittleEndianWithShort:(jshort)n
                       withByteArray:(IOSByteArray *)bs
                             withInt:(jint)off {
  OrgBouncycastleUtilPack_shortToLittleEndianWithShort_withByteArray_withInt_(n, bs, off);
}


#line 219
+ (IOSByteArray *)shortToBigEndianWithShort:(jshort)n {
  return OrgBouncycastleUtilPack_shortToBigEndianWithShort_(n);
}


#line 226
+ (void)shortToBigEndianWithShort:(jshort)n
                    withByteArray:(IOSByteArray *)bs
                          withInt:(jint)off {
  OrgBouncycastleUtilPack_shortToBigEndianWithShort_withByteArray_withInt_(n, bs, off);
}


#line 233
+ (IOSByteArray *)intToLittleEndianWithInt:(jint)n {
  return OrgBouncycastleUtilPack_intToLittleEndianWithInt_(n);
}


#line 240
+ (void)intToLittleEndianWithInt:(jint)n
                   withByteArray:(IOSByteArray *)bs
                         withInt:(jint)off {
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, off);
}


#line 248
+ (IOSByteArray *)intToLittleEndianWithIntArray:(IOSIntArray *)ns {
  return OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_(ns);
}


#line 255
+ (void)intToLittleEndianWithIntArray:(IOSIntArray *)ns
                        withByteArray:(IOSByteArray *)bs
                              withInt:(jint)off {
  OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, off);
}


#line 263
+ (void)intToLittleEndianWithIntArray:(IOSIntArray *)ns
                              withInt:(jint)nsOff
                              withInt:(jint)nsLen
                        withByteArray:(IOSByteArray *)bs
                              withInt:(jint)bsOff {
  OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withInt_withInt_withByteArray_withInt_(ns, nsOff, nsLen, bs, bsOff);
}


#line 272
+ (jlong)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                 withInt:(jint)off {
  return OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
}


#line 279
+ (void)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)off
                          withLongArray:(IOSLongArray *)ns {
  OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(bs, off, ns);
}


#line 288
+ (void)littleEndianToLongWithByteArray:(IOSByteArray *)bs
                                withInt:(jint)bsOff
                          withLongArray:(IOSLongArray *)ns
                                withInt:(jint)nsOff
                                withInt:(jint)nsLen {
  OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_withInt_withInt_(bs, bsOff, ns, nsOff, nsLen);
}


#line 297
+ (IOSByteArray *)longToLittleEndianWithLong:(jlong)n {
  return OrgBouncycastleUtilPack_longToLittleEndianWithLong_(n);
}


#line 304
+ (void)longToLittleEndianWithLong:(jlong)n
                     withByteArray:(IOSByteArray *)bs
                           withInt:(jint)off {
  OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, off);
}

+ (IOSByteArray *)longToLittleEndianWithLongArray:(IOSLongArray *)ns {
  return OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_(ns);
}


#line 317
+ (void)longToLittleEndianWithLongArray:(IOSLongArray *)ns
                          withByteArray:(IOSByteArray *)bs
                                withInt:(jint)off {
  OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, off);
}


#line 325
+ (void)longToLittleEndianWithLongArray:(IOSLongArray *)ns
                                withInt:(jint)nsOff
                                withInt:(jint)nsLen
                          withByteArray:(IOSByteArray *)bs
                                withInt:(jint)bsOff {
  OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withInt_withInt_withByteArray_withInt_(ns, nsOff, nsLen, bs, bsOff);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "S", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 5, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 5, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 5, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 5, 10, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 11, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 11, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 14, 16, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 14, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 14, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 14, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 14, 20, -1, -1, 21, -1 },
    { NULL, "S", 0x9, 22, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 23, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 23, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 23, 4, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 23, 24, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 25, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 25, 27, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 28, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 28, 27, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 29, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 29, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 29, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 29, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 29, 10, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 30, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 30, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 30, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 31, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 31, 16, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 31, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 31, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 31, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(bigEndianToShortWithByteArray:withInt:);
  methods[2].selector = @selector(bigEndianToIntWithByteArray:withInt:);
  methods[3].selector = @selector(bigEndianToIntWithByteArray:withInt:withIntArray:);
  methods[4].selector = @selector(bigEndianToIntWithByteArray:withInt:withIntArray:withInt:withInt:);
  methods[5].selector = @selector(intToBigEndianWithInt:);
  methods[6].selector = @selector(intToBigEndianWithInt:withByteArray:withInt:);
  methods[7].selector = @selector(intToBigEndianWithIntArray:);
  methods[8].selector = @selector(intToBigEndianWithIntArray:withByteArray:withInt:);
  methods[9].selector = @selector(intToBigEndianWithIntArray:withInt:withInt:withByteArray:withInt:);
  methods[10].selector = @selector(bigEndianToLongWithByteArray:withInt:);
  methods[11].selector = @selector(bigEndianToLongWithByteArray:withInt:withLongArray:);
  methods[12].selector = @selector(bigEndianToLongWithByteArray:withInt:withLongArray:withInt:withInt:);
  methods[13].selector = @selector(longToBigEndianWithLong:);
  methods[14].selector = @selector(longToBigEndianWithLong:withByteArray:withInt:);
  methods[15].selector = @selector(longToBigEndianWithLongArray:);
  methods[16].selector = @selector(longToBigEndianWithLongArray:withByteArray:withInt:);
  methods[17].selector = @selector(longToBigEndianWithLongArray:withInt:withInt:withByteArray:withInt:);
  methods[18].selector = @selector(longToBigEndianWithLong:withByteArray:withInt:withInt:);
  methods[19].selector = @selector(littleEndianToShortWithByteArray:withInt:);
  methods[20].selector = @selector(littleEndianToIntWithByteArray:withInt:);
  methods[21].selector = @selector(littleEndianToIntWithByteArray:withInt:withIntArray:);
  methods[22].selector = @selector(littleEndianToIntWithByteArray:withInt:withIntArray:withInt:withInt:);
  methods[23].selector = @selector(littleEndianToIntWithByteArray:withInt:withInt:);
  methods[24].selector = @selector(shortToLittleEndianWithShort:);
  methods[25].selector = @selector(shortToLittleEndianWithShort:withByteArray:withInt:);
  methods[26].selector = @selector(shortToBigEndianWithShort:);
  methods[27].selector = @selector(shortToBigEndianWithShort:withByteArray:withInt:);
  methods[28].selector = @selector(intToLittleEndianWithInt:);
  methods[29].selector = @selector(intToLittleEndianWithInt:withByteArray:withInt:);
  methods[30].selector = @selector(intToLittleEndianWithIntArray:);
  methods[31].selector = @selector(intToLittleEndianWithIntArray:withByteArray:withInt:);
  methods[32].selector = @selector(intToLittleEndianWithIntArray:withInt:withInt:withByteArray:withInt:);
  methods[33].selector = @selector(littleEndianToLongWithByteArray:withInt:);
  methods[34].selector = @selector(littleEndianToLongWithByteArray:withInt:withLongArray:);
  methods[35].selector = @selector(littleEndianToLongWithByteArray:withInt:withLongArray:withInt:withInt:);
  methods[36].selector = @selector(longToLittleEndianWithLong:);
  methods[37].selector = @selector(longToLittleEndianWithLong:withByteArray:withInt:);
  methods[38].selector = @selector(longToLittleEndianWithLongArray:);
  methods[39].selector = @selector(longToLittleEndianWithLongArray:withByteArray:withInt:);
  methods[40].selector = @selector(longToLittleEndianWithLongArray:withInt:withInt:withByteArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "bigEndianToShort", "[BI", "bigEndianToInt", "[BI[I", "[BI[III", "intToBigEndian", "I", "I[BI", "[I", "[I[BI", "[III[BI", "bigEndianToLong", "[BI[J", "[BI[JII", "longToBigEndian", "J", "J[BI", "[J", "[J[BI", "[JII[BI", "J[BII", (void *)&OrgBouncycastleUtilPack__Annotations$0, "littleEndianToShort", "littleEndianToInt", "[BII", "shortToLittleEndian", "S", "S[BI", "shortToBigEndian", "intToLittleEndian", "littleEndianToLong", "longToLittleEndian" };
  static const J2ObjcClassInfo _OrgBouncycastleUtilPack = { "Pack", "org.bouncycastle.util", ptrTable, methods, NULL, 7, 0x401, 41, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleUtilPack;
}

@end


#line 6
void OrgBouncycastleUtilPack_init(OrgBouncycastleUtilPack *self) {
  NSObject_init(self);
}


#line 8
jshort OrgBouncycastleUtilPack_bigEndianToShortWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  
#line 9
  jint n = JreLShift32((IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff), 8);
  n |= IOSByteArray_Get(bs, ++off) & (jint) 0xff;
  return (jshort) n;
}


#line 14
jint OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  jint n = JreLShift32(IOSByteArray_Get(nil_chk(bs), off), 24);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= IOSByteArray_Get(bs, ++off) & (jint) 0xff;
  return n;
}

void OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    
#line 27
    *IOSIntArray_GetRef(ns, i) = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}


#line 32
void OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(IOSByteArray *bs, jint off, IOSIntArray *ns, jint nsOff, jint nsLen) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 36
    *IOSIntArray_GetRef(nil_chk(ns), nsOff + i) = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}


#line 41
IOSByteArray *OrgBouncycastleUtilPack_intToBigEndianWithInt_(jint n) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (JreURShift32(n, 24));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) n;
}

IOSByteArray *OrgBouncycastleUtilPack_intToBigEndianWithIntArray_(IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  {
    IOSIntArray *a__ =
#line 65
    ns;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint element = *b__++;
      
#line 66
      OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(element, bs, off);
      off += 4;
    }
  }
}


#line 71
void OrgBouncycastleUtilPack_intToBigEndianWithIntArray_withInt_withInt_withByteArray_withInt_(IOSIntArray *ns, jint nsOff, jint nsLen, IOSByteArray *bs, jint bsOff) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 75
    OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(nil_chk(ns), nsOff + i), bs, bsOff);
    bsOff += 4;
  }
}


#line 80
jlong OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  jint hi = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off);
  jint lo = OrgBouncycastleUtilPack_bigEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((hi & (jlong) 0xffffffffLL), 32)) | (lo & (jlong) 0xffffffffLL);
}

void OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    
#line 91
    *IOSLongArray_GetRef(ns, i) = OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}


#line 96
void OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_withLongArray_withInt_withInt_(IOSByteArray *bs, jint bsOff, IOSLongArray *ns, jint nsOff, jint nsLen) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 100
    *IOSLongArray_GetRef(nil_chk(ns), nsOff + i) = OrgBouncycastleUtilPack_bigEndianToLongWithByteArray_withInt_(bs, bsOff);
    bsOff += 8;
  }
}


#line 105
IOSByteArray *OrgBouncycastleUtilPack_longToBigEndianWithLong_(jlong n) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off);
  OrgBouncycastleUtilPack_intToBigEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off + 4);
}

IOSByteArray *OrgBouncycastleUtilPack_longToBigEndianWithLongArray_(IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  {
    IOSLongArray *a__ =
#line 127
    ns;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong element = *b__++;
      
#line 128
      OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(element, bs, off);
      off += 8;
    }
  }
}


#line 133
void OrgBouncycastleUtilPack_longToBigEndianWithLongArray_withInt_withInt_withByteArray_withInt_(IOSLongArray *ns, jint nsOff, jint nsLen, IOSByteArray *bs, jint bsOff) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 137
    OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(nil_chk(ns), nsOff + i), bs, bsOff);
    bsOff += 8;
  }
}


#line 150
void OrgBouncycastleUtilPack_longToBigEndianWithLong_withByteArray_withInt_withInt_(jlong value, IOSByteArray *bs, jint off, jint bytes) {
  OrgBouncycastleUtilPack_initialize();
  
#line 153
  for (jint i = bytes - 1; i >= 0; i--) {
    
#line 155
    *IOSByteArray_GetRef(nil_chk(bs), i + off) = (jbyte) (value & (jint) 0xff);
    JreURShiftAssignLong(&value, 8);
  }
}


#line 160
jshort OrgBouncycastleUtilPack_littleEndianToShortWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  jint n = IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff;
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  return (jshort) n;
}

jint OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  jint n = IOSByteArray_Get(nil_chk(bs), off) & (jint) 0xff;
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 8);
  n |= JreLShift32((IOSByteArray_Get(bs, ++off) & (jint) 0xff), 16);
  n |= JreLShift32(IOSByteArray_Get(bs, ++off), 24);
  return n;
}

void OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_(IOSByteArray *bs, jint off, IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(ns))->size_; ++i) {
    
#line 180
    *IOSIntArray_GetRef(ns, i) = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
}


#line 185
void OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withIntArray_withInt_withInt_(IOSByteArray *bs, jint bOff, IOSIntArray *ns, jint nOff, jint count) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < count; ++i) {
    
#line 189
    *IOSIntArray_GetRef(nil_chk(ns), nOff + i) = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, bOff);
    bOff += 4;
  }
}


#line 194
IOSIntArray *OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_withInt_(IOSByteArray *bs, jint off, jint count) {
  OrgBouncycastleUtilPack_initialize();
  IOSIntArray *ns = [IOSIntArray newArrayWithLength:count];
  for (jint i = 0; i < ns->size_; ++i) {
    
#line 199
    *IOSIntArray_GetRef(ns, i) = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
    off += 4;
  }
  return ns;
}


#line 205
IOSByteArray *OrgBouncycastleUtilPack_shortToLittleEndianWithShort_(jshort n) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:2];
  OrgBouncycastleUtilPack_shortToLittleEndianWithShort_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_shortToLittleEndianWithShort_withByteArray_withInt_(jshort n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) n;
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
}


#line 219
IOSByteArray *OrgBouncycastleUtilPack_shortToBigEndianWithShort_(jshort n) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *r = [IOSByteArray newArrayWithLength:2];
  OrgBouncycastleUtilPack_shortToBigEndianWithShort_withByteArray_withInt_(n, r, 0);
  return r;
}

void OrgBouncycastleUtilPack_shortToBigEndianWithShort_withByteArray_withInt_(jshort n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) n;
}


#line 233
IOSByteArray *OrgBouncycastleUtilPack_intToLittleEndianWithInt_(jint n) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4];
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(jint n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  *IOSByteArray_GetRef(nil_chk(bs), off) = (jbyte) n;
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 8));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 16));
  *IOSByteArray_GetRef(bs, ++off) = (jbyte) (JreURShift32(n, 24));
}

IOSByteArray *OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_(IOSIntArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:4 * ((IOSIntArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withByteArray_withInt_(IOSIntArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  {
    IOSIntArray *a__ =
#line 257
    ns;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint element = *b__++;
      
#line 258
      OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(element, bs, off);
      off += 4;
    }
  }
}


#line 263
void OrgBouncycastleUtilPack_intToLittleEndianWithIntArray_withInt_withInt_withByteArray_withInt_(IOSIntArray *ns, jint nsOff, jint nsLen, IOSByteArray *bs, jint bsOff) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 267
    OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_(IOSIntArray_Get(nil_chk(ns), nsOff + i), bs, bsOff);
    bsOff += 4;
  }
}


#line 272
jlong OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  jint lo = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off);
  jint hi = OrgBouncycastleUtilPack_littleEndianToIntWithByteArray_withInt_(bs, off + 4);
  return (JreLShift64((hi & (jlong) 0xffffffffLL), 32)) | (lo & (jlong) 0xffffffffLL);
}

void OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_(IOSByteArray *bs, jint off, IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(ns))->size_; ++i) {
    
#line 283
    *IOSLongArray_GetRef(ns, i) = OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, off);
    off += 8;
  }
}


#line 288
void OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_withLongArray_withInt_withInt_(IOSByteArray *bs, jint bsOff, IOSLongArray *ns, jint nsOff, jint nsLen) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 292
    *IOSLongArray_GetRef(nil_chk(ns), nsOff + i) = OrgBouncycastleUtilPack_littleEndianToLongWithByteArray_withInt_(bs, bsOff);
    bsOff += 8;
  }
}


#line 297
IOSByteArray *OrgBouncycastleUtilPack_longToLittleEndianWithLong_(jlong n) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8];
  OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(n, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(jlong n, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (n & (jlong) 0xffffffffLL), bs, off);
  OrgBouncycastleUtilPack_intToLittleEndianWithInt_withByteArray_withInt_((jint) (JreURShift64(n, 32)), bs, off + 4);
}

IOSByteArray *OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_(IOSLongArray *ns) {
  OrgBouncycastleUtilPack_initialize();
  IOSByteArray *bs = [IOSByteArray newArrayWithLength:8 * ((IOSLongArray *) nil_chk(ns))->size_];
  OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(ns, bs, 0);
  return bs;
}

void OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withByteArray_withInt_(IOSLongArray *ns, IOSByteArray *bs, jint off) {
  OrgBouncycastleUtilPack_initialize();
  {
    IOSLongArray *a__ =
#line 319
    ns;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong element = *b__++;
      
#line 320
      OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(element, bs, off);
      off += 8;
    }
  }
}


#line 325
void OrgBouncycastleUtilPack_longToLittleEndianWithLongArray_withInt_withInt_withByteArray_withInt_(IOSLongArray *ns, jint nsOff, jint nsLen, IOSByteArray *bs, jint bsOff) {
  OrgBouncycastleUtilPack_initialize();
  for (jint i = 0; i < nsLen; ++i) {
    
#line 329
    OrgBouncycastleUtilPack_longToLittleEndianWithLong_withByteArray_withInt_(IOSLongArray_Get(nil_chk(ns), nsOff + i), bs, bsOff);
    bsOff += 8;
  }
}

IOSObjectArray *OrgBouncycastleUtilPack__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleUtilPack)

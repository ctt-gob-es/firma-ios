//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Fingerprint.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleUtilFingerprint")
#ifdef RESTRICT_OrgBouncycastleUtilFingerprint
#define INCLUDE_ALL_OrgBouncycastleUtilFingerprint 0
#else
#define INCLUDE_ALL_OrgBouncycastleUtilFingerprint 1
#endif
#undef RESTRICT_OrgBouncycastleUtilFingerprint

#if !defined (OrgBouncycastleUtilFingerprint_) && (INCLUDE_ALL_OrgBouncycastleUtilFingerprint || defined(INCLUDE_OrgBouncycastleUtilFingerprint))
#define OrgBouncycastleUtilFingerprint_

@class IOSByteArray;

/*!
 @brief Basic 20 byte finger print class.
 */
@interface OrgBouncycastleUtilFingerprint : NSObject

#pragma mark Public

/*!
 @brief Base constructor - use SHAKE-256 (160 bits).This is the recommended one as it is also
  produced by the FIPS API.
 @param source original data to calculate the fingerprint from.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)source;

/*!
 @brief Base constructor - for backwards compatibility.
 @param source original data to calculate the fingerprint from.
 @param useSHA512t use the old SHA512/160 calculation.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)source
                      withBoolean:(jboolean)useSHA512t;

/*!
 @brief Constructor with length - use SHAKE-256 (bitLength bits).This is the recommended one as it is also
  produced by the FIPS API.
 @param source original data to calculate the fingerprint from.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)source
                          withInt:(jint)bitLength;

/*!
 @brief Return a byte array containing a calculated fingerprint for the passed in input data.
 This calculation is compatible with the BC FIPS API.
 @param input data to base the fingerprint on.
 @return a byte array containing a 160 bit fingerprint.
 */
+ (IOSByteArray *)calculateFingerprintWithByteArray:(IOSByteArray *)input;

/*!
 @brief Return a byte array containing a calculated fingerprint for the passed in input data.
 This calculation is compatible with the BC FIPS API.
 @param input data to base the fingerprint on.
 @param bitLength bit length of finger print to be produced.
 @return a byte array containing a 20 byte fingerprint.
 */
+ (IOSByteArray *)calculateFingerprintWithByteArray:(IOSByteArray *)input
                                            withInt:(jint)bitLength;

/*!
 @brief Return a byte array containing a calculated fingerprint for the passed in input data.
 The fingerprint is based on SHA512/160.
 @param input data to base the fingerprint on.
 @return a byte array containing a 20 byte fingerprint.
 */
+ (IOSByteArray *)calculateFingerprintSHA512_160WithByteArray:(IOSByteArray *)input;

- (jboolean)isEqual:(id)o;

- (IOSByteArray *)getFingerprint;

- (NSUInteger)hash;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleUtilFingerprint)

FOUNDATION_EXPORT void OrgBouncycastleUtilFingerprint_initWithByteArray_(OrgBouncycastleUtilFingerprint *self, IOSByteArray *source);

FOUNDATION_EXPORT OrgBouncycastleUtilFingerprint *new_OrgBouncycastleUtilFingerprint_initWithByteArray_(IOSByteArray *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleUtilFingerprint *create_OrgBouncycastleUtilFingerprint_initWithByteArray_(IOSByteArray *source);

FOUNDATION_EXPORT void OrgBouncycastleUtilFingerprint_initWithByteArray_withInt_(OrgBouncycastleUtilFingerprint *self, IOSByteArray *source, jint bitLength);

FOUNDATION_EXPORT OrgBouncycastleUtilFingerprint *new_OrgBouncycastleUtilFingerprint_initWithByteArray_withInt_(IOSByteArray *source, jint bitLength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleUtilFingerprint *create_OrgBouncycastleUtilFingerprint_initWithByteArray_withInt_(IOSByteArray *source, jint bitLength);

FOUNDATION_EXPORT void OrgBouncycastleUtilFingerprint_initWithByteArray_withBoolean_(OrgBouncycastleUtilFingerprint *self, IOSByteArray *source, jboolean useSHA512t);

FOUNDATION_EXPORT OrgBouncycastleUtilFingerprint *new_OrgBouncycastleUtilFingerprint_initWithByteArray_withBoolean_(IOSByteArray *source, jboolean useSHA512t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleUtilFingerprint *create_OrgBouncycastleUtilFingerprint_initWithByteArray_withBoolean_(IOSByteArray *source, jboolean useSHA512t);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleUtilFingerprint_calculateFingerprintWithByteArray_(IOSByteArray *input);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleUtilFingerprint_calculateFingerprintWithByteArray_withInt_(IOSByteArray *input, jint bitLength);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleUtilFingerprint_calculateFingerprintSHA512_160WithByteArray_(IOSByteArray *input);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleUtilFingerprint)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleUtilFingerprint")

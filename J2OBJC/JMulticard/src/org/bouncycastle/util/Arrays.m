//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Arrays.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/math/BigInteger.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/function/Consumer.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Objects.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/util/Arrays must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleUtilArrays ()

- (instancetype)init;

+ (jint)getLengthWithInt:(jint)from
                 withInt:(jint)to;

@end

__attribute__((unused)) static void OrgBouncycastleUtilArrays_init(OrgBouncycastleUtilArrays *self);

__attribute__((unused)) static OrgBouncycastleUtilArrays *new_OrgBouncycastleUtilArrays_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleUtilArrays *create_OrgBouncycastleUtilArrays_init(void);

__attribute__((unused)) static jint OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(jint from, jint to);

@interface OrgBouncycastleUtilArrays_Iterator () {
 @public
  IOSObjectArray *dataArray_;
  jint position_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleUtilArrays_Iterator, dataArray_, IOSObjectArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Arrays.java"


#line 9
@implementation OrgBouncycastleUtilArrays

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 11
- (instancetype)init {
  OrgBouncycastleUtilArrays_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 16
+ (jboolean)areAllZeroesWithByteArray:(IOSByteArray *)buf
                              withInt:(jint)off
                              withInt:(jint)len {
  return OrgBouncycastleUtilArrays_areAllZeroesWithByteArray_withInt_withInt_(buf, off, len);
}


#line 26
+ (jboolean)areEqualWithBooleanArray:(IOSBooleanArray *)a
                    withBooleanArray:(IOSBooleanArray *)b {
  return OrgBouncycastleUtilArrays_areEqualWithBooleanArray_withBooleanArray_(a, b);
}

+ (jboolean)areEqualWithByteArray:(IOSByteArray *)a
                    withByteArray:(IOSByteArray *)b {
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(a, b);
}

+ (jboolean)areEqualWithByteArray:(IOSByteArray *)a
                          withInt:(jint)aFromIndex
                          withInt:(jint)aToIndex
                    withByteArray:(IOSByteArray *)b
                          withInt:(jint)bFromIndex
                          withInt:(jint)bToIndex {
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withInt_withInt_withByteArray_withInt_withInt_(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex);
}


#line 57
+ (jboolean)areEqualWithCharArray:(IOSCharArray *)a
                    withCharArray:(IOSCharArray *)b {
  return OrgBouncycastleUtilArrays_areEqualWithCharArray_withCharArray_(a, b);
}

+ (jboolean)areEqualWithIntArray:(IOSIntArray *)a
                    withIntArray:(IOSIntArray *)b {
  return OrgBouncycastleUtilArrays_areEqualWithIntArray_withIntArray_(a, b);
}

+ (jboolean)areEqualWithLongArray:(IOSLongArray *)a
                    withLongArray:(IOSLongArray *)b {
  return OrgBouncycastleUtilArrays_areEqualWithLongArray_withLongArray_(a, b);
}

+ (jboolean)areEqualWithNSObjectArray:(IOSObjectArray *)a
                    withNSObjectArray:(IOSObjectArray *)b {
  return OrgBouncycastleUtilArrays_areEqualWithNSObjectArray_withNSObjectArray_(a, b);
}

+ (jboolean)areEqualWithShortArray:(IOSShortArray *)a
                    withShortArray:(IOSShortArray *)b {
  return OrgBouncycastleUtilArrays_areEqualWithShortArray_withShortArray_(a, b);
}


#line 91
+ (jboolean)constantTimeAreEqualWithByteArray:(IOSByteArray *)expected
                                withByteArray:(IOSByteArray *)supplied {
  return OrgBouncycastleUtilArrays_constantTimeAreEqualWithByteArray_withByteArray_(expected, supplied);
}


#line 121
+ (jboolean)constantTimeAreEqualWithInt:(jint)len
                          withByteArray:(IOSByteArray *)a
                                withInt:(jint)aOff
                          withByteArray:(IOSByteArray *)b
                                withInt:(jint)bOff {
  return OrgBouncycastleUtilArrays_constantTimeAreEqualWithInt_withByteArray_withInt_withByteArray_withInt_(len, a, aOff, b, bOff);
}


#line 152
+ (jint)compareUnsignedWithByteArray:(IOSByteArray *)a
                       withByteArray:(IOSByteArray *)b {
  return OrgBouncycastleUtilArrays_compareUnsignedWithByteArray_withByteArray_(a, b);
}


#line 190
+ (jboolean)containsWithBooleanArray:(IOSBooleanArray *)a
                         withBoolean:(jboolean)val {
  return OrgBouncycastleUtilArrays_containsWithBooleanArray_withBoolean_(a, val);
}


#line 202
+ (jboolean)containsWithByteArray:(IOSByteArray *)a
                         withByte:(jbyte)val {
  return OrgBouncycastleUtilArrays_containsWithByteArray_withByte_(a, val);
}


#line 214
+ (jboolean)containsWithCharArray:(IOSCharArray *)a
                         withChar:(jchar)val {
  return OrgBouncycastleUtilArrays_containsWithCharArray_withChar_(a, val);
}


#line 226
+ (jboolean)containsWithIntArray:(IOSIntArray *)a
                         withInt:(jint)val {
  return OrgBouncycastleUtilArrays_containsWithIntArray_withInt_(a, val);
}


#line 238
+ (jboolean)containsWithLongArray:(IOSLongArray *)a
                         withLong:(jlong)val {
  return OrgBouncycastleUtilArrays_containsWithLongArray_withLong_(a, val);
}


#line 250
+ (jboolean)containsWithShortArray:(IOSShortArray *)a
                         withShort:(jshort)val {
  return OrgBouncycastleUtilArrays_containsWithShortArray_withShort_(a, val);
}


#line 262
+ (void)fillWithBooleanArray:(IOSBooleanArray *)a
                 withBoolean:(jboolean)val {
  OrgBouncycastleUtilArrays_fillWithBooleanArray_withBoolean_(a, val);
}

+ (void)fillWithBooleanArray:(IOSBooleanArray *)a
                     withInt:(jint)fromIndex
                     withInt:(jint)toIndex
                 withBoolean:(jboolean)val {
  OrgBouncycastleUtilArrays_fillWithBooleanArray_withInt_withInt_withBoolean_(a, fromIndex, toIndex, val);
}


#line 272
+ (void)fillWithByteArray:(IOSByteArray *)a
                 withByte:(jbyte)val {
  OrgBouncycastleUtilArrays_fillWithByteArray_withByte_(a, val);
}

+ (void)fillWithByteArray:(IOSByteArray *)a
                  withInt:(jint)fromIndex
                  withInt:(jint)toIndex
                 withByte:(jbyte)val {
  OrgBouncycastleUtilArrays_fillWithByteArray_withInt_withInt_withByte_(a, fromIndex, toIndex, val);
}


#line 282
+ (void)fillWithCharArray:(IOSCharArray *)a
                 withChar:(jchar)val {
  OrgBouncycastleUtilArrays_fillWithCharArray_withChar_(a, val);
}

+ (void)fillWithCharArray:(IOSCharArray *)a
                  withInt:(jint)fromIndex
                  withInt:(jint)toIndex
                 withChar:(jchar)val {
  OrgBouncycastleUtilArrays_fillWithCharArray_withInt_withInt_withChar_(a, fromIndex, toIndex, val);
}


#line 292
+ (void)fillWithIntArray:(IOSIntArray *)a
                 withInt:(jint)val {
  OrgBouncycastleUtilArrays_fillWithIntArray_withInt_(a, val);
}

+ (void)fillWithIntArray:(IOSIntArray *)a
                 withInt:(jint)fromIndex
                 withInt:(jint)toIndex
                 withInt:(jint)val {
  OrgBouncycastleUtilArrays_fillWithIntArray_withInt_withInt_withInt_(a, fromIndex, toIndex, val);
}


#line 302
+ (void)fillWithLongArray:(IOSLongArray *)a
                 withLong:(jlong)val {
  OrgBouncycastleUtilArrays_fillWithLongArray_withLong_(a, val);
}

+ (void)fillWithLongArray:(IOSLongArray *)a
                  withInt:(jint)fromIndex
                  withInt:(jint)toIndex
                 withLong:(jlong)val {
  OrgBouncycastleUtilArrays_fillWithLongArray_withInt_withInt_withLong_(a, fromIndex, toIndex, val);
}


#line 312
+ (void)fillWithNSObjectArray:(IOSObjectArray *)a
                       withId:(id)val {
  OrgBouncycastleUtilArrays_fillWithNSObjectArray_withId_(a, val);
}

+ (void)fillWithNSObjectArray:(IOSObjectArray *)a
                      withInt:(jint)fromIndex
                      withInt:(jint)toIndex
                       withId:(id)val {
  OrgBouncycastleUtilArrays_fillWithNSObjectArray_withInt_withInt_withId_(a, fromIndex, toIndex, val);
}


#line 322
+ (void)fillWithShortArray:(IOSShortArray *)a
                 withShort:(jshort)val {
  OrgBouncycastleUtilArrays_fillWithShortArray_withShort_(a, val);
}

+ (void)fillWithShortArray:(IOSShortArray *)a
                   withInt:(jint)fromIndex
                   withInt:(jint)toIndex
                 withShort:(jshort)val {
  OrgBouncycastleUtilArrays_fillWithShortArray_withInt_withInt_withShort_(a, fromIndex, toIndex, val);
}


#line 332
+ (jint)hashCodeWithByteArray:(IOSByteArray *)data {
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_(data);
}


#line 351
+ (jint)hashCodeWithByteArray:(IOSByteArray *)data
                      withInt:(jint)off
                      withInt:(jint)len {
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_withInt_withInt_(data, off, len);
}


#line 370
+ (jint)hashCodeWithCharArray:(IOSCharArray *)data {
  return OrgBouncycastleUtilArrays_hashCodeWithCharArray_(data);
}


#line 389
+ (jint)hashCodeWithIntArray2:(IOSObjectArray *)ints {
  return OrgBouncycastleUtilArrays_hashCodeWithIntArray2_(ints);
}


#line 401
+ (jint)hashCodeWithIntArray:(IOSIntArray *)data {
  return OrgBouncycastleUtilArrays_hashCodeWithIntArray_(data);
}


#line 420
+ (jint)hashCodeWithIntArray:(IOSIntArray *)data
                     withInt:(jint)off
                     withInt:(jint)len {
  return OrgBouncycastleUtilArrays_hashCodeWithIntArray_withInt_withInt_(data, off, len);
}


#line 439
+ (jint)hashCodeWithLongArray:(IOSLongArray *)data {
  return OrgBouncycastleUtilArrays_hashCodeWithLongArray_(data);
}


#line 461
+ (jint)hashCodeWithLongArray:(IOSLongArray *)data
                      withInt:(jint)off
                      withInt:(jint)len {
  return OrgBouncycastleUtilArrays_hashCodeWithLongArray_withInt_withInt_(data, off, len);
}


#line 483
+ (jint)hashCodeWithShortArray3:(IOSObjectArray *)shorts {
  return OrgBouncycastleUtilArrays_hashCodeWithShortArray3_(shorts);
}


#line 495
+ (jint)hashCodeWithShortArray2:(IOSObjectArray *)shorts {
  return OrgBouncycastleUtilArrays_hashCodeWithShortArray2_(shorts);
}


#line 507
+ (jint)hashCodeWithShortArray:(IOSShortArray *)data {
  return OrgBouncycastleUtilArrays_hashCodeWithShortArray_(data);
}


#line 526
+ (jint)hashCodeWithNSObjectArray:(IOSObjectArray *)data {
  return OrgBouncycastleUtilArrays_hashCodeWithNSObjectArray_(data);
}


#line 545
+ (IOSBooleanArray *)cloneWithBooleanArray:(IOSBooleanArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithBooleanArray_(data);
}


#line 550
+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(data);
}


#line 555
+ (IOSCharArray *)cloneWithCharArray:(IOSCharArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithCharArray_(data);
}


#line 560
+ (IOSIntArray *)cloneWithIntArray:(IOSIntArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithIntArray_(data);
}


#line 565
+ (IOSLongArray *)cloneWithLongArray:(IOSLongArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithLongArray_(data);
}


#line 570
+ (IOSShortArray *)cloneWithShortArray:(IOSShortArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithShortArray_(data);
}


#line 575
+ (IOSObjectArray *)cloneWithJavaMathBigIntegerArray:(IOSObjectArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithJavaMathBigIntegerArray_(data);
}


#line 580
+ (IOSByteArray *)cloneWithByteArray:(IOSByteArray *)data
                       withByteArray:(IOSByteArray *)existing {
  return OrgBouncycastleUtilArrays_cloneWithByteArray_withByteArray_(data, existing);
}


#line 594
+ (IOSLongArray *)cloneWithLongArray:(IOSLongArray *)data
                       withLongArray:(IOSLongArray *)existing {
  return OrgBouncycastleUtilArrays_cloneWithLongArray_withLongArray_(data, existing);
}


#line 608
+ (IOSObjectArray *)cloneWithByteArray2:(IOSObjectArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithByteArray2_(data);
}


#line 625
+ (IOSObjectArray *)cloneWithByteArray3:(IOSObjectArray *)data {
  return OrgBouncycastleUtilArrays_cloneWithByteArray3_(data);
}


#line 642
+ (IOSBooleanArray *)copyOfWithBooleanArray:(IOSBooleanArray *)original
                                    withInt:(jint)newLength {
  return OrgBouncycastleUtilArrays_copyOfWithBooleanArray_withInt_(original, newLength);
}


#line 649
+ (IOSByteArray *)copyOfWithByteArray:(IOSByteArray *)original
                              withInt:(jint)newLength {
  return OrgBouncycastleUtilArrays_copyOfWithByteArray_withInt_(original, newLength);
}


#line 656
+ (IOSCharArray *)copyOfWithCharArray:(IOSCharArray *)original
                              withInt:(jint)newLength {
  return OrgBouncycastleUtilArrays_copyOfWithCharArray_withInt_(original, newLength);
}


#line 663
+ (IOSIntArray *)copyOfWithIntArray:(IOSIntArray *)original
                            withInt:(jint)newLength {
  return OrgBouncycastleUtilArrays_copyOfWithIntArray_withInt_(original, newLength);
}


#line 670
+ (IOSLongArray *)copyOfWithLongArray:(IOSLongArray *)original
                              withInt:(jint)newLength {
  return OrgBouncycastleUtilArrays_copyOfWithLongArray_withInt_(original, newLength);
}


#line 677
+ (IOSShortArray *)copyOfWithShortArray:(IOSShortArray *)original
                                withInt:(jint)newLength {
  return OrgBouncycastleUtilArrays_copyOfWithShortArray_withInt_(original, newLength);
}


#line 684
+ (IOSObjectArray *)copyOfWithJavaMathBigIntegerArray:(IOSObjectArray *)original
                                              withInt:(jint)newLength {
  return OrgBouncycastleUtilArrays_copyOfWithJavaMathBigIntegerArray_withInt_(original, newLength);
}


#line 691
+ (IOSBooleanArray *)copyOfRangeWithBooleanArray:(IOSBooleanArray *)original
                                         withInt:(jint)from
                                         withInt:(jint)to {
  return OrgBouncycastleUtilArrays_copyOfRangeWithBooleanArray_withInt_withInt_(original, from, to);
}


#line 712
+ (IOSByteArray *)copyOfRangeWithByteArray:(IOSByteArray *)original
                                   withInt:(jint)from
                                   withInt:(jint)to {
  return OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(original, from, to);
}


#line 720
+ (IOSCharArray *)copyOfRangeWithCharArray:(IOSCharArray *)original
                                   withInt:(jint)from
                                   withInt:(jint)to {
  return OrgBouncycastleUtilArrays_copyOfRangeWithCharArray_withInt_withInt_(original, from, to);
}


#line 728
+ (IOSIntArray *)copyOfRangeWithIntArray:(IOSIntArray *)original
                                 withInt:(jint)from
                                 withInt:(jint)to {
  return OrgBouncycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(original, from, to);
}


#line 736
+ (IOSLongArray *)copyOfRangeWithLongArray:(IOSLongArray *)original
                                   withInt:(jint)from
                                   withInt:(jint)to {
  return OrgBouncycastleUtilArrays_copyOfRangeWithLongArray_withInt_withInt_(original, from, to);
}


#line 744
+ (IOSShortArray *)copyOfRangeWithShortArray:(IOSShortArray *)original
                                     withInt:(jint)from
                                     withInt:(jint)to {
  return OrgBouncycastleUtilArrays_copyOfRangeWithShortArray_withInt_withInt_(original, from, to);
}


#line 752
+ (IOSObjectArray *)copyOfRangeWithJavaMathBigIntegerArray:(IOSObjectArray *)original
                                                   withInt:(jint)from
                                                   withInt:(jint)to {
  return OrgBouncycastleUtilArrays_copyOfRangeWithJavaMathBigIntegerArray_withInt_withInt_(original, from, to);
}


#line 760
+ (jint)getLengthWithInt:(jint)from
                 withInt:(jint)to {
  return OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
}


#line 772
+ (IOSByteArray *)appendWithByteArray:(IOSByteArray *)a
                             withByte:(jbyte)b {
  return OrgBouncycastleUtilArrays_appendWithByteArray_withByte_(a, b);
}


#line 786
+ (IOSShortArray *)appendWithShortArray:(IOSShortArray *)a
                              withShort:(jshort)b {
  return OrgBouncycastleUtilArrays_appendWithShortArray_withShort_(a, b);
}


#line 800
+ (IOSIntArray *)appendWithIntArray:(IOSIntArray *)a
                            withInt:(jint)b {
  return OrgBouncycastleUtilArrays_appendWithIntArray_withInt_(a, b);
}


#line 814
+ (IOSObjectArray *)appendWithNSStringArray:(IOSObjectArray *)a
                               withNSString:(NSString *)b {
  return OrgBouncycastleUtilArrays_appendWithNSStringArray_withNSString_(a, b);
}


#line 828
+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)a
                             withByteArray:(IOSByteArray *)b {
  return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(a, b);
}


#line 847
+ (IOSShortArray *)concatenateWithShortArray:(IOSShortArray *)a
                              withShortArray:(IOSShortArray *)b {
  return OrgBouncycastleUtilArrays_concatenateWithShortArray_withShortArray_(a, b);
}


#line 866
+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)a
                             withByteArray:(IOSByteArray *)b
                             withByteArray:(IOSByteArray *)c {
  return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, b, c);
}


#line 889
+ (IOSByteArray *)concatenateWithByteArray:(IOSByteArray *)a
                             withByteArray:(IOSByteArray *)b
                             withByteArray:(IOSByteArray *)c
                             withByteArray:(IOSByteArray *)d {
  return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_(a, b, c, d);
}


#line 917
+ (IOSByteArray *)concatenateWithByteArray2:(IOSObjectArray *)arrays {
  return OrgBouncycastleUtilArrays_concatenateWithByteArray2_(arrays);
}


#line 937
+ (IOSIntArray *)concatenateWithIntArray:(IOSIntArray *)a
                            withIntArray:(IOSIntArray *)b {
  return OrgBouncycastleUtilArrays_concatenateWithIntArray_withIntArray_(a, b);
}


#line 956
+ (IOSByteArray *)prependWithByteArray:(IOSByteArray *)a
                              withByte:(jbyte)b {
  return OrgBouncycastleUtilArrays_prependWithByteArray_withByte_(a, b);
}


#line 970
+ (IOSShortArray *)prependWithShortArray:(IOSShortArray *)a
                               withShort:(jshort)b {
  return OrgBouncycastleUtilArrays_prependWithShortArray_withShort_(a, b);
}


#line 984
+ (IOSIntArray *)prependWithIntArray:(IOSIntArray *)a
                             withInt:(jint)b {
  return OrgBouncycastleUtilArrays_prependWithIntArray_withInt_(a, b);
}


#line 998
+ (IOSByteArray *)reverseWithByteArray:(IOSByteArray *)a {
  return OrgBouncycastleUtilArrays_reverseWithByteArray_(a);
}


#line 1016
+ (IOSIntArray *)reverseWithIntArray:(IOSIntArray *)a {
  return OrgBouncycastleUtilArrays_reverseWithIntArray_(a);
}


#line 1034
+ (IOSByteArray *)reverseInPlaceWithByteArray:(IOSByteArray *)a {
  return OrgBouncycastleUtilArrays_reverseInPlaceWithByteArray_(a);
}


#line 1052
+ (IOSIntArray *)reverseInPlaceWithIntArray:(IOSIntArray *)a {
  return OrgBouncycastleUtilArrays_reverseInPlaceWithIntArray_(a);
}


#line 1122
+ (void)clearWithByteArray:(IOSByteArray *)data {
  OrgBouncycastleUtilArrays_clearWithByteArray_(data);
}


#line 1130
+ (void)clearWithIntArray:(IOSIntArray *)data {
  OrgBouncycastleUtilArrays_clearWithIntArray_(data);
}


#line 1138
+ (jboolean)isNullOrContainsNullWithNSObjectArray:(IOSObjectArray *)array {
  return OrgBouncycastleUtilArrays_isNullOrContainsNullWithNSObjectArray_(array);
}


#line 1155
+ (jboolean)isNullOrEmptyWithByteArray:(IOSByteArray *)array {
  return OrgBouncycastleUtilArrays_isNullOrEmptyWithByteArray_(array);
}


#line 1160
+ (jboolean)isNullOrEmptyWithIntArray:(IOSIntArray *)array {
  return OrgBouncycastleUtilArrays_isNullOrEmptyWithIntArray_(array);
}


#line 1165
+ (jboolean)isNullOrEmptyWithNSObjectArray:(IOSObjectArray *)array {
  return OrgBouncycastleUtilArrays_isNullOrEmptyWithNSObjectArray_(array);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 11, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 13, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 14, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 14, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 14, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 14, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 14, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 21, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 31, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 32, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 33, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 34, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 35, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 36, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 37, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 38, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 39, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 40, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 30, 41, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 42, 43, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 42, 31, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 42, 32, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 42, 34, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 42, 36, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 42, 40, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x9, 42, 44, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 42, 4, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 42, 8, -1, -1, -1, -1 },
    { NULL, "[[B", 0x9, 42, 45, -1, -1, -1, -1 },
    { NULL, "[[[B", 0x9, 42, 46, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 47, 48, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 47, 49, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 47, 50, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 47, 18, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 47, 51, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 47, 52, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x9, 47, 53, -1, -1, -1, -1 },
    { NULL, "[Z", 0x9, 54, 55, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 54, 1, -1, -1, -1, -1 },
    { NULL, "[C", 0x9, 54, 56, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 54, 35, -1, -1, -1, -1 },
    { NULL, "[J", 0x9, 54, 37, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 54, 57, -1, -1, -1, -1 },
    { NULL, "[LJavaMathBigInteger;", 0x9, 54, 58, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 59, 60, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 61, 16, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 61, 20, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 61, 18, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x9, 61, 62, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 63, 4, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 63, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 63, 64, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 63, 65, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 63, 45, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 63, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 66, 16, -1, -1, -1, -1 },
    { NULL, "[S", 0x9, 66, 20, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 66, 18, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 67, 31, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 67, 34, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 68, 31, -1, -1, -1, -1 },
    { NULL, "[I", 0x9, 68, 34, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 69, 34, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 70, 41, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 71, 31, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 71, 34, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 71, 41, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(areAllZeroesWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(areEqualWithBooleanArray:withBooleanArray:);
  methods[3].selector = @selector(areEqualWithByteArray:withByteArray:);
  methods[4].selector = @selector(areEqualWithByteArray:withInt:withInt:withByteArray:withInt:withInt:);
  methods[5].selector = @selector(areEqualWithCharArray:withCharArray:);
  methods[6].selector = @selector(areEqualWithIntArray:withIntArray:);
  methods[7].selector = @selector(areEqualWithLongArray:withLongArray:);
  methods[8].selector = @selector(areEqualWithNSObjectArray:withNSObjectArray:);
  methods[9].selector = @selector(areEqualWithShortArray:withShortArray:);
  methods[10].selector = @selector(constantTimeAreEqualWithByteArray:withByteArray:);
  methods[11].selector = @selector(constantTimeAreEqualWithInt:withByteArray:withInt:withByteArray:withInt:);
  methods[12].selector = @selector(compareUnsignedWithByteArray:withByteArray:);
  methods[13].selector = @selector(containsWithBooleanArray:withBoolean:);
  methods[14].selector = @selector(containsWithByteArray:withByte:);
  methods[15].selector = @selector(containsWithCharArray:withChar:);
  methods[16].selector = @selector(containsWithIntArray:withInt:);
  methods[17].selector = @selector(containsWithLongArray:withLong:);
  methods[18].selector = @selector(containsWithShortArray:withShort:);
  methods[19].selector = @selector(fillWithBooleanArray:withBoolean:);
  methods[20].selector = @selector(fillWithBooleanArray:withInt:withInt:withBoolean:);
  methods[21].selector = @selector(fillWithByteArray:withByte:);
  methods[22].selector = @selector(fillWithByteArray:withInt:withInt:withByte:);
  methods[23].selector = @selector(fillWithCharArray:withChar:);
  methods[24].selector = @selector(fillWithCharArray:withInt:withInt:withChar:);
  methods[25].selector = @selector(fillWithIntArray:withInt:);
  methods[26].selector = @selector(fillWithIntArray:withInt:withInt:withInt:);
  methods[27].selector = @selector(fillWithLongArray:withLong:);
  methods[28].selector = @selector(fillWithLongArray:withInt:withInt:withLong:);
  methods[29].selector = @selector(fillWithNSObjectArray:withId:);
  methods[30].selector = @selector(fillWithNSObjectArray:withInt:withInt:withId:);
  methods[31].selector = @selector(fillWithShortArray:withShort:);
  methods[32].selector = @selector(fillWithShortArray:withInt:withInt:withShort:);
  methods[33].selector = @selector(hashCodeWithByteArray:);
  methods[34].selector = @selector(hashCodeWithByteArray:withInt:withInt:);
  methods[35].selector = @selector(hashCodeWithCharArray:);
  methods[36].selector = @selector(hashCodeWithIntArray2:);
  methods[37].selector = @selector(hashCodeWithIntArray:);
  methods[38].selector = @selector(hashCodeWithIntArray:withInt:withInt:);
  methods[39].selector = @selector(hashCodeWithLongArray:);
  methods[40].selector = @selector(hashCodeWithLongArray:withInt:withInt:);
  methods[41].selector = @selector(hashCodeWithShortArray3:);
  methods[42].selector = @selector(hashCodeWithShortArray2:);
  methods[43].selector = @selector(hashCodeWithShortArray:);
  methods[44].selector = @selector(hashCodeWithNSObjectArray:);
  methods[45].selector = @selector(cloneWithBooleanArray:);
  methods[46].selector = @selector(cloneWithByteArray:);
  methods[47].selector = @selector(cloneWithCharArray:);
  methods[48].selector = @selector(cloneWithIntArray:);
  methods[49].selector = @selector(cloneWithLongArray:);
  methods[50].selector = @selector(cloneWithShortArray:);
  methods[51].selector = @selector(cloneWithJavaMathBigIntegerArray:);
  methods[52].selector = @selector(cloneWithByteArray:withByteArray:);
  methods[53].selector = @selector(cloneWithLongArray:withLongArray:);
  methods[54].selector = @selector(cloneWithByteArray2:);
  methods[55].selector = @selector(cloneWithByteArray3:);
  methods[56].selector = @selector(copyOfWithBooleanArray:withInt:);
  methods[57].selector = @selector(copyOfWithByteArray:withInt:);
  methods[58].selector = @selector(copyOfWithCharArray:withInt:);
  methods[59].selector = @selector(copyOfWithIntArray:withInt:);
  methods[60].selector = @selector(copyOfWithLongArray:withInt:);
  methods[61].selector = @selector(copyOfWithShortArray:withInt:);
  methods[62].selector = @selector(copyOfWithJavaMathBigIntegerArray:withInt:);
  methods[63].selector = @selector(copyOfRangeWithBooleanArray:withInt:withInt:);
  methods[64].selector = @selector(copyOfRangeWithByteArray:withInt:withInt:);
  methods[65].selector = @selector(copyOfRangeWithCharArray:withInt:withInt:);
  methods[66].selector = @selector(copyOfRangeWithIntArray:withInt:withInt:);
  methods[67].selector = @selector(copyOfRangeWithLongArray:withInt:withInt:);
  methods[68].selector = @selector(copyOfRangeWithShortArray:withInt:withInt:);
  methods[69].selector = @selector(copyOfRangeWithJavaMathBigIntegerArray:withInt:withInt:);
  methods[70].selector = @selector(getLengthWithInt:withInt:);
  methods[71].selector = @selector(appendWithByteArray:withByte:);
  methods[72].selector = @selector(appendWithShortArray:withShort:);
  methods[73].selector = @selector(appendWithIntArray:withInt:);
  methods[74].selector = @selector(appendWithNSStringArray:withNSString:);
  methods[75].selector = @selector(concatenateWithByteArray:withByteArray:);
  methods[76].selector = @selector(concatenateWithShortArray:withShortArray:);
  methods[77].selector = @selector(concatenateWithByteArray:withByteArray:withByteArray:);
  methods[78].selector = @selector(concatenateWithByteArray:withByteArray:withByteArray:withByteArray:);
  methods[79].selector = @selector(concatenateWithByteArray2:);
  methods[80].selector = @selector(concatenateWithIntArray:withIntArray:);
  methods[81].selector = @selector(prependWithByteArray:withByte:);
  methods[82].selector = @selector(prependWithShortArray:withShort:);
  methods[83].selector = @selector(prependWithIntArray:withInt:);
  methods[84].selector = @selector(reverseWithByteArray:);
  methods[85].selector = @selector(reverseWithIntArray:);
  methods[86].selector = @selector(reverseInPlaceWithByteArray:);
  methods[87].selector = @selector(reverseInPlaceWithIntArray:);
  methods[88].selector = @selector(clearWithByteArray:);
  methods[89].selector = @selector(clearWithIntArray:);
  methods[90].selector = @selector(isNullOrContainsNullWithNSObjectArray:);
  methods[91].selector = @selector(isNullOrEmptyWithByteArray:);
  methods[92].selector = @selector(isNullOrEmptyWithIntArray:);
  methods[93].selector = @selector(isNullOrEmptyWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "areAllZeroes", "[BII", "areEqual", "[Z[Z", "[B[B", "[BII[BII", "[C[C", "[I[I", "[J[J", "[LNSObject;[LNSObject;", "[S[S", "constantTimeAreEqual", "I[BI[BI", "compareUnsigned", "contains", "[ZZ", "[BB", "[CC", "[II", "[JJ", "[SS", "fill", "[ZIIZ", "[BIIB", "[CIIC", "[IIII", "[JIIJ", "[LNSObject;LNSObject;", "[LNSObject;IILNSObject;", "[SIIS", "hashCode", "[B", "[C", "[[I", "[I", "[III", "[J", "[JII", "[[[S", "[[S", "[S", "[LNSObject;", "clone", "[Z", "[LJavaMathBigInteger;", "[[B", "[[[B", "copyOf", "[ZI", "[BI", "[CI", "[JI", "[SI", "[LJavaMathBigInteger;I", "copyOfRange", "[ZII", "[CII", "[SII", "[LJavaMathBigInteger;II", "getLength", "II", "append", "[LNSString;LNSString;", "concatenate", "[B[B[B", "[B[B[B[B", "prepend", "reverse", "reverseInPlace", "clear", "isNullOrContainsNull", "isNullOrEmpty", "LOrgBouncycastleUtilArrays_Iterator;" };
  static const J2ObjcClassInfo _OrgBouncycastleUtilArrays = { "Arrays", "org.bouncycastle.util", ptrTable, methods, NULL, 7, 0x11, 94, 0, -1, 72, -1, -1, -1 };
  return &_OrgBouncycastleUtilArrays;
}

@end


#line 11
void OrgBouncycastleUtilArrays_init(OrgBouncycastleUtilArrays *self) {
  NSObject_init(self);
}


#line 11
OrgBouncycastleUtilArrays *new_OrgBouncycastleUtilArrays_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleUtilArrays, init)
}


#line 11
OrgBouncycastleUtilArrays *create_OrgBouncycastleUtilArrays_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleUtilArrays, init)
}


#line 16
jboolean OrgBouncycastleUtilArrays_areAllZeroesWithByteArray_withInt_withInt_(IOSByteArray *buf, jint off, jint len) {
  OrgBouncycastleUtilArrays_initialize();
  jint bits = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 21
    bits |= IOSByteArray_Get(nil_chk(buf), off + i);
  }
  return bits == 0;
}


#line 26
jboolean OrgBouncycastleUtilArrays_areEqualWithBooleanArray_withBooleanArray_(IOSBooleanArray *a, IOSBooleanArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  return JavaUtilArrays_equalsWithBooleanArray_withBooleanArray_(a, b);
}

jboolean OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  return JavaUtilArrays_equalsWithByteArray_withByteArray_(a, b);
}

jboolean OrgBouncycastleUtilArrays_areEqualWithByteArray_withInt_withInt_withByteArray_withInt_withInt_(IOSByteArray *a, jint aFromIndex, jint aToIndex, IOSByteArray *b, jint bFromIndex, jint bToIndex) {
  OrgBouncycastleUtilArrays_initialize();
  jint aLength = aToIndex - aFromIndex;
  jint bLength = bToIndex - bFromIndex;
  
#line 41
  if (aLength != bLength) {
    
#line 43
    return false;
  }
  
#line 46
  for (jint i = 0; i < aLength; ++i) {
    
#line 48
    if (IOSByteArray_Get(nil_chk(a), aFromIndex + i) != IOSByteArray_Get(nil_chk(b), bFromIndex + i)) {
      
#line 50
      return false;
    }
  }
  
#line 54
  return true;
}


#line 57
jboolean OrgBouncycastleUtilArrays_areEqualWithCharArray_withCharArray_(IOSCharArray *a, IOSCharArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  return JavaUtilArrays_equalsWithCharArray_withCharArray_(a, b);
}

jboolean OrgBouncycastleUtilArrays_areEqualWithIntArray_withIntArray_(IOSIntArray *a, IOSIntArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  return JavaUtilArrays_equalsWithIntArray_withIntArray_(a, b);
}

jboolean OrgBouncycastleUtilArrays_areEqualWithLongArray_withLongArray_(IOSLongArray *a, IOSLongArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  return JavaUtilArrays_equalsWithLongArray_withLongArray_(a, b);
}

jboolean OrgBouncycastleUtilArrays_areEqualWithNSObjectArray_withNSObjectArray_(IOSObjectArray *a, IOSObjectArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  return JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_(a, b);
}

jboolean OrgBouncycastleUtilArrays_areEqualWithShortArray_withShortArray_(IOSShortArray *a, IOSShortArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  return JavaUtilArrays_equalsWithShortArray_withShortArray_(a, b);
}


#line 91
jboolean OrgBouncycastleUtilArrays_constantTimeAreEqualWithByteArray_withByteArray_(IOSByteArray *expected, IOSByteArray *supplied) {
  OrgBouncycastleUtilArrays_initialize();
  
#line 95
  if (expected == nil || supplied == nil) {
    
#line 97
    return false;
  }
  
#line 100
  if (JreObjectEqualsEquals(expected, supplied)) {
    
#line 102
    return true;
  }
  
#line 105
  jint len = (expected->size_ < supplied->size_) ? expected->size_ : supplied->size_;
  
#line 107
  jint nonEqual = expected->size_ ^ supplied->size_;
  
#line 109
  for (jint i = 0; i != len; i++) {
    
#line 111
    nonEqual |= (IOSByteArray_Get(expected, i) ^ IOSByteArray_Get(supplied, i));
  }
  for (jint i = len; i < supplied->size_; i++) {
    
#line 115
    nonEqual |= (IOSByteArray_Get(supplied, i) ^ ~IOSByteArray_Get(supplied, i));
  }
  
#line 118
  return nonEqual == 0;
}


#line 121
jboolean OrgBouncycastleUtilArrays_constantTimeAreEqualWithInt_withByteArray_withInt_withByteArray_withInt_(jint len, IOSByteArray *a, jint aOff, IOSByteArray *b, jint bOff) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 125
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'a' cannot be null");
  }
  if (nil == b) {
    
#line 129
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'b' cannot be null");
  }
  if (len < 0) {
    
#line 133
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'len' cannot be negative");
  }
  if (aOff > (a->size_ - len)) {
    
#line 137
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(@"'aOff' value invalid for specified length");
  }
  if (bOff > (b->size_ - len)) {
    
#line 141
    @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(@"'bOff' value invalid for specified length");
  }
  
#line 144
  jint d = 0;
  for (jint i = 0; i < len; ++i) {
    
#line 147
    d |= (IOSByteArray_Get(a, aOff + i) ^ IOSByteArray_Get(b, bOff + i));
  }
  return 0 == d;
}


#line 152
jint OrgBouncycastleUtilArrays_compareUnsignedWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  if (JreObjectEqualsEquals(a, b)) {
    
#line 156
    return 0;
  }
  if (a == nil) {
    
#line 160
    return -1;
  }
  if (b == nil) {
    
#line 164
    return 1;
  }
  jint minLen = JavaLangMath_minWithInt_withInt_(a->size_, b->size_);
  for (jint i = 0; i < minLen; ++i) {
    
#line 169
    jint aVal = IOSByteArray_Get(a, i) & (jint) 0xFF;
    
#line 169
    jint bVal = IOSByteArray_Get(b, i) & (jint) 0xFF;
    if (aVal < bVal) {
      
#line 172
      return -1;
    }
    if (aVal > bVal) {
      
#line 176
      return 1;
    }
  }
  if (a->size_ < b->size_) {
    
#line 181
    return -1;
  }
  if (a->size_ > b->size_) {
    
#line 185
    return 1;
  }
  return 0;
}


#line 190
jboolean OrgBouncycastleUtilArrays_containsWithBooleanArray_withBoolean_(IOSBooleanArray *a, jboolean val) {
  OrgBouncycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSBooleanArray *) nil_chk(a))->size_; ++i) {
    
#line 194
    if (IOSBooleanArray_Get(a, i) == val) {
      
#line 196
      return true;
    }
  }
  return false;
}


#line 202
jboolean OrgBouncycastleUtilArrays_containsWithByteArray_withByte_(IOSByteArray *a, jbyte val) {
  OrgBouncycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(a))->size_; ++i) {
    
#line 206
    if (IOSByteArray_Get(a, i) == val) {
      
#line 208
      return true;
    }
  }
  return false;
}


#line 214
jboolean OrgBouncycastleUtilArrays_containsWithCharArray_withChar_(IOSCharArray *a, jchar val) {
  OrgBouncycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSCharArray *) nil_chk(a))->size_; ++i) {
    
#line 218
    if (IOSCharArray_Get(a, i) == val) {
      
#line 220
      return true;
    }
  }
  return false;
}


#line 226
jboolean OrgBouncycastleUtilArrays_containsWithIntArray_withInt_(IOSIntArray *a, jint val) {
  OrgBouncycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(a))->size_; ++i) {
    
#line 230
    if (IOSIntArray_Get(a, i) == val) {
      
#line 232
      return true;
    }
  }
  return false;
}


#line 238
jboolean OrgBouncycastleUtilArrays_containsWithLongArray_withLong_(IOSLongArray *a, jlong val) {
  OrgBouncycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(a))->size_; ++i) {
    
#line 242
    if (IOSLongArray_Get(a, i) == val) {
      
#line 244
      return true;
    }
  }
  return false;
}


#line 250
jboolean OrgBouncycastleUtilArrays_containsWithShortArray_withShort_(IOSShortArray *a, jshort val) {
  OrgBouncycastleUtilArrays_initialize();
  for (jint i = 0; i < ((IOSShortArray *) nil_chk(a))->size_; ++i) {
    
#line 254
    if (IOSShortArray_Get(a, i) == val) {
      
#line 256
      return true;
    }
  }
  return false;
}


#line 262
void OrgBouncycastleUtilArrays_fillWithBooleanArray_withBoolean_(IOSBooleanArray *a, jboolean val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithBooleanArray_withBoolean_(a, val);
}

void OrgBouncycastleUtilArrays_fillWithBooleanArray_withInt_withInt_withBoolean_(IOSBooleanArray *a, jint fromIndex, jint toIndex, jboolean val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithBooleanArray_withInt_withInt_withBoolean_(a, fromIndex, toIndex, val);
}

void OrgBouncycastleUtilArrays_fillWithByteArray_withByte_(IOSByteArray *a, jbyte val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithByteArray_withByte_(a, val);
}

void OrgBouncycastleUtilArrays_fillWithByteArray_withInt_withInt_withByte_(IOSByteArray *a, jint fromIndex, jint toIndex, jbyte val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithByteArray_withInt_withInt_withByte_(a, fromIndex, toIndex, val);
}

void OrgBouncycastleUtilArrays_fillWithCharArray_withChar_(IOSCharArray *a, jchar val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithCharArray_withChar_(a, val);
}

void OrgBouncycastleUtilArrays_fillWithCharArray_withInt_withInt_withChar_(IOSCharArray *a, jint fromIndex, jint toIndex, jchar val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithCharArray_withInt_withInt_withChar_(a, fromIndex, toIndex, val);
}

void OrgBouncycastleUtilArrays_fillWithIntArray_withInt_(IOSIntArray *a, jint val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithIntArray_withInt_(a, val);
}

void OrgBouncycastleUtilArrays_fillWithIntArray_withInt_withInt_withInt_(IOSIntArray *a, jint fromIndex, jint toIndex, jint val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithIntArray_withInt_withInt_withInt_(a, fromIndex, toIndex, val);
}

void OrgBouncycastleUtilArrays_fillWithLongArray_withLong_(IOSLongArray *a, jlong val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithLongArray_withLong_(a, val);
}

void OrgBouncycastleUtilArrays_fillWithLongArray_withInt_withInt_withLong_(IOSLongArray *a, jint fromIndex, jint toIndex, jlong val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithLongArray_withInt_withInt_withLong_(a, fromIndex, toIndex, val);
}

void OrgBouncycastleUtilArrays_fillWithNSObjectArray_withId_(IOSObjectArray *a, id val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithNSObjectArray_withId_(a, val);
}

void OrgBouncycastleUtilArrays_fillWithNSObjectArray_withInt_withInt_withId_(IOSObjectArray *a, jint fromIndex, jint toIndex, id val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithNSObjectArray_withInt_withInt_withId_(a, fromIndex, toIndex, val);
}

void OrgBouncycastleUtilArrays_fillWithShortArray_withShort_(IOSShortArray *a, jshort val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithShortArray_withShort_(a, val);
}

void OrgBouncycastleUtilArrays_fillWithShortArray_withInt_withInt_withShort_(IOSShortArray *a, jint fromIndex, jint toIndex, jshort val) {
  OrgBouncycastleUtilArrays_initialize();
  JavaUtilArrays_fillWithShortArray_withInt_withInt_withShort_(a, fromIndex, toIndex, val);
}

jint OrgBouncycastleUtilArrays_hashCodeWithByteArray_(IOSByteArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 336
    return 0;
  }
  
#line 339
  jint i = data->size_;
  jint hc = i + 1;
  
#line 342
  while (--i >= 0) {
    
#line 344
    hc *= 257;
    hc ^= IOSByteArray_Get(data, i);
  }
  
#line 348
  return hc;
}


#line 351
jint OrgBouncycastleUtilArrays_hashCodeWithByteArray_withInt_withInt_(IOSByteArray *data, jint off, jint len) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 355
    return 0;
  }
  
#line 358
  jint i = len;
  jint hc = i + 1;
  
#line 361
  while (--i >= 0) {
    
#line 363
    hc *= 257;
    hc ^= IOSByteArray_Get(data, off + i);
  }
  
#line 367
  return hc;
}


#line 370
jint OrgBouncycastleUtilArrays_hashCodeWithCharArray_(IOSCharArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 374
    return 0;
  }
  
#line 377
  jint i = data->size_;
  jint hc = i + 1;
  
#line 380
  while (--i >= 0) {
    
#line 382
    hc *= 257;
    hc ^= IOSCharArray_Get(data, i);
  }
  
#line 386
  return hc;
}


#line 389
jint OrgBouncycastleUtilArrays_hashCodeWithIntArray2_(IOSObjectArray *ints) {
  OrgBouncycastleUtilArrays_initialize();
  jint hc = 0;
  
#line 393
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(ints))->size_; i++) {
    
#line 395
    hc = hc * 257 + OrgBouncycastleUtilArrays_hashCodeWithIntArray_(IOSObjectArray_Get(ints, i));
  }
  
#line 398
  return hc;
}


#line 401
jint OrgBouncycastleUtilArrays_hashCodeWithIntArray_(IOSIntArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 405
    return 0;
  }
  
#line 408
  jint i = data->size_;
  jint hc = i + 1;
  
#line 411
  while (--i >= 0) {
    
#line 413
    hc *= 257;
    hc ^= IOSIntArray_Get(data, i);
  }
  
#line 417
  return hc;
}


#line 420
jint OrgBouncycastleUtilArrays_hashCodeWithIntArray_withInt_withInt_(IOSIntArray *data, jint off, jint len) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 424
    return 0;
  }
  
#line 427
  jint i = len;
  jint hc = i + 1;
  
#line 430
  while (--i >= 0) {
    
#line 432
    hc *= 257;
    hc ^= IOSIntArray_Get(data, off + i);
  }
  
#line 436
  return hc;
}


#line 439
jint OrgBouncycastleUtilArrays_hashCodeWithLongArray_(IOSLongArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 443
    return 0;
  }
  
#line 446
  jint i = data->size_;
  jint hc = i + 1;
  
#line 449
  while (--i >= 0) {
    
#line 451
    jlong di = IOSLongArray_Get(data, i);
    hc *= 257;
    hc ^= (jint) di;
    hc *= 257;
    hc ^= (jint) (JreURShift64(di, 32));
  }
  
#line 458
  return hc;
}


#line 461
jint OrgBouncycastleUtilArrays_hashCodeWithLongArray_withInt_withInt_(IOSLongArray *data, jint off, jint len) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 465
    return 0;
  }
  
#line 468
  jint i = len;
  jint hc = i + 1;
  
#line 471
  while (--i >= 0) {
    
#line 473
    jlong di = IOSLongArray_Get(data, off + i);
    hc *= 257;
    hc ^= (jint) di;
    hc *= 257;
    hc ^= (jint) (JreURShift64(di, 32));
  }
  
#line 480
  return hc;
}


#line 483
jint OrgBouncycastleUtilArrays_hashCodeWithShortArray3_(IOSObjectArray *shorts) {
  OrgBouncycastleUtilArrays_initialize();
  jint hc = 0;
  
#line 487
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(shorts))->size_; i++) {
    
#line 489
    hc = hc * 257 + OrgBouncycastleUtilArrays_hashCodeWithShortArray2_(IOSObjectArray_Get(shorts, i));
  }
  
#line 492
  return hc;
}


#line 495
jint OrgBouncycastleUtilArrays_hashCodeWithShortArray2_(IOSObjectArray *shorts) {
  OrgBouncycastleUtilArrays_initialize();
  jint hc = 0;
  
#line 499
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(shorts))->size_; i++) {
    
#line 501
    hc = hc * 257 + OrgBouncycastleUtilArrays_hashCodeWithShortArray_(IOSObjectArray_Get(shorts, i));
  }
  
#line 504
  return hc;
}


#line 507
jint OrgBouncycastleUtilArrays_hashCodeWithShortArray_(IOSShortArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 511
    return 0;
  }
  
#line 514
  jint i = data->size_;
  jint hc = i + 1;
  
#line 517
  while (--i >= 0) {
    
#line 519
    hc *= 257;
    hc ^= (IOSShortArray_Get(data, i) & (jint) 0xff);
  }
  
#line 523
  return hc;
}


#line 526
jint OrgBouncycastleUtilArrays_hashCodeWithNSObjectArray_(IOSObjectArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 530
    return 0;
  }
  
#line 533
  jint i = data->size_;
  jint hc = i + 1;
  
#line 536
  while (--i >= 0) {
    
#line 538
    hc *= 257;
    hc ^= OrgBouncycastleUtilObjects_hashCodeWithId_(IOSObjectArray_Get(data, i));
  }
  
#line 542
  return hc;
}


#line 545
IOSBooleanArray *OrgBouncycastleUtilArrays_cloneWithBooleanArray_(IOSBooleanArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == data ? nil : [data java_clone];
}

IOSByteArray *OrgBouncycastleUtilArrays_cloneWithByteArray_(IOSByteArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == data ? nil : [data java_clone];
}

IOSCharArray *OrgBouncycastleUtilArrays_cloneWithCharArray_(IOSCharArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == data ? nil : [data java_clone];
}

IOSIntArray *OrgBouncycastleUtilArrays_cloneWithIntArray_(IOSIntArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == data ? nil : [data java_clone];
}

IOSLongArray *OrgBouncycastleUtilArrays_cloneWithLongArray_(IOSLongArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == data ? nil : [data java_clone];
}

IOSShortArray *OrgBouncycastleUtilArrays_cloneWithShortArray_(IOSShortArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == data ? nil : [data java_clone];
}

IOSObjectArray *OrgBouncycastleUtilArrays_cloneWithJavaMathBigIntegerArray_(IOSObjectArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == data ? nil : [data java_clone];
}

IOSByteArray *OrgBouncycastleUtilArrays_cloneWithByteArray_withByteArray_(IOSByteArray *data, IOSByteArray *existing) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 584
    return nil;
  }
  if ((existing == nil) || (((IOSByteArray *) nil_chk(existing))->size_ != data->size_)) {
    
#line 588
    return OrgBouncycastleUtilArrays_cloneWithByteArray_(data);
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, existing, 0, ((IOSByteArray *) nil_chk(existing))->size_);
  return existing;
}


#line 594
IOSLongArray *OrgBouncycastleUtilArrays_cloneWithLongArray_withLongArray_(IOSLongArray *data, IOSLongArray *existing) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 598
    return nil;
  }
  if ((existing == nil) || (((IOSLongArray *) nil_chk(existing))->size_ != data->size_)) {
    
#line 602
    return OrgBouncycastleUtilArrays_cloneWithLongArray_(data);
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, existing, 0, ((IOSLongArray *) nil_chk(existing))->size_);
  return existing;
}


#line 608
IOSObjectArray *OrgBouncycastleUtilArrays_cloneWithByteArray2_(IOSObjectArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 612
    return nil;
  }
  
#line 615
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:data->size_ type:IOSClass_byteArray(1)];
  
#line 617
  for (jint i = 0; i != copy_->size_; i++) {
    
#line 619
    (void) IOSObjectArray_Set(copy_, i, OrgBouncycastleUtilArrays_cloneWithByteArray_(IOSObjectArray_Get(data, i)));
  }
  
#line 622
  return copy_;
}


#line 625
IOSObjectArray *OrgBouncycastleUtilArrays_cloneWithByteArray3_(IOSObjectArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (data == nil) {
    
#line 629
    return nil;
  }
  
#line 632
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:data->size_ type:IOSClass_byteArray(2)];
  
#line 634
  for (jint i = 0; i != copy_->size_; i++) {
    
#line 636
    (void) IOSObjectArray_Set(copy_, i, OrgBouncycastleUtilArrays_cloneWithByteArray2_(IOSObjectArray_Get(data, i)));
  }
  
#line 639
  return copy_;
}


#line 642
IOSBooleanArray *OrgBouncycastleUtilArrays_copyOfWithBooleanArray_withInt_(IOSBooleanArray *original, jint newLength) {
  OrgBouncycastleUtilArrays_initialize();
  IOSBooleanArray *copy_ = [IOSBooleanArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, 0, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSBooleanArray *) nil_chk(original))->size_, newLength));
  return copy_;
}

IOSByteArray *OrgBouncycastleUtilArrays_copyOfWithByteArray_withInt_(IOSByteArray *original, jint newLength) {
  OrgBouncycastleUtilArrays_initialize();
  IOSByteArray *copy_ = [IOSByteArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, 0, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSByteArray *) nil_chk(original))->size_, newLength));
  return copy_;
}

IOSCharArray *OrgBouncycastleUtilArrays_copyOfWithCharArray_withInt_(IOSCharArray *original, jint newLength) {
  OrgBouncycastleUtilArrays_initialize();
  IOSCharArray *copy_ = [IOSCharArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, 0, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSCharArray *) nil_chk(original))->size_, newLength));
  return copy_;
}

IOSIntArray *OrgBouncycastleUtilArrays_copyOfWithIntArray_withInt_(IOSIntArray *original, jint newLength) {
  OrgBouncycastleUtilArrays_initialize();
  IOSIntArray *copy_ = [IOSIntArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, 0, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSIntArray *) nil_chk(original))->size_, newLength));
  return copy_;
}

IOSLongArray *OrgBouncycastleUtilArrays_copyOfWithLongArray_withInt_(IOSLongArray *original, jint newLength) {
  OrgBouncycastleUtilArrays_initialize();
  IOSLongArray *copy_ = [IOSLongArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, 0, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSLongArray *) nil_chk(original))->size_, newLength));
  return copy_;
}

IOSShortArray *OrgBouncycastleUtilArrays_copyOfWithShortArray_withInt_(IOSShortArray *original, jint newLength) {
  OrgBouncycastleUtilArrays_initialize();
  IOSShortArray *copy_ = [IOSShortArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, 0, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSShortArray *) nil_chk(original))->size_, newLength));
  return copy_;
}

IOSObjectArray *OrgBouncycastleUtilArrays_copyOfWithJavaMathBigIntegerArray_withInt_(IOSObjectArray *original, jint newLength) {
  OrgBouncycastleUtilArrays_initialize();
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:newLength type:JavaMathBigInteger_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, 0, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSObjectArray *) nil_chk(original))->size_, newLength));
  return copy_;
}

IOSBooleanArray *OrgBouncycastleUtilArrays_copyOfRangeWithBooleanArray_withInt_withInt_(IOSBooleanArray *original, jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSBooleanArray *copy_ = [IOSBooleanArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, from, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSBooleanArray *) nil_chk(original))->size_ - from, newLength));
  return copy_;
}


#line 712
IOSByteArray *OrgBouncycastleUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(IOSByteArray *original, jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSByteArray *copy_ = [IOSByteArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, from, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSByteArray *) nil_chk(original))->size_ - from, newLength));
  return copy_;
}

IOSCharArray *OrgBouncycastleUtilArrays_copyOfRangeWithCharArray_withInt_withInt_(IOSCharArray *original, jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSCharArray *copy_ = [IOSCharArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, from, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSCharArray *) nil_chk(original))->size_ - from, newLength));
  return copy_;
}

IOSIntArray *OrgBouncycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(IOSIntArray *original, jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSIntArray *copy_ = [IOSIntArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, from, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSIntArray *) nil_chk(original))->size_ - from, newLength));
  return copy_;
}

IOSLongArray *OrgBouncycastleUtilArrays_copyOfRangeWithLongArray_withInt_withInt_(IOSLongArray *original, jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSLongArray *copy_ = [IOSLongArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, from, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSLongArray *) nil_chk(original))->size_ - from, newLength));
  return copy_;
}

IOSShortArray *OrgBouncycastleUtilArrays_copyOfRangeWithShortArray_withInt_withInt_(IOSShortArray *original, jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSShortArray *copy_ = [IOSShortArray newArrayWithLength:newLength];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, from, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSShortArray *) nil_chk(original))->size_ - from, newLength));
  return copy_;
}

IOSObjectArray *OrgBouncycastleUtilArrays_copyOfRangeWithJavaMathBigIntegerArray_withInt_withInt_(IOSObjectArray *original, jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(from, to);
  IOSObjectArray *copy_ = [IOSObjectArray newArrayWithLength:newLength type:JavaMathBigInteger_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(original, from, copy_, 0, JavaLangMath_minWithInt_withInt_(((IOSObjectArray *) nil_chk(original))->size_ - from, newLength));
  return copy_;
}

jint OrgBouncycastleUtilArrays_getLengthWithInt_withInt_(jint from, jint to) {
  OrgBouncycastleUtilArrays_initialize();
  jint newLength = to - from;
  if (newLength < 0) {
    
#line 765
    JavaLangStringBuffer *sb = new_JavaLangStringBuffer_initWithInt_(from);
    (void) [((JavaLangStringBuffer *) nil_chk([sb appendWithNSString:@" > "])) appendWithInt:to];
    @throw new_JavaLangIllegalArgumentException_initWithNSString_([sb description]);
  }
  return newLength;
}


#line 772
IOSByteArray *OrgBouncycastleUtilArrays_appendWithByteArray_withByte_(IOSByteArray *a, jbyte b) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 776
    return [IOSByteArray newArrayWithBytes:(jbyte[]){ b } count:1];
  }
  
#line 779
  jint length = a->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  *IOSByteArray_GetRef(result, length) = b;
  return result;
}


#line 786
IOSShortArray *OrgBouncycastleUtilArrays_appendWithShortArray_withShort_(IOSShortArray *a, jshort b) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 790
    return [IOSShortArray newArrayWithShorts:(jshort[]){ b } count:1];
  }
  
#line 793
  jint length = a->size_;
  IOSShortArray *result = [IOSShortArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  *IOSShortArray_GetRef(result, length) = b;
  return result;
}


#line 800
IOSIntArray *OrgBouncycastleUtilArrays_appendWithIntArray_withInt_(IOSIntArray *a, jint b) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 804
    return [IOSIntArray newArrayWithInts:(jint[]){ b } count:1];
  }
  
#line 807
  jint length = a->size_;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  *IOSIntArray_GetRef(result, length) = b;
  return result;
}


#line 814
IOSObjectArray *OrgBouncycastleUtilArrays_appendWithNSStringArray_withNSString_(IOSObjectArray *a, NSString *b) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 818
    return [IOSObjectArray newArrayWithObjects:(id[]){ b } count:1 type:NSString_class_()];
  }
  
#line 821
  jint length = a->size_;
  IOSObjectArray *result = [IOSObjectArray newArrayWithLength:length + 1 type:NSString_class_()];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 0, length);
  (void) IOSObjectArray_Set(result, length, b);
  return result;
}


#line 828
IOSByteArray *OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 833
    return OrgBouncycastleUtilArrays_cloneWithByteArray_(b);
  }
  if (nil == b) {
    
#line 838
    return OrgBouncycastleUtilArrays_cloneWithByteArray_(a);
  }
  
#line 841
  IOSByteArray *r = [IOSByteArray newArrayWithLength:a->size_ + b->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, r, 0, a->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, r, a->size_, b->size_);
  return r;
}


#line 847
IOSShortArray *OrgBouncycastleUtilArrays_concatenateWithShortArray_withShortArray_(IOSShortArray *a, IOSShortArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 852
    return OrgBouncycastleUtilArrays_cloneWithShortArray_(b);
  }
  if (nil == b) {
    
#line 857
    return OrgBouncycastleUtilArrays_cloneWithShortArray_(a);
  }
  
#line 860
  IOSShortArray *r = [IOSShortArray newArrayWithLength:a->size_ + b->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, r, 0, a->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, r, a->size_, b->size_);
  return r;
}


#line 866
IOSByteArray *OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b, IOSByteArray *c) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 870
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(b, c);
  }
  if (nil == b) {
    
#line 874
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(a, c);
  }
  if (nil == c) {
    
#line 878
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(a, b);
  }
  
#line 881
  IOSByteArray *r = [IOSByteArray newArrayWithLength:a->size_ + b->size_ + c->size_];
  jint pos = 0;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, r, pos, a->size_);
  
#line 883
  pos += a->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, r, pos, b->size_);
  
#line 884
  pos += b->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(c, 0, r, pos, c->size_);
  return r;
}


#line 889
IOSByteArray *OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_withByteArray_(IOSByteArray *a, IOSByteArray *b, IOSByteArray *c, IOSByteArray *d) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 893
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(b, c, d);
  }
  if (nil == b) {
    
#line 897
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, c, d);
  }
  if (nil == c) {
    
#line 901
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, b, d);
  }
  if (nil == d) {
    
#line 905
    return OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_withByteArray_(a, b, c);
  }
  
#line 908
  IOSByteArray *r = [IOSByteArray newArrayWithLength:a->size_ + b->size_ + c->size_ + d->size_];
  jint pos = 0;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, r, pos, a->size_);
  
#line 910
  pos += a->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, r, pos, b->size_);
  
#line 911
  pos += b->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(c, 0, r, pos, c->size_);
  
#line 912
  pos += c->size_;
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(d, 0, r, pos, d->size_);
  return r;
}


#line 917
IOSByteArray *OrgBouncycastleUtilArrays_concatenateWithByteArray2_(IOSObjectArray *arrays) {
  OrgBouncycastleUtilArrays_initialize();
  jint size = 0;
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(arrays))->size_; i++) {
    
#line 922
    size += ((IOSByteArray *) nil_chk(IOSObjectArray_Get(arrays, i)))->size_;
  }
  
#line 925
  IOSByteArray *rv = [IOSByteArray newArrayWithLength:size];
  
#line 927
  jint offSet = 0;
  for (jint i = 0; i != arrays->size_; i++) {
    
#line 930
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(IOSObjectArray_Get(arrays, i), 0, rv, offSet, ((IOSByteArray *) nil_chk(IOSObjectArray_Get(arrays, i)))->size_);
    offSet += ((IOSByteArray *) nil_chk(IOSObjectArray_Get(arrays, i)))->size_;
  }
  
#line 934
  return rv;
}


#line 937
IOSIntArray *OrgBouncycastleUtilArrays_concatenateWithIntArray_withIntArray_(IOSIntArray *a, IOSIntArray *b) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 942
    return OrgBouncycastleUtilArrays_cloneWithIntArray_(b);
  }
  if (nil == b) {
    
#line 947
    return OrgBouncycastleUtilArrays_cloneWithIntArray_(a);
  }
  
#line 950
  IOSIntArray *r = [IOSIntArray newArrayWithLength:a->size_ + b->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, r, 0, a->size_);
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, 0, r, a->size_, b->size_);
  return r;
}


#line 956
IOSByteArray *OrgBouncycastleUtilArrays_prependWithByteArray_withByte_(IOSByteArray *a, jbyte b) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 960
    return [IOSByteArray newArrayWithBytes:(jbyte[]){ b } count:1];
  }
  
#line 963
  jint length = a->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 1, length);
  *IOSByteArray_GetRef(result, 0) = b;
  return result;
}


#line 970
IOSShortArray *OrgBouncycastleUtilArrays_prependWithShortArray_withShort_(IOSShortArray *a, jshort b) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 974
    return [IOSShortArray newArrayWithShorts:(jshort[]){ b } count:1];
  }
  
#line 977
  jint length = a->size_;
  IOSShortArray *result = [IOSShortArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 1, length);
  *IOSShortArray_GetRef(result, 0) = b;
  return result;
}


#line 984
IOSIntArray *OrgBouncycastleUtilArrays_prependWithIntArray_withInt_(IOSIntArray *a, jint b) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 988
    return [IOSIntArray newArrayWithInts:(jint[]){ b } count:1];
  }
  
#line 991
  jint length = a->size_;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:length + 1];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, result, 1, length);
  *IOSIntArray_GetRef(result, 0) = b;
  return result;
}


#line 998
IOSByteArray *OrgBouncycastleUtilArrays_reverseWithByteArray_(IOSByteArray *a) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 1002
    return nil;
  }
  
#line 1005
  jint p1 = 0;
  
#line 1005
  jint p2 = a->size_;
  IOSByteArray *result = [IOSByteArray newArrayWithLength:p2];
  
#line 1008
  while (--p2 >= 0) {
    
#line 1010
    *IOSByteArray_GetRef(result, p2) = IOSByteArray_Get(a, p1++);
  }
  
#line 1013
  return result;
}


#line 1016
IOSIntArray *OrgBouncycastleUtilArrays_reverseWithIntArray_(IOSIntArray *a) {
  OrgBouncycastleUtilArrays_initialize();
  if (a == nil) {
    
#line 1020
    return nil;
  }
  
#line 1023
  jint p1 = 0;
  
#line 1023
  jint p2 = a->size_;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:p2];
  
#line 1026
  while (--p2 >= 0) {
    
#line 1028
    *IOSIntArray_GetRef(result, p2) = IOSIntArray_Get(a, p1++);
  }
  
#line 1031
  return result;
}


#line 1034
IOSByteArray *OrgBouncycastleUtilArrays_reverseInPlaceWithByteArray_(IOSByteArray *a) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 1038
    return nil;
  }
  
#line 1041
  jint p1 = 0;
  
#line 1041
  jint p2 = a->size_ - 1;
  while (p1 < p2) {
    
#line 1044
    jbyte t1 = IOSByteArray_Get(a, p1);
    
#line 1044
    jbyte t2 = IOSByteArray_Get(a, p2);
    *IOSByteArray_GetRef(a, p1++) = t2;
    *IOSByteArray_GetRef(a, p2--) = t1;
  }
  
#line 1049
  return a;
}


#line 1052
IOSIntArray *OrgBouncycastleUtilArrays_reverseInPlaceWithIntArray_(IOSIntArray *a) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == a) {
    
#line 1056
    return nil;
  }
  
#line 1059
  jint p1 = 0;
  
#line 1059
  jint p2 = a->size_ - 1;
  while (p1 < p2) {
    
#line 1062
    jint t1 = IOSIntArray_Get(a, p1);
    
#line 1062
    jint t2 = IOSIntArray_Get(a, p2);
    *IOSIntArray_GetRef(a, p1++) = t2;
    *IOSIntArray_GetRef(a, p2--) = t1;
  }
  
#line 1067
  return a;
}


#line 1122
void OrgBouncycastleUtilArrays_clearWithByteArray_(IOSByteArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil != data) {
    
#line 1126
    JavaUtilArrays_fillWithByteArray_withByte_(data, (jbyte) (jint) 0x00);
  }
}


#line 1130
void OrgBouncycastleUtilArrays_clearWithIntArray_(IOSIntArray *data) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil != data) {
    
#line 1134
    JavaUtilArrays_fillWithIntArray_withInt_(data, 0);
  }
}


#line 1138
jboolean OrgBouncycastleUtilArrays_isNullOrContainsNullWithNSObjectArray_(IOSObjectArray *array) {
  OrgBouncycastleUtilArrays_initialize();
  if (nil == array) {
    
#line 1142
    return true;
  }
  jint count = array->size_;
  for (jint i = 0; i < count; ++i) {
    
#line 1147
    if (nil == IOSObjectArray_Get(array, i)) {
      
#line 1149
      return true;
    }
  }
  return false;
}


#line 1155
jboolean OrgBouncycastleUtilArrays_isNullOrEmptyWithByteArray_(IOSByteArray *array) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == array || array->size_ < 1;
}

jboolean OrgBouncycastleUtilArrays_isNullOrEmptyWithIntArray_(IOSIntArray *array) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == array || array->size_ < 1;
}

jboolean OrgBouncycastleUtilArrays_isNullOrEmptyWithNSObjectArray_(IOSObjectArray *array) {
  OrgBouncycastleUtilArrays_initialize();
  return nil == array || array->size_ < 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleUtilArrays)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/util/Arrays.java"


#line 1073
@implementation OrgBouncycastleUtilArrays_Iterator


#line 1088
- (instancetype)initWithNSObjectArray:(IOSObjectArray *)dataArray {
  OrgBouncycastleUtilArrays_Iterator_initWithNSObjectArray_(self, dataArray);
  return self;
}

- (jboolean)hasNext {
  
#line 1096
  return position_ < ((IOSObjectArray *) nil_chk(dataArray_))->size_;
}

- (id)next {
  
#line 1102
  if (position_ == ((IOSObjectArray *) nil_chk(dataArray_))->size_) {
    
#line 1104
    @throw new_JavaUtilNoSuchElementException_initWithNSString_(JreStrcat("$I", @"Out of elements: ", position_));
  }
  
#line 1107
  return IOSObjectArray_Get(dataArray_, position_++);
}


#line 1110
- (void)remove {
  
#line 1113
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Cannot remove element from an Array.");
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSObjectArray:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dataArray_", "[LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSObject;", "([TT;)V", "()TT;", "[TT;", "LOrgBouncycastleUtilArrays;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/util/Iterator<TT;>;" };
  static const J2ObjcClassInfo _OrgBouncycastleUtilArrays_Iterator = { "Iterator", "org.bouncycastle.util", ptrTable, methods, fields, 7, 0x9, 4, 2, 4, -1, -1, 5, -1 };
  return &_OrgBouncycastleUtilArrays_Iterator;
}

@end


#line 1088
void OrgBouncycastleUtilArrays_Iterator_initWithNSObjectArray_(OrgBouncycastleUtilArrays_Iterator *self, IOSObjectArray *dataArray) {
  NSObject_init(self);
  self->position_ =
#line 1078
  0;
  
#line 1090
  self->dataArray_ = dataArray;
}


#line 1088
OrgBouncycastleUtilArrays_Iterator *new_OrgBouncycastleUtilArrays_Iterator_initWithNSObjectArray_(IOSObjectArray *dataArray) {
  J2OBJC_NEW_IMPL(OrgBouncycastleUtilArrays_Iterator, initWithNSObjectArray_, dataArray)
}


#line 1088
OrgBouncycastleUtilArrays_Iterator *create_OrgBouncycastleUtilArrays_Iterator_initWithNSObjectArray_(IOSObjectArray *dataArray) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleUtilArrays_Iterator, initWithNSObjectArray_, dataArray)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleUtilArrays_Iterator)

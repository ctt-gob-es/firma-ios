//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/interfaces/ECPointEncoder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJceInterfacesECPointEncoder")
#ifdef RESTRICT_OrgBouncycastleJceInterfacesECPointEncoder
#define INCLUDE_ALL_OrgBouncycastleJceInterfacesECPointEncoder 0
#else
#define INCLUDE_ALL_OrgBouncycastleJceInterfacesECPointEncoder 1
#endif
#undef RESTRICT_OrgBouncycastleJceInterfacesECPointEncoder

#if !defined (OrgBouncycastleJceInterfacesECPointEncoder_) && (INCLUDE_ALL_OrgBouncycastleJceInterfacesECPointEncoder || defined(INCLUDE_OrgBouncycastleJceInterfacesECPointEncoder))
#define OrgBouncycastleJceInterfacesECPointEncoder_

/*!
 @brief All BC elliptic curve keys implement this interface.You need to
  cast the key to get access to it.
 <p>
  By default BC keys produce encodings without point compression,
  to turn this on call setPointFormat() with "COMPRESSED".
 */
@protocol OrgBouncycastleJceInterfacesECPointEncoder < JavaObject >

/*!
 @brief Set the formatting for encoding of points.If the String "UNCOMPRESSED" is passed
  in point compression will not be used.
 If the String "COMPRESSED" is passed point
  compression will be used. The default is "UNCOMPRESSED".
 @param style the style to use.
 */
- (void)setPointFormatWithNSString:(NSString *)style;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJceInterfacesECPointEncoder)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJceInterfacesECPointEncoder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJceInterfacesECPointEncoder")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/interfaces/ECPointEncoder.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/jce/interfaces/ECPointEncoder.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jce/interfaces/ECPointEncoder must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJceInterfacesECPointEncoder : NSObject

@end

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/interfaces/ECPointEncoder.java"


#line 10
@implementation OrgBouncycastleJceInterfacesECPointEncoder

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setPointFormatWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "setPointFormat", "LNSString;" };
  static const J2ObjcClassInfo _OrgBouncycastleJceInterfacesECPointEncoder = { "ECPointEncoder", "org.bouncycastle.jce.interfaces", ptrTable, methods, NULL, 7, 0x609, 1, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJceInterfacesECPointEncoder;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgBouncycastleJceInterfacesECPointEncoder)

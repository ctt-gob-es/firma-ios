//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/ECNamedCurveTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJceECNamedCurveTable")
#ifdef RESTRICT_OrgBouncycastleJceECNamedCurveTable
#define INCLUDE_ALL_OrgBouncycastleJceECNamedCurveTable 0
#else
#define INCLUDE_ALL_OrgBouncycastleJceECNamedCurveTable 1
#endif
#undef RESTRICT_OrgBouncycastleJceECNamedCurveTable

#if !defined (OrgBouncycastleJceECNamedCurveTable_) && (INCLUDE_ALL_OrgBouncycastleJceECNamedCurveTable || defined(INCLUDE_OrgBouncycastleJceECNamedCurveTable))
#define OrgBouncycastleJceECNamedCurveTable_

@class OrgBouncycastleJceSpecECNamedCurveParameterSpec;
@protocol JavaUtilEnumeration;

/*!
 @brief a table of locally supported named curves.
 */
@interface OrgBouncycastleJceECNamedCurveTable : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief return an enumeration of the names of the available curves.
 @return an enumeration of the names of the available curves.
 */
+ (id<JavaUtilEnumeration>)getNames;

/*!
 @brief return a parameter spec representing the passed in named
  curve.The routine returns null if the curve is not present.
 @param name the name of the curve requested
 @return a parameter spec for the curve, null if it is not available.
 */
+ (OrgBouncycastleJceSpecECNamedCurveParameterSpec *)getParameterSpecWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJceECNamedCurveTable)

FOUNDATION_EXPORT void OrgBouncycastleJceECNamedCurveTable_init(OrgBouncycastleJceECNamedCurveTable *self);

FOUNDATION_EXPORT OrgBouncycastleJceECNamedCurveTable *new_OrgBouncycastleJceECNamedCurveTable_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceECNamedCurveTable *create_OrgBouncycastleJceECNamedCurveTable_init(void);

FOUNDATION_EXPORT OrgBouncycastleJceSpecECNamedCurveParameterSpec *OrgBouncycastleJceECNamedCurveTable_getParameterSpecWithNSString_(NSString *name);

FOUNDATION_EXPORT id<JavaUtilEnumeration> OrgBouncycastleJceECNamedCurveTable_getNames(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJceECNamedCurveTable)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJceECNamedCurveTable")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/ECNamedCurveTable.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/x9/ECNamedCurveTable.h"
#include "org/bouncycastle/asn1/x9/X9ECParameters.h"
#include "org/bouncycastle/crypto/ec/CustomNamedCurves.h"
#include "org/bouncycastle/jce/ECNamedCurveTable.h"
#include "org/bouncycastle/jce/spec/ECNamedCurveParameterSpec.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jce/ECNamedCurveTable must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/ECNamedCurveTable.java"


#line 12
@implementation OrgBouncycastleJceECNamedCurveTable

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 12
- (instancetype)init {
  OrgBouncycastleJceECNamedCurveTable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 20
+ (OrgBouncycastleJceSpecECNamedCurveParameterSpec *)getParameterSpecWithNSString:(NSString *)name {
  return OrgBouncycastleJceECNamedCurveTable_getParameterSpecWithNSString_(name);
}


#line 71
+ (id<JavaUtilEnumeration>)getNames {
  return OrgBouncycastleJceECNamedCurveTable_getNames();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleJceSpecECNamedCurveParameterSpec;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getParameterSpecWithNSString:);
  methods[2].selector = @selector(getNames);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getParameterSpec", "LNSString;" };
  static const J2ObjcClassInfo _OrgBouncycastleJceECNamedCurveTable = { "ECNamedCurveTable", "org.bouncycastle.jce", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJceECNamedCurveTable;
}

@end


#line 12
void OrgBouncycastleJceECNamedCurveTable_init(OrgBouncycastleJceECNamedCurveTable *self) {
  NSObject_init(self);
}


#line 12
OrgBouncycastleJceECNamedCurveTable *new_OrgBouncycastleJceECNamedCurveTable_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceECNamedCurveTable, init)
}


#line 12
OrgBouncycastleJceECNamedCurveTable *create_OrgBouncycastleJceECNamedCurveTable_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceECNamedCurveTable, init)
}


#line 20
OrgBouncycastleJceSpecECNamedCurveParameterSpec *OrgBouncycastleJceECNamedCurveTable_getParameterSpecWithNSString_(NSString *name) {
  OrgBouncycastleJceECNamedCurveTable_initialize();
  
#line 23
  OrgBouncycastleAsn1X9X9ECParameters *ecP = OrgBouncycastleCryptoEcCustomNamedCurves_getByNameWithNSString_(name);
  if (ecP == nil) {
    
#line 26
    @try {
      
#line 28
      ecP = OrgBouncycastleCryptoEcCustomNamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(name));
    }
    @catch (JavaLangIllegalArgumentException *e) {
    }
    
#line 35
    if (ecP == nil) {
      
#line 37
      ecP = OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(name);
      if (ecP == nil) {
        
#line 40
        @try {
          
#line 42
          ecP = OrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(name));
        }
        @catch (JavaLangIllegalArgumentException *e) {
        }
      }
    }
  }
  
#line 52
  if (ecP == nil) {
    
#line 54
    return nil;
  }
  
#line 57
  return new_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(
#line 58
  name,
#line 59
  [ecP getCurve],
#line 60
  [ecP getG],
#line 61
  [ecP getN],
#line 62
  [ecP getH],
#line 63
  [ecP getSeed]);
}


#line 71
id<JavaUtilEnumeration> OrgBouncycastleJceECNamedCurveTable_getNames() {
  OrgBouncycastleJceECNamedCurveTable_initialize();
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getNames();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJceECNamedCurveTable)

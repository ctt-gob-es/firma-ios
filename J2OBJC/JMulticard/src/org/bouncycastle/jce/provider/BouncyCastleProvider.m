//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/provider/BouncyCastleProvider.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/InternalError.h"
#include "java/security/AccessController.h"
#include "java/security/PrivateKey.h"
#include "java/security/PrivilegedAction.h"
#include "java/security/Provider.h"
#include "java/security/PublicKey.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/bc/BCObjectIdentifiers.h"
#include "org/bouncycastle/asn1/isara/IsaraObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/jcajce/provider/config/ProviderConfiguration.h"
#include "org/bouncycastle/jcajce/provider/symmetric/util/ClassUtil.h"
#include "org/bouncycastle/jcajce/provider/util/AlgorithmProvider.h"
#include "org/bouncycastle/jcajce/provider/util/AsymmetricKeyInfoConverter.h"
#include "org/bouncycastle/jce/provider/BouncyCastleProvider.h"
#include "org/bouncycastle/jce/provider/BouncyCastleProviderConfiguration.h"
#include "org/bouncycastle/pqc/asn1/PQCObjectIdentifiers.h"
#include "org/bouncycastle/pqc/jcajce/provider/lms/LMSKeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceCCA2KeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/mceliece/McElieceKeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/newhope/NHKeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/qtesla/QTESLAKeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/rainbow/RainbowKeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincs/Sphincs256KeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/sphincsplus/SPHINCSPlusKeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/xmss/XMSSKeyFactorySpi.h"
#include "org/bouncycastle/pqc/jcajce/provider/xmss/XMSSMTKeyFactorySpi.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jce/provider/BouncyCastleProvider must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJceProviderBouncyCastleProvider ()

- (void)setup;

- (void)loadAlgorithmsWithNSString:(NSString *)packageName
                 withNSStringArray:(IOSObjectArray *)names;

- (void)loadPQCKeys;

+ (id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm;

@end

inline NSString *OrgBouncycastleJceProviderBouncyCastleProvider_get_info(void);
inline NSString *OrgBouncycastleJceProviderBouncyCastleProvider_set_info(NSString *value);
static NSString *OrgBouncycastleJceProviderBouncyCastleProvider_info = @"BouncyCastle Security Provider v1.71";
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleJceProviderBouncyCastleProvider, info, NSString *)

inline id<JavaUtilMap> OrgBouncycastleJceProviderBouncyCastleProvider_get_keyInfoConverters(void);
static id<JavaUtilMap> OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, keyInfoConverters, id<JavaUtilMap>)

inline IOSClass *OrgBouncycastleJceProviderBouncyCastleProvider_get_revChkClass(void);
static IOSClass *OrgBouncycastleJceProviderBouncyCastleProvider_revChkClass;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, revChkClass, IOSClass *)

inline NSString *OrgBouncycastleJceProviderBouncyCastleProvider_get_SYMMETRIC_PACKAGE(void);
static NSString *OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_PACKAGE = @"org.bouncycastle.jcajce.provider.symmetric.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, SYMMETRIC_PACKAGE, NSString *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_SYMMETRIC_GENERIC(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_GENERIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, SYMMETRIC_GENERIC, IOSObjectArray *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_SYMMETRIC_MACS(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_MACS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, SYMMETRIC_MACS, IOSObjectArray *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_SYMMETRIC_CIPHERS(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_CIPHERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, SYMMETRIC_CIPHERS, IOSObjectArray *)

inline NSString *OrgBouncycastleJceProviderBouncyCastleProvider_get_ASYMMETRIC_PACKAGE(void);
static NSString *OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_PACKAGE = @"org.bouncycastle.jcajce.provider.asymmetric.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, ASYMMETRIC_PACKAGE, NSString *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_ASYMMETRIC_GENERIC(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_GENERIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, ASYMMETRIC_GENERIC, IOSObjectArray *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_ASYMMETRIC_CIPHERS(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_CIPHERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, ASYMMETRIC_CIPHERS, IOSObjectArray *)

inline NSString *OrgBouncycastleJceProviderBouncyCastleProvider_get_DIGEST_PACKAGE(void);
static NSString *OrgBouncycastleJceProviderBouncyCastleProvider_DIGEST_PACKAGE = @"org.bouncycastle.jcajce.provider.digest.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, DIGEST_PACKAGE, NSString *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_DIGESTS(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_DIGESTS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, DIGESTS, IOSObjectArray *)

inline NSString *OrgBouncycastleJceProviderBouncyCastleProvider_get_KEYSTORE_PACKAGE(void);
static NSString *OrgBouncycastleJceProviderBouncyCastleProvider_KEYSTORE_PACKAGE = @"org.bouncycastle.jcajce.provider.keystore.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, KEYSTORE_PACKAGE, NSString *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_KEYSTORES(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_KEYSTORES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, KEYSTORES, IOSObjectArray *)

inline NSString *OrgBouncycastleJceProviderBouncyCastleProvider_get_SECURE_RANDOM_PACKAGE(void);
static NSString *OrgBouncycastleJceProviderBouncyCastleProvider_SECURE_RANDOM_PACKAGE = @"org.bouncycastle.jcajce.provider.drbg.";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, SECURE_RANDOM_PACKAGE, NSString *)

inline IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_get_SECURE_RANDOMS(void);
static IOSObjectArray *OrgBouncycastleJceProviderBouncyCastleProvider_SECURE_RANDOMS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJceProviderBouncyCastleProvider, SECURE_RANDOMS, IOSObjectArray *)

__attribute__((unused)) static void OrgBouncycastleJceProviderBouncyCastleProvider_setup(OrgBouncycastleJceProviderBouncyCastleProvider *self);

__attribute__((unused)) static void OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(OrgBouncycastleJceProviderBouncyCastleProvider *self, NSString *packageName, IOSObjectArray *names);

__attribute__((unused)) static void OrgBouncycastleJceProviderBouncyCastleProvider_loadPQCKeys(OrgBouncycastleJceProviderBouncyCastleProvider *self);

__attribute__((unused)) static id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> OrgBouncycastleJceProviderBouncyCastleProvider_getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *algorithm);

@interface OrgBouncycastleJceProviderBouncyCastleProvider_1 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  OrgBouncycastleJceProviderBouncyCastleProvider *this$0_;
}

- (instancetype)initWithOrgBouncycastleJceProviderBouncyCastleProvider:(OrgBouncycastleJceProviderBouncyCastleProvider *)outer$;

- (id)run;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJceProviderBouncyCastleProvider_1)

__attribute__((unused)) static void OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(OrgBouncycastleJceProviderBouncyCastleProvider_1 *self, OrgBouncycastleJceProviderBouncyCastleProvider *outer$);

__attribute__((unused)) static OrgBouncycastleJceProviderBouncyCastleProvider_1 *new_OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(OrgBouncycastleJceProviderBouncyCastleProvider *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleJceProviderBouncyCastleProvider_1 *create_OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(OrgBouncycastleJceProviderBouncyCastleProvider *outer$);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/provider/BouncyCastleProvider.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleJceProviderBouncyCastleProvider)

NSString *OrgBouncycastleJceProviderBouncyCastleProvider_PROVIDER_NAME = @"BC";
id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> OrgBouncycastleJceProviderBouncyCastleProvider_CONFIGURATION;


#line 59
@implementation OrgBouncycastleJceProviderBouncyCastleProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 145
- (instancetype)init {
  OrgBouncycastleJceProviderBouncyCastleProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 160
- (void)setup {
  OrgBouncycastleJceProviderBouncyCastleProvider_setup(self);
}


#line 236
- (void)loadAlgorithmsWithNSString:(NSString *)packageName
                 withNSStringArray:(IOSObjectArray *)names {
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, packageName, names);
}


#line 256
- (void)loadPQCKeys {
  OrgBouncycastleJceProviderBouncyCastleProvider_loadPQCKeys(self);
}


#line 276
- (void)setParameterWithNSString:(NSString *)parameterName
                          withId:(id)parameter {
  
#line 279
  @synchronized(OrgBouncycastleJceProviderBouncyCastleProvider_CONFIGURATION) {
    
#line 281
    [((OrgBouncycastleJceProviderBouncyCastleProviderConfiguration *) nil_chk(((OrgBouncycastleJceProviderBouncyCastleProviderConfiguration *) cast_chk(OrgBouncycastleJceProviderBouncyCastleProvider_CONFIGURATION, [OrgBouncycastleJceProviderBouncyCastleProviderConfiguration class])))) setParameterWithNSString:parameterName withId:parameter];
  }
}


#line 285
- (jboolean)hasAlgorithmWithNSString:(NSString *)type
                        withNSString:(NSString *)name {
  
#line 288
  return [self containsKeyWithId:JreStrcat("$C$", type, '.', name)] || [self containsKeyWithId:JreStrcat("$$C$", @"Alg.Alias.", type, '.', name)];
}


#line 291
- (void)addAlgorithmWithNSString:(NSString *)key
                    withNSString:(NSString *)value {
  
#line 294
  if ([self containsKeyWithId:key]) {
    
#line 296
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"duplicate provider key (", key, @") found"));
  }
  
#line 299
  (void) [self putWithId:key withId:value];
}


#line 302
- (void)addAlgorithmWithNSString:(NSString *)type
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                    withNSString:(NSString *)className_ {
  [self addAlgorithmWithNSString:JreStrcat("$C@", type, '.', oid) withNSString:className_];
  [self addAlgorithmWithNSString:JreStrcat("$$@", type, @".OID.", oid) withNSString:className_];
}

- (void)addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
       withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:(id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)keyInfoConverter {
  
#line 312
  @synchronized(OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters) {
    
#line 314
    (void) [((id<JavaUtilMap>) nil_chk(OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters)) putWithId:oid withId:keyInfoConverter];
  }
}


#line 318
- (id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)getKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 321
  return (id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>) cast_check([((id<JavaUtilMap>) nil_chk(OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters)) getWithId:oid], OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter_class_());
}

- (void)addAttributesWithNSString:(NSString *)key
                  withJavaUtilMap:(id<JavaUtilMap>)attributeMap {
  
#line 327
  for (id __strong element in nil_chk([((id<JavaUtilMap>) nil_chk(attributeMap)) keySet])) {
    NSString *attributeName = (NSString *) cast_chk(element, [NSString class]);
    NSString *attributeKey = JreStrcat("$C$", key, ' ', attributeName);
    if ([self containsKeyWithId:attributeKey]) {
      
#line 332
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"duplicate provider attribute key (", attributeKey, @") found"));
    }
    
#line 335
    (void) [self putWithId:attributeKey withId:[attributeMap getWithId:attributeName]];
  }
}


#line 339
+ (id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>)getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm {
  return OrgBouncycastleJceProviderBouncyCastleProvider_getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(algorithm);
}


#line 347
+ (id<JavaSecurityPublicKey>)getPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)publicKeyInfo {
  return OrgBouncycastleJceProviderBouncyCastleProvider_getPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(publicKeyInfo);
}


#line 360
+ (id<JavaSecurityPrivateKey>)getPrivateKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)privateKeyInfo {
  return OrgBouncycastleJceProviderBouncyCastleProvider_getPrivateKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(privateKeyInfo);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, 14, -1, -1 },
    { NULL, "LOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter;", 0xa, 15, 11, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityPublicKey;", 0x9, 16, 17, 18, -1, -1, -1 },
    { NULL, "LJavaSecurityPrivateKey;", 0x9, 19, 20, 18, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setup);
  methods[2].selector = @selector(loadAlgorithmsWithNSString:withNSStringArray:);
  methods[3].selector = @selector(loadPQCKeys);
  methods[4].selector = @selector(setParameterWithNSString:withId:);
  methods[5].selector = @selector(hasAlgorithmWithNSString:withNSString:);
  methods[6].selector = @selector(addAlgorithmWithNSString:withNSString:);
  methods[7].selector = @selector(addAlgorithmWithNSString:withOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[8].selector = @selector(addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:);
  methods[9].selector = @selector(getKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[10].selector = @selector(addAttributesWithNSString:withJavaUtilMap:);
  methods[11].selector = @selector(getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[12].selector = @selector(getPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[13].selector = @selector(getPrivateKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "info", "LNSString;", .constantValue.asLong = 0, 0xa, -1, 21, -1, -1 },
    { "PROVIDER_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 22, -1, -1 },
    { "CONFIGURATION", "LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", .constantValue.asLong = 0, 0x19, -1, 23, -1, -1 },
    { "keyInfoConverters", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 24, -1, -1 },
    { "revChkClass", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "SYMMETRIC_PACKAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "SYMMETRIC_GENERIC", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "SYMMETRIC_MACS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "SYMMETRIC_CIPHERS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "ASYMMETRIC_PACKAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "ASYMMETRIC_GENERIC", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "ASYMMETRIC_CIPHERS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "DIGEST_PACKAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 33, -1, -1 },
    { "DIGESTS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 34, -1, -1 },
    { "KEYSTORE_PACKAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 35, -1, -1 },
    { "KEYSTORES", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 36, -1, -1 },
    { "SECURE_RANDOM_PACKAGE", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 37, -1, -1 },
    { "SECURE_RANDOMS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 38, -1, -1 },
  };
  static const void *ptrTable[] = { "loadAlgorithms", "LNSString;[LNSString;", "setParameter", "LNSString;LNSObject;", "hasAlgorithm", "LNSString;LNSString;", "addAlgorithm", "LNSString;LOrgBouncycastleAsn1ASN1ObjectIdentifier;LNSString;", "addKeyInfoConverter", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter;", "getKeyInfoConverter", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "addAttributes", "LNSString;LJavaUtilMap;", "(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "getAsymmetricKeyInfoConverter", "getPublicKey", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "LJavaIoIOException;", "getPrivateKey", "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", &OrgBouncycastleJceProviderBouncyCastleProvider_info, &OrgBouncycastleJceProviderBouncyCastleProvider_PROVIDER_NAME, &OrgBouncycastleJceProviderBouncyCastleProvider_CONFIGURATION, &OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters, &OrgBouncycastleJceProviderBouncyCastleProvider_revChkClass, &OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_PACKAGE, &OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_GENERIC, &OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_MACS, &OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_CIPHERS, &OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_PACKAGE, &OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_GENERIC, &OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_CIPHERS, &OrgBouncycastleJceProviderBouncyCastleProvider_DIGEST_PACKAGE, &OrgBouncycastleJceProviderBouncyCastleProvider_DIGESTS, &OrgBouncycastleJceProviderBouncyCastleProvider_KEYSTORE_PACKAGE, &OrgBouncycastleJceProviderBouncyCastleProvider_KEYSTORES, &OrgBouncycastleJceProviderBouncyCastleProvider_SECURE_RANDOM_PACKAGE, &OrgBouncycastleJceProviderBouncyCastleProvider_SECURE_RANDOMS };
  static const J2ObjcClassInfo _OrgBouncycastleJceProviderBouncyCastleProvider = { "BouncyCastleProvider", "org.bouncycastle.jce.provider", ptrTable, methods, fields, 7, 0x11, 14, 18, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJceProviderBouncyCastleProvider;
}

+ (void)initialize {
  if (self == [OrgBouncycastleJceProviderBouncyCastleProvider class]) {
    OrgBouncycastleJceProviderBouncyCastleProvider_CONFIGURATION = new_OrgBouncycastleJceProviderBouncyCastleProviderConfiguration_initPackagePrivate();
    OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters = new_JavaUtilHashMap_init();
    OrgBouncycastleJceProviderBouncyCastleProvider_revChkClass = OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_loadClassWithIOSClass_withNSString_(
#line 69
    OrgBouncycastleJceProviderBouncyCastleProvider_class_(), @"java.security.cert.PKIXRevocationChecker");
    OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_GENERIC = [IOSObjectArray newArrayWithObjects:(id[]){
#line 78
      @"PBEPBKDF1", @"PBEPBKDF2", @"PBEPKCS12", @"TLSKDF", @"SCRYPT" } count:5 type:NSString_class_()];
      OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_MACS = [IOSObjectArray newArrayWithObjects:(id[]){
#line 83
        @"SipHash", @"SipHash128", @"Poly1305" } count:3 type:NSString_class_()];
        OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_CIPHERS = [IOSObjectArray newArrayWithObjects:(id[]){
#line 88
          @"AES", @"ARC4", @"ARIA", @"Blowfish", @"Camellia", @"CAST5", @"CAST6", @"ChaCha", @"DES", @"DESede",
#line 89
          @"GOST28147", @"Grainv1", @"Grain128", @"HC128", @"HC256", @"IDEA", @"Noekeon", @"RC2", @"RC5",
#line 90
          @"RC6", @"Rijndael", @"Salsa20", @"SEED", @"Serpent", @"Shacal2", @"Skipjack", @"SM4", @"TEA", @"Twofish", @"Threefish",
#line 91
          @"VMPC", @"VMPCKSA3", @"XTEA", @"XSalsa20", @"OpenSSLPBKDF", @"DSTU7624", @"GOST3412_2015", @"Zuc" } count:38 type:NSString_class_()];
          OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_GENERIC = [IOSObjectArray newArrayWithObjects:(id[]){
#line 103
            @"X509", @"IES", @"COMPOSITE", @"EXTERNAL" } count:4 type:NSString_class_()];
            OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_CIPHERS = [IOSObjectArray newArrayWithObjects:(id[]){
#line 108
              @"DSA", @"DH", @"EC", @"RSA", @"GOST", @"ECGOST", @"ElGamal", @"DSTU4145", @"GM", @"EdEC", @"LMS", @"SPHINCSPlus" } count:12 type:NSString_class_()];
              OrgBouncycastleJceProviderBouncyCastleProvider_DIGESTS = [IOSObjectArray newArrayWithObjects:(id[]){
#line 117
                @"GOST3411", @"Keccak", @"MD2", @"MD4", @"MD5", @"SHA1", @"RIPEMD128", @"RIPEMD160", @"RIPEMD256", @"RIPEMD320", @"SHA224",
#line 118
                @"SHA256", @"SHA384", @"SHA512", @"SHA3", @"Skein", @"SM3", @"Tiger", @"Whirlpool", @"Blake2b", @"Blake2s", @"DSTU7564",
#line 119
                @"Haraka", @"Blake3" } count:24 type:NSString_class_()];
                OrgBouncycastleJceProviderBouncyCastleProvider_KEYSTORES = [IOSObjectArray newArrayWithObjects:(id[]){
#line 128
                  @"BC", @"BCFKS", @"PKCS12" } count:3 type:NSString_class_()];
                  OrgBouncycastleJceProviderBouncyCastleProvider_SECURE_RANDOMS = [IOSObjectArray newArrayWithObjects:(id[]){
#line 137
                    @"DRBG" } count:1 type:NSString_class_()];
                    J2OBJC_SET_INITIALIZED(OrgBouncycastleJceProviderBouncyCastleProvider)
                  }
                }

@end


#line 145
void OrgBouncycastleJceProviderBouncyCastleProvider_init(OrgBouncycastleJceProviderBouncyCastleProvider *self) {
  JavaSecurityProvider_initWithNSString_withDouble_withNSString_(self, OrgBouncycastleJceProviderBouncyCastleProvider_PROVIDER_NAME,
#line 147
  1.71, OrgBouncycastleJceProviderBouncyCastleProvider_info);
  
#line 149
  (void) JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(self));
}


#line 145
OrgBouncycastleJceProviderBouncyCastleProvider *new_OrgBouncycastleJceProviderBouncyCastleProvider_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceProviderBouncyCastleProvider, init)
}


#line 145
OrgBouncycastleJceProviderBouncyCastleProvider *create_OrgBouncycastleJceProviderBouncyCastleProvider_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceProviderBouncyCastleProvider, init)
}


#line 160
void OrgBouncycastleJceProviderBouncyCastleProvider_setup(OrgBouncycastleJceProviderBouncyCastleProvider *self) {
  
#line 162
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_DIGEST_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_DIGESTS);
  
#line 164
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_GENERIC);
  
#line 166
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_MACS);
  
#line 168
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_SYMMETRIC_CIPHERS);
  
#line 170
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_GENERIC);
  
#line 172
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_ASYMMETRIC_CIPHERS);
  
#line 174
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_KEYSTORE_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_KEYSTORES);
  
#line 176
  OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(self, OrgBouncycastleJceProviderBouncyCastleProvider_SECURE_RANDOM_PACKAGE, OrgBouncycastleJceProviderBouncyCastleProvider_SECURE_RANDOMS);
  
#line 178
  OrgBouncycastleJceProviderBouncyCastleProvider_loadPQCKeys(self);
  
#line 183
  (void) [self putWithId:@"X509Store.CERTIFICATE/COLLECTION" withId:@"org.bouncycastle.jce.provider.X509StoreCertCollection"];
  (void) [self putWithId:@"X509Store.ATTRIBUTECERTIFICATE/COLLECTION" withId:@"org.bouncycastle.jce.provider.X509StoreAttrCertCollection"];
  (void) [self putWithId:@"X509Store.CRL/COLLECTION" withId:@"org.bouncycastle.jce.provider.X509StoreCRLCollection"];
  (void) [self putWithId:@"X509Store.CERTIFICATEPAIR/COLLECTION" withId:@"org.bouncycastle.jce.provider.X509StoreCertPairCollection"];
  
#line 188
  (void) [self putWithId:@"X509Store.CERTIFICATE/LDAP" withId:@"org.bouncycastle.jce.provider.X509StoreLDAPCerts"];
  (void) [self putWithId:@"X509Store.CRL/LDAP" withId:@"org.bouncycastle.jce.provider.X509StoreLDAPCRLs"];
  (void) [self putWithId:@"X509Store.ATTRIBUTECERTIFICATE/LDAP" withId:@"org.bouncycastle.jce.provider.X509StoreLDAPAttrCerts"];
  (void) [self putWithId:@"X509Store.CERTIFICATEPAIR/LDAP" withId:@"org.bouncycastle.jce.provider.X509StoreLDAPCertPairs"];
  
#line 196
  (void) [self putWithId:@"X509StreamParser.CERTIFICATE" withId:@"org.bouncycastle.jce.provider.X509CertParser"];
  (void) [self putWithId:@"X509StreamParser.ATTRIBUTECERTIFICATE" withId:@"org.bouncycastle.jce.provider.X509AttrCertParser"];
  (void) [self putWithId:@"X509StreamParser.CRL" withId:@"org.bouncycastle.jce.provider.X509CRLParser"];
  (void) [self putWithId:@"X509StreamParser.CERTIFICATEPAIR" withId:@"org.bouncycastle.jce.provider.X509CertPairParser"];
  
#line 204
  (void) [self putWithId:@"Cipher.BROKENPBEWITHMD5ANDDES" withId:@"org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithMD5AndDES"];
  
#line 206
  (void) [self putWithId:@"Cipher.BROKENPBEWITHSHA1ANDDES" withId:@"org.bouncycastle.jce.provider.BrokenJCEBlockCipher$BrokePBEWithSHA1AndDES"];
  
#line 209
  (void) [self putWithId:@"Cipher.OLDPBEWITHSHAANDTWOFISH-CBC" withId:@"org.bouncycastle.jce.provider.BrokenJCEBlockCipher$OldPBEWithSHAAndTwofish"];
  
#line 212
  if (OrgBouncycastleJceProviderBouncyCastleProvider_revChkClass != nil) {
    
#line 214
    (void) [self putWithId:@"CertPathValidator.RFC3281" withId:@"org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi"];
    (void) [self putWithId:@"CertPathBuilder.RFC3281" withId:@"org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi"];
    (void) [self putWithId:@"CertPathValidator.RFC3280" withId:@"org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi_8"];
    (void) [self putWithId:@"CertPathBuilder.RFC3280" withId:@"org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi_8"];
    (void) [self putWithId:@"CertPathValidator.PKIX" withId:@"org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi_8"];
    (void) [self putWithId:@"CertPathBuilder.PKIX" withId:@"org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi_8"];
  }
  else {
    
#line 223
    (void) [self putWithId:@"CertPathValidator.RFC3281" withId:@"org.bouncycastle.jce.provider.PKIXAttrCertPathValidatorSpi"];
    (void) [self putWithId:@"CertPathBuilder.RFC3281" withId:@"org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi"];
    (void) [self putWithId:@"CertPathValidator.RFC3280" withId:@"org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi"];
    (void) [self putWithId:@"CertPathBuilder.RFC3280" withId:@"org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi"];
    (void) [self putWithId:@"CertPathValidator.PKIX" withId:@"org.bouncycastle.jce.provider.PKIXCertPathValidatorSpi"];
    (void) [self putWithId:@"CertPathBuilder.PKIX" withId:@"org.bouncycastle.jce.provider.PKIXCertPathBuilderSpi"];
  }
  (void) [self putWithId:@"CertStore.Collection" withId:@"org.bouncycastle.jce.provider.CertStoreCollectionSpi"];
  (void) [self putWithId:@"CertStore.LDAP" withId:@"org.bouncycastle.jce.provider.X509LDAPCertStoreSpi"];
  (void) [self putWithId:@"CertStore.Multi" withId:@"org.bouncycastle.jce.provider.MultiCertStoreSpi"];
  (void) [self putWithId:@"Alg.Alias.CertStore.X509LDAP" withId:@"LDAP"];
}


#line 236
void OrgBouncycastleJceProviderBouncyCastleProvider_loadAlgorithmsWithNSString_withNSStringArray_(OrgBouncycastleJceProviderBouncyCastleProvider *self, NSString *packageName, IOSObjectArray *names) {
  {
    IOSObjectArray *a__ = names;
    NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    NSString * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      NSString *name = *b__++;
      
#line 239
      IOSClass *clazz = OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_loadClassWithIOSClass_withNSString_(OrgBouncycastleJceProviderBouncyCastleProvider_class_(), JreStrcat("$$$", packageName, name, @"$Mappings"));
      
#line 241
      if (clazz != nil) {
        
#line 243
        @try {
          
#line 245
          [((OrgBouncycastleJcajceProviderUtilAlgorithmProvider *) nil_chk(((OrgBouncycastleJcajceProviderUtilAlgorithmProvider *) cast_chk([clazz newInstance], [OrgBouncycastleJcajceProviderUtilAlgorithmProvider class])))) configureWithOrgBouncycastleJcajceProviderConfigConfigurableProvider:self];
        }
        @catch (JavaLangException *e) {
          
#line 249
          @throw new_JavaLangInternalError_initWithNSString_(JreStrcat("$$$$@", @"cannot create instance of ",
#line 250
          packageName, name, @"$Mappings : ", e));
        }
      }
    }
  }
}


#line 256
void OrgBouncycastleJceProviderBouncyCastleProvider_loadPQCKeys(OrgBouncycastleJceProviderBouncyCastleProvider *self) {
  
#line 258
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus_shake_256) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus_sha_256) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1BcBCObjectIdentifiers, sphincsPlus_sha_512) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderSphincsplusSPHINCSPlusKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, sphincs256) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderSphincsSphincs256KeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, newHope) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderNewhopeNHKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderXmssXMSSKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1IsaraIsaraObjectIdentifiers, id_alg_xmss) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderXmssXMSSKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, xmss_mt) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1IsaraIsaraObjectIdentifiers, id_alg_xmssmt) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderXmssXMSSMTKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcEliece) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, mcElieceCca2) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderMcelieceMcElieceCCA2KeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, rainbow) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderRainbowRainbowKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_p_I) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderQteslaQTESLAKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastlePqcAsn1PQCObjectIdentifiers, qTESLA_p_III) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderQteslaQTESLAKeyFactorySpi_init()];
  [self addKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_hss_lms_hashsig) withOrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter:new_OrgBouncycastlePqcJcajceProviderLmsLMSKeyFactorySpi_init()];
}


#line 339
id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> OrgBouncycastleJceProviderBouncyCastleProvider_getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *algorithm) {
  OrgBouncycastleJceProviderBouncyCastleProvider_initialize();
  @synchronized(OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters) {
    
#line 343
    return JreRetainedLocalValue((id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter>) cast_check([((id<JavaUtilMap>) nil_chk(OrgBouncycastleJceProviderBouncyCastleProvider_keyInfoConverters)) getWithId:algorithm], OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter_class_()));
  }
}


#line 347
id<JavaSecurityPublicKey> OrgBouncycastleJceProviderBouncyCastleProvider_getPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *publicKeyInfo) {
  OrgBouncycastleJceProviderBouncyCastleProvider_initialize();
  
#line 350
  id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> converter = OrgBouncycastleJceProviderBouncyCastleProvider_getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(publicKeyInfo)) getAlgorithm])) getAlgorithm]);
  
#line 352
  if (converter == nil) {
    
#line 354
    return nil;
  }
  
#line 357
  return [converter generatePublicWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:publicKeyInfo];
}


#line 360
id<JavaSecurityPrivateKey> OrgBouncycastleJceProviderBouncyCastleProvider_getPrivateKeyWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *privateKeyInfo) {
  OrgBouncycastleJceProviderBouncyCastleProvider_initialize();
  
#line 363
  id<OrgBouncycastleJcajceProviderUtilAsymmetricKeyInfoConverter> converter = OrgBouncycastleJceProviderBouncyCastleProvider_getAsymmetricKeyInfoConverterWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(privateKeyInfo)) getPrivateKeyAlgorithm])) getAlgorithm]);
  
#line 365
  if (converter == nil) {
    
#line 367
    return nil;
  }
  
#line 370
  return [converter generatePrivateWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:privateKeyInfo];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJceProviderBouncyCastleProvider)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/provider/BouncyCastleProvider.java"


#line 150
@implementation OrgBouncycastleJceProviderBouncyCastleProvider_1


#line 150
- (instancetype)initWithOrgBouncycastleJceProviderBouncyCastleProvider:(OrgBouncycastleJceProviderBouncyCastleProvider *)outer$ {
  OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(self, outer$);
  return self;
}


#line 151
- (id)run {
  
#line 154
  OrgBouncycastleJceProviderBouncyCastleProvider_setup(this$0_);
  return JreRetainedLocalValue(nil);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleJceProviderBouncyCastleProvider:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgBouncycastleJceProviderBouncyCastleProvider;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleJceProviderBouncyCastleProvider;", "init" };
  static const J2ObjcClassInfo _OrgBouncycastleJceProviderBouncyCastleProvider_1 = { "", "org.bouncycastle.jce.provider", ptrTable, methods, fields, 7, 0x8000, 2, 1, 0, -1, 1, -1, -1 };
  return &_OrgBouncycastleJceProviderBouncyCastleProvider_1;
}

@end


#line 150
void OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(OrgBouncycastleJceProviderBouncyCastleProvider_1 *self, OrgBouncycastleJceProviderBouncyCastleProvider *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}


#line 150
OrgBouncycastleJceProviderBouncyCastleProvider_1 *new_OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(OrgBouncycastleJceProviderBouncyCastleProvider *outer$) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceProviderBouncyCastleProvider_1, initWithOrgBouncycastleJceProviderBouncyCastleProvider_, outer$)
}


#line 150
OrgBouncycastleJceProviderBouncyCastleProvider_1 *create_OrgBouncycastleJceProviderBouncyCastleProvider_1_initWithOrgBouncycastleJceProviderBouncyCastleProvider_(OrgBouncycastleJceProviderBouncyCastleProvider *outer$) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceProviderBouncyCastleProvider_1, initWithOrgBouncycastleJceProviderBouncyCastleProvider_, outer$)
}

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/spec/ECNamedCurveParameterSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJceSpecECNamedCurveParameterSpec")
#ifdef RESTRICT_OrgBouncycastleJceSpecECNamedCurveParameterSpec
#define INCLUDE_ALL_OrgBouncycastleJceSpecECNamedCurveParameterSpec 0
#else
#define INCLUDE_ALL_OrgBouncycastleJceSpecECNamedCurveParameterSpec 1
#endif
#undef RESTRICT_OrgBouncycastleJceSpecECNamedCurveParameterSpec

#if !defined (OrgBouncycastleJceSpecECNamedCurveParameterSpec_) && (INCLUDE_ALL_OrgBouncycastleJceSpecECNamedCurveParameterSpec || defined(INCLUDE_OrgBouncycastleJceSpecECNamedCurveParameterSpec))
#define OrgBouncycastleJceSpecECNamedCurveParameterSpec_

#define RESTRICT_OrgBouncycastleJceSpecECParameterSpec 1
#define INCLUDE_OrgBouncycastleJceSpecECParameterSpec 1
#include "org/bouncycastle/jce/spec/ECParameterSpec.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECPoint;

/*!
 @brief specification signifying that the curve parameters can also be
  referred to by name.
 <p>
  If you are using JDK 1.5 you should be looking at <code>ECNamedCurveSpec</code>.
 */
@interface OrgBouncycastleJceSpecECNamedCurveParameterSpec : OrgBouncycastleJceSpecECParameterSpec

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
          withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype)initWithNSString:(NSString *)name
withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (instancetype)initWithNSString:(NSString *)name
withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)G
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h
                   withByteArray:(IOSByteArray *)seed;

/*!
 @brief return the name of the curve the EC domain parameters belong to.
 */
- (NSString *)getName;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)arg0
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)arg1
                              withJavaMathBigInteger:(JavaMathBigInteger *)arg2 NS_UNAVAILABLE;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)arg0
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)arg1
                              withJavaMathBigInteger:(JavaMathBigInteger *)arg2
                              withJavaMathBigInteger:(JavaMathBigInteger *)arg3 NS_UNAVAILABLE;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)arg0
                    withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)arg1
                              withJavaMathBigInteger:(JavaMathBigInteger *)arg2
                              withJavaMathBigInteger:(JavaMathBigInteger *)arg3
                                       withByteArray:(IOSByteArray *)arg4 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJceSpecECNamedCurveParameterSpec)

FOUNDATION_EXPORT void OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(OrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT OrgBouncycastleJceSpecECNamedCurveParameterSpec *new_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceSpecECNamedCurveParameterSpec *create_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n);

FOUNDATION_EXPORT void OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT OrgBouncycastleJceSpecECNamedCurveParameterSpec *new_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceSpecECNamedCurveParameterSpec *create_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleJceSpecECNamedCurveParameterSpec *self, NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT OrgBouncycastleJceSpecECNamedCurveParameterSpec *new_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceSpecECNamedCurveParameterSpec *create_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *G, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJceSpecECNamedCurveParameterSpec)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJceSpecECNamedCurveParameterSpec")

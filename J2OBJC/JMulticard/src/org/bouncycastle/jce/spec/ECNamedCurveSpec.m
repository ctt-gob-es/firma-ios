//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/spec/ECNamedCurveSpec.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/ECField.h"
#include "java/security/spec/ECFieldF2m.h"
#include "java/security/spec/ECFieldFp.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/EllipticCurve.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.h"
#include "org/bouncycastle/jce/spec/ECNamedCurveSpec.h"
#include "org/bouncycastle/math/ec/ECAlgorithms.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECFieldElement.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/field/FiniteField.h"
#include "org/bouncycastle/math/field/Polynomial.h"
#include "org/bouncycastle/math/field/PolynomialExtensionField.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jce/spec/ECNamedCurveSpec must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJceSpecECNamedCurveSpec () {
 @public
  NSString *name_;
}

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed;

+ (id<JavaSecuritySpecECField>)convertFieldWithOrgBouncycastleMathFieldFiniteField:(id<OrgBouncycastleMathFieldFiniteField>)field;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleJceSpecECNamedCurveSpec, name_, NSString *)

__attribute__((unused)) static JavaSecuritySpecEllipticCurve *OrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed);

__attribute__((unused)) static id<JavaSecuritySpecECField> OrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithOrgBouncycastleMathFieldFiniteField_(id<OrgBouncycastleMathFieldFiniteField> field);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/spec/ECNamedCurveSpec.java"


#line 22
@implementation OrgBouncycastleJceSpecECNamedCurveSpec


#line 27
+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed {
  return OrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(curve, seed);
}


#line 36
+ (id<JavaSecuritySpecECField>)convertFieldWithOrgBouncycastleMathFieldFiniteField:(id<OrgBouncycastleMathFieldFiniteField>)field {
  return OrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithOrgBouncycastleMathFieldFiniteField_(field);
}


#line 51
- (instancetype)initWithNSString:(NSString *)name
withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n {
  OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(self, name, curve, g, n);
  return self;
}


#line 62
- (instancetype)initWithNSString:(NSString *)name
withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
     withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n {
  OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(self, name, curve, g, n);
  return self;
}


#line 73
- (instancetype)initWithNSString:(NSString *)name
withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h {
  OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, name, curve, g, n, h);
  return self;
}


#line 85
- (instancetype)initWithNSString:(NSString *)name
withJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)curve
     withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h {
  OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, name, curve, g, n, h);
  return self;
}


#line 97
- (instancetype)initWithNSString:(NSString *)name
withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
withOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)g
          withJavaMathBigInteger:(JavaMathBigInteger *)n
          withJavaMathBigInteger:(JavaMathBigInteger *)h
                   withByteArray:(IOSByteArray *)seed {
  OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, name, curve, g, n, h, seed);
  return self;
}


#line 113
- (NSString *)getName {
  
#line 115
  return name_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaSecuritySpecEllipticCurve;", 0xa, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECField;", 0xa, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(convertCurveWithOrgBouncycastleMathEcECCurve:withByteArray:);
  methods[1].selector = @selector(convertFieldWithOrgBouncycastleMathFieldFiniteField:);
  methods[2].selector = @selector(initWithNSString:withOrgBouncycastleMathEcECCurve:withOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithNSString:withJavaSecuritySpecEllipticCurve:withJavaSecuritySpecECPoint:withJavaMathBigInteger:);
  methods[4].selector = @selector(initWithNSString:withOrgBouncycastleMathEcECCurve:withOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[5].selector = @selector(initWithNSString:withJavaSecuritySpecEllipticCurve:withJavaSecuritySpecECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[6].selector = @selector(initWithNSString:withOrgBouncycastleMathEcECCurve:withOrgBouncycastleMathEcECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[7].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "convertCurve", "LOrgBouncycastleMathEcECCurve;[B", "convertField", "LOrgBouncycastleMathFieldFiniteField;", "LNSString;LOrgBouncycastleMathEcECCurve;LOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;", "LNSString;LJavaSecuritySpecEllipticCurve;LJavaSecuritySpecECPoint;LJavaMathBigInteger;", "LNSString;LOrgBouncycastleMathEcECCurve;LOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LNSString;LJavaSecuritySpecEllipticCurve;LJavaSecuritySpecECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LNSString;LOrgBouncycastleMathEcECCurve;LOrgBouncycastleMathEcECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B" };
  static const J2ObjcClassInfo _OrgBouncycastleJceSpecECNamedCurveSpec = { "ECNamedCurveSpec", "org.bouncycastle.jce.spec", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJceSpecECNamedCurveSpec;
}

@end


#line 27
JavaSecuritySpecEllipticCurve *OrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed) {
  OrgBouncycastleJceSpecECNamedCurveSpec_initialize();
  
#line 31
  id<JavaSecuritySpecECField> field = OrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithOrgBouncycastleMathFieldFiniteField_([((OrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField]);
  JavaMathBigInteger *a = [((OrgBouncycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger];
  
#line 32
  JavaMathBigInteger *b = [((OrgBouncycastleMathEcECFieldElement *) nil_chk([curve getB])) toBigInteger];
  return new_JavaSecuritySpecEllipticCurve_initWithJavaSecuritySpecECField_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(field, a, b, seed);
}


#line 36
id<JavaSecuritySpecECField> OrgBouncycastleJceSpecECNamedCurveSpec_convertFieldWithOrgBouncycastleMathFieldFiniteField_(id<OrgBouncycastleMathFieldFiniteField> field) {
  OrgBouncycastleJceSpecECNamedCurveSpec_initialize();
  if (OrgBouncycastleMathEcECAlgorithms_isFpFieldWithOrgBouncycastleMathFieldFiniteField_(field)) {
    
#line 40
    return new_JavaSecuritySpecECFieldFp_initWithJavaMathBigInteger_([((id<OrgBouncycastleMathFieldFiniteField>) nil_chk(field)) getCharacteristic]);
  }
  else {
    
#line 44
    id<OrgBouncycastleMathFieldPolynomial> poly = [((id<OrgBouncycastleMathFieldPolynomialExtensionField>) nil_chk(((id<OrgBouncycastleMathFieldPolynomialExtensionField>) cast_check(field, OrgBouncycastleMathFieldPolynomialExtensionField_class_())))) getMinimalPolynomial];
    IOSIntArray *exponents = [((id<OrgBouncycastleMathFieldPolynomial>) nil_chk(poly)) getExponentsPresent];
    IOSIntArray *ks = OrgBouncycastleUtilArrays_reverseInPlaceWithIntArray_(OrgBouncycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(exponents, 1, ((IOSIntArray *) nil_chk(exponents))->size_ - 1));
    return new_JavaSecuritySpecECFieldF2m_initWithInt_withIntArray_([poly getDegree], ks);
  }
}


#line 51
void OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(OrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, OrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(
#line 57
  curve, nil), OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(g), n, 1);
  
#line 59
  self->name_ = name;
}


#line 51
OrgBouncycastleJceSpecECNamedCurveSpec *new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, g, n)
}


#line 51
OrgBouncycastleJceSpecECNamedCurveSpec *create_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_, name, curve, g, n)
}


#line 62
void OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(OrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self,
#line 68
  curve, g, n, 1);
  
#line 70
  self->name_ = name;
}


#line 62
OrgBouncycastleJceSpecECNamedCurveSpec *new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_, name, curve, g, n)
}


#line 62
OrgBouncycastleJceSpecECNamedCurveSpec *create_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_, name, curve, g, n)
}


#line 73
void OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, OrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(
#line 80
  curve, nil), OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(g), n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  
#line 82
  self->name_ = name;
}


#line 73
OrgBouncycastleJceSpecECNamedCurveSpec *new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}


#line 73
OrgBouncycastleJceSpecECNamedCurveSpec *create_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}


#line 85
void OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self,
#line 92
  curve, g, n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  
#line 94
  self->name_ = name;
}


#line 85
OrgBouncycastleJceSpecECNamedCurveSpec *new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}


#line 85
OrgBouncycastleJceSpecECNamedCurveSpec *create_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(NSString *name, JavaSecuritySpecEllipticCurve *curve, JavaSecuritySpecECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, name, curve, g, n, h)
}


#line 97
void OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleJceSpecECNamedCurveSpec *self, NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(self, OrgBouncycastleJceSpecECNamedCurveSpec_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(
#line 105
  curve, seed), OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(g), n, [((JavaMathBigInteger *) nil_chk(h)) intValue]);
  
#line 107
  self->name_ = name;
}


#line 97
OrgBouncycastleJceSpecECNamedCurveSpec *new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, g, n, h, seed)
}


#line 97
OrgBouncycastleJceSpecECNamedCurveSpec *create_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(NSString *name, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleMathEcECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJceSpecECNamedCurveSpec, initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, name, curve, g, n, h, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJceSpecECNamedCurveSpec)

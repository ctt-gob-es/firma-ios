//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jce/X509Principal.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJceX509Principal")
#ifdef RESTRICT_OrgBouncycastleJceX509Principal
#define INCLUDE_ALL_OrgBouncycastleJceX509Principal 0
#else
#define INCLUDE_ALL_OrgBouncycastleJceX509Principal 1
#endif
#undef RESTRICT_OrgBouncycastleJceX509Principal

#if !defined (OrgBouncycastleJceX509Principal_) && (INCLUDE_ALL_OrgBouncycastleJceX509Principal || defined(INCLUDE_OrgBouncycastleJceX509Principal))
#define OrgBouncycastleJceX509Principal_

#define RESTRICT_OrgBouncycastleAsn1X509X509Name 1
#define INCLUDE_OrgBouncycastleAsn1X509X509Name 1
#include "org/bouncycastle/asn1/x509/X509Name.h"

#define RESTRICT_JavaSecurityPrincipal 1
#define INCLUDE_JavaSecurityPrincipal 1
#include "java/security/Principal.h"

@class IOSByteArray;
@class JavaUtilHashtable;
@class JavaUtilVector;
@class JavaxSecurityAuthSubject;
@class OrgBouncycastleAsn1ASN1Sequence;
@class OrgBouncycastleAsn1X500X500Name;
@class OrgBouncycastleAsn1X509X509NameEntryConverter;

/*!
 @brief a general extension of X509Name with a couple of extra methods and
  constructors.
 <p>
  Objects of this type can be created from certificates and CRLs using the
  PrincipalUtil class. 
 </p>
 - seealso: org.bouncycastle.jce.PrincipalUtil
 */
@interface OrgBouncycastleJceX509Principal : OrgBouncycastleAsn1X509X509Name < JavaSecurityPrincipal >

#pragma mark Public

/*!
 @brief Takes an X509 dir name as a string of the format "C=AU, ST=Victoria", or
  some such, converting it into an ordered set of name attributes.lookUp 
  should provide a table of lookups, indexed by lowercase only strings and
  yielding a ASN1ObjectIdentifier, other than that OID. and numeric oids
  will be processed automatically.
 <p>
  If reverse is true, create the encoded version of the sequence starting
  from the last element in the string.
 */
- (instancetype)initWithBoolean:(jboolean)reverse
          withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                   withNSString:(NSString *)dirName;

/*!
 @brief Takes an X509 dir name as a string of the format "C=AU,ST=Victoria", or
  some such, converting it into an ordered set of name attributes.If reverse
  is false the dir name will be encoded in the order of the (name, value) pairs 
  presented, otherwise the encoding will start with the last (name, value) pair
  and work back.
 */
- (instancetype)initWithBoolean:(jboolean)reverse
                   withNSString:(NSString *)dirName;

/*!
 @brief Constructor from an encoded byte array.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)bytes;

/*!
 @brief constructor from a table of attributes.
 <p>
  it's is assumed the table contains OID/String pairs.
 */
- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)attributes;

/*!
 @brief takes an X509 dir name as a string of the format "C=AU,ST=Victoria", or
  some such, converting it into an ordered set of name attributes.
 */
- (instancetype)initWithNSString:(NSString *)dirName;

/*!
 @brief constructor from a table of attributes and a vector giving the
  specific ordering required for encoding or conversion to a string.
 <p>
  it's is assumed the table contains OID/String pairs.
 */
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)attributes;

/*!
 @brief constructor from a vector of attribute values and a vector of OIDs.
 */
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)oids
                    withJavaUtilVector:(JavaUtilVector *)values;

/*!
 @brief Constructor from an X509Name object.
 */
- (instancetype)initWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name;

/*!
 @brief Constructor from an X509Name object.
 */
- (instancetype)initWithOrgBouncycastleAsn1X509X509Name:(OrgBouncycastleAsn1X509X509Name *)name;

/*!
 @brief return a DER encoded byte array representing this object
 */
- (IOSByteArray *)getEncoded;

- (NSString *)getName;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithBoolean:(jboolean)arg0
          withJavaUtilHashtable:(JavaUtilHashtable *)arg1
                   withNSString:(NSString *)arg2
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)arg3 NS_UNAVAILABLE;

- (instancetype)initWithBoolean:(jboolean)arg0
                   withNSString:(NSString *)arg1
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)arg2 NS_UNAVAILABLE;

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)arg0
                 withJavaUtilHashtable:(JavaUtilHashtable *)arg1
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)arg2 NS_UNAVAILABLE;

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)arg0
                    withJavaUtilVector:(JavaUtilVector *)arg1
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)arg2 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJceX509Principal)

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithByteArray_(OrgBouncycastleJceX509Principal *self, IOSByteArray *bytes);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithByteArray_(IOSByteArray *bytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithOrgBouncycastleAsn1X509X509Name_(OrgBouncycastleJceX509Principal *self, OrgBouncycastleAsn1X509X509Name *name);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithOrgBouncycastleAsn1X509X509Name_(OrgBouncycastleAsn1X509X509Name *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithOrgBouncycastleAsn1X509X509Name_(OrgBouncycastleAsn1X509X509Name *name);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleJceX509Principal *self, OrgBouncycastleAsn1X500X500Name *name);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X500X500Name *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X500X500Name *name);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithJavaUtilHashtable_(OrgBouncycastleJceX509Principal *self, JavaUtilHashtable *attributes);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithJavaUtilHashtable_(JavaUtilHashtable *attributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithJavaUtilHashtable_(JavaUtilHashtable *attributes);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithJavaUtilVector_withJavaUtilHashtable_(OrgBouncycastleJceX509Principal *self, JavaUtilVector *ordering, JavaUtilHashtable *attributes);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *attributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *attributes);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithJavaUtilVector_withJavaUtilVector_(OrgBouncycastleJceX509Principal *self, JavaUtilVector *oids, JavaUtilVector *values);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *oids, JavaUtilVector *values) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *oids, JavaUtilVector *values);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithNSString_(OrgBouncycastleJceX509Principal *self, NSString *dirName);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithNSString_(NSString *dirName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithNSString_(NSString *dirName);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithBoolean_withNSString_(OrgBouncycastleJceX509Principal *self, jboolean reverse, NSString *dirName);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithBoolean_withNSString_(jboolean reverse, NSString *dirName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithBoolean_withNSString_(jboolean reverse, NSString *dirName);

FOUNDATION_EXPORT void OrgBouncycastleJceX509Principal_initWithBoolean_withJavaUtilHashtable_withNSString_(OrgBouncycastleJceX509Principal *self, jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName);

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *new_OrgBouncycastleJceX509Principal_initWithBoolean_withJavaUtilHashtable_withNSString_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJceX509Principal *create_OrgBouncycastleJceX509Principal_initWithBoolean_withJavaUtilHashtable_withNSString_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJceX509Principal)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJceX509Principal")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigInteger.h"
#include "java/security/spec/ECField.h"
#include "java/security/spec/ECFieldF2m.h"
#include "java/security/spec/ECFieldFp.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/EllipticCurve.h"
#include "java/util/Enumeration.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/cryptopro/ECGOST3410NamedCurves.h"
#include "org/bouncycastle/asn1/cryptopro/GOST3410PublicKeyAlgParameters.h"
#include "org/bouncycastle/asn1/x9/ECNamedCurveTable.h"
#include "org/bouncycastle/asn1/x9/X962Parameters.h"
#include "org/bouncycastle/asn1/x9/X9ECParameters.h"
#include "org/bouncycastle/asn1/x9/X9ECParametersHolder.h"
#include "org/bouncycastle/crypto/ec/CustomNamedCurves.h"
#include "org/bouncycastle/crypto/params/ECDomainParameters.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/ECUtil.h"
#include "org/bouncycastle/jcajce/provider/config/ProviderConfiguration.h"
#include "org/bouncycastle/jce/ECGOST3410NamedCurveTable.h"
#include "org/bouncycastle/jce/provider/BouncyCastleProvider.h"
#include "org/bouncycastle/jce/spec/ECNamedCurveParameterSpec.h"
#include "org/bouncycastle/jce/spec/ECNamedCurveSpec.h"
#include "org/bouncycastle/jce/spec/ECParameterSpec.h"
#include "org/bouncycastle/math/ec/ECAlgorithms.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECFieldElement.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/field/FiniteField.h"
#include "org/bouncycastle/math/field/Polynomial.h"
#include "org/bouncycastle/math/field/PolynomialExtensionField.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves : NSObject

- (instancetype)init;

+ (id<JavaUtilMap>)createCurveMap;

+ (OrgBouncycastleMathEcECCurve *)substituteWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)c;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves)

inline id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_get_CURVE_MAP(void);
inline id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_set_CURVE_MAP(id<JavaUtilMap> value);
static id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_CURVE_MAP;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves, CURVE_MAP, id<JavaUtilMap>)

__attribute__((unused)) static void OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_init(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves *self);

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves *new_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves *create_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_init(void);

__attribute__((unused)) static id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_createCurveMap(void);

__attribute__((unused)) static OrgBouncycastleMathEcECCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_substituteWithOrgBouncycastleMathEcECCurve_(OrgBouncycastleMathEcECCurve *c);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.java"


#line 37
@implementation OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 37
- (instancetype)init {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 83
+ (OrgBouncycastleMathEcECCurve *)getCurveWithOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                               withOrgBouncycastleAsn1X9X962Parameters:(OrgBouncycastleAsn1X9X962Parameters *)params {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withOrgBouncycastleAsn1X9X962Parameters_(configuration, params);
}


#line 141
+ (OrgBouncycastleCryptoParamsECDomainParameters *)getDomainParametersWithOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                               withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)params {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(configuration, params);
}


#line 161
+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgBouncycastleAsn1X9X962Parameters:(OrgBouncycastleAsn1X9X962Parameters *)params
                                                         withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleAsn1X9X962Parameters_withOrgBouncycastleMathEcECCurve_(params, curve);
}


#line 240
+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgBouncycastleAsn1X9X9ECParameters:(OrgBouncycastleAsn1X9X9ECParameters *)domainParameters {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleAsn1X9X9ECParameters_(domainParameters);
}


#line 250
+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgBouncycastleCryptoParamsECDomainParameters:(OrgBouncycastleCryptoParamsECDomainParameters *)domainParameters {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleCryptoParamsECDomainParameters_(domainParameters);
}


#line 260
+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(curve, seed);
}


#line 272
+ (OrgBouncycastleMathEcECCurve *)convertCurveWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ec {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(ec);
}


#line 292
+ (id<JavaSecuritySpecECField>)convertFieldWithOrgBouncycastleMathFieldFiniteField:(id<OrgBouncycastleMathFieldFiniteField>)field {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithOrgBouncycastleMathFieldFiniteField_(field);
}


#line 307
+ (JavaSecuritySpecECParameterSpec *)convertSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                                        withOrgBouncycastleJceSpecECParameterSpec:(OrgBouncycastleJceSpecECParameterSpec *)spec {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, spec);
}


#line 325
+ (OrgBouncycastleJceSpecECParameterSpec *)convertSpecWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_(ecSpec);
}


#line 345
+ (OrgBouncycastleMathEcECPoint *)convertPointWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                      withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_(ecSpec, point);
}

+ (OrgBouncycastleMathEcECPoint *)convertPointWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                   withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_(curve, point);
}

+ (JavaSecuritySpecECPoint *)convertPointWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)point {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(point);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECCurve;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCryptoParamsECDomainParameters;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 6, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 4, 7, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecEllipticCurve;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECCurve;", 0x9, 8, 10, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECField;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleJceSpecECParameterSpec;", 0x9, 13, 15, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x9, 16, 18, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECPoint;", 0x9, 16, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCurveWithOrgBouncycastleJcajceProviderConfigProviderConfiguration:withOrgBouncycastleAsn1X9X962Parameters:);
  methods[2].selector = @selector(getDomainParametersWithOrgBouncycastleJcajceProviderConfigProviderConfiguration:withJavaSecuritySpecECParameterSpec:);
  methods[3].selector = @selector(convertToSpecWithOrgBouncycastleAsn1X9X962Parameters:withOrgBouncycastleMathEcECCurve:);
  methods[4].selector = @selector(convertToSpecWithOrgBouncycastleAsn1X9X9ECParameters:);
  methods[5].selector = @selector(convertToSpecWithOrgBouncycastleCryptoParamsECDomainParameters:);
  methods[6].selector = @selector(convertCurveWithOrgBouncycastleMathEcECCurve:withByteArray:);
  methods[7].selector = @selector(convertCurveWithJavaSecuritySpecEllipticCurve:);
  methods[8].selector = @selector(convertFieldWithOrgBouncycastleMathFieldFiniteField:);
  methods[9].selector = @selector(convertSpecWithJavaSecuritySpecEllipticCurve:withOrgBouncycastleJceSpecECParameterSpec:);
  methods[10].selector = @selector(convertSpecWithJavaSecuritySpecECParameterSpec:);
  methods[11].selector = @selector(convertPointWithJavaSecuritySpecECParameterSpec:withJavaSecuritySpecECPoint:);
  methods[12].selector = @selector(convertPointWithOrgBouncycastleMathEcECCurve:withJavaSecuritySpecECPoint:);
  methods[13].selector = @selector(convertPointWithOrgBouncycastleMathEcECPoint:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getCurve", "LOrgBouncycastleJcajceProviderConfigProviderConfiguration;LOrgBouncycastleAsn1X9X962Parameters;", "getDomainParameters", "LOrgBouncycastleJcajceProviderConfigProviderConfiguration;LJavaSecuritySpecECParameterSpec;", "convertToSpec", "LOrgBouncycastleAsn1X9X962Parameters;LOrgBouncycastleMathEcECCurve;", "LOrgBouncycastleAsn1X9X9ECParameters;", "LOrgBouncycastleCryptoParamsECDomainParameters;", "convertCurve", "LOrgBouncycastleMathEcECCurve;[B", "LJavaSecuritySpecEllipticCurve;", "convertField", "LOrgBouncycastleMathFieldFiniteField;", "convertSpec", "LJavaSecuritySpecEllipticCurve;LOrgBouncycastleJceSpecECParameterSpec;", "LJavaSecuritySpecECParameterSpec;", "convertPoint", "LJavaSecuritySpecECParameterSpec;LJavaSecuritySpecECPoint;", "LOrgBouncycastleMathEcECCurve;LJavaSecuritySpecECPoint;", "LOrgBouncycastleMathEcECPoint;", "LOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util = { "EC5Util", "org.bouncycastle.jcajce.provider.asymmetric.util", ptrTable, methods, NULL, 7, 0x1, 14, 0, -1, 20, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util;
}

@end


#line 37
void OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *self) {
  NSObject_init(self);
}


#line 37
OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *new_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util, init)
}


#line 37
OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *create_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util, init)
}


#line 83
OrgBouncycastleMathEcECCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withOrgBouncycastleAsn1X9X962Parameters_(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration, OrgBouncycastleAsn1X9X962Parameters *params) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 87
  OrgBouncycastleMathEcECCurve *curve;
  id<JavaUtilSet> acceptableCurves = [((id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getAcceptableNamedCurves];
  
#line 90
  if ([((OrgBouncycastleAsn1X9X962Parameters *) nil_chk(params)) isNamedCurve]) {
    
#line 92
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([params getParameters]);
    
#line 94
    if ([((id<JavaUtilSet>) nil_chk(acceptableCurves)) isEmpty] || [acceptableCurves containsWithId:oid]) {
      
#line 96
      OrgBouncycastleAsn1X9X9ECParameters *ecP = OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
      
#line 98
      if (ecP == nil) {
        
#line 100
        ecP = (OrgBouncycastleAsn1X9X9ECParameters *) cast_chk([((id<JavaUtilMap>) nil_chk([configuration getAdditionalECParameters])) getWithId:oid], [OrgBouncycastleAsn1X9X9ECParameters class]);
      }
      
#line 103
      curve = [((OrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve];
    }
    else {
      
#line 107
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"named curve not acceptable");
    }
  }
  else if ([params isImplicitlyCA]) {
    
#line 112
    curve = [((OrgBouncycastleJceSpecECParameterSpec *) nil_chk([configuration getEcImplicitlyCa])) getCurve];
  }
  else {
    
#line 116
    OrgBouncycastleAsn1ASN1Sequence *pSeq = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([params getParameters]);
    if ([((id<JavaUtilSet>) nil_chk(acceptableCurves)) isEmpty]) {
      
#line 119
      if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(pSeq)) size] > 3) {
        
#line 121
        OrgBouncycastleAsn1X9X9ECParameters *ecP = OrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(pSeq);
        
#line 123
        curve = [((OrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getCurve];
      }
      else {
        
#line 127
        OrgBouncycastleAsn1ASN1ObjectIdentifier *gostCurve = OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([pSeq getObjectAtWithInt:0]);
        
#line 129
        curve = [((OrgBouncycastleAsn1X9X9ECParameters *) nil_chk(OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByOIDX9WithOrgBouncycastleAsn1ASN1ObjectIdentifier_(gostCurve))) getCurve];
      }
    }
    else {
      
#line 134
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"encoded parameters not acceptable");
    }
  }
  
#line 138
  return curve;
}


#line 141
OrgBouncycastleCryptoParamsECDomainParameters *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration, JavaSecuritySpecECParameterSpec *params) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 145
  OrgBouncycastleCryptoParamsECDomainParameters *domainParameters;
  
#line 147
  if (params == nil) {
    
#line 149
    OrgBouncycastleJceSpecECParameterSpec *iSpec = [((id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration)) getEcImplicitlyCa];
    
#line 151
    domainParameters = new_OrgBouncycastleCryptoParamsECDomainParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((OrgBouncycastleJceSpecECParameterSpec *) nil_chk(iSpec)) getCurve], [iSpec getG], [iSpec getN], [iSpec getH], [iSpec getSeed]);
  }
  else {
    
#line 155
    domainParameters = OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_getDomainParametersWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withOrgBouncycastleJceSpecECParameterSpec_(configuration, OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_(params));
  }
  
#line 158
  return domainParameters;
}


#line 161
JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleAsn1X9X962Parameters_withOrgBouncycastleMathEcECCurve_(OrgBouncycastleAsn1X9X962Parameters *params, OrgBouncycastleMathEcECCurve *curve) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 164
  JavaSecuritySpecECParameterSpec *ecSpec;
  JavaSecuritySpecEllipticCurve *ellipticCurve;
  
#line 167
  if ([((OrgBouncycastleAsn1X9X962Parameters *) nil_chk(params)) isNamedCurve]) {
    
#line 169
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([params getParameters], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    OrgBouncycastleAsn1X9X9ECParameters *ecP = OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_getNamedCurveByOidWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
    if (ecP == nil) {
      
#line 173
      id<JavaUtilMap> additionalECParameters = [((id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(JreLoadStatic(OrgBouncycastleJceProviderBouncyCastleProvider, CONFIGURATION))) getAdditionalECParameters];
      if (![((id<JavaUtilMap>) nil_chk(additionalECParameters)) isEmpty]) {
        
#line 176
        ecP = (OrgBouncycastleAsn1X9X9ECParameters *) cast_chk([additionalECParameters getWithId:oid], [OrgBouncycastleAsn1X9X9ECParameters class]);
      }
    }
    
#line 180
    ellipticCurve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((OrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getSeed]);
    
#line 182
    ecSpec = new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_getCurveNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(
#line 183
    oid),
#line 184
    ellipticCurve, OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 185
    [ecP getG]),
#line 186
    [ecP getN],
#line 187
    [ecP getH]);
  }
  else if ([params isImplicitlyCA]) {
    
#line 191
    ecSpec = nil;
  }
  else {
    
#line 195
    OrgBouncycastleAsn1ASN1Sequence *pSeq = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([params getParameters]);
    if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(pSeq)) size] > 3) {
      
#line 198
      OrgBouncycastleAsn1X9X9ECParameters *ecP = OrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(pSeq);
      
#line 200
      ellipticCurve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((OrgBouncycastleAsn1X9X9ECParameters *) nil_chk(ecP)) getSeed]);
      
#line 202
      if ([ecP getH] != nil) {
        
#line 204
        ecSpec = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(
#line 205
        ellipticCurve, OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 206
        [ecP getG]),
#line 207
        [ecP getN],
#line 208
        [((JavaMathBigInteger *) nil_chk([ecP getH])) intValue]);
      }
      else {
        
#line 212
        ecSpec = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(
#line 213
        ellipticCurve, OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 214
        [ecP getG]),
#line 215
        [ecP getN],
#line 216
        1);
      }
    }
    else {
      
#line 221
      OrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *gostParams = OrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters_getInstanceWithId_(pSeq);
      
#line 223
      OrgBouncycastleJceSpecECNamedCurveParameterSpec *spec = OrgBouncycastleJceECGOST3410NamedCurveTable_getParameterSpecWithNSString_(OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(
#line 224
      [((OrgBouncycastleAsn1CryptoproGOST3410PublicKeyAlgParameters *) nil_chk(gostParams)) getPublicKeyParamSet]));
      
#line 226
      curve = [((OrgBouncycastleJceSpecECNamedCurveParameterSpec *) nil_chk(spec)) getCurve];
      ellipticCurve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(curve, [spec getSeed]);
      
#line 229
      ecSpec = new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(
#line 230
      [gostParams getPublicKeyParamSet]),
#line 231
      ellipticCurve, OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 232
      [spec getG]),
#line 233
      [spec getN], [spec getH]);
    }
  }
  
#line 237
  return ecSpec;
}


#line 240
JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleAsn1X9X9ECParameters_(OrgBouncycastleAsn1X9X9ECParameters *domainParameters) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 243
  return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(
#line 244
  [((OrgBouncycastleAsn1X9X9ECParameters *) nil_chk(domainParameters)) getCurve], nil), OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 245
  [domainParameters getG]),
#line 246
  [domainParameters getN],
#line 247
  [((JavaMathBigInteger *) nil_chk([domainParameters getH])) intValue]);
}


#line 250
JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleCryptoParamsECDomainParameters_(OrgBouncycastleCryptoParamsECDomainParameters *domainParameters) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 253
  return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(
#line 254
  [((OrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(domainParameters)) getCurve], nil), OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 255
  [domainParameters getG]),
#line 256
  [domainParameters getN],
#line 257
  [((JavaMathBigInteger *) nil_chk([domainParameters getH])) intValue]);
}


#line 260
JavaSecuritySpecEllipticCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 264
  id<JavaSecuritySpecECField> field = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithOrgBouncycastleMathFieldFiniteField_([((OrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField]);
  JavaMathBigInteger *a = [((OrgBouncycastleMathEcECFieldElement *) nil_chk([curve getA])) toBigInteger];
  
#line 265
  JavaMathBigInteger *b = [((OrgBouncycastleMathEcECFieldElement *) nil_chk([curve getB])) toBigInteger];
  
#line 269
  return new_JavaSecuritySpecEllipticCurve_initWithJavaSecuritySpecECField_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(field, a, b, nil);
}


#line 272
OrgBouncycastleMathEcECCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(JavaSecuritySpecEllipticCurve *ec) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 275
  id<JavaSecuritySpecECField> field = [((JavaSecuritySpecEllipticCurve *) nil_chk(ec)) getField];
  JavaMathBigInteger *a = [ec getA];
  JavaMathBigInteger *b = [ec getB];
  
#line 279
  if ([field isKindOfClass:[JavaSecuritySpecECFieldFp class]]) {
    
#line 281
    return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_substituteWithOrgBouncycastleMathEcECCurve_(new_OrgBouncycastleMathEcECCurve_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_([((JavaSecuritySpecECFieldFp *) nil_chk(((JavaSecuritySpecECFieldFp *) field))) getP], a, b));
  }
  else {
    
#line 285
    JavaSecuritySpecECFieldF2m *fieldF2m = (JavaSecuritySpecECFieldF2m *) cast_chk(field, [JavaSecuritySpecECFieldF2m class]);
    jint m = [((JavaSecuritySpecECFieldF2m *) nil_chk(fieldF2m)) getM];
    IOSIntArray *ks = OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_convertMidTermsWithIntArray_([fieldF2m getMidTermsOfReductionPolynomial]);
    return new_OrgBouncycastleMathEcECCurve_F2m_initWithInt_withInt_withInt_withInt_withJavaMathBigInteger_withJavaMathBigInteger_(m, IOSIntArray_Get(nil_chk(ks), 0), IOSIntArray_Get(ks, 1), IOSIntArray_Get(ks, 2), a, b);
  }
}


#line 292
id<JavaSecuritySpecECField> OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithOrgBouncycastleMathFieldFiniteField_(id<OrgBouncycastleMathFieldFiniteField> field) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  if (OrgBouncycastleMathEcECAlgorithms_isFpFieldWithOrgBouncycastleMathFieldFiniteField_(field)) {
    
#line 296
    return new_JavaSecuritySpecECFieldFp_initWithJavaMathBigInteger_([((id<OrgBouncycastleMathFieldFiniteField>) nil_chk(field)) getCharacteristic]);
  }
  else {
    
#line 300
    id<OrgBouncycastleMathFieldPolynomial> poly = [((id<OrgBouncycastleMathFieldPolynomialExtensionField>) nil_chk(((id<OrgBouncycastleMathFieldPolynomialExtensionField>) cast_check(field, OrgBouncycastleMathFieldPolynomialExtensionField_class_())))) getMinimalPolynomial];
    IOSIntArray *exponents = [((id<OrgBouncycastleMathFieldPolynomial>) nil_chk(poly)) getExponentsPresent];
    IOSIntArray *ks = OrgBouncycastleUtilArrays_reverseInPlaceWithIntArray_(OrgBouncycastleUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(exponents, 1, ((IOSIntArray *) nil_chk(exponents))->size_ - 1));
    return new_JavaSecuritySpecECFieldF2m_initWithInt_withIntArray_([poly getDegree], ks);
  }
}


#line 307
JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withOrgBouncycastleJceSpecECParameterSpec_(JavaSecuritySpecEllipticCurve *ellipticCurve, OrgBouncycastleJceSpecECParameterSpec *spec) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  
#line 311
  JavaSecuritySpecECPoint *g = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_([((OrgBouncycastleJceSpecECParameterSpec *) nil_chk(spec)) getG]);
  
#line 313
  if ([spec isKindOfClass:[OrgBouncycastleJceSpecECNamedCurveParameterSpec class]]) {
    
#line 315
    NSString *name = [((OrgBouncycastleJceSpecECNamedCurveParameterSpec *) spec) getName];
    
#line 317
    return new_OrgBouncycastleJceSpecECNamedCurveSpec_initWithNSString_withJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(name, ellipticCurve, g, [spec getN], [spec getH]);
  }
  else {
    
#line 321
    return new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(ellipticCurve, g, [spec getN], [((JavaMathBigInteger *) nil_chk([spec getH])) intValue]);
  }
}


#line 325
OrgBouncycastleJceSpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_(JavaSecuritySpecECParameterSpec *ecSpec) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  OrgBouncycastleMathEcECCurve *curve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec)) getCurve]);
  
#line 329
  OrgBouncycastleMathEcECPoint *g = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_(curve, [ecSpec getGenerator]);
  JavaMathBigInteger *n = [ecSpec getOrder];
  JavaMathBigInteger *h = JavaMathBigInteger_valueOfWithLong_([ecSpec getCofactor]);
  IOSByteArray *seed = [((JavaSecuritySpecEllipticCurve *) nil_chk([ecSpec getCurve])) getSeed];
  
#line 334
  if ([ecSpec isKindOfClass:[OrgBouncycastleJceSpecECNamedCurveSpec class]]) {
    
#line 336
    return new_OrgBouncycastleJceSpecECNamedCurveParameterSpec_initWithNSString_withOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_([((OrgBouncycastleJceSpecECNamedCurveSpec *) ecSpec) getName], curve,
#line 337
    g, n, h, seed);
  }
  else {
    
#line 341
    return new_OrgBouncycastleJceSpecECParameterSpec_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleMathEcECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(curve, g, n, h, seed);
  }
}


#line 345
OrgBouncycastleMathEcECPoint *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_(JavaSecuritySpecECParameterSpec *ecSpec, JavaSecuritySpecECPoint *point) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_([((JavaSecuritySpecECParameterSpec *) nil_chk(ecSpec)) getCurve]), point);
}

OrgBouncycastleMathEcECPoint *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_(OrgBouncycastleMathEcECCurve *curve, JavaSecuritySpecECPoint *point) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  return [((OrgBouncycastleMathEcECCurve *) nil_chk(curve)) createPointWithJavaMathBigInteger:[((JavaSecuritySpecECPoint *) nil_chk(point)) getAffineX] withJavaMathBigInteger:[point getAffineY]];
}

JavaSecuritySpecECPoint *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(OrgBouncycastleMathEcECPoint *point) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_initialize();
  point = [((OrgBouncycastleMathEcECPoint *) nil_chk(point)) normalize];
  
#line 359
  return new_JavaSecuritySpecECPoint_initWithJavaMathBigInteger_withJavaMathBigInteger_(
#line 360
  [((OrgBouncycastleMathEcECFieldElement *) nil_chk([((OrgBouncycastleMathEcECPoint *) nil_chk(point)) getAffineXCoord])) toBigInteger],
#line 361
  [((OrgBouncycastleMathEcECFieldElement *) nil_chk([point getAffineYCoord])) toBigInteger]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves)


#line 39
@implementation OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 39
- (instancetype)init {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 43
+ (id<JavaUtilMap>)createCurveMap {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_createCurveMap();
}


#line 76
+ (OrgBouncycastleMathEcECCurve *)substituteWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)c {
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_substituteWithOrgBouncycastleMathEcECCurve_(c);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECCurve;", 0x8, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createCurveMap);
  methods[2].selector = @selector(substituteWithOrgBouncycastleMathEcECCurve:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CURVE_MAP", "LJavaUtilMap;", .constantValue.asLong = 0, 0xa, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "substitute", "LOrgBouncycastleMathEcECCurve;", &OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_CURVE_MAP, "LOrgBouncycastleJcajceProviderAsymmetricUtilEC5Util;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves = { "CustomCurves", "org.bouncycastle.jcajce.provider.asymmetric.util", ptrTable, methods, fields, 7, 0xa, 3, 1, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves;
}

+ (void)initialize {
  if (self == [OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves class]) {
    OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_CURVE_MAP = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_createCurveMap();
    J2OBJC_SET_INITIALIZED(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves)
  }
}

@end


#line 39
void OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_init(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves *self) {
  NSObject_init(self);
}


#line 39
OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves *new_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves, init)
}


#line 39
OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves *create_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves, init)
}

id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_createCurveMap() {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_initialize();
  id<JavaUtilMap> map = new_JavaUtilHashMap_init();
  
#line 47
  id<JavaUtilEnumeration> e = OrgBouncycastleCryptoEcCustomNamedCurves_getNames();
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 50
    NSString *name = (NSString *) cast_chk([e nextElement], [NSString class]);
    
#line 52
    OrgBouncycastleAsn1X9X9ECParametersHolder *curveParams = OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameLazyWithNSString_(name);
    if (curveParams != nil) {
      
#line 55
      OrgBouncycastleMathEcECCurve *curve = [curveParams getCurve];
      if (OrgBouncycastleMathEcECAlgorithms_isFpCurveWithOrgBouncycastleMathEcECCurve_(curve)) {
        
#line 58
        (void) [map putWithId:curve withId:[((OrgBouncycastleAsn1X9X9ECParametersHolder *) nil_chk(OrgBouncycastleCryptoEcCustomNamedCurves_getByNameLazyWithNSString_(name))) getCurve]];
      }
    }
  }
  
#line 63
  OrgBouncycastleMathEcECCurve *c_25519 = [((OrgBouncycastleAsn1X9X9ECParametersHolder *) nil_chk(OrgBouncycastleCryptoEcCustomNamedCurves_getByNameLazyWithNSString_(@"Curve25519"))) getCurve];
  
#line 65
  (void) [map putWithId:new_OrgBouncycastleMathEcECCurve_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(
#line 66
  [((id<OrgBouncycastleMathFieldFiniteField>) nil_chk([((OrgBouncycastleMathEcECCurve *) nil_chk(c_25519)) getField])) getCharacteristic],
#line 67
  [((OrgBouncycastleMathEcECFieldElement *) nil_chk([c_25519 getA])) toBigInteger],
#line 68
  [((OrgBouncycastleMathEcECFieldElement *) nil_chk([c_25519 getB])) toBigInteger],
#line 69
  [c_25519 getOrder],
#line 70
  [c_25519 getCofactor],
#line 71
  true) withId:c_25519];
  
#line 73
  return map;
}


#line 76
OrgBouncycastleMathEcECCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_substituteWithOrgBouncycastleMathEcECCurve_(OrgBouncycastleMathEcECCurve *c) {
  OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_initialize();
  OrgBouncycastleMathEcECCurve *custom = (OrgBouncycastleMathEcECCurve *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves_CURVE_MAP)) getWithId:c], [OrgBouncycastleMathEcECCurve class]);
  return nil != custom ? custom : c;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_CustomCurves)

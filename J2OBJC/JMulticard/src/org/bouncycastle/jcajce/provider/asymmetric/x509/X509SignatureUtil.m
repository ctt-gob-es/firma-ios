//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/StringBuffer.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/GeneralSecurityException.h"
#include "java/security/Provider.h"
#include "java/security/Security.h"
#include "java/security/Signature.h"
#include "java/security/SignatureException.h"
#include "java/security/spec/PSSParameterSpec.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Null.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERNull.h"
#include "org/bouncycastle/asn1/edec/EdECObjectIdentifiers.h"
#include "org/bouncycastle/asn1/misc/MiscObjectIdentifiers.h"
#include "org/bouncycastle/asn1/oiw/OIWObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/RSASSAPSSparams.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x9/X9ObjectIdentifiers.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.h"
#include "org/bouncycastle/jcajce/util/MessageDigestUtils.h"
#include "org/bouncycastle/jce/provider/BouncyCastleProvider.h"
#include "org/bouncycastle/util/encoders/Hex.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil ()

/*!
 @brief Return the digest algorithm using one of the standard JCA string
  representations rather the the algorithm identifier (if possible).
 */
+ (NSString *)getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestAlgOID;

+ (NSString *)findAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid;

+ (NSString *)lookupAlgWithJavaSecurityProvider:(JavaSecurityProvider *)prov
    withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid;

@end

inline id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_get_algNames(void);
static id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil, algNames, id<JavaUtilMap>)

inline OrgBouncycastleAsn1ASN1Null *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_get_derNull(void);
static OrgBouncycastleAsn1ASN1Null *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_derNull;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil, derNull, OrgBouncycastleAsn1ASN1Null *)

__attribute__((unused)) static NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *digestAlgOID);

__attribute__((unused)) static NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_findAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *algOid);

__attribute__((unused)) static NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_lookupAlgWithJavaSecurityProvider_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(JavaSecurityProvider *prov, OrgBouncycastleAsn1ASN1ObjectIdentifier *algOid);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil)


#line 32
@implementation OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil


#line 32
- (instancetype)initPackagePrivate {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initPackagePrivate(self);
  return self;
}


#line 46
+ (jboolean)isCompositeAlgorithmWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithmIdentifier {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_isCompositeAlgorithmWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(algorithmIdentifier);
}


#line 51
+ (void)setSignatureParametersWithJavaSecuritySignature:(JavaSecuritySignature *)signature
                   withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)params {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_setSignatureParametersWithJavaSecuritySignature_withOrgBouncycastleAsn1ASN1Encodable_(signature, params);
}


#line 83
+ (NSString *)getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(sigAlgId);
}


#line 118
+ (NSString *)getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestAlgOID {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(digestAlgOID);
}


#line 132
+ (NSString *)findAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_findAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(algOid);
}


#line 161
+ (NSString *)lookupAlgWithJavaSecurityProvider:(JavaSecurityProvider *)prov
    withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_lookupAlgWithJavaSecurityProvider_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(prov, algOid);
}


#line 175
+ (void)prettyPrintSignatureWithByteArray:(IOSByteArray *)sig
                 withJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                             withNSString:(NSString *)nl {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_prettyPrintSignatureWithByteArray_withJavaLangStringBuffer_withNSString_(sig, buf, nl);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 2, 3, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 5, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 8, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 11, 12, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(isCompositeAlgorithmWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[2].selector = @selector(setSignatureParametersWithJavaSecuritySignature:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[3].selector = @selector(getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[4].selector = @selector(getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[5].selector = @selector(findAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[6].selector = @selector(lookupAlgWithJavaSecurityProvider:withOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[7].selector = @selector(prettyPrintSignatureWithByteArray:withJavaLangStringBuffer:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "algNames", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 13, 14, -1 },
    { "derNull", "LOrgBouncycastleAsn1ASN1Null;", .constantValue.asLong = 0, 0x1a, -1, 15, -1, -1 },
  };
  static const void *ptrTable[] = { "isCompositeAlgorithm", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", "setSignatureParameters", "LJavaSecuritySignature;LOrgBouncycastleAsn1ASN1Encodable;", "LJavaSecurityNoSuchAlgorithmException;LJavaSecuritySignatureException;LJavaSecurityInvalidKeyException;", "getSignatureName", "getDigestAlgName", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "findAlgName", "lookupAlg", "LJavaSecurityProvider;LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "prettyPrintSignature", "[BLJavaLangStringBuffer;LNSString;", &OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames, "Ljava/util/Map<Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;Ljava/lang/String;>;", &OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_derNull };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil = { "X509SignatureUtil", "org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil;
}

+ (void)initialize {
  if (self == [OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil class]) {
    OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames = new_JavaUtilHashMap_init();
    {
      
#line 38
      (void) [OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames putWithId:JreLoadStatic(OrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_Ed25519) withId:@"Ed25519"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames putWithId:JreLoadStatic(OrgBouncycastleAsn1EdecEdECObjectIdentifiers, id_Ed448) withId:@"Ed448"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames putWithId:JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, dsaWithSHA1) withId:@"SHA1withDSA"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames putWithId:JreLoadStatic(OrgBouncycastleAsn1X9X9ObjectIdentifiers, id_dsa_with_sha1) withId:@"SHA1withDSA"];
    }
    OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_derNull = JreLoadStatic(OrgBouncycastleAsn1DERNull, INSTANCE);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil)
  }
}

@end


#line 32
void OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initPackagePrivate(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil *self) {
  NSObject_init(self);
}


#line 32
OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil *new_OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil, initPackagePrivate)
}


#line 32
OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil *create_OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil, initPackagePrivate)
}


#line 46
jboolean OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_isCompositeAlgorithmWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithmIdentifier) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initialize();
  return [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_alg_composite))) equalsWithOrgBouncycastleAsn1ASN1Primitive:[((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(algorithmIdentifier)) getAlgorithm]];
}

void OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_setSignatureParametersWithJavaSecuritySignature_withOrgBouncycastleAsn1ASN1Encodable_(JavaSecuritySignature *signature, id<OrgBouncycastleAsn1ASN1Encodable> params) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initialize();
  
#line 56
  if (params != nil && ![((OrgBouncycastleAsn1ASN1Null *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_derNull)) equalsWithOrgBouncycastleAsn1ASN1Encodable:params]) {
    
#line 58
    JavaSecurityAlgorithmParameters *sigParams = JavaSecurityAlgorithmParameters_getInstanceWithNSString_withJavaSecurityProvider_([((JavaSecuritySignature *) nil_chk(signature)) getAlgorithm], [signature getProvider]);
    
#line 60
    @try {
      
#line 62
      [((JavaSecurityAlgorithmParameters *) nil_chk(sigParams)) init__WithByteArray:[((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([params toASN1Primitive])) getEncoded]];
    }
    @catch (JavaIoIOException *e) {
      
#line 66
      @throw new_JavaSecuritySignatureException_initWithNSString_(JreStrcat("$$", @"IOException decoding parameters: ", [e getMessage]));
    }
    
#line 69
    if ([((NSString *) nil_chk([signature getAlgorithm])) java_hasSuffix:@"MGF1"]) {
      
#line 71
      @try {
        
#line 73
        [signature setParameterWithJavaSecuritySpecAlgorithmParameterSpec:[sigParams getParameterSpecWithIOSClass:JavaSecuritySpecPSSParameterSpec_class_()]];
      }
      @catch (JavaSecurityGeneralSecurityException *e) {
        
#line 77
        @throw new_JavaSecuritySignatureException_initWithNSString_(JreStrcat("$$", @"Exception extracting parameters: ", [e getMessage]));
      }
    }
  }
}


#line 83
NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initialize();
  
#line 86
  id<OrgBouncycastleAsn1ASN1Encodable> params = [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(sigAlgId)) getParameters];
  
#line 88
  if (params != nil && ![((OrgBouncycastleAsn1ASN1Null *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_derNull)) equalsWithOrgBouncycastleAsn1ASN1Encodable:params]) {
    
#line 90
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([sigAlgId getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_RSASSA_PSS)]) {
      
#line 92
      OrgBouncycastleAsn1PkcsRSASSAPSSparams *rsaParams = OrgBouncycastleAsn1PkcsRSASSAPSSparams_getInstanceWithId_(params);
      
#line 94
      return JreStrcat("$$", OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1PkcsRSASSAPSSparams *) nil_chk(rsaParams)) getHashAlgorithm])) getAlgorithm]), @"withRSAandMGF1");
    }
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([sigAlgId getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1X9X9ObjectIdentifiers, ecdsa_with_SHA2)]) {
      
#line 98
      OrgBouncycastleAsn1ASN1Sequence *ecDsaParams = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(params);
      
#line 100
      return JreStrcat("$$", OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_((OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(ecDsaParams)) getObjectAtWithInt:0], [OrgBouncycastleAsn1ASN1ObjectIdentifier class])), @"withECDSA");
    }
  }
  
#line 105
  NSString *algName = [((id<JavaUtilMap>) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_algNames)) getWithId:[sigAlgId getAlgorithm]];
  if (algName != nil) {
    
#line 108
    return algName;
  }
  
#line 111
  return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_findAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([sigAlgId getAlgorithm]);
}


#line 118
NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getDigestAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *digestAlgOID) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initialize();
  
#line 121
  NSString *name = OrgBouncycastleJcajceUtilMessageDigestUtils_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(digestAlgOID);
  
#line 123
  jint dIndex = [((NSString *) nil_chk(name)) java_indexOf:'-'];
  if (dIndex > 0 && ![name java_hasPrefix:@"SHA3"]) {
    
#line 126
    return JreStrcat("$$", [name java_substring:0 endIndex:dIndex], [name java_substring:dIndex + 1]);
  }
  
#line 129
  return name;
}


#line 132
NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_findAlgNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *algOid) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initialize();
  JavaSecurityProvider *prov = JavaSecuritySecurity_getProviderWithNSString_(OrgBouncycastleJceProviderBouncyCastleProvider_PROVIDER_NAME);
  
#line 136
  if (prov != nil) {
    
#line 138
    NSString *algName = OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_lookupAlgWithJavaSecurityProvider_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(prov, algOid);
    if (algName != nil) {
      
#line 141
      return algName;
    }
  }
  
#line 145
  IOSObjectArray *provs = JavaSecuritySecurity_getProviders();
  {
    IOSObjectArray *a__ = provs;
    JavaSecurityProvider * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaSecurityProvider * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaSecurityProvider *prov2 = *b__++;
      
#line 148
      if (!JreObjectEqualsEquals(prov, prov2)) {
        
#line 150
        NSString *algName = OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_lookupAlgWithJavaSecurityProvider_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(prov2, algOid);
        if (algName != nil) {
          
#line 153
          return algName;
        }
      }
    }
  }
  return [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(algOid)) getId];
}


#line 161
NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_lookupAlgWithJavaSecurityProvider_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(JavaSecurityProvider *prov, OrgBouncycastleAsn1ASN1ObjectIdentifier *algOid) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initialize();
  NSString *algName = [((JavaSecurityProvider *) nil_chk(prov)) getPropertyWithNSString:JreStrcat("$@", @"Alg.Alias.Signature.", algOid)];
  
#line 165
  if (algName != nil) {
    
#line 167
    return algName;
  }
  
#line 170
  algName = [prov getPropertyWithNSString:JreStrcat("$@", @"Alg.Alias.Signature.OID.", algOid)];
  
#line 172
  return algName;
}


#line 175
void OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_prettyPrintSignatureWithByteArray_withJavaLangStringBuffer_withNSString_(IOSByteArray *sig, JavaLangStringBuffer *buf, NSString *nl) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_initialize();
  
#line 182
  if (((IOSByteArray *) nil_chk(sig))->size_ > 20) {
    
#line 184
    (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:@"            Signature: "])) appendWithNSString:OrgBouncycastleUtilEncodersHex_toHexStringWithByteArray_withInt_withInt_(sig, 0, 20)])) appendWithNSString:nl];
    for (jint i = 20; i < sig->size_; i += 20) {
      
#line 187
      if (i < sig->size_ - 20) {
        
#line 189
        (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"                       "])) appendWithNSString:OrgBouncycastleUtilEncodersHex_toHexStringWithByteArray_withInt_withInt_(sig, i, 20)])) appendWithNSString:nl];
      }
      else {
        
#line 193
        (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"                       "])) appendWithNSString:OrgBouncycastleUtilEncodersHex_toHexStringWithByteArray_withInt_withInt_(sig, i, sig->size_ - i)])) appendWithNSString:nl];
      }
    }
  }
  else {
    
#line 199
    (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:@"            Signature: "])) appendWithNSString:OrgBouncycastleUtilEncodersHex_toHexStringWithByteArray_(sig)])) appendWithNSString:nl];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil)

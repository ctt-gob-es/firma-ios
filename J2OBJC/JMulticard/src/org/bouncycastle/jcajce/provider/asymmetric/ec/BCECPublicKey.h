//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPublicKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey")
#ifdef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey

#if !defined (OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_) && (INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey || defined(INCLUDE_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey))
#define OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_

#define RESTRICT_JavaSecurityInterfacesECPublicKey 1
#define INCLUDE_JavaSecurityInterfacesECPublicKey 1
#include "java/security/interfaces/ECPublicKey.h"

#define RESTRICT_OrgBouncycastleJceInterfacesECPublicKey 1
#define INCLUDE_OrgBouncycastleJceInterfacesECPublicKey 1
#include "org/bouncycastle/jce/interfaces/ECPublicKey.h"

#define RESTRICT_OrgBouncycastleJceInterfacesECPointEncoder 1
#define INCLUDE_OrgBouncycastleJceInterfacesECPointEncoder 1
#include "org/bouncycastle/jce/interfaces/ECPointEncoder.h"

@class IOSByteArray;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecECPublicKeySpec;
@class OrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class OrgBouncycastleCryptoParamsECPublicKeyParameters;
@class OrgBouncycastleJceSpecECParameterSpec;
@class OrgBouncycastleJceSpecECPublicKeySpec;
@class OrgBouncycastleMathEcECPoint;
@protocol OrgBouncycastleJcajceProviderConfigProviderConfiguration;

@interface OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey : NSObject < JavaSecurityInterfacesECPublicKey, OrgBouncycastleJceInterfacesECPublicKey, OrgBouncycastleJceInterfacesECPointEncoder >

#pragma mark Public

- (instancetype)initWithJavaSecurityInterfacesECPublicKey:(id<JavaSecurityInterfacesECPublicKey>)key
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)key;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPublicKeyParameters:(OrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPublicKeyParameters:(OrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withOrgBouncycastleJceSpecECParameterSpec:(OrgBouncycastleJceSpecECParameterSpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPublicKeyParameters:(OrgBouncycastleCryptoParamsECPublicKeyParameters *)params
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withJavaSecuritySpecECPublicKeySpec:(JavaSecuritySpecECPublicKeySpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleJceSpecECPublicKeySpec:(OrgBouncycastleJceSpecECPublicKeySpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (OrgBouncycastleJceSpecECParameterSpec *)getParameters;

- (JavaSecuritySpecECParameterSpec *)getParams;

- (OrgBouncycastleMathEcECPoint *)getQ;

- (JavaSecuritySpecECPoint *)getW;

- (NSUInteger)hash;

- (void)setPointFormatWithNSString:(NSString *)style;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (OrgBouncycastleCryptoParamsECPublicKeyParameters *)engineGetKeyParameters;

- (OrgBouncycastleJceSpecECParameterSpec *)engineGetSpec;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey)

inline jlong OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_get_serialVersionUID(void);
#define OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_serialVersionUID 2422789860422731812LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *key);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *key);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withJavaSecuritySpecECPublicKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPublicKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleJceSpecECPublicKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, OrgBouncycastleJceSpecECPublicKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleJceSpecECPublicKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleJceSpecECPublicKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleJceSpecECPublicKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleJceSpecECPublicKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleCryptoParamsECPublicKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPublicKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, id<JavaSecurityInterfacesECPublicKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPublicKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithJavaSecurityInterfacesECPublicKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPublicKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *self, NSString *algorithm, OrgBouncycastleAsn1X509SubjectPublicKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleAsn1X509SubjectPublicKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_initWithNSString_withOrgBouncycastleAsn1X509SubjectPublicKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleAsn1X509SubjectPublicKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/security/cert/CRLException.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/CertificateList.h"
#include "org/bouncycastle/asn1/x509/Extension.h"
#include "org/bouncycastle/asn1/x509/IssuingDistributionPoint.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/ExtCRLException.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLImpl.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLInternal.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.h"
#include "org/bouncycastle/jcajce/util/JcaJceHelper.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject () {
 @public
  id cacheLock_;
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *internalCRLValue_;
  volatile_jboolean hashValueSet_;
  volatile_jint hashValue_;
}

- (OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *)getInternalCRL;

+ (NSString *)createSigAlgNameWithOrgBouncycastleAsn1X509CertificateList:(OrgBouncycastleAsn1X509CertificateList *)c;

+ (IOSByteArray *)createSigAlgParamsWithOrgBouncycastleAsn1X509CertificateList:(OrgBouncycastleAsn1X509CertificateList *)c;

+ (jboolean)isIndirectCRLWithOrgBouncycastleAsn1X509CertificateList:(OrgBouncycastleAsn1X509CertificateList *)c;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject, cacheLock_, id)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject, internalCRLValue_, OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *)

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *self);

__attribute__((unused)) static NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgNameWithOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleAsn1X509CertificateList *c);

__attribute__((unused)) static IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgParamsWithOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleAsn1X509CertificateList *c);

__attribute__((unused)) static jboolean OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_isIndirectCRLWithOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleAsn1X509CertificateList *c);

@interface OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException : JavaSecurityCertCRLException {
 @public
  JavaLangThrowable *cause_X509CRLException_;
}

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException)

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException, cause_X509CRLException_, JavaLangThrowable *)

__attribute__((unused)) static void OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *self, NSString *msg, JavaLangThrowable *cause);

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

__attribute__((unused)) static void OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *self, JavaLangThrowable *cause);

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject.java"


#line 15
@implementation OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject


#line 24
- (instancetype)initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper:(id<OrgBouncycastleJcajceUtilJcaJceHelper>)bcHelper
                                 withOrgBouncycastleAsn1X509CertificateList:(OrgBouncycastleAsn1X509CertificateList *)c {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_(self, bcHelper, c);
  return self;
}


#line 29
- (IOSByteArray *)getEncoded {
  
#line 32
  return OrgBouncycastleUtilArrays_cloneWithByteArray_([((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(self))) getEncoded]);
}

- (jboolean)isEqual:(id)other {
  
#line 38
  if (JreObjectEqualsEquals(self, other)) {
    
#line 40
    return true;
  }
  
#line 43
  if ([other isKindOfClass:[OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject class]]) {
    
#line 45
    OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *otherBC = (OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *) other;
    
#line 47
    if (JreLoadVolatileBoolean(&self->hashValueSet_) && JreLoadVolatileBoolean(&((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *) nil_chk(otherBC))->hashValueSet_)) {
      
#line 49
      if (JreLoadVolatileInt(&self->hashValue_) != JreLoadVolatileInt(&((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *) nil_chk(otherBC))->hashValue_)) {
        
#line 51
        return false;
      }
    }
    else if (nil == internalCRLValue_ || nil == ((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *) nil_chk(otherBC))->internalCRLValue_) {
      
#line 56
      OrgBouncycastleAsn1ASN1BitString *signature = [((OrgBouncycastleAsn1X509CertificateList *) nil_chk(c_)) getSignature];
      if (nil != signature && ![signature equalsWithOrgBouncycastleAsn1ASN1Primitive:[((OrgBouncycastleAsn1X509CertificateList *) nil_chk(((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *) nil_chk(otherBC))->c_)) getSignature]]) {
        
#line 59
        return false;
      }
    }
    
#line 63
    return [((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(self))) isEqual:OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(nil_chk(otherBC))];
  }
  
#line 66
  return [((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(self))) isEqual:other];
}


#line 69
- (NSUInteger)hash {
  
#line 72
  if (!JreLoadVolatileBoolean(&hashValueSet_)) {
    
#line 74
    JreAssignVolatileInt(&hashValue_, ((jint) [((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(self))) hash]));
    JreAssignVolatileBoolean(&hashValueSet_, true);
  }
  
#line 78
  return JreLoadVolatileInt(&hashValue_);
}


#line 81
- (OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *)getInternalCRL {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(self);
}


#line 116
+ (NSString *)createSigAlgNameWithOrgBouncycastleAsn1X509CertificateList:(OrgBouncycastleAsn1X509CertificateList *)c {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgNameWithOrgBouncycastleAsn1X509CertificateList_(c);
}


#line 128
+ (IOSByteArray *)createSigAlgParamsWithOrgBouncycastleAsn1X509CertificateList:(OrgBouncycastleAsn1X509CertificateList *)c {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgParamsWithOrgBouncycastleAsn1X509CertificateList_(c);
}


#line 146
+ (jboolean)isIndirectCRLWithOrgBouncycastleAsn1X509CertificateList:(OrgBouncycastleAsn1X509CertificateList *)c {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_isIndirectCRLWithOrgBouncycastleAsn1X509CertificateList_(c);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 5, 6, 1, -1, -1, -1 },
    { NULL, "[B", 0xa, 7, 6, 1, -1, -1, -1 },
    { NULL, "Z", 0xa, 8, 6, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper:withOrgBouncycastleAsn1X509CertificateList:);
  methods[1].selector = @selector(getEncoded);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(getInternalCRL);
  methods[5].selector = @selector(createSigAlgNameWithOrgBouncycastleAsn1X509CertificateList:);
  methods[6].selector = @selector(createSigAlgParamsWithOrgBouncycastleAsn1X509CertificateList:);
  methods[7].selector = @selector(isIndirectCRLWithOrgBouncycastleAsn1X509CertificateList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cacheLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "internalCRLValue_", "LOrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashValueSet_", "Z", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "hashValue_", "I", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleJcajceUtilJcaJceHelper;LOrgBouncycastleAsn1X509CertificateList;", "LJavaSecurityCertCRLException;", "equals", "LNSObject;", "hashCode", "createSigAlgName", "LOrgBouncycastleAsn1X509CertificateList;", "createSigAlgParams", "isIndirectCRL", "LOrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject = { "X509CRLObject", "org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 8, 4, -1, 9, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject;
}

@end


#line 24
void OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *self, id<OrgBouncycastleJcajceUtilJcaJceHelper> bcHelper, OrgBouncycastleAsn1X509CertificateList *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLImpl_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_withNSString_withByteArray_withBoolean_(self,
#line 26
  bcHelper, c, OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgNameWithOrgBouncycastleAsn1X509CertificateList_(c), OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgParamsWithOrgBouncycastleAsn1X509CertificateList_(c), OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_isIndirectCRLWithOrgBouncycastleAsn1X509CertificateList_(c));
  self->cacheLock_ = new_NSObject_init();
}


#line 24
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_(id<OrgBouncycastleJcajceUtilJcaJceHelper> bcHelper, OrgBouncycastleAsn1X509CertificateList *c) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject, initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_, bcHelper, c)
}


#line 24
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_(id<OrgBouncycastleJcajceUtilJcaJceHelper> bcHelper, OrgBouncycastleAsn1X509CertificateList *c) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject, initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_, bcHelper, c)
}


#line 81
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_getInternalCRL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject *self) {
  
#line 83
  @synchronized(self->cacheLock_) {
    
#line 85
    if (nil != self->internalCRLValue_) {
      
#line 87
      return JreRetainedLocalValue(self->internalCRLValue_);
    }
  }
  
#line 91
  IOSByteArray *encoding = nil;
  JavaSecurityCertCRLException *exception = nil;
  @try {
    
#line 95
    encoding = [((OrgBouncycastleAsn1X509CertificateList *) nil_chk(self->c_)) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    
#line 99
    exception = new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(e);
  }
  
#line 102
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal *temp = new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLInternal_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509CertificateList_withNSString_withByteArray_withBoolean_withByteArray_withJavaSecurityCertCRLException_(self->bcHelper_, self->c_, self->sigAlgName_, self->sigAlgParams_, self->isIndirect_, encoding,
#line 103
  exception);
  
#line 105
  @synchronized(self->cacheLock_) {
    
#line 107
    if (nil == self->internalCRLValue_) {
      
#line 109
      self->internalCRLValue_ = temp;
    }
    
#line 112
    return JreRetainedLocalValue(self->internalCRLValue_);
  }
}


#line 116
NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgNameWithOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleAsn1X509CertificateList *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_initialize();
  @try {
    
#line 120
    return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_([((OrgBouncycastleAsn1X509CertificateList *) nil_chk(c)) getSignatureAlgorithm]);
  }
  @catch (JavaLangException *e) {
    
#line 124
    @throw new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"CRL contents invalid: ", [e getMessage]), e);
  }
}


#line 128
IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_createSigAlgParamsWithOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleAsn1X509CertificateList *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_initialize();
  @try {
    
#line 132
    id<OrgBouncycastleAsn1ASN1Encodable> parameters = [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1X509CertificateList *) nil_chk(c)) getSignatureAlgorithm])) getParameters];
    if (nil == parameters) {
      
#line 135
      return nil;
    }
    
#line 138
    return [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([parameters toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaLangException *e) {
    
#line 142
    @throw new_JavaSecurityCertCRLException_initWithNSString_(JreStrcat("$@", @"CRL contents invalid: ", e));
  }
}


#line 146
jboolean OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_isIndirectCRLWithOrgBouncycastleAsn1X509CertificateList_(OrgBouncycastleAsn1X509CertificateList *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_initialize();
  @try {
    
#line 150
    IOSByteArray *extOctets = OrgBouncycastleJcajceProviderAsymmetricX509X509CRLImpl_getExtensionOctetsWithOrgBouncycastleAsn1X509CertificateList_withNSString_(c, [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1X509Extension, issuingDistributionPoint))) getId]);
    if (nil == extOctets) {
      
#line 153
      return false;
    }
    
#line 156
    return [((OrgBouncycastleAsn1X509IssuingDistributionPoint *) nil_chk(OrgBouncycastleAsn1X509IssuingDistributionPoint_getInstanceWithId_(extOctets))) isIndirectCRL];
  }
  @catch (JavaLangException *e) {
    
#line 160
    @throw new_OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(@"Exception reading IssuingDistributionPoint", e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLObject.java"


#line 164
@implementation OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException


#line 169
- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(self, msg, cause);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(self, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  
#line 183
  return cause_X509CRLException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(initWithJavaLangThrowable:);
  methods[2].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_X509CRLException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x12, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "LJavaLangThrowable;", "cause", "LOrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException = { "X509CRLException", "org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0xa, 3, 1, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException;
}

@end


#line 169
void OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *self, NSString *msg, JavaLangThrowable *cause) {
  JavaSecurityCertCRLException_initWithNSString_(self,
#line 171
  msg);
  self->cause_X509CRLException_ = cause;
}


#line 169
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException, initWithNSString_withJavaLangThrowable_, msg, cause)
}


#line 169
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException, initWithNSString_withJavaLangThrowable_, msg, cause)
}


#line 175
void OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *self, JavaLangThrowable *cause) {
  JavaSecurityCertCRLException_init(self);
  self->cause_X509CRLException_ = cause;
}


#line 175
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException, initWithJavaLangThrowable_, cause)
}


#line 175
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException, initWithJavaLangThrowable_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLObject_X509CRLException)

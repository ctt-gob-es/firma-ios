//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPrivateKey.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/Exception.h"
#include "java/math/BigInteger.h"
#include "java/security/interfaces/ECPrivateKey.h"
#include "java/security/spec/ECParameterSpec.h"
#include "java/security/spec/ECPoint.h"
#include "java/security/spec/ECPrivateKeySpec.h"
#include "java/security/spec/EllipticCurve.h"
#include "java/util/Enumeration.h"
#include "javax/security/auth/Destroyable.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/pkcs/PrivateKeyInfo.h"
#include "org/bouncycastle/asn1/sec/ECPrivateKey.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/asn1/x9/X962Parameters.h"
#include "org/bouncycastle/asn1/x9/X9ObjectIdentifiers.h"
#include "org/bouncycastle/crypto/params/ECDomainParameters.h"
#include "org/bouncycastle/crypto/params/ECPrivateKeyParameters.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPrivateKey.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPublicKey.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/ec/ECUtils.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/ECUtil.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/PKCS12BagAttributeCarrierImpl.h"
#include "org/bouncycastle/jcajce/provider/config/ProviderConfiguration.h"
#include "org/bouncycastle/jce/provider/BouncyCastleProvider.h"
#include "org/bouncycastle/jce/spec/ECParameterSpec.h"
#include "org/bouncycastle/jce/spec/ECPrivateKeySpec.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPrivateKey must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey () {
 @public
  NSString *algorithm_;
  jboolean withCompression_;
  JavaMathBigInteger *d_;
  JavaSecuritySpecECParameterSpec *ecSpec_;
  id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration_;
  OrgBouncycastleAsn1ASN1BitString *publicKey_;
  IOSByteArray *encoding_;
  OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *attrCarrier_;
}

- (void)populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)info;

- (OrgBouncycastleAsn1ASN1BitString *)getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pub;

- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg;

- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, algorithm_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, d_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, ecSpec_, JavaSecuritySpecECParameterSpec *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, configuration_, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, publicKey_, OrgBouncycastleAsn1ASN1BitString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, encoding_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, attrCarrier_, OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *)

__attribute__((unused)) static void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1BitString *OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pub);

__attribute__((unused)) static void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectInputStream *inArg);

__attribute__((unused)) static void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectOutputStream *outArg);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPrivateKey.java"


#line 36
@implementation OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 52
- (instancetype)init {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 56
- (instancetype)initWithJavaSecurityInterfacesECPrivateKey:(id<JavaSecurityInterfacesECPrivateKey>)key
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, key, configuration);
  return self;
}


#line 66
- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleJceSpecECPrivateKeySpec:(OrgBouncycastleJceSpecECPrivateKeySpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, spec, configuration);
  return self;
}


#line 92
- (instancetype)initWithNSString:(NSString *)algorithm
withJavaSecuritySpecECPrivateKeySpec:(JavaSecuritySpecECPrivateKeySpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, spec, configuration);
  return self;
}


#line 103
- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *)key {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(self, algorithm, key);
  return self;
}


#line 116
- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, params, pubKey, spec, configuration);
  return self;
}


#line 146
- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
withOrgBouncycastleJceSpecECParameterSpec:(OrgBouncycastleJceSpecECParameterSpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, params, pubKey, spec, configuration);
  return self;
}


#line 185
- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, params, configuration);
  return self;
}


#line 196
- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)info
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(self, algorithm, info, configuration);
  return self;
}


#line 207
- (void)populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)info {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, info);
}


#line 231
- (NSString *)getAlgorithm {
  
#line 234
  return algorithm_;
}


#line 242
- (NSString *)getFormat {
  
#line 245
  return @"PKCS#8";
}


#line 254
- (IOSByteArray *)getEncoded {
  
#line 257
  if (encoding_ == nil) {
    
#line 259
    OrgBouncycastleAsn1X9X962Parameters *params = OrgBouncycastleJcajceProviderAsymmetricEcECUtils_getDomainParametersFromNameWithJavaSecuritySpecECParameterSpec_withBoolean_(ecSpec_, withCompression_);
    
#line 261
    jint orderBitLength;
    if (ecSpec_ == nil) {
      
#line 264
      orderBitLength = OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_getOrderBitLengthWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaMathBigInteger_withJavaMathBigInteger_(configuration_, nil, [self getS]);
    }
    else {
      
#line 268
      orderBitLength = OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_getOrderBitLengthWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaMathBigInteger_withJavaMathBigInteger_(configuration_, [ecSpec_ getOrder], [self getS]);
    }
    
#line 271
    OrgBouncycastleAsn1PkcsPrivateKeyInfo *info;
    OrgBouncycastleAsn1SecECPrivateKey *keyStructure;
    
#line 274
    if (publicKey_ != nil) {
      
#line 276
      keyStructure = new_OrgBouncycastleAsn1SecECPrivateKey_initWithInt_withJavaMathBigInteger_withOrgBouncycastleAsn1ASN1BitString_withOrgBouncycastleAsn1ASN1Encodable_(orderBitLength, [self getS], publicKey_, params);
    }
    else {
      
#line 280
      keyStructure = new_OrgBouncycastleAsn1SecECPrivateKey_initWithInt_withJavaMathBigInteger_withOrgBouncycastleAsn1ASN1Encodable_(orderBitLength, [self getS], params);
    }
    
#line 283
    @try {
      
#line 285
      info = new_OrgBouncycastleAsn1PkcsPrivateKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(JreLoadStatic(OrgBouncycastleAsn1X9X9ObjectIdentifiers, id_ecPublicKey), params), keyStructure);
      
#line 287
      encoding_ = [info getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
    }
    @catch (JavaIoIOException *e) {
      
#line 291
      return nil;
    }
  }
  
#line 295
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(encoding_);
}


#line 298
- (JavaSecuritySpecECParameterSpec *)getParams {
  
#line 301
  return ecSpec_;
}

- (OrgBouncycastleJceSpecECParameterSpec *)getParameters {
  
#line 307
  if (ecSpec_ == nil) {
    
#line 309
    return nil;
  }
  
#line 312
  return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_(ecSpec_);
}


#line 315
- (OrgBouncycastleJceSpecECParameterSpec *)engineGetSpec {
  
#line 317
  if (ecSpec_ != nil) {
    
#line 319
    return OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_(ecSpec_);
  }
  
#line 322
  return [((id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>) nil_chk(configuration_)) getEcImplicitlyCa];
}


#line 325
- (JavaMathBigInteger *)getS {
  
#line 328
  return d_;
}

- (JavaMathBigInteger *)getD {
  
#line 334
  return d_;
}

- (void)setBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                              withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)attribute {
  
#line 342
  [((OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) setBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withOrgBouncycastleAsn1ASN1Encodable:attribute];
}


#line 345
- (id<OrgBouncycastleAsn1ASN1Encodable>)getBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 349
  return [((OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
}


#line 352
- (id<JavaUtilEnumeration>)getBagAttributeKeys {
  
#line 355
  return [((OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl *) nil_chk(attrCarrier_)) getBagAttributeKeys];
}

- (void)setPointFormatWithNSString:(NSString *)style {
  
#line 361
  withCompression_ = !([@"UNCOMPRESSED" java_equalsIgnoreCase:style]);
}

- (jboolean)isEqual:(id)o {
  
#line 367
  if ([JavaSecurityInterfacesECPrivateKey_class_() isInstance:o]) {
    
#line 369
    id<JavaSecurityInterfacesECPrivateKey> other = (id<JavaSecurityInterfacesECPrivateKey>) cast_check(o, JavaSecurityInterfacesECPrivateKey_class_());
    
#line 371
    return OrgBouncycastleUtilArrays_constantTimeAreEqualWithByteArray_withByteArray_([self getEncoded], [((id<JavaSecurityInterfacesECPrivateKey>) nil_chk(other)) getEncoded]);
  }
  
#line 374
  return false;
}


#line 377
- (NSUInteger)hash {
  
#line 380
  return ((jint) [((JavaMathBigInteger *) nil_chk([self getD])) hash]) ^ ((jint) [((OrgBouncycastleJceSpecECParameterSpec *) nil_chk([self engineGetSpec])) hash]);
}

- (NSString *)description {
  
#line 386
  return OrgBouncycastleJcajceProviderAsymmetricUtilECUtil_privateKeyToStringWithNSString_withJavaMathBigInteger_withOrgBouncycastleJceSpecECParameterSpec_(@"EC", d_, [self engineGetSpec]);
}

- (OrgBouncycastleAsn1ASN1BitString *)getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pub {
  return OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(self, pub);
}


#line 403
- (void)readObjectWithJavaIoObjectInputStream:(JavaIoObjectInputStream *)inArg {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(self, inArg);
}


#line 418
- (void)writeObjectWithJavaIoObjectOutputStream:(JavaIoObjectOutputStream *)outArg {
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(self, outArg);
}

- (void)destroy {
  JavaxSecurityAuthDestroyable_destroy(self);
}

- (jboolean)isDestroyed {
  return JavaxSecurityAuthDestroyable_isDestroyed(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 10, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecuritySpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleJceSpecECParameterSpec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleJceSpecECParameterSpec;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 17, 18, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 19, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 20, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1BitString;", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 23, 24, 25, -1, -1, -1 },
    { NULL, "V", 0x2, 26, 27, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaSecurityInterfacesECPrivateKey:withOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[2].selector = @selector(initWithNSString:withOrgBouncycastleJceSpecECPrivateKeySpec:withOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[3].selector = @selector(initWithNSString:withJavaSecuritySpecECPrivateKeySpec:withOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[4].selector = @selector(initWithNSString:withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey:);
  methods[5].selector = @selector(initWithNSString:withOrgBouncycastleCryptoParamsECPrivateKeyParameters:withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:withJavaSecuritySpecECParameterSpec:withOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[6].selector = @selector(initWithNSString:withOrgBouncycastleCryptoParamsECPrivateKeyParameters:withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:withOrgBouncycastleJceSpecECParameterSpec:withOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[7].selector = @selector(initWithNSString:withOrgBouncycastleCryptoParamsECPrivateKeyParameters:withOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[8].selector = @selector(initWithNSString:withOrgBouncycastleAsn1PkcsPrivateKeyInfo:withOrgBouncycastleJcajceProviderConfigProviderConfiguration:);
  methods[9].selector = @selector(populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:);
  methods[10].selector = @selector(getAlgorithm);
  methods[11].selector = @selector(getFormat);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getParams);
  methods[14].selector = @selector(getParameters);
  methods[15].selector = @selector(engineGetSpec);
  methods[16].selector = @selector(getS);
  methods[17].selector = @selector(getD);
  methods[18].selector = @selector(setBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[19].selector = @selector(getBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[20].selector = @selector(getBagAttributeKeys);
  methods[21].selector = @selector(setPointFormatWithNSString:);
  methods[22].selector = @selector(isEqual:);
  methods[23].selector = @selector(hash);
  methods[24].selector = @selector(description);
  methods[25].selector = @selector(getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:);
  methods[26].selector = @selector(readObjectWithJavaIoObjectInputStream:);
  methods[27].selector = @selector(writeObjectWithJavaIoObjectOutputStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_serialVersionUID, 0x18, -1, -1, -1, -1 },
    { "algorithm_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "withCompression_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "d_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "ecSpec_", "LJavaSecuritySpecECParameterSpec;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "configuration_", "LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "publicKey_", "LOrgBouncycastleAsn1ASN1BitString;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "encoding_", "[B", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "attrCarrier_", "LOrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaSecurityInterfacesECPrivateKey;LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LOrgBouncycastleJceSpecECPrivateKeySpec;LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LJavaSecuritySpecECPrivateKeySpec;LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey;", "LNSString;LOrgBouncycastleCryptoParamsECPrivateKeyParameters;LOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;LJavaSecuritySpecECParameterSpec;LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LOrgBouncycastleCryptoParamsECPrivateKeyParameters;LOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;LOrgBouncycastleJceSpecECParameterSpec;LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LOrgBouncycastleCryptoParamsECPrivateKeyParameters;LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LNSString;LOrgBouncycastleAsn1PkcsPrivateKeyInfo;LOrgBouncycastleJcajceProviderConfigProviderConfiguration;", "LJavaIoIOException;", "populateFromPrivKeyInfo", "LOrgBouncycastleAsn1PkcsPrivateKeyInfo;", "setBagAttribute", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LOrgBouncycastleAsn1ASN1Encodable;", "getBagAttribute", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "setPointFormat", "LNSString;", "equals", "LNSObject;", "hashCode", "toString", "getPublicKeyDetails", "LOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;", "readObject", "LJavaIoObjectInputStream;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "writeObject", "LJavaIoObjectOutputStream;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey = { "BCECPrivateKey", "org.bouncycastle.jcajce.provider.asymmetric.ec", ptrTable, methods, fields, 7, 0x1, 28, 9, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey;
}

@end


#line 52
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
}


#line 52
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, init)
}


#line 52
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, init)
}

void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, id<JavaSecurityInterfacesECPrivateKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 60
  self->d_ = [((id<JavaSecurityInterfacesECPrivateKey>) nil_chk(key)) getS];
  self->algorithm_ = [key getAlgorithm];
  self->ecSpec_ = [key getParams];
  self->configuration_ = configuration;
}


#line 56
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, key, configuration)
}


#line 56
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, key, configuration)
}


#line 66
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleJceSpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 71
  self->algorithm_ = algorithm;
  self->d_ = [((OrgBouncycastleJceSpecECPrivateKeySpec *) nil_chk(spec)) getD];
  
#line 74
  if ([spec getParams] != nil) {
    
#line 76
    OrgBouncycastleMathEcECCurve *curve = [((OrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getCurve];
    JavaSecuritySpecEllipticCurve *ellipticCurve;
    
#line 79
    ellipticCurve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(curve, [((OrgBouncycastleJceSpecECParameterSpec *) nil_chk([spec getParams])) getSeed]);
    
#line 81
    self->ecSpec_ = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, [spec getParams]);
  }
  else {
    
#line 85
    self->ecSpec_ = nil;
  }
  
#line 88
  self->configuration_ = configuration;
}


#line 66
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleJceSpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}


#line 66
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleJceSpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}


#line 92
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 97
  self->algorithm_ = algorithm;
  self->d_ = [((JavaSecuritySpecECPrivateKeySpec *) nil_chk(spec)) getS];
  self->ecSpec_ = [spec getParams];
  self->configuration_ = configuration;
}


#line 92
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}


#line 92
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, spec, configuration)
}


#line 103
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 107
  self->algorithm_ = algorithm;
  self->d_ = ((OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *) nil_chk(key))->d_;
  self->ecSpec_ = key->ecSpec_;
  self->withCompression_ = key->withCompression_;
  self->attrCarrier_ = key->attrCarrier_;
  self->publicKey_ = key->publicKey_;
  self->configuration_ = key->configuration_;
}


#line 103
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_, algorithm, key)
}


#line 103
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_, algorithm, key)
}


#line 116
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 123
  self->algorithm_ = algorithm;
  self->d_ = [((OrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->configuration_ = configuration;
  
#line 127
  if (spec == nil) {
    
#line 129
    OrgBouncycastleCryptoParamsECDomainParameters *dp = [params getParameters];
    JavaSecuritySpecEllipticCurve *ellipticCurve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_([((OrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    
#line 132
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(
#line 133
    ellipticCurve, OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 134
    [dp getG]),
#line 135
    [dp getN],
#line 136
    [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    
#line 140
    self->ecSpec_ = spec;
  }
  
#line 143
  self->publicKey_ = OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(self, pubKey);
}


#line 116
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}


#line 116
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}


#line 146
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 153
  self->algorithm_ = algorithm;
  self->d_ = [((OrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->configuration_ = configuration;
  
#line 157
  if (spec == nil) {
    
#line 159
    OrgBouncycastleCryptoParamsECDomainParameters *dp = [params getParameters];
    JavaSecuritySpecEllipticCurve *ellipticCurve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_([((OrgBouncycastleCryptoParamsECDomainParameters *) nil_chk(dp)) getCurve], [dp getSeed]);
    
#line 162
    self->ecSpec_ = new_JavaSecuritySpecECParameterSpec_initWithJavaSecuritySpecEllipticCurve_withJavaSecuritySpecECPoint_withJavaMathBigInteger_withInt_(
#line 163
    ellipticCurve, OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(
#line 164
    [dp getG]),
#line 165
    [dp getN],
#line 166
    [((JavaMathBigInteger *) nil_chk([dp getH])) intValue]);
  }
  else {
    
#line 170
    JavaSecuritySpecEllipticCurve *ellipticCurve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_([spec getCurve], [spec getSeed]);
    
#line 172
    self->ecSpec_ = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withOrgBouncycastleJceSpecECParameterSpec_(ellipticCurve, spec);
  }
  
#line 175
  @try {
    
#line 177
    self->publicKey_ = OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(self, pubKey);
  }
  @catch (JavaLangException *e) {
    
#line 181
    self->publicKey_ = nil;
  }
}


#line 146
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}


#line 146
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, pubKey, spec, configuration)
}


#line 185
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 190
  self->algorithm_ = algorithm;
  self->d_ = [((OrgBouncycastleCryptoParamsECPrivateKeyParameters *) nil_chk(params)) getD];
  self->ecSpec_ = nil;
  self->configuration_ = configuration;
}


#line 185
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, configuration)
}


#line 185
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, params, configuration)
}


#line 196
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  NSObject_init(self);
  self->algorithm_ =
#line 41
  @"EC";
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
  
#line 202
  self->algorithm_ = algorithm;
  self->configuration_ = configuration;
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, info);
}


#line 196
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, info, configuration)
}


#line 196
OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_, algorithm, info, configuration)
}


#line 207
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info) {
  
#line 210
  OrgBouncycastleAsn1X9X962Parameters *params = OrgBouncycastleAsn1X9X962Parameters_getInstanceWithId_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1PkcsPrivateKeyInfo *) nil_chk(info)) getPrivateKeyAlgorithm])) getParameters]);
  
#line 212
  OrgBouncycastleMathEcECCurve *curve = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withOrgBouncycastleAsn1X9X962Parameters_(self->configuration_, params);
  self->ecSpec_ = OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleAsn1X9X962Parameters_withOrgBouncycastleMathEcECCurve_(params, curve);
  
#line 215
  id<OrgBouncycastleAsn1ASN1Encodable> privKey = [info parsePrivateKey];
  if ([privKey isKindOfClass:[OrgBouncycastleAsn1ASN1Integer class]]) {
    
#line 218
    OrgBouncycastleAsn1ASN1Integer *derD = OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_(privKey);
    
#line 220
    self->d_ = [((OrgBouncycastleAsn1ASN1Integer *) nil_chk(derD)) getValue];
  }
  else {
    
#line 224
    OrgBouncycastleAsn1SecECPrivateKey *ec = OrgBouncycastleAsn1SecECPrivateKey_getInstanceWithId_(privKey);
    
#line 226
    self->d_ = [((OrgBouncycastleAsn1SecECPrivateKey *) nil_chk(ec)) getKey];
    self->publicKey_ = [ec getPublicKey];
  }
}


#line 389
OrgBouncycastleAsn1ASN1BitString *OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_getPublicKeyDetailsWithOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pub) {
  
#line 391
  @try {
    
#line 393
    OrgBouncycastleAsn1X509SubjectPublicKeyInfo *info = OrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_([((OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *) nil_chk(pub)) getEncoded]));
    
#line 395
    return [((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(info)) getPublicKeyData];
  }
  @catch (JavaIoIOException *e) {
    
#line 399
    return nil;
  }
}


#line 403
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_readObjectWithJavaIoObjectInputStream_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectInputStream *inArg) {
  
#line 407
  [((JavaIoObjectInputStream *) nil_chk(inArg)) defaultReadObject];
  
#line 409
  IOSByteArray *enc = (IOSByteArray *) cast_chk([inArg readObject], [IOSByteArray class]);
  
#line 411
  self->configuration_ = JreLoadStatic(OrgBouncycastleJceProviderBouncyCastleProvider, CONFIGURATION);
  
#line 413
  OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_populateFromPrivKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(self, OrgBouncycastleAsn1PkcsPrivateKeyInfo_getInstanceWithId_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(enc)));
  
#line 415
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
}


#line 418
void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_writeObjectWithJavaIoObjectOutputStream_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, JavaIoObjectOutputStream *outArg) {
  
#line 422
  [((JavaIoObjectOutputStream *) nil_chk(outArg)) defaultWriteObject];
  
#line 424
  [outArg writeObjectWithId:[self getEncoded]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/security/InvalidAlgorithmParameterException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/Key.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/security/SecureRandom.h"
#include "java/security/spec/AlgorithmParameterSpec.h"
#include "java/util/HashMap.h"
#include "java/util/Hashtable.h"
#include "java/util/Map.h"
#include "javax/crypto/KeyAgreementSpi.h"
#include "javax/crypto/SecretKey.h"
#include "javax/crypto/ShortBufferException.h"
#include "javax/crypto/spec/SecretKeySpec.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/cryptopro/CryptoProObjectIdentifiers.h"
#include "org/bouncycastle/asn1/gnu/GNUObjectIdentifiers.h"
#include "org/bouncycastle/asn1/kisa/KISAObjectIdentifiers.h"
#include "org/bouncycastle/asn1/misc/MiscObjectIdentifiers.h"
#include "org/bouncycastle/asn1/nist/NISTObjectIdentifiers.h"
#include "org/bouncycastle/asn1/ntt/NTTObjectIdentifiers.h"
#include "org/bouncycastle/asn1/oiw/OIWObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/crypto/DerivationFunction.h"
#include "org/bouncycastle/crypto/agreement/kdf/DHKDFParameters.h"
#include "org/bouncycastle/crypto/agreement/kdf/DHKEKGenerator.h"
#include "org/bouncycastle/crypto/params/DESParameters.h"
#include "org/bouncycastle/crypto/params/KDFParameters.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi.h"
#include "org/bouncycastle/jcajce/spec/HybridValueParameterSpec.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Integers.h"
#include "org/bouncycastle/util/Strings.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi () {
 @public
  OrgBouncycastleJcajceSpecHybridValueParameterSpec *hybridSpec_;
}

- (IOSByteArray *)getSharedSecretBytesWithByteArray:(IOSByteArray *)secret
                                       withNSString:(NSString *)oidAlgorithm
                                            withInt:(jint)keySize;

- (IOSByteArray *)calcSecret;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, hybridSpec_, OrgBouncycastleJcajceSpecHybridValueParameterSpec *)

inline id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_defaultOids(void);
static id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, defaultOids, id<JavaUtilMap>)

inline id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_keySizes(void);
static id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, keySizes, id<JavaUtilMap>)

inline id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_nameTable(void);
static id<JavaUtilMap> OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, nameTable, id<JavaUtilMap>)

inline JavaUtilHashtable *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_oids(void);
static JavaUtilHashtable *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, oids, JavaUtilHashtable *)

inline JavaUtilHashtable *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_get_des(void);
static JavaUtilHashtable *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, des, JavaUtilHashtable *)

__attribute__((unused)) static IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, IOSByteArray *secret, NSString *oidAlgorithm, jint keySize);

__attribute__((unused)) static IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_calcSecret(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)


#line 37
@implementation OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi


#line 155
- (instancetype)initWithNSString:(NSString *)kaAlgorithm
withOrgBouncycastleCryptoDerivationFunction:(id<OrgBouncycastleCryptoDerivationFunction>)kdf {
  OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withOrgBouncycastleCryptoDerivationFunction_(self, kaAlgorithm, kdf);
  return self;
}

+ (NSString *)getAlgorithmWithNSString:(NSString *)algDetails {
  return OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(algDetails);
}


#line 187
+ (jint)getKeySizeWithNSString:(NSString *)algDetails {
  return OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(algDetails);
}


#line 203
+ (IOSByteArray *)trimZeroesWithByteArray:(IOSByteArray *)secret {
  return OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_trimZeroesWithByteArray_(secret);
}


#line 225
- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  
#line 231
  @try {
    
#line 233
    [self doInitFromKeyWithJavaSecurityKey:key withJavaSecuritySpecAlgorithmParameterSpec:nil withJavaSecuritySecureRandom:random];
  }
  @catch (JavaSecurityInvalidAlgorithmParameterException *e) {
    
#line 238
    @throw new_JavaSecurityInvalidKeyException_initWithNSString_([e getMessage]);
  }
}


#line 242
- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  
#line 249
  if ([params isKindOfClass:[OrgBouncycastleJcajceSpecHybridValueParameterSpec class]]) {
    
#line 251
    hybridSpec_ = (OrgBouncycastleJcajceSpecHybridValueParameterSpec *) params;
    [self doInitFromKeyWithJavaSecurityKey:key withJavaSecuritySpecAlgorithmParameterSpec:[((OrgBouncycastleJcajceSpecHybridValueParameterSpec *) nil_chk(hybridSpec_)) getBaseParameterSpec] withJavaSecuritySecureRandom:random];
  }
  else {
    
#line 256
    hybridSpec_ = nil;
    [self doInitFromKeyWithJavaSecurityKey:key withJavaSecuritySpecAlgorithmParameterSpec:params withJavaSecuritySecureRandom:random];
  }
}

- (IOSByteArray *)engineGenerateSecret {
  
#line 265
  if (kdf_ != nil) {
    
#line 267
    IOSByteArray *secret = OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_calcSecret(self);
    @try {
      
#line 270
      return OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(self, secret, nil, ((IOSByteArray *) nil_chk(secret))->size_ * 8);
    }
    @catch (JavaSecurityNoSuchAlgorithmException *e) {
      
#line 274
      @throw new_JavaLangIllegalStateException_initWithNSString_([e getMessage]);
    }
  }
  
#line 278
  return OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_calcSecret(self);
}


#line 281
- (jint)engineGenerateSecretWithByteArray:(IOSByteArray *)sharedSecret
                                  withInt:(jint)offset {
  
#line 287
  IOSByteArray *secret = [self engineGenerateSecret];
  
#line 289
  if (((IOSByteArray *) nil_chk(sharedSecret))->size_ - offset < ((IOSByteArray *) nil_chk(secret))->size_) {
    
#line 291
    @throw new_JavaxCryptoShortBufferException_initWithNSString_(JreStrcat("$$I$", kaAlgorithm_, @" key agreement: need ", secret->size_, @" bytes"));
  }
  
#line 294
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(secret, 0, sharedSecret, offset, secret->size_);
  
#line 296
  return secret->size_;
}


#line 299
- (id<JavaxCryptoSecretKey>)engineGenerateSecretWithNSString:(NSString *)algorithm {
  
#line 304
  NSString *algKey = OrgBouncycastleUtilStrings_toUpperCaseWithNSString_(algorithm);
  NSString *oidAlgorithm = algorithm;
  
#line 307
  if ([((JavaUtilHashtable *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids)) containsKeyWithId:algKey]) {
    
#line 309
    oidAlgorithm = [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(((OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids getWithId:algKey], [OrgBouncycastleAsn1ASN1ObjectIdentifier class])))) getId];
  }
  
#line 312
  jint keySize = OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(oidAlgorithm);
  
#line 314
  IOSByteArray *secret = OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(self, OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_calcSecret(self), oidAlgorithm, keySize);
  
#line 316
  NSString *algName = OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(algorithm);
  
#line 318
  if ([((JavaUtilHashtable *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des)) containsKeyWithId:algName]) {
    
#line 320
    OrgBouncycastleCryptoParamsDESParameters_setOddParityWithByteArray_(secret);
  }
  
#line 323
  return new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(secret, algName);
}


#line 326
- (IOSByteArray *)getSharedSecretBytesWithByteArray:(IOSByteArray *)secret
                                       withNSString:(NSString *)oidAlgorithm
                                            withInt:(jint)keySize {
  return OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(self, secret, oidAlgorithm, keySize);
}


#line 386
- (IOSByteArray *)calcSecret {
  return OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_calcSecret(self);
}


#line 404
- (IOSByteArray *)doCalcSecret {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 406
- (void)doInitFromKeyWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)parameterSpec
            withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0xc, 3, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0xc, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 9, 10, -1, -1, -1 },
    { NULL, "[B", 0x4, -1, -1, 11, -1, -1, -1 },
    { NULL, "I", 0x4, 12, 13, 14, -1, -1, -1 },
    { NULL, "LJavaxCryptoSecretKey;", 0x4, 12, 2, 15, -1, -1, -1 },
    { NULL, "[B", 0x2, 16, 17, 15, -1, -1, -1 },
    { NULL, "[B", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x404, 18, 9, 10, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgBouncycastleCryptoDerivationFunction:);
  methods[1].selector = @selector(getAlgorithmWithNSString:);
  methods[2].selector = @selector(getKeySizeWithNSString:);
  methods[3].selector = @selector(trimZeroesWithByteArray:);
  methods[4].selector = @selector(engineInitWithJavaSecurityKey:withJavaSecuritySecureRandom:);
  methods[5].selector = @selector(engineInitWithJavaSecurityKey:withJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  methods[6].selector = @selector(engineGenerateSecret);
  methods[7].selector = @selector(engineGenerateSecretWithByteArray:withInt:);
  methods[8].selector = @selector(engineGenerateSecretWithNSString:);
  methods[9].selector = @selector(getSharedSecretBytesWithByteArray:withNSString:withInt:);
  methods[10].selector = @selector(calcSecret);
  methods[11].selector = @selector(doCalcSecret);
  methods[12].selector = @selector(doInitFromKeyWithJavaSecurityKey:withJavaSecuritySpecAlgorithmParameterSpec:withJavaSecuritySecureRandom:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "defaultOids", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 19, 20, -1 },
    { "keySizes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 21, 22, -1 },
    { "nameTable", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 23, 24, -1 },
    { "oids", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x1a, -1, 25, -1, -1 },
    { "des", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "kaAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "kdf_", "LOrgBouncycastleCryptoDerivationFunction;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "ukmParameters_", "[B", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "hybridSpec_", "LOrgBouncycastleJcajceSpecHybridValueParameterSpec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgBouncycastleCryptoDerivationFunction;", "getAlgorithm", "LNSString;", "getKeySize", "trimZeroes", "[B", "engineInit", "LJavaSecurityKey;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidKeyException;", "LJavaSecurityKey;LJavaSecuritySpecAlgorithmParameterSpec;LJavaSecuritySecureRandom;", "LJavaSecurityInvalidKeyException;LJavaSecurityInvalidAlgorithmParameterException;", "LJavaLangIllegalStateException;", "engineGenerateSecret", "[BI", "LJavaLangIllegalStateException;LJavaxCryptoShortBufferException;", "LJavaSecurityNoSuchAlgorithmException;", "getSharedSecretBytes", "[BLNSString;I", "doInitFromKey", &OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids, "Ljava/util/Map<Ljava/lang/String;Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;>;", &OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;", &OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", &OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids, &OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi = { "BaseAgreementSpi", "org.bouncycastle.jcajce.provider.asymmetric.util", ptrTable, methods, fields, 7, 0x401, 13, 9, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi;
}

+ (void)initialize {
  if (self == [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi class]) {
    OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids = new_JavaUtilHashMap_init();
    OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes = new_JavaUtilHashMap_init();
    OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable = new_JavaUtilHashMap_init();
    OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids = new_JavaUtilHashtable_init();
    OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des = new_JavaUtilHashtable_init();
    {
      
#line 49
      JavaLangInteger *i64 = OrgBouncycastleUtilIntegers_valueOfWithInt_(64);
      JavaLangInteger *i128 = OrgBouncycastleUtilIntegers_valueOfWithInt_(128);
      JavaLangInteger *i192 = OrgBouncycastleUtilIntegers_valueOfWithInt_(192);
      JavaLangInteger *i256 = OrgBouncycastleUtilIntegers_valueOfWithInt_(256);
      
#line 54
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"DES" withId:i64];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"DESEDE" withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"BLOWFISH" withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:@"AES" withId:i256];
      
#line 59
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_ECB))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_ECB))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_ECB))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CBC))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CBC))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CFB))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CFB))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CFB))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_OFB))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_OFB))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_OFB))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CCM))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CCM))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_GCM))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_GCM))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_GCM))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap))) getId] withId:i128];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap))) getId] withId:i128];
      
#line 85
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC))) getId] withId:i192];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC))) getId] withId:i64];
      
#line 89
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR28147_gcfb))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, id_Gost28147_89_None_KeyWrap))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, id_Gost28147_89_CryptoPro_KeyWrap))) getId] withId:i256];
      
#line 93
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA1))) getId] withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(160)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA256))) getId] withId:i256];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA384))) getId] withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(384)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA512))) getId] withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(512)];
      
#line 98
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"DESEDE" withId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"AES" withId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"CAMELLIA" withId:JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"SEED" withId:JreLoadStatic(OrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_defaultOids putWithId:@"DES" withId:JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC)];
      
#line 104
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, cast5CBC))) getId] withId:@"CAST5"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, as_sys_sec_alg_ideaCBC))) getId] withId:@"IDEA"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_ECB))) getId] withId:@"Blowfish"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_CBC))) getId] withId:@"Blowfish"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_CFB))) getId] withId:@"Blowfish"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, cryptlib_algorithm_blowfish_OFB))) getId] withId:@"Blowfish"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desECB))) getId] withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC) getId] withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCFB))) getId] withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desOFB))) getId] withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desEDE))) getId] withId:@"DESede"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) getId] withId:@"DESede"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap) getId] withId:@"DESede"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMSRC2wrap))) getId] withId:@"RC2"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA1) getId] withId:@"HmacSHA1"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA224))) getId] withId:@"HmacSHA224"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA256) getId] withId:@"HmacSHA256"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA384) getId] withId:@"HmacSHA384"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_hmacWithSHA512) getId] withId:@"HmacSHA512"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_cbc))) getId] withId:@"Camellia"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_cbc))) getId] withId:@"Camellia"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_cbc))) getId] withId:@"Camellia"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap) getId] withId:@"Camellia"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap) getId] withId:@"Camellia"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap) getId] withId:@"Camellia"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap) getId] withId:@"SEED"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedCBC))) getId] withId:@"SEED"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_seedMAC))) getId] withId:@"SEED"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR28147_gcfb) getId] withId:@"GOST28147"];
      
#line 134
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap) getId] withId:@"AES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM) getId] withId:@"AES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable putWithId:[JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CCM) getId] withId:@"AES"];
      
#line 138
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids putWithId:@"DESEDE" withId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids putWithId:@"AES" withId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC)];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_oids putWithId:@"DES" withId:JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC)];
      
#line 142
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:@"DES" withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:@"DESEDE" withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:[JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, desCBC) getId] withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) getId] withId:@"DES"];
      (void) [OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_des putWithId:[JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap) getId] withId:@"DES"];
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)
  }
}

@end


#line 155
void OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withOrgBouncycastleCryptoDerivationFunction_(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, NSString *kaAlgorithm, id<OrgBouncycastleCryptoDerivationFunction> kdf) {
  JavaxCryptoKeyAgreementSpi_init(self);
  self->kaAlgorithm_ = kaAlgorithm;
  self->kdf_ = kdf;
}

NSString *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(NSString *algDetails) {
  OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initialize();
  if ([((NSString *) nil_chk(algDetails)) java_indexOf:'['] > 0) {
    
#line 165
    return [algDetails java_substring:0 endIndex:[algDetails java_indexOf:'[']];
  }
  
#line 168
  if ([algDetails java_hasPrefix:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, aes))) getId]]) {
    
#line 170
    return @"AES";
  }
  if ([algDetails java_hasPrefix:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1GnuGNUObjectIdentifiers, Serpent))) getId]]) {
    
#line 174
    return @"Serpent";
  }
  
#line 177
  NSString *name = [((id<JavaUtilMap>) nil_chk(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_nameTable)) getWithId:OrgBouncycastleUtilStrings_toUpperCaseWithNSString_(algDetails)];
  
#line 179
  if (name != nil) {
    
#line 181
    return name;
  }
  
#line 184
  return algDetails;
}


#line 187
jint OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(NSString *algDetails) {
  OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initialize();
  if ([((NSString *) nil_chk(algDetails)) java_indexOf:'['] > 0) {
    
#line 191
    return JavaLangInteger_parseIntWithNSString_([algDetails java_substring:[algDetails java_indexOf:'['] + 1 endIndex:[algDetails java_indexOf:']']]);
  }
  
#line 194
  NSString *algKey = OrgBouncycastleUtilStrings_toUpperCaseWithNSString_(algDetails);
  if (![((id<JavaUtilMap>) nil_chk(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes)) containsKeyWithId:algKey]) {
    
#line 197
    return -1;
  }
  
#line 200
  return [((JavaLangInteger *) nil_chk([OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_keySizes getWithId:algKey])) intValue];
}


#line 203
IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_trimZeroesWithByteArray_(IOSByteArray *secret) {
  OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initialize();
  if (IOSByteArray_Get(nil_chk(secret), 0) != 0) {
    
#line 207
    return secret;
  }
  else {
    
#line 211
    jint ind = 0;
    while (ind < secret->size_ && IOSByteArray_Get(secret, ind) == 0) {
      
#line 214
      ind++;
    }
    
#line 217
    IOSByteArray *rv = [IOSByteArray newArrayWithLength:secret->size_ - ind];
    
#line 219
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(secret, ind, rv, 0, rv->size_);
    
#line 221
    return rv;
  }
}


#line 326
IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getSharedSecretBytesWithByteArray_withNSString_withInt_(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, IOSByteArray *secret, NSString *oidAlgorithm, jint keySize) {
  
#line 329
  if (self->kdf_ != nil) {
    
#line 331
    if (keySize < 0) {
      
#line 333
      @throw new_JavaSecurityNoSuchAlgorithmException_initWithNSString_(JreStrcat("$$", @"unknown algorithm encountered: ", oidAlgorithm));
    }
    IOSByteArray *keyBytes = [IOSByteArray newArrayWithLength:JreIntDiv(keySize, 8)];
    
#line 337
    if ([self->kdf_ isKindOfClass:[OrgBouncycastleCryptoAgreementKdfDHKEKGenerator class]]) {
      
#line 339
      if (oidAlgorithm == nil) {
        
#line 341
        @throw new_JavaSecurityNoSuchAlgorithmException_initWithNSString_(@"algorithm OID is null");
      }
      OrgBouncycastleAsn1ASN1ObjectIdentifier *oid;
      @try {
        
#line 346
        oid = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(oidAlgorithm);
      }
      @catch (JavaLangIllegalArgumentException *e) {
        
#line 350
        @throw new_JavaSecurityNoSuchAlgorithmException_initWithNSString_(JreStrcat("$$", @"no OID for algorithm: ", oidAlgorithm));
      }
      OrgBouncycastleCryptoAgreementKdfDHKDFParameters *params = new_OrgBouncycastleCryptoAgreementKdfDHKDFParameters_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withInt_withByteArray_withByteArray_(oid, keySize, secret, self->ukmParameters_);
      
#line 354
      [self->kdf_ init__WithOrgBouncycastleCryptoDerivationParameters:params];
    }
    else {
      
#line 358
      OrgBouncycastleCryptoParamsKDFParameters *params = new_OrgBouncycastleCryptoParamsKDFParameters_initWithByteArray_withByteArray_(secret, self->ukmParameters_);
      
#line 360
      [self->kdf_ init__WithOrgBouncycastleCryptoDerivationParameters:params];
    }
    
#line 363
    [self->kdf_ generateBytesWithByteArray:keyBytes withInt:0 withInt:keyBytes->size_];
    
#line 365
    OrgBouncycastleUtilArrays_clearWithByteArray_(secret);
    
#line 367
    return keyBytes;
  }
  else {
    
#line 371
    if (keySize > 0) {
      
#line 373
      IOSByteArray *keyBytes = [IOSByteArray newArrayWithLength:JreIntDiv(keySize, 8)];
      
#line 375
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(secret, 0, keyBytes, 0, keyBytes->size_);
      
#line 377
      OrgBouncycastleUtilArrays_clearWithByteArray_(secret);
      
#line 379
      return keyBytes;
    }
    
#line 382
    return secret;
  }
}


#line 386
IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_calcSecret(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self) {
  
#line 388
  if (self->hybridSpec_ != nil) {
    
#line 391
    IOSByteArray *s = [self doCalcSecret];
    IOSByteArray *sec = OrgBouncycastleUtilArrays_concatenateWithByteArray_withByteArray_(s, [((OrgBouncycastleJcajceSpecHybridValueParameterSpec *) nil_chk(self->hybridSpec_)) getT]);
    
#line 394
    OrgBouncycastleUtilArrays_clearWithByteArray_(s);
    
#line 396
    return sec;
  }
  else {
    
#line 400
    return [self doCalcSecret];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateObject.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/security/PublicKey.h"
#include "java/security/cert/CertificateEncodingException.h"
#include "java/security/cert/CertificateExpiredException.h"
#include "java/security/cert/CertificateNotYetValidException.h"
#include "java/security/cert/CertificateParsingException.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "javax/security/auth/x500/X500Principal.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DERBitString.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/BasicConstraints.h"
#include "org/bouncycastle/asn1/x509/Certificate.h"
#include "org/bouncycastle/asn1/x509/Time.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/util/PKCS12BagAttributeCarrierImpl.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateImpl.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateInternal.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateObject.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509SignatureUtil.h"
#include "org/bouncycastle/jcajce/util/JcaJceHelper.h"
#include "org/bouncycastle/jce/interfaces/PKCS12BagAttributeCarrier.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateObject must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject () {
 @public
  id cacheLock_;
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *internalCertificateValue_;
  JavaxSecurityAuthX500X500Principal *issuerValue_;
  id<JavaSecurityPublicKey> publicKeyValue_;
  JavaxSecurityAuthX500X500Principal *subjectValue_;
  IOSLongArray *validityValues_;
  volatile_jboolean hashValueSet_;
  volatile_jint hashValue_;
  id<OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier> attrCarrier_;
}

- (OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *)getInternalCertificate;

+ (OrgBouncycastleAsn1X509BasicConstraints *)createBasicConstraintsWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c;

+ (IOSBooleanArray *)createKeyUsageWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c;

+ (NSString *)createSigAlgNameWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c;

+ (IOSByteArray *)createSigAlgParamsWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, cacheLock_, id)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, internalCertificateValue_, OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, issuerValue_, JavaxSecurityAuthX500X500Principal *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, publicKeyValue_, id<JavaSecurityPublicKey>)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, subjectValue_, JavaxSecurityAuthX500X500Principal *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, validityValues_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, attrCarrier_, id<OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier>)

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *self);

__attribute__((unused)) static OrgBouncycastleAsn1X509BasicConstraints *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createBasicConstraintsWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c);

__attribute__((unused)) static IOSBooleanArray *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createKeyUsageWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c);

__attribute__((unused)) static NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgNameWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c);

__attribute__((unused)) static IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgParamsWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c);

@interface OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException : JavaSecurityCertCertificateEncodingException {
 @public
  JavaLangThrowable *cause_X509CertificateEncodingException_;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException)

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException, cause_X509CertificateEncodingException_, JavaLangThrowable *)

__attribute__((unused)) static void OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException *self, JavaLangThrowable *cause);

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateObject.java"


#line 26
@implementation OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject


#line 42
- (instancetype)initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper:(id<OrgBouncycastleJcajceUtilJcaJceHelper>)bcHelper
                                     withOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_(self, bcHelper, c);
  return self;
}

- (void)checkValidityWithJavaUtilDate:(JavaUtilDate *)date {
  
#line 51
  jlong checkTime = [((JavaUtilDate *) nil_chk(date)) getTime];
  IOSLongArray *validityValues = [self getValidityValues];
  
#line 54
  if (checkTime > IOSLongArray_Get(nil_chk(validityValues), 1)) {
    
#line 56
    @throw new_JavaSecurityCertCertificateExpiredException_initWithNSString_(JreStrcat("$$", @"certificate expired on ", [((OrgBouncycastleAsn1X509Time *) nil_chk([((OrgBouncycastleAsn1X509Certificate *) nil_chk(c_)) getEndDate])) getTime]));
  }
  if (checkTime < IOSLongArray_Get(validityValues, 0)) {
    
#line 60
    @throw new_JavaSecurityCertCertificateNotYetValidException_initWithNSString_(JreStrcat("$$", @"certificate not valid till ", [((OrgBouncycastleAsn1X509Time *) nil_chk([((OrgBouncycastleAsn1X509Certificate *) nil_chk(c_)) getStartDate])) getTime]));
  }
}


#line 64
- (JavaxSecurityAuthX500X500Principal *)getIssuerX500Principal {
  
#line 67
  @synchronized(cacheLock_) {
    
#line 69
    if (nil != issuerValue_) {
      
#line 71
      return JreRetainedLocalValue(issuerValue_);
    }
  }
  
#line 75
  JavaxSecurityAuthX500X500Principal *temp = [super getIssuerX500Principal];
  
#line 77
  @synchronized(cacheLock_) {
    
#line 79
    if (nil == issuerValue_) {
      
#line 81
      issuerValue_ = temp;
    }
    
#line 84
    return JreRetainedLocalValue(issuerValue_);
  }
}


#line 88
- (id<JavaSecurityPublicKey>)getPublicKey {
  
#line 92
  @synchronized(cacheLock_) {
    
#line 94
    if (nil != publicKeyValue_) {
      
#line 96
      return JreRetainedLocalValue(publicKeyValue_);
    }
  }
  
#line 100
  id<JavaSecurityPublicKey> temp = [super getPublicKey];
  if (nil == temp) {
    
#line 103
    return nil;
  }
  
#line 106
  @synchronized(cacheLock_) {
    
#line 108
    if (nil == publicKeyValue_) {
      
#line 110
      publicKeyValue_ = temp;
    }
    
#line 113
    return JreRetainedLocalValue(publicKeyValue_);
  }
}


#line 117
- (JavaxSecurityAuthX500X500Principal *)getSubjectX500Principal {
  
#line 120
  @synchronized(cacheLock_) {
    
#line 122
    if (nil != subjectValue_) {
      
#line 124
      return JreRetainedLocalValue(subjectValue_);
    }
  }
  
#line 128
  JavaxSecurityAuthX500X500Principal *temp = [super getSubjectX500Principal];
  
#line 130
  @synchronized(cacheLock_) {
    
#line 132
    if (nil == subjectValue_) {
      
#line 134
      subjectValue_ = temp;
    }
    
#line 137
    return JreRetainedLocalValue(subjectValue_);
  }
}


#line 141
- (IOSLongArray *)getValidityValues {
  
#line 143
  @synchronized(cacheLock_) {
    
#line 145
    if (nil != validityValues_) {
      
#line 147
      return JreRetainedLocalValue(validityValues_);
    }
  }
  
#line 151
  IOSLongArray *temp = [IOSLongArray newArrayWithLongs:(jlong[]){
#line 153
    [((JavaUtilDate *) nil_chk([super getNotBefore])) getTime],
#line 154
    [((JavaUtilDate *) nil_chk([super getNotAfter])) getTime] } count:2];
    
#line 157
    @synchronized(cacheLock_) {
      
#line 159
      if (nil == validityValues_) {
        
#line 161
        validityValues_ = temp;
      }
      
#line 164
      return JreRetainedLocalValue(validityValues_);
    }
  }


#line 168
- (IOSByteArray *)getEncoded {
  
#line 172
  return OrgBouncycastleUtilArrays_cloneWithByteArray_([((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(self))) getEncoded]);
}


#line 175
- (jboolean)isEqual:(id)other {
  
#line 178
  if (JreObjectEqualsEquals(other, self)) {
    
#line 180
    return true;
  }
  
#line 183
  if ([other isKindOfClass:[OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject class]]) {
    
#line 185
    OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *otherBC = (OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *) other;
    
#line 187
    if (JreLoadVolatileBoolean(&self->hashValueSet_) && JreLoadVolatileBoolean(&((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *) nil_chk(otherBC))->hashValueSet_)) {
      
#line 189
      if (JreLoadVolatileInt(&self->hashValue_) != JreLoadVolatileInt(&((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *) nil_chk(otherBC))->hashValue_)) {
        
#line 191
        return false;
      }
    }
    else if (nil == internalCertificateValue_ || nil == ((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *) nil_chk(otherBC))->internalCertificateValue_) {
      
#line 196
      OrgBouncycastleAsn1ASN1BitString *signature = [((OrgBouncycastleAsn1X509Certificate *) nil_chk(c_)) getSignature];
      if (nil != signature && ![signature equalsWithOrgBouncycastleAsn1ASN1Primitive:[((OrgBouncycastleAsn1X509Certificate *) nil_chk(((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *) nil_chk(otherBC))->c_)) getSignature]]) {
        
#line 199
        return false;
      }
    }
    
#line 203
    return [((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(self))) isEqual:OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(nil_chk(otherBC))];
  }
  
#line 206
  return [((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(self))) isEqual:other];
}


#line 209
- (NSUInteger)hash {
  
#line 212
  if (!JreLoadVolatileBoolean(&hashValueSet_)) {
    
#line 214
    JreAssignVolatileInt(&hashValue_, ((jint) [((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(self))) hash]));
    JreAssignVolatileBoolean(&hashValueSet_, true);
  }
  
#line 218
  return JreLoadVolatileInt(&hashValue_);
}


#line 226
- (jint)originalHashCode {
  
#line 228
  @try {
    
#line 230
    jint hashCode = 0;
    IOSByteArray *certData = [((OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *) nil_chk(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(self))) getEncoded];
    for (jint i = 1; i < ((IOSByteArray *) nil_chk(certData))->size_; i++) {
      
#line 234
      hashCode += IOSByteArray_Get(certData, i) * i;
    }
    return hashCode;
  }
  @catch (JavaSecurityCertCertificateEncodingException *e) {
    
#line 240
    return 0;
  }
}


#line 244
- (void)setBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                              withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)attribute {
  
#line 247
  [((id<OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier>) nil_chk(attrCarrier_)) setBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withOrgBouncycastleAsn1ASN1Encodable:attribute];
}


#line 250
- (id<OrgBouncycastleAsn1ASN1Encodable>)getBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 253
  return [((id<OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier>) nil_chk(attrCarrier_)) getBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
}

- (id<JavaUtilEnumeration>)getBagAttributeKeys {
  
#line 259
  return [((id<OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier>) nil_chk(attrCarrier_)) getBagAttributeKeys];
}

- (OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *)getInternalCertificate {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(self);
}


#line 297
+ (OrgBouncycastleAsn1X509BasicConstraints *)createBasicConstraintsWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createBasicConstraintsWithOrgBouncycastleAsn1X509Certificate_(c);
}


#line 316
+ (IOSBooleanArray *)createKeyUsageWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createKeyUsageWithOrgBouncycastleAsn1X509Certificate_(c);
}


#line 346
+ (NSString *)createSigAlgNameWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgNameWithOrgBouncycastleAsn1X509Certificate_(c);
}


#line 358
+ (IOSByteArray *)createSigAlgParamsWithOrgBouncycastleAsn1X509Certificate:(OrgBouncycastleAsn1X509Certificate *)c {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgParamsWithOrgBouncycastleAsn1X509Certificate_(c);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LJavaxSecurityAuthX500X500Principal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityPublicKey;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxSecurityAuthX500X500Principal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509BasicConstraints;", 0xa, 13, 14, 1, -1, -1, -1 },
    { NULL, "[Z", 0xa, 15, 14, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 16, 14, 1, -1, -1, -1 },
    { NULL, "[B", 0xa, 17, 14, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper:withOrgBouncycastleAsn1X509Certificate:);
  methods[1].selector = @selector(checkValidityWithJavaUtilDate:);
  methods[2].selector = @selector(getIssuerX500Principal);
  methods[3].selector = @selector(getPublicKey);
  methods[4].selector = @selector(getSubjectX500Principal);
  methods[5].selector = @selector(getValidityValues);
  methods[6].selector = @selector(getEncoded);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(originalHashCode);
  methods[10].selector = @selector(setBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[11].selector = @selector(getBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[12].selector = @selector(getBagAttributeKeys);
  methods[13].selector = @selector(getInternalCertificate);
  methods[14].selector = @selector(createBasicConstraintsWithOrgBouncycastleAsn1X509Certificate:);
  methods[15].selector = @selector(createKeyUsageWithOrgBouncycastleAsn1X509Certificate:);
  methods[16].selector = @selector(createSigAlgNameWithOrgBouncycastleAsn1X509Certificate:);
  methods[17].selector = @selector(createSigAlgParamsWithOrgBouncycastleAsn1X509Certificate:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cacheLock_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "internalCertificateValue_", "LOrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuerValue_", "LJavaxSecurityAuthX500X500Principal;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "publicKeyValue_", "LJavaSecurityPublicKey;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "subjectValue_", "LJavaxSecurityAuthX500X500Principal;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "validityValues_", "[J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashValueSet_", "Z", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "hashValue_", "I", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "attrCarrier_", "LOrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleJcajceUtilJcaJceHelper;LOrgBouncycastleAsn1X509Certificate;", "LJavaSecurityCertCertificateParsingException;", "checkValidity", "LJavaUtilDate;", "LJavaSecurityCertCertificateExpiredException;LJavaSecurityCertCertificateNotYetValidException;", "LJavaSecurityCertCertificateEncodingException;", "equals", "LNSObject;", "hashCode", "setBagAttribute", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LOrgBouncycastleAsn1ASN1Encodable;", "getBagAttribute", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "createBasicConstraints", "LOrgBouncycastleAsn1X509Certificate;", "createKeyUsage", "createSigAlgName", "createSigAlgParams", "LOrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject = { "X509CertificateObject", "org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 18, 9, -1, 18, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject;
}

@end


#line 42
void OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *self, id<OrgBouncycastleJcajceUtilJcaJceHelper> bcHelper, OrgBouncycastleAsn1X509Certificate *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateImpl_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_withOrgBouncycastleAsn1X509BasicConstraints_withBooleanArray_withNSString_withByteArray_(self,
#line 45
  bcHelper, c, OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createBasicConstraintsWithOrgBouncycastleAsn1X509Certificate_(c), OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createKeyUsageWithOrgBouncycastleAsn1X509Certificate_(c), OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgNameWithOrgBouncycastleAsn1X509Certificate_(c), OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgParamsWithOrgBouncycastleAsn1X509Certificate_(c));
  self->cacheLock_ = new_NSObject_init();
  self->attrCarrier_ = new_OrgBouncycastleJcajceProviderAsymmetricUtilPKCS12BagAttributeCarrierImpl_init();
}


#line 42
OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_(id<OrgBouncycastleJcajceUtilJcaJceHelper> bcHelper, OrgBouncycastleAsn1X509Certificate *c) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_, bcHelper, c)
}


#line 42
OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_(id<OrgBouncycastleJcajceUtilJcaJceHelper> bcHelper, OrgBouncycastleAsn1X509Certificate *c) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject, initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_, bcHelper, c)
}


#line 262
OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_getInternalCertificate(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject *self) {
  
#line 264
  @synchronized(self->cacheLock_) {
    
#line 266
    if (nil != self->internalCertificateValue_) {
      
#line 268
      return JreRetainedLocalValue(self->internalCertificateValue_);
    }
  }
  
#line 272
  IOSByteArray *encoding = nil;
  JavaSecurityCertCertificateEncodingException *exception = nil;
  @try {
    
#line 276
    encoding = [((OrgBouncycastleAsn1X509Certificate *) nil_chk(self->c_)) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    
#line 280
    exception = new_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(e);
  }
  
#line 283
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal *temp = new_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateInternal_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_withOrgBouncycastleAsn1X509Certificate_withOrgBouncycastleAsn1X509BasicConstraints_withBooleanArray_withNSString_withByteArray_withByteArray_withJavaSecurityCertCertificateEncodingException_(self->bcHelper_, self->c_, self->basicConstraints_, self->keyUsage_, self->sigAlgName_, self->sigAlgParams_,
#line 284
  encoding, exception);
  
#line 286
  @synchronized(self->cacheLock_) {
    
#line 288
    if (nil == self->internalCertificateValue_) {
      
#line 290
      self->internalCertificateValue_ = temp;
    }
    
#line 293
    return JreRetainedLocalValue(self->internalCertificateValue_);
  }
}


#line 297
OrgBouncycastleAsn1X509BasicConstraints *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createBasicConstraintsWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initialize();
  
#line 300
  @try {
    
#line 302
    IOSByteArray *extOctets = OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateImpl_getExtensionOctetsWithOrgBouncycastleAsn1X509Certificate_withNSString_(c, @"2.5.29.19");
    if (nil == extOctets) {
      
#line 305
      return nil;
    }
    
#line 308
    return OrgBouncycastleAsn1X509BasicConstraints_getInstanceWithId_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(extOctets));
  }
  @catch (JavaLangException *e) {
    
#line 312
    @throw new_JavaSecurityCertCertificateParsingException_initWithNSString_(JreStrcat("$@", @"cannot construct BasicConstraints: ", e));
  }
}


#line 316
IOSBooleanArray *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createKeyUsageWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initialize();
  @try {
    
#line 320
    IOSByteArray *extOctets = OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateImpl_getExtensionOctetsWithOrgBouncycastleAsn1X509Certificate_withNSString_(c, @"2.5.29.15");
    if (nil == extOctets) {
      
#line 323
      return nil;
    }
    
#line 326
    OrgBouncycastleAsn1ASN1BitString *bits = OrgBouncycastleAsn1DERBitString_getInstanceWithId_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(extOctets));
    
#line 328
    IOSByteArray *bytes = [((OrgBouncycastleAsn1ASN1BitString *) nil_chk(bits)) getBytes];
    jint length = (((IOSByteArray *) nil_chk(bytes))->size_ * 8) - [bits getPadBits];
    
#line 331
    IOSBooleanArray *keyUsage = [IOSBooleanArray newArrayWithLength:(length < 9) ? 9 : length];
    
#line 333
    for (jint i = 0; i != length; i++) {
      
#line 335
      *IOSBooleanArray_GetRef(keyUsage, i) = ((IOSByteArray_Get(bytes, JreIntDiv(i, 8)) & (JreURShift32((jint) 0x80, (JreIntMod(i, 8))))) != 0);
    }
    
#line 338
    return keyUsage;
  }
  @catch (JavaLangException *e) {
    
#line 342
    @throw new_JavaSecurityCertCertificateParsingException_initWithNSString_(JreStrcat("$@", @"cannot construct KeyUsage: ", e));
  }
}


#line 346
NSString *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgNameWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initialize();
  @try {
    
#line 350
    return OrgBouncycastleJcajceProviderAsymmetricX509X509SignatureUtil_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_([((OrgBouncycastleAsn1X509Certificate *) nil_chk(c)) getSignatureAlgorithm]);
  }
  @catch (JavaLangException *e) {
    
#line 354
    @throw new_JavaSecurityCertCertificateParsingException_initWithNSString_(JreStrcat("$@", @"cannot construct SigAlgName: ", e));
  }
}


#line 358
IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_createSigAlgParamsWithOrgBouncycastleAsn1X509Certificate_(OrgBouncycastleAsn1X509Certificate *c) {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_initialize();
  @try {
    
#line 362
    id<OrgBouncycastleAsn1ASN1Encodable> parameters = [((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1X509Certificate *) nil_chk(c)) getSignatureAlgorithm])) getParameters];
    if (nil == parameters) {
      
#line 365
      return nil;
    }
    
#line 368
    return [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([parameters toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaLangException *e) {
    
#line 372
    @throw new_JavaSecurityCertCertificateParsingException_initWithNSString_(JreStrcat("$@", @"cannot construct SigAlgParams: ", e));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CertificateObject.java"


#line 376
@implementation OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException


#line 381
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(self, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  
#line 389
  return cause_X509CertificateEncodingException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangThrowable:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_X509CertificateEncodingException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x12, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangThrowable;", "cause", "LOrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException = { "X509CertificateEncodingException", "org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0xa, 2, 1, 2, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException;
}

@end


#line 381
void OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException *self, JavaLangThrowable *cause) {
  JavaSecurityCertCertificateEncodingException_init(self);
  self->cause_X509CertificateEncodingException_ = cause;
}


#line 381
OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException, initWithJavaLangThrowable_, cause)
}


#line 381
OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException, initWithJavaLangThrowable_, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricX509X509CertificateObject_X509CertificateEncodingException)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/ec/BCECPrivateKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey")
#ifdef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey

#if !defined (OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_) && (INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey || defined(INCLUDE_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey))
#define OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_

#define RESTRICT_JavaSecurityInterfacesECPrivateKey 1
#define INCLUDE_JavaSecurityInterfacesECPrivateKey 1
#include "java/security/interfaces/ECPrivateKey.h"

#define RESTRICT_OrgBouncycastleJceInterfacesECPrivateKey 1
#define INCLUDE_OrgBouncycastleJceInterfacesECPrivateKey 1
#include "org/bouncycastle/jce/interfaces/ECPrivateKey.h"

#define RESTRICT_OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier 1
#define INCLUDE_OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier 1
#include "org/bouncycastle/jce/interfaces/PKCS12BagAttributeCarrier.h"

#define RESTRICT_OrgBouncycastleJceInterfacesECPointEncoder 1
#define INCLUDE_OrgBouncycastleJceInterfacesECPointEncoder 1
#include "org/bouncycastle/jce/interfaces/ECPointEncoder.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPrivateKeySpec;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class OrgBouncycastleCryptoParamsECPrivateKeyParameters;
@class OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey;
@class OrgBouncycastleJceSpecECParameterSpec;
@class OrgBouncycastleJceSpecECPrivateKeySpec;
@protocol JavaUtilEnumeration;
@protocol OrgBouncycastleAsn1ASN1Encodable;
@protocol OrgBouncycastleJcajceProviderConfigProviderConfiguration;

@interface OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey : NSObject < JavaSecurityInterfacesECPrivateKey, OrgBouncycastleJceInterfacesECPrivateKey, OrgBouncycastleJceInterfacesPKCS12BagAttributeCarrier, OrgBouncycastleJceInterfacesECPointEncoder >

#pragma mark Public

- (instancetype)initWithJavaSecurityInterfacesECPrivateKey:(id<JavaSecurityInterfacesECPrivateKey>)key
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *)key;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey:(OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *)pubKey
withOrgBouncycastleJceSpecECParameterSpec:(OrgBouncycastleJceSpecECParameterSpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleCryptoParamsECPrivateKeyParameters:(OrgBouncycastleCryptoParamsECPrivateKeyParameters *)params
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleJceSpecECPrivateKeySpec:(OrgBouncycastleJceSpecECPrivateKeySpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (instancetype)initWithNSString:(NSString *)algorithm
withJavaSecuritySpecECPrivateKeySpec:(JavaSecuritySpecECPrivateKeySpec *)spec
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (id<OrgBouncycastleAsn1ASN1Encodable>)getBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (id<JavaUtilEnumeration>)getBagAttributeKeys;

- (JavaMathBigInteger *)getD;

/*!
 @brief Return a PKCS8 representation of the key.The sequence returned
  represents a full PrivateKeyInfo object.
 @return a PKCS8 representation of the key.
 */
- (IOSByteArray *)getEncoded;

/*!
 @brief return the encoding format we produce in getEncoded().
 @return the string "PKCS#8"
 */
- (NSString *)getFormat;

- (OrgBouncycastleJceSpecECParameterSpec *)getParameters;

- (JavaSecuritySpecECParameterSpec *)getParams;

- (JavaMathBigInteger *)getS;

- (NSUInteger)hash;

- (void)setBagAttributeWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                              withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)attribute;

- (void)setPointFormatWithNSString:(NSString *)style;

- (NSString *)description;

#pragma mark Protected

- (instancetype)init;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)algorithm
withOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)info
withOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration;

- (OrgBouncycastleJceSpecECParameterSpec *)engineGetSpec;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey)

inline jlong OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_get_serialVersionUID(void);
#define OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_serialVersionUID 994553197664784084LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_init(void);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, id<JavaSecurityInterfacesECPrivateKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithJavaSecurityInterfacesECPrivateKey_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(id<JavaSecurityInterfacesECPrivateKey> key, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleJceSpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleJceSpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJceSpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleJceSpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withJavaSecuritySpecECPrivateKeySpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, JavaSecuritySpecECPrivateKeySpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_(NSString *algorithm, OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *key);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withJavaSecuritySpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, JavaSecuritySpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey_withOrgBouncycastleJceSpecECParameterSpec_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, OrgBouncycastleJcajceProviderAsymmetricEcBCECPublicKey *pubKey, OrgBouncycastleJceSpecECParameterSpec *spec, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleCryptoParamsECPrivateKeyParameters_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleCryptoParamsECPrivateKeyParameters *params, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *self, NSString *algorithm, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *new_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey *create_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey_initWithNSString_withOrgBouncycastleAsn1PkcsPrivateKeyInfo_withOrgBouncycastleJcajceProviderConfigProviderConfiguration_(NSString *algorithm, OrgBouncycastleAsn1PkcsPrivateKeyInfo *info, id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricEcBCECPrivateKey")

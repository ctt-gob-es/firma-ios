//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLEntryObject.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/security/cert/CRLException.h"
#include "java/security/cert/X509CRLEntry.h"
#include "java/util/Date.h"
#include "java/util/Enumeration.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "javax/security/auth/x500/X500Principal.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1Enumerated.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/util/ASN1Dump.h"
#include "org/bouncycastle/asn1/x500/X500Name.h"
#include "org/bouncycastle/asn1/x509/CRLReason.h"
#include "org/bouncycastle/asn1/x509/Extension.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"
#include "org/bouncycastle/asn1/x509/GeneralName.h"
#include "org/bouncycastle/asn1/x509/GeneralNames.h"
#include "org/bouncycastle/asn1/x509/TBSCertList.h"
#include "org/bouncycastle/asn1/x509/Time.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLEntryObject.h"
#include "org/bouncycastle/util/Strings.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLEntryObject must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject () {
 @public
  OrgBouncycastleAsn1X509TBSCertList_CRLEntry *c_;
  OrgBouncycastleAsn1X500X500Name *certificateIssuer_;
  volatile_jboolean hashValueSet_;
  volatile_jint hashValue_;
}

- (OrgBouncycastleAsn1X500X500Name *)loadCertificateIssuerWithBoolean:(jboolean)isIndirect
                                  withOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)previousCertificateIssuer;

- (id<JavaUtilSet>)getExtensionOIDsWithBoolean:(jboolean)critical;

- (OrgBouncycastleAsn1X509Extension *)getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject, c_, OrgBouncycastleAsn1X509TBSCertList_CRLEntry *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject, certificateIssuer_, OrgBouncycastleAsn1X500X500Name *)

__attribute__((unused)) static OrgBouncycastleAsn1X500X500Name *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean isIndirect, OrgBouncycastleAsn1X500X500Name *previousCertificateIssuer);

__attribute__((unused)) static id<JavaUtilSet> OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean critical);

__attribute__((unused)) static OrgBouncycastleAsn1X509Extension *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/X509CRLEntryObject.java"


#line 34
@implementation OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject


#line 43
- (instancetype)initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry:(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *)c {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(self, c);
  return self;
}


#line 66
- (instancetype)initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry:(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *)c
                                                                      withBoolean:(jboolean)isIndirect
                                              withOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)previousCertificateIssuer {
  OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X500X500Name_(self, c, isIndirect, previousCertificateIssuer);
  return self;
}


#line 79
- (jboolean)hasUnsupportedCriticalExtension {
  
#line 82
  id<JavaUtilSet> extns = [self getCriticalExtensionOIDs];
  
#line 84
  return extns != nil && ![extns isEmpty];
}


#line 87
- (OrgBouncycastleAsn1X500X500Name *)loadCertificateIssuerWithBoolean:(jboolean)isIndirect
                                  withOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)previousCertificateIssuer {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgBouncycastleAsn1X500X500Name_(self, isIndirect, previousCertificateIssuer);
}


#line 118
- (JavaxSecurityAuthX500X500Principal *)getCertificateIssuer {
  
#line 121
  if (certificateIssuer_ == nil) {
    
#line 123
    return nil;
  }
  @try {
    
#line 127
    return new_JavaxSecurityAuthX500X500Principal_initWithByteArray_([certificateIssuer_ getEncoded]);
  }
  @catch (JavaIoIOException *e) {
    
#line 131
    return nil;
  }
}


#line 135
- (id<JavaUtilSet>)getExtensionOIDsWithBoolean:(jboolean)critical {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(self, critical);
}


#line 161
- (id<JavaUtilSet>)getCriticalExtensionOIDs {
  
#line 164
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(self, true);
}

- (id<JavaUtilSet>)getNonCriticalExtensionOIDs {
  
#line 170
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(self, false);
}

- (OrgBouncycastleAsn1X509Extension *)getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, oid);
}


#line 185
- (IOSByteArray *)getExtensionValueWithNSString:(NSString *)oid {
  
#line 188
  OrgBouncycastleAsn1X509Extension *ext = OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(oid));
  
#line 190
  if (ext != nil) {
    
#line 192
    @try {
      
#line 194
      return [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk([ext getExtnValue])) getEncoded];
    }
    @catch (JavaLangException *e) {
      
#line 198
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Exception encoding: ", [e description]));
    }
  }
  
#line 202
  return nil;
}


#line 209
- (NSUInteger)hash {
  
#line 212
  if (!JreLoadVolatileBoolean(&hashValueSet_)) {
    
#line 214
    JreAssignVolatileInt(&hashValue_, ((jint) [super hash]));
    JreAssignVolatileBoolean(&hashValueSet_, true);
  }
  
#line 218
  return JreLoadVolatileInt(&hashValue_);
}


#line 221
- (jboolean)isEqual:(id)other {
  
#line 224
  if (JreObjectEqualsEquals(other, self)) {
    
#line 226
    return true;
  }
  
#line 229
  if ([other isKindOfClass:[OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject class]]) {
    
#line 231
    OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *otherBC = (OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *) other;
    
#line 233
    if (JreLoadVolatileBoolean(&self->hashValueSet_) && JreLoadVolatileBoolean(&((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *) nil_chk(otherBC))->hashValueSet_)) {
      
#line 235
      if (JreLoadVolatileInt(&self->hashValue_) != JreLoadVolatileInt(&((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *) nil_chk(otherBC))->hashValue_)) {
        
#line 237
        return false;
      }
    }
    
#line 241
    return [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) isEqual:((OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *) nil_chk(otherBC))->c_];
  }
  
#line 244
  return [super isEqual:self];
}


#line 247
- (IOSByteArray *)getEncoded {
  
#line 251
  @try {
    
#line 253
    return [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER];
  }
  @catch (JavaIoIOException *e) {
    
#line 257
    @throw new_JavaSecurityCertCRLException_initWithNSString_([e description]);
  }
}


#line 261
- (JavaMathBigInteger *)getSerialNumber {
  
#line 264
  return [((OrgBouncycastleAsn1ASN1Integer *) nil_chk([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getUserCertificate])) getValue];
}

- (JavaUtilDate *)getRevocationDate {
  
#line 270
  return [((OrgBouncycastleAsn1X509Time *) nil_chk([((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getRevocationDate])) getDate];
}

- (jboolean)hasExtensions {
  
#line 276
  return [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getExtensions] != nil;
}

- (NSString *)description {
  
#line 282
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  NSString *nl = OrgBouncycastleUtilStrings_lineSeparator();
  
#line 285
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"      userCertificate: "])) appendWithId:[self getSerialNumber]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"       revocationDate: "])) appendWithId:[self getRevocationDate]])) appendWithNSString:nl];
  (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"       certificateIssuer: "])) appendWithId:[self getCertificateIssuer]])) appendWithNSString:nl];
  
#line 289
  OrgBouncycastleAsn1X509Extensions *extensions = [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(c_)) getExtensions];
  
#line 291
  if (extensions != nil) {
    
#line 293
    id<JavaUtilEnumeration> e = [extensions oids];
    if ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      
#line 296
      (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"   crlEntryExtensions:"])) appendWithNSString:nl];
      
#line 298
      while ([e hasMoreElements]) {
        
#line 300
        OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
        OrgBouncycastleAsn1X509Extension *ext = [extensions getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
        if ([((OrgBouncycastleAsn1X509Extension *) nil_chk(ext)) getExtnValue] != nil) {
          
#line 304
          IOSByteArray *octs = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk([ext getExtnValue])) getOctets];
          OrgBouncycastleAsn1ASN1InputStream *dIn = new_OrgBouncycastleAsn1ASN1InputStream_initWithByteArray_(octs);
          (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"                       critical("])) appendWithBoolean:[ext isCritical]])) appendWithNSString:@") "];
          @try {
            
#line 309
            if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1X509Extension, reasonCode)]) {
              
#line 311
              (void) [((JavaLangStringBuffer *) nil_chk([buf appendWithId:OrgBouncycastleAsn1X509CRLReason_getInstanceWithId_(OrgBouncycastleAsn1ASN1Enumerated_getInstanceWithId_([dIn readObject]))])) appendWithNSString:nl];
            }
            else if ([oid equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1X509Extension, certificateIssuer)]) {
              
#line 315
              (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@"Certificate issuer: "])) appendWithId:OrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_([dIn readObject])])) appendWithNSString:nl];
            }
            else {
              
#line 319
              (void) [buf appendWithNSString:[oid getId]];
              (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" value = "])) appendWithNSString:OrgBouncycastleAsn1UtilASN1Dump_dumpAsStringWithId_([dIn readObject])])) appendWithNSString:nl];
            }
          }
          @catch (JavaLangException *ex) {
            
#line 325
            (void) [buf appendWithNSString:[oid getId]];
            (void) [((JavaLangStringBuffer *) nil_chk([((JavaLangStringBuffer *) nil_chk([buf appendWithNSString:@" value = "])) appendWithNSString:@"*****"])) appendWithNSString:nl];
          }
        }
        else {
          
#line 331
          (void) [buf appendWithNSString:nl];
        }
      }
    }
  }
  
#line 337
  return [buf description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X500X500Name;", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaxSecurityAuthX500X500Principal;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extension;", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 13, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry:);
  methods[1].selector = @selector(initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry:withBoolean:withOrgBouncycastleAsn1X500X500Name:);
  methods[2].selector = @selector(hasUnsupportedCriticalExtension);
  methods[3].selector = @selector(loadCertificateIssuerWithBoolean:withOrgBouncycastleAsn1X500X500Name:);
  methods[4].selector = @selector(getCertificateIssuer);
  methods[5].selector = @selector(getExtensionOIDsWithBoolean:);
  methods[6].selector = @selector(getCriticalExtensionOIDs);
  methods[7].selector = @selector(getNonCriticalExtensionOIDs);
  methods[8].selector = @selector(getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(getExtensionValueWithNSString:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(isEqual:);
  methods[12].selector = @selector(getEncoded);
  methods[13].selector = @selector(getSerialNumber);
  methods[14].selector = @selector(getRevocationDate);
  methods[15].selector = @selector(hasExtensions);
  methods[16].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "c_", "LOrgBouncycastleAsn1X509TBSCertList_CRLEntry;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificateIssuer_", "LOrgBouncycastleAsn1X500X500Name;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashValueSet_", "Z", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "hashValue_", "I", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1X509TBSCertList_CRLEntry;", "LOrgBouncycastleAsn1X509TBSCertList_CRLEntry;ZLOrgBouncycastleAsn1X500X500Name;", "loadCertificateIssuer", "ZLOrgBouncycastleAsn1X500X500Name;", "getExtensionOIDs", "Z", "getExtension", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getExtensionValue", "LNSString;", "hashCode", "equals", "LNSObject;", "LJavaSecurityCertCRLException;", "toString" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject = { "X509CRLEntryObject", "org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 17, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject;
}

@end


#line 43
void OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgBouncycastleAsn1X509TBSCertList_CRLEntry *c) {
  JavaSecurityCertX509CRLEntry_init(self);
  self->c_ = c;
  self->certificateIssuer_ = nil;
}


#line 43
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *c) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_, c)
}


#line 43
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *c) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_, c)
}


#line 66
void OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgBouncycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, OrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  JavaSecurityCertX509CRLEntry_init(self);
  
#line 71
  self->c_ = c;
  self->certificateIssuer_ = OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgBouncycastleAsn1X500X500Name_(self, isIndirect, previousCertificateIssuer);
}


#line 66
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *new_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, OrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X500X500Name_, c, isIndirect, previousCertificateIssuer)
}


#line 66
OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *create_OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X509TBSCertList_CRLEntry *c, jboolean isIndirect, OrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject, initPackagePrivateWithOrgBouncycastleAsn1X509TBSCertList_CRLEntry_withBoolean_withOrgBouncycastleAsn1X500X500Name_, c, isIndirect, previousCertificateIssuer)
}


#line 87
OrgBouncycastleAsn1X500X500Name *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_loadCertificateIssuerWithBoolean_withOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean isIndirect, OrgBouncycastleAsn1X500X500Name *previousCertificateIssuer) {
  
#line 89
  if (!isIndirect) {
    
#line 91
    return nil;
  }
  
#line 94
  OrgBouncycastleAsn1X509Extension *ext = OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(self, JreLoadStatic(OrgBouncycastleAsn1X509Extension, certificateIssuer));
  if (ext == nil) {
    
#line 97
    return previousCertificateIssuer;
  }
  
#line 100
  @try {
    
#line 102
    IOSObjectArray *names = [((OrgBouncycastleAsn1X509GeneralNames *) nil_chk(OrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_([ext getParsedValue]))) getNames];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(names))->size_; i++) {
      
#line 105
      if ([((OrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getTagNo] == OrgBouncycastleAsn1X509GeneralName_directoryName) {
        
#line 107
        return OrgBouncycastleAsn1X500X500Name_getInstanceWithId_([((OrgBouncycastleAsn1X509GeneralName *) nil_chk(IOSObjectArray_Get(names, i))) getName]);
      }
    }
    return nil;
  }
  @catch (JavaLangException *e) {
    
#line 114
    return nil;
  }
}


#line 135
id<JavaUtilSet> OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionOIDsWithBoolean_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, jboolean critical) {
  
#line 137
  OrgBouncycastleAsn1X509Extensions *extensions = [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) getExtensions];
  
#line 139
  if (extensions != nil) {
    
#line 141
    id<JavaUtilSet> set = new_JavaUtilHashSet_init();
    id<JavaUtilEnumeration> e = [extensions oids];
    
#line 144
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      
#line 146
      OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      OrgBouncycastleAsn1X509Extension *ext = [extensions getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
      
#line 149
      if (critical == [((OrgBouncycastleAsn1X509Extension *) nil_chk(ext)) isCritical]) {
        
#line 151
        [set addWithId:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]];
      }
    }
    
#line 155
    return set;
  }
  
#line 158
  return nil;
}


#line 173
OrgBouncycastleAsn1X509Extension *OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject_getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  
#line 175
  OrgBouncycastleAsn1X509Extensions *exts = [((OrgBouncycastleAsn1X509TBSCertList_CRLEntry *) nil_chk(self->c_)) getExtensions];
  
#line 177
  if (exts != nil) {
    
#line 179
    return [exts getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
  }
  
#line 182
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricX509X509CRLEntryObject)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/KeyUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil")
#ifdef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil

#if !defined (OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_) && (INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil || defined(INCLUDE_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil))
#define OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_

@class IOSByteArray;
@class OrgBouncycastleAsn1PkcsPrivateKeyInfo;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;
@class OrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@protocol OrgBouncycastleAsn1ASN1Encodable;

@interface OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)getEncodedPrivateKeyInfoWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                    withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)privKey;

+ (IOSByteArray *)getEncodedPrivateKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo:(OrgBouncycastleAsn1PkcsPrivateKeyInfo *)info;

+ (IOSByteArray *)getEncodedSubjectPublicKeyInfoWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                          withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)keyData;

+ (IOSByteArray *)getEncodedSubjectPublicKeyInfoWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                                                 withByteArray:(IOSByteArray *)keyData;

+ (IOSByteArray *)getEncodedSubjectPublicKeyInfoWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)info;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil)

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_init(OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil *self);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil *new_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil *create_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_init(void);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_getEncodedSubjectPublicKeyInfoWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, id<OrgBouncycastleAsn1ASN1Encodable> keyData);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_getEncodedSubjectPublicKeyInfoWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *keyData);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_getEncodedSubjectPublicKeyInfoWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *info);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_getEncodedPrivateKeyInfoWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, id<OrgBouncycastleAsn1ASN1Encodable> privKey);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil_getEncodedPrivateKeyInfoWithOrgBouncycastleAsn1PkcsPrivateKeyInfo_(OrgBouncycastleAsn1PkcsPrivateKeyInfo *info);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilKeyUtil")

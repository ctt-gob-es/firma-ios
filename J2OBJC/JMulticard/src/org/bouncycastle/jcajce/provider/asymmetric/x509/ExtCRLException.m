//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/ExtCRLException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/security/cert/CRLException.h"
#include "org/bouncycastle/jcajce/provider/asymmetric/x509/ExtCRLException.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/asymmetric/x509/ExtCRLException must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/x509/ExtCRLException.java"


#line 5
@implementation OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException


#line 10
- (instancetype)initPackagePrivateWithNSString:(NSString *)message
                         withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (JavaLangThrowable *)getCause {
  
#line 19
  return cause_ExtCRLException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_ExtCRLException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x0, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "cause" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException = { "ExtCRLException", "org.bouncycastle.jcajce.provider.asymmetric.x509", ptrTable, methods, fields, 7, 0x0, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException;
}

@end


#line 10
void OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException *self, NSString *message, JavaLangThrowable *cause) {
  JavaSecurityCertCRLException_initWithNSString_(self,
#line 12
  message);
  self->cause_ExtCRLException_ = cause;
}


#line 10
OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException *new_OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException, initPackagePrivateWithNSString_withJavaLangThrowable_, message, cause)
}


#line 10
OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException *create_OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException_initPackagePrivateWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException, initPackagePrivateWithNSString_withJavaLangThrowable_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderAsymmetricX509ExtCRLException)

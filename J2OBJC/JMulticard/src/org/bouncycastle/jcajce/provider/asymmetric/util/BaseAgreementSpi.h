//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/BaseAgreementSpi.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi")
#ifdef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi

#if !defined (OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_) && (INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi || defined(INCLUDE_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi))
#define OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_

#define RESTRICT_JavaxCryptoKeyAgreementSpi 1
#define INCLUDE_JavaxCryptoKeyAgreementSpi 1
#include "javax/crypto/KeyAgreementSpi.h"

@class IOSByteArray;
@class JavaSecuritySecureRandom;
@protocol JavaSecurityKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;
@protocol JavaxCryptoSecretKey;
@protocol OrgBouncycastleCryptoDerivationFunction;

@interface OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi : JavaxCryptoKeyAgreementSpi {
 @public
  NSString *kaAlgorithm_;
  id<OrgBouncycastleCryptoDerivationFunction> kdf_;
  IOSByteArray *ukmParameters_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)kaAlgorithm
withOrgBouncycastleCryptoDerivationFunction:(id<OrgBouncycastleCryptoDerivationFunction>)kdf;

#pragma mark Protected

- (IOSByteArray *)doCalcSecret;

- (void)doInitFromKeyWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)parameterSpec
            withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (IOSByteArray *)engineGenerateSecret;

- (jint)engineGenerateSecretWithByteArray:(IOSByteArray *)sharedSecret
                                  withInt:(jint)offset;

- (id<JavaxCryptoSecretKey>)engineGenerateSecretWithNSString:(NSString *)algorithm;

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
withJavaSecuritySpecAlgorithmParameterSpec:(id<JavaSecuritySpecAlgorithmParameterSpec>)params
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

- (void)engineInitWithJavaSecurityKey:(id<JavaSecurityKey>)key
         withJavaSecuritySecureRandom:(JavaSecuritySecureRandom *)random;

+ (NSString *)getAlgorithmWithNSString:(NSString *)algDetails;

+ (jint)getKeySizeWithNSString:(NSString *)algDetails;

+ (IOSByteArray *)trimZeroesWithByteArray:(IOSByteArray *)secret;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)

J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, kaAlgorithm_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, kdf_, id<OrgBouncycastleCryptoDerivationFunction>)
J2OBJC_FIELD_SETTER(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi, ukmParameters_, IOSByteArray *)

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_initWithNSString_withOrgBouncycastleCryptoDerivationFunction_(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi *self, NSString *kaAlgorithm, id<OrgBouncycastleCryptoDerivationFunction> kdf);

FOUNDATION_EXPORT NSString *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getAlgorithmWithNSString_(NSString *algDetails);

FOUNDATION_EXPORT jint OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_getKeySizeWithNSString_(NSString *algDetails);

FOUNDATION_EXPORT IOSByteArray *OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi_trimZeroesWithByteArray_(IOSByteArray *secret);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilBaseAgreementSpi")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/asymmetric/util/EC5Util.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util")
#ifdef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util

#if !defined (OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_) && (INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util || defined(INCLUDE_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util))
#define OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_

@class IOSByteArray;
@class JavaSecuritySpecECParameterSpec;
@class JavaSecuritySpecECPoint;
@class JavaSecuritySpecEllipticCurve;
@class OrgBouncycastleAsn1X9X962Parameters;
@class OrgBouncycastleAsn1X9X9ECParameters;
@class OrgBouncycastleCryptoParamsECDomainParameters;
@class OrgBouncycastleJceSpecECParameterSpec;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECPoint;
@protocol JavaSecuritySpecECField;
@protocol OrgBouncycastleJcajceProviderConfigProviderConfiguration;
@protocol OrgBouncycastleMathFieldFiniteField;

@interface OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util : NSObject

#pragma mark Public

- (instancetype)init;

+ (JavaSecuritySpecEllipticCurve *)convertCurveWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                                  withByteArray:(IOSByteArray *)seed;

+ (OrgBouncycastleMathEcECCurve *)convertCurveWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ec;

+ (id<JavaSecuritySpecECField>)convertFieldWithOrgBouncycastleMathFieldFiniteField:(id<OrgBouncycastleMathFieldFiniteField>)field;

+ (OrgBouncycastleMathEcECPoint *)convertPointWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                   withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point;

+ (OrgBouncycastleMathEcECPoint *)convertPointWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec
                                                      withJavaSecuritySpecECPoint:(JavaSecuritySpecECPoint *)point;

+ (JavaSecuritySpecECPoint *)convertPointWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)point;

+ (OrgBouncycastleJceSpecECParameterSpec *)convertSpecWithJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)ecSpec;

+ (JavaSecuritySpecECParameterSpec *)convertSpecWithJavaSecuritySpecEllipticCurve:(JavaSecuritySpecEllipticCurve *)ellipticCurve
                                        withOrgBouncycastleJceSpecECParameterSpec:(OrgBouncycastleJceSpecECParameterSpec *)spec;

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgBouncycastleCryptoParamsECDomainParameters:(OrgBouncycastleCryptoParamsECDomainParameters *)domainParameters;

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgBouncycastleAsn1X9X962Parameters:(OrgBouncycastleAsn1X9X962Parameters *)params
                                                         withOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve;

+ (JavaSecuritySpecECParameterSpec *)convertToSpecWithOrgBouncycastleAsn1X9X9ECParameters:(OrgBouncycastleAsn1X9X9ECParameters *)domainParameters;

+ (OrgBouncycastleMathEcECCurve *)getCurveWithOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                               withOrgBouncycastleAsn1X9X962Parameters:(OrgBouncycastleAsn1X9X962Parameters *)params;

+ (OrgBouncycastleCryptoParamsECDomainParameters *)getDomainParametersWithOrgBouncycastleJcajceProviderConfigProviderConfiguration:(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration>)configuration
                                                                                               withJavaSecuritySpecECParameterSpec:(JavaSecuritySpecECParameterSpec *)params;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util)

FOUNDATION_EXPORT void OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *self);

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *new_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util *create_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_init(void);

FOUNDATION_EXPORT OrgBouncycastleMathEcECCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getCurveWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withOrgBouncycastleAsn1X9X962Parameters_(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration, OrgBouncycastleAsn1X9X962Parameters *params);

FOUNDATION_EXPORT OrgBouncycastleCryptoParamsECDomainParameters *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_getDomainParametersWithOrgBouncycastleJcajceProviderConfigProviderConfiguration_withJavaSecuritySpecECParameterSpec_(id<OrgBouncycastleJcajceProviderConfigProviderConfiguration> configuration, JavaSecuritySpecECParameterSpec *params);

FOUNDATION_EXPORT JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleAsn1X9X962Parameters_withOrgBouncycastleMathEcECCurve_(OrgBouncycastleAsn1X9X962Parameters *params, OrgBouncycastleMathEcECCurve *curve);

FOUNDATION_EXPORT JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleAsn1X9X9ECParameters_(OrgBouncycastleAsn1X9X9ECParameters *domainParameters);

FOUNDATION_EXPORT JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertToSpecWithOrgBouncycastleCryptoParamsECDomainParameters_(OrgBouncycastleCryptoParamsECDomainParameters *domainParameters);

FOUNDATION_EXPORT JavaSecuritySpecEllipticCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed);

FOUNDATION_EXPORT OrgBouncycastleMathEcECCurve *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertCurveWithJavaSecuritySpecEllipticCurve_(JavaSecuritySpecEllipticCurve *ec);

FOUNDATION_EXPORT id<JavaSecuritySpecECField> OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertFieldWithOrgBouncycastleMathFieldFiniteField_(id<OrgBouncycastleMathFieldFiniteField> field);

FOUNDATION_EXPORT JavaSecuritySpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecEllipticCurve_withOrgBouncycastleJceSpecECParameterSpec_(JavaSecuritySpecEllipticCurve *ellipticCurve, OrgBouncycastleJceSpecECParameterSpec *spec);

FOUNDATION_EXPORT OrgBouncycastleJceSpecECParameterSpec *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertSpecWithJavaSecuritySpecECParameterSpec_(JavaSecuritySpecECParameterSpec *ecSpec);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithJavaSecuritySpecECParameterSpec_withJavaSecuritySpecECPoint_(JavaSecuritySpecECParameterSpec *ecSpec, JavaSecuritySpecECPoint *point);

FOUNDATION_EXPORT OrgBouncycastleMathEcECPoint *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECCurve_withJavaSecuritySpecECPoint_(OrgBouncycastleMathEcECCurve *curve, JavaSecuritySpecECPoint *point);

FOUNDATION_EXPORT JavaSecuritySpecECPoint *OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util_convertPointWithOrgBouncycastleMathEcECPoint_(OrgBouncycastleMathEcECPoint *point);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceProviderAsymmetricUtilEC5Util")

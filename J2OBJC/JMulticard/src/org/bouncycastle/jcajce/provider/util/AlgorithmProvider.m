//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/util/AlgorithmProvider.java
//

#include "J2ObjC_source.h"
#include "org/bouncycastle/jcajce/provider/config/ConfigurableProvider.h"
#include "org/bouncycastle/jcajce/provider/util/AlgorithmProvider.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/util/AlgorithmProvider must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/util/AlgorithmProvider.java"


#line 5
@implementation OrgBouncycastleJcajceProviderUtilAlgorithmProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 5
- (instancetype)init {
  OrgBouncycastleJcajceProviderUtilAlgorithmProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 7
- (void)configureWithOrgBouncycastleJcajceProviderConfigConfigurableProvider:(id<OrgBouncycastleJcajceProviderConfigConfigurableProvider>)provider {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureWithOrgBouncycastleJcajceProviderConfigConfigurableProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "configure", "LOrgBouncycastleJcajceProviderConfigConfigurableProvider;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderUtilAlgorithmProvider = { "AlgorithmProvider", "org.bouncycastle.jcajce.provider.util", ptrTable, methods, NULL, 7, 0x401, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderUtilAlgorithmProvider;
}

@end


#line 5
void OrgBouncycastleJcajceProviderUtilAlgorithmProvider_init(OrgBouncycastleJcajceProviderUtilAlgorithmProvider *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderUtilAlgorithmProvider)

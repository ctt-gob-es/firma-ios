//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/symmetric/util/ClassUtil.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/security/AccessController.h"
#include "java/security/PrivilegedAction.h"
#include "org/bouncycastle/jcajce/provider/symmetric/util/ClassUtil.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/jcajce/provider/symmetric/util/ClassUtil must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 : NSObject < JavaSecurityPrivilegedAction > {
 @public
  NSString *val$className_;
}

- (instancetype)initWithNSString:(NSString *)capture$0;

- (id)run;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1)

__attribute__((unused)) static void OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 *self, NSString *capture$0);

__attribute__((unused)) static OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 *new_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(NSString *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 *create_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(NSString *capture$0);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/symmetric/util/ClassUtil.java"


#line 6
@implementation OrgBouncycastleJcajceProviderSymmetricUtilClassUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 6
- (instancetype)init {
  OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 8
+ (IOSClass *)loadClassWithIOSClass:(IOSClass *)sourceClass
                       withNSString:(NSString *)className_ {
  return OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_loadClassWithIOSClass_withNSString_(sourceClass, className_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(loadClassWithIOSClass:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "loadClass", "LIOSClass;LNSString;" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderSymmetricUtilClassUtil = { "ClassUtil", "org.bouncycastle.jcajce.provider.symmetric.util", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil;
}

@end


#line 6
void OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_init(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil *self) {
  NSObject_init(self);
}


#line 6
OrgBouncycastleJcajceProviderSymmetricUtilClassUtil *new_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil, init)
}


#line 6
OrgBouncycastleJcajceProviderSymmetricUtilClassUtil *create_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil, init)
}


#line 8
IOSClass *OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_loadClassWithIOSClass_withNSString_(IOSClass *sourceClass, NSString *className_) {
  OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_initialize();
  @try {
    
#line 12
    JavaLangClassLoader *loader = [((IOSClass *) nil_chk(sourceClass)) getClassLoader];
    
#line 14
    if (loader != nil) {
      
#line 16
      return [loader loadClassWithNSString:className_];
    }
    else {
      
#line 20
      return (IOSClass *) cast_chk(JavaSecurityAccessController_doPrivilegedWithJavaSecurityPrivilegedAction_(new_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(className_)), [IOSClass class]);
    }
  }
  @catch (
#line 39
  JavaLangClassNotFoundException *e) {
  }
  
#line 44
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/provider/symmetric/util/ClassUtil.java"


#line 21
@implementation OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1


#line 21
- (instancetype)initWithNSString:(NSString *)capture$0 {
  OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(self, capture$0);
  return self;
}


#line 22
- (id)run {
  
#line 25
  @try {
    
#line 27
    return IOSClass_forName_(val$className_);
  }
  @catch (JavaLangException *e) {
  }
  
#line 34
  return JreRetainedLocalValue(nil);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$className_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LOrgBouncycastleJcajceProviderSymmetricUtilClassUtil;", "loadClassWithIOSClass:withNSString:" };
  static const J2ObjcClassInfo _OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 = { "", "org.bouncycastle.jcajce.provider.symmetric.util", ptrTable, methods, fields, 7, 0x8000, 2, 1, 1, -1, 2, -1, -1 };
  return &_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1;
}

@end


#line 21
void OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 *self, NSString *capture$0) {
  self->val$className_ = capture$0;
  NSObject_init(self);
}


#line 21
OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 *new_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(NSString *capture$0) {
  J2OBJC_NEW_IMPL(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1, initWithNSString_, capture$0)
}


#line 21
OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1 *create_OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1_initWithNSString_(NSString *capture$0) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleJcajceProviderSymmetricUtilClassUtil_1, initWithNSString_, capture$0)
}

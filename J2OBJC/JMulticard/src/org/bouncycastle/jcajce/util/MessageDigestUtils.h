//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/util/MessageDigestUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceUtilMessageDigestUtils")
#ifdef RESTRICT_OrgBouncycastleJcajceUtilMessageDigestUtils
#define INCLUDE_ALL_OrgBouncycastleJcajceUtilMessageDigestUtils 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceUtilMessageDigestUtils 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceUtilMessageDigestUtils

#if !defined (OrgBouncycastleJcajceUtilMessageDigestUtils_) && (INCLUDE_ALL_OrgBouncycastleJcajceUtilMessageDigestUtils || defined(INCLUDE_OrgBouncycastleJcajceUtilMessageDigestUtils))
#define OrgBouncycastleJcajceUtilMessageDigestUtils_

@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;

@interface OrgBouncycastleJcajceUtilMessageDigestUtils : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Attempt to find a standard JCA name for the digest represented by the passed in OID.
 @param digestName name of the digest algorithm of interest.
 @return an algorithm identifier representing the digest.
 */
+ (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getDigestAlgIDWithNSString:(NSString *)digestName;

/*!
 @brief Attempt to find a standard JCA name for the digest represented by the passed in OID.
 @param digestAlgOID the OID of the digest algorithm of interest.
 @return a string representing the standard name - the OID as a string if none available.
 */
+ (NSString *)getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)digestAlgOID;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleJcajceUtilMessageDigestUtils)

FOUNDATION_EXPORT void OrgBouncycastleJcajceUtilMessageDigestUtils_init(OrgBouncycastleJcajceUtilMessageDigestUtils *self);

FOUNDATION_EXPORT OrgBouncycastleJcajceUtilMessageDigestUtils *new_OrgBouncycastleJcajceUtilMessageDigestUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceUtilMessageDigestUtils *create_OrgBouncycastleJcajceUtilMessageDigestUtils_init(void);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509AlgorithmIdentifier *OrgBouncycastleJcajceUtilMessageDigestUtils_getDigestAlgIDWithNSString_(NSString *digestName);

FOUNDATION_EXPORT NSString *OrgBouncycastleJcajceUtilMessageDigestUtils_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *digestAlgOID);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceUtilMessageDigestUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceUtilMessageDigestUtils")

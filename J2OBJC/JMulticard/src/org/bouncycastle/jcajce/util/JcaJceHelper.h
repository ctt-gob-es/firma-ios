//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/util/JcaJceHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceUtilJcaJceHelper")
#ifdef RESTRICT_OrgBouncycastleJcajceUtilJcaJceHelper
#define INCLUDE_ALL_OrgBouncycastleJcajceUtilJcaJceHelper 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceUtilJcaJceHelper 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceUtilJcaJceHelper

#if !defined (OrgBouncycastleJcajceUtilJcaJceHelper_) && (INCLUDE_ALL_OrgBouncycastleJcajceUtilJcaJceHelper || defined(INCLUDE_OrgBouncycastleJcajceUtilJcaJceHelper))
#define OrgBouncycastleJcajceUtilJcaJceHelper_

@class JavaSecurityAlgorithmParameterGenerator;
@class JavaSecurityAlgorithmParameters;
@class JavaSecurityCertCertPathBuilder;
@class JavaSecurityCertCertPathValidator;
@class JavaSecurityCertCertStore;
@class JavaSecurityCertCertificateFactory;
@class JavaSecurityKeyFactory;
@class JavaSecurityKeyPairGenerator;
@class JavaSecurityKeyStore;
@class JavaSecurityMessageDigest;
@class JavaSecuritySecureRandom;
@class JavaSecuritySignature;
@class JavaxCryptoCipher;
@class JavaxCryptoExemptionMechanism;
@class JavaxCryptoKeyAgreement;
@class JavaxCryptoKeyGenerator;
@class JavaxCryptoMac;
@class JavaxCryptoSecretKeyFactory;
@protocol JavaSecurityCertCertStoreParameters;

/*!
 @brief Factory interface for instantiating JCA/JCE primitives.
 */
@protocol OrgBouncycastleJcajceUtilJcaJceHelper < JavaObject >

- (JavaxCryptoCipher *)createCipherWithNSString:(NSString *)algorithm;

- (JavaxCryptoMac *)createMacWithNSString:(NSString *)algorithm;

- (JavaxCryptoKeyAgreement *)createKeyAgreementWithNSString:(NSString *)algorithm;

- (JavaSecurityAlgorithmParameterGenerator *)createAlgorithmParameterGeneratorWithNSString:(NSString *)algorithm;

- (JavaSecurityAlgorithmParameters *)createAlgorithmParametersWithNSString:(NSString *)algorithm;

- (JavaxCryptoKeyGenerator *)createKeyGeneratorWithNSString:(NSString *)algorithm;

- (JavaSecurityKeyFactory *)createKeyFactoryWithNSString:(NSString *)algorithm;

- (JavaxCryptoSecretKeyFactory *)createSecretKeyFactoryWithNSString:(NSString *)algorithm;

- (JavaSecurityKeyPairGenerator *)createKeyPairGeneratorWithNSString:(NSString *)algorithm;

/*!
 */
- (JavaSecurityMessageDigest *)createDigestWithNSString:(NSString *)algorithm;

- (JavaSecurityMessageDigest *)createMessageDigestWithNSString:(NSString *)algorithm;

- (JavaSecuritySignature *)createSignatureWithNSString:(NSString *)algorithm;

- (JavaSecurityCertCertificateFactory *)createCertificateFactoryWithNSString:(NSString *)algorithm;

- (JavaSecuritySecureRandom *)createSecureRandomWithNSString:(NSString *)algorithm;

- (JavaSecurityCertCertPathBuilder *)createCertPathBuilderWithNSString:(NSString *)algorithm;

- (JavaSecurityCertCertPathValidator *)createCertPathValidatorWithNSString:(NSString *)algorithm;

- (JavaSecurityCertCertStore *)createCertStoreWithNSString:(NSString *)type
                   withJavaSecurityCertCertStoreParameters:(id<JavaSecurityCertCertStoreParameters>)params;

- (JavaxCryptoExemptionMechanism *)createExemptionMechanismWithNSString:(NSString *)algorithm;

- (JavaSecurityKeyStore *)createKeyStoreWithNSString:(NSString *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceUtilJcaJceHelper)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceUtilJcaJceHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceUtilJcaJceHelper")

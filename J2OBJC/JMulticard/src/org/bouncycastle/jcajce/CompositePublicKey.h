//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/jcajce/CompositePublicKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleJcajceCompositePublicKey")
#ifdef RESTRICT_OrgBouncycastleJcajceCompositePublicKey
#define INCLUDE_ALL_OrgBouncycastleJcajceCompositePublicKey 0
#else
#define INCLUDE_ALL_OrgBouncycastleJcajceCompositePublicKey 1
#endif
#undef RESTRICT_OrgBouncycastleJcajceCompositePublicKey

#if !defined (OrgBouncycastleJcajceCompositePublicKey_) && (INCLUDE_ALL_OrgBouncycastleJcajceCompositePublicKey || defined(INCLUDE_OrgBouncycastleJcajceCompositePublicKey))
#define OrgBouncycastleJcajceCompositePublicKey_

#define RESTRICT_JavaSecurityPublicKey 1
#define INCLUDE_JavaSecurityPublicKey 1
#include "java/security/PublicKey.h"

@class IOSByteArray;
@class IOSObjectArray;
@protocol JavaUtilList;

/*!
 @brief A composite key class.
 */
@interface OrgBouncycastleJcajceCompositePublicKey : NSObject < JavaSecurityPublicKey >

#pragma mark Public

/*!
 @brief Create a composite key containing a single public key.
 @param keys the public keys the composite key wraps.
 */
- (instancetype)initWithJavaSecurityPublicKeyArray:(IOSObjectArray *)keys;

- (jboolean)isEqual:(id)o;

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

/*!
 @brief Return a list of the component private keys making up this composite.
 @return an immutable list of private keys.
 */
- (id<JavaUtilList>)getPublicKeys;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleJcajceCompositePublicKey)

FOUNDATION_EXPORT void OrgBouncycastleJcajceCompositePublicKey_initWithJavaSecurityPublicKeyArray_(OrgBouncycastleJcajceCompositePublicKey *self, IOSObjectArray *keys);

FOUNDATION_EXPORT OrgBouncycastleJcajceCompositePublicKey *new_OrgBouncycastleJcajceCompositePublicKey_initWithJavaSecurityPublicKeyArray_(IOSObjectArray *keys) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleJcajceCompositePublicKey *create_OrgBouncycastleJcajceCompositePublicKey_initWithJavaSecurityPublicKeyArray_(IOSObjectArray *keys);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleJcajceCompositePublicKey)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleJcajceCompositePublicKey")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalStateException.h"
#include "java/security/GeneralSecurityException.h"
#include "java/security/Provider.h"
#include "java/security/PublicKey.h"
#include "java/security/Signature.h"
#include "java/security/SignatureException.h"
#include "java/security/cert/CertificateEncodingException.h"
#include "java/security/cert/X509Certificate.h"
#include "java/util/List.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERBitString.h"
#include "org/bouncycastle/asn1/misc/MiscObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/cert/X509CertificateHolder.h"
#include "org/bouncycastle/cert/jcajce/JcaX509CertificateHolder.h"
#include "org/bouncycastle/jcajce/CompositePublicKey.h"
#include "org/bouncycastle/jcajce/io/OutputStreamFactory.h"
#include "org/bouncycastle/jcajce/util/DefaultJcaJceHelper.h"
#include "org/bouncycastle/jcajce/util/NamedJcaJceHelper.h"
#include "org/bouncycastle/jcajce/util/ProviderJcaJceHelper.h"
#include "org/bouncycastle/operator/ContentVerifier.h"
#include "org/bouncycastle/operator/ContentVerifierProvider.h"
#include "org/bouncycastle/operator/OperatorCreationException.h"
#include "org/bouncycastle/operator/RawContentVerifier.h"
#include "org/bouncycastle/operator/RuntimeOperatorException.h"
#include "org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.h"
#include "org/bouncycastle/operator/jcajce/OperatorHelper.h"
#include "org/bouncycastle/util/io/TeeOutputStream.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder () {
 @public
  OrgBouncycastleOperatorJcajceOperatorHelper *helper_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder, helper_, OrgBouncycastleOperatorJcajceOperatorHelper *)

@interface OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 : NSObject < OrgBouncycastleOperatorContentVerifierProvider > {
 @public
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *this$0_;
  OrgBouncycastleCertX509CertificateHolder *val$certHolder_;
  JavaSecurityCertX509Certificate *val$certificate_;
}

- (instancetype)initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)outer$
                                          withOrgBouncycastleCertX509CertificateHolder:(OrgBouncycastleCertX509CertificateHolder *)capture$0
                                                   withJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)capture$1;

- (jboolean)hasAssociatedCertificate;

- (OrgBouncycastleCertX509CertificateHolder *)getAssociatedCertificate;

- (id<OrgBouncycastleOperatorContentVerifier>)getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1)

__attribute__((unused)) static void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 *self, OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleCertX509CertificateHolder *capture$0, JavaSecurityCertX509Certificate *capture$1);

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleCertX509CertificateHolder *capture$0, JavaSecurityCertX509Certificate *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleCertX509CertificateHolder *capture$0, JavaSecurityCertX509Certificate *capture$1);

@interface OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 : NSObject < OrgBouncycastleOperatorContentVerifierProvider > {
 @public
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *this$0_;
  id<JavaSecurityPublicKey> val$publicKey_;
}

- (instancetype)initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)outer$
                                                             withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)capture$0;

- (jboolean)hasAssociatedCertificate;

- (OrgBouncycastleCertX509CertificateHolder *)getAssociatedCertificate;

- (id<OrgBouncycastleOperatorContentVerifier>)getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2)

__attribute__((unused)) static void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 *self, OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, id<JavaSecurityPublicKey> capture$0);

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, id<JavaSecurityPublicKey> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, id<JavaSecurityPublicKey> capture$0);

@interface OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier : NSObject < OrgBouncycastleOperatorContentVerifier > {
 @public
  OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm_;
  JavaSecuritySignature *signature_;
  JavaIoOutputStream *stream_;
}

- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm
                                         withJavaSecuritySignature:(JavaSecuritySignature *)signature;

- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithmIdentifier;

- (JavaIoOutputStream *)getOutputStream;

- (jboolean)verifyWithByteArray:(IOSByteArray *)expected;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier)

J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier, algorithm_, OrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier, signature_, JavaSecuritySignature *)
J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier, stream_, JavaIoOutputStream *)

__attribute__((unused)) static void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *self, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *signature);

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *signature) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *signature);

__attribute__((unused)) static jboolean OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_verifyWithByteArray_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *self, IOSByteArray *expected);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier)

@interface OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier : OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier < OrgBouncycastleOperatorRawContentVerifier > {
 @public
  JavaSecuritySignature *rawSignature_;
}

- (instancetype)initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)outer$
                                        withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm
                                                             withJavaSecuritySignature:(JavaSecuritySignature *)standardSig
                                                             withJavaSecuritySignature:(JavaSecuritySignature *)rawSignature;

- (jboolean)verifyWithByteArray:(IOSByteArray *)expected;

- (jboolean)verifyWithByteArray:(IOSByteArray *)digest
                  withByteArray:(IOSByteArray *)expected;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier)

J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier, rawSignature_, JavaSecuritySignature *)

__attribute__((unused)) static void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier *self, OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *standardSig, JavaSecuritySignature *rawSignature);

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *standardSig, JavaSecuritySignature *rawSignature) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *standardSig, JavaSecuritySignature *rawSignature);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier)

@interface OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier : NSObject < OrgBouncycastleOperatorContentVerifier > {
 @public
  IOSObjectArray *sigs_;
  JavaIoOutputStream *stream_;
}

- (instancetype)initWithJavaSecuritySignatureArray:(IOSObjectArray *)sigs;

- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithmIdentifier;

- (JavaIoOutputStream *)getOutputStream;

- (jboolean)verifyWithByteArray:(IOSByteArray *)expected;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier)

J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier, sigs_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier, stream_, JavaIoOutputStream *)

__attribute__((unused)) static void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier *self, IOSObjectArray *sigs);

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(IOSObjectArray *sigs) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(IOSObjectArray *sigs);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.java"


#line 33
@implementation OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 37
- (instancetype)init {
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 41
- (OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)setProviderWithJavaSecurityProvider:(JavaSecurityProvider *)provider {
  
#line 43
  helper_ = new_OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(new_OrgBouncycastleJcajceUtilProviderJcaJceHelper_initWithJavaSecurityProvider_(provider));
  
#line 45
  return self;
}


#line 48
- (OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)setProviderWithNSString:(NSString *)providerName {
  
#line 50
  helper_ = new_OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(new_OrgBouncycastleJcajceUtilNamedJcaJceHelper_initWithNSString_(providerName));
  
#line 52
  return self;
}


#line 55
- (id<OrgBouncycastleOperatorContentVerifierProvider>)buildWithOrgBouncycastleCertX509CertificateHolder:(OrgBouncycastleCertX509CertificateHolder *)certHolder {
  
#line 58
  return [self buildWithJavaSecurityCertX509Certificate:[((OrgBouncycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) convertCertificateWithOrgBouncycastleCertX509CertificateHolder:certHolder]];
}

- (id<OrgBouncycastleOperatorContentVerifierProvider>)buildWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)certificate {
  
#line 64
  OrgBouncycastleCertX509CertificateHolder *certHolder;
  
#line 66
  @try {
    
#line 68
    certHolder = new_OrgBouncycastleCertJcajceJcaX509CertificateHolder_initWithJavaSecurityCertX509Certificate_(certificate);
  }
  @catch (JavaSecurityCertCertificateEncodingException *e) {
    
#line 72
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot process certificate: ", [e getMessage]), e);
  }
  
#line 75
  return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(self, certHolder, certificate);
}


#line 120
- (id<OrgBouncycastleOperatorContentVerifierProvider>)buildWithJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  
#line 123
  return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(self, publicKey);
}


#line 183
- (id<OrgBouncycastleOperatorContentVerifierProvider>)buildWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)publicKey {
  
#line 186
  return [self buildWithJavaSecurityPublicKey:[((OrgBouncycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) convertPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:publicKey]];
}

- (id<OrgBouncycastleOperatorContentVerifier>)createCompositeVerifierWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)compAlgId
                                                                                          withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  
#line 192
  if ([publicKey isKindOfClass:[OrgBouncycastleJcajceCompositePublicKey class]]) {
    
#line 194
    id<JavaUtilList> pubKeys = [((OrgBouncycastleJcajceCompositePublicKey *) nil_chk(((OrgBouncycastleJcajceCompositePublicKey *) publicKey))) getPublicKeys];
    OrgBouncycastleAsn1ASN1Sequence *keySeq = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(compAlgId)) getParameters]);
    IOSObjectArray *sigs = [IOSObjectArray newArrayWithLength:[((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(keySeq)) size] type:JavaSecuritySignature_class_()];
    for (jint i = 0; i != [keySeq size]; i++) {
      
#line 199
      OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlg = OrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([keySeq getObjectAtWithInt:i]);
      if ([((id<JavaUtilList>) nil_chk(pubKeys)) getWithInt:i] != nil) {
        
#line 202
        (void) IOSObjectArray_Set(sigs, i, [self createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:sigAlg withJavaSecurityPublicKey:[pubKeys getWithInt:i]]);
      }
      else {
        
#line 206
        (void) IOSObjectArray_Set(sigs, i, nil);
      }
    }
    
#line 210
    return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(sigs);
  }
  OrgBouncycastleAsn1ASN1Sequence *keySeq = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(compAlgId)) getParameters]);
  IOSObjectArray *sigs = [IOSObjectArray newArrayWithLength:[((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(keySeq)) size] type:JavaSecuritySignature_class_()];
  for (jint i = 0; i != [keySeq size]; i++) {
    
#line 216
    OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlg = OrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([keySeq getObjectAtWithInt:i]);
    @try {
      
#line 219
      (void) IOSObjectArray_Set(sigs, i, [self createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:sigAlg withJavaSecurityPublicKey:publicKey]);
    }
    @catch (JavaLangException *e) {
      
#line 223
      (void) IOSObjectArray_Set(sigs, i, nil);
    }
  }
  
#line 228
  return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(sigs);
}


#line 231
- (JavaSecuritySignature *)createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm
                                                               withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  
#line 234
  @try {
    
#line 236
    JavaSecuritySignature *sig = [((OrgBouncycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm];
    
#line 238
    [((JavaSecuritySignature *) nil_chk(sig)) initVerifyWithJavaSecurityPublicKey:publicKey];
    
#line 240
    return sig;
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    
#line 244
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"exception on setup: ", e), e);
  }
}


#line 248
- (JavaSecuritySignature *)createRawSigWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm
                                                            withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)publicKey {
  JavaSecuritySignature *rawSig;
  @try {
    
#line 253
    rawSig = [((OrgBouncycastleOperatorJcajceOperatorHelper *) nil_chk(helper_)) createRawSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm];
    
#line 255
    if (rawSig != nil) {
      
#line 257
      [rawSig initVerifyWithJavaSecurityPublicKey:publicKey];
    }
  }
  @catch (JavaLangException *e) {
    
#line 262
    rawSig = nil;
  }
  return rawSig;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifierProvider;", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifierProvider;", 0x1, 3, 6, 7, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifierProvider;", 0x1, 3, 8, 7, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifierProvider;", 0x1, 3, 9, 7, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifier;", 0x0, 10, 11, 7, -1, -1, -1 },
    { NULL, "LJavaSecuritySignature;", 0x0, 12, 11, 7, -1, -1, -1 },
    { NULL, "LJavaSecuritySignature;", 0x0, 13, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setProviderWithJavaSecurityProvider:);
  methods[2].selector = @selector(setProviderWithNSString:);
  methods[3].selector = @selector(buildWithOrgBouncycastleCertX509CertificateHolder:);
  methods[4].selector = @selector(buildWithJavaSecurityCertX509Certificate:);
  methods[5].selector = @selector(buildWithJavaSecurityPublicKey:);
  methods[6].selector = @selector(buildWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[7].selector = @selector(createCompositeVerifierWithOrgBouncycastleAsn1X509AlgorithmIdentifier:withJavaSecurityPublicKey:);
  methods[8].selector = @selector(createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:withJavaSecurityPublicKey:);
  methods[9].selector = @selector(createRawSigWithOrgBouncycastleAsn1X509AlgorithmIdentifier:withJavaSecurityPublicKey:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "helper_", "LOrgBouncycastleOperatorJcajceOperatorHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setProvider", "LJavaSecurityProvider;", "LNSString;", "build", "LOrgBouncycastleCertX509CertificateHolder;", "LOrgBouncycastleOperatorOperatorCreationException;LJavaSecurityCertCertificateException;", "LJavaSecurityCertX509Certificate;", "LOrgBouncycastleOperatorOperatorCreationException;", "LJavaSecurityPublicKey;", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "createCompositeVerifier", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;LJavaSecurityPublicKey;", "createSignature", "createRawSig", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier;LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier;LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier;" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder = { "JcaContentVerifierProviderBuilder", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0x1, 10, 1, -1, 14, -1, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;
}

@end


#line 37
void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_init(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *self) {
  NSObject_init(self);
  self->helper_ = new_OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(new_OrgBouncycastleJcajceUtilDefaultJcaJceHelper_init());
}


#line 37
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder, init)
}


#line 37
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.java"


#line 76
@implementation OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1


#line 76
- (instancetype)initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)outer$
                                          withOrgBouncycastleCertX509CertificateHolder:(OrgBouncycastleCertX509CertificateHolder *)capture$0
                                                   withJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)capture$1 {
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(self, outer$, capture$0, capture$1);
  return self;
}


#line 77
- (jboolean)hasAssociatedCertificate {
  
#line 80
  return true;
}

- (OrgBouncycastleCertX509CertificateHolder *)getAssociatedCertificate {
  
#line 86
  return JreRetainedLocalValue(val$certHolder_);
}

- (id<OrgBouncycastleOperatorContentVerifier>)getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm {
  
#line 93
  if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(algorithm)) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_alg_composite)]) {
    
#line 95
    return JreRetainedLocalValue([this$0_ createCompositeVerifierWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm withJavaSecurityPublicKey:[((JavaSecurityCertX509Certificate *) nil_chk(val$certificate_)) getPublicKey]]);
  }
  JavaSecuritySignature *sig;
  @try {
    
#line 100
    sig = [((OrgBouncycastleOperatorJcajceOperatorHelper *) nil_chk(this$0_->helper_)) createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm];
    
#line 102
    [((JavaSecuritySignature *) nil_chk(sig)) initVerifyWithJavaSecurityPublicKey:[((JavaSecurityCertX509Certificate *) nil_chk(val$certificate_)) getPublicKey]];
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    
#line 106
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"exception on setup: ", e), e);
  }
  
#line 109
  JavaSecuritySignature *rawSig = [this$0_ createRawSigWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm withJavaSecurityPublicKey:[((JavaSecurityCertX509Certificate *) nil_chk(val$certificate_)) getPublicKey]];
  
#line 111
  if (rawSig != nil) {
    
#line 113
    return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(this$0_, algorithm, sig, rawSig);
  }
  return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(algorithm, sig);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCertX509CertificateHolder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifier;", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:withOrgBouncycastleCertX509CertificateHolder:withJavaSecurityCertX509Certificate:);
  methods[1].selector = @selector(hasAssociatedCertificate);
  methods[2].selector = @selector(getAssociatedCertificate);
  methods[3].selector = @selector(getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$certHolder_", "LOrgBouncycastleCertX509CertificateHolder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$certificate_", "LJavaSecurityCertX509Certificate;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;LOrgBouncycastleCertX509CertificateHolder;LJavaSecurityCertX509Certificate;", "get", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", "LOrgBouncycastleOperatorOperatorCreationException;", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;", "buildWithJavaSecurityCertX509Certificate:" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 = { "", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0x8000, 4, 3, 4, -1, 5, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1;
}

@end


#line 76
void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 *self, OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleCertX509CertificateHolder *capture$0, JavaSecurityCertX509Certificate *capture$1) {
  self->this$0_ = outer$;
  self->val$certHolder_ = capture$0;
  self->val$certificate_ = capture$1;
  NSObject_init(self);
}


#line 76
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleCertX509CertificateHolder *capture$0, JavaSecurityCertX509Certificate *capture$1) {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1, initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_, outer$, capture$0, capture$1)
}


#line 76
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1 *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleCertX509CertificateHolder *capture$0, JavaSecurityCertX509Certificate *capture$1) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_1, initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleCertX509CertificateHolder_withJavaSecurityCertX509Certificate_, outer$, capture$0, capture$1)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.java"


#line 124
@implementation OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2


#line 124
- (instancetype)initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)outer$
                                                             withJavaSecurityPublicKey:(id<JavaSecurityPublicKey>)capture$0 {
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(self, outer$, capture$0);
  return self;
}


#line 125
- (jboolean)hasAssociatedCertificate {
  
#line 128
  return false;
}

- (OrgBouncycastleCertX509CertificateHolder *)getAssociatedCertificate {
  
#line 134
  return JreRetainedLocalValue(nil);
}

- (id<OrgBouncycastleOperatorContentVerifier>)getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm {
  
#line 141
  if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(algorithm)) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_alg_composite)]) {
    
#line 143
    return JreRetainedLocalValue([this$0_ createCompositeVerifierWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm withJavaSecurityPublicKey:val$publicKey_]);
  }
  
#line 146
  if (!([val$publicKey_ isKindOfClass:[OrgBouncycastleJcajceCompositePublicKey class]])) {
    JavaSecuritySignature *sig = [this$0_ createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm withJavaSecurityPublicKey:val$publicKey_];
    
#line 149
    JavaSecuritySignature *rawSig = [this$0_ createRawSigWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm withJavaSecurityPublicKey:val$publicKey_];
    
#line 151
    if (rawSig != nil) {
      
#line 153
      return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(this$0_, algorithm, sig, rawSig);
    }
    return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(algorithm, sig);
  }
  id<JavaUtilList> keys = [((OrgBouncycastleJcajceCompositePublicKey *) nil_chk(((OrgBouncycastleJcajceCompositePublicKey *) cast_chk(val$publicKey_, [OrgBouncycastleJcajceCompositePublicKey class])))) getPublicKeys];
  
#line 159
  for (id<JavaSecurityPublicKey> __strong key in nil_chk(keys)) {
    @try {
      
#line 162
      JavaSecuritySignature *sig = [this$0_ createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm withJavaSecurityPublicKey:key];
      
#line 164
      JavaSecuritySignature *rawSig = [this$0_ createRawSigWithOrgBouncycastleAsn1X509AlgorithmIdentifier:algorithm withJavaSecurityPublicKey:key];
      
#line 166
      if (rawSig != nil) {
        
#line 168
        return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(this$0_, algorithm, sig, rawSig);
      }
      return new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(algorithm, sig);
    }
    @catch (OrgBouncycastleOperatorOperatorCreationException *e) {
    }
  }
  
#line 178
  @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_(@"no matching algorithm found for key");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleCertX509CertificateHolder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleOperatorContentVerifier;", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:withJavaSecurityPublicKey:);
  methods[1].selector = @selector(hasAssociatedCertificate);
  methods[2].selector = @selector(getAssociatedCertificate);
  methods[3].selector = @selector(getWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$publicKey_", "LJavaSecurityPublicKey;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;LJavaSecurityPublicKey;", "get", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", "LOrgBouncycastleOperatorOperatorCreationException;", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;", "buildWithJavaSecurityPublicKey:" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 = { "", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0x8000, 4, 2, 4, -1, 5, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2;
}

@end


#line 124
void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 *self, OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, id<JavaSecurityPublicKey> capture$0) {
  self->this$0_ = outer$;
  self->val$publicKey_ = capture$0;
  NSObject_init(self);
}


#line 124
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, id<JavaSecurityPublicKey> capture$0) {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2, initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_, outer$, capture$0)
}


#line 124
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2 *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, id<JavaSecurityPublicKey> capture$0) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_2, initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withJavaSecurityPublicKey_, outer$, capture$0)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.java"


#line 267
@implementation OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier


#line 275
- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm
                                         withJavaSecuritySignature:(JavaSecuritySignature *)signature {
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(self, algorithm, signature);
  return self;
}


#line 282
- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithmIdentifier {
  
#line 285
  return algorithm_;
}

- (JavaIoOutputStream *)getOutputStream {
  
#line 291
  if (stream_ == nil) {
    
#line 293
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"verifier not initialised");
  }
  
#line 296
  return stream_;
}


#line 299
- (jboolean)verifyWithByteArray:(IOSByteArray *)expected {
  return OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_verifyWithByteArray_(self, expected);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:withJavaSecuritySignature:);
  methods[1].selector = @selector(getAlgorithmIdentifier);
  methods[2].selector = @selector(getOutputStream);
  methods[3].selector = @selector(verifyWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "algorithm_", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "signature_", "LJavaSecuritySignature;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "stream_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1X509AlgorithmIdentifier;LJavaSecuritySignature;", "verify", "[B", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier = { "SigVerifier", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0xa, 4, 3, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier;
}

@end


#line 275
void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *self, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *signature) {
  NSObject_init(self);
  self->algorithm_ = algorithm;
  self->signature_ = signature;
  self->stream_ = OrgBouncycastleJcajceIoOutputStreamFactory_createStreamWithJavaSecuritySignature_(signature);
}


#line 275
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *signature) {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier, initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_, algorithm, signature)
}


#line 275
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *signature) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier, initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_, algorithm, signature)
}


#line 299
jboolean OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_verifyWithByteArray_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier *self, IOSByteArray *expected) {
  
#line 302
  @try {
    
#line 304
    return [((JavaSecuritySignature *) nil_chk(self->signature_)) verifyWithByteArray:expected];
  }
  @catch (JavaSecuritySignatureException *e) {
    
#line 308
    @throw new_OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"exception obtaining signature: ", [e getMessage]), e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.java"


#line 313
@implementation OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier


#line 319
- (instancetype)initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *)outer$
                                        withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm
                                                             withJavaSecuritySignature:(JavaSecuritySignature *)standardSig
                                                             withJavaSecuritySignature:(JavaSecuritySignature *)rawSignature {
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(self, outer$, algorithm, standardSig, rawSignature);
  return self;
}


#line 325
- (jboolean)verifyWithByteArray:(IOSByteArray *)expected {
  
#line 328
  @try {
    
#line 330
    return OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_verifyWithByteArray_(self, expected);
  }
  @finally {
    
#line 336
    @try {
      
#line 338
      [((JavaSecuritySignature *) nil_chk(rawSignature_)) verifyWithByteArray:expected];
    }
    @catch (JavaLangException *e) {
    }
  }
}


#line 347
- (jboolean)verifyWithByteArray:(IOSByteArray *)digest
                  withByteArray:(IOSByteArray *)expected {
  
#line 350
  @try {
    
#line 352
    [((JavaSecuritySignature *) nil_chk(rawSignature_)) updateWithByteArray:digest];
    
#line 354
    return [rawSignature_ verifyWithByteArray:expected];
  }
  @catch (JavaSecuritySignatureException *e) {
    
#line 358
    @throw new_OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"exception obtaining raw signature: ", [e getMessage]), e);
  }
  @finally {
    
#line 364
    @try {
      
#line 366
      [rawSignature_ verifyWithByteArray:expected];
    }
    @catch (JavaLangException *e) {
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder:withOrgBouncycastleAsn1X509AlgorithmIdentifier:withJavaSecuritySignature:withJavaSecuritySignature:);
  methods[1].selector = @selector(verifyWithByteArray:);
  methods[2].selector = @selector(verifyWithByteArray:withByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "rawSignature_", "LJavaSecuritySignature;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;LOrgBouncycastleAsn1X509AlgorithmIdentifier;LJavaSecuritySignature;LJavaSecuritySignature;", "verify", "[B", "[B[B", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier = { "RawSigVerifier", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0x2, 3, 1, 4, -1, -1, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier;
}

@end


#line 319
void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier *self, OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *standardSig, JavaSecuritySignature *rawSignature) {
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_SigVerifier_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_(self,
#line 321
  algorithm, standardSig);
  self->rawSignature_ = rawSignature;
}


#line 319
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *standardSig, JavaSecuritySignature *rawSignature) {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier, initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_, outer$, algorithm, standardSig, rawSignature)
}


#line 319
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier_initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder *outer$, OrgBouncycastleAsn1X509AlgorithmIdentifier *algorithm, JavaSecuritySignature *standardSig, JavaSecuritySignature *rawSignature) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier, initWithOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withJavaSecuritySignature_withJavaSecuritySignature_, outer$, algorithm, standardSig, rawSignature)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_RawSigVerifier)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/JcaContentVerifierProviderBuilder.java"


#line 376
@implementation OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier


#line 382
- (instancetype)initWithJavaSecuritySignatureArray:(IOSObjectArray *)sigs {
  OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(self, sigs);
  return self;
}


#line 407
- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithmIdentifier {
  
#line 410
  return new_OrgBouncycastleAsn1X509AlgorithmIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(JreLoadStatic(OrgBouncycastleAsn1MiscMiscObjectIdentifiers, id_alg_composite));
}

- (JavaIoOutputStream *)getOutputStream {
  
#line 416
  return stream_;
}

- (jboolean)verifyWithByteArray:(IOSByteArray *)expected {
  
#line 422
  @try {
    
#line 424
    OrgBouncycastleAsn1ASN1Sequence *sigSeq = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(expected);
    jboolean failed = false;
    for (jint i = 0; i != [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(sigSeq)) size]; i++) {
      
#line 428
      if (IOSObjectArray_Get(nil_chk(sigs_), i) != nil && ![((JavaSecuritySignature *) nil_chk(IOSObjectArray_Get(sigs_, i))) verifyWithByteArray:[((OrgBouncycastleAsn1DERBitString *) nil_chk(OrgBouncycastleAsn1DERBitString_getInstanceWithId_([sigSeq getObjectAtWithInt:i]))) getBytes]]) {
        
#line 430
        failed = true;
      }
    }
    return !failed;
  }
  @catch (JavaSecuritySignatureException *e) {
    
#line 437
    @throw new_OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"exception obtaining signature: ", [e getMessage]), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoOutputStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaSecuritySignatureArray:);
  methods[1].selector = @selector(getAlgorithmIdentifier);
  methods[2].selector = @selector(getOutputStream);
  methods[3].selector = @selector(verifyWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sigs_", "[LJavaSecuritySignature;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "stream_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LJavaSecuritySignature;", "LOrgBouncycastleOperatorOperatorCreationException;", "verify", "[B", "LOrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder;" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier = { "CompositeVerifier", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0xa, 4, 2, 4, -1, -1, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier;
}

@end


#line 382
void OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier *self, IOSObjectArray *sigs) {
  NSObject_init(self);
  
#line 385
  self->sigs_ = sigs;
  
#line 387
  jint start = 0;
  while (start < ((IOSObjectArray *) nil_chk(sigs))->size_ && IOSObjectArray_Get(sigs, start) == nil) {
    
#line 390
    start++;
  }
  
#line 393
  if (start == sigs->size_) {
    
#line 395
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_(@"no matching signature found in composite");
  }
  self->stream_ = OrgBouncycastleJcajceIoOutputStreamFactory_createStreamWithJavaSecuritySignature_(IOSObjectArray_Get(sigs, start));
  for (jint i = start + 1; i != sigs->size_; i++) {
    
#line 400
    if (IOSObjectArray_Get(sigs, i) != nil) {
      
#line 402
      self->stream_ = new_OrgBouncycastleUtilIoTeeOutputStream_initWithJavaIoOutputStream_withJavaIoOutputStream_(self->stream_, OrgBouncycastleJcajceIoOutputStreamFactory_createStreamWithJavaSecuritySignature_(IOSObjectArray_Get(sigs, i)));
    }
  }
}


#line 382
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier *new_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(IOSObjectArray *sigs) {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier, initWithJavaSecuritySignatureArray_, sigs)
}


#line 382
OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier *create_OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier_initWithJavaSecuritySignatureArray_(IOSObjectArray *sigs) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier, initWithJavaSecuritySignatureArray_, sigs)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleOperatorJcajceJcaContentVerifierProviderBuilder_CompositeVerifier)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/OperatorHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleOperatorJcajceOperatorHelper")
#ifdef RESTRICT_OrgBouncycastleOperatorJcajceOperatorHelper
#define INCLUDE_ALL_OrgBouncycastleOperatorJcajceOperatorHelper 0
#else
#define INCLUDE_ALL_OrgBouncycastleOperatorJcajceOperatorHelper 1
#endif
#undef RESTRICT_OrgBouncycastleOperatorJcajceOperatorHelper

#if !defined (OrgBouncycastleOperatorJcajceOperatorHelper_) && (INCLUDE_ALL_OrgBouncycastleOperatorJcajceOperatorHelper || defined(INCLUDE_OrgBouncycastleOperatorJcajceOperatorHelper))
#define OrgBouncycastleOperatorJcajceOperatorHelper_

@class JavaSecurityAlgorithmParameters;
@class JavaSecurityCertX509Certificate;
@class JavaSecurityKeyPairGenerator;
@class JavaSecurityMessageDigest;
@class JavaSecuritySignature;
@class JavaxCryptoCipher;
@class JavaxCryptoKeyAgreement;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;
@class OrgBouncycastleAsn1X509SubjectPublicKeyInfo;
@class OrgBouncycastleCertX509CertificateHolder;
@protocol JavaSecurityPublicKey;
@protocol JavaUtilMap;
@protocol OrgBouncycastleJcajceUtilJcaJceHelper;

@interface OrgBouncycastleOperatorJcajceOperatorHelper : NSObject

#pragma mark Public

- (JavaSecurityCertX509Certificate *)convertCertificateWithOrgBouncycastleCertX509CertificateHolder:(OrgBouncycastleCertX509CertificateHolder *)certHolder;

- (id<JavaSecurityPublicKey>)convertPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)publicKeyInfo;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper:(id<OrgBouncycastleJcajceUtilJcaJceHelper>)helper;

- (JavaSecurityAlgorithmParameters *)createAlgorithmParametersWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)cipherAlgId;

- (JavaxCryptoCipher *)createAsymmetricWrapperWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm
                                                                          withJavaUtilMap:(id<JavaUtilMap>)extraAlgNames;

- (JavaxCryptoCipher *)createCipherWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm;

- (JavaSecurityMessageDigest *)createDigestWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)digAlgId;

- (JavaxCryptoKeyAgreement *)createKeyAgreementWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm;

- (JavaSecurityKeyPairGenerator *)createKeyPairGeneratorWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm;

- (JavaSecuritySignature *)createRawSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm;

- (JavaSecuritySignature *)createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId;

- (JavaxCryptoCipher *)createSymmetricWrapperWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm;

+ (NSString *)getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (NSString *)getKeyAlgorithmNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

- (jint)getKeySizeInBitsWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid;

- (NSString *)getWrappingAlgorithmNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleOperatorJcajceOperatorHelper)

FOUNDATION_EXPORT void OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(OrgBouncycastleOperatorJcajceOperatorHelper *self, id<OrgBouncycastleJcajceUtilJcaJceHelper> helper);

FOUNDATION_EXPORT OrgBouncycastleOperatorJcajceOperatorHelper *new_OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(id<OrgBouncycastleJcajceUtilJcaJceHelper> helper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleOperatorJcajceOperatorHelper *create_OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(id<OrgBouncycastleJcajceUtilJcaJceHelper> helper);

FOUNDATION_EXPORT NSString *OrgBouncycastleOperatorJcajceOperatorHelper_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleOperatorJcajceOperatorHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleOperatorJcajceOperatorHelper")

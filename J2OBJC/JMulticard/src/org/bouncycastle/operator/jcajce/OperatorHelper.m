//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/OperatorHelper.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/math/BigInteger.h"
#include "java/security/AlgorithmParameters.h"
#include "java/security/GeneralSecurityException.h"
#include "java/security/KeyFactory.h"
#include "java/security/KeyPairGenerator.h"
#include "java/security/MessageDigest.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "java/security/NoSuchProviderException.h"
#include "java/security/PublicKey.h"
#include "java/security/Signature.h"
#include "java/security/cert/Certificate.h"
#include "java/security/cert/CertificateException.h"
#include "java/security/cert/CertificateFactory.h"
#include "java/security/cert/X509Certificate.h"
#include "java/security/spec/InvalidKeySpecException.h"
#include "java/security/spec/PSSParameterSpec.h"
#include "java/security/spec/X509EncodedKeySpec.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "javax/crypto/Cipher.h"
#include "javax/crypto/KeyAgreement.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/cryptopro/CryptoProObjectIdentifiers.h"
#include "org/bouncycastle/asn1/kisa/KISAObjectIdentifiers.h"
#include "org/bouncycastle/asn1/nist/NISTObjectIdentifiers.h"
#include "org/bouncycastle/asn1/ntt/NTTObjectIdentifiers.h"
#include "org/bouncycastle/asn1/oiw/OIWObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/pkcs/RSASSAPSSparams.h"
#include "org/bouncycastle/asn1/teletrust/TeleTrusTObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.h"
#include "org/bouncycastle/cert/X509CertificateHolder.h"
#include "org/bouncycastle/cms/CMSException.h"
#include "org/bouncycastle/jcajce/util/AlgorithmParametersUtils.h"
#include "org/bouncycastle/jcajce/util/JcaJceHelper.h"
#include "org/bouncycastle/jcajce/util/MessageDigestUtils.h"
#include "org/bouncycastle/operator/DefaultSignatureNameFinder.h"
#include "org/bouncycastle/operator/OperatorCreationException.h"
#include "org/bouncycastle/operator/jcajce/OperatorHelper.h"
#include "org/bouncycastle/util/Integers.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/operator/jcajce/OperatorHelper must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleOperatorJcajceOperatorHelper () {
 @public
  id<OrgBouncycastleJcajceUtilJcaJceHelper> helper_;
}

+ (NSString *)getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId;

- (jboolean)notDefaultPSSParamsWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceOperatorHelper, helper_, id<OrgBouncycastleJcajceUtilJcaJceHelper>)

inline id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_get_oids(void);
static id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_oids;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleOperatorJcajceOperatorHelper, oids, id<JavaUtilMap>)

inline id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_get_asymmetricWrapperAlgNames(void);
static id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_asymmetricWrapperAlgNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleOperatorJcajceOperatorHelper, asymmetricWrapperAlgNames, id<JavaUtilMap>)

inline id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_get_symmetricWrapperAlgNames(void);
static id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleOperatorJcajceOperatorHelper, symmetricWrapperAlgNames, id<JavaUtilMap>)

inline id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_get_symmetricKeyAlgNames(void);
static id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleOperatorJcajceOperatorHelper, symmetricKeyAlgNames, id<JavaUtilMap>)

inline id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_get_symmetricWrapperKeySizes(void);
static id<JavaUtilMap> OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleOperatorJcajceOperatorHelper, symmetricWrapperKeySizes, id<JavaUtilMap>)

inline OrgBouncycastleOperatorDefaultSignatureNameFinder *OrgBouncycastleOperatorJcajceOperatorHelper_get_sigFinder(void);
inline OrgBouncycastleOperatorDefaultSignatureNameFinder *OrgBouncycastleOperatorJcajceOperatorHelper_set_sigFinder(OrgBouncycastleOperatorDefaultSignatureNameFinder *value);
static OrgBouncycastleOperatorDefaultSignatureNameFinder *OrgBouncycastleOperatorJcajceOperatorHelper_sigFinder;
J2OBJC_STATIC_FIELD_OBJ(OrgBouncycastleOperatorJcajceOperatorHelper, sigFinder, OrgBouncycastleOperatorDefaultSignatureNameFinder *)

__attribute__((unused)) static NSString *OrgBouncycastleOperatorJcajceOperatorHelper_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId);

__attribute__((unused)) static jboolean OrgBouncycastleOperatorJcajceOperatorHelper_notDefaultPSSParamsWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleOperatorJcajceOperatorHelper *self, OrgBouncycastleAsn1ASN1Sequence *seq);

@interface OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException : JavaSecurityCertCertificateException {
 @public
  JavaLangThrowable *cause_OpCertificateException_;
}

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException)

J2OBJC_FIELD_SETTER(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException, cause_OpCertificateException_, JavaLangThrowable *)

__attribute__((unused)) static void OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException *self, NSString *msg, JavaLangThrowable *cause);

__attribute__((unused)) static OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException *new_OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException *create_OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/OperatorHelper.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleOperatorJcajceOperatorHelper)


#line 48
@implementation OrgBouncycastleOperatorJcajceOperatorHelper


#line 104
- (instancetype)initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper:(id<OrgBouncycastleJcajceUtilJcaJceHelper>)helper {
  OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(self, helper);
  return self;
}

- (NSString *)getWrappingAlgorithmNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid {
  
#line 111
  return (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames)) getWithId:algOid], [NSString class]);
}


#line 114
- (jint)getKeySizeInBitsWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algOid {
  
#line 116
  return [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes)) getWithId:algOid], [JavaLangInteger class])))) intValue];
}


#line 119
- (JavaSecurityKeyPairGenerator *)createKeyPairGeneratorWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm {
  
#line 122
  @try {
    
#line 124
    NSString *agreementName = nil;
    
#line 126
    if (agreementName != nil) {
      
#line 128
      @try {
        
#line 131
        return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createKeyPairGeneratorWithNSString:agreementName];
      }
      @catch (JavaSecurityNoSuchAlgorithmException *e) {
      }
    }
    
#line 138
    return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createKeyPairGeneratorWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(algorithm)) getId]];
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    
#line 142
    @throw new_OrgBouncycastleCmsCMSException_initWithNSString_withJavaLangException_(JreStrcat("$$", @"cannot create key agreement: ", [e getMessage]), e);
  }
}


#line 146
- (JavaxCryptoCipher *)createCipherWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm {
  
#line 149
  @try {
    
#line 151
    return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createCipherWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(algorithm)) getId]];
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    
#line 155
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot create cipher: ", [e getMessage]), e);
  }
}


#line 159
- (JavaxCryptoKeyAgreement *)createKeyAgreementWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm {
  
#line 162
  @try {
    
#line 164
    NSString *agreementName = nil;
    
#line 166
    if (agreementName != nil) {
      
#line 168
      @try {
        
#line 171
        return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createKeyAgreementWithNSString:agreementName];
      }
      @catch (JavaSecurityNoSuchAlgorithmException *e) {
      }
    }
    
#line 178
    return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createKeyAgreementWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(algorithm)) getId]];
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    
#line 182
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot create key agreement: ", [e getMessage]), e);
  }
}


#line 186
- (JavaxCryptoCipher *)createAsymmetricWrapperWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm
                                                                          withJavaUtilMap:(id<JavaUtilMap>)extraAlgNames {
  
#line 189
  @try {
    
#line 191
    NSString *cipherName = nil;
    
#line 193
    if (![((id<JavaUtilMap>) nil_chk(extraAlgNames)) isEmpty]) {
      
#line 195
      cipherName = (NSString *) cast_chk([extraAlgNames getWithId:algorithm], [NSString class]);
    }
    
#line 198
    if (cipherName == nil) {
      
#line 200
      cipherName = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastleOperatorJcajceOperatorHelper_asymmetricWrapperAlgNames)) getWithId:algorithm], [NSString class]);
    }
    
#line 203
    if (cipherName != nil) {
      
#line 205
      @try {
        
#line 208
        return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createCipherWithNSString:cipherName];
      }
      @catch (JavaSecurityNoSuchAlgorithmException *e) {
        
#line 213
        if ([cipherName isEqual:@"RSA/ECB/PKCS1Padding"]) {
          
#line 215
          @try {
            
#line 217
            return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createCipherWithNSString:@"RSA/NONE/PKCS1Padding"];
          }
          @catch (JavaSecurityNoSuchAlgorithmException *ex) {
          }
        }
      }
    }
    
#line 228
    return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createCipherWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(algorithm)) getId]];
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    
#line 232
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot create cipher: ", [e getMessage]), e);
  }
}


#line 236
- (JavaxCryptoCipher *)createSymmetricWrapperWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)algorithm {
  
#line 239
  @try {
    
#line 241
    NSString *cipherName = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames)) getWithId:algorithm], [NSString class]);
    
#line 243
    if (cipherName != nil) {
      
#line 245
      @try {
        
#line 248
        return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createCipherWithNSString:cipherName];
      }
      @catch (JavaSecurityNoSuchAlgorithmException *e) {
      }
    }
    
#line 255
    return [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createCipherWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(algorithm)) getId]];
  }
  @catch (JavaSecurityGeneralSecurityException *e) {
    
#line 259
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot create cipher: ", [e getMessage]), e);
  }
}


#line 263
- (JavaSecurityAlgorithmParameters *)createAlgorithmParametersWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)cipherAlgId {
  
#line 266
  JavaSecurityAlgorithmParameters *parameters;
  
#line 268
  if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(cipherAlgId)) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, rsaEncryption)]) {
    
#line 270
    return nil;
  }
  
#line 273
  @try {
    
#line 275
    parameters = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createAlgorithmParametersWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([cipherAlgId getAlgorithm])) getId]];
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    
#line 279
    return nil;
  }
  @catch (JavaSecurityNoSuchProviderException *e) {
    
#line 283
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot create algorithm parameters: ", [e getMessage]), e);
  }
  
#line 286
  @try {
    
#line 288
    [((JavaSecurityAlgorithmParameters *) nil_chk(parameters)) init__WithByteArray:[((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([cipherAlgId getParameters])) toASN1Primitive])) getEncoded]];
  }
  @catch (JavaIoIOException *e) {
    
#line 292
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot initialise algorithm parameters: ", [e getMessage]), e);
  }
  
#line 295
  return parameters;
}


#line 298
- (JavaSecurityMessageDigest *)createDigestWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)digAlgId {
  
#line 301
  JavaSecurityMessageDigest *dig;
  
#line 303
  @try {
    
#line 305
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(digAlgId)) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake256_len)]) {
      
#line 307
      dig = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createMessageDigestWithNSString:JreStrcat("$@", @"SHAKE256-", [((OrgBouncycastleAsn1ASN1Integer *) nil_chk(OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([digAlgId getParameters]))) getValue])];
    }
    else if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([digAlgId getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_shake128_len)]) {
      
#line 311
      dig = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createMessageDigestWithNSString:JreStrcat("$@", @"SHAKE128-", [((OrgBouncycastleAsn1ASN1Integer *) nil_chk(OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([digAlgId getParameters]))) getValue])];
    }
    else {
      
#line 315
      dig = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createMessageDigestWithNSString:OrgBouncycastleJcajceUtilMessageDigestUtils_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_([digAlgId getAlgorithm])];
    }
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    
#line 323
    if ([((id<JavaUtilMap>) nil_chk(OrgBouncycastleOperatorJcajceOperatorHelper_oids)) getWithId:[digAlgId getAlgorithm]] != nil) {
      
#line 325
      NSString *digestAlgorithm = (NSString *) cast_chk([OrgBouncycastleOperatorJcajceOperatorHelper_oids getWithId:[digAlgId getAlgorithm]], [NSString class]);
      
#line 327
      dig = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createMessageDigestWithNSString:digestAlgorithm];
    }
    else {
      
#line 331
      @throw e;
    }
  }
  
#line 335
  return dig;
}


#line 338
- (JavaSecuritySignature *)createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId {
  
#line 341
  NSString *sigName = OrgBouncycastleOperatorJcajceOperatorHelper_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(sigAlgId);
  JavaSecuritySignature *sig;
  
#line 344
  @try {
    
#line 346
    sig = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createSignatureWithNSString:sigName];
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    
#line 353
    if ([((NSString *) nil_chk(sigName)) java_hasSuffix:@"WITHRSAANDMGF1"]) {
      
#line 355
      NSString *signatureAlgorithm = JreStrcat("$$",
#line 356
      [sigName java_substring:0 endIndex:[sigName java_indexOf:'W']], @"WITHRSASSA-PSS");
      
#line 358
      sig = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createSignatureWithNSString:signatureAlgorithm];
    }
    else {
      
#line 362
      @throw e;
    }
  }
  
#line 366
  if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(sigAlgId)) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_RSASSA_PSS)]) {
    
#line 368
    OrgBouncycastleAsn1ASN1Sequence *seq = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([sigAlgId getParameters]);
    
#line 370
    if (OrgBouncycastleOperatorJcajceOperatorHelper_notDefaultPSSParamsWithOrgBouncycastleAsn1ASN1Sequence_(self, seq)) {
      
#line 372
      @try {
        
#line 374
        JavaSecurityAlgorithmParameters *algParams = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createAlgorithmParametersWithNSString:@"PSS"];
        
#line 376
        [((JavaSecurityAlgorithmParameters *) nil_chk(algParams)) init__WithByteArray:[((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getEncoded]];
        
#line 378
        [((JavaSecuritySignature *) nil_chk(sig)) setParameterWithJavaSecuritySpecAlgorithmParameterSpec:[algParams getParameterSpecWithIOSClass:JavaSecuritySpecPSSParameterSpec_class_()]];
      }
      @catch (JavaIoIOException *e) {
        
#line 382
        @throw new_JavaSecurityGeneralSecurityException_initWithNSString_(JreStrcat("$$", @"unable to process PSS parameters: ", [e getMessage]));
      }
    }
  }
  
#line 387
  return sig;
}


#line 390
- (JavaSecuritySignature *)createRawSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algorithm {
  
#line 392
  JavaSecuritySignature *sig;
  
#line 394
  @try {
    
#line 396
    NSString *algName = OrgBouncycastleOperatorJcajceOperatorHelper_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(algorithm);
    
#line 398
    algName = JreStrcat("$$", @"NONE", [((NSString *) nil_chk(algName)) java_substring:[algName java_indexOfString:@"WITH"]]);
    
#line 400
    sig = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createSignatureWithNSString:algName];
    
#line 405
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk(algorithm)) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_RSASSA_PSS)]) {
      
#line 407
      JavaSecurityAlgorithmParameters *params = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createAlgorithmParametersWithNSString:algName];
      
#line 409
      OrgBouncycastleJcajceUtilAlgorithmParametersUtils_loadParametersWithJavaSecurityAlgorithmParameters_withOrgBouncycastleAsn1ASN1Encodable_(params, [algorithm getParameters]);
      
#line 411
      JavaSecuritySpecPSSParameterSpec *spec = ((JavaSecuritySpecPSSParameterSpec *) [((JavaSecurityAlgorithmParameters *) nil_chk(params)) getParameterSpecWithIOSClass:JavaSecuritySpecPSSParameterSpec_class_()]);
      [((JavaSecuritySignature *) nil_chk(sig)) setParameterWithJavaSecuritySpecAlgorithmParameterSpec:spec];
    }
  }
  @catch (JavaLangException *e) {
    
#line 417
    return nil;
  }
  
#line 420
  return sig;
}


#line 423
+ (NSString *)getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)sigAlgId {
  return OrgBouncycastleOperatorJcajceOperatorHelper_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(sigAlgId);
}


#line 430
+ (NSString *)getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleOperatorJcajceOperatorHelper_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 443
- (JavaSecurityCertX509Certificate *)convertCertificateWithOrgBouncycastleCertX509CertificateHolder:(OrgBouncycastleCertX509CertificateHolder *)certHolder {
  
#line 446
  @try {
    
#line 448
    JavaSecurityCertCertificateFactory *certFact = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createCertificateFactoryWithNSString:@"X.509"];
    
#line 450
    return (JavaSecurityCertX509Certificate *) cast_chk([((JavaSecurityCertCertificateFactory *) nil_chk(certFact)) generateCertificateWithJavaIoInputStream:new_JavaIoByteArrayInputStream_initWithByteArray_([((OrgBouncycastleCertX509CertificateHolder *) nil_chk(certHolder)) getEncoded])], [JavaSecurityCertX509Certificate class]);
  }
  @catch (JavaIoIOException *e) {
    
#line 454
    @throw new_OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot get encoded form of certificate: ", [e getMessage]), e);
  }
  @catch (JavaSecurityNoSuchProviderException *e) {
    
#line 458
    @throw new_OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot find factory provider: ", [e getMessage]), e);
  }
}


#line 462
- (id<JavaSecurityPublicKey>)convertPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)publicKeyInfo {
  
#line 465
  @try {
    
#line 467
    JavaSecurityKeyFactory *keyFact = [((id<OrgBouncycastleJcajceUtilJcaJceHelper>) nil_chk(helper_)) createKeyFactoryWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1X509SubjectPublicKeyInfo *) nil_chk(publicKeyInfo)) getAlgorithm])) getAlgorithm])) getId]];
    
#line 469
    return [((JavaSecurityKeyFactory *) nil_chk(keyFact)) generatePublicWithJavaSecuritySpecKeySpec:new_JavaSecuritySpecX509EncodedKeySpec_initWithByteArray_([publicKeyInfo getEncoded])];
  }
  @catch (JavaIoIOException *e) {
    
#line 473
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot get encoded form of key: ", [e getMessage]), e);
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    
#line 477
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot create key factory: ", [e getMessage]), e);
  }
  @catch (JavaSecurityNoSuchProviderException *e) {
    
#line 481
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot find factory provider: ", [e getMessage]), e);
  }
  @catch (JavaSecuritySpecInvalidKeySpecException *e) {
    
#line 485
    @throw new_OrgBouncycastleOperatorOperatorCreationException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"cannot create key factory: ", [e getMessage]), e);
  }
}


#line 509
- (NSString *)getKeyAlgorithmNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 512
  NSString *name = (NSString *) cast_chk([((id<JavaUtilMap>) nil_chk(OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames)) getWithId:oid], [NSString class]);
  
#line 514
  if (name != nil) {
    
#line 516
    return name;
  }
  
#line 519
  return [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId];
}


#line 523
- (jboolean)notDefaultPSSParamsWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  return OrgBouncycastleOperatorJcajceOperatorHelper_notDefaultPSSParamsWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 3, 2, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityKeyPairGenerator;", 0x0, 4, 2, 5, -1, -1, -1 },
    { NULL, "LJavaxCryptoCipher;", 0x0, 6, 2, 7, -1, -1, -1 },
    { NULL, "LJavaxCryptoKeyAgreement;", 0x0, 8, 2, 7, -1, -1, -1 },
    { NULL, "LJavaxCryptoCipher;", 0x0, 9, 10, 7, -1, -1, -1 },
    { NULL, "LJavaxCryptoCipher;", 0x0, 11, 2, 7, -1, -1, -1 },
    { NULL, "LJavaSecurityAlgorithmParameters;", 0x0, 12, 13, 7, -1, -1, -1 },
    { NULL, "LJavaSecurityMessageDigest;", 0x0, 14, 13, 15, -1, -1, -1 },
    { NULL, "LJavaSecuritySignature;", 0x0, 16, 13, 15, -1, -1, -1 },
    { NULL, "LJavaSecuritySignature;", 0x0, 17, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 18, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 19, 2, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509Certificate;", 0x1, 20, 21, 22, -1, -1, -1 },
    { NULL, "LJavaSecurityPublicKey;", 0x1, 23, 24, 7, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 25, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 26, 27, 15, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper:);
  methods[1].selector = @selector(getWrappingAlgorithmNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[2].selector = @selector(getKeySizeInBitsWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[3].selector = @selector(createKeyPairGeneratorWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[4].selector = @selector(createCipherWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[5].selector = @selector(createKeyAgreementWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[6].selector = @selector(createAsymmetricWrapperWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withJavaUtilMap:);
  methods[7].selector = @selector(createSymmetricWrapperWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[8].selector = @selector(createAlgorithmParametersWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[9].selector = @selector(createDigestWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[10].selector = @selector(createSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[11].selector = @selector(createRawSignatureWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[12].selector = @selector(getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier:);
  methods[13].selector = @selector(getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[14].selector = @selector(convertCertificateWithOrgBouncycastleCertX509CertificateHolder:);
  methods[15].selector = @selector(convertPublicKeyWithOrgBouncycastleAsn1X509SubjectPublicKeyInfo:);
  methods[16].selector = @selector(getKeyAlgorithmNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[17].selector = @selector(notDefaultPSSParamsWithOrgBouncycastleAsn1ASN1Sequence:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "oids", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "asymmetricWrapperAlgNames", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 29, -1, -1 },
    { "symmetricWrapperAlgNames", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 30, -1, -1 },
    { "symmetricKeyAlgNames", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 31, -1, -1 },
    { "symmetricWrapperKeySizes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 32, -1, -1 },
    { "sigFinder", "LOrgBouncycastleOperatorDefaultSignatureNameFinder;", .constantValue.asLong = 0, 0xa, -1, 33, -1, -1 },
    { "helper_", "LOrgBouncycastleJcajceUtilJcaJceHelper;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleJcajceUtilJcaJceHelper;", "getWrappingAlgorithmName", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getKeySizeInBits", "createKeyPairGenerator", "LOrgBouncycastleCmsCMSException;", "createCipher", "LOrgBouncycastleOperatorOperatorCreationException;", "createKeyAgreement", "createAsymmetricWrapper", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LJavaUtilMap;", "createSymmetricWrapper", "createAlgorithmParameters", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", "createDigest", "LJavaSecurityGeneralSecurityException;", "createSignature", "createRawSignature", "getSignatureName", "getDigestName", "convertCertificate", "LOrgBouncycastleCertX509CertificateHolder;", "LJavaSecurityCertCertificateException;", "convertPublicKey", "LOrgBouncycastleAsn1X509SubjectPublicKeyInfo;", "getKeyAlgorithmName", "notDefaultPSSParams", "LOrgBouncycastleAsn1ASN1Sequence;", &OrgBouncycastleOperatorJcajceOperatorHelper_oids, &OrgBouncycastleOperatorJcajceOperatorHelper_asymmetricWrapperAlgNames, &OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames, &OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames, &OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes, &OrgBouncycastleOperatorJcajceOperatorHelper_sigFinder, "LOrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException;" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceOperatorHelper = { "OperatorHelper", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0x0, 18, 7, -1, 34, -1, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceOperatorHelper;
}

+ (void)initialize {
  if (self == [OrgBouncycastleOperatorJcajceOperatorHelper class]) {
    OrgBouncycastleOperatorJcajceOperatorHelper_oids = new_JavaUtilHashMap_init();
    OrgBouncycastleOperatorJcajceOperatorHelper_asymmetricWrapperAlgNames = new_JavaUtilHashMap_init();
    OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames = new_JavaUtilHashMap_init();
    OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames = new_JavaUtilHashMap_init();
    OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes = new_JavaUtilHashMap_init();
    OrgBouncycastleOperatorJcajceOperatorHelper_sigFinder = new_OrgBouncycastleOperatorDefaultSignatureNameFinder_init();
    {
      
#line 60
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1OiwOIWObjectIdentifiers, idSHA1) withId:@"SHA1"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha224) withId:@"SHA224"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha256) withId:@"SHA256"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha384) withId:@"SHA384"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_sha512) withId:@"SHA512"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1TeletrustTeleTrusTObjectIdentifiers, ripemd128) withId:@"RIPEMD128"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1TeletrustTeleTrusTObjectIdentifiers, ripemd160) withId:@"RIPEMD160"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_oids putWithId:JreLoadStatic(OrgBouncycastleAsn1TeletrustTeleTrusTObjectIdentifiers, ripemd256) withId:@"RIPEMD256"];
      
#line 69
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_asymmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, rsaEncryption) withId:@"RSA/ECB/PKCS1Padding"];
      
#line 71
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_asymmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1CryptoproCryptoProObjectIdentifiers, gostR3410_2001) withId:@"ECGOST3410"];
      
#line 73
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap) withId:@"DESEDEWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMSRC2wrap) withId:@"RC2Wrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap) withId:@"AESWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap) withId:@"AESWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap) withId:@"AESWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap) withId:@"CamelliaWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap) withId:@"CamelliaWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap) withId:@"CamelliaWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap) withId:@"SEEDWrap"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) withId:@"DESede"];
      
#line 84
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_alg_CMS3DESwrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(192)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_wrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(128)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_wrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(192)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_wrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(256)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia128_wrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(128)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia192_wrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(192)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1NttNTTObjectIdentifiers, id_camellia256_wrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(256)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1KisaKISAObjectIdentifiers, id_npki_app_cmsSeed_wrap) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(128)];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricWrapperKeySizes putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) withId:OrgBouncycastleUtilIntegers_valueOfWithInt_(192)];
      
#line 94
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, aes) withId:@"AES"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes128_CBC) withId:@"AES"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes192_CBC) withId:@"AES"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1NistNISTObjectIdentifiers, id_aes256_CBC) withId:@"AES"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, des_EDE3_CBC) withId:@"DESede"];
      (void) [OrgBouncycastleOperatorJcajceOperatorHelper_symmetricKeyAlgNames putWithId:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, RC2_CBC) withId:@"RC2"];
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastleOperatorJcajceOperatorHelper)
  }
}

@end


#line 104
void OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(OrgBouncycastleOperatorJcajceOperatorHelper *self, id<OrgBouncycastleJcajceUtilJcaJceHelper> helper) {
  NSObject_init(self);
  self->helper_ = helper;
}


#line 104
OrgBouncycastleOperatorJcajceOperatorHelper *new_OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(id<OrgBouncycastleJcajceUtilJcaJceHelper> helper) {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceOperatorHelper, initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_, helper)
}


#line 104
OrgBouncycastleOperatorJcajceOperatorHelper *create_OrgBouncycastleOperatorJcajceOperatorHelper_initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_(id<OrgBouncycastleJcajceUtilJcaJceHelper> helper) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceOperatorHelper, initPackagePrivateWithOrgBouncycastleJcajceUtilJcaJceHelper_, helper)
}


#line 423
NSString *OrgBouncycastleOperatorJcajceOperatorHelper_getSignatureNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier_(OrgBouncycastleAsn1X509AlgorithmIdentifier *sigAlgId) {
  OrgBouncycastleOperatorJcajceOperatorHelper_initialize();
  
#line 426
  return [((OrgBouncycastleOperatorDefaultSignatureNameFinder *) nil_chk(OrgBouncycastleOperatorJcajceOperatorHelper_sigFinder)) getAlgorithmNameWithOrgBouncycastleAsn1X509AlgorithmIdentifier:sigAlgId];
}

NSString *OrgBouncycastleOperatorJcajceOperatorHelper_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleOperatorJcajceOperatorHelper_initialize();
  NSString *name = OrgBouncycastleJcajceUtilMessageDigestUtils_getDigestNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  
#line 434
  jint dIndex = [((NSString *) nil_chk(name)) java_indexOf:'-'];
  if (dIndex > 0 && ![name java_hasPrefix:@"SHA3"]) {
    
#line 437
    return JreStrcat("$$", [name java_substring:0 endIndex:dIndex], [name java_substring:dIndex + 1]);
  }
  
#line 440
  return name;
}


#line 523
jboolean OrgBouncycastleOperatorJcajceOperatorHelper_notDefaultPSSParamsWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleOperatorJcajceOperatorHelper *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  
#line 526
  if (seq == nil || [seq size] == 0) {
    
#line 528
    return false;
  }
  
#line 531
  OrgBouncycastleAsn1PkcsRSASSAPSSparams *pssParams = OrgBouncycastleAsn1PkcsRSASSAPSSparams_getInstanceWithId_(seq);
  
#line 533
  if (![((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([((OrgBouncycastleAsn1PkcsRSASSAPSSparams *) nil_chk(pssParams)) getMaskGenAlgorithm])) getAlgorithm])) equalsWithOrgBouncycastleAsn1ASN1Primitive:JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, id_mgf1)]) {
    
#line 535
    return true;
  }
  
#line 539
  if (![((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([pssParams getHashAlgorithm])) isEqual:OrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([((OrgBouncycastleAsn1X509AlgorithmIdentifier *) nil_chk([pssParams getMaskGenAlgorithm])) getParameters])]) {
    
#line 541
    return true;
  }
  
#line 544
  JavaSecurityMessageDigest *digest = [self createDigestWithOrgBouncycastleAsn1X509AlgorithmIdentifier:[pssParams getHashAlgorithm]];
  
#line 546
  return [((JavaMathBigInteger *) nil_chk([pssParams getSaltLength])) intValue] != [((JavaSecurityMessageDigest *) nil_chk(digest)) getDigestLength];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleOperatorJcajceOperatorHelper)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/jcajce/OperatorHelper.java"


#line 490
@implementation OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException


#line 495
- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(self, msg, cause);
  return self;
}


#line 502
- (JavaLangThrowable *)getCause {
  
#line 505
  return cause_OpCertificateException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[1].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_OpCertificateException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, 1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaLangThrowable;", "cause", "LOrgBouncycastleOperatorJcajceOperatorHelper;" };
  static const J2ObjcClassInfo _OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException = { "OpCertificateException", "org.bouncycastle.operator.jcajce", ptrTable, methods, fields, 7, 0xa, 2, 1, 2, -1, -1, -1, -1 };
  return &_OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException;
}

@end


#line 495
void OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException *self, NSString *msg, JavaLangThrowable *cause) {
  JavaSecurityCertCertificateException_initWithNSString_(self,
#line 497
  msg);
  
#line 499
  self->cause_OpCertificateException_ = cause;
}


#line 495
OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException *new_OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException, initWithNSString_withJavaLangThrowable_, msg, cause)
}


#line 495
OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException *create_OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException, initWithNSString_withJavaLangThrowable_, msg, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleOperatorJcajceOperatorHelper_OpCertificateException)

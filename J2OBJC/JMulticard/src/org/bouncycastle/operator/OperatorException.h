//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/OperatorException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleOperatorOperatorException")
#ifdef RESTRICT_OrgBouncycastleOperatorOperatorException
#define INCLUDE_ALL_OrgBouncycastleOperatorOperatorException 0
#else
#define INCLUDE_ALL_OrgBouncycastleOperatorOperatorException 1
#endif
#undef RESTRICT_OrgBouncycastleOperatorOperatorException

#if !defined (OrgBouncycastleOperatorOperatorException_) && (INCLUDE_ALL_OrgBouncycastleOperatorOperatorException || defined(INCLUDE_OrgBouncycastleOperatorOperatorException))
#define OrgBouncycastleOperatorOperatorException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangThrowable;

@interface OrgBouncycastleOperatorOperatorException : JavaLangException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)msg;

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorOperatorException)

FOUNDATION_EXPORT void OrgBouncycastleOperatorOperatorException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleOperatorOperatorException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgBouncycastleOperatorOperatorException *new_OrgBouncycastleOperatorOperatorException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleOperatorOperatorException *create_OrgBouncycastleOperatorOperatorException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT void OrgBouncycastleOperatorOperatorException_initWithNSString_(OrgBouncycastleOperatorOperatorException *self, NSString *msg);

FOUNDATION_EXPORT OrgBouncycastleOperatorOperatorException *new_OrgBouncycastleOperatorOperatorException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleOperatorOperatorException *create_OrgBouncycastleOperatorOperatorException_initWithNSString_(NSString *msg);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleOperatorOperatorException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleOperatorOperatorException")

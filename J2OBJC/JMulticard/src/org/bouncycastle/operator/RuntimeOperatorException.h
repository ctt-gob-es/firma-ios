//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/operator/RuntimeOperatorException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleOperatorRuntimeOperatorException")
#ifdef RESTRICT_OrgBouncycastleOperatorRuntimeOperatorException
#define INCLUDE_ALL_OrgBouncycastleOperatorRuntimeOperatorException 0
#else
#define INCLUDE_ALL_OrgBouncycastleOperatorRuntimeOperatorException 1
#endif
#undef RESTRICT_OrgBouncycastleOperatorRuntimeOperatorException

#if !defined (OrgBouncycastleOperatorRuntimeOperatorException_) && (INCLUDE_ALL_OrgBouncycastleOperatorRuntimeOperatorException || defined(INCLUDE_OrgBouncycastleOperatorRuntimeOperatorException))
#define OrgBouncycastleOperatorRuntimeOperatorException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

@interface OrgBouncycastleOperatorRuntimeOperatorException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)msg;

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (JavaLangThrowable *)getCause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleOperatorRuntimeOperatorException)

FOUNDATION_EXPORT void OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_(OrgBouncycastleOperatorRuntimeOperatorException *self, NSString *msg);

FOUNDATION_EXPORT OrgBouncycastleOperatorRuntimeOperatorException *new_OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleOperatorRuntimeOperatorException *create_OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleOperatorRuntimeOperatorException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgBouncycastleOperatorRuntimeOperatorException *new_OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleOperatorRuntimeOperatorException *create_OrgBouncycastleOperatorRuntimeOperatorException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleOperatorRuntimeOperatorException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleOperatorRuntimeOperatorException")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1StreamParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Exception.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1StreamParser.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1TaggedObjectParser.h"
#include "org/bouncycastle/asn1/BERApplicationSpecificParser.h"
#include "org/bouncycastle/asn1/BERBitStringParser.h"
#include "org/bouncycastle/asn1/BEROctetStringParser.h"
#include "org/bouncycastle/asn1/BERSequenceParser.h"
#include "org/bouncycastle/asn1/BERSetParser.h"
#include "org/bouncycastle/asn1/BERTaggedObjectParser.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERExternalParser.h"
#include "org/bouncycastle/asn1/DEROctetStringParser.h"
#include "org/bouncycastle/asn1/DLApplicationSpecific.h"
#include "org/bouncycastle/asn1/DLBitStringParser.h"
#include "org/bouncycastle/asn1/DLSequenceParser.h"
#include "org/bouncycastle/asn1/DLSetParser.h"
#include "org/bouncycastle/asn1/DLTaggedObjectParser.h"
#include "org/bouncycastle/asn1/DefiniteLengthInputStream.h"
#include "org/bouncycastle/asn1/InMemoryRepresentable.h"
#include "org/bouncycastle/asn1/IndefiniteLengthInputStream.h"
#include "org/bouncycastle/asn1/StreamUtil.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1StreamParser must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1StreamParser () {
 @public
  JavaIoInputStream *_in_;
  jint _limit_;
  IOSObjectArray *tmpBuffers_;
}

- (void)set00CheckWithBoolean:(jboolean)enabled;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1StreamParser, _in_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1StreamParser, tmpBuffers_, IOSObjectArray *)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(OrgBouncycastleAsn1ASN1StreamParser *self, jboolean enabled);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1StreamParser.java"


#line 10
@implementation OrgBouncycastleAsn1ASN1StreamParser


#line 16
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg {
  OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(self, inArg);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)encoding {
  OrgBouncycastleAsn1ASN1StreamParser_initWithByteArray_(self, encoding);
  return self;
}

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                  withInt:(jint)limit {
  OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(self, inArg, limit);
  return self;
}


#line 31
- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                  withInt:(jint)limit
                           withByteArray2:(IOSObjectArray *)tmpBuffers {
  OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(self, inArg, limit, tmpBuffers);
  return self;
}

- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject {
  
#line 40
  jint tagHdr = [((JavaIoInputStream *) nil_chk(_in_)) read];
  if (tagHdr < 0) {
    
#line 43
    return nil;
  }
  
#line 46
  return [self implParseObjectWithInt:tagHdr];
}


#line 49
- (id<OrgBouncycastleAsn1ASN1Encodable>)implParseObjectWithInt:(jint)tagHdr {
  
#line 54
  OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(self, false);
  
#line 59
  jint tagNo = OrgBouncycastleAsn1ASN1InputStream_readTagNumberWithJavaIoInputStream_withInt_(_in_, tagHdr);
  
#line 64
  jint length = OrgBouncycastleAsn1ASN1InputStream_readLengthWithJavaIoInputStream_withInt_withBoolean_(_in_, _limit_,
#line 65
  tagNo == OrgBouncycastleAsn1BERTags_BIT_STRING || tagNo == OrgBouncycastleAsn1BERTags_OCTET_STRING || tagNo == OrgBouncycastleAsn1BERTags_SEQUENCE ||
#line 66
  tagNo == OrgBouncycastleAsn1BERTags_SET || tagNo == OrgBouncycastleAsn1BERTags_EXTERNAL);
  
#line 68
  if (length < 0) {
    
#line 70
    if (0 == (tagHdr & OrgBouncycastleAsn1BERTags_CONSTRUCTED)) {
      
#line 72
      @throw new_JavaIoIOException_initWithNSString_(@"indefinite-length primitive encoding encountered");
    }
    
#line 75
    OrgBouncycastleAsn1IndefiniteLengthInputStream *indIn = new_OrgBouncycastleAsn1IndefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_(_in_, _limit_);
    OrgBouncycastleAsn1ASN1StreamParser *sp = new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(indIn, _limit_, tmpBuffers_);
    
#line 78
    jint tagClass = tagHdr & OrgBouncycastleAsn1BERTags_PRIVATE;
    if (0 != tagClass) {
      
#line 82
      if (OrgBouncycastleAsn1BERTags_APPLICATION == tagClass) {
        
#line 84
        return new_OrgBouncycastleAsn1BERApplicationSpecificParser_initWithInt_withOrgBouncycastleAsn1ASN1StreamParser_(tagNo, sp);
      }
      
#line 87
      return new_OrgBouncycastleAsn1BERTaggedObjectParser_initWithInt_withInt_withOrgBouncycastleAsn1ASN1StreamParser_(tagClass, tagNo, sp);
    }
    
#line 90
    return [sp parseImplicitConstructedILWithInt:tagNo];
  }
  else {
    
#line 94
    OrgBouncycastleAsn1DefiniteLengthInputStream *defIn = new_OrgBouncycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_(_in_, length, _limit_);
    
#line 96
    if (0 == (tagHdr & OrgBouncycastleAsn1BERTags_FLAGS)) {
      
#line 98
      return [self parseImplicitPrimitiveWithInt:tagNo withOrgBouncycastleAsn1DefiniteLengthInputStream:defIn];
    }
    
#line 101
    OrgBouncycastleAsn1ASN1StreamParser *sp = new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(defIn, [defIn getLimit], tmpBuffers_);
    
#line 103
    jint tagClass = tagHdr & OrgBouncycastleAsn1BERTags_PRIVATE;
    if (0 != tagClass) {
      
#line 106
      jboolean isConstructed = (tagHdr & OrgBouncycastleAsn1BERTags_CONSTRUCTED) != 0;
      
#line 109
      if (OrgBouncycastleAsn1BERTags_APPLICATION == tagClass) {
        
#line 112
        return (OrgBouncycastleAsn1DLApplicationSpecific *) cast_chk([sp loadTaggedDLWithInt:tagClass withInt:tagNo withBoolean:isConstructed], [OrgBouncycastleAsn1DLApplicationSpecific class]);
      }
      
#line 115
      return new_OrgBouncycastleAsn1DLTaggedObjectParser_initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_(tagClass, tagNo, isConstructed, sp);
    }
    
#line 118
    return [sp parseImplicitConstructedDLWithInt:tagNo];
  }
}


#line 122
- (OrgBouncycastleAsn1ASN1Primitive *)loadTaggedDLWithInt:(jint)tagClass
                                                  withInt:(jint)tagNo
                                              withBoolean:(jboolean)constructed {
  
#line 124
  if (!constructed) {
    
#line 126
    IOSByteArray *contentsOctets = [((OrgBouncycastleAsn1DefiniteLengthInputStream *) nil_chk(((OrgBouncycastleAsn1DefiniteLengthInputStream *) cast_chk(_in_, [OrgBouncycastleAsn1DefiniteLengthInputStream class])))) toByteArray];
    return OrgBouncycastleAsn1ASN1TaggedObject_createPrimitiveWithInt_withInt_withByteArray_(tagClass, tagNo, contentsOctets);
  }
  
#line 130
  OrgBouncycastleAsn1ASN1EncodableVector *contentsElements = [self readVector];
  return OrgBouncycastleAsn1ASN1TaggedObject_createConstructedDLWithInt_withInt_withOrgBouncycastleAsn1ASN1EncodableVector_(tagClass, tagNo, contentsElements);
}


#line 134
- (OrgBouncycastleAsn1ASN1Primitive *)loadTaggedILWithInt:(jint)tagClass
                                                  withInt:(jint)tagNo {
  OrgBouncycastleAsn1ASN1EncodableVector *contentsElements = [self readVector];
  return OrgBouncycastleAsn1ASN1TaggedObject_createConstructedILWithInt_withInt_withOrgBouncycastleAsn1ASN1EncodableVector_(tagClass, tagNo, contentsElements);
}

- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitConstructedDLWithInt:(jint)univTagNo {
  
#line 142
  switch (univTagNo) {
    
#line 144
    case OrgBouncycastleAsn1BERTags_BIT_STRING:
    
#line 146
    return new_OrgBouncycastleAsn1BERBitStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_EXTERNAL:
    return new_OrgBouncycastleAsn1DERExternalParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_OCTET_STRING:
    
#line 151
    return new_OrgBouncycastleAsn1BEROctetStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_SET:
    return new_OrgBouncycastleAsn1DLSetParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_SEQUENCE:
    return new_OrgBouncycastleAsn1DLSequenceParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    default:
    
#line 158
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(JreStrcat("$$", @"unknown DL object encountered: 0x", JavaLangInteger_toHexStringWithInt_(univTagNo)));
  }
}


#line 162
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitConstructedILWithInt:(jint)univTagNo {
  
#line 164
  switch (univTagNo) {
    
#line 166
    case OrgBouncycastleAsn1BERTags_BIT_STRING:
    return new_OrgBouncycastleAsn1BERBitStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_OCTET_STRING:
    return new_OrgBouncycastleAsn1BEROctetStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_EXTERNAL:
    
#line 172
    return new_OrgBouncycastleAsn1DERExternalParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_SEQUENCE:
    return new_OrgBouncycastleAsn1BERSequenceParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    case OrgBouncycastleAsn1BERTags_SET:
    return new_OrgBouncycastleAsn1BERSetParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self);
    default:
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(JreStrcat("$$", @"unknown BER object encountered: 0x", JavaLangInteger_toHexStringWithInt_(univTagNo)));
  }
}


#line 182
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitPrimitiveWithInt:(jint)univTagNo {
  
#line 184
  return [self parseImplicitPrimitiveWithInt:univTagNo withOrgBouncycastleAsn1DefiniteLengthInputStream:(OrgBouncycastleAsn1DefiniteLengthInputStream *) cast_chk(_in_, [OrgBouncycastleAsn1DefiniteLengthInputStream class])];
}


#line 187
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitPrimitiveWithInt:(jint)univTagNo
                     withOrgBouncycastleAsn1DefiniteLengthInputStream:(OrgBouncycastleAsn1DefiniteLengthInputStream *)defIn {
  
#line 190
  switch (univTagNo) {
    
#line 192
    case OrgBouncycastleAsn1BERTags_BIT_STRING:
    return new_OrgBouncycastleAsn1DLBitStringParser_initWithOrgBouncycastleAsn1DefiniteLengthInputStream_(defIn);
    case OrgBouncycastleAsn1BERTags_EXTERNAL:
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(@"externals must use constructed encoding (see X.690 8.18)");
    case OrgBouncycastleAsn1BERTags_OCTET_STRING:
    return new_OrgBouncycastleAsn1DEROctetStringParser_initWithOrgBouncycastleAsn1DefiniteLengthInputStream_(defIn);
    case OrgBouncycastleAsn1BERTags_SET:
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(@"sequences must use constructed encoding (see X.690 8.9.1/8.10.1)");
    case OrgBouncycastleAsn1BERTags_SEQUENCE:
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(@"sets must use constructed encoding (see X.690 8.11.1/8.12.1)");
  }
  
#line 204
  @try {
    
#line 206
    return OrgBouncycastleAsn1ASN1InputStream_createPrimitiveDERObjectWithInt_withOrgBouncycastleAsn1DefiniteLengthInputStream_withByteArray2_(univTagNo, defIn, tmpBuffers_);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    
#line 210
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_withJavaLangThrowable_(@"corrupted stream detected", e);
  }
}


#line 214
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseObjectWithInt:(jint)univTagNo {
  
#line 216
  if (univTagNo < 0 || univTagNo > 30) {
    
#line 218
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"invalid universal tag number: ", univTagNo));
  }
  
#line 221
  jint tagHdr = [((JavaIoInputStream *) nil_chk(_in_)) read];
  if (tagHdr < 0) {
    
#line 224
    return nil;
  }
  
#line 227
  if ((tagHdr & ~OrgBouncycastleAsn1BERTags_CONSTRUCTED) != univTagNo) {
    
#line 229
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"unexpected identifier encountered: ", tagHdr));
  }
  
#line 232
  return [self implParseObjectWithInt:tagHdr];
}


#line 235
- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseTaggedObject {
  
#line 237
  jint tagHdr = [((JavaIoInputStream *) nil_chk(_in_)) read];
  if (tagHdr < 0) {
    
#line 240
    return nil;
  }
  
#line 243
  jint tagClass = tagHdr & OrgBouncycastleAsn1BERTags_PRIVATE;
  if (0 == tagClass) {
    
#line 246
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(@"no tagged object found");
  }
  
#line 249
  return (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>) cast_check([self implParseObjectWithInt:tagHdr], OrgBouncycastleAsn1ASN1TaggedObjectParser_class_());
}


#line 253
- (OrgBouncycastleAsn1ASN1EncodableVector *)readVector {
  
#line 255
  jint tagHdr = [((JavaIoInputStream *) nil_chk(_in_)) read];
  if (tagHdr < 0) {
    
#line 258
    return new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_(0);
  }
  
#line 261
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_init();
  do {
    
#line 264
    id<OrgBouncycastleAsn1ASN1Encodable> obj = [self implParseObjectWithInt:tagHdr];
    
#line 266
    if ([OrgBouncycastleAsn1InMemoryRepresentable_class_() isInstance:obj]) {
      
#line 268
      [v addWithOrgBouncycastleAsn1ASN1Encodable:[((id<OrgBouncycastleAsn1InMemoryRepresentable>) nil_chk(((id<OrgBouncycastleAsn1InMemoryRepresentable>) cast_check(obj, OrgBouncycastleAsn1InMemoryRepresentable_class_())))) getLoadedObject]];
    }
    else {
      
#line 272
      [v addWithOrgBouncycastleAsn1ASN1Encodable:[((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj)) toASN1Primitive]];
    }
  }
  while ((tagHdr = [_in_ read]) >= 0);
  return v;
}


#line 279
- (void)set00CheckWithBoolean:(jboolean)enabled {
  OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(self, enabled);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x0, 5, 6, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 7, 8, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 9, 10, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x0, 11, 6, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x0, 12, 6, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x0, 13, 6, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x0, 13, 14, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x0, 15, 6, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObjectParser;", 0x0, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1EncodableVector;", 0x0, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoInputStream:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithJavaIoInputStream:withInt:);
  methods[3].selector = @selector(initWithJavaIoInputStream:withInt:withByteArray2:);
  methods[4].selector = @selector(readObject);
  methods[5].selector = @selector(implParseObjectWithInt:);
  methods[6].selector = @selector(loadTaggedDLWithInt:withInt:withBoolean:);
  methods[7].selector = @selector(loadTaggedILWithInt:withInt:);
  methods[8].selector = @selector(parseImplicitConstructedDLWithInt:);
  methods[9].selector = @selector(parseImplicitConstructedILWithInt:);
  methods[10].selector = @selector(parseImplicitPrimitiveWithInt:);
  methods[11].selector = @selector(parseImplicitPrimitiveWithInt:withOrgBouncycastleAsn1DefiniteLengthInputStream:);
  methods[12].selector = @selector(parseObjectWithInt:);
  methods[13].selector = @selector(parseTaggedObject);
  methods[14].selector = @selector(readVector);
  methods[15].selector = @selector(set00CheckWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_in_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_limit_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tmpBuffers_", "[[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;", "[B", "LJavaIoInputStream;I", "LJavaIoInputStream;I[[B", "LJavaIoIOException;", "implParseObject", "I", "loadTaggedDL", "IIZ", "loadTaggedIL", "II", "parseImplicitConstructedDL", "parseImplicitConstructedIL", "parseImplicitPrimitive", "ILOrgBouncycastleAsn1DefiniteLengthInputStream;", "parseObject", "set00Check", "Z" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1StreamParser = { "ASN1StreamParser", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 16, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1StreamParser;
}

@end


#line 16
void OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(OrgBouncycastleAsn1ASN1StreamParser *self, JavaIoInputStream *inArg) {
  OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(self,
#line 18
  inArg, OrgBouncycastleAsn1StreamUtil_findLimitWithJavaIoInputStream_(inArg));
}


#line 16
OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithJavaIoInputStream_, inArg)
}


#line 16
OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(JavaIoInputStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithJavaIoInputStream_, inArg)
}


#line 21
void OrgBouncycastleAsn1ASN1StreamParser_initWithByteArray_(OrgBouncycastleAsn1ASN1StreamParser *self, IOSByteArray *encoding) {
  OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(self, new_JavaIoByteArrayInputStream_initWithByteArray_(
#line 23
  encoding), ((IOSByteArray *) nil_chk(encoding))->size_);
}


#line 21
OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithByteArray_(IOSByteArray *encoding) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithByteArray_, encoding)
}


#line 21
OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithByteArray_(IOSByteArray *encoding) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithByteArray_, encoding)
}


#line 26
void OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(OrgBouncycastleAsn1ASN1StreamParser *self, JavaIoInputStream *inArg, jint limit) {
  OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(self,
#line 28
  inArg, limit, [IOSObjectArray newArrayWithLength:11 type:IOSClass_byteArray(1)]);
}


#line 26
OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint limit) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithJavaIoInputStream_withInt_, inArg, limit)
}


#line 26
OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint limit) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithJavaIoInputStream_withInt_, inArg, limit)
}


#line 31
void OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(OrgBouncycastleAsn1ASN1StreamParser *self, JavaIoInputStream *inArg, jint limit, IOSObjectArray *tmpBuffers) {
  NSObject_init(self);
  self->_in_ = inArg;
  self->_limit_ = limit;
  self->tmpBuffers_ = tmpBuffers;
}


#line 31
OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(JavaIoInputStream *inArg, jint limit, IOSObjectArray *tmpBuffers) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithJavaIoInputStream_withInt_withByteArray2_, inArg, limit, tmpBuffers)
}


#line 31
OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(JavaIoInputStream *inArg, jint limit, IOSObjectArray *tmpBuffers) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1StreamParser, initWithJavaIoInputStream_withInt_withByteArray2_, inArg, limit, tmpBuffers)
}


#line 279
void OrgBouncycastleAsn1ASN1StreamParser_set00CheckWithBoolean_(OrgBouncycastleAsn1ASN1StreamParser *self, jboolean enabled) {
  
#line 281
  if ([self->_in_ isKindOfClass:[OrgBouncycastleAsn1IndefiniteLengthInputStream class]]) {
    
#line 283
    [((OrgBouncycastleAsn1IndefiniteLengthInputStream *) nil_chk(((OrgBouncycastleAsn1IndefiniteLengthInputStream *) self->_in_))) setEofOn00WithBoolean:enabled];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1StreamParser)

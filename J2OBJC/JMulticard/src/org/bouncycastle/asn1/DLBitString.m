//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DLBitString.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DLBitString.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/DLBitString must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DLBitString.java"


#line 8
@implementation OrgBouncycastleAsn1DLBitString


#line 11
- (instancetype)initWithByteArray:(IOSByteArray *)data {
  OrgBouncycastleAsn1DLBitString_initWithByteArray_(self, data);
  return self;
}

- (instancetype)initWithByte:(jbyte)data
                     withInt:(jint)padBits {
  OrgBouncycastleAsn1DLBitString_initWithByte_withInt_(self, data, padBits);
  return self;
}


#line 21
- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)padBits {
  OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(self, data, padBits);
  return self;
}


#line 26
- (instancetype)initWithInt:(jint)value {
  OrgBouncycastleAsn1DLBitString_initWithInt_(self, value);
  return self;
}


#line 32
- (instancetype)initWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)obj {
  OrgBouncycastleAsn1DLBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(self, obj);
  return self;
}


#line 38
- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)check {
  OrgBouncycastleAsn1DLBitString_initWithByteArray_withBoolean_(self, contents, check);
  return self;
}


#line 43
- (jboolean)encodeConstructed {
  
#line 46
  return false;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 52
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(contents_))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 58
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_BIT_STRING withByteArray:contents_];
}


#line 61
- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject {
  
#line 64
  return self;
}

+ (jint)encodedLengthWithBoolean:(jboolean)withTag
                         withInt:(jint)contentsLength {
  return OrgBouncycastleAsn1DLBitString_encodedLengthWithBoolean_withInt_(withTag, contentsLength);
}

+ (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag
                                        withByteArray:(IOSByteArray *)buf
                                              withInt:(jint)off
                                              withInt:(jint)len {
  OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByteArray_withInt_withInt_(outArg, withTag, buf, off, len);
}


#line 77
+ (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag
                                             withByte:(jbyte)pad
                                        withByteArray:(IOSByteArray *)buf
                                              withInt:(jint)off
                                              withInt:(jint)len {
  OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByte_withByteArray_withInt_withInt_(outArg, withTag, pad, buf, off, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, 5, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 9, 10, 5, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 7, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 9, 12, 5, -1, -1, -1 },
    { NULL, "V", 0x8, 9, 13, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithByte:withInt:);
  methods[2].selector = @selector(initWithByteArray:withInt:);
  methods[3].selector = @selector(initWithInt:);
  methods[4].selector = @selector(initWithOrgBouncycastleAsn1ASN1Encodable:);
  methods[5].selector = @selector(initWithByteArray:withBoolean:);
  methods[6].selector = @selector(encodeConstructed);
  methods[7].selector = @selector(encodedLengthWithBoolean:);
  methods[8].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[9].selector = @selector(toDLObject);
  methods[10].selector = @selector(encodedLengthWithBoolean:withInt:);
  methods[11].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:withByteArray:withInt:withInt:);
  methods[12].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:withByte:withByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[B", "BI", "[BI", "I", "LOrgBouncycastleAsn1ASN1Encodable;", "LJavaIoIOException;", "[BZ", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "ZI", "LOrgBouncycastleAsn1ASN1OutputStream;Z[BII", "LOrgBouncycastleAsn1ASN1OutputStream;ZB[BII" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1DLBitString = { "DLBitString", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x1, 13, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1DLBitString;
}

@end


#line 11
void OrgBouncycastleAsn1DLBitString_initWithByteArray_(OrgBouncycastleAsn1DLBitString *self, IOSByteArray *data) {
  OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(self,
#line 13
  data, 0);
}


#line 11
OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DLBitString, initWithByteArray_, data)
}


#line 11
OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DLBitString, initWithByteArray_, data)
}


#line 16
void OrgBouncycastleAsn1DLBitString_initWithByte_withInt_(OrgBouncycastleAsn1DLBitString *self, jbyte data, jint padBits) {
  OrgBouncycastleAsn1ASN1BitString_initWithByte_withInt_(self,
#line 18
  data, padBits);
}


#line 16
OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByte_withInt_(jbyte data, jint padBits) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DLBitString, initWithByte_withInt_, data, padBits)
}


#line 16
OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByte_withInt_(jbyte data, jint padBits) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DLBitString, initWithByte_withInt_, data, padBits)
}


#line 21
void OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(OrgBouncycastleAsn1DLBitString *self, IOSByteArray *data, jint padBits) {
  OrgBouncycastleAsn1ASN1BitString_initWithByteArray_withInt_(self,
#line 23
  data, padBits);
}


#line 21
OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DLBitString, initWithByteArray_withInt_, data, padBits)
}


#line 21
OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DLBitString, initWithByteArray_withInt_, data, padBits)
}


#line 26
void OrgBouncycastleAsn1DLBitString_initWithInt_(OrgBouncycastleAsn1DLBitString *self, jint value) {
  OrgBouncycastleAsn1ASN1BitString_initWithByteArray_withInt_(self, OrgBouncycastleAsn1ASN1BitString_getBytesWithInt_(
#line 29
  value), OrgBouncycastleAsn1ASN1BitString_getPadBitsWithInt_(value));
}


#line 26
OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DLBitString, initWithInt_, value)
}


#line 26
OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DLBitString, initWithInt_, value)
}


#line 32
void OrgBouncycastleAsn1DLBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1DLBitString *self, id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  OrgBouncycastleAsn1ASN1BitString_initWithByteArray_withInt_(self,
#line 35
  [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj)) toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER], 0);
}


#line 32
OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DLBitString, initWithOrgBouncycastleAsn1ASN1Encodable_, obj)
}


#line 32
OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DLBitString, initWithOrgBouncycastleAsn1ASN1Encodable_, obj)
}


#line 38
void OrgBouncycastleAsn1DLBitString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1DLBitString *self, IOSByteArray *contents, jboolean check) {
  OrgBouncycastleAsn1ASN1BitString_initWithByteArray_withBoolean_(self,
#line 40
  contents, check);
}


#line 38
OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DLBitString, initWithByteArray_withBoolean_, contents, check)
}


#line 38
OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DLBitString, initWithByteArray_withBoolean_, contents, check)
}


#line 67
jint OrgBouncycastleAsn1DLBitString_encodedLengthWithBoolean_withInt_(jboolean withTag, jint contentsLength) {
  OrgBouncycastleAsn1DLBitString_initialize();
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, contentsLength);
}

void OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByteArray_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *outArg, jboolean withTag, IOSByteArray *buf, jint off, jint len) {
  OrgBouncycastleAsn1DLBitString_initialize();
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_BIT_STRING withByteArray:buf withInt:off withInt:len];
}

void OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByte_withByteArray_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *outArg, jboolean withTag, jbyte pad, IOSByteArray *buf, jint off, jint len) {
  OrgBouncycastleAsn1DLBitString_initialize();
  
#line 80
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_BIT_STRING withByte:pad withByteArray:buf withInt:off withInt:len];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DLBitString)

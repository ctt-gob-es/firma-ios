//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/BERSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1BERSet")
#ifdef RESTRICT_OrgBouncycastleAsn1BERSet
#define INCLUDE_ALL_OrgBouncycastleAsn1BERSet 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1BERSet 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1BERSet

#if !defined (OrgBouncycastleAsn1BERSet_) && (INCLUDE_ALL_OrgBouncycastleAsn1BERSet || defined(INCLUDE_OrgBouncycastleAsn1BERSet))
#define OrgBouncycastleAsn1BERSet_

#define RESTRICT_OrgBouncycastleAsn1ASN1Set 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Set 1
#include "org/bouncycastle/asn1/ASN1Set.h"

@class IOSObjectArray;
@class OrgBouncycastleAsn1ASN1EncodableVector;
@class OrgBouncycastleAsn1ASN1OutputStream;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief Indefinite length <code>SET</code> and <code>SET OF</code> constructs.
 <p>
  Note: This does not know which syntax the set is! 
 </p><p>
  Length field has value 0x80, and the set ends with two bytes of: 0x00, 0x00. 
 </p><p>
  For X.690 syntax rules, see <code>ASN1Set</code>.
  </p><p>
  In brief: Constructing this form does not sort the supplied elements,
  nor does the sorting happen before serialization. This is different
  from the way <code>DERSet</code> does things. 
 </p>
 */
@interface OrgBouncycastleAsn1BERSet : OrgBouncycastleAsn1ASN1Set

#pragma mark Public

/*!
 @brief Create an empty SET.
 */
- (instancetype)init;

/*!
 @brief Create a SET containing one object.
 @param element - a single object that makes up the set.
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)element;

/*!
 @brief Create a SET from an array of objects.
 @param elements an array of ASN.1 objects.
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements;

/*!
 @brief Create a SET containing multiple objects.
 @param elementVector a vector of objects making up the set.
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)elementVector;

#pragma mark Package-Private

- (instancetype)initWithBoolean:(jboolean)isSorted
withOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements;

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag;

- (jint)encodedLengthWithBoolean:(jboolean)withTag;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)arg0
                                                  withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)arg0
                                                   withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1BERSet)

FOUNDATION_EXPORT void OrgBouncycastleAsn1BERSet_init(OrgBouncycastleAsn1BERSet *self);

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *new_OrgBouncycastleAsn1BERSet_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *create_OrgBouncycastleAsn1BERSet_init(void);

FOUNDATION_EXPORT void OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1BERSet *self, id<OrgBouncycastleAsn1ASN1Encodable> element);

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *new_OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> element) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *create_OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> element);

FOUNDATION_EXPORT void OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1BERSet *self, OrgBouncycastleAsn1ASN1EncodableVector *elementVector);

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *new_OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1ASN1EncodableVector *elementVector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *create_OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1ASN1EncodableVector *elementVector);

FOUNDATION_EXPORT void OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1EncodableArray_(OrgBouncycastleAsn1BERSet *self, IOSObjectArray *elements);

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *new_OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1EncodableArray_(IOSObjectArray *elements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *create_OrgBouncycastleAsn1BERSet_initWithOrgBouncycastleAsn1ASN1EncodableArray_(IOSObjectArray *elements);

FOUNDATION_EXPORT void OrgBouncycastleAsn1BERSet_initWithBoolean_withOrgBouncycastleAsn1ASN1EncodableArray_(OrgBouncycastleAsn1BERSet *self, jboolean isSorted, IOSObjectArray *elements);

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *new_OrgBouncycastleAsn1BERSet_initWithBoolean_withOrgBouncycastleAsn1ASN1EncodableArray_(jboolean isSorted, IOSObjectArray *elements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSet *create_OrgBouncycastleAsn1BERSet_initWithBoolean_withOrgBouncycastleAsn1ASN1EncodableArray_(jboolean isSorted, IOSObjectArray *elements);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1BERSet)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1BERSet")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1TaggedObjectParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1TaggedObjectParser")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1TaggedObjectParser
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1TaggedObjectParser 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1TaggedObjectParser 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1TaggedObjectParser

#if !defined (OrgBouncycastleAsn1ASN1TaggedObjectParser_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1TaggedObjectParser || defined(INCLUDE_OrgBouncycastleAsn1ASN1TaggedObjectParser))
#define OrgBouncycastleAsn1ASN1TaggedObjectParser_

#define RESTRICT_OrgBouncycastleAsn1ASN1Encodable 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Encodable 1
#include "org/bouncycastle/asn1/ASN1Encodable.h"

#define RESTRICT_OrgBouncycastleAsn1InMemoryRepresentable 1
#define INCLUDE_OrgBouncycastleAsn1InMemoryRepresentable 1
#include "org/bouncycastle/asn1/InMemoryRepresentable.h"

/*!
 @brief Interface for the parsing of a generic tagged ASN.1 object.
 */
@protocol OrgBouncycastleAsn1ASN1TaggedObjectParser < OrgBouncycastleAsn1ASN1Encodable, OrgBouncycastleAsn1InMemoryRepresentable, JavaObject >

/*!
 @brief Return the tag class associated with this object.
 @return the tag class.
 */
- (jint)getTagClass;

/*!
 @brief Return the tag number associated with this object.
 @return the tag number.
 */
- (jint)getTagNo;

- (jboolean)hasContextTagWithInt:(jint)tagNo;

- (jboolean)hasTagWithInt:(jint)tagClass
                  withInt:(jint)tagNo;

/*!
 @brief Return a parser for the actual object tagged.
 @param tag the primitive tag value for the object tagged originally.
 @param isExplicit true if the tagging was done explicitly.
 @return a parser for the tagged object.
 @throw IOExceptionif a parser cannot be constructed.
 */
- (id<OrgBouncycastleAsn1ASN1Encodable>)getObjectParserWithInt:(jint)tag
                                                   withBoolean:(jboolean)isExplicit;

- (id<OrgBouncycastleAsn1ASN1Encodable>)parseBaseUniversalWithBoolean:(jboolean)declaredExplicit
                                                              withInt:(jint)baseTagNo;

/*!
 @brief Needed for open types, until we have better type-guided parsing support.Use sparingly for other
  purposes, and prefer <code>parseExplicitBaseTagged()</code> or <code>parseBaseUniversal(boolean, int)</code>
  where possible.
 Before using, check for matching tag <code>class</code> and 
 <code>number</code>.
 */
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseExplicitBaseObject;

- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseExplicitBaseTagged;

- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseImplicitBaseTaggedWithInt:(jint)baseTagClass
                                                                        withInt:(jint)baseTagNo;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1TaggedObjectParser)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1TaggedObjectParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1TaggedObjectParser")

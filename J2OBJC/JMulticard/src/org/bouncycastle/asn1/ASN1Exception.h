//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Exception.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Exception")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1Exception
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Exception 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Exception 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1Exception

#if !defined (OrgBouncycastleAsn1ASN1Exception_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1Exception || defined(INCLUDE_OrgBouncycastleAsn1ASN1Exception))
#define OrgBouncycastleAsn1ASN1Exception_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;

/*!
 @brief Exception thrown in cases of corrupted or unexpected data in a stream.
 */
@interface OrgBouncycastleAsn1ASN1Exception : JavaIoIOException

#pragma mark Public

/*!
 @brief Return the underlying cause of this exception, if any.
 @return the exception causing this one, null if there isn't one.
 */
- (JavaLangThrowable *)getCause;

#pragma mark Package-Private

/*!
 @brief Base constructor
 @param message a message concerning the exception.
 */
- (instancetype)initWithNSString:(NSString *)message;

/*!
 @brief Constructor when this exception is due to another one.
 @param message a message concerning the exception.
 @param cause the exception that caused this exception to be thrown.
 */
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Exception)

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1Exception_initWithNSString_(OrgBouncycastleAsn1ASN1Exception *self, NSString *message);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Exception *new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Exception *create_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1Exception_initWithNSString_withJavaLangThrowable_(OrgBouncycastleAsn1ASN1Exception *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Exception *new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Exception *create_OrgBouncycastleAsn1ASN1Exception_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1Exception)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Exception")

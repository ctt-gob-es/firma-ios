//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DERBitString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERBitString")
#ifdef RESTRICT_OrgBouncycastleAsn1DERBitString
#define INCLUDE_ALL_OrgBouncycastleAsn1DERBitString 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DERBitString 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DERBitString

#if !defined (OrgBouncycastleAsn1DERBitString_) && (INCLUDE_ALL_OrgBouncycastleAsn1DERBitString || defined(INCLUDE_OrgBouncycastleAsn1DERBitString))
#define OrgBouncycastleAsn1DERBitString_

#define RESTRICT_OrgBouncycastleAsn1ASN1BitString 1
#define INCLUDE_OrgBouncycastleAsn1ASN1BitString 1
#include "org/bouncycastle/asn1/ASN1BitString.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1OctetString;
@class OrgBouncycastleAsn1ASN1OutputStream;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief A BIT STRING with DER encoding - the first byte contains the count of padding bits included in the byte array's last byte.
 */
@interface OrgBouncycastleAsn1DERBitString : OrgBouncycastleAsn1ASN1BitString

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)obj;

- (instancetype)initWithByte:(jbyte)data
                     withInt:(jint)padBits;

- (instancetype)initWithByteArray:(IOSByteArray *)data;

- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)padBits;

- (instancetype)initWithInt:(jint)value;

+ (OrgBouncycastleAsn1DERBitString *)convertWithOrgBouncycastleAsn1ASN1BitString:(OrgBouncycastleAsn1ASN1BitString *)bitString;

/*!
 @brief return a Bit String from a tagged object.
 @param obj the tagged object holding the object we want
 @param explicit_ true if the object is meant to be explicitly tagged false                  otherwise.
 @throw IllegalArgumentExceptionif the tagged object cannot be converted.
 @return a DERBitString instance, or null.
 */
+ (OrgBouncycastleAsn1DERBitString *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                            withBoolean:(jboolean)explicit_;

/*!
 @brief return a Bit String from the passed in object
 @param obj a DERBitString or an object that can be converted into one.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 @return a DERBitString instance, or null.
 */
+ (OrgBouncycastleAsn1DERBitString *)getInstanceWithId:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)check;

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag;

- (jboolean)encodeConstructed;

- (jint)encodedLengthWithBoolean:(jboolean)withTag;

+ (OrgBouncycastleAsn1DERBitString *)fromOctetStringWithOrgBouncycastleAsn1ASN1OctetString:(OrgBouncycastleAsn1ASN1OctetString *)octetString;

- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject;

- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1DERBitString)

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *OrgBouncycastleAsn1DERBitString_convertWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString *bitString);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *OrgBouncycastleAsn1DERBitString_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *OrgBouncycastleAsn1DERBitString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERBitString_initWithByteArray_(OrgBouncycastleAsn1DERBitString *self, IOSByteArray *data);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *new_OrgBouncycastleAsn1DERBitString_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *create_OrgBouncycastleAsn1DERBitString_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERBitString_initWithByte_withInt_(OrgBouncycastleAsn1DERBitString *self, jbyte data, jint padBits);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *new_OrgBouncycastleAsn1DERBitString_initWithByte_withInt_(jbyte data, jint padBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *create_OrgBouncycastleAsn1DERBitString_initWithByte_withInt_(jbyte data, jint padBits);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(OrgBouncycastleAsn1DERBitString *self, IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *new_OrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *create_OrgBouncycastleAsn1DERBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERBitString_initWithInt_(OrgBouncycastleAsn1DERBitString *self, jint value);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *new_OrgBouncycastleAsn1DERBitString_initWithInt_(jint value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *create_OrgBouncycastleAsn1DERBitString_initWithInt_(jint value);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1DERBitString *self, id<OrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *new_OrgBouncycastleAsn1DERBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *create_OrgBouncycastleAsn1DERBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERBitString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1DERBitString *self, IOSByteArray *contents, jboolean check);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *new_OrgBouncycastleAsn1DERBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *create_OrgBouncycastleAsn1DERBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERBitString *OrgBouncycastleAsn1DERBitString_fromOctetStringWithOrgBouncycastleAsn1ASN1OctetString_(OrgBouncycastleAsn1ASN1OctetString *octetString);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DERBitString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERBitString")

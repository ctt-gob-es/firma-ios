//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Integer.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Properties.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1Integer must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1Integer () {
 @public
  IOSByteArray *bytes_;
  jint start_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1Integer, bytes_, IOSByteArray *)

@interface OrgBouncycastleAsn1ASN1Integer_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Integer_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1Integer_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Integer_1 *new_OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Integer_1 *create_OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Integer.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1Integer)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1Integer_TYPE;


#line 12
@implementation OrgBouncycastleAsn1ASN1Integer


#line 37
+ (OrgBouncycastleAsn1ASN1Integer *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_(obj);
}


#line 70
+ (OrgBouncycastleAsn1ASN1Integer *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                           withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1Integer_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}


#line 80
- (instancetype)initWithLong:(jlong)value {
  OrgBouncycastleAsn1ASN1Integer_initWithLong_(self, value);
  return self;
}


#line 91
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)value {
  OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(self, value);
  return self;
}


#line 119
- (instancetype)initWithByteArray:(IOSByteArray *)bytes {
  OrgBouncycastleAsn1ASN1Integer_initWithByteArray_(self, bytes);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)bytes
                      withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(self, bytes, clone);
  return self;
}


#line 141
- (JavaMathBigInteger *)getPositiveValue {
  
#line 143
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, bytes_);
}


#line 146
- (JavaMathBigInteger *)getValue {
  
#line 148
  return new_JavaMathBigInteger_initWithByteArray_(bytes_);
}


#line 151
- (jboolean)hasValueWithInt:(jint)x {
  
#line 153
  return ((IOSByteArray *) nil_chk(bytes_))->size_ - start_ <= 4 &&
#line 154
  OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(bytes_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED) == x;
}


#line 157
- (jboolean)hasValueWithLong:(jlong)x {
  
#line 159
  return ((IOSByteArray *) nil_chk(bytes_))->size_ - start_ <= 8 &&
#line 160
  OrgBouncycastleAsn1ASN1Integer_longValueWithByteArray_withInt_withInt_(bytes_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED) == x;
}


#line 163
- (jboolean)hasValueWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  
#line 165
  return nil != x &&
#line 167
  OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(bytes_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED) == [x intValue] &&
#line 168
  [((JavaMathBigInteger *) nil_chk([self getValue])) isEqual:x];
}


#line 171
- (jint)intPositiveValueExact {
  
#line 173
  jint count = ((IOSByteArray *) nil_chk(bytes_))->size_ - start_;
  if (count > 4 || (count == 4 && 0 != (IOSByteArray_Get(bytes_, start_) & (jint) 0x80))) {
    
#line 176
    @throw new_JavaLangArithmeticException_initWithNSString_(@"ASN.1 Integer out of positive int range");
  }
  
#line 179
  return OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(bytes_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_UNSIGNED);
}


#line 182
- (jint)intValueExact {
  
#line 184
  jint count = ((IOSByteArray *) nil_chk(bytes_))->size_ - start_;
  if (count > 4) {
    
#line 187
    @throw new_JavaLangArithmeticException_initWithNSString_(@"ASN.1 Integer out of int range");
  }
  
#line 190
  return OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(bytes_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED);
}


#line 193
- (jlong)longValueExact {
  
#line 195
  jint count = ((IOSByteArray *) nil_chk(bytes_))->size_ - start_;
  if (count > 8) {
    
#line 198
    @throw new_JavaLangArithmeticException_initWithNSString_(@"ASN.1 Integer out of long range");
  }
  
#line 201
  return OrgBouncycastleAsn1ASN1Integer_longValueWithByteArray_withInt_withInt_(bytes_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED);
}


#line 204
- (jboolean)encodeConstructed {
  
#line 207
  return false;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 213
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(bytes_))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 219
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_INTEGER withByteArray:bytes_];
}


#line 222
- (NSUInteger)hash {
  
#line 225
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_(bytes_);
}

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)o {
  
#line 231
  if (!([o isKindOfClass:[OrgBouncycastleAsn1ASN1Integer class]])) {
    
#line 233
    return false;
  }
  
#line 236
  OrgBouncycastleAsn1ASN1Integer *other = (OrgBouncycastleAsn1ASN1Integer *) cast_chk(o, [OrgBouncycastleAsn1ASN1Integer class]);
  
#line 238
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(bytes_, ((OrgBouncycastleAsn1ASN1Integer *) nil_chk(other))->bytes_);
}


#line 241
- (NSString *)description {
  
#line 244
  return [((JavaMathBigInteger *) nil_chk([self getValue])) description];
}

+ (OrgBouncycastleAsn1ASN1Integer *)createPrimitiveWithByteArray:(IOSByteArray *)contents {
  return OrgBouncycastleAsn1ASN1Integer_createPrimitiveWithByteArray_(contents);
}


#line 252
+ (jint)intValueWithByteArray:(IOSByteArray *)bytes
                      withInt:(jint)start
                      withInt:(jint)signExt {
  return OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(bytes, start, signExt);
}


#line 265
+ (jlong)longValueWithByteArray:(IOSByteArray *)bytes
                        withInt:(jint)start
                        withInt:(jint)signExt {
  return OrgBouncycastleAsn1ASN1Integer_longValueWithByteArray_withInt_withInt_(bytes, start, signExt);
}


#line 284
+ (jboolean)isMalformedWithByteArray:(IOSByteArray *)bytes {
  return OrgBouncycastleAsn1ASN1Integer_isMalformedWithByteArray_(bytes);
}


#line 299
+ (jint)signBytesToSkipWithByteArray:(IOSByteArray *)bytes {
  return OrgBouncycastleAsn1ASN1Integer_signBytesToSkipWithByteArray_(bytes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 11, 12, 13, -1, -1, -1 },
    { NULL, "I", 0x1, 14, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 15, 16, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x8, 18, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 19, 20, -1, -1, -1, -1 },
    { NULL, "J", 0x8, 21, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 22, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 23, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithLong:);
  methods[3].selector = @selector(initWithJavaMathBigInteger:);
  methods[4].selector = @selector(initWithByteArray:);
  methods[5].selector = @selector(initWithByteArray:withBoolean:);
  methods[6].selector = @selector(getPositiveValue);
  methods[7].selector = @selector(getValue);
  methods[8].selector = @selector(hasValueWithInt:);
  methods[9].selector = @selector(hasValueWithLong:);
  methods[10].selector = @selector(hasValueWithJavaMathBigInteger:);
  methods[11].selector = @selector(intPositiveValueExact);
  methods[12].selector = @selector(intValueExact);
  methods[13].selector = @selector(longValueExact);
  methods[14].selector = @selector(encodeConstructed);
  methods[15].selector = @selector(encodedLengthWithBoolean:);
  methods[16].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[17].selector = @selector(hash);
  methods[18].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[19].selector = @selector(description);
  methods[20].selector = @selector(createPrimitiveWithByteArray:);
  methods[21].selector = @selector(intValueWithByteArray:withInt:withInt:);
  methods[22].selector = @selector(longValueWithByteArray:withInt:withInt:);
  methods[23].selector = @selector(isMalformedWithByteArray:);
  methods[24].selector = @selector(signBytesToSkipWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 24, -1, -1 },
    { "SIGN_EXT_SIGNED", "I", .constantValue.asInt = OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED, 0x18, -1, -1, -1, -1 },
    { "SIGN_EXT_UNSIGNED", "I", .constantValue.asInt = OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_UNSIGNED, 0x18, -1, -1, -1, -1 },
    { "bytes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "J", "LJavaMathBigInteger;", "[B", "[BZ", "hasValue", "I", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;", "hashCode", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "toString", "createPrimitive", "intValue", "[BII", "longValue", "isMalformed", "signBytesToSkip", &OrgBouncycastleAsn1ASN1Integer_TYPE };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Integer = { "ASN1Integer", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 25, 5, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Integer;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1Integer class]) {
    OrgBouncycastleAsn1ASN1Integer_TYPE = new_OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(
#line 15
    OrgBouncycastleAsn1ASN1Integer_class_(), OrgBouncycastleAsn1BERTags_INTEGER);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1Integer)
  }
}

@end


#line 37
OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1Integer_initialize();
  
#line 40
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1Integer class]]) {
    
#line 42
    return (OrgBouncycastleAsn1ASN1Integer *) cast_chk(obj, [OrgBouncycastleAsn1ASN1Integer class]);
  }
  
#line 45
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 47
    @try {
      
#line 49
      return (OrgBouncycastleAsn1ASN1Integer *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1Integer_TYPE)) fromByteArrayWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])], [OrgBouncycastleAsn1ASN1Integer class]);
    }
    @catch (JavaLangException *e) {
      
#line 53
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"encoding error in getInstance: ", [e description]));
    }
  }
  
#line 57
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 70
OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1ASN1Integer_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1Integer_initialize();
  return (OrgBouncycastleAsn1ASN1Integer *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1Integer_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1Integer class]);
}


#line 80
void OrgBouncycastleAsn1ASN1Integer_initWithLong_(OrgBouncycastleAsn1ASN1Integer *self, jlong value) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  self->bytes_ = [((JavaMathBigInteger *) nil_chk(JavaMathBigInteger_valueOfWithLong_(value))) toByteArray];
  self->start_ = 0;
}


#line 80
OrgBouncycastleAsn1ASN1Integer *new_OrgBouncycastleAsn1ASN1Integer_initWithLong_(jlong value) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithLong_, value)
}


#line 80
OrgBouncycastleAsn1ASN1Integer *create_OrgBouncycastleAsn1ASN1Integer_initWithLong_(jlong value) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithLong_, value)
}


#line 91
void OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(OrgBouncycastleAsn1ASN1Integer *self, JavaMathBigInteger *value) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  self->bytes_ = [((JavaMathBigInteger *) nil_chk(value)) toByteArray];
  self->start_ = 0;
}


#line 91
OrgBouncycastleAsn1ASN1Integer *new_OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(JavaMathBigInteger *value) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithJavaMathBigInteger_, value)
}


#line 91
OrgBouncycastleAsn1ASN1Integer *create_OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(JavaMathBigInteger *value) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithJavaMathBigInteger_, value)
}


#line 119
void OrgBouncycastleAsn1ASN1Integer_initWithByteArray_(OrgBouncycastleAsn1ASN1Integer *self, IOSByteArray *bytes) {
  OrgBouncycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(self,
#line 121
  bytes, true);
}


#line 119
OrgBouncycastleAsn1ASN1Integer *new_OrgBouncycastleAsn1ASN1Integer_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithByteArray_, bytes)
}


#line 119
OrgBouncycastleAsn1ASN1Integer *create_OrgBouncycastleAsn1ASN1Integer_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithByteArray_, bytes)
}


#line 124
void OrgBouncycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1Integer *self, IOSByteArray *bytes, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (OrgBouncycastleAsn1ASN1Integer_isMalformedWithByteArray_(bytes)) {
    
#line 128
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"malformed integer");
  }
  
#line 131
  self->bytes_ = clone ? OrgBouncycastleUtilArrays_cloneWithByteArray_(bytes) : bytes;
  self->start_ = OrgBouncycastleAsn1ASN1Integer_signBytesToSkipWithByteArray_(bytes);
}


#line 124
OrgBouncycastleAsn1ASN1Integer *new_OrgBouncycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(IOSByteArray *bytes, jboolean clone) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithByteArray_withBoolean_, bytes, clone)
}


#line 124
OrgBouncycastleAsn1ASN1Integer *create_OrgBouncycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(IOSByteArray *bytes, jboolean clone) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Integer, initWithByteArray_withBoolean_, bytes, clone)
}


#line 247
OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1ASN1Integer_createPrimitiveWithByteArray_(IOSByteArray *contents) {
  OrgBouncycastleAsn1ASN1Integer_initialize();
  return new_OrgBouncycastleAsn1ASN1Integer_initWithByteArray_withBoolean_(contents, false);
}

jint OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint start, jint signExt) {
  OrgBouncycastleAsn1ASN1Integer_initialize();
  jint length = ((IOSByteArray *) nil_chk(bytes))->size_;
  jint pos = JavaLangMath_maxWithInt_withInt_(start, length - 4);
  
#line 257
  jint val = IOSByteArray_Get(bytes, pos) & signExt;
  while (++pos < length) {
    
#line 260
    val = (JreLShift32(val, 8)) | (IOSByteArray_Get(bytes, pos) & OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_UNSIGNED);
  }
  return val;
}


#line 265
jlong OrgBouncycastleAsn1ASN1Integer_longValueWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint start, jint signExt) {
  OrgBouncycastleAsn1ASN1Integer_initialize();
  jint length = ((IOSByteArray *) nil_chk(bytes))->size_;
  jint pos = JavaLangMath_maxWithInt_withInt_(start, length - 8);
  
#line 270
  jlong val = IOSByteArray_Get(bytes, pos) & signExt;
  while (++pos < length) {
    
#line 273
    val = (JreLShift64(val, 8)) | (IOSByteArray_Get(bytes, pos) & OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_UNSIGNED);
  }
  return val;
}


#line 284
jboolean OrgBouncycastleAsn1ASN1Integer_isMalformedWithByteArray_(IOSByteArray *bytes) {
  OrgBouncycastleAsn1ASN1Integer_initialize();
  switch (((IOSByteArray *) nil_chk(bytes))->size_) {
    
#line 288
    case 0:
    return true;
    case 1:
    return false;
    default:
    return IOSByteArray_Get(bytes, 0) == JreRShift32(IOSByteArray_Get(bytes, 1), 7) &&
#line 295
    !OrgBouncycastleUtilProperties_isOverrideSetWithNSString_(@"org.bouncycastle.asn1.allow_unsafe_integer");
  }
}


#line 299
jint OrgBouncycastleAsn1ASN1Integer_signBytesToSkipWithByteArray_(IOSByteArray *bytes) {
  OrgBouncycastleAsn1ASN1Integer_initialize();
  jint pos = 0;
  jint last = ((IOSByteArray *) nil_chk(bytes))->size_ - 1;
  while (pos < last &&
#line 304
  IOSByteArray_Get(bytes, pos) == JreRShift32(IOSByteArray_Get(bytes, pos + 1), 7)) {
    
#line 306
    ++pos;
  }
  return pos;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1Integer)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Integer.java"


#line 16
@implementation OrgBouncycastleAsn1ASN1Integer_1


#line 16
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 17
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 20
  return OrgBouncycastleAsn1ASN1Integer_createPrimitiveWithByteArray_([((OrgBouncycastleAsn1DEROctetString *) nil_chk(octetString)) getOctets]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "LOrgBouncycastleAsn1ASN1Integer;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Integer_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Integer_1;
}

@end


#line 16
void OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1Integer_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 16
  javaClass, tagNumber);
}


#line 16
OrgBouncycastleAsn1ASN1Integer_1 *new_OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Integer_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 16
OrgBouncycastleAsn1ASN1Integer_1 *create_OrgBouncycastleAsn1ASN1Integer_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Integer_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

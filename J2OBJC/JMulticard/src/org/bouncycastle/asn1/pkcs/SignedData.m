//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/pkcs/SignedData.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/BERSequence.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/pkcs/ContentInfo.h"
#include "org/bouncycastle/asn1/pkcs/SignedData.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/pkcs/SignedData must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1PkcsSignedData () {
 @public
  OrgBouncycastleAsn1ASN1Integer *version__;
  OrgBouncycastleAsn1ASN1Set *digestAlgorithms_;
  OrgBouncycastleAsn1PkcsContentInfo *contentInfo_;
  OrgBouncycastleAsn1ASN1Set *certificates_;
  OrgBouncycastleAsn1ASN1Set *crls_;
  OrgBouncycastleAsn1ASN1Set *signerInfos_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1PkcsSignedData, version__, OrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1PkcsSignedData, digestAlgorithms_, OrgBouncycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1PkcsSignedData, contentInfo_, OrgBouncycastleAsn1PkcsContentInfo *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1PkcsSignedData, certificates_, OrgBouncycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1PkcsSignedData, crls_, OrgBouncycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1PkcsSignedData, signerInfos_, OrgBouncycastleAsn1ASN1Set *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/pkcs/SignedData.java"


#line 18
@implementation OrgBouncycastleAsn1PkcsSignedData


#line 29
+ (OrgBouncycastleAsn1PkcsSignedData *)getInstanceWithId:(id)o {
  return OrgBouncycastleAsn1PkcsSignedData_getInstanceWithId_(o);
}


#line 44
- (instancetype)initWithOrgBouncycastleAsn1ASN1Integer:(OrgBouncycastleAsn1ASN1Integer *)_version
                        withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)_digestAlgorithms
                withOrgBouncycastleAsn1PkcsContentInfo:(OrgBouncycastleAsn1PkcsContentInfo *)_contentInfo
                        withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)_certificates
                        withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)_crls
                        withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)_signerInfos {
  OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Integer_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1PkcsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(self, _version, _digestAlgorithms, _contentInfo, _certificates, _crls, _signerInfos);
  return self;
}


#line 60
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 100
- (OrgBouncycastleAsn1ASN1Integer *)getVersion {
  
#line 102
  return version__;
}


#line 105
- (OrgBouncycastleAsn1ASN1Set *)getDigestAlgorithms {
  
#line 107
  return digestAlgorithms_;
}


#line 110
- (OrgBouncycastleAsn1PkcsContentInfo *)getContentInfo {
  
#line 112
  return contentInfo_;
}


#line 115
- (OrgBouncycastleAsn1ASN1Set *)getCertificates {
  
#line 117
  return certificates_;
}


#line 120
- (OrgBouncycastleAsn1ASN1Set *)getCRLs {
  
#line 122
  return crls_;
}


#line 125
- (OrgBouncycastleAsn1ASN1Set *)getSignerInfos {
  
#line 127
  return signerInfos_;
}


#line 145
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 148
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_(6);
  
#line 150
  [v addWithOrgBouncycastleAsn1ASN1Encodable:version__];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:digestAlgorithms_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:contentInfo_];
  
#line 154
  if (certificates_ != nil) {
    
#line 156
    [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(false, 0, certificates_)];
  }
  
#line 159
  if (crls_ != nil) {
    
#line 161
    [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(false, 1, crls_)];
  }
  
#line 164
  [v addWithOrgBouncycastleAsn1ASN1Encodable:signerInfos_];
  
#line 166
  return new_OrgBouncycastleAsn1BERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1PkcsSignedData;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1PkcsContentInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1ASN1Integer:withOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1PkcsContentInfo:withOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1ASN1Set:);
  methods[2].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getVersion);
  methods[4].selector = @selector(getDigestAlgorithms);
  methods[5].selector = @selector(getContentInfo);
  methods[6].selector = @selector(getCertificates);
  methods[7].selector = @selector(getCRLs);
  methods[8].selector = @selector(getSignerInfos);
  methods[9].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, 4, -1, -1, -1 },
    { "digestAlgorithms_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentInfo_", "LOrgBouncycastleAsn1PkcsContentInfo;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certificates_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "crls_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signerInfos_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1Integer;LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1PkcsContentInfo;LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1ASN1Set;", "LOrgBouncycastleAsn1ASN1Sequence;", "version" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1PkcsSignedData = { "SignedData", "org.bouncycastle.asn1.pkcs", ptrTable, methods, fields, 7, 0x1, 10, 6, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1PkcsSignedData;
}

@end


#line 29
OrgBouncycastleAsn1PkcsSignedData *OrgBouncycastleAsn1PkcsSignedData_getInstanceWithId_(id o) {
  OrgBouncycastleAsn1PkcsSignedData_initialize();
  
#line 32
  if ([o isKindOfClass:[OrgBouncycastleAsn1PkcsSignedData class]]) {
    
#line 34
    return (OrgBouncycastleAsn1PkcsSignedData *) o;
  }
  else if (o != nil) {
    
#line 38
    return new_OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  
#line 41
  return nil;
}


#line 44
void OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Integer_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1PkcsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1PkcsSignedData *self, OrgBouncycastleAsn1ASN1Integer *_version, OrgBouncycastleAsn1ASN1Set *_digestAlgorithms, OrgBouncycastleAsn1PkcsContentInfo *_contentInfo, OrgBouncycastleAsn1ASN1Set *_certificates, OrgBouncycastleAsn1ASN1Set *_crls, OrgBouncycastleAsn1ASN1Set *_signerInfos) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 52
  self->version__ = _version;
  self->digestAlgorithms_ = _digestAlgorithms;
  self->contentInfo_ = _contentInfo;
  self->certificates_ = _certificates;
  self->crls_ = _crls;
  self->signerInfos_ = _signerInfos;
}


#line 44
OrgBouncycastleAsn1PkcsSignedData *new_OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Integer_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1PkcsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1ASN1Integer *_version, OrgBouncycastleAsn1ASN1Set *_digestAlgorithms, OrgBouncycastleAsn1PkcsContentInfo *_contentInfo, OrgBouncycastleAsn1ASN1Set *_certificates, OrgBouncycastleAsn1ASN1Set *_crls, OrgBouncycastleAsn1ASN1Set *_signerInfos) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1PkcsSignedData, initWithOrgBouncycastleAsn1ASN1Integer_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1PkcsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_, _version, _digestAlgorithms, _contentInfo, _certificates, _crls, _signerInfos)
}


#line 44
OrgBouncycastleAsn1PkcsSignedData *create_OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Integer_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1PkcsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1ASN1Integer *_version, OrgBouncycastleAsn1ASN1Set *_digestAlgorithms, OrgBouncycastleAsn1PkcsContentInfo *_contentInfo, OrgBouncycastleAsn1ASN1Set *_certificates, OrgBouncycastleAsn1ASN1Set *_crls, OrgBouncycastleAsn1ASN1Set *_signerInfos) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1PkcsSignedData, initWithOrgBouncycastleAsn1ASN1Integer_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1PkcsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_, _version, _digestAlgorithms, _contentInfo, _certificates, _crls, _signerInfos)
}


#line 60
void OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1PkcsSignedData *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 63
  id<JavaUtilEnumeration> e = [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  
#line 65
  self->version__ = (OrgBouncycastleAsn1ASN1Integer *) cast_chk([((id<JavaUtilEnumeration>) nil_chk(e)) nextElement], [OrgBouncycastleAsn1ASN1Integer class]);
  self->digestAlgorithms_ = ((OrgBouncycastleAsn1ASN1Set *) cast_chk([e nextElement], [OrgBouncycastleAsn1ASN1Set class]));
  self->contentInfo_ = OrgBouncycastleAsn1PkcsContentInfo_getInstanceWithId_([e nextElement]);
  
#line 69
  while ([e hasMoreElements]) {
    
#line 71
    OrgBouncycastleAsn1ASN1Primitive *o = (OrgBouncycastleAsn1ASN1Primitive *) cast_chk([e nextElement], [OrgBouncycastleAsn1ASN1Primitive class]);
    
#line 77
    if ([o isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
      
#line 79
      OrgBouncycastleAsn1ASN1TaggedObject *tagged = (OrgBouncycastleAsn1ASN1TaggedObject *) o;
      
#line 81
      switch ([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo]) {
        
#line 83
        case 0:
        self->certificates_ = OrgBouncycastleAsn1ASN1Set_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
        break;
        case 1:
        self->crls_ = OrgBouncycastleAsn1ASN1Set_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
        break;
        default:
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag value ", [tagged getTagNo]));
      }
    }
    else {
      
#line 95
      self->signerInfos_ = (OrgBouncycastleAsn1ASN1Set *) cast_chk(o, [OrgBouncycastleAsn1ASN1Set class]);
    }
  }
}


#line 60
OrgBouncycastleAsn1PkcsSignedData *new_OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1PkcsSignedData, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 60
OrgBouncycastleAsn1PkcsSignedData *create_OrgBouncycastleAsn1PkcsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1PkcsSignedData, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1PkcsSignedData)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1BitStringParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1BitStringParser")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1BitStringParser
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1BitStringParser 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1BitStringParser 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1BitStringParser

#if !defined (OrgBouncycastleAsn1ASN1BitStringParser_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1BitStringParser || defined(INCLUDE_OrgBouncycastleAsn1ASN1BitStringParser))
#define OrgBouncycastleAsn1ASN1BitStringParser_

#define RESTRICT_OrgBouncycastleAsn1ASN1Encodable 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Encodable 1
#include "org/bouncycastle/asn1/ASN1Encodable.h"

#define RESTRICT_OrgBouncycastleAsn1InMemoryRepresentable 1
#define INCLUDE_OrgBouncycastleAsn1InMemoryRepresentable 1
#include "org/bouncycastle/asn1/InMemoryRepresentable.h"

@class JavaIoInputStream;

/*!
 @brief A basic parser for a BIT STRING object
 */
@protocol OrgBouncycastleAsn1ASN1BitStringParser < OrgBouncycastleAsn1ASN1Encodable, OrgBouncycastleAsn1InMemoryRepresentable, JavaObject >

/*!
 @brief Return an InputStream representing the contents of the BIT STRING.The final
  byte, if any, may include pad bits.
 See <code>getPadBits()</code>.
 @return an InputStream with its source as the BIT STRING content.
 */
- (JavaIoInputStream *)getBitStream;

/*!
 @brief Return an InputStream representing the contents of the BIT STRING, where the
  content is expected to be octet-aligned (this will be automatically checked
  during parsing).
 @return an InputStream with its source as the BIT STRING content.
 */
- (JavaIoInputStream *)getOctetStream;

/*!
 @brief Return the number of pad bits, if any, in the final byte, if any, read from 
 <code>getBitStream()</code>.This number is in the range zero to seven.
 That
  number of the least significant bits of the final byte, if any, are not part
  of the contents and should be ignored. NOTE: Must be called AFTER the stream
  has been fully processed. (Does not need to be called if 
 <code>getOctetStream()</code> was used instead of <code>getBitStream()</code>).
 @return the number of pad bits. In the range zero to seven.
 */
- (jint)getPadBits;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1BitStringParser)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1BitStringParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1BitStringParser")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1TaggedObject.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1BitStringParser.h"
#include "org/bouncycastle/asn1/ASN1Choice.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Exception.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1OctetStringParser.h"
#include "org/bouncycastle/asn1/ASN1ParsingException.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1SequenceParser.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/ASN1SetParser.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1TaggedObjectParser.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/ASN1UniversalTypes.h"
#include "org/bouncycastle/asn1/ASN1Util.h"
#include "org/bouncycastle/asn1/BERApplicationSpecific.h"
#include "org/bouncycastle/asn1/BERFactory.h"
#include "org/bouncycastle/asn1/BERSequence.h"
#include "org/bouncycastle/asn1/BERTaggedObject.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/DLApplicationSpecific.h"
#include "org/bouncycastle/asn1/DLFactory.h"
#include "org/bouncycastle/asn1/DLSequence.h"
#include "org/bouncycastle/asn1/DLTaggedObject.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1TaggedObject must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1TaggedObject ()

+ (OrgBouncycastleAsn1ASN1TaggedObject *)checkedCastWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive;

@end

inline jint OrgBouncycastleAsn1ASN1TaggedObject_get_DECLARED_EXPLICIT(void);
#define OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_EXPLICIT 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleAsn1ASN1TaggedObject, DECLARED_EXPLICIT, jint)

inline jint OrgBouncycastleAsn1ASN1TaggedObject_get_DECLARED_IMPLICIT(void);
#define OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_IMPLICIT 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleAsn1ASN1TaggedObject, DECLARED_IMPLICIT, jint)

inline jint OrgBouncycastleAsn1ASN1TaggedObject_get_PARSED_EXPLICIT(void);
#define OrgBouncycastleAsn1ASN1TaggedObject_PARSED_EXPLICIT 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleAsn1ASN1TaggedObject, PARSED_EXPLICIT, jint)

inline jint OrgBouncycastleAsn1ASN1TaggedObject_get_PARSED_IMPLICIT(void);
#define OrgBouncycastleAsn1ASN1TaggedObject_PARSED_IMPLICIT 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleAsn1ASN1TaggedObject, PARSED_IMPLICIT, jint)

__attribute__((unused)) static OrgBouncycastleAsn1ASN1TaggedObject *OrgBouncycastleAsn1ASN1TaggedObject_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1Primitive *primitive);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1ASN1TaggedObject__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1ASN1TaggedObject__Annotations$1(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1TaggedObject.java"


#line 13
@implementation OrgBouncycastleAsn1ASN1TaggedObject


#line 23
+ (OrgBouncycastleAsn1ASN1TaggedObject *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_(obj);
}


#line 53
+ (OrgBouncycastleAsn1ASN1TaggedObject *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                                withBoolean:(jboolean)declaredExplicit {
  return OrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, declaredExplicit);
}


#line 83
- (instancetype)initWithBoolean:(jboolean)explicit_
                        withInt:(jint)tagNo
withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)obj {
  OrgBouncycastleAsn1ASN1TaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(self, explicit_, tagNo, obj);
  return self;
}


#line 88
- (instancetype)initWithBoolean:(jboolean)explicit_
                        withInt:(jint)tagClass
                        withInt:(jint)tagNo
withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)obj {
  OrgBouncycastleAsn1ASN1TaggedObject_initWithBoolean_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(self, explicit_, tagClass, tagNo, obj);
  return self;
}


#line 93
- (instancetype)initWithInt:(jint)explicitness
                    withInt:(jint)tagClass
                    withInt:(jint)tagNo
withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)obj {
  OrgBouncycastleAsn1ASN1TaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(self, explicitness, tagClass, tagNo, obj);
  return self;
}


#line 110
- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other {
  
#line 113
  if (!([other isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]])) {
    
#line 115
    return false;
  }
  
#line 118
  OrgBouncycastleAsn1ASN1TaggedObject *that = (OrgBouncycastleAsn1ASN1TaggedObject *) cast_chk(other, [OrgBouncycastleAsn1ASN1TaggedObject class]);
  
#line 124
  if (tagNo_ != ((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(that))->tagNo_ ||
#line 125
  tagClass_ != that->tagClass_ || ((explicitness_ != that->explicitness_) && ([self isExplicit] != [that isExplicit]))) {
    
#line 127
    return false;
  }
  
#line 130
  OrgBouncycastleAsn1ASN1Primitive *p1 = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive];
  OrgBouncycastleAsn1ASN1Primitive *p2 = [that->obj_ toASN1Primitive];
  
#line 133
  if (JreObjectEqualsEquals(p1, p2)) {
    
#line 135
    return true;
  }
  
#line 138
  if (![self isExplicit]) {
    
#line 140
    @try {
      
#line 142
      IOSByteArray *d1 = [self getEncoded];
      IOSByteArray *d2 = [that getEncoded];
      
#line 145
      return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(d1, d2);
    }
    @catch (JavaIoIOException *e) {
      
#line 149
      return false;
    }
  }
  
#line 153
  return [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(p1)) asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:p2];
}


#line 156
- (NSUInteger)hash {
  
#line 159
  return tagClass_ * 7919 ^ tagNo_ ^ ([self isExplicit] ? (jint) 0x0F : (jint) 0xF0) ^ ((jint) [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive])) hash]);
}

- (jint)getTagClass {
  
#line 165
  return tagClass_;
}


#line 173
- (jint)getTagNo {
  
#line 176
  return tagNo_;
}

- (jboolean)hasContextTagWithInt:(jint)tagNo {
  
#line 182
  return tagClass_ == OrgBouncycastleAsn1BERTags_CONTEXT_SPECIFIC && self->tagNo_ == tagNo;
}

- (jboolean)hasTagWithInt:(jint)tagClass
                  withInt:(jint)tagNo {
  
#line 188
  return self->tagClass_ == tagClass && self->tagNo_ == tagNo;
}


#line 200
- (jboolean)isExplicit {
  
#line 203
  switch (explicitness_) {
    
#line 205
    case OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_EXPLICIT:
    case OrgBouncycastleAsn1ASN1TaggedObject_PARSED_EXPLICIT:
    return true;
    default:
    return false;
  }
}


#line 213
- (jboolean)isParsed {
  
#line 215
  switch (explicitness_) {
    
#line 217
    case OrgBouncycastleAsn1ASN1TaggedObject_PARSED_EXPLICIT:
    case OrgBouncycastleAsn1ASN1TaggedObject_PARSED_IMPLICIT:
    return true;
    default:
    return false;
  }
}


#line 230
- (IOSByteArray *)getContents {
  
#line 232
  @try {
    
#line 234
    IOSByteArray *baseEncoding = [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive])) getEncodedWithNSString:[self getASN1Encoding]];
    if ([self isExplicit]) {
      
#line 237
      return baseEncoding;
    }
    
#line 240
    JavaIoByteArrayInputStream *input = new_JavaIoByteArrayInputStream_initWithByteArray_(baseEncoding);
    jint tag = [input read];
    OrgBouncycastleAsn1ASN1InputStream_readTagNumberWithJavaIoInputStream_withInt_(input, tag);
    jint length = OrgBouncycastleAsn1ASN1InputStream_readLengthWithJavaIoInputStream_withInt_withBoolean_(input, [input available], false);
    jint remaining = [input available];
    
#line 247
    jint contentsLength = length < 0 ? remaining - 2 : remaining;
    if (contentsLength < 0) {
      
#line 250
      @throw new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_(@"failed to get contents");
    }
    
#line 253
    IOSByteArray *contents = [IOSByteArray newArrayWithLength:contentsLength];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(baseEncoding, ((IOSByteArray *) nil_chk(baseEncoding))->size_ - remaining, contents, 0, contentsLength);
    return contents;
  }
  @catch (JavaIoIOException *e) {
    
#line 259
    @throw new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(@"failed to get contents", e);
  }
}


#line 268
- (jboolean)isConstructed {
  
#line 270
  return [self encodeConstructed];
}


#line 286
- (OrgBouncycastleAsn1ASN1Primitive *)getObject {
  
#line 289
  if (OrgBouncycastleAsn1BERTags_CONTEXT_SPECIFIC != [self getTagClass]) {
    
#line 291
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"this method only valid for CONTEXT_SPECIFIC tags");
  }
  
#line 294
  return [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive];
}


#line 303
- (OrgBouncycastleAsn1ASN1Object *)getBaseObject {
  
#line 305
  return [obj_ isKindOfClass:[OrgBouncycastleAsn1ASN1Object class]] ? (OrgBouncycastleAsn1ASN1Object *) cast_chk(obj_, [OrgBouncycastleAsn1ASN1Object class]) : [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive];
}


#line 314
- (OrgBouncycastleAsn1ASN1Object *)getExplicitBaseObject {
  
#line 316
  if (![self isExplicit]) {
    
#line 318
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"object implicit - explicit expected.");
  }
  
#line 321
  return [obj_ isKindOfClass:[OrgBouncycastleAsn1ASN1Object class]] ? (OrgBouncycastleAsn1ASN1Object *) cast_chk(obj_, [OrgBouncycastleAsn1ASN1Object class]) : [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive];
}


#line 324
- (OrgBouncycastleAsn1ASN1TaggedObject *)getExplicitBaseTagged {
  
#line 326
  if (![self isExplicit]) {
    
#line 328
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"object implicit - explicit expected.");
  }
  
#line 331
  return OrgBouncycastleAsn1ASN1TaggedObject_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive]);
}


#line 334
- (OrgBouncycastleAsn1ASN1TaggedObject *)getImplicitBaseTaggedWithInt:(jint)baseTagClass
                                                              withInt:(jint)baseTagNo {
  if (baseTagClass == OrgBouncycastleAsn1BERTags_UNIVERSAL || (baseTagClass & OrgBouncycastleAsn1BERTags_PRIVATE) != baseTagClass) {
    
#line 338
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"invalid base tag class: ", baseTagClass));
  }
  
#line 341
  switch (explicitness_) {
    
#line 343
    case OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_EXPLICIT:
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"object explicit - implicit expected.");
    
#line 346
    case OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_IMPLICIT:
    {
      OrgBouncycastleAsn1ASN1TaggedObject *declared = OrgBouncycastleAsn1ASN1TaggedObject_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive]);
      return OrgBouncycastleAsn1ASN1Util_checkTagWithOrgBouncycastleAsn1ASN1TaggedObject_withInt_withInt_(declared, baseTagClass, baseTagNo);
    }
    
#line 353
    default:
    return [self replaceTagWithInt:baseTagClass withInt:baseTagNo];
  }
}


#line 369
- (OrgBouncycastleAsn1ASN1Primitive *)getBaseUniversalWithBoolean:(jboolean)declaredExplicit
                                                          withInt:(jint)tagNo {
  OrgBouncycastleAsn1ASN1UniversalType *universalType = OrgBouncycastleAsn1ASN1UniversalTypes_getWithInt_(tagNo);
  if (nil == universalType) {
    
#line 374
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unsupported UNIVERSAL tag number: ", tagNo));
  }
  
#line 377
  return [self getBaseUniversalWithBoolean:declaredExplicit withOrgBouncycastleAsn1ASN1UniversalType:universalType];
}


#line 380
- (OrgBouncycastleAsn1ASN1Primitive *)getBaseUniversalWithBoolean:(jboolean)declaredExplicit
                         withOrgBouncycastleAsn1ASN1UniversalType:(OrgBouncycastleAsn1ASN1UniversalType *)universalType {
  if (declaredExplicit) {
    
#line 384
    if (![self isExplicit]) {
      
#line 386
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"object explicit - implicit expected.");
    }
    
#line 389
    return [((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(universalType)) checkedCastWithOrgBouncycastleAsn1ASN1Primitive:[((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive]];
  }
  
#line 392
  if (OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_EXPLICIT == explicitness_) {
    
#line 394
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"object explicit - implicit expected.");
  }
  
#line 397
  OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj_)) toASN1Primitive];
  switch (explicitness_) {
    
#line 400
    case OrgBouncycastleAsn1ASN1TaggedObject_PARSED_EXPLICIT:
    return [((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(universalType)) fromImplicitConstructedWithOrgBouncycastleAsn1ASN1Sequence:[self rebuildConstructedWithOrgBouncycastleAsn1ASN1Primitive:primitive]];
    case OrgBouncycastleAsn1ASN1TaggedObject_PARSED_IMPLICIT:
    {
      if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
        
#line 406
        return [((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(universalType)) fromImplicitConstructedWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *) primitive];
      }
      return [((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(universalType)) fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *) cast_chk(primitive, [OrgBouncycastleAsn1DEROctetString class])];
    }
    default:
    return [((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(universalType)) checkedCastWithOrgBouncycastleAsn1ASN1Primitive:primitive];
  }
}


#line 418
- (id<OrgBouncycastleAsn1ASN1Encodable>)getObjectParserWithInt:(jint)tag
                                                   withBoolean:(jboolean)isExplicit {
  
#line 422
  if (OrgBouncycastleAsn1BERTags_CONTEXT_SPECIFIC != [self getTagClass]) {
    
#line 424
    @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(@"this method only valid for CONTEXT_SPECIFIC tags");
  }
  
#line 427
  return [self parseBaseUniversalWithBoolean:isExplicit withInt:tag];
}


#line 430
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseBaseUniversalWithBoolean:(jboolean)declaredExplicit
                                                              withInt:(jint)baseTagNo {
  
#line 433
  OrgBouncycastleAsn1ASN1Primitive *primitive = [self getBaseUniversalWithBoolean:declaredExplicit withInt:baseTagNo];
  
#line 435
  switch (baseTagNo) {
    
#line 437
    case OrgBouncycastleAsn1BERTags_BIT_STRING:
    return [((OrgBouncycastleAsn1ASN1BitString *) nil_chk(((OrgBouncycastleAsn1ASN1BitString *) cast_chk(primitive, [OrgBouncycastleAsn1ASN1BitString class])))) parser];
    case OrgBouncycastleAsn1BERTags_OCTET_STRING:
    return [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(((OrgBouncycastleAsn1ASN1OctetString *) cast_chk(primitive, [OrgBouncycastleAsn1ASN1OctetString class])))) parser];
    case OrgBouncycastleAsn1BERTags_SEQUENCE:
    return [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(((OrgBouncycastleAsn1ASN1Sequence *) cast_chk(primitive, [OrgBouncycastleAsn1ASN1Sequence class])))) parser];
    case OrgBouncycastleAsn1BERTags_SET:
    return [((OrgBouncycastleAsn1ASN1Set *) nil_chk(((OrgBouncycastleAsn1ASN1Set *) cast_chk(primitive, [OrgBouncycastleAsn1ASN1Set class])))) parser];
  }
  
#line 447
  return primitive;
}


#line 450
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseExplicitBaseObject {
  
#line 453
  return [self getExplicitBaseObject];
}

- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseExplicitBaseTagged {
  
#line 459
  return [self getExplicitBaseTagged];
}

- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseImplicitBaseTaggedWithInt:(jint)baseTagClass
                                                                        withInt:(jint)baseTagNo {
  
#line 465
  return [self getImplicitBaseTaggedWithInt:baseTagClass withInt:baseTagNo];
}


#line 468
- (OrgBouncycastleAsn1ASN1Primitive *)getLoadedObject {
  
#line 471
  return self;
}

- (NSString *)getASN1Encoding {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 476
- (OrgBouncycastleAsn1ASN1Sequence *)rebuildConstructedWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 478
- (OrgBouncycastleAsn1ASN1TaggedObject *)replaceTagWithInt:(jint)tagClass
                                                   withInt:(jint)tagNo {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 480
- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject {
  
#line 483
  return new_OrgBouncycastleAsn1DERTaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(explicitness_, tagClass_, tagNo_, obj_);
}

- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject {
  
#line 489
  return new_OrgBouncycastleAsn1DLTaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(explicitness_, tagClass_, tagNo_, obj_);
}

- (NSString *)description {
  
#line 495
  return JreStrcat("$@", OrgBouncycastleAsn1ASN1Util_getTagTextWithInt_withInt_(tagClass_, tagNo_), obj_);
}

+ (OrgBouncycastleAsn1ASN1Primitive *)createConstructedDLWithInt:(jint)tagClass
                                                         withInt:(jint)tagNo
                      withOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)contentsElements {
  return OrgBouncycastleAsn1ASN1TaggedObject_createConstructedDLWithInt_withInt_withOrgBouncycastleAsn1ASN1EncodableVector_(tagClass, tagNo, contentsElements);
}


#line 515
+ (OrgBouncycastleAsn1ASN1Primitive *)createConstructedILWithInt:(jint)tagClass
                                                         withInt:(jint)tagNo
                      withOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)contentsElements {
  return OrgBouncycastleAsn1ASN1TaggedObject_createConstructedILWithInt_withInt_withOrgBouncycastleAsn1ASN1EncodableVector_(tagClass, tagNo, contentsElements);
}


#line 532
+ (OrgBouncycastleAsn1ASN1Primitive *)createPrimitiveWithInt:(jint)tagClass
                                                     withInt:(jint)tagNo
                                               withByteArray:(IOSByteArray *)contentsOctets {
  return OrgBouncycastleAsn1ASN1TaggedObject_createPrimitiveWithInt_withInt_withByteArray_(tagClass, tagNo, contentsOctets);
}


#line 547
+ (OrgBouncycastleAsn1ASN1TaggedObject *)checkedCastWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive {
  return OrgBouncycastleAsn1ASN1TaggedObject_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(primitive);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Object;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Object;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0x1, 14, 12, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 15, 17, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 18, 19, 20, -1, 21, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 22, 16, 20, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, 20, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObjectParser;", 0x1, -1, -1, 20, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObjectParser;", 0x1, 23, 12, 20, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Sequence;", 0x400, 24, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0x400, 25, 12, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 26, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x8, 27, 28, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x8, 29, 28, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x8, 30, 31, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0xa, 32, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithBoolean:withInt:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[3].selector = @selector(initWithBoolean:withInt:withInt:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[4].selector = @selector(initWithInt:withInt:withInt:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[5].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(getTagClass);
  methods[8].selector = @selector(getTagNo);
  methods[9].selector = @selector(hasContextTagWithInt:);
  methods[10].selector = @selector(hasTagWithInt:withInt:);
  methods[11].selector = @selector(isExplicit);
  methods[12].selector = @selector(isParsed);
  methods[13].selector = @selector(getContents);
  methods[14].selector = @selector(isConstructed);
  methods[15].selector = @selector(getObject);
  methods[16].selector = @selector(getBaseObject);
  methods[17].selector = @selector(getExplicitBaseObject);
  methods[18].selector = @selector(getExplicitBaseTagged);
  methods[19].selector = @selector(getImplicitBaseTaggedWithInt:withInt:);
  methods[20].selector = @selector(getBaseUniversalWithBoolean:withInt:);
  methods[21].selector = @selector(getBaseUniversalWithBoolean:withOrgBouncycastleAsn1ASN1UniversalType:);
  methods[22].selector = @selector(getObjectParserWithInt:withBoolean:);
  methods[23].selector = @selector(parseBaseUniversalWithBoolean:withInt:);
  methods[24].selector = @selector(parseExplicitBaseObject);
  methods[25].selector = @selector(parseExplicitBaseTagged);
  methods[26].selector = @selector(parseImplicitBaseTaggedWithInt:withInt:);
  methods[27].selector = @selector(getLoadedObject);
  methods[28].selector = @selector(getASN1Encoding);
  methods[29].selector = @selector(rebuildConstructedWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[30].selector = @selector(replaceTagWithInt:withInt:);
  methods[31].selector = @selector(toDERObject);
  methods[32].selector = @selector(toDLObject);
  methods[33].selector = @selector(description);
  methods[34].selector = @selector(createConstructedDLWithInt:withInt:withOrgBouncycastleAsn1ASN1EncodableVector:);
  methods[35].selector = @selector(createConstructedILWithInt:withInt:withOrgBouncycastleAsn1ASN1EncodableVector:);
  methods[36].selector = @selector(createPrimitiveWithInt:withInt:withByteArray:);
  methods[37].selector = @selector(checkedCastWithOrgBouncycastleAsn1ASN1Primitive:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DECLARED_EXPLICIT", "I", .constantValue.asInt = OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_EXPLICIT, 0x1a, -1, -1, -1, -1 },
    { "DECLARED_IMPLICIT", "I", .constantValue.asInt = OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_IMPLICIT, 0x1a, -1, -1, -1, -1 },
    { "PARSED_EXPLICIT", "I", .constantValue.asInt = OrgBouncycastleAsn1ASN1TaggedObject_PARSED_EXPLICIT, 0x1a, -1, -1, -1, -1 },
    { "PARSED_IMPLICIT", "I", .constantValue.asInt = OrgBouncycastleAsn1ASN1TaggedObject_PARSED_IMPLICIT, 0x1a, -1, -1, -1, -1 },
    { "explicitness_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "tagClass_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "tagNo_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "obj_", "LOrgBouncycastleAsn1ASN1Encodable;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "ZILOrgBouncycastleAsn1ASN1Encodable;", "ZIILOrgBouncycastleAsn1ASN1Encodable;", "IIILOrgBouncycastleAsn1ASN1Encodable;", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "hashCode", "hasContextTag", "I", "hasTag", "II", (void *)&OrgBouncycastleAsn1ASN1TaggedObject__Annotations$0, "getImplicitBaseTagged", "getBaseUniversal", "ZI", "ZLOrgBouncycastleAsn1ASN1UniversalType;", "getObjectParser", "IZ", "LJavaIoIOException;", (void *)&OrgBouncycastleAsn1ASN1TaggedObject__Annotations$1, "parseBaseUniversal", "parseImplicitBaseTagged", "rebuildConstructed", "replaceTag", "toString", "createConstructedDL", "IILOrgBouncycastleAsn1ASN1EncodableVector;", "createConstructedIL", "createPrimitive", "II[B", "checkedCast" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1TaggedObject = { "ASN1TaggedObject", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x401, 38, 8, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1TaggedObject;
}

@end


#line 23
OrgBouncycastleAsn1ASN1TaggedObject *OrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1TaggedObject_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
    
#line 27
    return (OrgBouncycastleAsn1ASN1TaggedObject *) cast_chk(obj, [OrgBouncycastleAsn1ASN1TaggedObject class]);
  }
  else
#line 30
  if ([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    
#line 32
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
      
#line 35
      return (OrgBouncycastleAsn1ASN1TaggedObject *) primitive;
    }
  }
  else if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 40
    @try {
      
#line 42
      return OrgBouncycastleAsn1ASN1TaggedObject_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) cast_chk(obj, [IOSByteArray class])));
    }
    @catch (JavaIoIOException *e) {
      
#line 46
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"failed to construct tagged object from byte[]: ", [e getMessage]));
    }
  }
  
#line 50
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unknown object in getInstance: ", [[obj java_getClass] getName]));
}


#line 53
OrgBouncycastleAsn1ASN1TaggedObject *OrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean declaredExplicit) {
  OrgBouncycastleAsn1ASN1TaggedObject_initialize();
  if (OrgBouncycastleAsn1BERTags_CONTEXT_SPECIFIC != [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject)) getTagClass]) {
    
#line 57
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"this method only valid for CONTEXT_SPECIFIC tags");
  }
  
#line 60
  if (declaredExplicit) {
    
#line 62
    return [taggedObject getExplicitBaseTagged];
  }
  
#line 65
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"this method not valid for implicitly tagged tagged objects");
}


#line 83
void OrgBouncycastleAsn1ASN1TaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1ASN1TaggedObject *self, jboolean explicit_, jint tagNo, id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  OrgBouncycastleAsn1ASN1TaggedObject_initWithBoolean_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(self,
#line 85
  explicit_, OrgBouncycastleAsn1BERTags_CONTEXT_SPECIFIC, tagNo, obj);
}


#line 88
void OrgBouncycastleAsn1ASN1TaggedObject_initWithBoolean_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1ASN1TaggedObject *self, jboolean explicit_, jint tagClass, jint tagNo, id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  OrgBouncycastleAsn1ASN1TaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(self,
#line 90
  explicit_ ? OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_EXPLICIT : OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_IMPLICIT, tagClass, tagNo, obj);
}


#line 93
void OrgBouncycastleAsn1ASN1TaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1ASN1TaggedObject *self, jint explicitness, jint tagClass, jint tagNo, id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (nil == obj) {
    
#line 97
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'obj' cannot be null");
  }
  if (tagClass == OrgBouncycastleAsn1BERTags_UNIVERSAL || (tagClass & OrgBouncycastleAsn1BERTags_PRIVATE) != tagClass) {
    
#line 101
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"invalid tag class: ", tagClass));
  }
  
#line 104
  self->explicitness_ = [OrgBouncycastleAsn1ASN1Choice_class_() isInstance:obj] ? OrgBouncycastleAsn1ASN1TaggedObject_DECLARED_EXPLICIT : explicitness;
  self->tagClass_ = tagClass;
  self->tagNo_ = tagNo;
  self->obj_ = obj;
}


#line 498
OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1ASN1TaggedObject_createConstructedDLWithInt_withInt_withOrgBouncycastleAsn1ASN1EncodableVector_(jint tagClass, jint tagNo, OrgBouncycastleAsn1ASN1EncodableVector *contentsElements) {
  OrgBouncycastleAsn1ASN1TaggedObject_initialize();
  jboolean maybeExplicit = [((OrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(contentsElements)) size] == 1;
  
#line 502
  OrgBouncycastleAsn1ASN1TaggedObject *taggedObject = maybeExplicit ? new_OrgBouncycastleAsn1DLTaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(
#line 503
  OrgBouncycastleAsn1ASN1TaggedObject_PARSED_EXPLICIT, tagClass, tagNo, [contentsElements getWithInt:0]) : new_OrgBouncycastleAsn1DLTaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(
#line 504
  OrgBouncycastleAsn1ASN1TaggedObject_PARSED_IMPLICIT, tagClass, tagNo, OrgBouncycastleAsn1DLFactory_createSequenceWithOrgBouncycastleAsn1ASN1EncodableVector_(contentsElements));
  
#line 506
  switch (tagClass) {
    
#line 508
    case OrgBouncycastleAsn1BERTags_APPLICATION:
    return new_OrgBouncycastleAsn1DLApplicationSpecific_initWithOrgBouncycastleAsn1ASN1TaggedObject_(taggedObject);
    default:
    return taggedObject;
  }
}


#line 515
OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1ASN1TaggedObject_createConstructedILWithInt_withInt_withOrgBouncycastleAsn1ASN1EncodableVector_(jint tagClass, jint tagNo, OrgBouncycastleAsn1ASN1EncodableVector *contentsElements) {
  OrgBouncycastleAsn1ASN1TaggedObject_initialize();
  jboolean maybeExplicit = [((OrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(contentsElements)) size] == 1;
  
#line 519
  OrgBouncycastleAsn1ASN1TaggedObject *taggedObject = maybeExplicit ? new_OrgBouncycastleAsn1BERTaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(
#line 520
  OrgBouncycastleAsn1ASN1TaggedObject_PARSED_EXPLICIT, tagClass, tagNo, [contentsElements getWithInt:0]) : new_OrgBouncycastleAsn1BERTaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(
#line 521
  OrgBouncycastleAsn1ASN1TaggedObject_PARSED_IMPLICIT, tagClass, tagNo, OrgBouncycastleAsn1BERFactory_createSequenceWithOrgBouncycastleAsn1ASN1EncodableVector_(contentsElements));
  
#line 523
  switch (tagClass) {
    
#line 525
    case OrgBouncycastleAsn1BERTags_APPLICATION:
    return new_OrgBouncycastleAsn1BERApplicationSpecific_initWithOrgBouncycastleAsn1ASN1TaggedObject_(taggedObject);
    default:
    return taggedObject;
  }
}


#line 532
OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1ASN1TaggedObject_createPrimitiveWithInt_withInt_withByteArray_(jint tagClass, jint tagNo, IOSByteArray *contentsOctets) {
  OrgBouncycastleAsn1ASN1TaggedObject_initialize();
  
#line 535
  OrgBouncycastleAsn1ASN1TaggedObject *taggedObject = new_OrgBouncycastleAsn1DLTaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1ASN1TaggedObject_PARSED_IMPLICIT, tagClass, tagNo, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(
#line 536
  contentsOctets));
  
#line 538
  switch (tagClass) {
    
#line 540
    case OrgBouncycastleAsn1BERTags_APPLICATION:
    return new_OrgBouncycastleAsn1DLApplicationSpecific_initWithOrgBouncycastleAsn1ASN1TaggedObject_(taggedObject);
    default:
    return taggedObject;
  }
}


#line 547
OrgBouncycastleAsn1ASN1TaggedObject *OrgBouncycastleAsn1ASN1TaggedObject_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1Primitive *primitive) {
  OrgBouncycastleAsn1ASN1TaggedObject_initialize();
  if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
    
#line 551
    return (OrgBouncycastleAsn1ASN1TaggedObject *) primitive;
  }
  
#line 554
  @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"unexpected object: ", [[((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) java_getClass] getName]));
}

IOSObjectArray *OrgBouncycastleAsn1ASN1TaggedObject__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1ASN1TaggedObject__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1TaggedObject)

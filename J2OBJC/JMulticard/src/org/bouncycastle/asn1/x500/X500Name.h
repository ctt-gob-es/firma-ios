//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x500/X500Name.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500X500Name")
#ifdef RESTRICT_OrgBouncycastleAsn1X500X500Name
#define INCLUDE_ALL_OrgBouncycastleAsn1X500X500Name 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X500X500Name 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X500X500Name

#if !defined (OrgBouncycastleAsn1X500X500Name_) && (INCLUDE_ALL_OrgBouncycastleAsn1X500X500Name || defined(INCLUDE_OrgBouncycastleAsn1X500X500Name))
#define OrgBouncycastleAsn1X500X500Name_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

#define RESTRICT_OrgBouncycastleAsn1ASN1Choice 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Choice 1
#include "org/bouncycastle/asn1/ASN1Choice.h"

@class IOSObjectArray;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@protocol OrgBouncycastleAsn1X500X500NameStyle;

/*!
 @brief The X.500 Name object.
 @code

      Name ::= CHOICE {
                        RDNSequence }
      RDNSequence ::= SEQUENCE OF RelativeDistinguishedName
      RelativeDistinguishedName ::= SET SIZE (1..MAX) OF AttributeTypeAndValue
      AttributeTypeAndValue ::= SEQUENCE {
                                    type  OBJECT IDENTIFIER,
                                    value ANY } 
  
@endcode
 */
@interface OrgBouncycastleAsn1X500X500Name : OrgBouncycastleAsn1ASN1Object < OrgBouncycastleAsn1ASN1Choice >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1X500RDNArray:(IOSObjectArray *)rDNs;

- (instancetype)initWithNSString:(NSString *)dirName;

- (instancetype)initWithOrgBouncycastleAsn1X500X500NameStyle:(id<OrgBouncycastleAsn1X500X500NameStyle>)style
                         withOrgBouncycastleAsn1X500RDNArray:(IOSObjectArray *)rDNs;

- (instancetype)initWithOrgBouncycastleAsn1X500X500NameStyle:(id<OrgBouncycastleAsn1X500X500NameStyle>)style
                                                withNSString:(NSString *)dirName;

/*!
 */
- (instancetype)initWithOrgBouncycastleAsn1X500X500NameStyle:(id<OrgBouncycastleAsn1X500X500NameStyle>)style
                         withOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name;

/*!
 @brief test for equality - note: case is ignored.
 */
- (jboolean)isEqual:(id)obj;

/*!
 @brief return an array of OIDs contained in the attribute type of each RDN in structure order.
 @return an array, possibly zero length, of ASN1ObjectIdentifiers objects.
 */
- (IOSObjectArray *)getAttributeTypes;

/*!
 @brief Return the current default style.
 @return default style for X500Name construction.
 */
+ (id<OrgBouncycastleAsn1X500X500NameStyle>)getDefaultStyle;

/*!
 @brief Return a X500Name based on the passed in tagged object.
 @param obj tag object holding name.
 @param explicit_ true if explicitly tagged false otherwise.
 @return the X500Name
 */
+ (OrgBouncycastleAsn1X500X500Name *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                            withBoolean:(jboolean)explicit_;

+ (OrgBouncycastleAsn1X500X500Name *)getInstanceWithId:(id)obj;

+ (OrgBouncycastleAsn1X500X500Name *)getInstanceWithOrgBouncycastleAsn1X500X500NameStyle:(id<OrgBouncycastleAsn1X500X500NameStyle>)style
                                                                                  withId:(id)obj;

/*!
 @brief return an array of RDNs in structure order.
 @return an array of RDN objects.
 */
- (IOSObjectArray *)getRDNs;

/*!
 @brief return an array of RDNs containing the attribute type given by OID in structure order.
 @param attributeType the type OID we are looking for.
 @return an array, possibly zero length, of RDN objects.
 */
- (IOSObjectArray *)getRDNsWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)attributeType;

- (NSUInteger)hash;

/*!
 @brief Set the default style for X500Name construction.
 @param style an X500NameStyle
 */
+ (void)setDefaultStyleWithOrgBouncycastleAsn1X500X500NameStyle:(id<OrgBouncycastleAsn1X500X500NameStyle>)style;

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleAsn1X500X500Name)

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withOrgBouncycastleAsn1X500X500Name_(OrgBouncycastleAsn1X500X500Name *self, id<OrgBouncycastleAsn1X500X500NameStyle> style, OrgBouncycastleAsn1X500X500Name *name);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *new_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withOrgBouncycastleAsn1X500X500Name_(id<OrgBouncycastleAsn1X500X500NameStyle> style, OrgBouncycastleAsn1X500X500Name *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *create_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withOrgBouncycastleAsn1X500X500Name_(id<OrgBouncycastleAsn1X500X500NameStyle> style, OrgBouncycastleAsn1X500X500Name *name);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *OrgBouncycastleAsn1X500X500Name_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *OrgBouncycastleAsn1X500X500Name_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *OrgBouncycastleAsn1X500X500Name_getInstanceWithOrgBouncycastleAsn1X500X500NameStyle_withId_(id<OrgBouncycastleAsn1X500X500NameStyle> style, id obj);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500RDNArray_(OrgBouncycastleAsn1X500X500Name *self, IOSObjectArray *rDNs);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *new_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500RDNArray_(IOSObjectArray *rDNs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *create_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500RDNArray_(IOSObjectArray *rDNs);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withOrgBouncycastleAsn1X500RDNArray_(OrgBouncycastleAsn1X500X500Name *self, id<OrgBouncycastleAsn1X500X500NameStyle> style, IOSObjectArray *rDNs);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *new_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withOrgBouncycastleAsn1X500RDNArray_(id<OrgBouncycastleAsn1X500X500NameStyle> style, IOSObjectArray *rDNs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *create_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withOrgBouncycastleAsn1X500RDNArray_(id<OrgBouncycastleAsn1X500X500NameStyle> style, IOSObjectArray *rDNs);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500X500Name_initWithNSString_(OrgBouncycastleAsn1X500X500Name *self, NSString *dirName);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *new_OrgBouncycastleAsn1X500X500Name_initWithNSString_(NSString *dirName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *create_OrgBouncycastleAsn1X500X500Name_initWithNSString_(NSString *dirName);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withNSString_(OrgBouncycastleAsn1X500X500Name *self, id<OrgBouncycastleAsn1X500X500NameStyle> style, NSString *dirName);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *new_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withNSString_(id<OrgBouncycastleAsn1X500X500NameStyle> style, NSString *dirName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500X500Name *create_OrgBouncycastleAsn1X500X500Name_initWithOrgBouncycastleAsn1X500X500NameStyle_withNSString_(id<OrgBouncycastleAsn1X500X500NameStyle> style, NSString *dirName);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500X500Name_setDefaultStyleWithOrgBouncycastleAsn1X500X500NameStyle_(id<OrgBouncycastleAsn1X500X500NameStyle> style);

FOUNDATION_EXPORT id<OrgBouncycastleAsn1X500X500NameStyle> OrgBouncycastleAsn1X500X500Name_getDefaultStyle(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X500X500Name)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500X500Name")

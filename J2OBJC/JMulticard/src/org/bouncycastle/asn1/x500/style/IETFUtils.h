//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x500/style/IETFUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500StyleIETFUtils")
#ifdef RESTRICT_OrgBouncycastleAsn1X500StyleIETFUtils
#define INCLUDE_ALL_OrgBouncycastleAsn1X500StyleIETFUtils 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X500StyleIETFUtils 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X500StyleIETFUtils

#if !defined (OrgBouncycastleAsn1X500StyleIETFUtils_) && (INCLUDE_ALL_OrgBouncycastleAsn1X500StyleIETFUtils || defined(INCLUDE_OrgBouncycastleAsn1X500StyleIETFUtils))
#define OrgBouncycastleAsn1X500StyleIETFUtils_

@class IOSObjectArray;
@class JavaLangStringBuffer;
@class JavaUtilHashtable;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1X500AttributeTypeAndValue;
@class OrgBouncycastleAsn1X500RDN;
@protocol OrgBouncycastleAsn1ASN1Encodable;
@protocol OrgBouncycastleAsn1X500X500NameStyle;

@interface OrgBouncycastleAsn1X500StyleIETFUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)appendRDNWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
           withOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn
                    withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols;

+ (void)appendTypeAndValueWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
  withOrgBouncycastleAsn1X500AttributeTypeAndValue:(OrgBouncycastleAsn1X500AttributeTypeAndValue *)typeAndValue
                             withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols;

+ (NSString *)canonicalizeWithNSString:(NSString *)s;

+ (NSString *)canonicalStringWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)value;

+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)decodeAttrNameWithNSString:(NSString *)name
                                                  withJavaUtilHashtable:(JavaUtilHashtable *)lookUp;

+ (IOSObjectArray *)findAttrNamesForOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                             withJavaUtilHashtable:(JavaUtilHashtable *)lookup;

+ (jboolean)rDNAreEqualWithOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn1
                       withOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn2;

+ (IOSObjectArray *)rDNsFromStringWithNSString:(NSString *)name
      withOrgBouncycastleAsn1X500X500NameStyle:(id<OrgBouncycastleAsn1X500X500NameStyle>)x500Style;

+ (NSString *)stripInternalSpacesWithNSString:(NSString *)str;

+ (id<OrgBouncycastleAsn1ASN1Encodable>)valueFromHexStringWithNSString:(NSString *)str
                                                               withInt:(jint)off;

+ (NSString *)valueToStringWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X500StyleIETFUtils)

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500StyleIETFUtils_init(OrgBouncycastleAsn1X500StyleIETFUtils *self);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500StyleIETFUtils *new_OrgBouncycastleAsn1X500StyleIETFUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500StyleIETFUtils *create_OrgBouncycastleAsn1X500StyleIETFUtils_init(void);

FOUNDATION_EXPORT IOSObjectArray *OrgBouncycastleAsn1X500StyleIETFUtils_rDNsFromStringWithNSString_withOrgBouncycastleAsn1X500X500NameStyle_(NSString *name, id<OrgBouncycastleAsn1X500X500NameStyle> x500Style);

FOUNDATION_EXPORT IOSObjectArray *OrgBouncycastleAsn1X500StyleIETFUtils_findAttrNamesForOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withJavaUtilHashtable_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, JavaUtilHashtable *lookup);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X500StyleIETFUtils_decodeAttrNameWithNSString_withJavaUtilHashtable_(NSString *name, JavaUtilHashtable *lookUp);

FOUNDATION_EXPORT id<OrgBouncycastleAsn1ASN1Encodable> OrgBouncycastleAsn1X500StyleIETFUtils_valueFromHexStringWithNSString_withInt_(NSString *str, jint off);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500StyleIETFUtils_appendRDNWithJavaLangStringBuffer_withOrgBouncycastleAsn1X500RDN_withJavaUtilHashtable_(JavaLangStringBuffer *buf, OrgBouncycastleAsn1X500RDN *rdn, JavaUtilHashtable *oidSymbols);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500StyleIETFUtils_appendTypeAndValueWithJavaLangStringBuffer_withOrgBouncycastleAsn1X500AttributeTypeAndValue_withJavaUtilHashtable_(JavaLangStringBuffer *buf, OrgBouncycastleAsn1X500AttributeTypeAndValue *typeAndValue, JavaUtilHashtable *oidSymbols);

FOUNDATION_EXPORT NSString *OrgBouncycastleAsn1X500StyleIETFUtils_valueToStringWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> value);

FOUNDATION_EXPORT NSString *OrgBouncycastleAsn1X500StyleIETFUtils_canonicalizeWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *OrgBouncycastleAsn1X500StyleIETFUtils_canonicalStringWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> value);

FOUNDATION_EXPORT NSString *OrgBouncycastleAsn1X500StyleIETFUtils_stripInternalSpacesWithNSString_(NSString *str);

FOUNDATION_EXPORT jboolean OrgBouncycastleAsn1X500StyleIETFUtils_rDNAreEqualWithOrgBouncycastleAsn1X500RDN_withOrgBouncycastleAsn1X500RDN_(OrgBouncycastleAsn1X500RDN *rdn1, OrgBouncycastleAsn1X500RDN *rdn2);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X500StyleIETFUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500StyleIETFUtils")

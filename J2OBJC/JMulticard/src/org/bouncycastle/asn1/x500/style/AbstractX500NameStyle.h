//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x500/style/AbstractX500NameStyle.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle")
#ifdef RESTRICT_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle
#define INCLUDE_ALL_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle

#if !defined (OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_) && (INCLUDE_ALL_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle || defined(INCLUDE_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle))
#define OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_

#define RESTRICT_OrgBouncycastleAsn1X500X500NameStyle 1
#define INCLUDE_OrgBouncycastleAsn1X500X500NameStyle 1
#include "org/bouncycastle/asn1/x500/X500NameStyle.h"

@class JavaUtilHashtable;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1X500RDN;
@class OrgBouncycastleAsn1X500X500Name;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief This class provides some default behavior and common implementation for a
  X500NameStyle.It should be easily extendable to support implementing the
  desired X500NameStyle.
 */
@interface OrgBouncycastleAsn1X500StyleAbstractX500NameStyle : NSObject < OrgBouncycastleAsn1X500X500NameStyle >

#pragma mark Public

- (instancetype)init;

- (jboolean)areEqualWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name1
                    withOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name2;

- (jint)calculateHashCodeWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name;

/*!
 @brief Tool function to shallow copy a Hashtable.
 @param paramsMap table to copy
 @return the copy of the table
 */
+ (JavaUtilHashtable *)copyHashTableWithJavaUtilHashtable:(JavaUtilHashtable *)paramsMap OBJC_METHOD_FAMILY_NONE;

/*!
 @brief For all string values starting with '#' is assumed, that these are
  already valid ASN.1 objects encoded in hex.
 <p>
  All other string values are send to 
 <code>AbstractX500NameStyle.encodeStringValue(ASN1ObjectIdentifier, String)</code>.
  </p>
  Subclasses should overwrite 
 <code>AbstractX500NameStyle.encodeStringValue(ASN1ObjectIdentifier, String)</code>
  to change the encoding of specific types.
 @param oid the DN name of the value.
 @param value the String representation of the value.
 */
- (id<OrgBouncycastleAsn1ASN1Encodable>)stringToValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                    withNSString:(NSString *)value;

#pragma mark Protected

/*!
 @brief Encoded every value into a UTF8String.
 <p>
  Subclasses should overwrite
  this method to change the encoding of specific types. 
 </p>
 @param oid the DN oid of the value
 @param value the String representation of the value
 @return a the value encoded into a ASN.1 object. Never returns <code>null</code>.
 */
- (id<OrgBouncycastleAsn1ASN1Encodable>)encodeStringValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                        withNSString:(NSString *)value;

- (jboolean)rdnAreEqualWithOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn1
                       withOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle)

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_init(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle *self);

FOUNDATION_EXPORT JavaUtilHashtable *OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_copyHashTableWithJavaUtilHashtable_(JavaUtilHashtable *paramsMap);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x500/style/X500NameTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500StyleX500NameTokenizer")
#ifdef RESTRICT_OrgBouncycastleAsn1X500StyleX500NameTokenizer
#define INCLUDE_ALL_OrgBouncycastleAsn1X500StyleX500NameTokenizer 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X500StyleX500NameTokenizer 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X500StyleX500NameTokenizer

#if !defined (OrgBouncycastleAsn1X500StyleX500NameTokenizer_) && (INCLUDE_ALL_OrgBouncycastleAsn1X500StyleX500NameTokenizer || defined(INCLUDE_OrgBouncycastleAsn1X500StyleX500NameTokenizer))
#define OrgBouncycastleAsn1X500StyleX500NameTokenizer_

/*!
 @brief class for breaking up an X500 Name into it's component tokens, ala
  java.util.StringTokenizer.We need this class as some of the
  lightweight Java environment don't support classes like
  StringTokenizer.
 */
@interface OrgBouncycastleAsn1X500StyleX500NameTokenizer : NSObject

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)oid;

- (instancetype)initWithNSString:(NSString *)oid
                        withChar:(jchar)separator;

- (jboolean)hasMoreTokens;

- (NSString *)nextToken;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X500StyleX500NameTokenizer)

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500StyleX500NameTokenizer_initWithNSString_(OrgBouncycastleAsn1X500StyleX500NameTokenizer *self, NSString *oid);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500StyleX500NameTokenizer *new_OrgBouncycastleAsn1X500StyleX500NameTokenizer_initWithNSString_(NSString *oid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500StyleX500NameTokenizer *create_OrgBouncycastleAsn1X500StyleX500NameTokenizer_initWithNSString_(NSString *oid);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X500StyleX500NameTokenizer_initWithNSString_withChar_(OrgBouncycastleAsn1X500StyleX500NameTokenizer *self, NSString *oid, jchar separator);

FOUNDATION_EXPORT OrgBouncycastleAsn1X500StyleX500NameTokenizer *new_OrgBouncycastleAsn1X500StyleX500NameTokenizer_initWithNSString_withChar_(NSString *oid, jchar separator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X500StyleX500NameTokenizer *create_OrgBouncycastleAsn1X500StyleX500NameTokenizer_initWithNSString_withChar_(NSString *oid, jchar separator);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X500StyleX500NameTokenizer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500StyleX500NameTokenizer")

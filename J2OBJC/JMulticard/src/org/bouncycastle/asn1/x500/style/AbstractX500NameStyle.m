//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x500/style/AbstractX500NameStyle.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1ParsingException.h"
#include "org/bouncycastle/asn1/DERUTF8String.h"
#include "org/bouncycastle/asn1/x500/AttributeTypeAndValue.h"
#include "org/bouncycastle/asn1/x500/RDN.h"
#include "org/bouncycastle/asn1/x500/X500Name.h"
#include "org/bouncycastle/asn1/x500/style/AbstractX500NameStyle.h"
#include "org/bouncycastle/asn1/x500/style/IETFUtils.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x500/style/AbstractX500NameStyle must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgBouncycastleAsn1X500StyleAbstractX500NameStyle ()

- (jint)calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)enc;

- (jboolean)foundMatchWithBoolean:(jboolean)reverse
   withOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn
withOrgBouncycastleAsn1X500RDNArray:(IOSObjectArray *)possRDNs;

@end

__attribute__((unused)) static jint OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle *self, id<OrgBouncycastleAsn1ASN1Encodable> enc);

__attribute__((unused)) static jboolean OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_foundMatchWithBoolean_withOrgBouncycastleAsn1X500RDN_withOrgBouncycastleAsn1X500RDNArray_(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle *self, jboolean reverse, OrgBouncycastleAsn1X500RDN *rdn, IOSObjectArray *possRDNs);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x500/style/AbstractX500NameStyle.java"


#line 21
@implementation OrgBouncycastleAsn1X500StyleAbstractX500NameStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 21
- (instancetype)init {
  OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 31
+ (JavaUtilHashtable *)copyHashTableWithJavaUtilHashtable:(JavaUtilHashtable *)paramsMap {
  return OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_copyHashTableWithJavaUtilHashtable_(paramsMap);
}


#line 45
- (jint)calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)enc {
  return OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable_(self, enc);
}


#line 51
- (jint)calculateHashCodeWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name {
  
#line 54
  jint hashCodeValue = 0;
  IOSObjectArray *rdns = [((OrgBouncycastleAsn1X500X500Name *) nil_chk(name)) getRDNs];
  
#line 58
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(rdns))->size_; i++) {
    
#line 60
    if ([((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns, i))) isMultiValued]) {
      
#line 62
      IOSObjectArray *atv = [((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns, i))) getTypesAndValues];
      
#line 64
      for (jint j = 0; j != ((IOSObjectArray *) nil_chk(atv))->size_; j++) {
        
#line 66
        hashCodeValue ^= ((jint) [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X500AttributeTypeAndValue *) nil_chk(IOSObjectArray_Get(atv, j))) getType])) hash]);
        hashCodeValue ^= OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable_(self, [((OrgBouncycastleAsn1X500AttributeTypeAndValue *) nil_chk(IOSObjectArray_Get(atv, j))) getValue]);
      }
    }
    else {
      
#line 72
      hashCodeValue ^= ((jint) [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X500AttributeTypeAndValue *) nil_chk([((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns, i))) getFirst])) getType])) hash]);
      hashCodeValue ^= OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable_(self, [((OrgBouncycastleAsn1X500AttributeTypeAndValue *) nil_chk([((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns, i))) getFirst])) getValue]);
    }
  }
  
#line 77
  return hashCodeValue;
}


#line 95
- (id<OrgBouncycastleAsn1ASN1Encodable>)stringToValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                    withNSString:(NSString *)value {
  
#line 98
  if ([((NSString *) nil_chk(value)) java_length] != 0 && [value charAtWithInt:0] == '#') {
    
#line 100
    @try {
      
#line 102
      return OrgBouncycastleAsn1X500StyleIETFUtils_valueFromHexStringWithNSString_withInt_(value, 1);
    }
    @catch (JavaIoIOException *e) {
      
#line 106
      @throw new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_(JreStrcat("$$", @"can't recode value for oid ", [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]));
    }
  }
  
#line 110
  if ([value java_length] != 0 && [value charAtWithInt:0] == '\\') {
    
#line 112
    value = [value java_substring:1];
  }
  
#line 115
  return [self encodeStringValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withNSString:value];
}


#line 129
- (id<OrgBouncycastleAsn1ASN1Encodable>)encodeStringValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                        withNSString:(NSString *)value {
  return new_OrgBouncycastleAsn1DERUTF8String_initWithNSString_(value);
}

- (jboolean)areEqualWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name1
                    withOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name2 {
  
#line 137
  IOSObjectArray *rdns1 = [((OrgBouncycastleAsn1X500X500Name *) nil_chk(name1)) getRDNs];
  IOSObjectArray *rdns2 = [((OrgBouncycastleAsn1X500X500Name *) nil_chk(name2)) getRDNs];
  
#line 140
  if (((IOSObjectArray *) nil_chk(rdns1))->size_ != ((IOSObjectArray *) nil_chk(rdns2))->size_) {
    
#line 142
    return false;
  }
  
#line 145
  jboolean reverse = false;
  
#line 147
  if ([((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns1, 0))) getFirst] != nil && [((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns2, 0))) getFirst] != nil) {
    
#line 149
    reverse = ![((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk([((OrgBouncycastleAsn1X500AttributeTypeAndValue *) nil_chk([((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns1, 0))) getFirst])) getType])) equalsWithOrgBouncycastleAsn1ASN1Primitive:[((OrgBouncycastleAsn1X500AttributeTypeAndValue *) nil_chk([((OrgBouncycastleAsn1X500RDN *) nil_chk(IOSObjectArray_Get(rdns2, 0))) getFirst])) getType]];
  }
  
#line 152
  for (jint i = 0; i != rdns1->size_; i++) {
    
#line 154
    if (!OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_foundMatchWithBoolean_withOrgBouncycastleAsn1X500RDN_withOrgBouncycastleAsn1X500RDNArray_(self, reverse, IOSObjectArray_Get(rdns1, i), rdns2)) {
      
#line 156
      return false;
    }
  }
  
#line 160
  return true;
}


#line 163
- (jboolean)foundMatchWithBoolean:(jboolean)reverse
   withOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn
withOrgBouncycastleAsn1X500RDNArray:(IOSObjectArray *)possRDNs {
  return OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_foundMatchWithBoolean_withOrgBouncycastleAsn1X500RDN_withOrgBouncycastleAsn1X500RDNArray_(self, reverse, rdn, possRDNs);
}


#line 191
- (jboolean)rdnAreEqualWithOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn1
                       withOrgBouncycastleAsn1X500RDN:(OrgBouncycastleAsn1X500RDN *)rdn2 {
  return OrgBouncycastleAsn1X500StyleIETFUtils_rDNAreEqualWithOrgBouncycastleAsn1X500RDN_withOrgBouncycastleAsn1X500RDN_(rdn1, rdn2);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilHashtable;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x4, 8, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(copyHashTableWithJavaUtilHashtable:);
  methods[2].selector = @selector(calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable:);
  methods[3].selector = @selector(calculateHashCodeWithOrgBouncycastleAsn1X500X500Name:);
  methods[4].selector = @selector(stringToValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[5].selector = @selector(encodeStringValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[6].selector = @selector(areEqualWithOrgBouncycastleAsn1X500X500Name:withOrgBouncycastleAsn1X500X500Name:);
  methods[7].selector = @selector(foundMatchWithBoolean:withOrgBouncycastleAsn1X500RDN:withOrgBouncycastleAsn1X500RDNArray:);
  methods[8].selector = @selector(rdnAreEqualWithOrgBouncycastleAsn1X500RDN:withOrgBouncycastleAsn1X500RDN:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "copyHashTable", "LJavaUtilHashtable;", "calcHashCode", "LOrgBouncycastleAsn1ASN1Encodable;", "calculateHashCode", "LOrgBouncycastleAsn1X500X500Name;", "stringToValue", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LNSString;", "encodeStringValue", "areEqual", "LOrgBouncycastleAsn1X500X500Name;LOrgBouncycastleAsn1X500X500Name;", "foundMatch", "ZLOrgBouncycastleAsn1X500RDN;[LOrgBouncycastleAsn1X500RDN;", "rdnAreEqual", "LOrgBouncycastleAsn1X500RDN;LOrgBouncycastleAsn1X500RDN;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X500StyleAbstractX500NameStyle = { "AbstractX500NameStyle", "org.bouncycastle.asn1.x500.style", ptrTable, methods, NULL, 7, 0x401, 9, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X500StyleAbstractX500NameStyle;
}

@end


#line 21
void OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_init(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle *self) {
  NSObject_init(self);
}


#line 31
JavaUtilHashtable *OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_copyHashTableWithJavaUtilHashtable_(JavaUtilHashtable *paramsMap) {
  OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_initialize();
  JavaUtilHashtable *newTable = new_JavaUtilHashtable_init();
  
#line 35
  id<JavaUtilEnumeration> keys = [((JavaUtilHashtable *) nil_chk(paramsMap)) keys];
  while ([((id<JavaUtilEnumeration>) nil_chk(keys)) hasMoreElements]) {
    
#line 38
    id key = [keys nextElement];
    (void) [newTable putWithId:key withId:[paramsMap getWithId:key]];
  }
  
#line 42
  return newTable;
}


#line 45
jint OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_calcHashCodeWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle *self, id<OrgBouncycastleAsn1ASN1Encodable> enc) {
  
#line 47
  NSString *value = OrgBouncycastleAsn1X500StyleIETFUtils_canonicalStringWithOrgBouncycastleAsn1ASN1Encodable_(enc);
  return ((jint) [((NSString *) nil_chk(value)) hash]);
}


#line 163
jboolean OrgBouncycastleAsn1X500StyleAbstractX500NameStyle_foundMatchWithBoolean_withOrgBouncycastleAsn1X500RDN_withOrgBouncycastleAsn1X500RDNArray_(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle *self, jboolean reverse, OrgBouncycastleAsn1X500RDN *rdn, IOSObjectArray *possRDNs) {
  
#line 165
  if (reverse) {
    
#line 167
    for (jint i = ((IOSObjectArray *) nil_chk(possRDNs))->size_ - 1; i >= 0; i--) {
      
#line 169
      if (IOSObjectArray_Get(possRDNs, i) != nil && [self rdnAreEqualWithOrgBouncycastleAsn1X500RDN:rdn withOrgBouncycastleAsn1X500RDN:IOSObjectArray_Get(possRDNs, i)]) {
        
#line 171
        (void) IOSObjectArray_Set(possRDNs, i, nil);
        return true;
      }
    }
  }
  else {
    
#line 178
    for (jint i = 0; i != ((IOSObjectArray *) nil_chk(possRDNs))->size_; i++) {
      
#line 180
      if (IOSObjectArray_Get(possRDNs, i) != nil && [self rdnAreEqualWithOrgBouncycastleAsn1X500RDN:rdn withOrgBouncycastleAsn1X500RDN:IOSObjectArray_Get(possRDNs, i)]) {
        
#line 182
        (void) IOSObjectArray_Set(possRDNs, i, nil);
        return true;
      }
    }
  }
  
#line 188
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X500StyleAbstractX500NameStyle)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x500/X500NameStyle.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500X500NameStyle")
#ifdef RESTRICT_OrgBouncycastleAsn1X500X500NameStyle
#define INCLUDE_ALL_OrgBouncycastleAsn1X500X500NameStyle 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X500X500NameStyle 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X500X500NameStyle

#if !defined (OrgBouncycastleAsn1X500X500NameStyle_) && (INCLUDE_ALL_OrgBouncycastleAsn1X500X500NameStyle || defined(INCLUDE_OrgBouncycastleAsn1X500X500NameStyle))
#define OrgBouncycastleAsn1X500X500NameStyle_

@class IOSObjectArray;
@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1X500X500Name;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief This interface provides a profile to conform to when
  DNs are being converted into strings and back.The idea being that we'll be able to deal with
  the number of standard ways the fields in a DN should be
  encoded into their ASN.1 counterparts - a number that is rapidly approaching the
  number of machines on the internet.
 */
@protocol OrgBouncycastleAsn1X500X500NameStyle < JavaObject >

/*!
 @brief Convert the passed in String value into the appropriate ASN.1
  encoded object.
 @param oid the OID associated with the value in the DN.
 @param value the value of the particular DN component.
 @return the ASN.1 equivalent for the value.
 */
- (id<OrgBouncycastleAsn1ASN1Encodable>)stringToValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                                                    withNSString:(NSString *)value;

/*!
 @brief Return the OID associated with the passed in name.
 @param attrName the string to match.
 @return an OID
 */
- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)attrNameToOIDWithNSString:(NSString *)attrName;

/*!
 @brief Return an array of RDN generated from the passed in String.
 @param dirName the String representation.
 @return an array of corresponding RDNs.
 */
- (IOSObjectArray *)fromStringWithNSString:(NSString *)dirName;

/*!
 @brief Return true if the two names are equal.
 @param name1 first name for comparison.
 @param name2 second name for comparison.
 @return true if name1 = name 2, false otherwise.
 */
- (jboolean)areEqualWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name1
                    withOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name2;

/*!
 @brief Calculate a hashCode for the passed in name.
 @param name the name the hashCode is required for.
 @return the calculated hashCode.
 */
- (jint)calculateHashCodeWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name;

/*!
 @brief Convert the passed in X500Name to a String.
 @param name the name to convert.
 @return a String representation.
 */
- (NSString *)toStringWithOrgBouncycastleAsn1X500X500Name:(OrgBouncycastleAsn1X500X500Name *)name;

/*!
 @brief Return the display name for toString() associated with the OID.
 @param oid the OID of interest.
 @return the name displayed in toString(), null if no mapping provided.
 */
- (NSString *)oidToDisplayNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

/*!
 @brief Return the acceptable names in a String DN that map to OID.
 @param oid the OID of interest.
 @return an array of String aliases for the OID, zero length if there are none.
 */
- (IOSObjectArray *)oidToAttrNamesWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X500X500NameStyle)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X500X500NameStyle)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X500X500NameStyle")

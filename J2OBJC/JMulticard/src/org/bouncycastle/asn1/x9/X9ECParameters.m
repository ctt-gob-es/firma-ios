//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/X9ECParameters.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x9/X9Curve.h"
#include "org/bouncycastle/asn1/x9/X9ECParameters.h"
#include "org/bouncycastle/asn1/x9/X9ECPoint.h"
#include "org/bouncycastle/asn1/x9/X9FieldID.h"
#include "org/bouncycastle/math/ec/ECAlgorithms.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/field/FiniteField.h"
#include "org/bouncycastle/math/field/Polynomial.h"
#include "org/bouncycastle/math/field/PolynomialExtensionField.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x9/X9ECParameters must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X9X9ECParameters () {
 @public
  OrgBouncycastleAsn1X9X9FieldID *fieldID_;
  OrgBouncycastleMathEcECCurve *curve_;
  OrgBouncycastleAsn1X9X9ECPoint *g_;
  JavaMathBigInteger *n_;
  JavaMathBigInteger *h_;
  IOSByteArray *seed_;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECParameters, fieldID_, OrgBouncycastleAsn1X9X9FieldID *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECParameters, curve_, OrgBouncycastleMathEcECCurve *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECParameters, g_, OrgBouncycastleAsn1X9X9ECPoint *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECParameters, n_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECParameters, h_, JavaMathBigInteger *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECParameters, seed_, IOSByteArray *)

inline JavaMathBigInteger *OrgBouncycastleAsn1X9X9ECParameters_get_ONE(void);
static JavaMathBigInteger *OrgBouncycastleAsn1X9X9ECParameters_ONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1X9X9ECParameters, ONE, JavaMathBigInteger *)

__attribute__((unused)) static void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/X9ECParameters.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1X9X9ECParameters)


#line 22
@implementation OrgBouncycastleAsn1X9X9ECParameters


#line 35
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 70
+ (OrgBouncycastleAsn1X9X9ECParameters *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(obj);
}


#line 85
- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                  withOrgBouncycastleAsn1X9X9ECPoint:(OrgBouncycastleAsn1X9X9ECPoint *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)n {
  OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_(self, curve, g, n);
  return self;
}


#line 93
- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                  withOrgBouncycastleAsn1X9X9ECPoint:(OrgBouncycastleAsn1X9X9ECPoint *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h {
  OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(self, curve, g, n, h);
  return self;
}


#line 102
- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                  withOrgBouncycastleAsn1X9X9ECPoint:(OrgBouncycastleAsn1X9X9ECPoint *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h
                                       withByteArray:(IOSByteArray *)seed {
  OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self, curve, g, n, h, seed);
  return self;
}


#line 142
- (OrgBouncycastleMathEcECCurve *)getCurve {
  
#line 144
  return curve_;
}


#line 147
- (OrgBouncycastleMathEcECPoint *)getG {
  
#line 149
  return [((OrgBouncycastleAsn1X9X9ECPoint *) nil_chk(g_)) getPoint];
}


#line 152
- (JavaMathBigInteger *)getN {
  
#line 154
  return n_;
}


#line 157
- (JavaMathBigInteger *)getH {
  
#line 159
  return h_;
}


#line 162
- (IOSByteArray *)getSeed {
  
#line 164
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(seed_);
}


#line 167
- (jboolean)hasSeed {
  
#line 169
  return nil != seed_;
}


#line 177
- (OrgBouncycastleAsn1X9X9Curve *)getCurveEntry {
  
#line 179
  return new_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_withByteArray_(curve_, seed_);
}


#line 187
- (OrgBouncycastleAsn1X9X9FieldID *)getFieldIDEntry {
  
#line 189
  return fieldID_;
}


#line 197
- (OrgBouncycastleAsn1X9X9ECPoint *)getBaseEntry {
  
#line 199
  return g_;
}


#line 215
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 218
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_(6);
  
#line 220
  [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(OrgBouncycastleAsn1X9X9ECParameters_ONE)];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:fieldID_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_withByteArray_(curve_, seed_)];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:g_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(n_)];
  
#line 226
  if (h_ != nil) {
    
#line 228
    [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1ASN1Integer_initWithJavaMathBigInteger_(h_)];
  }
  
#line 231
  return new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECCurve;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9Curve;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9FieldID;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECPoint;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgBouncycastleMathEcECCurve:withOrgBouncycastleAsn1X9X9ECPoint:withJavaMathBigInteger:);
  methods[3].selector = @selector(initWithOrgBouncycastleMathEcECCurve:withOrgBouncycastleAsn1X9X9ECPoint:withJavaMathBigInteger:withJavaMathBigInteger:);
  methods[4].selector = @selector(initWithOrgBouncycastleMathEcECCurve:withOrgBouncycastleAsn1X9X9ECPoint:withJavaMathBigInteger:withJavaMathBigInteger:withByteArray:);
  methods[5].selector = @selector(getCurve);
  methods[6].selector = @selector(getG);
  methods[7].selector = @selector(getN);
  methods[8].selector = @selector(getH);
  methods[9].selector = @selector(getSeed);
  methods[10].selector = @selector(hasSeed);
  methods[11].selector = @selector(getCurveEntry);
  methods[12].selector = @selector(getFieldIDEntry);
  methods[13].selector = @selector(getBaseEntry);
  methods[14].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ONE", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "fieldID_", "LOrgBouncycastleAsn1X9X9FieldID;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "curve_", "LOrgBouncycastleMathEcECCurve;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "g_", "LOrgBouncycastleAsn1X9X9ECPoint;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "n_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "h_", "LJavaMathBigInteger;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "seed_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1ASN1Sequence;", "getInstance", "LNSObject;", "LOrgBouncycastleMathEcECCurve;LOrgBouncycastleAsn1X9X9ECPoint;LJavaMathBigInteger;", "LOrgBouncycastleMathEcECCurve;LOrgBouncycastleAsn1X9X9ECPoint;LJavaMathBigInteger;LJavaMathBigInteger;", "LOrgBouncycastleMathEcECCurve;LOrgBouncycastleAsn1X9X9ECPoint;LJavaMathBigInteger;LJavaMathBigInteger;[B", &OrgBouncycastleAsn1X9X9ECParameters_ONE };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X9X9ECParameters = { "X9ECParameters", "org.bouncycastle.asn1.x9", ptrTable, methods, fields, 7, 0x1, 15, 7, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X9X9ECParameters;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1X9X9ECParameters class]) {
    OrgBouncycastleAsn1X9X9ECParameters_ONE = JavaMathBigInteger_valueOfWithLong_(
#line 26
    1);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1X9X9ECParameters)
  }
}

@end


#line 35
void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 38
  if (!([[((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjectAtWithInt:0] isKindOfClass:[OrgBouncycastleAsn1ASN1Integer class]]) ||
#line 39
  ![((OrgBouncycastleAsn1ASN1Integer *) nil_chk(((OrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:0], [OrgBouncycastleAsn1ASN1Integer class])))) hasValueWithInt:1]) {
    
#line 41
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"bad version in X9ECParameters");
  }
  
#line 44
  self->n_ = [((OrgBouncycastleAsn1ASN1Integer *) nil_chk(((OrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:4], [OrgBouncycastleAsn1ASN1Integer class])))) getValue];
  
#line 46
  if ([seq size] == 6) {
    
#line 48
    self->h_ = [((OrgBouncycastleAsn1ASN1Integer *) nil_chk(((OrgBouncycastleAsn1ASN1Integer *) cast_chk([seq getObjectAtWithInt:5], [OrgBouncycastleAsn1ASN1Integer class])))) getValue];
  }
  
#line 51
  OrgBouncycastleAsn1X9X9Curve *x9c = new_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleAsn1X9X9FieldID_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X9X9FieldID_getInstanceWithId_(
#line 52
  [seq getObjectAtWithInt:1]), self->n_, self->h_, OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(
#line 53
  [seq getObjectAtWithInt:2]));
  
#line 55
  self->curve_ = [x9c getCurve];
  id p = [seq getObjectAtWithInt:3];
  
#line 58
  if ([p isKindOfClass:[OrgBouncycastleAsn1X9X9ECPoint class]]) {
    
#line 60
    self->g_ = (OrgBouncycastleAsn1X9X9ECPoint *) p;
  }
  else {
    
#line 64
    self->g_ = new_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1ASN1OctetString_(self->curve_, (OrgBouncycastleAsn1ASN1OctetString *) cast_chk(p, [OrgBouncycastleAsn1ASN1OctetString class]));
  }
  
#line 67
  self->seed_ = [x9c getSeed];
}


#line 35
OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 35
OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 70
OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X9X9ECParameters_initialize();
  if ([obj isKindOfClass:[OrgBouncycastleAsn1X9X9ECParameters class]]) {
    
#line 74
    return (OrgBouncycastleAsn1X9X9ECParameters *) obj;
  }
  
#line 77
  if (obj != nil) {
    
#line 79
    return new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 82
  return nil;
}


#line 85
void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n) {
  OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self,
#line 90
  curve, g, n, nil, nil);
}


#line 85
OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_, curve, g, n)
}


#line 85
OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_, curve, g, n)
}


#line 93
void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(self,
#line 99
  curve, g, n, h, nil);
}


#line 93
OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, g, n, h)
}


#line 93
OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_, curve, g, n, h)
}


#line 102
void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 109
  self->curve_ = curve;
  self->g_ = g;
  self->n_ = n;
  self->h_ = h;
  self->seed_ = OrgBouncycastleUtilArrays_cloneWithByteArray_(seed);
  
#line 115
  if (OrgBouncycastleMathEcECAlgorithms_isFpCurveWithOrgBouncycastleMathEcECCurve_(curve)) {
    
#line 117
    self->fieldID_ = new_OrgBouncycastleAsn1X9X9FieldID_initWithJavaMathBigInteger_([((id<OrgBouncycastleMathFieldFiniteField>) nil_chk([((OrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField])) getCharacteristic]);
  }
  else if (OrgBouncycastleMathEcECAlgorithms_isF2mCurveWithOrgBouncycastleMathEcECCurve_(curve)) {
    
#line 121
    id<OrgBouncycastleMathFieldPolynomialExtensionField> field = (id<OrgBouncycastleMathFieldPolynomialExtensionField>) cast_check([((OrgBouncycastleMathEcECCurve *) nil_chk(curve)) getField], OrgBouncycastleMathFieldPolynomialExtensionField_class_());
    IOSIntArray *exponents = [((id<OrgBouncycastleMathFieldPolynomial>) nil_chk([((id<OrgBouncycastleMathFieldPolynomialExtensionField>) nil_chk(field)) getMinimalPolynomial])) getExponentsPresent];
    if (((IOSIntArray *) nil_chk(exponents))->size_ == 3) {
      
#line 125
      self->fieldID_ = new_OrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_(IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 1));
    }
    else if (exponents->size_ == 5) {
      
#line 129
      self->fieldID_ = new_OrgBouncycastleAsn1X9X9FieldID_initWithInt_withInt_withInt_withInt_(IOSIntArray_Get(exponents, 4), IOSIntArray_Get(exponents, 1), IOSIntArray_Get(exponents, 2), IOSIntArray_Get(exponents, 3));
    }
    else {
      
#line 133
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Only trinomial and pentomial curves are supported");
    }
  }
  else {
    
#line 138
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"'curve' is of an unsupported type");
  }
}


#line 102
OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, g, n, h, seed)
}


#line 102
OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9X9ECParameters, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_, curve, g, n, h, seed)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X9X9ECParameters)

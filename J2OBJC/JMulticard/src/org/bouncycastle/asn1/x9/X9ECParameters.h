//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/X9ECParameters.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X9X9ECParameters")
#ifdef RESTRICT_OrgBouncycastleAsn1X9X9ECParameters
#define INCLUDE_ALL_OrgBouncycastleAsn1X9X9ECParameters 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X9X9ECParameters 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X9X9ECParameters

#if !defined (OrgBouncycastleAsn1X9X9ECParameters_) && (INCLUDE_ALL_OrgBouncycastleAsn1X9X9ECParameters || defined(INCLUDE_OrgBouncycastleAsn1X9X9ECParameters))
#define OrgBouncycastleAsn1X9X9ECParameters_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

#define RESTRICT_OrgBouncycastleAsn1X9X9ObjectIdentifiers 1
#define INCLUDE_OrgBouncycastleAsn1X9X9ObjectIdentifiers 1
#include "org/bouncycastle/asn1/x9/X9ObjectIdentifiers.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1X9X9Curve;
@class OrgBouncycastleAsn1X9X9ECPoint;
@class OrgBouncycastleAsn1X9X9FieldID;
@class OrgBouncycastleMathEcECCurve;
@class OrgBouncycastleMathEcECPoint;

/*!
 @brief ASN.1 def for Elliptic-Curve ECParameters structure.See
  X9.62, for further details.
 */
@interface OrgBouncycastleAsn1X9X9ECParameters : OrgBouncycastleAsn1ASN1Object < OrgBouncycastleAsn1X9X9ObjectIdentifiers >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                  withOrgBouncycastleAsn1X9X9ECPoint:(OrgBouncycastleAsn1X9X9ECPoint *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)n;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                  withOrgBouncycastleAsn1X9X9ECPoint:(OrgBouncycastleAsn1X9X9ECPoint *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                  withOrgBouncycastleAsn1X9X9ECPoint:(OrgBouncycastleAsn1X9X9ECPoint *)g
                              withJavaMathBigInteger:(JavaMathBigInteger *)n
                              withJavaMathBigInteger:(JavaMathBigInteger *)h
                                       withByteArray:(IOSByteArray *)seed;

/*!
 @brief Return the ASN.1 entry representing the base point G.
 @return the X9ECPoint for the base point in these parameters.
 */
- (OrgBouncycastleAsn1X9X9ECPoint *)getBaseEntry;

- (OrgBouncycastleMathEcECCurve *)getCurve;

/*!
 @brief Return the ASN.1 entry representing the Curve.
 @return the X9Curve for the curve in these parameters.
 */
- (OrgBouncycastleAsn1X9X9Curve *)getCurveEntry;

/*!
 @brief Return the ASN.1 entry representing the FieldID.
 @return the X9FieldID for the FieldID in these parameters.
 */
- (OrgBouncycastleAsn1X9X9FieldID *)getFieldIDEntry;

- (OrgBouncycastleMathEcECPoint *)getG;

- (JavaMathBigInteger *)getH;

+ (OrgBouncycastleAsn1X9X9ECParameters *)getInstanceWithId:(id)obj;

- (JavaMathBigInteger *)getN;

- (IOSByteArray *)getSeed;

- (jboolean)hasSeed;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

   ECParameters ::= SEQUENCE {
       version         INTEGER { ecpVer1(1) } (ecpVer1),
       fieldID         FieldID {{FieldTypes}},
       curve           X9Curve,
       base            X9ECPoint,
       order           INTEGER,
       cofactor        INTEGER OPTIONAL
   } 
  
@endcode
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleAsn1X9X9ECParameters)

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1X9X9ECParameters_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleAsn1X9X9ECParameters *self, OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *create_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(OrgBouncycastleMathEcECCurve *curve, OrgBouncycastleAsn1X9X9ECPoint *g, JavaMathBigInteger *n, JavaMathBigInteger *h, IOSByteArray *seed);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X9X9ECParameters)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X9X9ECParameters")

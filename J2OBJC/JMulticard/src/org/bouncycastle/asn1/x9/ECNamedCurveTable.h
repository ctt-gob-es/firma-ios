//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/ECNamedCurveTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X9ECNamedCurveTable")
#ifdef RESTRICT_OrgBouncycastleAsn1X9ECNamedCurveTable
#define INCLUDE_ALL_OrgBouncycastleAsn1X9ECNamedCurveTable 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X9ECNamedCurveTable 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X9ECNamedCurveTable

#if !defined (OrgBouncycastleAsn1X9ECNamedCurveTable_) && (INCLUDE_ALL_OrgBouncycastleAsn1X9ECNamedCurveTable || defined(INCLUDE_OrgBouncycastleAsn1X9ECNamedCurveTable))
#define OrgBouncycastleAsn1X9ECNamedCurveTable_

@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1X9X9ECParameters;
@class OrgBouncycastleAsn1X9X9ECParametersHolder;
@protocol JavaUtilEnumeration;

/*!
 @brief A general class that reads all X9.62 style EC curve tables.
 */
@interface OrgBouncycastleAsn1X9ECNamedCurveTable : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief return a X9ECParameters object representing the passed in named
  curve.The routine returns null if the curve is not present.
 @param name the name of the curve requested
 @return an X9ECParameters object or null if the curve is not available.
 */
+ (OrgBouncycastleAsn1X9X9ECParameters *)getByNameWithNSString:(NSString *)name;

+ (OrgBouncycastleAsn1X9X9ECParametersHolder *)getByNameLazyWithNSString:(NSString *)name;

/*!
 @brief return a X9ECParameters object representing the passed in named
  curve.
 @param oid the object id of the curve requested
 @return an X9ECParameters object or null if the curve is not available.
 */
+ (OrgBouncycastleAsn1X9X9ECParameters *)getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

+ (OrgBouncycastleAsn1X9X9ECParametersHolder *)getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

/*!
 @brief return a X9ECParameters object representing the passed in named
  curve.
 @param oid the object id of the curve requested
 @return a standard name for the curve.
 */
+ (NSString *)getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid;

/*!
 @brief return an enumeration of the names of the available curves.
 @return an enumeration of the names of the available curves.
 */
+ (id<JavaUtilEnumeration>)getNames;

/*!
 @brief return the object identifier signified by the passed in name.Null
  if there is no object identifier associated with name.
 @return the object identifier associated with name, if present.
 */
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X9ECNamedCurveTable)

FOUNDATION_EXPORT void OrgBouncycastleAsn1X9ECNamedCurveTable_init(OrgBouncycastleAsn1X9ECNamedCurveTable *self);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9ECNamedCurveTable *new_OrgBouncycastleAsn1X9ECNamedCurveTable_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X9ECNamedCurveTable *create_OrgBouncycastleAsn1X9ECNamedCurveTable_init(void);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParametersHolder *OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameLazyWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X9ECNamedCurveTable_getOIDWithNSString_(NSString *name);

FOUNDATION_EXPORT NSString *OrgBouncycastleAsn1X9ECNamedCurveTable_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9ECParametersHolder *OrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid);

FOUNDATION_EXPORT id<JavaUtilEnumeration> OrgBouncycastleAsn1X9ECNamedCurveTable_getNames(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X9ECNamedCurveTable)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X9ECNamedCurveTable")

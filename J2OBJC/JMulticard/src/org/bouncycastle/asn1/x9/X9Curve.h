//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/X9Curve.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X9X9Curve")
#ifdef RESTRICT_OrgBouncycastleAsn1X9X9Curve
#define INCLUDE_ALL_OrgBouncycastleAsn1X9X9Curve 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X9X9Curve 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X9X9Curve

#if !defined (OrgBouncycastleAsn1X9X9Curve_) && (INCLUDE_ALL_OrgBouncycastleAsn1X9X9Curve || defined(INCLUDE_OrgBouncycastleAsn1X9X9Curve))
#define OrgBouncycastleAsn1X9X9Curve_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

#define RESTRICT_OrgBouncycastleAsn1X9X9ObjectIdentifiers 1
#define INCLUDE_OrgBouncycastleAsn1X9X9ObjectIdentifiers 1
#include "org/bouncycastle/asn1/x9/X9ObjectIdentifiers.h"

@class IOSByteArray;
@class JavaMathBigInteger;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1Sequence;
@class OrgBouncycastleAsn1X9X9FieldID;
@class OrgBouncycastleMathEcECCurve;

/*!
 @brief ASN.1 def for Elliptic-Curve Curve structure.See
  X9.62, for further details.
 */
@interface OrgBouncycastleAsn1X9X9Curve : OrgBouncycastleAsn1ASN1Object < OrgBouncycastleAsn1X9X9ObjectIdentifiers >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve;

- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                       withByteArray:(IOSByteArray *)seed;

- (instancetype)initWithOrgBouncycastleAsn1X9X9FieldID:(OrgBouncycastleAsn1X9X9FieldID *)fieldID
                                withJavaMathBigInteger:(JavaMathBigInteger *)order
                                withJavaMathBigInteger:(JavaMathBigInteger *)cofactor
                   withOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

- (OrgBouncycastleMathEcECCurve *)getCurve;

- (IOSByteArray *)getSeed;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

   Curve ::= SEQUENCE {
       a               FieldElement,
       b               FieldElement,
       seed            BIT STRING      OPTIONAL
   } 
  
@endcode
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X9X9Curve)

FOUNDATION_EXPORT void OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_(OrgBouncycastleAsn1X9X9Curve *self, OrgBouncycastleMathEcECCurve *curve);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9Curve *new_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_(OrgBouncycastleMathEcECCurve *curve) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9Curve *create_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_(OrgBouncycastleMathEcECCurve *curve);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleAsn1X9X9Curve *self, OrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9Curve *new_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9Curve *create_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *curve, IOSByteArray *seed);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleAsn1X9X9FieldID_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X9X9Curve *self, OrgBouncycastleAsn1X9X9FieldID *fieldID, JavaMathBigInteger *order, JavaMathBigInteger *cofactor, OrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9Curve *new_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleAsn1X9X9FieldID_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X9X9FieldID *fieldID, JavaMathBigInteger *order, JavaMathBigInteger *cofactor, OrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X9X9Curve *create_OrgBouncycastleAsn1X9X9Curve_initWithOrgBouncycastleAsn1X9X9FieldID_withJavaMathBigInteger_withJavaMathBigInteger_withOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X9X9FieldID *fieldID, JavaMathBigInteger *order, JavaMathBigInteger *cofactor, OrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X9X9Curve)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X9X9Curve")

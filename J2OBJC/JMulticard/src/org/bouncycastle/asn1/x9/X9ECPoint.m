//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/X9ECPoint.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/x9/X9ECPoint.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x9/X9ECPoint must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X9X9ECPoint () {
 @public
  OrgBouncycastleAsn1ASN1OctetString *encoding_;
  OrgBouncycastleMathEcECCurve *c_;
  OrgBouncycastleMathEcECPoint *p_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECPoint, encoding_, OrgBouncycastleAsn1ASN1OctetString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECPoint, c_, OrgBouncycastleMathEcECCurve *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X9X9ECPoint, p_, OrgBouncycastleMathEcECPoint *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/X9ECPoint.java"


#line 14
@implementation OrgBouncycastleAsn1X9X9ECPoint


#line 22
- (instancetype)initWithOrgBouncycastleMathEcECPoint:(OrgBouncycastleMathEcECPoint *)p
                                         withBoolean:(jboolean)compressed {
  OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECPoint_withBoolean_(self, p, compressed);
  return self;
}


#line 30
- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)c
                                       withByteArray:(IOSByteArray *)encoding {
  OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withByteArray_(self, c, encoding);
  return self;
}


#line 38
- (instancetype)initWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)c
              withOrgBouncycastleAsn1ASN1OctetString:(OrgBouncycastleAsn1ASN1OctetString *)s {
  OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1ASN1OctetString_(self, c, s);
  return self;
}


#line 45
- (IOSByteArray *)getPointEncoding {
  
#line 47
  return OrgBouncycastleUtilArrays_cloneWithByteArray_([((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(encoding_)) getOctets]);
}


#line 50
- (OrgBouncycastleMathEcECPoint *)getPoint {
  @synchronized(self) {
    if (p_ == nil) {
      
#line 54
      p_ = [((OrgBouncycastleMathEcECPoint *) nil_chk([((OrgBouncycastleMathEcECCurve *) nil_chk(c_)) decodePointWithByteArray:[((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(encoding_)) getOctets]])) normalize];
    }
    
#line 57
    return JreRetainedLocalValue(p_);
  }
}


#line 60
- (jboolean)isPointCompressed {
  
#line 62
  IOSByteArray *octets = [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(encoding_)) getOctets];
  return octets != nil && octets->size_ > 0 && (IOSByteArray_Get(octets, 0) == 2 || IOSByteArray_Get(octets, 0) == 3);
}


#line 74
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 77
  return encoding_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECPoint;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleMathEcECPoint:withBoolean:);
  methods[1].selector = @selector(initWithOrgBouncycastleMathEcECCurve:withByteArray:);
  methods[2].selector = @selector(initWithOrgBouncycastleMathEcECCurve:withOrgBouncycastleAsn1ASN1OctetString:);
  methods[3].selector = @selector(getPointEncoding);
  methods[4].selector = @selector(getPoint);
  methods[5].selector = @selector(isPointCompressed);
  methods[6].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "encoding_", "LOrgBouncycastleAsn1ASN1OctetString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "c_", "LOrgBouncycastleMathEcECCurve;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "p_", "LOrgBouncycastleMathEcECPoint;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleMathEcECPoint;Z", "LOrgBouncycastleMathEcECCurve;[B", "LOrgBouncycastleMathEcECCurve;LOrgBouncycastleAsn1ASN1OctetString;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X9X9ECPoint = { "X9ECPoint", "org.bouncycastle.asn1.x9", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X9X9ECPoint;
}

@end


#line 22
void OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECPoint_withBoolean_(OrgBouncycastleAsn1X9X9ECPoint *self, OrgBouncycastleMathEcECPoint *p, jboolean compressed) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 26
  self->p_ = [((OrgBouncycastleMathEcECPoint *) nil_chk(p)) normalize];
  self->encoding_ = new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_([p getEncodedWithBoolean:compressed]);
}


#line 22
OrgBouncycastleAsn1X9X9ECPoint *new_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECPoint_withBoolean_(OrgBouncycastleMathEcECPoint *p, jboolean compressed) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9X9ECPoint, initWithOrgBouncycastleMathEcECPoint_withBoolean_, p, compressed)
}


#line 22
OrgBouncycastleAsn1X9X9ECPoint *create_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECPoint_withBoolean_(OrgBouncycastleMathEcECPoint *p, jboolean compressed) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9X9ECPoint, initWithOrgBouncycastleMathEcECPoint_withBoolean_, p, compressed)
}


#line 30
void OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleAsn1X9X9ECPoint *self, OrgBouncycastleMathEcECCurve *c, IOSByteArray *encoding) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 34
  self->c_ = c;
  self->encoding_ = new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(OrgBouncycastleUtilArrays_cloneWithByteArray_(encoding));
}


#line 30
OrgBouncycastleAsn1X9X9ECPoint *new_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *c, IOSByteArray *encoding) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9X9ECPoint, initWithOrgBouncycastleMathEcECCurve_withByteArray_, c, encoding)
}


#line 30
OrgBouncycastleAsn1X9X9ECPoint *create_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withByteArray_(OrgBouncycastleMathEcECCurve *c, IOSByteArray *encoding) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9X9ECPoint, initWithOrgBouncycastleMathEcECCurve_withByteArray_, c, encoding)
}


#line 38
void OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1ASN1OctetString_(OrgBouncycastleAsn1X9X9ECPoint *self, OrgBouncycastleMathEcECCurve *c, OrgBouncycastleAsn1ASN1OctetString *s) {
  OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withByteArray_(self,
#line 42
  c, [((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(s)) getOctets]);
}


#line 38
OrgBouncycastleAsn1X9X9ECPoint *new_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1ASN1OctetString_(OrgBouncycastleMathEcECCurve *c, OrgBouncycastleAsn1ASN1OctetString *s) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9X9ECPoint, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1ASN1OctetString_, c, s)
}


#line 38
OrgBouncycastleAsn1X9X9ECPoint *create_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1ASN1OctetString_(OrgBouncycastleMathEcECCurve *c, OrgBouncycastleAsn1ASN1OctetString *s) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9X9ECPoint, initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1ASN1OctetString_, c, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X9X9ECPoint)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/ECNamedCurveTable.java
//

#include "J2ObjC_source.h"
#include "java/util/Enumeration.h"
#include "java/util/Vector.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/anssi/ANSSINamedCurves.h"
#include "org/bouncycastle/asn1/cryptlib/CryptlibObjectIdentifiers.h"
#include "org/bouncycastle/asn1/cryptopro/ECGOST3410NamedCurves.h"
#include "org/bouncycastle/asn1/gm/GMNamedCurves.h"
#include "org/bouncycastle/asn1/nist/NISTNamedCurves.h"
#include "org/bouncycastle/asn1/sec/SECNamedCurves.h"
#include "org/bouncycastle/asn1/teletrust/TeleTrusTNamedCurves.h"
#include "org/bouncycastle/asn1/x9/ECNamedCurveTable.h"
#include "org/bouncycastle/asn1/x9/X962NamedCurves.h"
#include "org/bouncycastle/asn1/x9/X9ECParameters.h"
#include "org/bouncycastle/asn1/x9/X9ECParametersHolder.h"
#include "org/bouncycastle/crypto/ec/CustomNamedCurves.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x9/ECNamedCurveTable must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X9ECNamedCurveTable ()

+ (void)addEnumerationWithJavaUtilVector:(JavaUtilVector *)v
                 withJavaUtilEnumeration:(id<JavaUtilEnumeration>)e;

@end

__attribute__((unused)) static void OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(JavaUtilVector *v, id<JavaUtilEnumeration> e);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x9/ECNamedCurveTable.java"


#line 19
@implementation OrgBouncycastleAsn1X9ECNamedCurveTable

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 19
- (instancetype)init {
  OrgBouncycastleAsn1X9ECNamedCurveTable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 28
+ (OrgBouncycastleAsn1X9X9ECParameters *)getByNameWithNSString:(NSString *)name {
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(name);
}


#line 66
+ (OrgBouncycastleAsn1X9X9ECParametersHolder *)getByNameLazyWithNSString:(NSString *)name {
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameLazyWithNSString_(name);
}


#line 109
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name {
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getOIDWithNSString_(name);
}


#line 159
+ (NSString *)getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 209
+ (OrgBouncycastleAsn1X9X9ECParameters *)getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 244
+ (OrgBouncycastleAsn1X9X9ECParametersHolder *)getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 283
+ (id<JavaUtilEnumeration>)getNames {
  return OrgBouncycastleAsn1X9ECNamedCurveTable_getNames();
}


#line 298
+ (void)addEnumerationWithJavaUtilVector:(JavaUtilVector *)v
                 withJavaUtilEnumeration:(id<JavaUtilEnumeration>)e {
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, e);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParametersHolder;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 6, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParametersHolder;", 0x9, 7, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getByNameWithNSString:);
  methods[2].selector = @selector(getByNameLazyWithNSString:);
  methods[3].selector = @selector(getOIDWithNSString:);
  methods[4].selector = @selector(getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[5].selector = @selector(getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[6].selector = @selector(getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[7].selector = @selector(getNames);
  methods[8].selector = @selector(addEnumerationWithJavaUtilVector:withJavaUtilEnumeration:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getByName", "LNSString;", "getByNameLazy", "getOID", "getName", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getByOID", "getByOIDLazy", "addEnumeration", "LJavaUtilVector;LJavaUtilEnumeration;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X9ECNamedCurveTable = { "ECNamedCurveTable", "org.bouncycastle.asn1.x9", ptrTable, methods, NULL, 7, 0x1, 9, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X9ECNamedCurveTable;
}

@end


#line 19
void OrgBouncycastleAsn1X9ECNamedCurveTable_init(OrgBouncycastleAsn1X9ECNamedCurveTable *self) {
  NSObject_init(self);
}


#line 19
OrgBouncycastleAsn1X9ECNamedCurveTable *new_OrgBouncycastleAsn1X9ECNamedCurveTable_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X9ECNamedCurveTable, init)
}


#line 19
OrgBouncycastleAsn1X9ECNamedCurveTable *create_OrgBouncycastleAsn1X9ECNamedCurveTable_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X9ECNamedCurveTable, init)
}


#line 28
OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameWithNSString_(NSString *name) {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  
#line 31
  OrgBouncycastleAsn1X9X9ECParameters *ecP = OrgBouncycastleAsn1X9X962NamedCurves_getByNameWithNSString_(name);
  
#line 33
  if (ecP == nil) {
    
#line 35
    ecP = OrgBouncycastleAsn1SecSECNamedCurves_getByNameWithNSString_(name);
  }
  
#line 38
  if (ecP == nil) {
    
#line 40
    ecP = OrgBouncycastleAsn1NistNISTNamedCurves_getByNameWithNSString_(name);
  }
  
#line 43
  if (ecP == nil) {
    
#line 45
    ecP = OrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getByNameWithNSString_(name);
  }
  
#line 48
  if (ecP == nil) {
    
#line 50
    ecP = OrgBouncycastleAsn1AnssiANSSINamedCurves_getByNameWithNSString_(name);
  }
  
#line 53
  if (ecP == nil) {
    
#line 55
    ecP = OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByNameX9WithNSString_(name);
  }
  
#line 58
  if (ecP == nil) {
    
#line 60
    ecP = OrgBouncycastleAsn1GmGMNamedCurves_getByNameWithNSString_(name);
  }
  
#line 63
  return ecP;
}


#line 66
OrgBouncycastleAsn1X9X9ECParametersHolder *OrgBouncycastleAsn1X9ECNamedCurveTable_getByNameLazyWithNSString_(NSString *name) {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  OrgBouncycastleAsn1X9X9ECParametersHolder *holder = OrgBouncycastleAsn1X9X962NamedCurves_getByNameLazyWithNSString_(name);
  
#line 70
  if (nil == holder) {
    
#line 72
    holder = OrgBouncycastleAsn1SecSECNamedCurves_getByNameLazyWithNSString_(name);
  }
  
#line 75
  if (nil == holder) {
    
#line 77
    holder = OrgBouncycastleAsn1NistNISTNamedCurves_getByNameLazyWithNSString_(name);
  }
  
#line 80
  if (nil == holder) {
    
#line 82
    holder = OrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getByNameLazyWithNSString_(name);
  }
  
#line 85
  if (nil == holder) {
    
#line 87
    holder = OrgBouncycastleAsn1AnssiANSSINamedCurves_getByNameLazyWithNSString_(name);
  }
  
#line 90
  if (nil == holder) {
    
#line 92
    holder = OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByNameLazyWithNSString_(name);
  }
  
#line 95
  if (nil == holder) {
    
#line 97
    holder = OrgBouncycastleAsn1GmGMNamedCurves_getByNameLazyWithNSString_(name);
  }
  
#line 100
  return holder;
}


#line 109
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X9ECNamedCurveTable_getOIDWithNSString_(NSString *name) {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  
#line 112
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = OrgBouncycastleAsn1X9X962NamedCurves_getOIDWithNSString_(name);
  
#line 114
  if (oid == nil) {
    
#line 116
    oid = OrgBouncycastleAsn1SecSECNamedCurves_getOIDWithNSString_(name);
  }
  
#line 119
  if (oid == nil) {
    
#line 121
    oid = OrgBouncycastleAsn1NistNISTNamedCurves_getOIDWithNSString_(name);
  }
  
#line 124
  if (oid == nil) {
    
#line 126
    oid = OrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getOIDWithNSString_(name);
  }
  
#line 129
  if (oid == nil) {
    
#line 131
    oid = OrgBouncycastleAsn1AnssiANSSINamedCurves_getOIDWithNSString_(name);
  }
  
#line 134
  if (oid == nil) {
    
#line 136
    oid = OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getOIDWithNSString_(name);
  }
  
#line 139
  if (oid == nil) {
    
#line 141
    oid = OrgBouncycastleAsn1GmGMNamedCurves_getOIDWithNSString_(name);
  }
  
#line 144
  if (oid == nil && [((NSString *) nil_chk(name)) isEqual:@"curve25519"]) {
    
#line 146
    oid = JreLoadStatic(OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers, curvey25519);
  }
  
#line 149
  return oid;
}


#line 159
NSString *OrgBouncycastleAsn1X9ECNamedCurveTable_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  
#line 162
  NSString *name = OrgBouncycastleAsn1X9X962NamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  
#line 164
  if (name == nil) {
    
#line 166
    name = OrgBouncycastleAsn1SecSECNamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 169
  if (name == nil) {
    
#line 171
    name = OrgBouncycastleAsn1NistNISTNamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 174
  if (name == nil) {
    
#line 176
    name = OrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 179
  if (name == nil) {
    
#line 181
    name = OrgBouncycastleAsn1AnssiANSSINamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 184
  if (name == nil) {
    
#line 186
    name = OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 189
  if (name == nil) {
    
#line 191
    name = OrgBouncycastleAsn1GmGMNamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 194
  if (name == nil) {
    
#line 196
    name = OrgBouncycastleCryptoEcCustomNamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 199
  return name;
}


#line 209
OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  
#line 212
  OrgBouncycastleAsn1X9X9ECParameters *ecP = OrgBouncycastleAsn1X9X962NamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  
#line 214
  if (ecP == nil) {
    
#line 216
    ecP = OrgBouncycastleAsn1SecSECNamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 221
  if (ecP == nil) {
    
#line 223
    ecP = OrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 226
  if (ecP == nil) {
    
#line 228
    ecP = OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 231
  if (ecP == nil) {
    
#line 233
    ecP = OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByOIDX9WithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 236
  if (ecP == nil) {
    
#line 238
    ecP = OrgBouncycastleAsn1GmGMNamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 241
  return ecP;
}


#line 244
OrgBouncycastleAsn1X9X9ECParametersHolder *OrgBouncycastleAsn1X9ECNamedCurveTable_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  OrgBouncycastleAsn1X9X9ECParametersHolder *holder = OrgBouncycastleAsn1X9X962NamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  
#line 248
  if (nil == holder) {
    
#line 250
    holder = OrgBouncycastleAsn1SecSECNamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 255
  if (nil == holder) {
    
#line 257
    holder = OrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 260
  if (nil == holder) {
    
#line 262
    holder = OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 265
  if (nil == holder) {
    
#line 267
    holder = OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 270
  if (nil == holder) {
    
#line 272
    holder = OrgBouncycastleAsn1GmGMNamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  }
  
#line 275
  return holder;
}


#line 283
id<JavaUtilEnumeration> OrgBouncycastleAsn1X9ECNamedCurveTable_getNames() {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  JavaUtilVector *v = new_JavaUtilVector_init();
  
#line 287
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, OrgBouncycastleAsn1X9X962NamedCurves_getNames());
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, OrgBouncycastleAsn1SecSECNamedCurves_getNames());
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, OrgBouncycastleAsn1NistNISTNamedCurves_getNames());
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, OrgBouncycastleAsn1TeletrustTeleTrusTNamedCurves_getNames());
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, OrgBouncycastleAsn1AnssiANSSINamedCurves_getNames());
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, OrgBouncycastleAsn1CryptoproECGOST3410NamedCurves_getNames());
  OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(v, OrgBouncycastleAsn1GmGMNamedCurves_getNames());
  
#line 295
  return [v elements];
}


#line 298
void OrgBouncycastleAsn1X9ECNamedCurveTable_addEnumerationWithJavaUtilVector_withJavaUtilEnumeration_(JavaUtilVector *v, id<JavaUtilEnumeration> e) {
  OrgBouncycastleAsn1X9ECNamedCurveTable_initialize();
  
#line 302
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 304
    [((JavaUtilVector *) nil_chk(v)) addElementWithId:[e nextElement]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X9ECNamedCurveTable)

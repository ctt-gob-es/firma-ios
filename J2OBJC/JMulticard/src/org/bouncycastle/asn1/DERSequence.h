//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DERSequence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERSequence")
#ifdef RESTRICT_OrgBouncycastleAsn1DERSequence
#define INCLUDE_ALL_OrgBouncycastleAsn1DERSequence 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DERSequence 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DERSequence

#if !defined (OrgBouncycastleAsn1DERSequence_) && (INCLUDE_ALL_OrgBouncycastleAsn1DERSequence || defined(INCLUDE_OrgBouncycastleAsn1DERSequence))
#define OrgBouncycastleAsn1DERSequence_

#define RESTRICT_OrgBouncycastleAsn1ASN1Sequence 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Sequence 1
#include "org/bouncycastle/asn1/ASN1Sequence.h"

@class IOSObjectArray;
@class OrgBouncycastleAsn1ASN1BitString;
@class OrgBouncycastleAsn1ASN1EncodableVector;
@class OrgBouncycastleAsn1ASN1External;
@class OrgBouncycastleAsn1ASN1OctetString;
@class OrgBouncycastleAsn1ASN1OutputStream;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1Set;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief Definite length SEQUENCE, encoding tells explicit number of bytes
  that the content of this sequence occupies.
 <p>
  For X.690 syntax rules, see <code>ASN1Sequence</code>.
 */
@interface OrgBouncycastleAsn1DERSequence : OrgBouncycastleAsn1ASN1Sequence

#pragma mark Public

/*!
 @brief Create an empty sequence
 */
- (instancetype)init;

/*!
 @brief Create a sequence containing one object
 @param element the object to go in the sequence.
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)element;

/*!
 @brief Create a sequence containing an array of objects.
 @param elements the array of objects to make up the sequence.
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements;

/*!
 @brief Create a sequence containing a vector of objects.
 @param elementVector the vector of objects to make up the sequence.
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)elementVector;

+ (OrgBouncycastleAsn1DERSequence *)convertWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements
                                                  withBoolean:(jboolean)clone;

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag;

- (jint)encodedLengthWithBoolean:(jboolean)withTag;

- (OrgBouncycastleAsn1ASN1BitString *)toASN1BitString;

- (OrgBouncycastleAsn1ASN1External *)toASN1External;

- (OrgBouncycastleAsn1ASN1OctetString *)toASN1OctetString;

- (OrgBouncycastleAsn1ASN1Set *)toASN1Set;

- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject;

- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1DERSequence)

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *OrgBouncycastleAsn1DERSequence_convertWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERSequence_init(OrgBouncycastleAsn1DERSequence *self);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *new_OrgBouncycastleAsn1DERSequence_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *create_OrgBouncycastleAsn1DERSequence_init(void);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1DERSequence *self, id<OrgBouncycastleAsn1ASN1Encodable> element);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> element) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *create_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> element);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1DERSequence *self, OrgBouncycastleAsn1ASN1EncodableVector *elementVector);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1ASN1EncodableVector *elementVector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *create_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1ASN1EncodableVector *elementVector);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_(OrgBouncycastleAsn1DERSequence *self, IOSObjectArray *elements);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_(IOSObjectArray *elements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *create_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_(IOSObjectArray *elements);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_withBoolean_(OrgBouncycastleAsn1DERSequence *self, IOSObjectArray *elements, jboolean clone);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_withBoolean_(IOSObjectArray *elements, jboolean clone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERSequence *create_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_withBoolean_(IOSObjectArray *elements, jboolean clone);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DERSequence)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERSequence")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ApplicationSpecific.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/bouncycastle/asn1/ASN1ApplicationSpecific.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Exception.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1TaggedObjectParser.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERApplicationSpecific.h"
#include "org/bouncycastle/asn1/DLApplicationSpecific.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1ApplicationSpecific must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1ApplicationSpecific ()

+ (jint)checkTagClassWithInt:(jint)tagClass;

@end

__attribute__((unused)) static jint OrgBouncycastleAsn1ASN1ApplicationSpecific_checkTagClassWithInt_(jint tagClass);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1ASN1ApplicationSpecific__Annotations$0(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ApplicationSpecific.java"


#line 16
@implementation OrgBouncycastleAsn1ASN1ApplicationSpecific


#line 26
+ (OrgBouncycastleAsn1ASN1ApplicationSpecific *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1ApplicationSpecific_getInstanceWithId_(obj);
}


#line 47
- (instancetype)initWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject {
  OrgBouncycastleAsn1ASN1ApplicationSpecific_initWithOrgBouncycastleAsn1ASN1TaggedObject_(self, taggedObject);
  return self;
}


#line 59
- (jint)getApplicationTag {
  
#line 61
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) getTagNo];
}


#line 69
- (IOSByteArray *)getContents {
  
#line 72
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) getContents];
}


#line 81
- (OrgBouncycastleAsn1ASN1Primitive *)getEnclosedObject {
  
#line 83
  return [((OrgBouncycastleAsn1ASN1Object *) nil_chk([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) getBaseObject])) toASN1Primitive];
}


#line 93
- (OrgBouncycastleAsn1ASN1Primitive *)getObjectWithInt:(jint)tagNo {
  
#line 95
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) getBaseUniversalWithBoolean:false withInt:tagNo];
}


#line 98
- (id<OrgBouncycastleAsn1ASN1Encodable>)getObjectParserWithInt:(jint)tag
                                                   withBoolean:(jboolean)isExplicit {
  
#line 101
  @throw new_OrgBouncycastleAsn1ASN1Exception_initWithNSString_(@"this method only valid for CONTEXT_SPECIFIC tags");
}


#line 104
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseBaseUniversalWithBoolean:(jboolean)declaredExplicit
                                                              withInt:(jint)baseTagNo {
  
#line 107
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) parseBaseUniversalWithBoolean:declaredExplicit withInt:baseTagNo];
}


#line 110
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseExplicitBaseObject {
  
#line 113
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) parseExplicitBaseObject];
}

- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseExplicitBaseTagged {
  
#line 119
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) parseExplicitBaseTagged];
}

- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseImplicitBaseTaggedWithInt:(jint)baseTagClass
                                                                        withInt:(jint)baseTagNo {
  
#line 125
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) parseImplicitBaseTaggedWithInt:baseTagClass withInt:baseTagNo];
}


#line 128
- (jboolean)hasApplicationTagWithInt:(jint)tagNo {
  
#line 130
  return self->tagNo_ == tagNo;
}


#line 133
- (jboolean)hasContextTagWithInt:(jint)tagNo {
  
#line 136
  return false;
}


#line 146
- (OrgBouncycastleAsn1ASN1TaggedObject *)getTaggedObject {
  
#line 148
  return taggedObject_;
}


#line 156
- (jboolean)isConstructed {
  
#line 159
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) isConstructed];
}

- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject {
  
#line 166
  return [self parseExplicitBaseObject];
}


#line 169
- (jboolean)encodeConstructed {
  
#line 172
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) encodeConstructed];
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 178
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) encodedLengthWithBoolean:withTag];
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 184
  [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) encodeWithOrgBouncycastleAsn1ASN1OutputStream:outArg withBoolean:withTag];
}


#line 187
- (NSString *)getASN1Encoding {
  
#line 190
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) getASN1Encoding];
}

- (OrgBouncycastleAsn1ASN1Sequence *)rebuildConstructedWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive {
  
#line 196
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) rebuildConstructedWithOrgBouncycastleAsn1ASN1Primitive:primitive];
}

- (OrgBouncycastleAsn1ASN1TaggedObject *)replaceTagWithInt:(jint)tagClass
                                                   withInt:(jint)tagNo {
  
#line 202
  return [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) replaceTagWithInt:tagClass withInt:tagNo];
}


#line 205
- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject {
  
#line 208
  return new_OrgBouncycastleAsn1DERApplicationSpecific_initWithOrgBouncycastleAsn1ASN1TaggedObject_((OrgBouncycastleAsn1ASN1TaggedObject *) cast_chk([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) toDERObject], [OrgBouncycastleAsn1ASN1TaggedObject class]));
}

- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject {
  
#line 214
  return new_OrgBouncycastleAsn1DLApplicationSpecific_initWithOrgBouncycastleAsn1ASN1TaggedObject_((OrgBouncycastleAsn1ASN1TaggedObject *) cast_chk([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject_)) toDLObject], [OrgBouncycastleAsn1ASN1TaggedObject class]));
}

+ (jint)checkTagClassWithInt:(jint)tagClass {
  return OrgBouncycastleAsn1ASN1ApplicationSpecific_checkTagClassWithInt_(tagClass);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1ApplicationSpecific;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 6, 7, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 8, 9, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObjectParser;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObjectParser;", 0x1, 10, 11, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 14, 15, 3, -1, -1, -1 },
    { NULL, "V", 0x0, 16, 17, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Sequence;", 0x0, 18, 19, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObject;", 0x0, 20, 11, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 21, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1ASN1TaggedObject:);
  methods[2].selector = @selector(getApplicationTag);
  methods[3].selector = @selector(getContents);
  methods[4].selector = @selector(getEnclosedObject);
  methods[5].selector = @selector(getObjectWithInt:);
  methods[6].selector = @selector(getObjectParserWithInt:withBoolean:);
  methods[7].selector = @selector(parseBaseUniversalWithBoolean:withInt:);
  methods[8].selector = @selector(parseExplicitBaseObject);
  methods[9].selector = @selector(parseExplicitBaseTagged);
  methods[10].selector = @selector(parseImplicitBaseTaggedWithInt:withInt:);
  methods[11].selector = @selector(hasApplicationTagWithInt:);
  methods[12].selector = @selector(hasContextTagWithInt:);
  methods[13].selector = @selector(getTaggedObject);
  methods[14].selector = @selector(isConstructed);
  methods[15].selector = @selector(readObject);
  methods[16].selector = @selector(encodeConstructed);
  methods[17].selector = @selector(encodedLengthWithBoolean:);
  methods[18].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[19].selector = @selector(getASN1Encoding);
  methods[20].selector = @selector(rebuildConstructedWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[21].selector = @selector(replaceTagWithInt:withInt:);
  methods[22].selector = @selector(toDERObject);
  methods[23].selector = @selector(toDLObject);
  methods[24].selector = @selector(checkTagClassWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "taggedObject_", "LOrgBouncycastleAsn1ASN1TaggedObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;", "LJavaIoIOException;", "getObject", "I", "getObjectParser", "IZ", "parseBaseUniversal", "ZI", "parseImplicitBaseTagged", "II", "hasApplicationTag", "hasContextTag", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "rebuildConstructed", "LOrgBouncycastleAsn1ASN1Primitive;", "replaceTag", "checkTagClass", (void *)&OrgBouncycastleAsn1ASN1ApplicationSpecific__Annotations$0 };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1ApplicationSpecific = { "ASN1ApplicationSpecific", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x401, 25, 1, -1, -1, -1, -1, 22 };
  return &_OrgBouncycastleAsn1ASN1ApplicationSpecific;
}

@end


#line 26
OrgBouncycastleAsn1ASN1ApplicationSpecific *OrgBouncycastleAsn1ASN1ApplicationSpecific_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1ApplicationSpecific_initialize();
  
#line 27
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1ApplicationSpecific class]]) {
    return (OrgBouncycastleAsn1ASN1ApplicationSpecific *) cast_chk(obj, [OrgBouncycastleAsn1ASN1ApplicationSpecific class]);
  }
  else if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 32
    @try {
      
#line 34
      return OrgBouncycastleAsn1ASN1ApplicationSpecific_getInstanceWithId_(OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_((IOSByteArray *) cast_chk(obj, [IOSByteArray class])));
    }
    @catch (JavaIoIOException *e) {
      
#line 38
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Failed to construct object from byte[]: ", [e getMessage]));
    }
  }
  
#line 42
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unknown object in getInstance: ", [[obj java_getClass] getName]));
}


#line 47
void OrgBouncycastleAsn1ASN1ApplicationSpecific_initWithOrgBouncycastleAsn1ASN1TaggedObject_(OrgBouncycastleAsn1ASN1ApplicationSpecific *self, OrgBouncycastleAsn1ASN1TaggedObject *taggedObject) {
  OrgBouncycastleAsn1ASN1TaggedObject_initWithInt_withInt_withInt_withOrgBouncycastleAsn1ASN1Encodable_(self,
#line 49
  ((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject))->explicitness_, OrgBouncycastleAsn1ASN1ApplicationSpecific_checkTagClassWithInt_(taggedObject->tagClass_), taggedObject->tagNo_, taggedObject->obj_);
  
#line 51
  self->taggedObject_ = taggedObject;
}


#line 217
jint OrgBouncycastleAsn1ASN1ApplicationSpecific_checkTagClassWithInt_(jint tagClass) {
  OrgBouncycastleAsn1ASN1ApplicationSpecific_initialize();
  if (OrgBouncycastleAsn1BERTags_APPLICATION != tagClass) {
    
#line 221
    @throw new_JavaLangIllegalArgumentException_init();
  }
  return tagClass;
}

IOSObjectArray *OrgBouncycastleAsn1ASN1ApplicationSpecific__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1ApplicationSpecific)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UniversalType.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Tag.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1Type.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1UniversalType must be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1ASN1UniversalType_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1UniversalType *self, OrgBouncycastleAsn1ASN1Primitive *primitive);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UniversalType.java"


#line 5
@implementation OrgBouncycastleAsn1ASN1UniversalType


#line 10
- (instancetype)initPackagePrivateWithIOSClass:(IOSClass *)javaClass
                                       withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 17
- (OrgBouncycastleAsn1ASN1Primitive *)checkedCastWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive {
  return OrgBouncycastleAsn1ASN1UniversalType_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(self, primitive);
}


#line 27
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 29
  @throw new_JavaLangIllegalStateException_initWithNSString_(@"unexpected implicit primitive encoding");
}


#line 32
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitConstructedWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)sequence {
  
#line 34
  @throw new_JavaLangIllegalStateException_initWithNSString_(@"unexpected implicit constructed encoding");
}


#line 37
- (OrgBouncycastleAsn1ASN1Primitive *)fromByteArrayWithByteArray:(IOSByteArray *)bytes {
  
#line 39
  return OrgBouncycastleAsn1ASN1UniversalType_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(self, OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(bytes));
}


#line 42
- (OrgBouncycastleAsn1ASN1Primitive *)getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                                    withBoolean:(jboolean)declaredExplicit {
  if (OrgBouncycastleAsn1BERTags_CONTEXT_SPECIFIC != [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject)) getTagClass]) {
    
#line 46
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"this method only valid for CONTEXT_SPECIFIC tags");
  }
  
#line 49
  return OrgBouncycastleAsn1ASN1UniversalType_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(self, [taggedObject getBaseUniversalWithBoolean:declaredExplicit withOrgBouncycastleAsn1ASN1UniversalType:self]);
}


#line 52
- (OrgBouncycastleAsn1ASN1Tag *)getTag {
  
#line 54
  return tag_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x10, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x10, 7, 8, 9, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x10, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Tag;", 0x10, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithIOSClass:withInt:);
  methods[1].selector = @selector(checkedCastWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[2].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  methods[3].selector = @selector(fromImplicitConstructedWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[4].selector = @selector(fromByteArrayWithByteArray:);
  methods[5].selector = @selector(getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[6].selector = @selector(getTag);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tag_", "LOrgBouncycastleAsn1ASN1Tag;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;I", "checkedCast", "LOrgBouncycastleAsn1ASN1Primitive;", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "fromImplicitConstructed", "LOrgBouncycastleAsn1ASN1Sequence;", "fromByteArray", "[B", "LJavaIoIOException;", "getContextInstance", "LOrgBouncycastleAsn1ASN1TaggedObject;Z" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1UniversalType = { "ASN1UniversalType", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x400, 7, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1UniversalType;
}

@end


#line 10
void OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1UniversalType *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1Type_initPackagePrivateWithIOSClass_(self,
#line 12
  javaClass);
  
#line 14
  self->tag_ = OrgBouncycastleAsn1ASN1Tag_createWithInt_withInt_(OrgBouncycastleAsn1BERTags_UNIVERSAL, tagNumber);
}


#line 17
OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1ASN1UniversalType_checkedCastWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1UniversalType *self, OrgBouncycastleAsn1ASN1Primitive *primitive) {
  
#line 19
  if ([((IOSClass *) nil_chk(self->javaClass_)) isInstance:primitive]) {
    
#line 21
    return primitive;
  }
  
#line 24
  @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"unexpected object: ", [[((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) java_getClass] getName]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1UniversalType)

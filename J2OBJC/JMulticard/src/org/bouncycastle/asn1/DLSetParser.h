//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DLSetParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DLSetParser")
#ifdef RESTRICT_OrgBouncycastleAsn1DLSetParser
#define INCLUDE_ALL_OrgBouncycastleAsn1DLSetParser 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DLSetParser 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DLSetParser

#if !defined (OrgBouncycastleAsn1DLSetParser_) && (INCLUDE_ALL_OrgBouncycastleAsn1DLSetParser || defined(INCLUDE_OrgBouncycastleAsn1DLSetParser))
#define OrgBouncycastleAsn1DLSetParser_

#define RESTRICT_OrgBouncycastleAsn1ASN1SetParser 1
#define INCLUDE_OrgBouncycastleAsn1ASN1SetParser 1
#include "org/bouncycastle/asn1/ASN1SetParser.h"

@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1StreamParser;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief Parser class for DL SETs.
 TODO The class is only publicly visible to support 'instanceof' checks; provide an alternative
 */
@interface OrgBouncycastleAsn1DLSetParser : NSObject < OrgBouncycastleAsn1ASN1SetParser >

#pragma mark Public

/*!
 @brief Return an in memory, encodable, representation of the SET.
 @return a DLSet.
 @throw IOExceptionif there is an issue loading the data.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)getLoadedObject;

/*!
 @brief Return the next object in the SET.
 @return next object in SET.
 @throw IOExceptionif there is an issue loading the object.
 */
- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject;

/*!
 @brief Return a DLSet representing this parser and its contents.
 @return a DLSet
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastleAsn1ASN1StreamParser:(OrgBouncycastleAsn1ASN1StreamParser *)parser;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1DLSetParser)

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLSetParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1DLSetParser *self, OrgBouncycastleAsn1ASN1StreamParser *parser);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLSetParser *new_OrgBouncycastleAsn1DLSetParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1ASN1StreamParser *parser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLSetParser *create_OrgBouncycastleAsn1DLSetParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1ASN1StreamParser *parser);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DLSetParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DLSetParser")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DLTaggedObjectParser.java
//

#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1StreamParser.h"
#include "org/bouncycastle/asn1/ASN1TaggedObjectParser.h"
#include "org/bouncycastle/asn1/BERTaggedObjectParser.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DLApplicationSpecific.h"
#include "org/bouncycastle/asn1/DLTaggedObjectParser.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/DLTaggedObjectParser must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1DLTaggedObjectParser () {
 @public
  jboolean _constructed_;
}

@end

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DLTaggedObjectParser.java"


#line 8
@implementation OrgBouncycastleAsn1DLTaggedObjectParser


#line 13
- (instancetype)initPackagePrivateWithInt:(jint)tagClass
                                  withInt:(jint)tagNo
                              withBoolean:(jboolean)constructed
  withOrgBouncycastleAsn1ASN1StreamParser:(OrgBouncycastleAsn1ASN1StreamParser *)parser {
  OrgBouncycastleAsn1DLTaggedObjectParser_initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_(self, tagClass, tagNo, constructed, parser);
  return self;
}


#line 25
- (jboolean)isConstructed {
  
#line 28
  return _constructed_;
}


#line 37
- (OrgBouncycastleAsn1ASN1Primitive *)getLoadedObject {
  
#line 41
  return [((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(_parser_)) loadTaggedDLWithInt:_tagClass_ withInt:_tagNo_ withBoolean:_constructed_];
}


#line 44
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseBaseUniversalWithBoolean:(jboolean)declaredExplicit
                                                              withInt:(jint)baseTagNo {
  
#line 47
  if (declaredExplicit) {
    
#line 49
    if (!_constructed_) {
      
#line 51
      @throw new_JavaIoIOException_initWithNSString_(@"Explicit tags must be constructed (see X.690 8.14.2)");
    }
    
#line 54
    return [((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(_parser_)) parseObjectWithInt:baseTagNo];
  }
  
#line 57
  return _constructed_ ?
#line 58
  [((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(_parser_)) parseImplicitConstructedDLWithInt:baseTagNo] :
#line 59
  [((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(_parser_)) parseImplicitPrimitiveWithInt:baseTagNo];
}


#line 62
- (id<OrgBouncycastleAsn1ASN1Encodable>)parseExplicitBaseObject {
  
#line 65
  if (!_constructed_) {
    
#line 67
    @throw new_JavaIoIOException_initWithNSString_(@"Explicit tags must be constructed (see X.690 8.14.2)");
  }
  
#line 70
  return [((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(_parser_)) readObject];
}


#line 73
- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseExplicitBaseTagged {
  
#line 76
  if (!_constructed_) {
    
#line 78
    @throw new_JavaIoIOException_initWithNSString_(@"Explicit tags must be constructed (see X.690 8.14.2)");
  }
  
#line 81
  return [((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(_parser_)) parseTaggedObject];
}


#line 84
- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseImplicitBaseTaggedWithInt:(jint)baseTagClass
                                                                        withInt:(jint)baseTagNo {
  
#line 88
  if (OrgBouncycastleAsn1BERTags_APPLICATION == baseTagClass) {
    
#line 91
    return (OrgBouncycastleAsn1DLApplicationSpecific *) cast_chk([((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(_parser_)) loadTaggedDLWithInt:baseTagClass withInt:baseTagNo withBoolean:_constructed_], [OrgBouncycastleAsn1DLApplicationSpecific class]);
  }
  
#line 94
  return new_OrgBouncycastleAsn1DLTaggedObjectParser_initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_(baseTagClass, baseTagNo, _constructed_, _parser_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObjectParser;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1TaggedObjectParser;", 0x1, 4, 5, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithInt:withInt:withBoolean:withOrgBouncycastleAsn1ASN1StreamParser:);
  methods[1].selector = @selector(isConstructed);
  methods[2].selector = @selector(getLoadedObject);
  methods[3].selector = @selector(parseBaseUniversalWithBoolean:withInt:);
  methods[4].selector = @selector(parseExplicitBaseObject);
  methods[5].selector = @selector(parseExplicitBaseTagged);
  methods[6].selector = @selector(parseImplicitBaseTaggedWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_constructed_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IIZLOrgBouncycastleAsn1ASN1StreamParser;", "LJavaIoIOException;", "parseBaseUniversal", "ZI", "parseImplicitBaseTagged", "II" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1DLTaggedObjectParser = { "DLTaggedObjectParser", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x0, 7, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1DLTaggedObjectParser;
}

@end


#line 13
void OrgBouncycastleAsn1DLTaggedObjectParser_initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1DLTaggedObjectParser *self, jint tagClass, jint tagNo, jboolean constructed, OrgBouncycastleAsn1ASN1StreamParser *parser) {
  OrgBouncycastleAsn1BERTaggedObjectParser_initWithInt_withInt_withOrgBouncycastleAsn1ASN1StreamParser_(self,
#line 15
  tagClass, tagNo, parser);
  
#line 17
  self->_constructed_ = constructed;
}


#line 13
OrgBouncycastleAsn1DLTaggedObjectParser *new_OrgBouncycastleAsn1DLTaggedObjectParser_initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_(jint tagClass, jint tagNo, jboolean constructed, OrgBouncycastleAsn1ASN1StreamParser *parser) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DLTaggedObjectParser, initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_, tagClass, tagNo, constructed, parser)
}


#line 13
OrgBouncycastleAsn1DLTaggedObjectParser *create_OrgBouncycastleAsn1DLTaggedObjectParser_initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_(jint tagClass, jint tagNo, jboolean constructed, OrgBouncycastleAsn1ASN1StreamParser *parser) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DLTaggedObjectParser, initPackagePrivateWithInt_withInt_withBoolean_withOrgBouncycastleAsn1ASN1StreamParser_, tagClass, tagNo, constructed, parser)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DLTaggedObjectParser)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Type.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/bouncycastle/asn1/ASN1Type.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1Type must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Type.java"


#line 3
@implementation OrgBouncycastleAsn1ASN1Type


#line 7
- (instancetype)initPackagePrivateWithIOSClass:(IOSClass *)javaClass {
  OrgBouncycastleAsn1ASN1Type_initPackagePrivateWithIOSClass_(self, javaClass);
  return self;
}

- (IOSClass *)getJavaClass {
  
#line 14
  return javaClass_;
}


#line 17
- (jboolean)isEqual:(id)that {
  
#line 20
  return JreObjectEqualsEquals(self, that);
}

- (NSUInteger)hash {
  
#line 26
  return ((jint) [super hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithIOSClass:);
  methods[1].selector = @selector(getJavaClass);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "javaClass_", "LIOSClass;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Type = { "ASN1Type", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x400, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Type;
}

@end


#line 7
void OrgBouncycastleAsn1ASN1Type_initPackagePrivateWithIOSClass_(OrgBouncycastleAsn1ASN1Type *self, IOSClass *javaClass) {
  NSObject_init(self);
  self->javaClass_ = javaClass;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1Type)

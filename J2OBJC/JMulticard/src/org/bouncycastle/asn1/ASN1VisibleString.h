//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/org/bouncycastle/asn1/ASN1VisibleString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1VisibleString")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1VisibleString
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1VisibleString 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1VisibleString 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1VisibleString

#if !defined (OrgBouncycastleAsn1ASN1VisibleString_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1VisibleString || defined(INCLUDE_OrgBouncycastleAsn1ASN1VisibleString))
#define OrgBouncycastleAsn1ASN1VisibleString_

#define RESTRICT_OrgBouncycastleAsn1ASN1Primitive 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Primitive 1
#include "org/bouncycastle/asn1/ASN1Primitive.h"

#define RESTRICT_OrgBouncycastleAsn1ASN1String 1
#define INCLUDE_OrgBouncycastleAsn1ASN1String 1
#include "org/bouncycastle/asn1/ASN1String.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1OutputStream;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@class OrgBouncycastleAsn1ASN1UniversalType;

/*!
 @brief ASN.1 VisibleString object encoding ISO 646 (ASCII) character code points 32 to 126.
 <p>
  Explicit character set escape sequences are not allowed. 
 </p>
 */
@interface OrgBouncycastleAsn1ASN1VisibleString : OrgBouncycastleAsn1ASN1Primitive < OrgBouncycastleAsn1ASN1String > {
 @public
  IOSByteArray *contents_;
}

#pragma mark Public

/*!
 @brief Return a Visible String from a tagged object.
 @param obj the tagged object holding the object we want
 @param explicit_ true if the object is meant to be explicitly               tagged false otherwise.
 @throw IllegalArgumentExceptionif the tagged object cannot
                be converted.
 @return an ASN1VisibleString instance, or null
 */
+ (OrgBouncycastleAsn1ASN1VisibleString *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                                 withBoolean:(jboolean)explicit_;

/*!
 @brief Return a Visible String from the passed in object.
 @param obj an ASN1VisibleString or an object that can be converted into one.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 @return an ASN1VisibleString instance, or null
 */
+ (OrgBouncycastleAsn1ASN1VisibleString *)getInstanceWithId:(id)obj;

- (IOSByteArray *)getOctets;

- (NSString *)getString;

- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone;

- (instancetype)initWithNSString:(NSString *)string;

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other;

+ (OrgBouncycastleAsn1ASN1VisibleString *)createPrimitiveWithByteArray:(IOSByteArray *)contents;

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag;

- (jboolean)encodeConstructed;

- (jint)encodedLengthWithBoolean:(jboolean)withTag;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleAsn1ASN1VisibleString)

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1VisibleString, contents_, IOSByteArray *)

inline OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1VisibleString_get_TYPE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1VisibleString_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1VisibleString, TYPE, OrgBouncycastleAsn1ASN1UniversalType *)

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1VisibleString *OrgBouncycastleAsn1ASN1VisibleString_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1VisibleString *OrgBouncycastleAsn1ASN1VisibleString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1VisibleString_initWithNSString_(OrgBouncycastleAsn1ASN1VisibleString *self, NSString *string);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1VisibleString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1VisibleString *self, IOSByteArray *contents, jboolean clone);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1VisibleString *OrgBouncycastleAsn1ASN1VisibleString_createPrimitiveWithByteArray_(IOSByteArray *contents);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1VisibleString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1VisibleString")

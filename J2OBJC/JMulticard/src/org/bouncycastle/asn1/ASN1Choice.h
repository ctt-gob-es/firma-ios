//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Choice.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Choice")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1Choice
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Choice 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Choice 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1Choice

#if !defined (OrgBouncycastleAsn1ASN1Choice_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1Choice || defined(INCLUDE_OrgBouncycastleAsn1ASN1Choice))
#define OrgBouncycastleAsn1ASN1Choice_

/*!
 @brief Marker interface for CHOICE objects - if you implement this in a role your
  own object any attempt to tag the object implicitly will convert the tag to
  an explicit one as the encoding rules require.
 <p>
  If you use this interface your class should also implement the getInstance()
  pattern which takes a tag object and the tagging mode used. 
 </p>
  <p><b>X.690</b></p>
  <p><b>8: Basic encoding rules</b></p>
  <p><b>8.13 Encoding of a choice value </b></p>
  <p>
  The encoding of a choice value shall be the same as the encoding of a value of the chosen type. 
 <blockquote>
  NOTE 1 &mdash; The encoding may be primitive or constructed depending on the chosen type. 
 </blockquote>
  <blockquote>
  NOTE 2 &mdash; The tag used in the identifier octets is the tag of the chosen type,
  as specified in the ASN.1 definition of the choice type. 
 </blockquote>
 */
@protocol OrgBouncycastleAsn1ASN1Choice < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Choice)

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1Choice)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Choice")

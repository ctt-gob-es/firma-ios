//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/LazyEncodedSequence.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/NullPointerException.h"
#include "java/util/Enumeration.h"
#include "java/util/Iterator.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1External.h"
#include "org/bouncycastle/asn1/ASN1InputStream.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1ParsingException.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/LazyConstructionEnumeration.h"
#include "org/bouncycastle/asn1/LazyEncodedSequence.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/LazyEncodedSequence must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1LazyEncodedSequence () {
 @public
  IOSByteArray *encoded_;
}

- (void)force;

- (IOSByteArray *)getContents;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1LazyEncodedSequence, encoded_, IOSByteArray *)

__attribute__((unused)) static void OrgBouncycastleAsn1LazyEncodedSequence_force(OrgBouncycastleAsn1LazyEncodedSequence *self);

__attribute__((unused)) static IOSByteArray *OrgBouncycastleAsn1LazyEncodedSequence_getContents(OrgBouncycastleAsn1LazyEncodedSequence *self);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/LazyEncodedSequence.java"


#line 10
@implementation OrgBouncycastleAsn1LazyEncodedSequence


#line 15
- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)encoded {
  OrgBouncycastleAsn1LazyEncodedSequence_initPackagePrivateWithByteArray_(self, encoded);
  return self;
}


#line 26
- (id<OrgBouncycastleAsn1ASN1Encodable>)getObjectAtWithInt:(jint)index {
  
#line 29
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 31
  return [super getObjectAtWithInt:index];
}


#line 34
- (id<JavaUtilEnumeration>)getObjects {
  
#line 37
  IOSByteArray *encoded = OrgBouncycastleAsn1LazyEncodedSequence_getContents(self);
  if (nil != encoded) {
    
#line 40
    return new_OrgBouncycastleAsn1LazyConstructionEnumeration_initPackagePrivateWithByteArray_(encoded);
  }
  
#line 43
  return [super getObjects];
}


#line 46
- (NSUInteger)hash {
  
#line 49
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 51
  return ((jint) [super hash]);
}


#line 54
- (id<JavaUtilIterator>)iterator {
  
#line 57
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 59
  return [super iterator];
}


#line 62
- (jint)size {
  
#line 65
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 67
  return [super size];
}


#line 70
- (IOSObjectArray *)toArray {
  
#line 73
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 75
  return [super toArray];
}


#line 78
- (IOSObjectArray *)toArrayInternal {
  
#line 81
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 83
  return [super toArrayInternal];
}


#line 86
- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 90
  IOSByteArray *encoded = OrgBouncycastleAsn1LazyEncodedSequence_getContents(self);
  if (nil != encoded) {
    
#line 93
    return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, encoded->size_);
  }
  
#line 96
  return [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([super toDLObject])) encodedLengthWithBoolean:withTag];
}


#line 99
- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 102
  IOSByteArray *encoded = OrgBouncycastleAsn1LazyEncodedSequence_getContents(self);
  if (nil != encoded) {
    
#line 105
    [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_CONSTRUCTED | OrgBouncycastleAsn1BERTags_SEQUENCE withByteArray:encoded];
    return;
  }
  
#line 109
  [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([super toDLObject])) encodeWithOrgBouncycastleAsn1ASN1OutputStream:outArg withBoolean:withTag];
}


#line 112
- (OrgBouncycastleAsn1ASN1BitString *)toASN1BitString {
  
#line 115
  return [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(((OrgBouncycastleAsn1ASN1Sequence *) cast_chk([self toDLObject], [OrgBouncycastleAsn1ASN1Sequence class])))) toASN1BitString];
}

- (OrgBouncycastleAsn1ASN1External *)toASN1External {
  
#line 121
  return [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(((OrgBouncycastleAsn1ASN1Sequence *) cast_chk([self toDLObject], [OrgBouncycastleAsn1ASN1Sequence class])))) toASN1External];
}

- (OrgBouncycastleAsn1ASN1OctetString *)toASN1OctetString {
  
#line 127
  return [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(((OrgBouncycastleAsn1ASN1Sequence *) cast_chk([self toDLObject], [OrgBouncycastleAsn1ASN1Sequence class])))) toASN1OctetString];
}

- (OrgBouncycastleAsn1ASN1Set *)toASN1Set {
  
#line 133
  return [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(((OrgBouncycastleAsn1ASN1Sequence *) cast_chk([self toDLObject], [OrgBouncycastleAsn1ASN1Sequence class])))) toASN1Set];
}

- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject {
  
#line 139
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 141
  return [super toDERObject];
}


#line 144
- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject {
  
#line 147
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
  
#line 149
  return [super toDLObject];
}


#line 152
- (void)force {
  OrgBouncycastleAsn1LazyEncodedSequence_force(self);
}


#line 172
- (IOSByteArray *)getContents {
  return OrgBouncycastleAsn1LazyEncodedSequence_getContents(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1Encodable;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 6, 7, 1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 9, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1BitString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1External;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1OctetString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x22, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x22, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithByteArray:);
  methods[1].selector = @selector(getObjectAtWithInt:);
  methods[2].selector = @selector(getObjects);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(iterator);
  methods[5].selector = @selector(size);
  methods[6].selector = @selector(toArray);
  methods[7].selector = @selector(toArrayInternal);
  methods[8].selector = @selector(encodedLengthWithBoolean:);
  methods[9].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[10].selector = @selector(toASN1BitString);
  methods[11].selector = @selector(toASN1External);
  methods[12].selector = @selector(toASN1OctetString);
  methods[13].selector = @selector(toASN1Set);
  methods[14].selector = @selector(toDERObject);
  methods[15].selector = @selector(toDLObject);
  methods[16].selector = @selector(force);
  methods[17].selector = @selector(getContents);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "encoded_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "LJavaIoIOException;", "getObjectAt", "I", "hashCode", "()Ljava/util/Iterator<Lorg/bouncycastle/asn1/ASN1Encodable;>;", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1LazyEncodedSequence = { "LazyEncodedSequence", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x0, 18, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1LazyEncodedSequence;
}

@end


#line 15
void OrgBouncycastleAsn1LazyEncodedSequence_initPackagePrivateWithByteArray_(OrgBouncycastleAsn1LazyEncodedSequence *self, IOSByteArray *encoded) {
  OrgBouncycastleAsn1ASN1Sequence_init(self);
  
#line 18
  if (nil == encoded) {
    
#line 20
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'encoded' cannot be null");
  }
  
#line 23
  self->encoded_ = encoded;
}


#line 15
OrgBouncycastleAsn1LazyEncodedSequence *new_OrgBouncycastleAsn1LazyEncodedSequence_initPackagePrivateWithByteArray_(IOSByteArray *encoded) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1LazyEncodedSequence, initPackagePrivateWithByteArray_, encoded)
}


#line 15
OrgBouncycastleAsn1LazyEncodedSequence *create_OrgBouncycastleAsn1LazyEncodedSequence_initPackagePrivateWithByteArray_(IOSByteArray *encoded) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1LazyEncodedSequence, initPackagePrivateWithByteArray_, encoded)
}


#line 152
void OrgBouncycastleAsn1LazyEncodedSequence_force(OrgBouncycastleAsn1LazyEncodedSequence *self) {
  @synchronized(self) {
    if (nil != self->encoded_) {
      
#line 156
      OrgBouncycastleAsn1ASN1InputStream *aIn = new_OrgBouncycastleAsn1ASN1InputStream_initWithByteArray_withBoolean_(self->encoded_, true);
      @try {
        
#line 159
        OrgBouncycastleAsn1ASN1EncodableVector *v = [aIn readVector];
        [aIn close];
        
#line 162
        self->elements_ = [((OrgBouncycastleAsn1ASN1EncodableVector *) nil_chk(v)) takeElements];
        self->encoded_ = nil;
      }
      @catch (JavaIoIOException *e) {
        
#line 167
        @throw new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"malformed ASN.1: ", e), e);
      }
    }
  }
}


#line 172
IOSByteArray *OrgBouncycastleAsn1LazyEncodedSequence_getContents(OrgBouncycastleAsn1LazyEncodedSequence *self) {
  @synchronized(self) {
    return JreRetainedLocalValue(self->encoded_);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1LazyEncodedSequence)

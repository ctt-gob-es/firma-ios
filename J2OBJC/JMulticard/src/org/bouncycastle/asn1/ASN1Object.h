//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Object.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Object")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1Object
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Object 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Object 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1Object

#if !defined (OrgBouncycastleAsn1ASN1Object_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1Object || defined(INCLUDE_OrgBouncycastleAsn1ASN1Object))
#define OrgBouncycastleAsn1ASN1Object_

#define RESTRICT_OrgBouncycastleAsn1ASN1Encodable 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Encodable 1
#include "org/bouncycastle/asn1/ASN1Encodable.h"

#define RESTRICT_OrgBouncycastleUtilEncodable 1
#define INCLUDE_OrgBouncycastleUtilEncodable 1
#include "org/bouncycastle/util/Encodable.h"

@class IOSByteArray;
@class JavaIoOutputStream;
@class OrgBouncycastleAsn1ASN1Primitive;

/*!
 @brief Base class for defining an ASN.1 object.
 */
@interface OrgBouncycastleAsn1ASN1Object : NSObject < OrgBouncycastleAsn1ASN1Encodable, OrgBouncycastleUtilEncodable >

#pragma mark Public

- (instancetype)init;

- (void)encodeToWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (void)encodeToWithJavaIoOutputStream:(JavaIoOutputStream *)output
                          withNSString:(NSString *)encoding;

- (jboolean)isEqual:(id)o;

/*!
 @brief Return the default BER or DER encoding for this object.
 @return BER/DER byte encoded object.
 @throw java.io.IOExceptionon encoding error.
 */
- (IOSByteArray *)getEncoded;

/*!
 @brief Return either the default for "BER" or a DER encoding if "DER" is specified.
 @param encoding name of encoding to use.
 @return byte encoded object.
 @throw IOExceptionon encoding error.
 */
- (IOSByteArray *)getEncodedWithNSString:(NSString *)encoding;

- (NSUInteger)hash;

/*!
 @brief Method providing a primitive representation of this object suitable for encoding.
 @return a primitive representation of this object.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

#pragma mark Protected

/*!
 @brief Return true if obj is a byte array and represents an object with the given tag value.
 @param obj object of interest.
 @param tagValue tag value to check for.
 @return true if obj is a byte encoding starting with the given tag value, false otherwise.
 */
+ (jboolean)hasEncodedTagValueWithId:(id)obj
                             withInt:(jint)tagValue;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Object)

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1Object_init(OrgBouncycastleAsn1ASN1Object *self);

FOUNDATION_EXPORT jboolean OrgBouncycastleAsn1ASN1Object_hasEncodedTagValueWithId_withInt_(id obj, jint tagValue);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1Object)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Object")

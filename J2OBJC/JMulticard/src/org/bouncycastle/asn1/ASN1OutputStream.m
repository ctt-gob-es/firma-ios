//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1OutputStream.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DEROutputStream.h"
#include "org/bouncycastle/asn1/DLOutputStream.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1OutputStream must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1OutputStream () {
 @public
  JavaIoOutputStream *os_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1OutputStream, os_, JavaIoOutputStream *)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jint length);

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jint b);

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *self, IOSByteArray *bytes, jint off, jint len);

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jboolean withID, jint identifier);

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jboolean withID, jint flags, jint tag);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1OutputStream.java"


#line 9
@implementation OrgBouncycastleAsn1ASN1OutputStream

+ (OrgBouncycastleAsn1ASN1OutputStream *)createWithJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  return OrgBouncycastleAsn1ASN1OutputStream_createWithJavaIoOutputStream_(outArg);
}


#line 16
+ (OrgBouncycastleAsn1ASN1OutputStream *)createWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                                         withNSString:(NSString *)encoding {
  return OrgBouncycastleAsn1ASN1OutputStream_createWithJavaIoOutputStream_withNSString_(outArg, encoding);
}


#line 34
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os {
  OrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(self, os);
  return self;
}

- (void)close {
  
#line 41
  [((JavaIoOutputStream *) nil_chk(os_)) close];
}


#line 44
- (void)flush {
  
#line 46
  [((JavaIoOutputStream *) nil_chk(os_)) flush];
}


#line 49
- (void)writeObjectWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)encodable {
  
#line 51
  if (nil == encodable) {
    
#line 53
    @throw new_JavaIoIOException_initWithNSString_(@"null object detected");
  }
  
#line 56
  [self writePrimitiveWithOrgBouncycastleAsn1ASN1Primitive:[encodable toASN1Primitive] withBoolean:true];
  [self flushInternal];
}


#line 60
- (void)writeObjectWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive {
  
#line 62
  if (nil == primitive) {
    
#line 64
    @throw new_JavaIoIOException_initWithNSString_(@"null object detected");
  }
  
#line 67
  [self writePrimitiveWithOrgBouncycastleAsn1ASN1Primitive:primitive withBoolean:true];
  [self flushInternal];
}


#line 71
- (void)flushInternal {
}


#line 76
- (OrgBouncycastleAsn1DEROutputStream *)getDERSubStream {
  
#line 78
  return new_OrgBouncycastleAsn1DEROutputStream_initPackagePrivateWithJavaIoOutputStream_(os_);
}


#line 81
- (OrgBouncycastleAsn1DLOutputStream *)getDLSubStream {
  
#line 83
  return new_OrgBouncycastleAsn1DLOutputStream_initPackagePrivateWithJavaIoOutputStream_(os_);
}


#line 86
- (void)writeDLWithInt:(jint)length {
  OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(self, length);
}


#line 111
- (void)writeWithInt:(jint)b {
  OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, b);
}


#line 116
- (void)writeWithByteArray:(IOSByteArray *)bytes
                   withInt:(jint)off
                   withInt:(jint)len {
  OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, bytes, off, len);
}


#line 121
- (void)writeElementsWithOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements {
  
#line 124
  for (jint i = 0, count = ((IOSObjectArray *) nil_chk(elements))->size_; i < count; ++i) {
    
#line 126
    [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(IOSObjectArray_Get(elements, i))) toASN1Primitive])) encodeWithOrgBouncycastleAsn1ASN1OutputStream:self withBoolean:true];
  }
}


#line 130
- (void)writeEncodingDLWithBoolean:(jboolean)withID
                           withInt:(jint)identifier
                          withByte:(jbyte)contents {
  
#line 132
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(self, withID, identifier);
  OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(self, 1);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, contents);
}


#line 137
- (void)writeEncodingDLWithBoolean:(jboolean)withID
                           withInt:(jint)identifier
                     withByteArray:(IOSByteArray *)contents {
  
#line 139
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(self, withID, identifier);
  OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(self, ((IOSByteArray *) nil_chk(contents))->size_);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, contents, 0, contents->size_);
}


#line 144
- (void)writeEncodingDLWithBoolean:(jboolean)withID
                           withInt:(jint)identifier
                     withByteArray:(IOSByteArray *)contents
                           withInt:(jint)contentsOff
                           withInt:(jint)contentsLen {
  
#line 147
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(self, withID, identifier);
  OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(self, contentsLen);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, contents, contentsOff, contentsLen);
}


#line 152
- (void)writeEncodingDLWithBoolean:(jboolean)withID
                           withInt:(jint)identifier
                          withByte:(jbyte)contentsPrefix
                     withByteArray:(IOSByteArray *)contents
                           withInt:(jint)contentsOff
                           withInt:(jint)contentsLen {
  
#line 155
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(self, withID, identifier);
  OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(self, 1 + contentsLen);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, contentsPrefix);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, contents, contentsOff, contentsLen);
}


#line 161
- (void)writeEncodingDLWithBoolean:(jboolean)withID
                           withInt:(jint)identifier
                     withByteArray:(IOSByteArray *)contents
                           withInt:(jint)contentsOff
                           withInt:(jint)contentsLen
                          withByte:(jbyte)contentsSuffix {
  
#line 164
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(self, withID, identifier);
  OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(self, contentsLen + 1);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, contents, contentsOff, contentsLen);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, contentsSuffix);
}


#line 170
- (void)writeEncodingDLWithBoolean:(jboolean)withID
                           withInt:(jint)flags
                           withInt:(jint)tag
                     withByteArray:(IOSByteArray *)contents {
  
#line 172
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_withInt_(self, withID, flags, tag);
  OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(self, ((IOSByteArray *) nil_chk(contents))->size_);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, contents, 0, contents->size_);
}


#line 177
- (void)writeEncodingILWithBoolean:(jboolean)withID
                           withInt:(jint)identifier
withOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements {
  
#line 179
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(self, withID, identifier);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, (jint) 0x80);
  [self writeElementsWithOrgBouncycastleAsn1ASN1EncodableArray:elements];
  OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, (jint) 0x00);
  OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, (jint) 0x00);
}


#line 186
- (void)writeIdentifierWithBoolean:(jboolean)withID
                           withInt:(jint)identifier {
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(self, withID, identifier);
}


#line 194
- (void)writeIdentifierWithBoolean:(jboolean)withID
                           withInt:(jint)flags
                           withInt:(jint)tag {
  OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_withInt_(self, withID, flags, tag);
}


#line 222
- (void)writePrimitiveWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive
                                               withBoolean:(jboolean)withID {
  [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(primitive)) encodeWithOrgBouncycastleAsn1ASN1OutputStream:self withBoolean:withID];
}

- (void)writePrimitivesWithOrgBouncycastleAsn1ASN1PrimitiveArray:(IOSObjectArray *)primitives {
  
#line 229
  for (jint i = 0, count = ((IOSObjectArray *) nil_chk(primitives))->size_; i < count; ++i) {
    
#line 231
    [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(IOSObjectArray_Get(primitives, i))) encodeWithOrgBouncycastleAsn1ASN1OutputStream:self withBoolean:true];
  }
}


#line 235
+ (jint)getLengthOfDLWithInt:(jint)dl {
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfDLWithInt_(dl);
}


#line 250
+ (jint)getLengthOfEncodingDLWithBoolean:(jboolean)withID
                                 withInt:(jint)contentsLength {
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withID, contentsLength);
}

+ (jint)getLengthOfIdentifierWithInt:(jint)tag {
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfIdentifierWithInt_(tag);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1OutputStream;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1OutputStream;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x11, 4, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x11, 4, 6, 3, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1DEROutputStream;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1DLOutputStream;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 7, 8, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 9, 8, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 9, 10, 3, -1, -1, -1 },
    { NULL, "V", 0x0, 11, 12, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 13, 14, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 13, 15, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 13, 16, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 13, 17, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 13, 18, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 13, 19, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 20, 21, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 22, 23, 3, -1, -1, -1 },
    { NULL, "V", 0x10, 22, 24, 3, -1, -1, -1 },
    { NULL, "V", 0x0, 25, 26, 3, -1, -1, -1 },
    { NULL, "V", 0x0, 27, 28, 3, -1, -1, -1 },
    { NULL, "I", 0x8, 29, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 30, 23, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 31, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(createWithJavaIoOutputStream:);
  methods[1].selector = @selector(createWithJavaIoOutputStream:withNSString:);
  methods[2].selector = @selector(initWithJavaIoOutputStream:);
  methods[3].selector = @selector(close);
  methods[4].selector = @selector(flush);
  methods[5].selector = @selector(writeObjectWithOrgBouncycastleAsn1ASN1Encodable:);
  methods[6].selector = @selector(writeObjectWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[7].selector = @selector(flushInternal);
  methods[8].selector = @selector(getDERSubStream);
  methods[9].selector = @selector(getDLSubStream);
  methods[10].selector = @selector(writeDLWithInt:);
  methods[11].selector = @selector(writeWithInt:);
  methods[12].selector = @selector(writeWithByteArray:withInt:withInt:);
  methods[13].selector = @selector(writeElementsWithOrgBouncycastleAsn1ASN1EncodableArray:);
  methods[14].selector = @selector(writeEncodingDLWithBoolean:withInt:withByte:);
  methods[15].selector = @selector(writeEncodingDLWithBoolean:withInt:withByteArray:);
  methods[16].selector = @selector(writeEncodingDLWithBoolean:withInt:withByteArray:withInt:withInt:);
  methods[17].selector = @selector(writeEncodingDLWithBoolean:withInt:withByte:withByteArray:withInt:withInt:);
  methods[18].selector = @selector(writeEncodingDLWithBoolean:withInt:withByteArray:withInt:withInt:withByte:);
  methods[19].selector = @selector(writeEncodingDLWithBoolean:withInt:withInt:withByteArray:);
  methods[20].selector = @selector(writeEncodingILWithBoolean:withInt:withOrgBouncycastleAsn1ASN1EncodableArray:);
  methods[21].selector = @selector(writeIdentifierWithBoolean:withInt:);
  methods[22].selector = @selector(writeIdentifierWithBoolean:withInt:withInt:);
  methods[23].selector = @selector(writePrimitiveWithOrgBouncycastleAsn1ASN1Primitive:withBoolean:);
  methods[24].selector = @selector(writePrimitivesWithOrgBouncycastleAsn1ASN1PrimitiveArray:);
  methods[25].selector = @selector(getLengthOfDLWithInt:);
  methods[26].selector = @selector(getLengthOfEncodingDLWithBoolean:withInt:);
  methods[27].selector = @selector(getLengthOfIdentifierWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "os_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "LJavaIoOutputStream;", "LJavaIoOutputStream;LNSString;", "LJavaIoIOException;", "writeObject", "LOrgBouncycastleAsn1ASN1Encodable;", "LOrgBouncycastleAsn1ASN1Primitive;", "writeDL", "I", "write", "[BII", "writeElements", "[LOrgBouncycastleAsn1ASN1Encodable;", "writeEncodingDL", "ZIB", "ZI[B", "ZI[BII", "ZIB[BII", "ZI[BIIB", "ZII[B", "writeEncodingIL", "ZI[LOrgBouncycastleAsn1ASN1Encodable;", "writeIdentifier", "ZI", "ZII", "writePrimitive", "LOrgBouncycastleAsn1ASN1Primitive;Z", "writePrimitives", "[LOrgBouncycastleAsn1ASN1Primitive;", "getLengthOfDL", "getLengthOfEncodingDL", "getLengthOfIdentifier" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1OutputStream = { "ASN1OutputStream", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 28, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1OutputStream;
}

@end


#line 11
OrgBouncycastleAsn1ASN1OutputStream *OrgBouncycastleAsn1ASN1OutputStream_createWithJavaIoOutputStream_(JavaIoOutputStream *outArg) {
  OrgBouncycastleAsn1ASN1OutputStream_initialize();
  return new_OrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(outArg);
}

OrgBouncycastleAsn1ASN1OutputStream *OrgBouncycastleAsn1ASN1OutputStream_createWithJavaIoOutputStream_withNSString_(JavaIoOutputStream *outArg, NSString *encoding) {
  OrgBouncycastleAsn1ASN1OutputStream_initialize();
  if ([((NSString *) nil_chk(encoding)) isEqual:OrgBouncycastleAsn1ASN1Encoding_DER]) {
    
#line 20
    return new_OrgBouncycastleAsn1DEROutputStream_initPackagePrivateWithJavaIoOutputStream_(outArg);
  }
  else if ([encoding isEqual:OrgBouncycastleAsn1ASN1Encoding_DL]) {
    
#line 24
    return new_OrgBouncycastleAsn1DLOutputStream_initPackagePrivateWithJavaIoOutputStream_(outArg);
  }
  else {
    
#line 28
    return new_OrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(outArg);
  }
}


#line 34
void OrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(OrgBouncycastleAsn1ASN1OutputStream *self, JavaIoOutputStream *os) {
  NSObject_init(self);
  self->os_ = os;
}


#line 34
OrgBouncycastleAsn1ASN1OutputStream *new_OrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *os) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1OutputStream, initWithJavaIoOutputStream_, os)
}


#line 34
OrgBouncycastleAsn1ASN1OutputStream *create_OrgBouncycastleAsn1ASN1OutputStream_initWithJavaIoOutputStream_(JavaIoOutputStream *os) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1OutputStream, initWithJavaIoOutputStream_, os)
}


#line 86
void OrgBouncycastleAsn1ASN1OutputStream_writeDLWithInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jint length) {
  
#line 88
  if (length < 128) {
    
#line 90
    OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, length);
  }
  else {
    
#line 94
    IOSByteArray *stack = [IOSByteArray newArrayWithLength:5];
    jint pos = stack->size_;
    
#line 97
    do {
      
#line 99
      *IOSByteArray_GetRef(stack, --pos) = (jbyte) length;
      JreURShiftAssignInt(&length, 8);
    }
    while (length != 0);
    
#line 104
    jint count = stack->size_ - pos;
    *IOSByteArray_GetRef(stack, --pos) = (jbyte) ((jint) 0x80 | count);
    
#line 107
    OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, stack, pos, count + 1);
  }
}


#line 111
void OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jint b) {
  
#line 113
  [((JavaIoOutputStream *) nil_chk(self->os_)) writeWithInt:b];
}


#line 116
void OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *self, IOSByteArray *bytes, jint off, jint len) {
  
#line 118
  [((JavaIoOutputStream *) nil_chk(self->os_)) writeWithByteArray:bytes withInt:off withInt:len];
}


#line 186
void OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jboolean withID, jint identifier) {
  
#line 188
  if (withID) {
    
#line 190
    OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, identifier);
  }
}


#line 194
void OrgBouncycastleAsn1ASN1OutputStream_writeIdentifierWithBoolean_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *self, jboolean withID, jint flags, jint tag) {
  
#line 196
  if (!withID) {
  }
  else
#line 200
  if (tag < 31) {
    
#line 202
    OrgBouncycastleAsn1ASN1OutputStream_writeWithInt_(self, flags | tag);
  }
  else {
    
#line 206
    IOSByteArray *stack = [IOSByteArray newArrayWithLength:6];
    jint pos = stack->size_;
    
#line 209
    *IOSByteArray_GetRef(stack, --pos) = (jbyte) (tag & (jint) 0x7F);
    while (tag > 127) {
      
#line 212
      JreURShiftAssignInt(&tag, 7);
      *IOSByteArray_GetRef(stack, --pos) = (jbyte) ((tag & (jint) 0x7F) | (jint) 0x80);
    }
    
#line 216
    *IOSByteArray_GetRef(stack, --pos) = (jbyte) (flags | (jint) 0x1F);
    
#line 218
    OrgBouncycastleAsn1ASN1OutputStream_writeWithByteArray_withInt_withInt_(self, stack, pos, stack->size_ - pos);
  }
}


#line 235
jint OrgBouncycastleAsn1ASN1OutputStream_getLengthOfDLWithInt_(jint dl) {
  OrgBouncycastleAsn1ASN1OutputStream_initialize();
  if (dl < 128) {
    
#line 239
    return 1;
  }
  
#line 242
  jint length = 2;
  while ((JreURShiftAssignInt(&dl, 8)) != 0) {
    
#line 245
    ++length;
  }
  return length;
}


#line 250
jint OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(jboolean withID, jint contentsLength) {
  OrgBouncycastleAsn1ASN1OutputStream_initialize();
  return (withID ? 1 : 0) + OrgBouncycastleAsn1ASN1OutputStream_getLengthOfDLWithInt_(contentsLength) + contentsLength;
}

jint OrgBouncycastleAsn1ASN1OutputStream_getLengthOfIdentifierWithInt_(jint tag) {
  OrgBouncycastleAsn1ASN1OutputStream_initialize();
  if (tag < 31) {
    
#line 259
    return 1;
  }
  
#line 262
  jint length = 2;
  while ((JreURShiftAssignInt(&tag, 7)) != 0) {
    
#line 265
    ++length;
  }
  return length;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1OutputStream)

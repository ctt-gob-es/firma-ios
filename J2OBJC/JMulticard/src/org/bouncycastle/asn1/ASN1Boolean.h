//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Boolean.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Boolean")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1Boolean
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Boolean 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1Boolean 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1Boolean

#if !defined (OrgBouncycastleAsn1ASN1Boolean_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1Boolean || defined(INCLUDE_OrgBouncycastleAsn1ASN1Boolean))
#define OrgBouncycastleAsn1ASN1Boolean_

#define RESTRICT_OrgBouncycastleAsn1ASN1Primitive 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Primitive 1
#include "org/bouncycastle/asn1/ASN1Primitive.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1OutputStream;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@class OrgBouncycastleAsn1ASN1UniversalType;

/*!
 @brief Public facade of ASN.1 Boolean data.
 <p>
  Use following to place a new instance of ASN.1 Boolean in your data: 
 <ul>
  <li> ASN1Boolean.TRUE literal</li>
  <li> ASN1Boolean.FALSE literal</li>
  <li> <code>ASN1Boolean.getInstance(boolean)</code></li>
  <li> <code>ASN1Boolean.getInstance(int)</code></li>
  </ul>
 */
@interface OrgBouncycastleAsn1ASN1Boolean : OrgBouncycastleAsn1ASN1Primitive

#pragma mark Public

/*!
 @brief Return a Boolean from a tagged object.
 @param taggedObject the tagged object holding the object we want
 @param explicit_ true if the object is meant to be explicitly               tagged false otherwise.
 @throw IllegalArgumentExceptionif the tagged object cannot
                be converted.
 @return an ASN1Boolean instance.
 */
+ (OrgBouncycastleAsn1ASN1Boolean *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                           withBoolean:(jboolean)explicit_;

/*!
 @brief Return an ASN1Boolean from the passed in boolean.
 @param value true or false depending on the ASN1Boolean wanted.
 @return an ASN1Boolean instance.
 */
+ (OrgBouncycastleAsn1ASN1Boolean *)getInstanceWithBoolean:(jboolean)value;

/*!
 @brief Return an ASN1Boolean from the passed in value.
 @param value non-zero (true) or zero (false) depending on the ASN1Boolean wanted.
 @return an ASN1Boolean instance.
 */
+ (OrgBouncycastleAsn1ASN1Boolean *)getInstanceWithInt:(jint)value;

/*!
 @brief Return a boolean from the passed in object.
 @param obj an ASN1Boolean or an object that can be converted into one.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 @return an ASN1Boolean instance.
 */
+ (OrgBouncycastleAsn1ASN1Boolean *)getInstanceWithId:(id)obj;

- (NSUInteger)hash;

- (jboolean)isTrue;

- (NSString *)description;

#pragma mark Package-Private

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other;

+ (OrgBouncycastleAsn1ASN1Boolean *)createPrimitiveWithByteArray:(IOSByteArray *)contents;

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag;

- (jboolean)encodeConstructed;

- (jint)encodedLengthWithBoolean:(jboolean)withTag;

- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleAsn1ASN1Boolean)

inline OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1Boolean_get_TYPE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1Boolean_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1Boolean, TYPE, OrgBouncycastleAsn1ASN1UniversalType *)

inline OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_get_FALSE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1Boolean, FALSE, OrgBouncycastleAsn1ASN1Boolean *)

inline OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_get_TRUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1Boolean, TRUE, OrgBouncycastleAsn1ASN1Boolean *)

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_getInstanceWithBoolean_(jboolean value);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_getInstanceWithInt_(jint value);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1Boolean *OrgBouncycastleAsn1ASN1Boolean_createPrimitiveWithByteArray_(IOSByteArray *contents);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1Boolean)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1Boolean")

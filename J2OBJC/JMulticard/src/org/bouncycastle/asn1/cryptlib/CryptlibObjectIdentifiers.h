//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/cryptlib/CryptlibObjectIdentifiers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers")
#ifdef RESTRICT_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers
#define INCLUDE_ALL_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers

#if !defined (OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_) && (INCLUDE_ALL_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers || defined(INCLUDE_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers))
#define OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_

@class OrgBouncycastleAsn1ASN1ObjectIdentifier;

@interface OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers)

inline OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_get_cryptlib(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_cryptlib;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers, cryptlib, OrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_get_ecc(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_ecc;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers, ecc, OrgBouncycastleAsn1ASN1ObjectIdentifier *)

inline OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_get_curvey25519(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_curvey25519;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers, curvey25519, OrgBouncycastleAsn1ASN1ObjectIdentifier *)

FOUNDATION_EXPORT void OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_init(OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers *self);

FOUNDATION_EXPORT OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers *new_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers *create_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1CryptlibCryptlibObjectIdentifiers")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/BERBitString.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/BERBitString.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DLBitString.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/BERBitString must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1BERBitString () {
 @public
  jint segmentLimit_;
  IOSObjectArray *elements_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1BERBitString, elements_, IOSObjectArray *)

inline jint OrgBouncycastleAsn1BERBitString_get_DEFAULT_SEGMENT_LIMIT(void);
#define OrgBouncycastleAsn1BERBitString_DEFAULT_SEGMENT_LIMIT 1000
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleAsn1BERBitString, DEFAULT_SEGMENT_LIMIT, jint)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/BERBitString.java"


#line 5
@implementation OrgBouncycastleAsn1BERBitString


#line 16
+ (IOSByteArray *)flattenBitStringsWithOrgBouncycastleAsn1ASN1BitStringArray:(IOSObjectArray *)bitStrings {
  return OrgBouncycastleAsn1BERBitString_flattenBitStringsWithOrgBouncycastleAsn1ASN1BitStringArray_(bitStrings);
}


#line 63
- (instancetype)initWithByteArray:(IOSByteArray *)data {
  OrgBouncycastleAsn1BERBitString_initWithByteArray_(self, data);
  return self;
}

- (instancetype)initWithByte:(jbyte)data
                     withInt:(jint)padBits {
  OrgBouncycastleAsn1BERBitString_initWithByte_withInt_(self, data, padBits);
  return self;
}


#line 75
- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)padBits {
  OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_(self, data, padBits);
  return self;
}


#line 80
- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)padBits
                          withInt:(jint)segmentLimit {
  OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_withInt_(self, data, padBits, segmentLimit);
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)obj {
  OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(self, obj);
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1BitStringArray:(IOSObjectArray *)elements {
  OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_(self, elements);
  return self;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1BitStringArray:(IOSObjectArray *)elements
                                                      withInt:(jint)segmentLimit {
  OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_withInt_(self, elements, segmentLimit);
  return self;
}


#line 104
- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)check {
  OrgBouncycastleAsn1BERBitString_initWithByteArray_withBoolean_(self, contents, check);
  return self;
}


#line 111
- (jboolean)encodeConstructed {
  
#line 114
  return nil != elements_ || ((IOSByteArray *) nil_chk(contents_))->size_ > segmentLimit_;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 121
  if (![self encodeConstructed]) {
    
#line 123
    return OrgBouncycastleAsn1DLBitString_encodedLengthWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(contents_))->size_);
  }
  
#line 126
  jint totalLength = withTag ? 4 : 3;
  
#line 128
  if (nil != elements_) {
    
#line 130
    for (jint i = 0; i < elements_->size_; ++i) {
      
#line 132
      totalLength += [((OrgBouncycastleAsn1ASN1BitString *) nil_chk(IOSObjectArray_Get(elements_, i))) encodedLengthWithBoolean:true];
    }
  }
  else if (((IOSByteArray *) nil_chk(contents_))->size_ < 2) {
  }
  else {
    
#line 141
    jint extraSegments = JreIntDiv((contents_->size_ - 2), (segmentLimit_ - 1));
    totalLength += extraSegments * OrgBouncycastleAsn1DLBitString_encodedLengthWithBoolean_withInt_(true, segmentLimit_);
    
#line 144
    jint lastSegmentLength = contents_->size_ - (extraSegments * (segmentLimit_ - 1));
    totalLength += OrgBouncycastleAsn1DLBitString_encodedLengthWithBoolean_withInt_(true, lastSegmentLength);
  }
  
#line 148
  return totalLength;
}


#line 151
- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 154
  if (![self encodeConstructed]) {
    
#line 156
    OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByteArray_withInt_withInt_(outArg, withTag, contents_, 0, ((IOSByteArray *) nil_chk(contents_))->size_);
    return;
  }
  
#line 160
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeIdentifierWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_CONSTRUCTED | OrgBouncycastleAsn1BERTags_BIT_STRING];
  [outArg writeWithInt:(jint) 0x80];
  
#line 163
  if (nil != elements_) {
    
#line 165
    [outArg writePrimitivesWithOrgBouncycastleAsn1ASN1PrimitiveArray:elements_];
  }
  else if (((IOSByteArray *) nil_chk(contents_))->size_ < 2) {
  }
  else {
    
#line 173
    jbyte pad = IOSByteArray_Get(contents_, 0);
    jint length = contents_->size_;
    jint remaining = length - 1;
    jint segmentLength = segmentLimit_ - 1;
    
#line 178
    while (remaining > segmentLength) {
      
#line 180
      OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByte_withByteArray_withInt_withInt_(outArg, true, (jbyte) 0, contents_, length - remaining, segmentLength);
      remaining -= segmentLength;
    }
    
#line 184
    OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByte_withByteArray_withInt_withInt_(outArg, true, pad, contents_, length - remaining, remaining);
  }
  
#line 187
  [outArg writeWithInt:(jint) 0x00];
  [outArg writeWithInt:(jint) 0x00];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, 7, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 10, 11, 7, -1, -1, -1 },
    { NULL, "V", 0x0, 12, 13, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(flattenBitStringsWithOrgBouncycastleAsn1ASN1BitStringArray:);
  methods[1].selector = @selector(initWithByteArray:);
  methods[2].selector = @selector(initWithByte:withInt:);
  methods[3].selector = @selector(initWithByteArray:withInt:);
  methods[4].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[5].selector = @selector(initWithOrgBouncycastleAsn1ASN1Encodable:);
  methods[6].selector = @selector(initWithOrgBouncycastleAsn1ASN1BitStringArray:);
  methods[7].selector = @selector(initWithOrgBouncycastleAsn1ASN1BitStringArray:withInt:);
  methods[8].selector = @selector(initWithByteArray:withBoolean:);
  methods[9].selector = @selector(encodeConstructed);
  methods[10].selector = @selector(encodedLengthWithBoolean:);
  methods[11].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_SEGMENT_LIMIT", "I", .constantValue.asInt = OrgBouncycastleAsn1BERBitString_DEFAULT_SEGMENT_LIMIT, 0x1a, -1, -1, -1, -1 },
    { "segmentLimit_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "elements_", "[LOrgBouncycastleAsn1ASN1BitString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "flattenBitStrings", "[LOrgBouncycastleAsn1ASN1BitString;", "[B", "BI", "[BI", "[BII", "LOrgBouncycastleAsn1ASN1Encodable;", "LJavaIoIOException;", "[LOrgBouncycastleAsn1ASN1BitString;I", "[BZ", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1BERBitString = { "BERBitString", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 12, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1BERBitString;
}

@end


#line 16
IOSByteArray *OrgBouncycastleAsn1BERBitString_flattenBitStringsWithOrgBouncycastleAsn1ASN1BitStringArray_(IOSObjectArray *bitStrings) {
  OrgBouncycastleAsn1BERBitString_initialize();
  jint count = ((IOSObjectArray *) nil_chk(bitStrings))->size_;
  switch (count) {
    
#line 21
    case 0:
    
#line 23
    return [IOSByteArray newArrayWithBytes:(jbyte[]){ 0 } count:1];
    case 1:
    return ((OrgBouncycastleAsn1ASN1BitString *) nil_chk(IOSObjectArray_Get(bitStrings, 0)))->contents_;
    default:
    {
      jint last = count - 1;
      
#line 28
      jint totalLength = 0;
      for (jint i = 0; i < last; ++i) {
        
#line 31
        IOSByteArray *elementContents = ((OrgBouncycastleAsn1ASN1BitString *) nil_chk(IOSObjectArray_Get(bitStrings, i)))->contents_;
        if (IOSByteArray_Get(nil_chk(elementContents), 0) != 0) {
          
#line 34
          @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"only the last nested bitstring can have padding");
        }
        
#line 37
        totalLength += elementContents->size_ - 1;
      }
      
#line 41
      IOSByteArray *lastElementContents = ((OrgBouncycastleAsn1ASN1BitString *) nil_chk(IOSObjectArray_Get(bitStrings, last)))->contents_;
      jbyte padBits = IOSByteArray_Get(nil_chk(lastElementContents), 0);
      totalLength += lastElementContents->size_;
      
#line 45
      IOSByteArray *contents = [IOSByteArray newArrayWithLength:totalLength];
      *IOSByteArray_GetRef(contents, 0) = padBits;
      
#line 48
      jint pos = 1;
      for (jint i = 0; i < count; ++i) {
        
#line 51
        IOSByteArray *elementContents = ((OrgBouncycastleAsn1ASN1BitString *) nil_chk(IOSObjectArray_Get(bitStrings, i)))->contents_;
        jint length = ((IOSByteArray *) nil_chk(elementContents))->size_ - 1;
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(elementContents, 1, contents, pos, length);
        pos += length;
      }
      
#line 58
      return contents;
    }
  }
}


#line 63
void OrgBouncycastleAsn1BERBitString_initWithByteArray_(OrgBouncycastleAsn1BERBitString *self, IOSByteArray *data) {
  OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_(self,
#line 65
  data, 0);
}


#line 63
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_, data)
}


#line 63
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_, data)
}


#line 68
void OrgBouncycastleAsn1BERBitString_initWithByte_withInt_(OrgBouncycastleAsn1BERBitString *self, jbyte data, jint padBits) {
  OrgBouncycastleAsn1ASN1BitString_initWithByte_withInt_(self,
#line 70
  data, padBits);
  self->elements_ = nil;
  self->segmentLimit_ = OrgBouncycastleAsn1BERBitString_DEFAULT_SEGMENT_LIMIT;
}


#line 68
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithByte_withInt_(jbyte data, jint padBits) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithByte_withInt_, data, padBits)
}


#line 68
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithByte_withInt_(jbyte data, jint padBits) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithByte_withInt_, data, padBits)
}


#line 75
void OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_(OrgBouncycastleAsn1BERBitString *self, IOSByteArray *data, jint padBits) {
  OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_withInt_(self,
#line 77
  data, padBits, OrgBouncycastleAsn1BERBitString_DEFAULT_SEGMENT_LIMIT);
}


#line 75
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_withInt_, data, padBits)
}


#line 75
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_withInt_, data, padBits)
}


#line 80
void OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_withInt_(OrgBouncycastleAsn1BERBitString *self, IOSByteArray *data, jint padBits, jint segmentLimit) {
  OrgBouncycastleAsn1ASN1BitString_initWithByteArray_withInt_(self,
#line 82
  data, padBits);
  self->elements_ = nil;
  self->segmentLimit_ = segmentLimit;
}


#line 80
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint padBits, jint segmentLimit) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_withInt_withInt_, data, padBits, segmentLimit)
}


#line 80
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint padBits, jint segmentLimit) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_withInt_withInt_, data, padBits, segmentLimit)
}


#line 87
void OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1BERBitString *self, id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_(self,
#line 89
  [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(obj)) toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER], 0);
}


#line 87
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithOrgBouncycastleAsn1ASN1Encodable_, obj)
}


#line 87
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithOrgBouncycastleAsn1ASN1Encodable_, obj)
}


#line 92
void OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_(OrgBouncycastleAsn1BERBitString *self, IOSObjectArray *elements) {
  OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_withInt_(self,
#line 94
  elements, OrgBouncycastleAsn1BERBitString_DEFAULT_SEGMENT_LIMIT);
}


#line 92
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_(IOSObjectArray *elements) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithOrgBouncycastleAsn1ASN1BitStringArray_, elements)
}


#line 92
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_(IOSObjectArray *elements) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithOrgBouncycastleAsn1ASN1BitStringArray_, elements)
}


#line 97
void OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_withInt_(OrgBouncycastleAsn1BERBitString *self, IOSObjectArray *elements, jint segmentLimit) {
  OrgBouncycastleAsn1ASN1BitString_initWithByteArray_withBoolean_(self, OrgBouncycastleAsn1BERBitString_flattenBitStringsWithOrgBouncycastleAsn1ASN1BitStringArray_(
#line 99
  elements), false);
  self->elements_ = elements;
  self->segmentLimit_ = segmentLimit;
}


#line 97
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_withInt_(IOSObjectArray *elements, jint segmentLimit) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithOrgBouncycastleAsn1ASN1BitStringArray_withInt_, elements, segmentLimit)
}


#line 97
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithOrgBouncycastleAsn1ASN1BitStringArray_withInt_(IOSObjectArray *elements, jint segmentLimit) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithOrgBouncycastleAsn1ASN1BitStringArray_withInt_, elements, segmentLimit)
}


#line 104
void OrgBouncycastleAsn1BERBitString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1BERBitString *self, IOSByteArray *contents, jboolean check) {
  OrgBouncycastleAsn1ASN1BitString_initWithByteArray_withBoolean_(self,
#line 106
  contents, check);
  self->elements_ = nil;
  self->segmentLimit_ = OrgBouncycastleAsn1BERBitString_DEFAULT_SEGMENT_LIMIT;
}


#line 104
OrgBouncycastleAsn1BERBitString *new_OrgBouncycastleAsn1BERBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_withBoolean_, contents, check)
}


#line 104
OrgBouncycastleAsn1BERBitString *create_OrgBouncycastleAsn1BERBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitString, initWithByteArray_withBoolean_, contents, check)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1BERBitString)

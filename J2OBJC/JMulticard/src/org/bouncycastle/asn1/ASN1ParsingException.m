//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ParsingException.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Throwable.h"
#include "org/bouncycastle/asn1/ASN1ParsingException.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1ParsingException must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1ParsingException () {
 @public
  JavaLangThrowable *cause_ASN1ParsingException_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1ParsingException, cause_ASN1ParsingException_, JavaLangThrowable *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ParsingException.java"


#line 6
@implementation OrgBouncycastleAsn1ASN1ParsingException


#line 16
- (instancetype)initWithNSString:(NSString *)message {
  OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_(self, message);
  return self;
}


#line 27
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}


#line 38
- (JavaLangThrowable *)getCause {
  
#line 41
  return cause_ASN1ParsingException_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[2].selector = @selector(getCause);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cause_ASN1ParsingException_", "LJavaLangThrowable;", .constantValue.asLong = 0, 0x2, 2, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LJavaLangThrowable;", "cause" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1ParsingException = { "ASN1ParsingException", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1ParsingException;
}

@end


#line 16
void OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_(OrgBouncycastleAsn1ASN1ParsingException *self, NSString *message) {
  JavaLangIllegalStateException_initWithNSString_(self,
#line 18
  message);
}


#line 16
OrgBouncycastleAsn1ASN1ParsingException *new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1ParsingException, initWithNSString_, message)
}


#line 16
OrgBouncycastleAsn1ASN1ParsingException *create_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1ParsingException, initWithNSString_, message)
}


#line 27
void OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(OrgBouncycastleAsn1ASN1ParsingException *self, NSString *message, JavaLangThrowable *cause) {
  JavaLangIllegalStateException_initWithNSString_(self,
#line 29
  message);
  self->cause_ASN1ParsingException_ = cause;
}


#line 27
OrgBouncycastleAsn1ASN1ParsingException *new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1ParsingException, initWithNSString_withJavaLangThrowable_, message, cause)
}


#line 27
OrgBouncycastleAsn1ASN1ParsingException *create_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1ParsingException, initWithNSString_withJavaLangThrowable_, message, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1ParsingException)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Sequence.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Iterable.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Enumeration.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1External.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1SequenceParser.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/ASN1SetParser.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/DLSequence.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1Sequence must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1Sequence_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitConstructedWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)sequence;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Sequence_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1Sequence_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Sequence_1 *new_OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Sequence_1 *create_OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

@interface OrgBouncycastleAsn1ASN1Sequence_2 : NSObject < JavaUtilEnumeration > {
 @public
  OrgBouncycastleAsn1ASN1Sequence *this$0_;
  jint pos_;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)outer$;

- (jboolean)hasMoreElements;

- (id)nextElement;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Sequence_2)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_2 *self, OrgBouncycastleAsn1ASN1Sequence *outer$);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Sequence_2 *new_OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Sequence_2 *create_OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *outer$);

@interface OrgBouncycastleAsn1ASN1Sequence_3 : NSObject < OrgBouncycastleAsn1ASN1SequenceParser > {
 @public
  OrgBouncycastleAsn1ASN1Sequence *this$0_;
  jint val$count_;
  jint pos_;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)outer$
                                                withInt:(jint)capture$0;

- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject;

- (OrgBouncycastleAsn1ASN1Primitive *)getLoadedObject;

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Sequence_3)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(OrgBouncycastleAsn1ASN1Sequence_3 *self, OrgBouncycastleAsn1ASN1Sequence *outer$, jint capture$0);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Sequence_3 *new_OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(OrgBouncycastleAsn1ASN1Sequence *outer$, jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Sequence_3 *create_OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(OrgBouncycastleAsn1ASN1Sequence *outer$, jint capture$0);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Sequence.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1Sequence)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1Sequence_TYPE;


#line 59
@implementation OrgBouncycastleAsn1ASN1Sequence


#line 79
+ (OrgBouncycastleAsn1ASN1Sequence *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj);
}


#line 126
+ (OrgBouncycastleAsn1ASN1Sequence *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                            withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1Sequence_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 137
- (instancetype)init {
  OrgBouncycastleAsn1ASN1Sequence_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 146
- (instancetype)initWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)element {
  OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1Encodable_(self, element);
  return self;
}


#line 160
- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)elementVector {
  OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(self, elementVector);
  return self;
}


#line 174
- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements {
  OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_(self, elements);
  return self;
}


#line 184
- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableArray:(IOSObjectArray *)elements
                                                  withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_withBoolean_(self, elements, clone);
  return self;
}


#line 189
- (IOSObjectArray *)toArray {
  
#line 191
  return OrgBouncycastleAsn1ASN1EncodableVector_cloneElementsWithOrgBouncycastleAsn1ASN1EncodableArray_(elements_);
}


#line 194
- (IOSObjectArray *)toArrayInternal {
  
#line 196
  return elements_;
}


#line 199
- (id<JavaUtilEnumeration>)getObjects {
  
#line 201
  return new_OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(self);
}


#line 223
- (id<OrgBouncycastleAsn1ASN1SequenceParser>)parser {
  
#line 226
  jint count = [self size];
  
#line 228
  return new_OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(self, count);
}


#line 273
- (id<OrgBouncycastleAsn1ASN1Encodable>)getObjectAtWithInt:(jint)index {
  
#line 275
  return IOSObjectArray_Get(nil_chk(elements_), index);
}


#line 283
- (jint)size {
  
#line 285
  return ((IOSObjectArray *) nil_chk(elements_))->size_;
}


#line 288
- (NSUInteger)hash {
  
#line 292
  jint i = ((IOSObjectArray *) nil_chk(elements_))->size_;
  jint hc = i + 1;
  
#line 295
  while (--i >= 0) {
    
#line 297
    hc *= 257;
    hc ^= ((jint) [((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(IOSObjectArray_Get(nil_chk(elements_), i))) toASN1Primitive])) hash]);
  }
  
#line 301
  return hc;
}


#line 304
- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other {
  
#line 307
  if (!([other isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]])) {
    
#line 309
    return false;
  }
  
#line 312
  OrgBouncycastleAsn1ASN1Sequence *that = (OrgBouncycastleAsn1ASN1Sequence *) cast_chk(other, [OrgBouncycastleAsn1ASN1Sequence class]);
  
#line 315
  jint count = [self size];
  if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(that)) size] != count) {
    
#line 318
    return false;
  }
  
#line 321
  for (jint i = 0; i < count; ++i) {
    
#line 323
    OrgBouncycastleAsn1ASN1Primitive *p1 = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(IOSObjectArray_Get(nil_chk(elements_), i))) toASN1Primitive];
    OrgBouncycastleAsn1ASN1Primitive *p2 = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(IOSObjectArray_Get(nil_chk(that->elements_), i))) toASN1Primitive];
    
#line 326
    if (!JreObjectEqualsEquals(p1, p2) && ![((OrgBouncycastleAsn1ASN1Primitive *) nil_chk(p1)) asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:p2]) {
      
#line 328
      return false;
    }
  }
  
#line 332
  return true;
}


#line 339
- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject {
  
#line 342
  return new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_withBoolean_(elements_, false);
}


#line 349
- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject {
  
#line 352
  return new_OrgBouncycastleAsn1DLSequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_withBoolean_(elements_, false);
}

- (OrgBouncycastleAsn1ASN1BitString *)toASN1BitString {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 357
- (OrgBouncycastleAsn1ASN1External *)toASN1External {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 359
- (OrgBouncycastleAsn1ASN1OctetString *)toASN1OctetString {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 361
- (OrgBouncycastleAsn1ASN1Set *)toASN1Set {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 363
- (jboolean)encodeConstructed {
  
#line 366
  return true;
}

- (NSString *)description {
  
#line 373
  jint count = [self size];
  if (0 == count) {
    
#line 376
    return @"[]";
  }
  
#line 379
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithChar:'['];
  for (jint i = 0; ; ) {
    
#line 383
    (void) [sb appendWithId:IOSObjectArray_Get(nil_chk(elements_), i)];
    if (++i >= count) {
      
#line 386
      break;
    }
    (void) [sb appendWithNSString:@", "];
  }
  (void) [sb appendWithChar:']'];
  return [sb description];
}


#line 394
- (id<JavaUtilIterator>)iterator {
  
#line 397
  return new_OrgBouncycastleUtilArrays_Iterator_initWithNSObjectArray_(elements_);
}

- (IOSObjectArray *)getConstructedBitStrings {
  
#line 403
  jint count = [self size];
  IOSObjectArray *bitStrings = [IOSObjectArray newArrayWithLength:count type:OrgBouncycastleAsn1ASN1BitString_class_()];
  for (jint i = 0; i < count; ++i) {
    
#line 407
    (void) IOSObjectArray_Set(bitStrings, i, OrgBouncycastleAsn1ASN1BitString_getInstanceWithId_(IOSObjectArray_Get(nil_chk(elements_), i)));
  }
  return bitStrings;
}


#line 412
- (IOSObjectArray *)getConstructedOctetStrings {
  
#line 415
  jint count = [self size];
  IOSObjectArray *octetStrings = [IOSObjectArray newArrayWithLength:count type:OrgBouncycastleAsn1ASN1OctetString_class_()];
  for (jint i = 0; i < count; ++i) {
    
#line 419
    (void) IOSObjectArray_Set(octetStrings, i, OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(IOSObjectArray_Get(nil_chk(elements_), i)));
  }
  return octetStrings;
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1Sequence;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Sequence;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1Encodable;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1SequenceParser;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1BitString;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1External;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1OctetString;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 13, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1BitString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1OctetString;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(initWithOrgBouncycastleAsn1ASN1Encodable:);
  methods[4].selector = @selector(initWithOrgBouncycastleAsn1ASN1EncodableVector:);
  methods[5].selector = @selector(initWithOrgBouncycastleAsn1ASN1EncodableArray:);
  methods[6].selector = @selector(initWithOrgBouncycastleAsn1ASN1EncodableArray:withBoolean:);
  methods[7].selector = @selector(toArray);
  methods[8].selector = @selector(toArrayInternal);
  methods[9].selector = @selector(getObjects);
  methods[10].selector = @selector(parser);
  methods[11].selector = @selector(getObjectAtWithInt:);
  methods[12].selector = @selector(size);
  methods[13].selector = @selector(hash);
  methods[14].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[15].selector = @selector(toDERObject);
  methods[16].selector = @selector(toDLObject);
  methods[17].selector = @selector(toASN1BitString);
  methods[18].selector = @selector(toASN1External);
  methods[19].selector = @selector(toASN1OctetString);
  methods[20].selector = @selector(toASN1Set);
  methods[21].selector = @selector(encodeConstructed);
  methods[22].selector = @selector(description);
  methods[23].selector = @selector(iterator);
  methods[24].selector = @selector(getConstructedBitStrings);
  methods[25].selector = @selector(getConstructedOctetStrings);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 14, -1, -1 },
    { "elements_", "[LOrgBouncycastleAsn1ASN1Encodable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LOrgBouncycastleAsn1ASN1Encodable;", "LOrgBouncycastleAsn1ASN1EncodableVector;", "[LOrgBouncycastleAsn1ASN1Encodable;", "[LOrgBouncycastleAsn1ASN1Encodable;Z", "getObjectAt", "I", "hashCode", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "toString", "()Ljava/util/Iterator<Lorg/bouncycastle/asn1/ASN1Encodable;>;", &OrgBouncycastleAsn1ASN1Sequence_TYPE, "Lorg/bouncycastle/asn1/ASN1Primitive;Lorg/bouncycastle/util/Iterable<Lorg/bouncycastle/asn1/ASN1Encodable;>;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Sequence = { "ASN1Sequence", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x401, 26, 2, -1, -1, -1, 15, -1 };
  return &_OrgBouncycastleAsn1ASN1Sequence;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1Sequence class]) {
    OrgBouncycastleAsn1ASN1Sequence_TYPE = new_OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(
#line 63
    OrgBouncycastleAsn1ASN1Sequence_class_(), OrgBouncycastleAsn1BERTags_SEQUENCE);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1Sequence)
  }
}

@end


#line 79
OrgBouncycastleAsn1ASN1Sequence *OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1Sequence_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
    
#line 83
    return (OrgBouncycastleAsn1ASN1Sequence *) cast_chk(obj, [OrgBouncycastleAsn1ASN1Sequence class]);
  }
  else
#line 86
  if ([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    
#line 88
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
      
#line 91
      return (OrgBouncycastleAsn1ASN1Sequence *) primitive;
    }
  }
  else if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 96
    @try {
      
#line 98
      return (OrgBouncycastleAsn1ASN1Sequence *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1Sequence_TYPE)) fromByteArrayWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])], [OrgBouncycastleAsn1ASN1Sequence class]);
    }
    @catch (JavaIoIOException *e) {
      
#line 102
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"failed to construct sequence from byte[]: ", [e getMessage]));
    }
  }
  
#line 106
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unknown object in getInstance: ", [[obj java_getClass] getName]));
}


#line 126
OrgBouncycastleAsn1ASN1Sequence *OrgBouncycastleAsn1ASN1Sequence_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1Sequence_initialize();
  return (OrgBouncycastleAsn1ASN1Sequence *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1Sequence_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1Sequence class]);
}


#line 137
void OrgBouncycastleAsn1ASN1Sequence_init(OrgBouncycastleAsn1ASN1Sequence *self) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  self->elements_ = JreLoadStatic(OrgBouncycastleAsn1ASN1EncodableVector, EMPTY_ELEMENTS);
}


#line 146
void OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1ASN1Sequence *self, id<OrgBouncycastleAsn1ASN1Encodable> element) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (nil == element) {
    
#line 150
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'element' cannot be null");
  }
  
#line 153
  self->elements_ = [IOSObjectArray newArrayWithObjects:(id[]){ element } count:1 type:OrgBouncycastleAsn1ASN1Encodable_class_()];
}


#line 160
void OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1ASN1Sequence *self, OrgBouncycastleAsn1ASN1EncodableVector *elementVector) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (nil == elementVector) {
    
#line 164
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'elementVector' cannot be null");
  }
  
#line 167
  self->elements_ = [elementVector takeElements];
}


#line 174
void OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_(OrgBouncycastleAsn1ASN1Sequence *self, IOSObjectArray *elements) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (OrgBouncycastleUtilArrays_isNullOrContainsNullWithNSObjectArray_(elements)) {
    
#line 178
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'elements' cannot be null, or contain null");
  }
  
#line 181
  self->elements_ = OrgBouncycastleAsn1ASN1EncodableVector_cloneElementsWithOrgBouncycastleAsn1ASN1EncodableArray_(elements);
}


#line 184
void OrgBouncycastleAsn1ASN1Sequence_initWithOrgBouncycastleAsn1ASN1EncodableArray_withBoolean_(OrgBouncycastleAsn1ASN1Sequence *self, IOSObjectArray *elements, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  self->elements_ = clone ? OrgBouncycastleAsn1ASN1EncodableVector_cloneElementsWithOrgBouncycastleAsn1ASN1EncodableArray_(elements) : elements;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1Sequence)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Sequence.java"


#line 64
@implementation OrgBouncycastleAsn1ASN1Sequence_1


#line 64
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 65
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitConstructedWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)sequence {
  
#line 68
  return JreRetainedLocalValue(sequence);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitConstructedWithOrgBouncycastleAsn1ASN1Sequence:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitConstructed", "LOrgBouncycastleAsn1ASN1Sequence;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Sequence_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 2, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Sequence_1;
}

@end


#line 64
void OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1Sequence_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 64
  javaClass, tagNumber);
}


#line 64
OrgBouncycastleAsn1ASN1Sequence_1 *new_OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Sequence_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 64
OrgBouncycastleAsn1ASN1Sequence_1 *create_OrgBouncycastleAsn1ASN1Sequence_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Sequence_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Sequence.java"


#line 202
@implementation OrgBouncycastleAsn1ASN1Sequence_2


#line 202
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)outer$ {
  OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(self, outer$);
  return self;
}


#line 205
- (jboolean)hasMoreElements {
  
#line 208
  return pos_ < ((IOSObjectArray *) nil_chk(this$0_->elements_))->size_;
}

- (id)nextElement {
  
#line 214
  if (pos_ < ((IOSObjectArray *) nil_chk(this$0_->elements_))->size_) {
    
#line 216
    return JreRetainedLocalValue(IOSObjectArray_Get(this$0_->elements_, pos_++));
  }
  @throw new_JavaUtilNoSuchElementException_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[1].selector = @selector(hasMoreElements);
  methods[2].selector = @selector(nextElement);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "pos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1ASN1Sequence;", "getObjects" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Sequence_2 = { "", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x8000, 3, 2, 0, -1, 1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Sequence_2;
}

@end


#line 202
void OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_2 *self, OrgBouncycastleAsn1ASN1Sequence *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->pos_ =
#line 203
  0;
}


#line 202
OrgBouncycastleAsn1ASN1Sequence_2 *new_OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *outer$) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Sequence_2, initWithOrgBouncycastleAsn1ASN1Sequence_, outer$)
}


#line 202
OrgBouncycastleAsn1ASN1Sequence_2 *create_OrgBouncycastleAsn1ASN1Sequence_2_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *outer$) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Sequence_2, initWithOrgBouncycastleAsn1ASN1Sequence_, outer$)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Sequence.java"


#line 229
@implementation OrgBouncycastleAsn1ASN1Sequence_3


#line 229
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)outer$
                                                withInt:(jint)capture$0 {
  OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(self, outer$, capture$0);
  return self;
}


#line 232
- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject {
  
#line 235
  if (val$count_ == pos_) {
    
#line 237
    return JreRetainedLocalValue(nil);
  }
  
#line 240
  id<OrgBouncycastleAsn1ASN1Encodable> obj = IOSObjectArray_Get(nil_chk(this$0_->elements_), pos_++);
  if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
    
#line 243
    return JreRetainedLocalValue([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(((OrgBouncycastleAsn1ASN1Sequence *) obj))) parser]);
  }
  if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Set class]]) {
    
#line 247
    return JreRetainedLocalValue([((OrgBouncycastleAsn1ASN1Set *) nil_chk(((OrgBouncycastleAsn1ASN1Set *) obj))) parser]);
  }
  
#line 250
  return JreRetainedLocalValue(obj);
}


#line 253
- (OrgBouncycastleAsn1ASN1Primitive *)getLoadedObject {
  
#line 256
  return JreRetainedLocalValue(this$0_);
}

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 262
  return JreRetainedLocalValue(this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:withInt:);
  methods[1].selector = @selector(readObject);
  methods[2].selector = @selector(getLoadedObject);
  methods[3].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$count_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "pos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1ASN1Sequence;I", "LJavaIoIOException;", "LOrgBouncycastleAsn1ASN1Sequence;", "parser" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Sequence_3 = { "", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x8000, 4, 3, 2, -1, 3, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Sequence_3;
}

@end


#line 229
void OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(OrgBouncycastleAsn1ASN1Sequence_3 *self, OrgBouncycastleAsn1ASN1Sequence *outer$, jint capture$0) {
  self->this$0_ = outer$;
  self->val$count_ = capture$0;
  NSObject_init(self);
  self->pos_ =
#line 230
  0;
}


#line 229
OrgBouncycastleAsn1ASN1Sequence_3 *new_OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(OrgBouncycastleAsn1ASN1Sequence *outer$, jint capture$0) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Sequence_3, initWithOrgBouncycastleAsn1ASN1Sequence_withInt_, outer$, capture$0)
}


#line 229
OrgBouncycastleAsn1ASN1Sequence_3 *create_OrgBouncycastleAsn1ASN1Sequence_3_initWithOrgBouncycastleAsn1ASN1Sequence_withInt_(OrgBouncycastleAsn1ASN1Sequence *outer$, jint capture$0) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Sequence_3, initWithOrgBouncycastleAsn1ASN1Sequence_withInt_, outer$, capture$0)
}

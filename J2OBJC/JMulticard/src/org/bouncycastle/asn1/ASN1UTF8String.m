//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UTF8String.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UTF8String.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERUTF8String.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Strings.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1UTF8String must be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static NSString *OrgBouncycastleAsn1ASN1UTF8String_getString(OrgBouncycastleAsn1ASN1UTF8String *self);

@interface OrgBouncycastleAsn1ASN1UTF8String_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1UTF8String_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1UTF8String_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1UTF8String_1 *new_OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1UTF8String_1 *create_OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UTF8String.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1UTF8String)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1UTF8String_TYPE;


#line 8
@implementation OrgBouncycastleAsn1ASN1UTF8String


#line 28
+ (OrgBouncycastleAsn1ASN1UTF8String *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1UTF8String_getInstanceWithId_(obj);
}


#line 66
+ (OrgBouncycastleAsn1ASN1UTF8String *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                              withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1UTF8String_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}


#line 73
- (instancetype)initWithNSString:(NSString *)string {
  OrgBouncycastleAsn1ASN1UTF8String_initWithNSString_(self, string);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1UTF8String_initWithByteArray_withBoolean_(self, contents, clone);
  return self;
}


#line 83
- (NSString *)getString {
  return OrgBouncycastleAsn1ASN1UTF8String_getString(self);
}


#line 90
- (NSString *)description {
  
#line 93
  return OrgBouncycastleAsn1ASN1UTF8String_getString(self);
}

- (NSUInteger)hash {
  
#line 99
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_(contents_);
}

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other {
  
#line 105
  if (!([other isKindOfClass:[OrgBouncycastleAsn1ASN1UTF8String class]])) {
    
#line 107
    return false;
  }
  
#line 110
  OrgBouncycastleAsn1ASN1UTF8String *that = (OrgBouncycastleAsn1ASN1UTF8String *) cast_chk(other, [OrgBouncycastleAsn1ASN1UTF8String class]);
  
#line 112
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(contents_, ((OrgBouncycastleAsn1ASN1UTF8String *) nil_chk(that))->contents_);
}


#line 115
- (jboolean)encodeConstructed {
  
#line 118
  return false;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 124
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(contents_))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 130
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_UTF8_STRING withByteArray:contents_];
}


#line 133
+ (OrgBouncycastleAsn1ASN1UTF8String *)createPrimitiveWithByteArray:(IOSByteArray *)contents {
  return OrgBouncycastleAsn1ASN1UTF8String_createPrimitiveWithByteArray_(contents);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1UTF8String;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1UTF8String;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 6, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x10, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 11, 12, 13, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1UTF8String;", 0x8, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(initWithByteArray:withBoolean:);
  methods[4].selector = @selector(getString);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[8].selector = @selector(encodeConstructed);
  methods[9].selector = @selector(encodedLengthWithBoolean:);
  methods[10].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[11].selector = @selector(createPrimitiveWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 16, -1, -1 },
    { "contents_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSString;", "[BZ", "toString", "hashCode", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;", "createPrimitive", "[B", &OrgBouncycastleAsn1ASN1UTF8String_TYPE };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1UTF8String = { "ASN1UTF8String", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x401, 12, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1UTF8String;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1UTF8String class]) {
    OrgBouncycastleAsn1ASN1UTF8String_TYPE = new_OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(
#line 12
    OrgBouncycastleAsn1ASN1UTF8String_class_(), OrgBouncycastleAsn1BERTags_UTF8_STRING);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1UTF8String)
  }
}

@end


#line 28
OrgBouncycastleAsn1ASN1UTF8String *OrgBouncycastleAsn1ASN1UTF8String_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1UTF8String_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1UTF8String class]]) {
    
#line 32
    return (OrgBouncycastleAsn1ASN1UTF8String *) cast_chk(obj, [OrgBouncycastleAsn1ASN1UTF8String class]);
  }
  if ([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    
#line 36
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1UTF8String class]]) {
      
#line 39
      return (OrgBouncycastleAsn1ASN1UTF8String *) primitive;
    }
  }
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 44
    @try {
      
#line 46
      return (OrgBouncycastleAsn1ASN1UTF8String *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1UTF8String_TYPE)) fromByteArrayWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])], [OrgBouncycastleAsn1ASN1UTF8String class]);
    }
    @catch (JavaLangException *e) {
      
#line 50
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"encoding error in getInstance: ", [e description]));
    }
  }
  
#line 54
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 66
OrgBouncycastleAsn1ASN1UTF8String *OrgBouncycastleAsn1ASN1UTF8String_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1UTF8String_initialize();
  return (OrgBouncycastleAsn1ASN1UTF8String *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1UTF8String_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1UTF8String class]);
}


#line 73
void OrgBouncycastleAsn1ASN1UTF8String_initWithNSString_(OrgBouncycastleAsn1ASN1UTF8String *self, NSString *string) {
  OrgBouncycastleAsn1ASN1UTF8String_initWithByteArray_withBoolean_(self, OrgBouncycastleUtilStrings_toUTF8ByteArrayWithNSString_(
#line 75
  string), false);
}


#line 78
void OrgBouncycastleAsn1ASN1UTF8String_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1UTF8String *self, IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  self->contents_ = clone ? OrgBouncycastleUtilArrays_cloneWithByteArray_(contents) : contents;
}

NSString *OrgBouncycastleAsn1ASN1UTF8String_getString(OrgBouncycastleAsn1ASN1UTF8String *self) {
  
#line 86
  return OrgBouncycastleUtilStrings_fromUTF8ByteArrayWithByteArray_(self->contents_);
}


#line 133
OrgBouncycastleAsn1ASN1UTF8String *OrgBouncycastleAsn1ASN1UTF8String_createPrimitiveWithByteArray_(IOSByteArray *contents) {
  OrgBouncycastleAsn1ASN1UTF8String_initialize();
  return new_OrgBouncycastleAsn1DERUTF8String_initWithByteArray_withBoolean_(contents, false);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1UTF8String)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UTF8String.java"


#line 13
@implementation OrgBouncycastleAsn1ASN1UTF8String_1


#line 13
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 14
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 17
  return OrgBouncycastleAsn1ASN1UTF8String_createPrimitiveWithByteArray_([((OrgBouncycastleAsn1DEROctetString *) nil_chk(octetString)) getOctets]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "LOrgBouncycastleAsn1ASN1UTF8String;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1UTF8String_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1UTF8String_1;
}

@end


#line 13
void OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1UTF8String_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 13
  javaClass, tagNumber);
}


#line 13
OrgBouncycastleAsn1ASN1UTF8String_1 *new_OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1UTF8String_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 13
OrgBouncycastleAsn1ASN1UTF8String_1 *create_OrgBouncycastleAsn1ASN1UTF8String_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1UTF8String_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

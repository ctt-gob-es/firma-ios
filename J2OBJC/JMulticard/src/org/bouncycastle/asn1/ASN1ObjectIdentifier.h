//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ObjectIdentifier.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1ObjectIdentifier")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1ObjectIdentifier
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1ObjectIdentifier 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1ObjectIdentifier 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1ObjectIdentifier

#if !defined (OrgBouncycastleAsn1ASN1ObjectIdentifier_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1ObjectIdentifier || defined(INCLUDE_OrgBouncycastleAsn1ASN1ObjectIdentifier))
#define OrgBouncycastleAsn1ASN1ObjectIdentifier_

#define RESTRICT_OrgBouncycastleAsn1ASN1Primitive 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Primitive 1
#include "org/bouncycastle/asn1/ASN1Primitive.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1OutputStream;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@class OrgBouncycastleAsn1ASN1UniversalType;

/*!
 @brief Class representing the ASN.1 OBJECT IDENTIFIER type.
 */
@interface OrgBouncycastleAsn1ASN1ObjectIdentifier : OrgBouncycastleAsn1ASN1Primitive

#pragma mark Public

/*!
 @brief Create an OID based on the passed in String.
 @param identifier a string representation of an OID.
 */
- (instancetype)initWithNSString:(NSString *)identifier;

/*!
 @brief Return an OID that creates a branch under the current one.
 @param branchID node numbers for the new branch.
 @return the OID for the new created branch.
 */
- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)branchWithNSString:(NSString *)branchID;

+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)fromContentsWithByteArray:(IOSByteArray *)contents;

/*!
 @brief Return the OID as a string.
 @return the string representation of the OID carried by this object.
 */
- (NSString *)getId;

/*!
 @brief Return an OBJECT IDENTIFIER from a tagged object.
 @param taggedObject the tagged object holding the object we want
 @param explicit_ true if the object is meant to be explicitly                  tagged false otherwise.
 @return an ASN1ObjectIdentifier instance, or null.
 @throw IllegalArgumentExceptionif the tagged object cannot
  be converted.
 */
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                                    withBoolean:(jboolean)explicit_;

/*!
 @brief Return an OID from the passed in object
 @param obj an ASN1ObjectIdentifier or an object that can be converted into one.
 @return an ASN1ObjectIdentifier instance, or null.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getInstanceWithId:(id)obj;

- (NSUInteger)hash;

/*!
 @brief Intern will return a reference to a pooled version of this object, unless it
  is not present in which case intern will add it.
 <p>
  The pool is also used by the ASN.1 parsers to limit the number of duplicated OID
  objects in circulation. 
 </p>
 @return a reference to the identifier in the pool.
 */
- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)intern;

/*!
 @brief Return true if this oid is an extension of the passed in branch - stem.
 @param stem the arc or branch that is a possible parent.
 @return true if the branch is on the passed in stem, false otherwise.
 */
- (jboolean)onWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)stem;

- (NSString *)description;

#pragma mark Package-Private

/*!
 @brief Create an OID that creates a branch under the current one.
 @param branchID node numbers for the new branch.
 @return the OID for the new created branch.
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                   withNSString:(NSString *)branchID;

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone;

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)o;

+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)createPrimitiveWithByteArray:(IOSByteArray *)contents
                                                              withBoolean:(jboolean)clone;

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag;

- (jboolean)encodeConstructed;

- (jint)encodedLengthWithBoolean:(jboolean)withTag;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleAsn1ASN1ObjectIdentifier)

inline OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1ObjectIdentifier_get_TYPE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1ObjectIdentifier_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1ObjectIdentifier, TYPE, OrgBouncycastleAsn1ASN1UniversalType *)

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_fromContentsWithByteArray_(IOSByteArray *contents);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, IOSByteArray *contents, jboolean clone);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, NSString *identifier);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_createPrimitiveWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1ObjectIdentifier)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1ObjectIdentifier")

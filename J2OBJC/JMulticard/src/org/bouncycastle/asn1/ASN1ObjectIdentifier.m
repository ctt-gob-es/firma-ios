//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ObjectIdentifier.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/ConcurrentMap.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1RelativeOID.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/OIDTokenizer.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1ObjectIdentifier must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1ObjectIdentifier () {
 @public
  NSString *identifier_;
  IOSByteArray *contents_;
}

- (void)doOutputWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)aOut;

- (IOSByteArray *)getContents;

+ (jboolean)isValidIdentifierWithNSString:(NSString *)identifier;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1ObjectIdentifier, identifier_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1ObjectIdentifier, contents_, IOSByteArray *)

inline jlong OrgBouncycastleAsn1ASN1ObjectIdentifier_get_LONG_LIMIT(void);
#define OrgBouncycastleAsn1ASN1ObjectIdentifier_LONG_LIMIT 72057594037927808LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleAsn1ASN1ObjectIdentifier, LONG_LIMIT, jlong)

inline id<JavaUtilConcurrentConcurrentMap> OrgBouncycastleAsn1ASN1ObjectIdentifier_get_pool(void);
static id<JavaUtilConcurrentConcurrentMap> OrgBouncycastleAsn1ASN1ObjectIdentifier_pool;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1ObjectIdentifier, pool, id<JavaUtilConcurrentConcurrentMap>)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *aOut);

__attribute__((unused)) static IOSByteArray *OrgBouncycastleAsn1ASN1ObjectIdentifier_getContents(OrgBouncycastleAsn1ASN1ObjectIdentifier *self);

__attribute__((unused)) static jboolean OrgBouncycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(NSString *identifier);

@interface OrgBouncycastleAsn1ASN1ObjectIdentifier_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1ObjectIdentifier_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1ObjectIdentifier_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1ObjectIdentifier_1 *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1ObjectIdentifier_1 *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

@interface OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle : NSObject {
 @public
  jint key_;
  IOSByteArray *contents_;
}

- (instancetype)initWithByteArray:(IOSByteArray *)contents;

- (NSUInteger)hash;

- (jboolean)isEqual:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle)

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle, contents_, IOSByteArray *)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *self, IOSByteArray *contents);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *contents) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *contents);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ObjectIdentifier.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1ObjectIdentifier)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1ObjectIdentifier_TYPE;


#line 14
@implementation OrgBouncycastleAsn1ASN1ObjectIdentifier


#line 26
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)fromContentsWithByteArray:(IOSByteArray *)contents {
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_fromContentsWithByteArray_(contents);
}


#line 38
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(obj);
}


#line 77
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                                    withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}


#line 104
- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(self, contents, clone);
  return self;
}


#line 185
- (instancetype)initWithNSString:(NSString *)identifier {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(self, identifier);
  return self;
}


#line 206
- (instancetype)initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                   withNSString:(NSString *)branchID {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, oid, branchID);
  return self;
}


#line 221
- (NSString *)getId {
  
#line 223
  return identifier_;
}


#line 232
- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)branchWithNSString:(NSString *)branchID {
  
#line 234
  return new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, branchID);
}


#line 243
- (jboolean)onWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)stem {
  
#line 245
  NSString *id_ = [self getId];
  
#line 245
  NSString *stemId = [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(stem)) getId];
  return [((NSString *) nil_chk(id_)) java_length] > [((NSString *) nil_chk(stemId)) java_length] && [id_ charAtWithInt:[stemId java_length]] == '.' && [id_ java_hasPrefix:stemId];
}


#line 249
- (void)doOutputWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)aOut {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(self, aOut);
}


#line 278
- (IOSByteArray *)getContents {
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_getContents(self);
}


#line 292
- (jboolean)encodeConstructed {
  
#line 295
  return false;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 301
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(OrgBouncycastleAsn1ASN1ObjectIdentifier_getContents(self)))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 307
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_OBJECT_IDENTIFIER withByteArray:OrgBouncycastleAsn1ASN1ObjectIdentifier_getContents(self)];
}


#line 310
- (NSUInteger)hash {
  
#line 313
  return ((jint) [((NSString *) nil_chk(identifier_)) hash]);
}

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)o {
  
#line 320
  if (JreObjectEqualsEquals(o, self)) {
    
#line 322
    return true;
  }
  
#line 325
  if (!([o isKindOfClass:[OrgBouncycastleAsn1ASN1ObjectIdentifier class]])) {
    
#line 327
    return false;
  }
  
#line 330
  return [((NSString *) nil_chk(identifier_)) isEqual:((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(((OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk(o, [OrgBouncycastleAsn1ASN1ObjectIdentifier class]))))->identifier_];
}


#line 333
- (NSString *)description {
  
#line 336
  return [self getId];
}

+ (jboolean)isValidIdentifierWithNSString:(NSString *)identifier {
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(identifier);
}


#line 366
- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)intern {
  
#line 368
  OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *hdl = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(OrgBouncycastleAsn1ASN1ObjectIdentifier_getContents(self));
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = [((id<JavaUtilConcurrentConcurrentMap>) nil_chk(OrgBouncycastleAsn1ASN1ObjectIdentifier_pool)) getWithId:hdl];
  if (oid == nil) {
    
#line 372
    oid = [OrgBouncycastleAsn1ASN1ObjectIdentifier_pool putIfAbsentWithId:hdl withId:self];
    if (oid == nil) {
      
#line 375
      oid = self;
    }
  }
  return oid;
}


#line 410
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)createPrimitiveWithByteArray:(IOSByteArray *)contents
                                                              withBoolean:(jboolean)clone {
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_createPrimitiveWithByteArray_withBoolean_(contents, clone);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, 8, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "[B", 0x22, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 16, 17, -1, -1, -1 },
    { NULL, "I", 0x1, 18, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 19, 20, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 21, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 22, 6, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x8, 23, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(fromContentsWithByteArray:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[3].selector = @selector(initWithByteArray:withBoolean:);
  methods[4].selector = @selector(initWithNSString:);
  methods[5].selector = @selector(initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[6].selector = @selector(getId);
  methods[7].selector = @selector(branchWithNSString:);
  methods[8].selector = @selector(onWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(doOutputWithJavaIoByteArrayOutputStream:);
  methods[10].selector = @selector(getContents);
  methods[11].selector = @selector(encodeConstructed);
  methods[12].selector = @selector(encodedLengthWithBoolean:);
  methods[13].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[14].selector = @selector(hash);
  methods[15].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[16].selector = @selector(description);
  methods[17].selector = @selector(isValidIdentifierWithNSString:);
  methods[18].selector = @selector(intern);
  methods[19].selector = @selector(createPrimitiveWithByteArray:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 24, -1, -1 },
    { "LONG_LIMIT", "J", .constantValue.asLong = OrgBouncycastleAsn1ASN1ObjectIdentifier_LONG_LIMIT, 0x1a, -1, -1, -1, -1 },
    { "pool", "LJavaUtilConcurrentConcurrentMap;", .constantValue.asLong = 0, 0x1a, -1, 25, 26, -1 },
    { "identifier_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "contents_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "fromContents", "[B", "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "[BZ", "LNSString;", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LNSString;", "branch", "on", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "doOutput", "LJavaIoByteArrayOutputStream;", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;", "hashCode", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "toString", "isValidIdentifier", "createPrimitive", &OrgBouncycastleAsn1ASN1ObjectIdentifier_TYPE, &OrgBouncycastleAsn1ASN1ObjectIdentifier_pool, "Ljava/util/concurrent/ConcurrentMap<Lorg/bouncycastle/asn1/ASN1ObjectIdentifier$OidHandle;Lorg/bouncycastle/asn1/ASN1ObjectIdentifier;>;", "LOrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1ObjectIdentifier = { "ASN1ObjectIdentifier", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 20, 5, -1, 27, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1ObjectIdentifier;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1ObjectIdentifier class]) {
    OrgBouncycastleAsn1ASN1ObjectIdentifier_TYPE = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(
#line 17
    OrgBouncycastleAsn1ASN1ObjectIdentifier_class_(), OrgBouncycastleAsn1BERTags_OBJECT_IDENTIFIER);
    OrgBouncycastleAsn1ASN1ObjectIdentifier_pool = new_JavaUtilConcurrentConcurrentHashMap_init();
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1ObjectIdentifier)
  }
}

@end


#line 26
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_fromContentsWithByteArray_(IOSByteArray *contents) {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initialize();
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_createPrimitiveWithByteArray_withBoolean_(contents, true);
}


#line 38
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1ObjectIdentifier class]]) {
    
#line 42
    return (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk(obj, [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
  }
  else if ([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    
#line 46
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1ObjectIdentifier class]]) {
      
#line 49
      return (OrgBouncycastleAsn1ASN1ObjectIdentifier *) primitive;
    }
  }
  else if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 54
    @try {
      
#line 56
      return (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1ObjectIdentifier_TYPE)) fromByteArrayWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    }
    @catch (JavaIoIOException *e) {
      
#line 60
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"failed to construct object identifier from byte[]: ", [e getMessage]));
    }
  }
  
#line 64
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 77
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initialize();
  
#line 84
  if (!explicit_ && ![((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject)) isParsed]) {
    
#line 86
    OrgBouncycastleAsn1ASN1Primitive *base = [((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(taggedObject)) getObject];
    if (!([base isKindOfClass:[OrgBouncycastleAsn1ASN1ObjectIdentifier class]])) {
      
#line 89
      return OrgBouncycastleAsn1ASN1ObjectIdentifier_fromContentsWithByteArray_([((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_(base))) getOctets]);
    }
  }
  
#line 93
  return (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1ObjectIdentifier_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
}


#line 104
void OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  JavaLangStringBuffer *objId = new_JavaLangStringBuffer_init();
  jlong value = 0;
  JavaMathBigInteger *bigValue = nil;
  jboolean first = true;
  
#line 111
  for (jint i = 0; i != ((IOSByteArray *) nil_chk(contents))->size_; i++) {
    
#line 113
    jint b = IOSByteArray_Get(contents, i) & (jint) 0xff;
    
#line 115
    if (value <= OrgBouncycastleAsn1ASN1ObjectIdentifier_LONG_LIMIT) {
      
#line 117
      value += b & (jint) 0x7F;
      if ((b & (jint) 0x80) == 0) {
        
#line 120
        if (first) {
          
#line 122
          if (value < 40) {
            
#line 124
            (void) [objId appendWithChar:'0'];
          }
          else if (value < 80) {
            
#line 128
            (void) [objId appendWithChar:'1'];
            value -= 40;
          }
          else {
            
#line 133
            (void) [objId appendWithChar:'2'];
            value -= 80;
          }
          first = false;
        }
        
#line 139
        (void) [objId appendWithChar:'.'];
        (void) [objId appendWithLong:value];
        value = 0;
      }
      else {
        
#line 145
        JreLShiftAssignLong(&value, 7);
      }
    }
    else {
      
#line 150
      if (bigValue == nil) {
        
#line 152
        bigValue = JavaMathBigInteger_valueOfWithLong_(value);
      }
      bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) or__WithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(b & (jint) 0x7F)];
      if ((b & (jint) 0x80) == 0) {
        
#line 157
        if (first) {
          
#line 159
          (void) [objId appendWithChar:'2'];
          bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) subtractWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(80)];
          first = false;
        }
        
#line 164
        (void) [objId appendWithChar:'.'];
        (void) [objId appendWithId:bigValue];
        bigValue = nil;
        value = 0;
      }
      else {
        
#line 171
        bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) shiftLeftWithInt:7];
      }
    }
  }
  
#line 176
  self->identifier_ = [objId description];
  self->contents_ = clone ? OrgBouncycastleUtilArrays_cloneWithByteArray_(contents) : contents;
}


#line 104
OrgBouncycastleAsn1ASN1ObjectIdentifier *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier, initWithByteArray_withBoolean_, contents, clone)
}


#line 104
OrgBouncycastleAsn1ASN1ObjectIdentifier *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier, initWithByteArray_withBoolean_, contents, clone)
}


#line 185
void OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, NSString *identifier) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  
#line 188
  if (identifier == nil) {
    
#line 190
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'identifier' cannot be null");
  }
  if (!OrgBouncycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(identifier)) {
    
#line 194
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"string ", identifier, @" not an OID"));
  }
  
#line 197
  self->identifier_ = identifier;
}


#line 185
OrgBouncycastleAsn1ASN1ObjectIdentifier *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier, initWithNSString_, identifier)
}


#line 185
OrgBouncycastleAsn1ASN1ObjectIdentifier *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(NSString *identifier) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier, initWithNSString_, identifier)
}


#line 206
void OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (!OrgBouncycastleAsn1ASN1RelativeOID_isValidIdentifierWithNSString_withInt_(branchID, 0)) {
    
#line 210
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"string ", branchID, @" not a valid OID branch"));
  }
  
#line 213
  self->identifier_ = JreStrcat("$C$", [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId], '.', branchID);
}


#line 206
OrgBouncycastleAsn1ASN1ObjectIdentifier *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier, initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_, oid, branchID)
}


#line 206
OrgBouncycastleAsn1ASN1ObjectIdentifier *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *branchID) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier, initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_, oid, branchID)
}


#line 249
void OrgBouncycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(OrgBouncycastleAsn1ASN1ObjectIdentifier *self, JavaIoByteArrayOutputStream *aOut) {
  
#line 251
  OrgBouncycastleAsn1OIDTokenizer *tok = new_OrgBouncycastleAsn1OIDTokenizer_initWithNSString_(self->identifier_);
  jint first = JavaLangInteger_parseIntWithNSString_([tok nextToken]) * 40;
  
#line 254
  NSString *secondToken = [tok nextToken];
  if ([((NSString *) nil_chk(secondToken)) java_length] <= 18) {
    
#line 257
    OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withLong_(aOut, first + JavaLangLong_parseLongWithNSString_(secondToken));
  }
  else {
    
#line 261
    OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(aOut, [new_JavaMathBigInteger_initWithNSString_(secondToken) addWithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(first)]);
  }
  
#line 264
  while ([tok hasMoreTokens]) {
    
#line 266
    NSString *token = [tok nextToken];
    if ([((NSString *) nil_chk(token)) java_length] <= 18) {
      
#line 269
      OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withLong_(aOut, JavaLangLong_parseLongWithNSString_(token));
    }
    else {
      
#line 273
      OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(aOut, new_JavaMathBigInteger_initWithNSString_(token));
    }
  }
}


#line 278
IOSByteArray *OrgBouncycastleAsn1ASN1ObjectIdentifier_getContents(OrgBouncycastleAsn1ASN1ObjectIdentifier *self) {
  @synchronized(self) {
    if (self->contents_ == nil) {
      
#line 282
      JavaIoByteArrayOutputStream *bOut = new_JavaIoByteArrayOutputStream_init();
      
#line 284
      OrgBouncycastleAsn1ASN1ObjectIdentifier_doOutputWithJavaIoByteArrayOutputStream_(self, bOut);
      
#line 286
      self->contents_ = [bOut toByteArray];
    }
    
#line 289
    return JreRetainedLocalValue(self->contents_);
  }
}


#line 339
jboolean OrgBouncycastleAsn1ASN1ObjectIdentifier_isValidIdentifierWithNSString_(NSString *identifier) {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initialize();
  
#line 342
  if ([((NSString *) nil_chk(identifier)) java_length] < 3 || [identifier charAtWithInt:1] != '.') {
    
#line 344
    return false;
  }
  
#line 347
  jchar first = [identifier charAtWithInt:0];
  if (first < '0' || first > '2') {
    
#line 350
    return false;
  }
  
#line 353
  return OrgBouncycastleAsn1ASN1RelativeOID_isValidIdentifierWithNSString_withInt_(identifier, 2);
}


#line 410
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1ASN1ObjectIdentifier_createPrimitiveWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_initialize();
  OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *hdl = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(contents);
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = [((id<JavaUtilConcurrentConcurrentMap>) nil_chk(OrgBouncycastleAsn1ASN1ObjectIdentifier_pool)) getWithId:hdl];
  if (oid == nil) {
    
#line 416
    return new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithByteArray_withBoolean_(contents, clone);
  }
  return oid;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1ObjectIdentifier)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ObjectIdentifier.java"


#line 18
@implementation OrgBouncycastleAsn1ASN1ObjectIdentifier_1


#line 18
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 19
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 22
  return OrgBouncycastleAsn1ASN1ObjectIdentifier_createPrimitiveWithByteArray_withBoolean_([((OrgBouncycastleAsn1DEROctetString *) nil_chk(octetString)) getOctets], false);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1ObjectIdentifier_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1ObjectIdentifier_1;
}

@end


#line 18
void OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1ObjectIdentifier_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 18
  javaClass, tagNumber);
}


#line 18
OrgBouncycastleAsn1ASN1ObjectIdentifier_1 *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 18
OrgBouncycastleAsn1ASN1ObjectIdentifier_1 *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1ObjectIdentifier.java"


#line 381
@implementation OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle


#line 386
- (instancetype)initWithByteArray:(IOSByteArray *)contents {
  OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(self, contents);
  return self;
}


#line 392
- (NSUInteger)hash {
  
#line 395
  return key_;
}

- (jboolean)isEqual:(id)o {
  
#line 401
  if ([o isKindOfClass:[OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle class]]) {
    
#line 403
    return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(contents_, ((OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *) nil_chk(((OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *) o)))->contents_);
  }
  
#line 406
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "key_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "contents_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "hashCode", "equals", "LNSObject;", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle = { "OidHandle", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0xa, 3, 2, 4, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle;
}

@end


#line 386
void OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *self, IOSByteArray *contents) {
  NSObject_init(self);
  self->key_ = OrgBouncycastleUtilArrays_hashCodeWithByteArray_(contents);
  self->contents_ = contents;
}


#line 386
OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *new_OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *contents) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle, initWithByteArray_, contents)
}


#line 386
OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle *create_OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle_initWithByteArray_(IOSByteArray *contents) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle, initWithByteArray_, contents)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1ObjectIdentifier_OidHandle)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DLSequenceParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DLSequenceParser")
#ifdef RESTRICT_OrgBouncycastleAsn1DLSequenceParser
#define INCLUDE_ALL_OrgBouncycastleAsn1DLSequenceParser 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DLSequenceParser 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DLSequenceParser

#if !defined (OrgBouncycastleAsn1DLSequenceParser_) && (INCLUDE_ALL_OrgBouncycastleAsn1DLSequenceParser || defined(INCLUDE_OrgBouncycastleAsn1DLSequenceParser))
#define OrgBouncycastleAsn1DLSequenceParser_

#define RESTRICT_OrgBouncycastleAsn1ASN1SequenceParser 1
#define INCLUDE_OrgBouncycastleAsn1ASN1SequenceParser 1
#include "org/bouncycastle/asn1/ASN1SequenceParser.h"

@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1StreamParser;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief Parser class for DL SEQUENCEs.
 TODO The class is only publicly visible to support 'instanceof' checks; provide an alternative
 */
@interface OrgBouncycastleAsn1DLSequenceParser : NSObject < OrgBouncycastleAsn1ASN1SequenceParser >

#pragma mark Public

/*!
 @brief Return an in memory, encodable, representation of the SEQUENCE.
 @return a DLSequence.
 @throw IOExceptionif there is an issue loading the data.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)getLoadedObject;

/*!
 @brief Return the next object in the SEQUENCE.
 @return next object in SEQUENCE.
 @throw IOExceptionif there is an issue loading the object.
 */
- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject;

/*!
 @brief Return a DLSequence representing this parser and its contents.
 @return a DLSequence.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

#pragma mark Package-Private

- (instancetype)initWithOrgBouncycastleAsn1ASN1StreamParser:(OrgBouncycastleAsn1ASN1StreamParser *)parser;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1DLSequenceParser)

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLSequenceParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1DLSequenceParser *self, OrgBouncycastleAsn1ASN1StreamParser *parser);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLSequenceParser *new_OrgBouncycastleAsn1DLSequenceParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1ASN1StreamParser *parser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLSequenceParser *create_OrgBouncycastleAsn1DLSequenceParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1ASN1StreamParser *parser);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DLSequenceParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DLSequenceParser")

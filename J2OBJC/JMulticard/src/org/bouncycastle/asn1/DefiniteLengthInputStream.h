//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DefiniteLengthInputStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DefiniteLengthInputStream")
#ifdef RESTRICT_OrgBouncycastleAsn1DefiniteLengthInputStream
#define INCLUDE_ALL_OrgBouncycastleAsn1DefiniteLengthInputStream 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DefiniteLengthInputStream 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DefiniteLengthInputStream

#if !defined (OrgBouncycastleAsn1DefiniteLengthInputStream_) && (INCLUDE_ALL_OrgBouncycastleAsn1DefiniteLengthInputStream || defined(INCLUDE_OrgBouncycastleAsn1DefiniteLengthInputStream))
#define OrgBouncycastleAsn1DefiniteLengthInputStream_

#define RESTRICT_OrgBouncycastleAsn1LimitedInputStream 1
#define INCLUDE_OrgBouncycastleAsn1LimitedInputStream 1
#include "org/bouncycastle/asn1/LimitedInputStream.h"

@class IOSByteArray;
@class JavaIoInputStream;

/*!
 @brief Parse data stream of expected ASN.1 data expecting definite-length encoding..
 */
@interface OrgBouncycastleAsn1DefiniteLengthInputStream : OrgBouncycastleAsn1LimitedInputStream

#pragma mark Public

- (jint)read;

- (jint)readWithByteArray:(IOSByteArray *)buf
                  withInt:(jint)off
                  withInt:(jint)len;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                                withInt:(jint)length
                                                withInt:(jint)limit;

- (jint)getRemaining;

- (void)readAllIntoByteArrayWithByteArray:(IOSByteArray *)buf;

- (IOSByteArray *)toByteArray;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivateWithJavaIoInputStream:(JavaIoInputStream *)arg0
                                                withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgBouncycastleAsn1DefiniteLengthInputStream)

FOUNDATION_EXPORT void OrgBouncycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_(OrgBouncycastleAsn1DefiniteLengthInputStream *self, JavaIoInputStream *inArg, jint length, jint limit);

FOUNDATION_EXPORT OrgBouncycastleAsn1DefiniteLengthInputStream *new_OrgBouncycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_(JavaIoInputStream *inArg, jint length, jint limit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DefiniteLengthInputStream *create_OrgBouncycastleAsn1DefiniteLengthInputStream_initPackagePrivateWithJavaIoInputStream_withInt_withInt_(JavaIoInputStream *inArg, jint length, jint limit);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DefiniteLengthInputStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DefiniteLengthInputStream")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ConstructedBitStream.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "org/bouncycastle/asn1/ASN1BitStringParser.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1StreamParser.h"
#include "org/bouncycastle/asn1/ConstructedBitStream.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ConstructedBitStream must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ConstructedBitStream () {
 @public
  OrgBouncycastleAsn1ASN1StreamParser *_parser_;
  jboolean _octetAligned_;
  jboolean _first_;
  jint _padBits_;
  id<OrgBouncycastleAsn1ASN1BitStringParser> _currentParser_;
  JavaIoInputStream *_currentStream_;
}

- (id<OrgBouncycastleAsn1ASN1BitStringParser>)getNextParser;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ConstructedBitStream, _parser_, OrgBouncycastleAsn1ASN1StreamParser *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ConstructedBitStream, _currentParser_, id<OrgBouncycastleAsn1ASN1BitStringParser>)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ConstructedBitStream, _currentStream_, JavaIoInputStream *)

__attribute__((unused)) static id<OrgBouncycastleAsn1ASN1BitStringParser> OrgBouncycastleAsn1ConstructedBitStream_getNextParser(OrgBouncycastleAsn1ConstructedBitStream *self);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ConstructedBitStream.java"


#line 6
@implementation OrgBouncycastleAsn1ConstructedBitStream


#line 16
- (instancetype)initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser:(OrgBouncycastleAsn1ASN1StreamParser *)parser
                                                              withBoolean:(jboolean)octetAligned {
  OrgBouncycastleAsn1ConstructedBitStream_initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_(self, parser, octetAligned);
  return self;
}


#line 21
- (jint)getPadBits {
  return _padBits_;
}

- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len {
  
#line 27
  if (_currentStream_ == nil) {
    if (!_first_) {
      return -1;
    }
    
#line 32
    _currentParser_ = OrgBouncycastleAsn1ConstructedBitStream_getNextParser(self);
    if (_currentParser_ == nil) {
      return -1;
    }
    
#line 37
    _first_ = false;
    _currentStream_ = [_currentParser_ getBitStream];
  }
  
#line 41
  jint totalRead = 0;
  
#line 43
  for (; ; ) {
    jint numRead = [((JavaIoInputStream *) nil_chk(_currentStream_)) readWithByteArray:b withInt:off + totalRead withInt:len - totalRead];
    
#line 46
    if (numRead >= 0) {
      totalRead += numRead;
      
#line 49
      if (totalRead == len) {
        return totalRead;
      }
    }
    else {
      _padBits_ = [((id<OrgBouncycastleAsn1ASN1BitStringParser>) nil_chk(_currentParser_)) getPadBits];
      _currentParser_ = OrgBouncycastleAsn1ConstructedBitStream_getNextParser(self);
      if (_currentParser_ == nil) {
        _currentStream_ = nil;
        return totalRead < 1 ? -1 : totalRead;
      }
      
#line 61
      _currentStream_ = [_currentParser_ getBitStream];
    }
  }
}


#line 66
- (jint)read {
  
#line 70
  if (_currentStream_ == nil) {
    
#line 72
    if (!_first_) {
      
#line 74
      return -1;
    }
    
#line 77
    _currentParser_ = OrgBouncycastleAsn1ConstructedBitStream_getNextParser(self);
    if (_currentParser_ == nil) {
      
#line 80
      return -1;
    }
    
#line 83
    _first_ = false;
    _currentStream_ = [_currentParser_ getBitStream];
  }
  
#line 87
  for (; ; ) {
    
#line 89
    jint b = [((JavaIoInputStream *) nil_chk(_currentStream_)) read];
    
#line 91
    if (b >= 0) {
      
#line 93
      return b;
    }
    
#line 96
    _padBits_ = [((id<OrgBouncycastleAsn1ASN1BitStringParser>) nil_chk(_currentParser_)) getPadBits];
    _currentParser_ = OrgBouncycastleAsn1ConstructedBitStream_getNextParser(self);
    if (_currentParser_ == nil) {
      
#line 100
      _currentStream_ = nil;
      return -1;
    }
    
#line 104
    _currentStream_ = [_currentParser_ getBitStream];
  }
}


#line 108
- (id<OrgBouncycastleAsn1ASN1BitStringParser>)getNextParser {
  return OrgBouncycastleAsn1ConstructedBitStream_getNextParser(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1BitStringParser;", 0x2, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser:withBoolean:);
  methods[1].selector = @selector(getPadBits);
  methods[2].selector = @selector(readWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(read);
  methods[4].selector = @selector(getNextParser);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_parser_", "LOrgBouncycastleAsn1ASN1StreamParser;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_octetAligned_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_first_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_padBits_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_currentParser_", "LOrgBouncycastleAsn1ASN1BitStringParser;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_currentStream_", "LJavaIoInputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1ASN1StreamParser;Z", "read", "[BII", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ConstructedBitStream = { "ConstructedBitStream", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x0, 5, 6, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ConstructedBitStream;
}

@end


#line 16
void OrgBouncycastleAsn1ConstructedBitStream_initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_(OrgBouncycastleAsn1ConstructedBitStream *self, OrgBouncycastleAsn1ASN1StreamParser *parser, jboolean octetAligned) {
  JavaIoInputStream_init(self);
  self->_first_ =
#line 10
  true;
  self->_padBits_ = 0;
  
#line 17
  self->_parser_ = parser;
  self->_octetAligned_ = octetAligned;
}


#line 16
OrgBouncycastleAsn1ConstructedBitStream *new_OrgBouncycastleAsn1ConstructedBitStream_initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_(OrgBouncycastleAsn1ASN1StreamParser *parser, jboolean octetAligned) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ConstructedBitStream, initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_, parser, octetAligned)
}


#line 16
OrgBouncycastleAsn1ConstructedBitStream *create_OrgBouncycastleAsn1ConstructedBitStream_initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_(OrgBouncycastleAsn1ASN1StreamParser *parser, jboolean octetAligned) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ConstructedBitStream, initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_, parser, octetAligned)
}


#line 108
id<OrgBouncycastleAsn1ASN1BitStringParser> OrgBouncycastleAsn1ConstructedBitStream_getNextParser(OrgBouncycastleAsn1ConstructedBitStream *self) {
  
#line 110
  id<OrgBouncycastleAsn1ASN1Encodable> asn1Obj = [((OrgBouncycastleAsn1ASN1StreamParser *) nil_chk(self->_parser_)) readObject];
  if (asn1Obj == nil) {
    
#line 113
    if (self->_octetAligned_ && self->_padBits_ != 0) {
      
#line 115
      @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$I", @"expected octet-aligned bitstring, but found padBits: ", self->_padBits_));
    }
    
#line 118
    return nil;
  }
  
#line 121
  if ([OrgBouncycastleAsn1ASN1BitStringParser_class_() isInstance:asn1Obj]) {
    
#line 123
    if (self->_padBits_ != 0) {
      
#line 125
      @throw new_JavaIoIOException_initWithNSString_(@"only the last nested bitstring can have padding");
    }
    
#line 128
    return (id<OrgBouncycastleAsn1ASN1BitStringParser>) cast_check(asn1Obj, OrgBouncycastleAsn1ASN1BitStringParser_class_());
  }
  
#line 131
  @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$@", @"unknown object encountered: ", [asn1Obj java_getClass]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ConstructedBitStream)

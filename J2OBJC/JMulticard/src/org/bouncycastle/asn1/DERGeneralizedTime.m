//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DERGeneralizedTime.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "java/util/Date.h"
#include "org/bouncycastle/asn1/ASN1GeneralizedTime.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DERGeneralizedTime.h"
#include "org/bouncycastle/util/Strings.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/DERGeneralizedTime must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1DERGeneralizedTime ()

- (IOSByteArray *)getDERTime;

@end

__attribute__((unused)) static IOSByteArray *OrgBouncycastleAsn1DERGeneralizedTime_getDERTime(OrgBouncycastleAsn1DERGeneralizedTime *self);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DERGeneralizedTime.java"


#line 25
@implementation OrgBouncycastleAsn1DERGeneralizedTime


#line 28
- (instancetype)initWithByteArray:(IOSByteArray *)time {
  OrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(self, time);
  return self;
}

- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)time {
  OrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(self, time);
  return self;
}

- (instancetype)initWithNSString:(NSString *)time {
  OrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(self, time);
  return self;
}

- (IOSByteArray *)getDERTime {
  return OrgBouncycastleAsn1DERGeneralizedTime_getDERTime(self);
}


#line 103
- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 106
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(OrgBouncycastleAsn1DERGeneralizedTime_getDERTime(self)))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 112
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_GENERALIZED_TIME withByteArray:OrgBouncycastleAsn1DERGeneralizedTime_getDERTime(self)];
}


#line 115
- (OrgBouncycastleAsn1ASN1Primitive *)toDERObject {
  
#line 118
  return self;
}

- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject {
  
#line 124
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, 7, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithJavaUtilDate:);
  methods[2].selector = @selector(initWithNSString:);
  methods[3].selector = @selector(getDERTime);
  methods[4].selector = @selector(encodedLengthWithBoolean:);
  methods[5].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[6].selector = @selector(toDERObject);
  methods[7].selector = @selector(toDLObject);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[B", "LJavaUtilDate;", "LNSString;", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1DERGeneralizedTime = { "DERGeneralizedTime", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1DERGeneralizedTime;
}

@end


#line 28
void OrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(OrgBouncycastleAsn1DERGeneralizedTime *self, IOSByteArray *time) {
  OrgBouncycastleAsn1ASN1GeneralizedTime_initWithByteArray_(self,
#line 30
  time);
}


#line 28
OrgBouncycastleAsn1DERGeneralizedTime *new_OrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(IOSByteArray *time) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DERGeneralizedTime, initWithByteArray_, time)
}


#line 28
OrgBouncycastleAsn1DERGeneralizedTime *create_OrgBouncycastleAsn1DERGeneralizedTime_initWithByteArray_(IOSByteArray *time) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DERGeneralizedTime, initWithByteArray_, time)
}


#line 33
void OrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(OrgBouncycastleAsn1DERGeneralizedTime *self, JavaUtilDate *time) {
  OrgBouncycastleAsn1ASN1GeneralizedTime_initWithJavaUtilDate_(self,
#line 35
  time);
}


#line 33
OrgBouncycastleAsn1DERGeneralizedTime *new_OrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(JavaUtilDate *time) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DERGeneralizedTime, initWithJavaUtilDate_, time)
}


#line 33
OrgBouncycastleAsn1DERGeneralizedTime *create_OrgBouncycastleAsn1DERGeneralizedTime_initWithJavaUtilDate_(JavaUtilDate *time) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DERGeneralizedTime, initWithJavaUtilDate_, time)
}


#line 38
void OrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(OrgBouncycastleAsn1DERGeneralizedTime *self, NSString *time) {
  OrgBouncycastleAsn1ASN1GeneralizedTime_initWithNSString_(self,
#line 40
  time);
}


#line 38
OrgBouncycastleAsn1DERGeneralizedTime *new_OrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(NSString *time) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1DERGeneralizedTime, initWithNSString_, time)
}


#line 38
OrgBouncycastleAsn1DERGeneralizedTime *create_OrgBouncycastleAsn1DERGeneralizedTime_initWithNSString_(NSString *time) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1DERGeneralizedTime, initWithNSString_, time)
}


#line 43
IOSByteArray *OrgBouncycastleAsn1DERGeneralizedTime_getDERTime(OrgBouncycastleAsn1DERGeneralizedTime *self) {
  
#line 45
  if (IOSByteArray_Get(self->contents_, ((IOSByteArray *) nil_chk(self->contents_))->size_ - 1) == 'Z') {
    
#line 47
    if (![self hasMinutes]) {
      
#line 49
      IOSByteArray *derTime = [IOSByteArray newArrayWithLength:self->contents_->size_ + 4];
      
#line 51
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->contents_, 0, derTime, 0, self->contents_->size_ - 1);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(OrgBouncycastleUtilStrings_toByteArrayWithNSString_(@"0000Z"), 0, derTime, self->contents_->size_ - 1, 5);
      
#line 54
      return derTime;
    }
    else if (![self hasSeconds]) {
      
#line 58
      IOSByteArray *derTime = [IOSByteArray newArrayWithLength:self->contents_->size_ + 2];
      
#line 60
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->contents_, 0, derTime, 0, self->contents_->size_ - 1);
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(OrgBouncycastleUtilStrings_toByteArrayWithNSString_(@"00Z"), 0, derTime, self->contents_->size_ - 1, 3);
      
#line 63
      return derTime;
    }
    else if ([self hasFractionalSeconds]) {
      
#line 67
      jint ind = self->contents_->size_ - 2;
      while (ind > 0 && IOSByteArray_Get(self->contents_, ind) == '0') {
        
#line 70
        ind--;
      }
      
#line 73
      if (IOSByteArray_Get(self->contents_, ind) == '.') {
        
#line 75
        IOSByteArray *derTime = [IOSByteArray newArrayWithLength:ind + 1];
        
#line 77
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->contents_, 0, derTime, 0, ind);
        *IOSByteArray_GetRef(derTime, ind) = (jbyte) 'Z';
        
#line 80
        return derTime;
      }
      else {
        
#line 84
        IOSByteArray *derTime = [IOSByteArray newArrayWithLength:ind + 2];
        
#line 86
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->contents_, 0, derTime, 0, ind + 1);
        *IOSByteArray_GetRef(derTime, ind + 1) = (jbyte) 'Z';
        
#line 89
        return derTime;
      }
    }
    else {
      
#line 94
      return self->contents_;
    }
  }
  else {
    
#line 99
    return self->contents_;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1DERGeneralizedTime)

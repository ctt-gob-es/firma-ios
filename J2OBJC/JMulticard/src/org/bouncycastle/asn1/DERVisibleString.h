//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DERVisibleString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERVisibleString")
#ifdef RESTRICT_OrgBouncycastleAsn1DERVisibleString
#define INCLUDE_ALL_OrgBouncycastleAsn1DERVisibleString 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DERVisibleString 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DERVisibleString

#if !defined (OrgBouncycastleAsn1DERVisibleString_) && (INCLUDE_ALL_OrgBouncycastleAsn1DERVisibleString || defined(INCLUDE_OrgBouncycastleAsn1DERVisibleString))
#define OrgBouncycastleAsn1DERVisibleString_

#define RESTRICT_OrgBouncycastleAsn1ASN1VisibleString 1
#define INCLUDE_OrgBouncycastleAsn1ASN1VisibleString 1
#include "org/bouncycastle/asn1/ASN1VisibleString.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1TaggedObject;

/*!
 @brief DER VisibleString object encoding ISO 646 (ASCII) character code points 32 to 126.
 <p>
  Explicit character set escape sequences are not allowed. 
 </p>
 */
@interface OrgBouncycastleAsn1DERVisibleString : OrgBouncycastleAsn1ASN1VisibleString

#pragma mark Public

/*!
 @brief Basic constructor
 @param string the string to be carried in the VisibleString object,
 */
- (instancetype)initWithNSString:(NSString *)string;

/*!
 @brief Return a Visible String from a tagged object.
 @param obj the tagged object holding the object we want
 @param explicit_ true if the object is meant to be explicitly tagged false                  otherwise.
 @throw IllegalArgumentExceptionif the tagged object cannot be converted.
 @return a DERVisibleString instance, or null
 */
+ (OrgBouncycastleAsn1DERVisibleString *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                withBoolean:(jboolean)explicit_;

/*!
 @brief Return a Visible String from the passed in object.
 @param obj a DERVisibleString or an object that can be converted into one.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 @return a DERVisibleString instance, or null
 */
+ (OrgBouncycastleAsn1DERVisibleString *)getInstanceWithId:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1DERVisibleString)

FOUNDATION_EXPORT OrgBouncycastleAsn1DERVisibleString *OrgBouncycastleAsn1DERVisibleString_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERVisibleString *OrgBouncycastleAsn1DERVisibleString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERVisibleString_initWithNSString_(OrgBouncycastleAsn1DERVisibleString *self, NSString *string);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERVisibleString *new_OrgBouncycastleAsn1DERVisibleString_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERVisibleString *create_OrgBouncycastleAsn1DERVisibleString_initWithNSString_(NSString *string);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERVisibleString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1DERVisibleString *self, IOSByteArray *contents, jboolean clone);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERVisibleString *new_OrgBouncycastleAsn1DERVisibleString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERVisibleString *create_OrgBouncycastleAsn1DERVisibleString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DERVisibleString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERVisibleString")

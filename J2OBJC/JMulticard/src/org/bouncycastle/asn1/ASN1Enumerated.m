//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Enumerated.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Enumerated.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1Enumerated must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1Enumerated () {
 @public
  IOSByteArray *contents_;
  jint start_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1Enumerated, contents_, IOSByteArray *)

inline IOSObjectArray *OrgBouncycastleAsn1ASN1Enumerated_get_cache(void);
static IOSObjectArray *OrgBouncycastleAsn1ASN1Enumerated_cache;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1Enumerated, cache, IOSObjectArray *)

@interface OrgBouncycastleAsn1ASN1Enumerated_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1Enumerated_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1Enumerated_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Enumerated_1 *new_OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Enumerated_1 *create_OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Enumerated.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1Enumerated)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1Enumerated_TYPE;


#line 11
@implementation OrgBouncycastleAsn1ASN1Enumerated


#line 30
+ (OrgBouncycastleAsn1ASN1Enumerated *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1Enumerated_getInstanceWithId_(obj);
}


#line 63
+ (OrgBouncycastleAsn1ASN1Enumerated *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                              withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1Enumerated_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}


#line 76
- (instancetype)initWithInt:(jint)value {
  OrgBouncycastleAsn1ASN1Enumerated_initWithInt_(self, value);
  return self;
}


#line 92
- (instancetype)initWithJavaMathBigInteger:(JavaMathBigInteger *)value {
  OrgBouncycastleAsn1ASN1Enumerated_initWithJavaMathBigInteger_(self, value);
  return self;
}


#line 108
- (instancetype)initWithByteArray:(IOSByteArray *)contents {
  OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_(self, contents);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(self, contents, clone);
  return self;
}


#line 128
- (JavaMathBigInteger *)getValue {
  
#line 130
  return new_JavaMathBigInteger_initWithByteArray_(contents_);
}


#line 133
- (jboolean)hasValueWithInt:(jint)x {
  
#line 135
  return (((IOSByteArray *) nil_chk(contents_))->size_ - start_) <= 4 &&
#line 136
  OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(contents_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED) == x;
}


#line 139
- (jboolean)hasValueWithJavaMathBigInteger:(JavaMathBigInteger *)x {
  
#line 141
  return nil != x &&
#line 143
  OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(contents_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED) == [x intValue] &&
#line 144
  [((JavaMathBigInteger *) nil_chk([self getValue])) isEqual:x];
}


#line 147
- (jint)intValueExact {
  
#line 149
  jint count = ((IOSByteArray *) nil_chk(contents_))->size_ - start_;
  if (count > 4) {
    
#line 152
    @throw new_JavaLangArithmeticException_initWithNSString_(@"ASN.1 Enumerated out of int range");
  }
  
#line 155
  return OrgBouncycastleAsn1ASN1Integer_intValueWithByteArray_withInt_withInt_(contents_, start_, OrgBouncycastleAsn1ASN1Integer_SIGN_EXT_SIGNED);
}


#line 158
- (jboolean)encodeConstructed {
  
#line 161
  return false;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 167
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(contents_))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 173
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_ENUMERATED withByteArray:contents_];
}


#line 176
- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)o {
  
#line 180
  if (!([o isKindOfClass:[OrgBouncycastleAsn1ASN1Enumerated class]])) {
    
#line 182
    return false;
  }
  
#line 185
  OrgBouncycastleAsn1ASN1Enumerated *other = (OrgBouncycastleAsn1ASN1Enumerated *) cast_chk(o, [OrgBouncycastleAsn1ASN1Enumerated class]);
  
#line 187
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(self->contents_, ((OrgBouncycastleAsn1ASN1Enumerated *) nil_chk(other))->contents_);
}


#line 190
- (NSUInteger)hash {
  
#line 193
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_(contents_);
}


#line 198
+ (OrgBouncycastleAsn1ASN1Enumerated *)createPrimitiveWithByteArray:(IOSByteArray *)contents
                                                        withBoolean:(jboolean)clone {
  return OrgBouncycastleAsn1ASN1Enumerated_createPrimitiveWithByteArray_withBoolean_(contents, clone);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1Enumerated;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Enumerated;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 10, 11, 12, -1, -1, -1 },
    { NULL, "Z", 0x0, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Enumerated;", 0x8, 16, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithInt:);
  methods[3].selector = @selector(initWithJavaMathBigInteger:);
  methods[4].selector = @selector(initWithByteArray:);
  methods[5].selector = @selector(initWithByteArray:withBoolean:);
  methods[6].selector = @selector(getValue);
  methods[7].selector = @selector(hasValueWithInt:);
  methods[8].selector = @selector(hasValueWithJavaMathBigInteger:);
  methods[9].selector = @selector(intValueExact);
  methods[10].selector = @selector(encodeConstructed);
  methods[11].selector = @selector(encodedLengthWithBoolean:);
  methods[12].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[13].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[14].selector = @selector(hash);
  methods[15].selector = @selector(createPrimitiveWithByteArray:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 17, -1, -1 },
    { "contents_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cache", "[LOrgBouncycastleAsn1ASN1Enumerated;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "I", "LJavaMathBigInteger;", "[B", "[BZ", "hasValue", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "hashCode", "createPrimitive", &OrgBouncycastleAsn1ASN1Enumerated_TYPE, &OrgBouncycastleAsn1ASN1Enumerated_cache };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Enumerated = { "ASN1Enumerated", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 16, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Enumerated;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1Enumerated class]) {
    OrgBouncycastleAsn1ASN1Enumerated_TYPE = new_OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(
#line 14
    OrgBouncycastleAsn1ASN1Enumerated_class_(), OrgBouncycastleAsn1BERTags_ENUMERATED);
    OrgBouncycastleAsn1ASN1Enumerated_cache = [IOSObjectArray newArrayWithLength:
#line 196
    12 type:OrgBouncycastleAsn1ASN1Enumerated_class_()];
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1Enumerated)
  }
}

@end


#line 30
OrgBouncycastleAsn1ASN1Enumerated *OrgBouncycastleAsn1ASN1Enumerated_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1Enumerated_initialize();
  
#line 33
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1Enumerated class]]) {
    
#line 35
    return (OrgBouncycastleAsn1ASN1Enumerated *) cast_chk(obj, [OrgBouncycastleAsn1ASN1Enumerated class]);
  }
  
#line 38
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 40
    @try {
      
#line 42
      return (OrgBouncycastleAsn1ASN1Enumerated *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1Enumerated_TYPE)) fromByteArrayWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])], [OrgBouncycastleAsn1ASN1Enumerated class]);
    }
    @catch (JavaLangException *e) {
      
#line 46
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"encoding error in getInstance: ", [e description]));
    }
  }
  
#line 50
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 63
OrgBouncycastleAsn1ASN1Enumerated *OrgBouncycastleAsn1ASN1Enumerated_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1Enumerated_initialize();
  return (OrgBouncycastleAsn1ASN1Enumerated *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1Enumerated_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1Enumerated class]);
}


#line 76
void OrgBouncycastleAsn1ASN1Enumerated_initWithInt_(OrgBouncycastleAsn1ASN1Enumerated *self, jint value) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (value < 0) {
    
#line 80
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"enumerated must be non-negative");
  }
  
#line 83
  self->contents_ = [((JavaMathBigInteger *) nil_chk(JavaMathBigInteger_valueOfWithLong_(value))) toByteArray];
  self->start_ = 0;
}


#line 76
OrgBouncycastleAsn1ASN1Enumerated *new_OrgBouncycastleAsn1ASN1Enumerated_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithInt_, value)
}


#line 76
OrgBouncycastleAsn1ASN1Enumerated *create_OrgBouncycastleAsn1ASN1Enumerated_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithInt_, value)
}


#line 92
void OrgBouncycastleAsn1ASN1Enumerated_initWithJavaMathBigInteger_(OrgBouncycastleAsn1ASN1Enumerated *self, JavaMathBigInteger *value) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if ([((JavaMathBigInteger *) nil_chk(value)) signum] < 0) {
    
#line 96
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"enumerated must be non-negative");
  }
  
#line 99
  self->contents_ = [value toByteArray];
  self->start_ = 0;
}


#line 92
OrgBouncycastleAsn1ASN1Enumerated *new_OrgBouncycastleAsn1ASN1Enumerated_initWithJavaMathBigInteger_(JavaMathBigInteger *value) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithJavaMathBigInteger_, value)
}


#line 92
OrgBouncycastleAsn1ASN1Enumerated *create_OrgBouncycastleAsn1ASN1Enumerated_initWithJavaMathBigInteger_(JavaMathBigInteger *value) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithJavaMathBigInteger_, value)
}


#line 108
void OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_(OrgBouncycastleAsn1ASN1Enumerated *self, IOSByteArray *contents) {
  OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(self,
#line 110
  contents, true);
}


#line 108
OrgBouncycastleAsn1ASN1Enumerated *new_OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_(IOSByteArray *contents) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithByteArray_, contents)
}


#line 108
OrgBouncycastleAsn1ASN1Enumerated *create_OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_(IOSByteArray *contents) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithByteArray_, contents)
}


#line 113
void OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1Enumerated *self, IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (OrgBouncycastleAsn1ASN1Integer_isMalformedWithByteArray_(contents)) {
    
#line 117
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"malformed enumerated");
  }
  if (0 != (IOSByteArray_Get(nil_chk(contents), 0) & (jint) 0x80)) {
    
#line 121
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"enumerated must be non-negative");
  }
  
#line 124
  self->contents_ = clone ? OrgBouncycastleUtilArrays_cloneWithByteArray_(contents) : contents;
  self->start_ = OrgBouncycastleAsn1ASN1Integer_signBytesToSkipWithByteArray_(contents);
}


#line 113
OrgBouncycastleAsn1ASN1Enumerated *new_OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithByteArray_withBoolean_, contents, clone)
}


#line 113
OrgBouncycastleAsn1ASN1Enumerated *create_OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Enumerated, initWithByteArray_withBoolean_, contents, clone)
}


#line 198
OrgBouncycastleAsn1ASN1Enumerated *OrgBouncycastleAsn1ASN1Enumerated_createPrimitiveWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1Enumerated_initialize();
  if (((IOSByteArray *) nil_chk(contents))->size_ > 1) {
    
#line 202
    return new_OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(contents, clone);
  }
  
#line 205
  if (contents->size_ == 0) {
    
#line 207
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"ENUMERATED has zero length");
  }
  jint value = IOSByteArray_Get(contents, 0) & (jint) 0xff;
  
#line 211
  if (value >= ((IOSObjectArray *) nil_chk(OrgBouncycastleAsn1ASN1Enumerated_cache))->size_) {
    
#line 213
    return new_OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(contents, clone);
  }
  
#line 216
  OrgBouncycastleAsn1ASN1Enumerated *possibleMatch = IOSObjectArray_Get(OrgBouncycastleAsn1ASN1Enumerated_cache, value);
  
#line 218
  if (possibleMatch == nil) {
    
#line 220
    possibleMatch = IOSObjectArray_SetAndConsume(OrgBouncycastleAsn1ASN1Enumerated_cache, value, new_OrgBouncycastleAsn1ASN1Enumerated_initWithByteArray_withBoolean_(contents, clone));
  }
  
#line 223
  return possibleMatch;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1Enumerated)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1Enumerated.java"


#line 15
@implementation OrgBouncycastleAsn1ASN1Enumerated_1


#line 15
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 16
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 19
  return OrgBouncycastleAsn1ASN1Enumerated_createPrimitiveWithByteArray_withBoolean_([((OrgBouncycastleAsn1DEROctetString *) nil_chk(octetString)) getOctets], false);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "LOrgBouncycastleAsn1ASN1Enumerated;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1Enumerated_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1Enumerated_1;
}

@end


#line 15
void OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1Enumerated_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 15
  javaClass, tagNumber);
}


#line 15
OrgBouncycastleAsn1ASN1Enumerated_1 *new_OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1Enumerated_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 15
OrgBouncycastleAsn1ASN1Enumerated_1 *create_OrgBouncycastleAsn1ASN1Enumerated_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1Enumerated_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

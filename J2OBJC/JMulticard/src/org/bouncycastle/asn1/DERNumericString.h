//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DERNumericString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERNumericString")
#ifdef RESTRICT_OrgBouncycastleAsn1DERNumericString
#define INCLUDE_ALL_OrgBouncycastleAsn1DERNumericString 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DERNumericString 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DERNumericString

#if !defined (OrgBouncycastleAsn1DERNumericString_) && (INCLUDE_ALL_OrgBouncycastleAsn1DERNumericString || defined(INCLUDE_OrgBouncycastleAsn1DERNumericString))
#define OrgBouncycastleAsn1DERNumericString_

#define RESTRICT_OrgBouncycastleAsn1ASN1NumericString 1
#define INCLUDE_OrgBouncycastleAsn1ASN1NumericString 1
#include "org/bouncycastle/asn1/ASN1NumericString.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1TaggedObject;

/*!
 @brief DER NumericString object - this is an ascii string of characters {0,1,2,3,4,5,6,7,8,9, }.
 ASN.1 NUMERIC-STRING object. 
 <p>
  This is an ASCII string of characters {0,1,2,3,4,5,6,7,8,9} + space. 
 <p>
  See X.680 section 37.2. 
 <p>
  Explicit character set escape sequences are not allowed.
 */
@interface OrgBouncycastleAsn1DERNumericString : OrgBouncycastleAsn1ASN1NumericString

#pragma mark Public

/*!
 @brief Basic constructor -  without validation..
 */
- (instancetype)initWithNSString:(NSString *)string;

/*!
 @brief Constructor with optional validation.
 @param string the base string to wrap.
 @param validate whether or not to check the string.
 @throw IllegalArgumentExceptionif validate is true and the string
  contains characters that should not be in a NumericString.
 */
- (instancetype)initWithNSString:(NSString *)string
                     withBoolean:(jboolean)validate;

/*!
 @brief Return an Numeric String from a tagged object.
 @param obj the tagged object holding the object we want
 @param explicit_ true if the object is meant to be explicitly tagged false                  otherwise.
 @throw IllegalArgumentExceptionif the tagged object cannot be converted.
 @return a DERNumericString instance, or null.
 */
+ (OrgBouncycastleAsn1DERNumericString *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                withBoolean:(jboolean)explicit_;

/*!
 @brief Return a Numeric string from the passed in object
 @param obj a DERNumericString or an object that can be converted into one.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 @return a DERNumericString instance, or null
 */
+ (OrgBouncycastleAsn1DERNumericString *)getInstanceWithId:(id)obj;

#pragma mark Package-Private

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1DERNumericString)

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *OrgBouncycastleAsn1DERNumericString_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *OrgBouncycastleAsn1DERNumericString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERNumericString_initWithNSString_(OrgBouncycastleAsn1DERNumericString *self, NSString *string);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *new_OrgBouncycastleAsn1DERNumericString_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *create_OrgBouncycastleAsn1DERNumericString_initWithNSString_(NSString *string);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERNumericString_initWithNSString_withBoolean_(OrgBouncycastleAsn1DERNumericString *self, NSString *string, jboolean validate);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *new_OrgBouncycastleAsn1DERNumericString_initWithNSString_withBoolean_(NSString *string, jboolean validate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *create_OrgBouncycastleAsn1DERNumericString_initWithNSString_withBoolean_(NSString *string, jboolean validate);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DERNumericString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1DERNumericString *self, IOSByteArray *contents, jboolean clone);

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *new_OrgBouncycastleAsn1DERNumericString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DERNumericString *create_OrgBouncycastleAsn1DERNumericString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DERNumericString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DERNumericString")

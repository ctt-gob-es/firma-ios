//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/util/ASN1Dump.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1UtilASN1Dump")
#ifdef RESTRICT_OrgBouncycastleAsn1UtilASN1Dump
#define INCLUDE_ALL_OrgBouncycastleAsn1UtilASN1Dump 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1UtilASN1Dump 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1UtilASN1Dump

#if !defined (OrgBouncycastleAsn1UtilASN1Dump_) && (INCLUDE_ALL_OrgBouncycastleAsn1UtilASN1Dump || defined(INCLUDE_OrgBouncycastleAsn1UtilASN1Dump))
#define OrgBouncycastleAsn1UtilASN1Dump_

@class JavaLangStringBuffer;
@class OrgBouncycastleAsn1ASN1Primitive;

/*!
 @brief Utility class for dumping ASN.1 objects as (hopefully) human friendly strings.
 */
@interface OrgBouncycastleAsn1UtilASN1Dump : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief dump out a DER object as a formatted string, in non-verbose mode.
 @param obj the ASN1Primitive to be dumped out.
 @return the resulting string.
 */
+ (NSString *)dumpAsStringWithId:(id)obj;

/*!
 @brief Dump out the object as a string.
 @param obj the object to be dumped
 @param verbose if true, dump out the contents of octet and bit strings.
 @return the resulting string.
 */
+ (NSString *)dumpAsStringWithId:(id)obj
                     withBoolean:(jboolean)verbose;

#pragma mark Package-Private

/*!
 @brief dump a DER object as a formatted string with indentation
 @param obj the ASN1Primitive to be dumped out.
 */
+ (void)_dumpAsStringWithNSString:(NSString *)indent
                      withBoolean:(jboolean)verbose
withOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)obj
         withJavaLangStringBuffer:(JavaLangStringBuffer *)buf;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1UtilASN1Dump)

FOUNDATION_EXPORT void OrgBouncycastleAsn1UtilASN1Dump_init(OrgBouncycastleAsn1UtilASN1Dump *self);

FOUNDATION_EXPORT OrgBouncycastleAsn1UtilASN1Dump *new_OrgBouncycastleAsn1UtilASN1Dump_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1UtilASN1Dump *create_OrgBouncycastleAsn1UtilASN1Dump_init(void);

FOUNDATION_EXPORT void OrgBouncycastleAsn1UtilASN1Dump__dumpAsStringWithNSString_withBoolean_withOrgBouncycastleAsn1ASN1Primitive_withJavaLangStringBuffer_(NSString *indent, jboolean verbose, OrgBouncycastleAsn1ASN1Primitive *obj, JavaLangStringBuffer *buf);

FOUNDATION_EXPORT NSString *OrgBouncycastleAsn1UtilASN1Dump_dumpAsStringWithId_(id obj);

FOUNDATION_EXPORT NSString *OrgBouncycastleAsn1UtilASN1Dump_dumpAsStringWithId_withBoolean_(id obj, jboolean verbose);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1UtilASN1Dump)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1UtilASN1Dump")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UniversalString.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuffer.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalString.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERUniversalString.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1UniversalString must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1UniversalString ()

+ (void)encodeHexByteWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                      withInt:(jint)i;

+ (void)encodeHexDLWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                    withInt:(jint)dl;

@end

inline IOSCharArray *OrgBouncycastleAsn1ASN1UniversalString_get_table(void);
static IOSCharArray *OrgBouncycastleAsn1ASN1UniversalString_table;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1ASN1UniversalString, table, IOSCharArray *)

__attribute__((unused)) static NSString *OrgBouncycastleAsn1ASN1UniversalString_getString(OrgBouncycastleAsn1ASN1UniversalString *self);

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1UniversalString_encodeHexByteWithJavaLangStringBuffer_withInt_(JavaLangStringBuffer *buf, jint i);

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1UniversalString_encodeHexDLWithJavaLangStringBuffer_withInt_(JavaLangStringBuffer *buf, jint dl);

@interface OrgBouncycastleAsn1ASN1UniversalString_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1UniversalString_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1UniversalString_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1UniversalString_1 *new_OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1UniversalString_1 *create_OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UniversalString.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1UniversalString)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1UniversalString_TYPE;


#line 11
@implementation OrgBouncycastleAsn1ASN1UniversalString


#line 34
+ (OrgBouncycastleAsn1ASN1UniversalString *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1UniversalString_getInstanceWithId_(obj);
}


#line 72
+ (OrgBouncycastleAsn1ASN1UniversalString *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                                   withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1UniversalString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}


#line 79
- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1UniversalString_initWithByteArray_withBoolean_(self, contents, clone);
  return self;
}


#line 84
- (NSString *)getString {
  return OrgBouncycastleAsn1ASN1UniversalString_getString(self);
}


#line 100
- (NSString *)description {
  
#line 103
  return OrgBouncycastleAsn1ASN1UniversalString_getString(self);
}

- (IOSByteArray *)getOctets {
  
#line 108
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(contents_);
}


#line 111
- (jboolean)encodeConstructed {
  
#line 114
  return false;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 120
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(contents_))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 126
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_UNIVERSAL_STRING withByteArray:contents_];
}


#line 129
- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other {
  
#line 132
  if (!([other isKindOfClass:[OrgBouncycastleAsn1ASN1UniversalString class]])) {
    
#line 134
    return false;
  }
  
#line 137
  OrgBouncycastleAsn1ASN1UniversalString *that = (OrgBouncycastleAsn1ASN1UniversalString *) cast_chk(other, [OrgBouncycastleAsn1ASN1UniversalString class]);
  
#line 139
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(self->contents_, ((OrgBouncycastleAsn1ASN1UniversalString *) nil_chk(that))->contents_);
}


#line 142
- (NSUInteger)hash {
  
#line 145
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_(contents_);
}

+ (OrgBouncycastleAsn1ASN1UniversalString *)createPrimitiveWithByteArray:(IOSByteArray *)contents {
  return OrgBouncycastleAsn1ASN1UniversalString_createPrimitiveWithByteArray_(contents);
}


#line 153
+ (void)encodeHexByteWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                      withInt:(jint)i {
  OrgBouncycastleAsn1ASN1UniversalString_encodeHexByteWithJavaLangStringBuffer_withInt_(buf, i);
}


#line 159
+ (void)encodeHexDLWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                                    withInt:(jint)dl {
  OrgBouncycastleAsn1ASN1UniversalString_encodeHexDLWithJavaLangStringBuffer_withInt_(buf, dl);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1UniversalString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1UniversalString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x10, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 7, 8, 9, -1, -1, -1 },
    { NULL, "Z", 0x10, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 12, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1UniversalString;", 0x8, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0xa, 17, 16, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithByteArray:withBoolean:);
  methods[3].selector = @selector(getString);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(getOctets);
  methods[6].selector = @selector(encodeConstructed);
  methods[7].selector = @selector(encodedLengthWithBoolean:);
  methods[8].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[9].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(createPrimitiveWithByteArray:);
  methods[12].selector = @selector(encodeHexByteWithJavaLangStringBuffer:withInt:);
  methods[13].selector = @selector(encodeHexDLWithJavaLangStringBuffer:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 18, -1, -1 },
    { "table", "[C", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "contents_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "[BZ", "toString", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "hashCode", "createPrimitive", "[B", "encodeHexByte", "LJavaLangStringBuffer;I", "encodeHexDL", &OrgBouncycastleAsn1ASN1UniversalString_TYPE, &OrgBouncycastleAsn1ASN1UniversalString_table };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1UniversalString = { "ASN1UniversalString", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x401, 14, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1UniversalString;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1UniversalString class]) {
    OrgBouncycastleAsn1ASN1UniversalString_TYPE = new_OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(
#line 15
    OrgBouncycastleAsn1ASN1UniversalString_class_(), OrgBouncycastleAsn1BERTags_UNIVERSAL_STRING);
    OrgBouncycastleAsn1ASN1UniversalString_table = [IOSCharArray newArrayWithChars:(jchar[]){
#line 24
      '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' } count:16];
      J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1UniversalString)
    }
  }

@end


#line 34
OrgBouncycastleAsn1ASN1UniversalString *OrgBouncycastleAsn1ASN1UniversalString_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1UniversalString_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1UniversalString class]]) {
    
#line 38
    return (OrgBouncycastleAsn1ASN1UniversalString *) cast_chk(obj, [OrgBouncycastleAsn1ASN1UniversalString class]);
  }
  if ([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    
#line 42
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1UniversalString class]]) {
      
#line 45
      return (OrgBouncycastleAsn1ASN1UniversalString *) primitive;
    }
  }
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 50
    @try {
      
#line 52
      return (OrgBouncycastleAsn1ASN1UniversalString *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1UniversalString_TYPE)) fromByteArrayWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])], [OrgBouncycastleAsn1ASN1UniversalString class]);
    }
    @catch (JavaLangException *e) {
      
#line 56
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"encoding error getInstance: ", [e description]));
    }
  }
  
#line 60
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 72
OrgBouncycastleAsn1ASN1UniversalString *OrgBouncycastleAsn1ASN1UniversalString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1UniversalString_initialize();
  return (OrgBouncycastleAsn1ASN1UniversalString *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1UniversalString_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1UniversalString class]);
}


#line 79
void OrgBouncycastleAsn1ASN1UniversalString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1UniversalString *self, IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  self->contents_ = clone ? OrgBouncycastleUtilArrays_cloneWithByteArray_(contents) : contents;
}

NSString *OrgBouncycastleAsn1ASN1UniversalString_getString(OrgBouncycastleAsn1ASN1UniversalString *self) {
  
#line 87
  jint dl = ((IOSByteArray *) nil_chk(self->contents_))->size_;
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_initWithInt_(3 + 2 * (OrgBouncycastleAsn1ASN1OutputStream_getLengthOfDLWithInt_(dl) + dl));
  (void) [buf appendWithNSString:@"#1C"];
  OrgBouncycastleAsn1ASN1UniversalString_encodeHexDLWithJavaLangStringBuffer_withInt_(buf, dl);
  
#line 92
  for (jint i = 0; i < dl; ++i) {
    
#line 94
    OrgBouncycastleAsn1ASN1UniversalString_encodeHexByteWithJavaLangStringBuffer_withInt_(buf, IOSByteArray_Get(self->contents_, i));
  }
  
#line 97
  return [buf description];
}


#line 148
OrgBouncycastleAsn1ASN1UniversalString *OrgBouncycastleAsn1ASN1UniversalString_createPrimitiveWithByteArray_(IOSByteArray *contents) {
  OrgBouncycastleAsn1ASN1UniversalString_initialize();
  return new_OrgBouncycastleAsn1DERUniversalString_initWithByteArray_withBoolean_(contents, false);
}

void OrgBouncycastleAsn1ASN1UniversalString_encodeHexByteWithJavaLangStringBuffer_withInt_(JavaLangStringBuffer *buf, jint i) {
  OrgBouncycastleAsn1ASN1UniversalString_initialize();
  (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithChar:IOSCharArray_Get(nil_chk(OrgBouncycastleAsn1ASN1UniversalString_table), (JreURShift32(i, 4)) & (jint) 0xF)];
  (void) [buf appendWithChar:IOSCharArray_Get(OrgBouncycastleAsn1ASN1UniversalString_table, i & (jint) 0xF)];
}

void OrgBouncycastleAsn1ASN1UniversalString_encodeHexDLWithJavaLangStringBuffer_withInt_(JavaLangStringBuffer *buf, jint dl) {
  OrgBouncycastleAsn1ASN1UniversalString_initialize();
  if (dl < 128) {
    
#line 163
    OrgBouncycastleAsn1ASN1UniversalString_encodeHexByteWithJavaLangStringBuffer_withInt_(buf, dl);
    return;
  }
  
#line 167
  IOSByteArray *stack = [IOSByteArray newArrayWithLength:5];
  jint pos = 5;
  
#line 170
  do {
    
#line 172
    *IOSByteArray_GetRef(stack, --pos) = (jbyte) dl;
    JreURShiftAssignInt(&dl, 8);
  }
  while (dl != 0);
  
#line 177
  jint count = stack->size_ - pos;
  *IOSByteArray_GetRef(stack, --pos) = (jbyte) ((jint) 0x80 | count);
  
#line 180
  do {
    
#line 182
    OrgBouncycastleAsn1ASN1UniversalString_encodeHexByteWithJavaLangStringBuffer_withInt_(buf, IOSByteArray_Get(stack, pos++));
  }
  while (pos < stack->size_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1UniversalString)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1UniversalString.java"


#line 16
@implementation OrgBouncycastleAsn1ASN1UniversalString_1


#line 16
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 17
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 20
  return OrgBouncycastleAsn1ASN1UniversalString_createPrimitiveWithByteArray_([((OrgBouncycastleAsn1DEROctetString *) nil_chk(octetString)) getOctets]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "LOrgBouncycastleAsn1ASN1UniversalString;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1UniversalString_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1UniversalString_1;
}

@end


#line 16
void OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1UniversalString_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 16
  javaClass, tagNumber);
}


#line 16
OrgBouncycastleAsn1ASN1UniversalString_1 *new_OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1UniversalString_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 16
OrgBouncycastleAsn1ASN1UniversalString_1 *create_OrgBouncycastleAsn1ASN1UniversalString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1UniversalString_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

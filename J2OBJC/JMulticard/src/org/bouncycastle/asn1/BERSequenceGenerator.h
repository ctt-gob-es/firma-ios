//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/BERSequenceGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1BERSequenceGenerator")
#ifdef RESTRICT_OrgBouncycastleAsn1BERSequenceGenerator
#define INCLUDE_ALL_OrgBouncycastleAsn1BERSequenceGenerator 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1BERSequenceGenerator 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1BERSequenceGenerator

#if !defined (OrgBouncycastleAsn1BERSequenceGenerator_) && (INCLUDE_ALL_OrgBouncycastleAsn1BERSequenceGenerator || defined(INCLUDE_OrgBouncycastleAsn1BERSequenceGenerator))
#define OrgBouncycastleAsn1BERSequenceGenerator_

#define RESTRICT_OrgBouncycastleAsn1BERGenerator 1
#define INCLUDE_OrgBouncycastleAsn1BERGenerator 1
#include "org/bouncycastle/asn1/BERGenerator.h"

@class JavaIoOutputStream;
@class OrgBouncycastleAsn1ASN1Primitive;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief A stream generator for DER SEQUENCEs
 */
@interface OrgBouncycastleAsn1BERSequenceGenerator : OrgBouncycastleAsn1BERGenerator

#pragma mark Public

/*!
 @brief Use the passed in stream as the target for the generator, writing out the header tag
  for a constructed SEQUENCE.
 @param outArg target stream
 @throw IOExceptionif the target stream cannot be written to.
 */
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

/*!
 @brief Use the passed in stream as the target for the generator, writing out the header tag
  for a tagged constructed SEQUENCE (possibly implicit).
 @param outArg target stream
 @param tagNo the tag number to introduce
 @param isExplicit true if this is an explicitly tagged object, false otherwise.
 @throw IOExceptionif the target stream cannot be written to.
 */
- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                                   withInt:(jint)tagNo
                               withBoolean:(jboolean)isExplicit;

/*!
 @brief Add an object to the SEQUENCE being generated.
 @param object an ASN.1 encodable object to add.
 @throw IOExceptionif the target stream cannot be written to or the object cannot be encoded.
 */
- (void)addObjectWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)object;

/*!
 @brief Add an ASN1.1 primitive to the SEQUENCE being generated.
 @param primitive an ASN.1 primitive to add.
 @throw IOExceptionif the target stream cannot be written to or the primitive cannot be encoded.
 */
- (void)addObjectWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)primitive;

/*!
 @brief Close of the generator, writing out the BER end tag.
 @throw IOExceptionif the target stream cannot be written.
 */
- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1BERSequenceGenerator)

FOUNDATION_EXPORT void OrgBouncycastleAsn1BERSequenceGenerator_initWithJavaIoOutputStream_(OrgBouncycastleAsn1BERSequenceGenerator *self, JavaIoOutputStream *outArg);

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSequenceGenerator *new_OrgBouncycastleAsn1BERSequenceGenerator_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSequenceGenerator *create_OrgBouncycastleAsn1BERSequenceGenerator_initWithJavaIoOutputStream_(JavaIoOutputStream *outArg);

FOUNDATION_EXPORT void OrgBouncycastleAsn1BERSequenceGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(OrgBouncycastleAsn1BERSequenceGenerator *self, JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit);

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSequenceGenerator *new_OrgBouncycastleAsn1BERSequenceGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1BERSequenceGenerator *create_OrgBouncycastleAsn1BERSequenceGenerator_initWithJavaIoOutputStream_withInt_withBoolean_(JavaIoOutputStream *outArg, jint tagNo, jboolean isExplicit);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1BERSequenceGenerator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1BERSequenceGenerator")

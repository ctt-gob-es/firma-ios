//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/DLBitString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1DLBitString")
#ifdef RESTRICT_OrgBouncycastleAsn1DLBitString
#define INCLUDE_ALL_OrgBouncycastleAsn1DLBitString 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1DLBitString 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1DLBitString

#if !defined (OrgBouncycastleAsn1DLBitString_) && (INCLUDE_ALL_OrgBouncycastleAsn1DLBitString || defined(INCLUDE_OrgBouncycastleAsn1DLBitString))
#define OrgBouncycastleAsn1DLBitString_

#define RESTRICT_OrgBouncycastleAsn1ASN1BitString 1
#define INCLUDE_OrgBouncycastleAsn1ASN1BitString 1
#include "org/bouncycastle/asn1/ASN1BitString.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1OutputStream;
@class OrgBouncycastleAsn1ASN1Primitive;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief A Definite length BIT STRING
 */
@interface OrgBouncycastleAsn1DLBitString : OrgBouncycastleAsn1ASN1BitString

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)obj;

- (instancetype)initWithByte:(jbyte)data
                     withInt:(jint)padBits;

- (instancetype)initWithByteArray:(IOSByteArray *)data;

- (instancetype)initWithByteArray:(IOSByteArray *)data
                          withInt:(jint)padBits;

- (instancetype)initWithInt:(jint)value;

#pragma mark Package-Private

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)check;

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag;

+ (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag
                                             withByte:(jbyte)pad
                                        withByteArray:(IOSByteArray *)buf
                                              withInt:(jint)off
                                              withInt:(jint)len;

+ (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag
                                        withByteArray:(IOSByteArray *)buf
                                              withInt:(jint)off
                                              withInt:(jint)len;

- (jboolean)encodeConstructed;

- (jint)encodedLengthWithBoolean:(jboolean)withTag;

+ (jint)encodedLengthWithBoolean:(jboolean)withTag
                         withInt:(jint)contentsLength;

- (OrgBouncycastleAsn1ASN1Primitive *)toDLObject;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1DLBitString)

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_initWithByteArray_(OrgBouncycastleAsn1DLBitString *self, IOSByteArray *data);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_initWithByte_withInt_(OrgBouncycastleAsn1DLBitString *self, jbyte data, jint padBits);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByte_withInt_(jbyte data, jint padBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByte_withInt_(jbyte data, jint padBits);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(OrgBouncycastleAsn1DLBitString *self, IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByteArray_withInt_(IOSByteArray *data, jint padBits);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_initWithInt_(OrgBouncycastleAsn1DLBitString *self, jint value);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithInt_(jint value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithInt_(jint value);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1DLBitString *self, id<OrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithOrgBouncycastleAsn1ASN1Encodable_(id<OrgBouncycastleAsn1ASN1Encodable> obj);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1DLBitString *self, IOSByteArray *contents, jboolean check);

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *new_OrgBouncycastleAsn1DLBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1DLBitString *create_OrgBouncycastleAsn1DLBitString_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean check);

FOUNDATION_EXPORT jint OrgBouncycastleAsn1DLBitString_encodedLengthWithBoolean_withInt_(jboolean withTag, jint contentsLength);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByteArray_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *outArg, jboolean withTag, IOSByteArray *buf, jint off, jint len);

FOUNDATION_EXPORT void OrgBouncycastleAsn1DLBitString_encodeWithOrgBouncycastleAsn1ASN1OutputStream_withBoolean_withByte_withByteArray_withInt_withInt_(OrgBouncycastleAsn1ASN1OutputStream *outArg, jboolean withTag, jbyte pad, IOSByteArray *buf, jint off, jint len);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1DLBitString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1DLBitString")

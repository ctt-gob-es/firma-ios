//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/AttCertIssuer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/x509/AttCertIssuer.h"
#include "org/bouncycastle/asn1/x509/GeneralNames.h"
#include "org/bouncycastle/asn1/x509/V2Form.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x509/AttCertIssuer must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/AttCertIssuer.java"


#line 11
@implementation OrgBouncycastleAsn1X509AttCertIssuer


#line 18
+ (OrgBouncycastleAsn1X509AttCertIssuer *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509AttCertIssuer_getInstanceWithId_(obj);
}


#line 45
+ (OrgBouncycastleAsn1X509AttCertIssuer *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                 withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1X509AttCertIssuer_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 58
- (instancetype)initWithOrgBouncycastleAsn1X509GeneralNames:(OrgBouncycastleAsn1X509GeneralNames *)names {
  OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509GeneralNames_(self, names);
  return self;
}


#line 65
- (instancetype)initWithOrgBouncycastleAsn1X509V2Form:(OrgBouncycastleAsn1X509V2Form *)v2Form {
  OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509V2Form_(self, v2Form);
  return self;
}


#line 72
- (id<OrgBouncycastleAsn1ASN1Encodable>)getIssuer {
  
#line 74
  return obj_;
}


#line 87
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 90
  return choiceObj_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1X509AttCertIssuer;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AttCertIssuer;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithOrgBouncycastleAsn1X509GeneralNames:);
  methods[3].selector = @selector(initWithOrgBouncycastleAsn1X509V2Form:);
  methods[4].selector = @selector(getIssuer);
  methods[5].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "obj_", "LOrgBouncycastleAsn1ASN1Encodable;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "choiceObj_", "LOrgBouncycastleAsn1ASN1Primitive;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LOrgBouncycastleAsn1X509GeneralNames;", "LOrgBouncycastleAsn1X509V2Form;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X509AttCertIssuer = { "AttCertIssuer", "org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 6, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X509AttCertIssuer;
}

@end


#line 18
OrgBouncycastleAsn1X509AttCertIssuer *OrgBouncycastleAsn1X509AttCertIssuer_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509AttCertIssuer_initialize();
  
#line 21
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1X509AttCertIssuer class]]) {
    
#line 23
    return (OrgBouncycastleAsn1X509AttCertIssuer *) cast_chk(obj, [OrgBouncycastleAsn1X509AttCertIssuer class]);
  }
  else if ([obj isKindOfClass:[OrgBouncycastleAsn1X509V2Form class]]) {
    
#line 27
    return new_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509V2Form_(OrgBouncycastleAsn1X509V2Form_getInstanceWithId_(obj));
  }
  else if ([obj isKindOfClass:[OrgBouncycastleAsn1X509GeneralNames class]]) {
    
#line 31
    return new_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509GeneralNames_((OrgBouncycastleAsn1X509GeneralNames *) obj);
  }
  else if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
    
#line 35
    return new_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509V2Form_(OrgBouncycastleAsn1X509V2Form_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_((OrgBouncycastleAsn1ASN1TaggedObject *) obj, false));
  }
  else if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]) {
    
#line 39
    return new_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleAsn1X509GeneralNames_getInstanceWithId_(obj));
  }
  
#line 42
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"unknown object in factory: ", [[obj java_getClass] getName]));
}


#line 45
OrgBouncycastleAsn1X509AttCertIssuer *OrgBouncycastleAsn1X509AttCertIssuer_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1X509AttCertIssuer_initialize();
  
#line 49
  return OrgBouncycastleAsn1X509AttCertIssuer_getInstanceWithId_([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(obj)) getObject]);
}


#line 58
void OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleAsn1X509AttCertIssuer *self, OrgBouncycastleAsn1X509GeneralNames *names) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 61
  self->obj_ = names;
  self->choiceObj_ = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(self->obj_)) toASN1Primitive];
}


#line 58
OrgBouncycastleAsn1X509AttCertIssuer *new_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleAsn1X509GeneralNames *names) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509AttCertIssuer, initWithOrgBouncycastleAsn1X509GeneralNames_, names)
}


#line 58
OrgBouncycastleAsn1X509AttCertIssuer *create_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509GeneralNames_(OrgBouncycastleAsn1X509GeneralNames *names) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509AttCertIssuer, initWithOrgBouncycastleAsn1X509GeneralNames_, names)
}


#line 65
void OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509V2Form_(OrgBouncycastleAsn1X509AttCertIssuer *self, OrgBouncycastleAsn1X509V2Form *v2Form) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 68
  self->obj_ = v2Form;
  self->choiceObj_ = new_OrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(false, 0, self->obj_);
}


#line 65
OrgBouncycastleAsn1X509AttCertIssuer *new_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509V2Form_(OrgBouncycastleAsn1X509V2Form *v2Form) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509AttCertIssuer, initWithOrgBouncycastleAsn1X509V2Form_, v2Form)
}


#line 65
OrgBouncycastleAsn1X509AttCertIssuer *create_OrgBouncycastleAsn1X509AttCertIssuer_initWithOrgBouncycastleAsn1X509V2Form_(OrgBouncycastleAsn1X509V2Form *v2Form) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509AttCertIssuer, initWithOrgBouncycastleAsn1X509V2Form_, v2Form)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509AttCertIssuer)

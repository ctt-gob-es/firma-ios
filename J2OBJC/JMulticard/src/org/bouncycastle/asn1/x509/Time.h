//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/Time.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509Time")
#ifdef RESTRICT_OrgBouncycastleAsn1X509Time
#define INCLUDE_ALL_OrgBouncycastleAsn1X509Time 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X509Time 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X509Time

#if !defined (OrgBouncycastleAsn1X509Time_) && (INCLUDE_ALL_OrgBouncycastleAsn1X509Time || defined(INCLUDE_OrgBouncycastleAsn1X509Time))
#define OrgBouncycastleAsn1X509Time_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

#define RESTRICT_OrgBouncycastleAsn1ASN1Choice 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Choice 1
#include "org/bouncycastle/asn1/ASN1Choice.h"

@class JavaUtilDate;
@class JavaUtilLocale;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1TaggedObject;

@interface OrgBouncycastleAsn1X509Time : OrgBouncycastleAsn1ASN1Object < OrgBouncycastleAsn1ASN1Choice > {
 @public
  OrgBouncycastleAsn1ASN1Primitive *time_;
}

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)time;

/*!
 @brief Creates a time object from a given date - if the date is between 1950
  and 2049 a UTCTime object is generated, otherwise a GeneralizedTime
  is used.
 @param time a date object representing the time of interest.
 */
- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)time;

/*!
 @brief Creates a time object from a given date and locale - if the date is between 1950
  and 2049 a UTCTime object is generated, otherwise a GeneralizedTime
  is used.You may need to use this constructor if the default locale
  doesn't use a Gregorian calender so that the GeneralizedTime produced is compatible with other ASN.1 implementations.
 @param time a date object representing the time of interest.
 @param locale an appropriate Locale for producing an ASN.1 GeneralizedTime value.
 */
- (instancetype)initWithJavaUtilDate:(JavaUtilDate *)time
                  withJavaUtilLocale:(JavaUtilLocale *)locale;

- (JavaUtilDate *)getDate;

+ (OrgBouncycastleAsn1X509Time *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                        withBoolean:(jboolean)explicit_;

+ (OrgBouncycastleAsn1X509Time *)getInstanceWithId:(id)obj;

- (NSString *)getTime;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

  Time ::= CHOICE {
              utcTime        UTCTime,
              generalTime    GeneralizedTime } 
  
@endcode
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X509Time)

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509Time, time_, OrgBouncycastleAsn1ASN1Primitive *)

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *OrgBouncycastleAsn1X509Time_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509Time_initWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1X509Time *self, OrgBouncycastleAsn1ASN1Primitive *time);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *new_OrgBouncycastleAsn1X509Time_initWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1Primitive *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *create_OrgBouncycastleAsn1X509Time_initWithOrgBouncycastleAsn1ASN1Primitive_(OrgBouncycastleAsn1ASN1Primitive *time);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509Time_initWithJavaUtilDate_(OrgBouncycastleAsn1X509Time *self, JavaUtilDate *time);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *new_OrgBouncycastleAsn1X509Time_initWithJavaUtilDate_(JavaUtilDate *time) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *create_OrgBouncycastleAsn1X509Time_initWithJavaUtilDate_(JavaUtilDate *time);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509Time_initWithJavaUtilDate_withJavaUtilLocale_(OrgBouncycastleAsn1X509Time *self, JavaUtilDate *time, JavaUtilLocale *locale);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *new_OrgBouncycastleAsn1X509Time_initWithJavaUtilDate_withJavaUtilLocale_(JavaUtilDate *time, JavaUtilLocale *locale) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *create_OrgBouncycastleAsn1X509Time_initWithJavaUtilDate_withJavaUtilLocale_(JavaUtilDate *time, JavaUtilLocale *locale);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509Time *OrgBouncycastleAsn1X509Time_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X509Time)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509Time")

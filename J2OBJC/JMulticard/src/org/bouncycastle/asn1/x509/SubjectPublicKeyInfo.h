//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/SubjectPublicKeyInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509SubjectPublicKeyInfo")
#ifdef RESTRICT_OrgBouncycastleAsn1X509SubjectPublicKeyInfo
#define INCLUDE_ALL_OrgBouncycastleAsn1X509SubjectPublicKeyInfo 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X509SubjectPublicKeyInfo 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X509SubjectPublicKeyInfo

#if !defined (OrgBouncycastleAsn1X509SubjectPublicKeyInfo_) && (INCLUDE_ALL_OrgBouncycastleAsn1X509SubjectPublicKeyInfo || defined(INCLUDE_OrgBouncycastleAsn1X509SubjectPublicKeyInfo))
#define OrgBouncycastleAsn1X509SubjectPublicKeyInfo_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

@class IOSByteArray;
@class OrgBouncycastleAsn1ASN1BitString;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1Sequence;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief The object that contains the public key stored in a certificate.
 <p>
  The getEncoded() method in the public keys in the JCE produces a DER
  encoded one of these.
 */
@interface OrgBouncycastleAsn1X509SubjectPublicKeyInfo : OrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                              withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)publicKey;

- (instancetype)initWithOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)algId
                                                     withByteArray:(IOSByteArray *)publicKey;

/*!
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithm;

/*!
 @return alg ID.
 */
- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getAlgorithmId;

+ (OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                        withBoolean:(jboolean)explicit_;

+ (OrgBouncycastleAsn1X509SubjectPublicKeyInfo *)getInstanceWithId:(id)obj;

/*!
 @brief for when the public key is an encoded object - if the bitstring
  can't be decoded this routine throws an IOException.
 @throw IOException- if the bit string doesn't represent a DER
  encoded object.
 @return the public key as an ASN.1 primitive.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)getPublicKey;

/*!
 @brief for when the public key is raw bits.
 @return the public key as the raw bit string...
 */
- (OrgBouncycastleAsn1ASN1BitString *)getPublicKeyData;

/*!
 @brief for when the public key is an encoded object - if the bitstring
  can't be decoded this routine throws an IOException.
 @throw IOException- if the bit string doesn't represent a DER
  encoded object.
 @return the public key as an ASN.1 primitive.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)parsePublicKey;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

  SubjectPublicKeyInfo ::= SEQUENCE {
                           algorithm AlgorithmIdentifier,
                           publicKey BIT STRING } 
  
@endcode
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X509SubjectPublicKeyInfo)

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *OrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *OrgBouncycastleAsn1X509SubjectPublicKeyInfo_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *self, OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, id<OrgBouncycastleAsn1ASN1Encodable> publicKey);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, id<OrgBouncycastleAsn1ASN1Encodable> publicKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *create_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, id<OrgBouncycastleAsn1ASN1Encodable> publicKey);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *self, OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *publicKey);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *publicKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *create_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1X509AlgorithmIdentifier_withByteArray_(OrgBouncycastleAsn1X509AlgorithmIdentifier *algId, IOSByteArray *publicKey);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509SubjectPublicKeyInfo *self, OrgBouncycastleAsn1ASN1Sequence *seq);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *new_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509SubjectPublicKeyInfo *create_OrgBouncycastleAsn1X509SubjectPublicKeyInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X509SubjectPublicKeyInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509SubjectPublicKeyInfo")

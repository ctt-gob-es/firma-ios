//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/ExtensionsGenerator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Collections.h"
#include "java/util/Enumeration.h"
#include "java/util/HashSet.h"
#include "java/util/Hashtable.h"
#include "java/util/Set.h"
#include "java/util/Vector.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1OctetString.h"
#include "org/bouncycastle/asn1/ASN1ParsingException.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x509/Extension.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"
#include "org/bouncycastle/asn1/x509/ExtensionsGenerator.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x509/ExtensionsGenerator must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X509ExtensionsGenerator () {
 @public
  JavaUtilHashtable *extensions_;
  JavaUtilVector *extOrdering_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509ExtensionsGenerator, extensions_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509ExtensionsGenerator, extOrdering_, JavaUtilVector *)

inline id<JavaUtilSet> OrgBouncycastleAsn1X509ExtensionsGenerator_get_dupsAllowed(void);
static id<JavaUtilSet> OrgBouncycastleAsn1X509ExtensionsGenerator_dupsAllowed;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1X509ExtensionsGenerator, dupsAllowed, id<JavaUtilSet>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/ExtensionsGenerator.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1X509ExtensionsGenerator)


#line 24
@implementation OrgBouncycastleAsn1X509ExtensionsGenerator

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 24
- (instancetype)init {
  OrgBouncycastleAsn1X509ExtensionsGenerator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 44
- (void)reset {
  
#line 46
  extensions_ = new_JavaUtilHashtable_init();
  extOrdering_ = new_JavaUtilVector_init();
}


#line 58
- (void)addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                    withBoolean:(jboolean)critical
                           withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)value {
  
#line 64
  [self addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withBoolean:critical withByteArray:[((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(value)) toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER]];
}


#line 75
- (void)addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                    withBoolean:(jboolean)critical
                                                  withByteArray:(IOSByteArray *)value {
  
#line 80
  if ([((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:oid]) {
    
#line 82
    if ([((id<JavaUtilSet>) nil_chk(OrgBouncycastleAsn1X509ExtensionsGenerator_dupsAllowed)) containsWithId:oid]) {
      
#line 84
      OrgBouncycastleAsn1X509Extension *existingExtension = (OrgBouncycastleAsn1X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:oid], [OrgBouncycastleAsn1X509Extension class]);
      OrgBouncycastleAsn1ASN1Sequence *seq1 = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgBouncycastleAsn1ASN1OctetString *) nil_chk(OrgBouncycastleAsn1ASN1OctetString_getInstanceWithId_([((OrgBouncycastleAsn1X509Extension *) nil_chk(existingExtension)) getExtnValue]))) getOctets]);
      OrgBouncycastleAsn1ASN1Sequence *seq2 = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(value);
      
#line 88
      OrgBouncycastleAsn1ASN1EncodableVector *items = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq1)) size] + [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq2)) size]);
      for (id<JavaUtilEnumeration> en = [seq1 getObjects]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
        
#line 91
        [items addWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>) cast_check([en nextElement], OrgBouncycastleAsn1ASN1Encodable_class_())];
      }
      for (id<JavaUtilEnumeration> en = [seq2 getObjects]; [((id<JavaUtilEnumeration>) nil_chk(en)) hasMoreElements]; ) {
        
#line 95
        [items addWithOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>) cast_check([en nextElement], OrgBouncycastleAsn1ASN1Encodable_class_())];
      }
      
#line 98
      @try {
        
#line 100
        (void) [((JavaUtilHashtable *) nil_chk(extensions_)) putWithId:oid withId:new_OrgBouncycastleAsn1X509Extension_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withByteArray_(oid, critical, [new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(items) getEncoded])];
      }
      @catch (JavaIoIOException *e) {
        
#line 104
        @throw new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_([e getMessage], e);
      }
    }
    else {
      
#line 109
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"extension ", oid, @" already added"));
    }
  }
  else {
    
#line 114
    [((JavaUtilVector *) nil_chk(extOrdering_)) addElementWithId:oid];
    (void) [((JavaUtilHashtable *) nil_chk(extensions_)) putWithId:oid withId:new_OrgBouncycastleAsn1X509Extension_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withOrgBouncycastleAsn1ASN1OctetString_(oid, critical, new_OrgBouncycastleAsn1DEROctetString_initWithByteArray_(OrgBouncycastleUtilArrays_cloneWithByteArray_(value)))];
  }
}


#line 124
- (void)addExtensionWithOrgBouncycastleAsn1X509Extension:(OrgBouncycastleAsn1X509Extension *)extension {
  
#line 127
  if ([((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:[((OrgBouncycastleAsn1X509Extension *) nil_chk(extension)) getExtnId]]) {
    
#line 129
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"extension ", [extension getExtnId], @" already added"));
  }
  
#line 132
  [((JavaUtilVector *) nil_chk(extOrdering_)) addElementWithId:[extension getExtnId]];
  (void) [((JavaUtilHashtable *) nil_chk(extensions_)) putWithId:[extension getExtnId] withId:extension];
}


#line 144
- (void)replaceExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                        withBoolean:(jboolean)critical
                               withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)value {
  
#line 150
  [self replaceExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withBoolean:critical withByteArray:[((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(value)) toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER]];
}


#line 161
- (void)replaceExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                                                        withBoolean:(jboolean)critical
                                                      withByteArray:(IOSByteArray *)value {
  
#line 166
  [self replaceExtensionWithOrgBouncycastleAsn1X509Extension:new_OrgBouncycastleAsn1X509Extension_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withBoolean_withByteArray_(oid, critical, value)];
}


#line 174
- (void)replaceExtensionWithOrgBouncycastleAsn1X509Extension:(OrgBouncycastleAsn1X509Extension *)extension {
  
#line 177
  if (![((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:[((OrgBouncycastleAsn1X509Extension *) nil_chk(extension)) getExtnId]]) {
    
#line 179
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"extension ", [extension getExtnId], @" not present"));
  }
  
#line 182
  (void) [((JavaUtilHashtable *) nil_chk(extensions_)) putWithId:[extension getExtnId] withId:extension];
}


#line 190
- (void)removeExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 193
  if (![((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:oid]) {
    
#line 195
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$", @"extension ", oid, @" not present"));
  }
  
#line 198
  [((JavaUtilVector *) nil_chk(extOrdering_)) removeElementWithId:oid];
  (void) [((JavaUtilHashtable *) nil_chk(extensions_)) removeWithId:oid];
}


#line 208
- (jboolean)hasExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 210
  return [((JavaUtilHashtable *) nil_chk(extensions_)) containsKeyWithId:oid];
}


#line 219
- (OrgBouncycastleAsn1X509Extension *)getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 221
  return (OrgBouncycastleAsn1X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:oid], [OrgBouncycastleAsn1X509Extension class]);
}


#line 229
- (jboolean)isEmpty {
  
#line 231
  return [((JavaUtilVector *) nil_chk(extOrdering_)) isEmpty];
}


#line 239
- (OrgBouncycastleAsn1X509Extensions *)generate {
  
#line 241
  IOSObjectArray *exts = [IOSObjectArray newArrayWithLength:[((JavaUtilVector *) nil_chk(extOrdering_)) size] type:OrgBouncycastleAsn1X509Extension_class_()];
  
#line 243
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(extOrdering_)) size]; i++) {
    
#line 245
    (void) IOSObjectArray_Set(exts, i, (OrgBouncycastleAsn1X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:[((JavaUtilVector *) nil_chk(extOrdering_)) elementAtWithInt:i]], [OrgBouncycastleAsn1X509Extension class]));
  }
  
#line 248
  return new_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509ExtensionArray_(exts);
}


#line 251
- (void)addExtensionWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions {
  
#line 253
  IOSObjectArray *oids = [((OrgBouncycastleAsn1X509Extensions *) nil_chk(extensions)) getExtensionOIDs];
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(oids))->size_; i++) {
    
#line 256
    OrgBouncycastleAsn1ASN1ObjectIdentifier *ident = IOSObjectArray_Get(oids, i);
    OrgBouncycastleAsn1X509Extension *ext = [extensions getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:ident];
    [self addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_(ident) withBoolean:[((OrgBouncycastleAsn1X509Extension *) nil_chk(ext)) isCritical] withByteArray:[((OrgBouncycastleAsn1ASN1OctetString *) nil_chk([ext getExtnValue])) getOctets]];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extension;", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extensions;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[3].selector = @selector(addExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:withByteArray:);
  methods[4].selector = @selector(addExtensionWithOrgBouncycastleAsn1X509Extension:);
  methods[5].selector = @selector(replaceExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:withOrgBouncycastleAsn1ASN1Encodable:);
  methods[6].selector = @selector(replaceExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withBoolean:withByteArray:);
  methods[7].selector = @selector(replaceExtensionWithOrgBouncycastleAsn1X509Extension:);
  methods[8].selector = @selector(removeExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(hasExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[10].selector = @selector(getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[11].selector = @selector(isEmpty);
  methods[12].selector = @selector(generate);
  methods[13].selector = @selector(addExtensionWithOrgBouncycastleAsn1X509Extensions:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "extensions_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extOrdering_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dupsAllowed", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
  };
  static const void *ptrTable[] = { "addExtension", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;ZLOrgBouncycastleAsn1ASN1Encodable;", "LJavaIoIOException;", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;Z[B", "LOrgBouncycastleAsn1X509Extension;", "replaceExtension", "removeExtension", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "hasExtension", "getExtension", "LOrgBouncycastleAsn1X509Extensions;", &OrgBouncycastleAsn1X509ExtensionsGenerator_dupsAllowed };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X509ExtensionsGenerator = { "ExtensionsGenerator", "org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 14, 3, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X509ExtensionsGenerator;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1X509ExtensionsGenerator class]) {
    {
      
#line 33
      id<JavaUtilSet> dups = new_JavaUtilHashSet_init();
      [dups addWithId:JreLoadStatic(OrgBouncycastleAsn1X509Extension, subjectAlternativeName)];
      [dups addWithId:JreLoadStatic(OrgBouncycastleAsn1X509Extension, issuerAlternativeName)];
      [dups addWithId:JreLoadStatic(OrgBouncycastleAsn1X509Extension, subjectDirectoryAttributes)];
      [dups addWithId:JreLoadStatic(OrgBouncycastleAsn1X509Extension, certificateIssuer)];
      OrgBouncycastleAsn1X509ExtensionsGenerator_dupsAllowed = JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(dups);
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1X509ExtensionsGenerator)
  }
}

@end


#line 24
void OrgBouncycastleAsn1X509ExtensionsGenerator_init(OrgBouncycastleAsn1X509ExtensionsGenerator *self) {
  NSObject_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->extOrdering_ = new_JavaUtilVector_init();
}


#line 24
OrgBouncycastleAsn1X509ExtensionsGenerator *new_OrgBouncycastleAsn1X509ExtensionsGenerator_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509ExtensionsGenerator, init)
}


#line 24
OrgBouncycastleAsn1X509ExtensionsGenerator *create_OrgBouncycastleAsn1X509ExtensionsGenerator_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509ExtensionsGenerator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509ExtensionsGenerator)

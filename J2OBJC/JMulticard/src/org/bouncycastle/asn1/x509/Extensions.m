//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/Extensions.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x509/Extension.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x509/Extensions must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X509Extensions () {
 @public
  JavaUtilHashtable *extensions_;
  JavaUtilVector *ordering_;
}

/*!
 @brief Constructor from ASN1Sequence.
 <p>
  The extensions are a list of constructed sequences, either with (OID, OctetString) or (OID, Boolean, OctetString) 
 </p>
 */
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

- (IOSObjectArray *)getExtensionOIDsWithBoolean:(jboolean)isCritical;

- (IOSObjectArray *)toOidArrayWithJavaUtilVector:(JavaUtilVector *)oidVec;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509Extensions, extensions_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509Extensions, ordering_, JavaUtilVector *)

__attribute__((unused)) static void OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509Extensions *self, OrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgBouncycastleAsn1X509Extensions *new_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1X509Extensions *create_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509Extensions_getExtensionOIDsWithBoolean_(OrgBouncycastleAsn1X509Extensions *self, jboolean isCritical);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509Extensions_toOidArrayWithJavaUtilVector_(OrgBouncycastleAsn1X509Extensions *self, JavaUtilVector *oidVec);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/Extensions.java"


#line 26
@implementation OrgBouncycastleAsn1X509Extensions


#line 32
+ (OrgBouncycastleAsn1X509Extension *)getExtensionWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions
                                            withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1X509Extensions_getExtensionWithOrgBouncycastleAsn1X509Extensions_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(extensions, oid);
}

+ (id<OrgBouncycastleAsn1ASN1Encodable>)getExtensionParsedValueWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions
                                                         withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1X509Extensions_getExtensionParsedValueWithOrgBouncycastleAsn1X509Extensions_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(extensions, oid);
}

+ (OrgBouncycastleAsn1X509Extensions *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                              withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1X509Extensions_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 49
+ (OrgBouncycastleAsn1X509Extensions *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509Extensions_getInstanceWithId_(obj);
}


#line 70
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 94
- (instancetype)initWithOrgBouncycastleAsn1X509Extension:(OrgBouncycastleAsn1X509Extension *)extension {
  OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509Extension_(self, extension);
  return self;
}


#line 106
- (instancetype)initWithOrgBouncycastleAsn1X509ExtensionArray:(IOSObjectArray *)extensions {
  OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509ExtensionArray_(self, extensions);
  return self;
}


#line 121
- (id<JavaUtilEnumeration>)oids {
  
#line 123
  return [((JavaUtilVector *) nil_chk(ordering_)) elements];
}


#line 132
- (OrgBouncycastleAsn1X509Extension *)getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 135
  return (OrgBouncycastleAsn1X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:oid], [OrgBouncycastleAsn1X509Extension class]);
}


#line 144
- (id<OrgBouncycastleAsn1ASN1Encodable>)getExtensionParsedValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 146
  OrgBouncycastleAsn1X509Extension *ext = [self getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
  
#line 148
  if (ext != nil) {
    
#line 150
    return [ext getParsedValue];
  }
  
#line 153
  return nil;
}


#line 166
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 169
  OrgBouncycastleAsn1ASN1EncodableVector *vec = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_([((JavaUtilVector *) nil_chk(ordering_)) size]);
  
#line 171
  id<JavaUtilEnumeration> e = [((JavaUtilVector *) nil_chk(ordering_)) elements];
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 174
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([e nextElement], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    OrgBouncycastleAsn1X509Extension *ext = (OrgBouncycastleAsn1X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:oid], [OrgBouncycastleAsn1X509Extension class]);
    
#line 177
    [vec addWithOrgBouncycastleAsn1ASN1Encodable:ext];
  }
  
#line 180
  return new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(vec);
}


#line 183
- (jboolean)equivalentWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)other {
  
#line 186
  if ([((JavaUtilHashtable *) nil_chk(extensions_)) size] != [((JavaUtilHashtable *) nil_chk(((OrgBouncycastleAsn1X509Extensions *) nil_chk(other))->extensions_)) size]) {
    
#line 188
    return false;
  }
  
#line 191
  id<JavaUtilEnumeration> e1 = [((JavaUtilHashtable *) nil_chk(extensions_)) keys];
  
#line 193
  while ([((id<JavaUtilEnumeration>) nil_chk(e1)) hasMoreElements]) {
    
#line 195
    id key = [e1 nextElement];
    
#line 197
    if (![nil_chk([((JavaUtilHashtable *) nil_chk(extensions_)) getWithId:key]) isEqual:[((JavaUtilHashtable *) nil_chk(other->extensions_)) getWithId:key]]) {
      
#line 199
      return false;
    }
  }
  
#line 203
  return true;
}


#line 206
- (IOSObjectArray *)getExtensionOIDs {
  
#line 208
  return OrgBouncycastleAsn1X509Extensions_toOidArrayWithJavaUtilVector_(self, ordering_);
}


#line 211
- (IOSObjectArray *)getNonCriticalExtensionOIDs {
  
#line 213
  return OrgBouncycastleAsn1X509Extensions_getExtensionOIDsWithBoolean_(self, false);
}


#line 216
- (IOSObjectArray *)getCriticalExtensionOIDs {
  
#line 218
  return OrgBouncycastleAsn1X509Extensions_getExtensionOIDsWithBoolean_(self, true);
}


#line 221
- (IOSObjectArray *)getExtensionOIDsWithBoolean:(jboolean)isCritical {
  return OrgBouncycastleAsn1X509Extensions_getExtensionOIDsWithBoolean_(self, isCritical);
}


#line 238
- (IOSObjectArray *)toOidArrayWithJavaUtilVector:(JavaUtilVector *)oidVec {
  return OrgBouncycastleAsn1X509Extensions_toOidArrayWithJavaUtilVector_(self, oidVec);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1X509Extension;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extensions;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extensions;", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extension;", 0x1, 0, 9, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Encodable;", 0x1, 2, 9, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x2, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getExtensionWithOrgBouncycastleAsn1X509Extensions:withOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[1].selector = @selector(getExtensionParsedValueWithOrgBouncycastleAsn1X509Extensions:withOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[2].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[3].selector = @selector(getInstanceWithId:);
  methods[4].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[5].selector = @selector(initWithOrgBouncycastleAsn1X509Extension:);
  methods[6].selector = @selector(initWithOrgBouncycastleAsn1X509ExtensionArray:);
  methods[7].selector = @selector(oids);
  methods[8].selector = @selector(getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(getExtensionParsedValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[10].selector = @selector(toASN1Primitive);
  methods[11].selector = @selector(equivalentWithOrgBouncycastleAsn1X509Extensions:);
  methods[12].selector = @selector(getExtensionOIDs);
  methods[13].selector = @selector(getNonCriticalExtensionOIDs);
  methods[14].selector = @selector(getCriticalExtensionOIDs);
  methods[15].selector = @selector(getExtensionOIDsWithBoolean:);
  methods[16].selector = @selector(toOidArrayWithJavaUtilVector:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "extensions_", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ordering_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getExtension", "LOrgBouncycastleAsn1X509Extensions;LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getExtensionParsedValue", "getInstance", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgBouncycastleAsn1ASN1Sequence;", "LOrgBouncycastleAsn1X509Extension;", "[LOrgBouncycastleAsn1X509Extension;", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "equivalent", "LOrgBouncycastleAsn1X509Extensions;", "getExtensionOIDs", "Z", "toOidArray", "LJavaUtilVector;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X509Extensions = { "Extensions", "org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 17, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X509Extensions;
}

@end


#line 32
OrgBouncycastleAsn1X509Extension *OrgBouncycastleAsn1X509Extensions_getExtensionWithOrgBouncycastleAsn1X509Extensions_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1X509Extensions *extensions, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1X509Extensions_initialize();
  return nil == extensions ? nil : [extensions getExtensionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
}

id<OrgBouncycastleAsn1ASN1Encodable> OrgBouncycastleAsn1X509Extensions_getExtensionParsedValueWithOrgBouncycastleAsn1X509Extensions_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1X509Extensions *extensions, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1X509Extensions_initialize();
  return nil == extensions ? nil : [extensions getExtensionParsedValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid];
}

OrgBouncycastleAsn1X509Extensions *OrgBouncycastleAsn1X509Extensions_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1X509Extensions_initialize();
  
#line 46
  return OrgBouncycastleAsn1X509Extensions_getInstanceWithId_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgBouncycastleAsn1X509Extensions *OrgBouncycastleAsn1X509Extensions_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509Extensions_initialize();
  
#line 52
  if ([obj isKindOfClass:[OrgBouncycastleAsn1X509Extensions class]]) {
    
#line 54
    return (OrgBouncycastleAsn1X509Extensions *) obj;
  }
  else if (obj != nil) {
    
#line 58
    return new_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 61
  return nil;
}


#line 70
void OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509Extensions *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->ordering_ = new_JavaUtilVector_init();
  
#line 73
  id<JavaUtilEnumeration> e = [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  
#line 75
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 77
    OrgBouncycastleAsn1X509Extension *ext = OrgBouncycastleAsn1X509Extension_getInstanceWithId_([e nextElement]);
    
#line 79
    if ([((JavaUtilHashtable *) nil_chk(self->extensions_)) containsKeyWithId:[((OrgBouncycastleAsn1X509Extension *) nil_chk(ext)) getExtnId]]) {
      
#line 81
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"repeated extension found: ", [ext getExtnId]));
    }
    
#line 84
    (void) [((JavaUtilHashtable *) nil_chk(self->extensions_)) putWithId:[ext getExtnId] withId:ext];
    [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[ext getExtnId]];
  }
}


#line 70
OrgBouncycastleAsn1X509Extensions *new_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509Extensions, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 70
OrgBouncycastleAsn1X509Extensions *create_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509Extensions, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 94
void OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509Extension_(OrgBouncycastleAsn1X509Extensions *self, OrgBouncycastleAsn1X509Extension *extension) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->ordering_ = new_JavaUtilVector_init();
  
#line 97
  [self->ordering_ addElementWithId:[((OrgBouncycastleAsn1X509Extension *) nil_chk(extension)) getExtnId]];
  (void) [((JavaUtilHashtable *) nil_chk(self->extensions_)) putWithId:[extension getExtnId] withId:extension];
}


#line 94
OrgBouncycastleAsn1X509Extensions *new_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509Extension_(OrgBouncycastleAsn1X509Extension *extension) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509Extensions, initWithOrgBouncycastleAsn1X509Extension_, extension)
}


#line 94
OrgBouncycastleAsn1X509Extensions *create_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509Extension_(OrgBouncycastleAsn1X509Extension *extension) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509Extensions, initWithOrgBouncycastleAsn1X509Extension_, extension)
}


#line 106
void OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509ExtensionArray_(OrgBouncycastleAsn1X509Extensions *self, IOSObjectArray *extensions) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->extensions_ = new_JavaUtilHashtable_init();
  self->ordering_ = new_JavaUtilVector_init();
  
#line 109
  for (jint i = 0; i != ((IOSObjectArray *) nil_chk(extensions))->size_; i++) {
    
#line 111
    OrgBouncycastleAsn1X509Extension *ext = IOSObjectArray_Get(extensions, i);
    
#line 113
    [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[((OrgBouncycastleAsn1X509Extension *) nil_chk(ext)) getExtnId]];
    (void) [((JavaUtilHashtable *) nil_chk(self->extensions_)) putWithId:[ext getExtnId] withId:ext];
  }
}


#line 106
OrgBouncycastleAsn1X509Extensions *new_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509ExtensionArray_(IOSObjectArray *extensions) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509Extensions, initWithOrgBouncycastleAsn1X509ExtensionArray_, extensions)
}


#line 106
OrgBouncycastleAsn1X509Extensions *create_OrgBouncycastleAsn1X509Extensions_initWithOrgBouncycastleAsn1X509ExtensionArray_(IOSObjectArray *extensions) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509Extensions, initWithOrgBouncycastleAsn1X509ExtensionArray_, extensions)
}


#line 221
IOSObjectArray *OrgBouncycastleAsn1X509Extensions_getExtensionOIDsWithBoolean_(OrgBouncycastleAsn1X509Extensions *self, jboolean isCritical) {
  
#line 223
  JavaUtilVector *oidVec = new_JavaUtilVector_init();
  
#line 225
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(self->ordering_)) size]; i++) {
    
#line 227
    id oid = [((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i];
    
#line 229
    if ([((OrgBouncycastleAsn1X509Extension *) nil_chk(((OrgBouncycastleAsn1X509Extension *) cast_chk([((JavaUtilHashtable *) nil_chk(self->extensions_)) getWithId:oid], [OrgBouncycastleAsn1X509Extension class])))) isCritical] == isCritical) {
      
#line 231
      [oidVec addElementWithId:oid];
    }
  }
  
#line 235
  return OrgBouncycastleAsn1X509Extensions_toOidArrayWithJavaUtilVector_(self, oidVec);
}


#line 238
IOSObjectArray *OrgBouncycastleAsn1X509Extensions_toOidArrayWithJavaUtilVector_(OrgBouncycastleAsn1X509Extensions *self, JavaUtilVector *oidVec) {
  
#line 240
  IOSObjectArray *oids = [IOSObjectArray newArrayWithLength:[((JavaUtilVector *) nil_chk(oidVec)) size] type:OrgBouncycastleAsn1ASN1ObjectIdentifier_class_()];
  
#line 242
  for (jint i = 0; i != oids->size_; i++) {
    
#line 244
    (void) IOSObjectArray_Set(oids, i, (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([oidVec elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]));
  }
  return oids;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509Extensions)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/AttributeCertificate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificate")
#ifdef RESTRICT_OrgBouncycastleAsn1X509AttributeCertificate
#define INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificate 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificate 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X509AttributeCertificate

#if !defined (OrgBouncycastleAsn1X509AttributeCertificate_) && (INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificate || defined(INCLUDE_OrgBouncycastleAsn1X509AttributeCertificate))
#define OrgBouncycastleAsn1X509AttributeCertificate_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

@class OrgBouncycastleAsn1ASN1BitString;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1DERBitString;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;
@class OrgBouncycastleAsn1X509AttributeCertificateInfo;

@interface OrgBouncycastleAsn1X509AttributeCertificate : OrgBouncycastleAsn1ASN1Object {
 @public
  OrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo_;
  OrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm_;
  OrgBouncycastleAsn1ASN1BitString *signatureValue_;
}

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1X509AttributeCertificateInfo:(OrgBouncycastleAsn1X509AttributeCertificateInfo *)acinfo
                         withOrgBouncycastleAsn1X509AlgorithmIdentifier:(OrgBouncycastleAsn1X509AlgorithmIdentifier *)signatureAlgorithm
                                    withOrgBouncycastleAsn1DERBitString:(OrgBouncycastleAsn1DERBitString *)signatureValue;

- (OrgBouncycastleAsn1X509AttributeCertificateInfo *)getAcinfo;

/*!
 @param obj
 @return an AttributeCertificate object
 */
+ (OrgBouncycastleAsn1X509AttributeCertificate *)getInstanceWithId:(id)obj;

- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm;

- (OrgBouncycastleAsn1ASN1BitString *)getSignatureValue;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

   AttributeCertificate ::= SEQUENCE {
        acinfo               AttributeCertificateInfo,
        signatureAlgorithm   AlgorithmIdentifier,
        signatureValue       BIT STRING
   } 
  
@endcode
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X509AttributeCertificate)

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificate, acinfo_, OrgBouncycastleAsn1X509AttributeCertificateInfo *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificate, signatureAlgorithm_, OrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificate, signatureValue_, OrgBouncycastleAsn1ASN1BitString *)

FOUNDATION_EXPORT OrgBouncycastleAsn1X509AttributeCertificate *OrgBouncycastleAsn1X509AttributeCertificate_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509AttributeCertificate_initWithOrgBouncycastleAsn1X509AttributeCertificateInfo_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1DERBitString_(OrgBouncycastleAsn1X509AttributeCertificate *self, OrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, OrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, OrgBouncycastleAsn1DERBitString *signatureValue);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509AttributeCertificate *new_OrgBouncycastleAsn1X509AttributeCertificate_initWithOrgBouncycastleAsn1X509AttributeCertificateInfo_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1DERBitString_(OrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, OrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, OrgBouncycastleAsn1DERBitString *signatureValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509AttributeCertificate *create_OrgBouncycastleAsn1X509AttributeCertificate_initWithOrgBouncycastleAsn1X509AttributeCertificateInfo_withOrgBouncycastleAsn1X509AlgorithmIdentifier_withOrgBouncycastleAsn1DERBitString_(OrgBouncycastleAsn1X509AttributeCertificateInfo *acinfo, OrgBouncycastleAsn1X509AlgorithmIdentifier *signatureAlgorithm, OrgBouncycastleAsn1DERBitString *signatureValue);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X509AttributeCertificate)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificate")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/X509Name.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "java/util/Vector.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Encoding.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/ASN1String.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/DERSet.h"
#include "org/bouncycastle/asn1/pkcs/PKCSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x500/X500Name.h"
#include "org/bouncycastle/asn1/x509/X509DefaultEntryConverter.h"
#include "org/bouncycastle/asn1/x509/X509Name.h"
#include "org/bouncycastle/asn1/x509/X509NameEntryConverter.h"
#include "org/bouncycastle/asn1/x509/X509NameTokenizer.h"
#include "org/bouncycastle/asn1/x509/X509ObjectIdentifiers.h"
#include "org/bouncycastle/util/Strings.h"
#include "org/bouncycastle/util/encoders/Hex.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x509/X509Name must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X509X509Name () {
 @public
  OrgBouncycastleAsn1X509X509NameEntryConverter *converter_;
  JavaUtilVector *ordering_;
  JavaUtilVector *values_;
  JavaUtilVector *added_;
  OrgBouncycastleAsn1ASN1Sequence *seq_;
  jboolean isHashCodeCalculated_;
  jint hashCodeValue_;
}

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)decodeOIDWithNSString:(NSString *)name
                                             withJavaUtilHashtable:(JavaUtilHashtable *)lookUp;

- (NSString *)unescapeWithNSString:(NSString *)elt;

- (void)addEntryWithJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                         withNSString:(NSString *)token
                  withJavaLangBoolean:(JavaLangBoolean *)isAdded;

- (jboolean)equivalentStringsWithNSString:(NSString *)s1
                             withNSString:(NSString *)s2;

- (NSString *)canonicalizeWithNSString:(NSString *)s;

- (OrgBouncycastleAsn1ASN1Primitive *)decodeObjectWithNSString:(NSString *)oValue;

- (NSString *)stripInternalSpacesWithNSString:(NSString *)str;

- (void)appendValueWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                      withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                               withNSString:(NSString *)value;

- (NSString *)bytesToStringWithByteArray:(IOSByteArray *)data;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, converter_, OrgBouncycastleAsn1X509X509NameEntryConverter *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, ordering_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, values_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, added_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509X509Name, seq_, OrgBouncycastleAsn1ASN1Sequence *)

inline JavaLangBoolean *OrgBouncycastleAsn1X509X509Name_get_TRUE(void);
static JavaLangBoolean *OrgBouncycastleAsn1X509X509Name_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1X509X509Name, TRUE, JavaLangBoolean *)

inline JavaLangBoolean *OrgBouncycastleAsn1X509X509Name_get_FALSE(void);
static JavaLangBoolean *OrgBouncycastleAsn1X509X509Name_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1X509X509Name, FALSE, JavaLangBoolean *)

__attribute__((unused)) static OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(OrgBouncycastleAsn1X509X509Name *self, NSString *name, JavaUtilHashtable *lookUp);

__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *elt);

__attribute__((unused)) static void OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilHashtable *lookUp, NSString *token, JavaLangBoolean *isAdded);

__attribute__((unused)) static jboolean OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s1, NSString *s2);

__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *oValue);

__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *str);

__attribute__((unused)) static void OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1X509X509Name *self, JavaLangStringBuffer *buf, JavaUtilHashtable *oidSymbols, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *value);

__attribute__((unused)) static NSString *OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(OrgBouncycastleAsn1X509X509Name *self, IOSByteArray *data);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$4(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$5(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$6(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$7(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$8(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$9(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$10(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$11(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$12(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$13(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$14(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$15(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$16(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$17(void);

__attribute__((unused)) static IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$18(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/X509Name.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1X509X509Name)

OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_C;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_O;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_OU;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_T;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_CN;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_SN;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_STREET;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_SERIALNUMBER;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_L;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_ST;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_SURNAME;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_GIVENNAME;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_INITIALS;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_GENERATION;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_POSTAL_CODE;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_PSEUDONYM;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_GENDER;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_DMD_NAME;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_NAME;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_EmailAddress;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_UnstructuredName;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_UnstructuredAddress;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_E;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_DC;
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_UID;
jboolean OrgBouncycastleAsn1X509X509Name_DefaultReverse = false;
JavaUtilHashtable *OrgBouncycastleAsn1X509X509Name_DefaultSymbols;
JavaUtilHashtable *OrgBouncycastleAsn1X509X509Name_RFC2253Symbols;
JavaUtilHashtable *OrgBouncycastleAsn1X509X509Name_RFC1779Symbols;
JavaUtilHashtable *OrgBouncycastleAsn1X509X509Name_DefaultLookUp;
JavaUtilHashtable *OrgBouncycastleAsn1X509X509Name_OIDLookUp;
JavaUtilHashtable *OrgBouncycastleAsn1X509X509Name_SymbolLookUp;


#line 39
@implementation OrgBouncycastleAsn1X509X509Name


#line 376
+ (OrgBouncycastleAsn1X509X509Name *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                            withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1X509X509Name_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 383
+ (OrgBouncycastleAsn1X509X509Name *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(obj);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 402
- (instancetype)init {
  OrgBouncycastleAsn1X509X509Name_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 412
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleAsn1X509X509Name_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 476
- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)attributes {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilHashtable_(self, attributes);
  return self;
}


#line 491
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)attributes {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(self, ordering, attributes);
  return self;
}


#line 510
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)ordering
                 withJavaUtilHashtable:(JavaUtilHashtable *)attributes
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self, ordering, attributes, converter);
  return self;
}


#line 554
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)oids
                    withJavaUtilVector:(JavaUtilVector *)values {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(self, oids, values);
  return self;
}


#line 569
- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)oids
                    withJavaUtilVector:(JavaUtilVector *)values
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self, oids, values, converter);
  return self;
}


#line 605
- (instancetype)initWithNSString:(NSString *)dirName {
  OrgBouncycastleAsn1X509X509Name_initWithNSString_(self, dirName);
  return self;
}


#line 619
- (instancetype)initWithNSString:(NSString *)dirName
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  OrgBouncycastleAsn1X509X509Name_initWithNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self, dirName, converter);
  return self;
}


#line 634
- (instancetype)initWithBoolean:(jboolean)reverse
                   withNSString:(NSString *)dirName {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_(self, reverse, dirName);
  return self;
}


#line 650
- (instancetype)initWithBoolean:(jboolean)reverse
                   withNSString:(NSString *)dirName
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self, reverse, dirName, converter);
  return self;
}


#line 673
- (instancetype)initWithBoolean:(jboolean)reverse
          withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                   withNSString:(NSString *)dirName {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(self, reverse, lookUp, dirName);
  return self;
}


#line 682
- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)decodeOIDWithNSString:(NSString *)name
                                             withJavaUtilHashtable:(JavaUtilHashtable *)lookUp {
  return OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(self, name, lookUp);
}


#line 705
- (NSString *)unescapeWithNSString:(NSString *)elt {
  return OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(self, elt);
}


#line 790
- (instancetype)initWithBoolean:(jboolean)reverse
          withJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                   withNSString:(NSString *)dirName
withOrgBouncycastleAsn1X509X509NameEntryConverter:(OrgBouncycastleAsn1X509X509NameEntryConverter *)converter {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self, reverse, lookUp, dirName, converter);
  return self;
}


#line 852
- (void)addEntryWithJavaUtilHashtable:(JavaUtilHashtable *)lookUp
                         withNSString:(NSString *)token
                  withJavaLangBoolean:(JavaLangBoolean *)isAdded {
  OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, token, isAdded);
}


#line 878
- (JavaUtilVector *)getOIDs {
  
#line 880
  JavaUtilVector *v = new_JavaUtilVector_init();
  
#line 882
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
    
#line 884
    [v addElementWithId:[((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i]];
  }
  
#line 887
  return v;
}

- (JavaUtilVector *)getValues {
  
#line 896
  JavaUtilVector *v = new_JavaUtilVector_init();
  
#line 898
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(values_)) size]; i++) {
    
#line 900
    [v addElementWithId:[((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i]];
  }
  
#line 903
  return v;
}

- (JavaUtilVector *)getValuesWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  
#line 913
  JavaUtilVector *v = new_JavaUtilVector_init();
  
#line 915
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(values_)) size]; i++) {
    
#line 917
    if ([nil_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i]) isEqual:oid]) {
      
#line 919
      NSString *val = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      
#line 921
      if ([((NSString *) nil_chk(val)) java_length] > 2 && [val charAtWithInt:0] == '\\' && [val charAtWithInt:1] == '#') {
        
#line 923
        [v addElementWithId:[val java_substring:1]];
      }
      else {
        
#line 927
        [v addElementWithId:val];
      }
    }
  }
  
#line 932
  return v;
}


#line 935
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 938
  if (seq_ == nil) {
    
#line 940
    OrgBouncycastleAsn1ASN1EncodableVector *vec = new_OrgBouncycastleAsn1ASN1EncodableVector_init();
    OrgBouncycastleAsn1ASN1EncodableVector *sVec = new_OrgBouncycastleAsn1ASN1EncodableVector_init();
    OrgBouncycastleAsn1ASN1ObjectIdentifier *lstOid = nil;
    
#line 944
    for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
      
#line 946
      OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_(2);
      OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      
#line 949
      [v addWithOrgBouncycastleAsn1ASN1Encodable:oid];
      
#line 951
      NSString *str = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      
#line 953
      [v addWithOrgBouncycastleAsn1ASN1Encodable:[((OrgBouncycastleAsn1X509X509NameEntryConverter *) nil_chk(converter_)) getConvertedValueWithOrgBouncycastleAsn1ASN1ObjectIdentifier:oid withNSString:str]];
      
#line 955
      if (lstOid == nil ||
#line 956
      [((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk([((JavaUtilVector *) nil_chk(added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
      }
      else {
        
#line 961
        [vec addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERSet_initWithOrgBouncycastleAsn1ASN1EncodableVector_(sVec)];
        
#line 963
        sVec = new_OrgBouncycastleAsn1ASN1EncodableVector_init();
      }
      [sVec addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v)];
      
#line 967
      lstOid = oid;
    }
    
#line 970
    [vec addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERSet_initWithOrgBouncycastleAsn1ASN1EncodableVector_(sVec)];
    
#line 972
    seq_ = new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(vec);
  }
  
#line 975
  return seq_;
}


#line 982
- (jboolean)equalsWithId:(id)obj
             withBoolean:(jboolean)inOrder {
  if (!inOrder) {
    
#line 986
    return [self isEqual:obj];
  }
  
#line 989
  if (JreObjectEqualsEquals(obj, self)) {
    
#line 991
    return true;
  }
  
#line 994
  if ((!([obj isKindOfClass:[OrgBouncycastleAsn1X509X509Name class]]) && !([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]))) {
    
#line 996
    return false;
  }
  
#line 999
  OrgBouncycastleAsn1ASN1Primitive *derO = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())))) toASN1Primitive];
  
#line 1001
  if ([((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) equalsWithOrgBouncycastleAsn1ASN1Primitive:derO]) {
    
#line 1003
    return true;
  }
  
#line 1006
  OrgBouncycastleAsn1X509X509Name *other;
  
#line 1008
  @try {
    
#line 1010
    other = OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(obj);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    
#line 1014
    return false;
  }
  
#line 1017
  jint orderingSize = [((JavaUtilVector *) nil_chk(ordering_)) size];
  
#line 1019
  if (orderingSize != [((JavaUtilVector *) nil_chk(((OrgBouncycastleAsn1X509X509Name *) nil_chk(other))->ordering_)) size]) {
    
#line 1021
    return false;
  }
  
#line 1024
  for (jint i = 0; i < orderingSize; i++) {
    
#line 1026
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oOid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(other->ordering_)) elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    
#line 1029
    if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) equalsWithOrgBouncycastleAsn1ASN1Primitive:oOid]) {
      
#line 1031
      NSString *value = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
      NSString *oValue = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(other->values_)) elementAtWithInt:i], [NSString class]);
      
#line 1034
      if (!OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, value, oValue)) {
        
#line 1036
        return false;
      }
    }
    else {
      
#line 1041
      return false;
    }
  }
  
#line 1045
  return true;
}


#line 1048
- (NSUInteger)hash {
  
#line 1051
  if (isHashCodeCalculated_) {
    
#line 1053
    return hashCodeValue_;
  }
  
#line 1056
  isHashCodeCalculated_ = true;
  
#line 1059
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(ordering_)) size]; i += 1) {
    
#line 1061
    NSString *value = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
    
#line 1063
    value = OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, value);
    value = OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, value);
    
#line 1066
    hashCodeValue_ ^= ((jint) [nil_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i]) hash]);
    hashCodeValue_ ^= ((jint) [((NSString *) nil_chk(value)) hash]);
  }
  
#line 1070
  return hashCodeValue_;
}


#line 1076
- (jboolean)isEqual:(id)obj {
  
#line 1079
  if (JreObjectEqualsEquals(obj, self)) {
    
#line 1081
    return true;
  }
  
#line 1084
  if ((!([obj isKindOfClass:[OrgBouncycastleAsn1X509X509Name class]]) && !([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]]))) {
    
#line 1086
    return false;
  }
  
#line 1089
  OrgBouncycastleAsn1ASN1Primitive *derO = [((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())))) toASN1Primitive];
  
#line 1091
  if ([((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([self toASN1Primitive])) equalsWithOrgBouncycastleAsn1ASN1Primitive:derO]) {
    
#line 1093
    return true;
  }
  
#line 1096
  OrgBouncycastleAsn1X509X509Name *other;
  
#line 1098
  @try {
    
#line 1100
    other = OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(obj);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    
#line 1104
    return false;
  }
  
#line 1107
  jint orderingSize = [((JavaUtilVector *) nil_chk(ordering_)) size];
  
#line 1109
  if (orderingSize != [((JavaUtilVector *) nil_chk(((OrgBouncycastleAsn1X509X509Name *) nil_chk(other))->ordering_)) size]) {
    
#line 1111
    return false;
  }
  
#line 1114
  IOSBooleanArray *indexes = [IOSBooleanArray newArrayWithLength:orderingSize];
  jint start;
  
#line 1115
  jint end;
  
#line 1115
  jint delta;
  
#line 1117
  if ([nil_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:0]) isEqual:[((JavaUtilVector *) nil_chk(other->ordering_)) elementAtWithInt:0]]) {
    
#line 1119
    start = 0;
    end = orderingSize;
    delta = 1;
  }
  else {
    
#line 1125
    start = orderingSize - 1;
    end = -1;
    delta = -1;
  }
  
#line 1130
  for (jint i = start; i != end; i += delta) {
    
#line 1132
    jboolean found = false;
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    NSString *value = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]);
    
#line 1136
    for (jint j = 0; j < orderingSize; j++) {
      
#line 1138
      if (IOSBooleanArray_Get(indexes, j)) {
        
#line 1140
        continue;
      }
      
#line 1143
      OrgBouncycastleAsn1ASN1ObjectIdentifier *oOid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(other->ordering_)) elementAtWithInt:j], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
      
#line 1145
      if ([((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) equalsWithOrgBouncycastleAsn1ASN1Primitive:oOid]) {
        
#line 1147
        NSString *oValue = (NSString *) cast_chk([((JavaUtilVector *) nil_chk(other->values_)) elementAtWithInt:j], [NSString class]);
        
#line 1149
        if (OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, value, oValue)) {
          
#line 1151
          *IOSBooleanArray_GetRef(indexes, j) = true;
          found = true;
          break;
        }
      }
    }
    
#line 1158
    if (!found) {
      
#line 1160
      return false;
    }
  }
  
#line 1164
  return true;
}


#line 1167
- (jboolean)equivalentStringsWithNSString:(NSString *)s1
                             withNSString:(NSString *)s2 {
  return OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(self, s1, s2);
}


#line 1186
- (NSString *)canonicalizeWithNSString:(NSString *)s {
  return OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s);
}


#line 1203
- (OrgBouncycastleAsn1ASN1Primitive *)decodeObjectWithNSString:(NSString *)oValue {
  return OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(self, oValue);
}


#line 1215
- (NSString *)stripInternalSpacesWithNSString:(NSString *)str {
  return OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, str);
}


#line 1240
- (void)appendValueWithJavaLangStringBuffer:(JavaLangStringBuffer *)buf
                      withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
                               withNSString:(NSString *)value {
  OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, buf, oidSymbols, oid, value);
}


#line 1315
- (NSString *)toStringWithBoolean:(jboolean)reverse
            withJavaUtilHashtable:(JavaUtilHashtable *)oidSymbols {
  
#line 1319
  JavaLangStringBuffer *buf = new_JavaLangStringBuffer_init();
  JavaUtilVector *components = new_JavaUtilVector_init();
  jboolean first = true;
  
#line 1323
  JavaLangStringBuffer *ava = nil;
  
#line 1325
  for (jint i = 0; i < [((JavaUtilVector *) nil_chk(ordering_)) size]; i++) {
    
#line 1327
    if ([((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk([((JavaUtilVector *) nil_chk(added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
      
#line 1329
      (void) [((JavaLangStringBuffer *) nil_chk(ava)) appendWithChar:'+'];
      OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, ava, oidSymbols,
#line 1331
      (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]),
#line 1332
      (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]));
    }
    else {
      
#line 1336
      ava = new_JavaLangStringBuffer_init();
      OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(self, ava, oidSymbols,
#line 1338
      (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(ordering_)) elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]),
#line 1339
      (NSString *) cast_chk([((JavaUtilVector *) nil_chk(values_)) elementAtWithInt:i], [NSString class]));
      [components addElementWithId:ava];
    }
  }
  
#line 1344
  if (reverse) {
    
#line 1346
    for (jint i = [components size] - 1; i >= 0; i--) {
      
#line 1348
      if (first) {
        
#line 1350
        first = false;
      }
      else {
        
#line 1354
        (void) [buf appendWithChar:','];
      }
      
#line 1357
      (void) [buf appendWithNSString:[nil_chk([components elementAtWithInt:i]) description]];
    }
  }
  else {
    
#line 1362
    for (jint i = 0; i < [components size]; i++) {
      
#line 1364
      if (first) {
        
#line 1366
        first = false;
      }
      else {
        
#line 1370
        (void) [buf appendWithChar:','];
      }
      
#line 1373
      (void) [buf appendWithNSString:[nil_chk([components elementAtWithInt:i]) description]];
    }
  }
  
#line 1377
  return [buf description];
}


#line 1380
- (NSString *)bytesToStringWithByteArray:(IOSByteArray *)data {
  return OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(self, data);
}


#line 1393
- (NSString *)description {
  
#line 1396
  return [self toStringWithBoolean:OrgBouncycastleAsn1X509X509Name_DefaultReverse withJavaUtilHashtable:OrgBouncycastleAsn1X509X509Name_DefaultSymbols];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1X509X509Name;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509X509Name;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, 4, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, 6, -1 },
    { NULL, NULL, 0x1, -1, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, 9, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, 11, -1 },
    { NULL, NULL, 0x1, -1, 12, -1, -1, 13, -1 },
    { NULL, NULL, 0x1, -1, 14, -1, -1, 15, -1 },
    { NULL, NULL, 0x1, -1, 16, -1, -1, 17, -1 },
    { NULL, NULL, 0x1, -1, 18, -1, -1, 19, -1 },
    { NULL, NULL, 0x1, -1, 20, -1, -1, 21, -1 },
    { NULL, NULL, 0x1, -1, 22, -1, -1, 23, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x2, 24, 25, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 26, 14, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 28, 29, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilVector;", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 32, 33, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 34, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 32, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 35, 36, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 37, 14, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x2, 38, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 39, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 40, 41, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 42, 43, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x2, 44, 45, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 42, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(init);
  methods[3].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[4].selector = @selector(initWithJavaUtilHashtable:);
  methods[5].selector = @selector(initWithJavaUtilVector:withJavaUtilHashtable:);
  methods[6].selector = @selector(initWithJavaUtilVector:withJavaUtilHashtable:withOrgBouncycastleAsn1X509X509NameEntryConverter:);
  methods[7].selector = @selector(initWithJavaUtilVector:withJavaUtilVector:);
  methods[8].selector = @selector(initWithJavaUtilVector:withJavaUtilVector:withOrgBouncycastleAsn1X509X509NameEntryConverter:);
  methods[9].selector = @selector(initWithNSString:);
  methods[10].selector = @selector(initWithNSString:withOrgBouncycastleAsn1X509X509NameEntryConverter:);
  methods[11].selector = @selector(initWithBoolean:withNSString:);
  methods[12].selector = @selector(initWithBoolean:withNSString:withOrgBouncycastleAsn1X509X509NameEntryConverter:);
  methods[13].selector = @selector(initWithBoolean:withJavaUtilHashtable:withNSString:);
  methods[14].selector = @selector(decodeOIDWithNSString:withJavaUtilHashtable:);
  methods[15].selector = @selector(unescapeWithNSString:);
  methods[16].selector = @selector(initWithBoolean:withJavaUtilHashtable:withNSString:withOrgBouncycastleAsn1X509X509NameEntryConverter:);
  methods[17].selector = @selector(addEntryWithJavaUtilHashtable:withNSString:withJavaLangBoolean:);
  methods[18].selector = @selector(getOIDs);
  methods[19].selector = @selector(getValues);
  methods[20].selector = @selector(getValuesWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[21].selector = @selector(toASN1Primitive);
  methods[22].selector = @selector(equalsWithId:withBoolean:);
  methods[23].selector = @selector(hash);
  methods[24].selector = @selector(isEqual:);
  methods[25].selector = @selector(equivalentStringsWithNSString:withNSString:);
  methods[26].selector = @selector(canonicalizeWithNSString:);
  methods[27].selector = @selector(decodeObjectWithNSString:);
  methods[28].selector = @selector(stripInternalSpacesWithNSString:);
  methods[29].selector = @selector(appendValueWithJavaLangStringBuffer:withJavaUtilHashtable:withOrgBouncycastleAsn1ASN1ObjectIdentifier:withNSString:);
  methods[30].selector = @selector(toStringWithBoolean:withJavaUtilHashtable:);
  methods[31].selector = @selector(bytesToStringWithByteArray:);
  methods[32].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 46, -1, 47 },
    { "O", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 48, -1, 49 },
    { "OU", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 50, -1, 51 },
    { "T", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 52, -1, 53 },
    { "CN", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 54, -1, 55 },
    { "SN", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 56, -1, -1 },
    { "STREET", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 57, -1, -1 },
    { "SERIALNUMBER", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 58, -1, -1 },
    { "L", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 59, -1, -1 },
    { "ST", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "SURNAME", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 61, -1, -1 },
    { "GIVENNAME", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 62, -1, -1 },
    { "INITIALS", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 63, -1, -1 },
    { "GENERATION", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 64, -1, -1 },
    { "UNIQUE_IDENTIFIER", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 65, -1, -1 },
    { "BUSINESS_CATEGORY", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 66, -1, -1 },
    { "POSTAL_CODE", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 67, -1, -1 },
    { "DN_QUALIFIER", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 68, -1, -1 },
    { "PSEUDONYM", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 69, -1, -1 },
    { "DATE_OF_BIRTH", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 70, -1, -1 },
    { "PLACE_OF_BIRTH", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 71, -1, -1 },
    { "GENDER", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 72, -1, -1 },
    { "COUNTRY_OF_CITIZENSHIP", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 73, -1, -1 },
    { "COUNTRY_OF_RESIDENCE", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 74, -1, -1 },
    { "NAME_AT_BIRTH", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 75, -1, -1 },
    { "POSTAL_ADDRESS", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 76, -1, -1 },
    { "DMD_NAME", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 77, -1, -1 },
    { "TELEPHONE_NUMBER", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 78, -1, -1 },
    { "NAME", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 79, -1, -1 },
    { "EmailAddress", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 80, -1, 81 },
    { "UnstructuredName", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 82, -1, -1 },
    { "UnstructuredAddress", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 83, -1, -1 },
    { "E", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 84, -1, -1 },
    { "DC", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 85, -1, -1 },
    { "UID", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", .constantValue.asLong = 0, 0x19, -1, 86, -1, -1 },
    { "DefaultReverse", "Z", .constantValue.asLong = 0, 0x9, -1, 87, -1, -1 },
    { "DefaultSymbols", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 88, -1, -1 },
    { "RFC2253Symbols", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 89, -1, -1 },
    { "RFC1779Symbols", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 90, -1, -1 },
    { "DefaultLookUp", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 91, -1, -1 },
    { "OIDLookUp", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 92, -1, 93 },
    { "SymbolLookUp", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x19, -1, 94, -1, 95 },
    { "TRUE", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x1a, -1, 96, -1, -1 },
    { "FALSE", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x1a, -1, 97, -1, -1 },
    { "converter_", "LOrgBouncycastleAsn1X509X509NameEntryConverter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "ordering_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "values_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "added_", "LJavaUtilVector;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "seq_", "LOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isHashCodeCalculated_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hashCodeValue_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgBouncycastleAsn1ASN1Sequence;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$0, "LJavaUtilHashtable;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$1, "LJavaUtilVector;LJavaUtilHashtable;", "LJavaUtilVector;LJavaUtilHashtable;LOrgBouncycastleAsn1X509X509NameEntryConverter;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$2, "LJavaUtilVector;LJavaUtilVector;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$3, "LJavaUtilVector;LJavaUtilVector;LOrgBouncycastleAsn1X509X509NameEntryConverter;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$4, "LNSString;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$5, "LNSString;LOrgBouncycastleAsn1X509X509NameEntryConverter;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$6, "ZLNSString;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$7, "ZLNSString;LOrgBouncycastleAsn1X509X509NameEntryConverter;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$8, "ZLJavaUtilHashtable;LNSString;", (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$9, "decodeOID", "LNSString;LJavaUtilHashtable;", "unescape", "ZLJavaUtilHashtable;LNSString;LOrgBouncycastleAsn1X509X509NameEntryConverter;", "addEntry", "LJavaUtilHashtable;LNSString;LJavaLangBoolean;", "getValues", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "equals", "LNSObject;Z", "hashCode", "equivalentStrings", "LNSString;LNSString;", "canonicalize", "decodeObject", "stripInternalSpaces", "appendValue", "LJavaLangStringBuffer;LJavaUtilHashtable;LOrgBouncycastleAsn1ASN1ObjectIdentifier;LNSString;", "toString", "ZLJavaUtilHashtable;", "bytesToString", "[B", &OrgBouncycastleAsn1X509X509Name_C, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$10, &OrgBouncycastleAsn1X509X509Name_O, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$11, &OrgBouncycastleAsn1X509X509Name_OU, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$12, &OrgBouncycastleAsn1X509X509Name_T, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$13, &OrgBouncycastleAsn1X509X509Name_CN, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$14, &OrgBouncycastleAsn1X509X509Name_SN, &OrgBouncycastleAsn1X509X509Name_STREET, &OrgBouncycastleAsn1X509X509Name_SERIALNUMBER, &OrgBouncycastleAsn1X509X509Name_L, &OrgBouncycastleAsn1X509X509Name_ST, &OrgBouncycastleAsn1X509X509Name_SURNAME, &OrgBouncycastleAsn1X509X509Name_GIVENNAME, &OrgBouncycastleAsn1X509X509Name_INITIALS, &OrgBouncycastleAsn1X509X509Name_GENERATION, &OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER, &OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY, &OrgBouncycastleAsn1X509X509Name_POSTAL_CODE, &OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER, &OrgBouncycastleAsn1X509X509Name_PSEUDONYM, &OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH, &OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH, &OrgBouncycastleAsn1X509X509Name_GENDER, &OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP, &OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE, &OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH, &OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS, &OrgBouncycastleAsn1X509X509Name_DMD_NAME, &OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER, &OrgBouncycastleAsn1X509X509Name_NAME, &OrgBouncycastleAsn1X509X509Name_EmailAddress, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$15, &OrgBouncycastleAsn1X509X509Name_UnstructuredName, &OrgBouncycastleAsn1X509X509Name_UnstructuredAddress, &OrgBouncycastleAsn1X509X509Name_E, &OrgBouncycastleAsn1X509X509Name_DC, &OrgBouncycastleAsn1X509X509Name_UID, &OrgBouncycastleAsn1X509X509Name_DefaultReverse, &OrgBouncycastleAsn1X509X509Name_DefaultSymbols, &OrgBouncycastleAsn1X509X509Name_RFC2253Symbols, &OrgBouncycastleAsn1X509X509Name_RFC1779Symbols, &OrgBouncycastleAsn1X509X509Name_DefaultLookUp, &OrgBouncycastleAsn1X509X509Name_OIDLookUp, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$16, &OrgBouncycastleAsn1X509X509Name_SymbolLookUp, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$17, &OrgBouncycastleAsn1X509X509Name_TRUE, &OrgBouncycastleAsn1X509X509Name_FALSE, (void *)&OrgBouncycastleAsn1X509X509Name__Annotations$18 };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X509X509Name = { "X509Name", "org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 33, 51, -1, -1, -1, -1, 98 };
  return &_OrgBouncycastleAsn1X509X509Name;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1X509X509Name class]) {
    OrgBouncycastleAsn1X509X509Name_C = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 47
    @"2.5.4.6");
    OrgBouncycastleAsn1X509X509Name_O = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 54
    @"2.5.4.10");
    OrgBouncycastleAsn1X509X509Name_OU = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 61
    @"2.5.4.11");
    OrgBouncycastleAsn1X509X509Name_T = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 68
    @"2.5.4.12");
    OrgBouncycastleAsn1X509X509Name_CN = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 75
    @"2.5.4.3");
    OrgBouncycastleAsn1X509X509Name_SN = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 80
    @"2.5.4.5");
    OrgBouncycastleAsn1X509X509Name_STREET = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 85
    @"2.5.4.9");
    OrgBouncycastleAsn1X509X509Name_SERIALNUMBER =
#line 90
    OrgBouncycastleAsn1X509X509Name_SN;
    OrgBouncycastleAsn1X509X509Name_L = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 95
    @"2.5.4.7");
    OrgBouncycastleAsn1X509X509Name_ST = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 100
    @"2.5.4.8");
    OrgBouncycastleAsn1X509X509Name_SURNAME = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 105
    @"2.5.4.4");
    OrgBouncycastleAsn1X509X509Name_GIVENNAME = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 106
    @"2.5.4.42");
    OrgBouncycastleAsn1X509X509Name_INITIALS = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 107
    @"2.5.4.43");
    OrgBouncycastleAsn1X509X509Name_GENERATION = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 108
    @"2.5.4.44");
    OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 109
    @"2.5.4.45");
    OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 115
    @"2.5.4.15");
    OrgBouncycastleAsn1X509X509Name_POSTAL_CODE = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 121
    @"2.5.4.17");
    OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 127
    @"2.5.4.46");
    OrgBouncycastleAsn1X509X509Name_PSEUDONYM = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 133
    @"2.5.4.65");
    OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 140
    @"1.3.6.1.5.5.7.9.1");
    OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 146
    @"1.3.6.1.5.5.7.9.2");
    OrgBouncycastleAsn1X509X509Name_GENDER = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 152
    @"1.3.6.1.5.5.7.9.3");
    OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 159
    @"1.3.6.1.5.5.7.9.4");
    OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 166
    @"1.3.6.1.5.5.7.9.5");
    OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 172
    @"1.3.36.8.3.14");
    OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 178
    @"2.5.4.16");
    OrgBouncycastleAsn1X509X509Name_DMD_NAME = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 183
    @"2.5.4.54");
    OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER = JreLoadStatic(OrgBouncycastleAsn1X509X509ObjectIdentifiers, id_at_telephoneNumber);
    OrgBouncycastleAsn1X509X509Name_NAME = JreLoadStatic(OrgBouncycastleAsn1X509X509ObjectIdentifiers, id_at_name);
    OrgBouncycastleAsn1X509X509Name_EmailAddress = JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pkcs_9_at_emailAddress);
    OrgBouncycastleAsn1X509X509Name_UnstructuredName = JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pkcs_9_at_unstructuredName);
    OrgBouncycastleAsn1X509X509Name_UnstructuredAddress = JreLoadStatic(OrgBouncycastleAsn1PkcsPKCSObjectIdentifiers, pkcs_9_at_unstructuredAddress);
    OrgBouncycastleAsn1X509X509Name_E =
#line 212
    OrgBouncycastleAsn1X509X509Name_EmailAddress;
    OrgBouncycastleAsn1X509X509Name_DC = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 217
    @"0.9.2342.19200300.100.1.25");
    OrgBouncycastleAsn1X509X509Name_UID = new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(
#line 222
    @"0.9.2342.19200300.100.1.1");
    OrgBouncycastleAsn1X509X509Name_DefaultSymbols = new_JavaUtilHashtable_init();
    OrgBouncycastleAsn1X509X509Name_RFC2253Symbols = new_JavaUtilHashtable_init();
    OrgBouncycastleAsn1X509X509Name_RFC1779Symbols = new_JavaUtilHashtable_init();
    OrgBouncycastleAsn1X509X509Name_DefaultLookUp = new_JavaUtilHashtable_init();
    OrgBouncycastleAsn1X509X509Name_OIDLookUp =
#line 258
    OrgBouncycastleAsn1X509X509Name_DefaultSymbols;
    OrgBouncycastleAsn1X509X509Name_SymbolLookUp =
#line 265
    OrgBouncycastleAsn1X509X509Name_DefaultLookUp;
    OrgBouncycastleAsn1X509X509Name_TRUE = JavaLangBoolean_valueOfWithBoolean_(
#line 267
    true);
    OrgBouncycastleAsn1X509X509Name_FALSE = JavaLangBoolean_valueOfWithBoolean_(
#line 268
    false);
    {
      
#line 272
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_C withId:@"C"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_O withId:@"O"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_T withId:@"T"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_OU withId:@"OU"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_CN withId:@"CN"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_L withId:@"L"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_ST withId:@"ST"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_SN withId:@"SERIALNUMBER"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_EmailAddress withId:@"E"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_DC withId:@"DC"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_UID withId:@"UID"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_STREET withId:@"STREET"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_SURNAME withId:@"SURNAME"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_GIVENNAME withId:@"GIVENNAME"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_INITIALS withId:@"INITIALS"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_GENERATION withId:@"GENERATION"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_UnstructuredAddress withId:@"unstructuredAddress"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_UnstructuredName withId:@"unstructuredName"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER withId:@"UniqueIdentifier"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER withId:@"DN"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_PSEUDONYM withId:@"Pseudonym"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS withId:@"PostalAddress"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH withId:@"NameAtBirth"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP withId:@"CountryOfCitizenship"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE withId:@"CountryOfResidence"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_GENDER withId:@"Gender"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH withId:@"PlaceOfBirth"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH withId:@"DateOfBirth"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_POSTAL_CODE withId:@"PostalCode"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY withId:@"BusinessCategory"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER withId:@"TelephoneNumber"];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultSymbols putWithId:OrgBouncycastleAsn1X509X509Name_NAME withId:@"Name"];
      
#line 305
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_C withId:@"C"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_O withId:@"O"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_OU withId:@"OU"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_CN withId:@"CN"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_L withId:@"L"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_ST withId:@"ST"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_STREET withId:@"STREET"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_DC withId:@"DC"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC2253Symbols putWithId:OrgBouncycastleAsn1X509X509Name_UID withId:@"UID"];
      
#line 315
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgBouncycastleAsn1X509X509Name_C withId:@"C"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgBouncycastleAsn1X509X509Name_O withId:@"O"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgBouncycastleAsn1X509X509Name_OU withId:@"OU"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgBouncycastleAsn1X509X509Name_CN withId:@"CN"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgBouncycastleAsn1X509X509Name_L withId:@"L"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgBouncycastleAsn1X509X509Name_ST withId:@"ST"];
      (void) [OrgBouncycastleAsn1X509X509Name_RFC1779Symbols putWithId:OrgBouncycastleAsn1X509X509Name_STREET withId:@"STREET"];
      
#line 323
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"c" withId:OrgBouncycastleAsn1X509X509Name_C];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"o" withId:OrgBouncycastleAsn1X509X509Name_O];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"t" withId:OrgBouncycastleAsn1X509X509Name_T];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"ou" withId:OrgBouncycastleAsn1X509X509Name_OU];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"cn" withId:OrgBouncycastleAsn1X509X509Name_CN];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"l" withId:OrgBouncycastleAsn1X509X509Name_L];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"st" withId:OrgBouncycastleAsn1X509X509Name_ST];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"sn" withId:OrgBouncycastleAsn1X509X509Name_SN];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"serialnumber" withId:OrgBouncycastleAsn1X509X509Name_SN];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"street" withId:OrgBouncycastleAsn1X509X509Name_STREET];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"emailaddress" withId:OrgBouncycastleAsn1X509X509Name_E];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"dc" withId:OrgBouncycastleAsn1X509X509Name_DC];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"e" withId:OrgBouncycastleAsn1X509X509Name_E];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"uid" withId:OrgBouncycastleAsn1X509X509Name_UID];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"surname" withId:OrgBouncycastleAsn1X509X509Name_SURNAME];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"givenname" withId:OrgBouncycastleAsn1X509X509Name_GIVENNAME];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"initials" withId:OrgBouncycastleAsn1X509X509Name_INITIALS];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"generation" withId:OrgBouncycastleAsn1X509X509Name_GENERATION];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"unstructuredaddress" withId:OrgBouncycastleAsn1X509X509Name_UnstructuredAddress];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"unstructuredname" withId:OrgBouncycastleAsn1X509X509Name_UnstructuredName];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"uniqueidentifier" withId:OrgBouncycastleAsn1X509X509Name_UNIQUE_IDENTIFIER];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"dn" withId:OrgBouncycastleAsn1X509X509Name_DN_QUALIFIER];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"pseudonym" withId:OrgBouncycastleAsn1X509X509Name_PSEUDONYM];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"postaladdress" withId:OrgBouncycastleAsn1X509X509Name_POSTAL_ADDRESS];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"nameofbirth" withId:OrgBouncycastleAsn1X509X509Name_NAME_AT_BIRTH];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"countryofcitizenship" withId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_CITIZENSHIP];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"countryofresidence" withId:OrgBouncycastleAsn1X509X509Name_COUNTRY_OF_RESIDENCE];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"gender" withId:OrgBouncycastleAsn1X509X509Name_GENDER];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"placeofbirth" withId:OrgBouncycastleAsn1X509X509Name_PLACE_OF_BIRTH];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"dateofbirth" withId:OrgBouncycastleAsn1X509X509Name_DATE_OF_BIRTH];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"postalcode" withId:OrgBouncycastleAsn1X509X509Name_POSTAL_CODE];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"businesscategory" withId:OrgBouncycastleAsn1X509X509Name_BUSINESS_CATEGORY];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"telephonenumber" withId:OrgBouncycastleAsn1X509X509Name_TELEPHONE_NUMBER];
      (void) [OrgBouncycastleAsn1X509X509Name_DefaultLookUp putWithId:@"name" withId:OrgBouncycastleAsn1X509X509Name_NAME];
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1X509X509Name)
  }
}

@end


#line 376
OrgBouncycastleAsn1X509X509Name *OrgBouncycastleAsn1X509X509Name_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1X509X509Name_initialize();
  
#line 380
  return OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgBouncycastleAsn1X509X509Name *OrgBouncycastleAsn1X509X509Name_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509X509Name_initialize();
  
#line 386
  if ([obj isKindOfClass:[OrgBouncycastleAsn1X509X509Name class]]) {
    
#line 388
    return (OrgBouncycastleAsn1X509X509Name *) obj;
  }
  else if ([obj isKindOfClass:[OrgBouncycastleAsn1X500X500Name class]]) {
    
#line 392
    return new_OrgBouncycastleAsn1X509X509Name_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((OrgBouncycastleAsn1X500X500Name *) nil_chk(((OrgBouncycastleAsn1X500X500Name *) obj))) toASN1Primitive]));
  }
  else if (obj != nil) {
    
#line 396
    return new_OrgBouncycastleAsn1X509X509Name_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 399
  return nil;
}


#line 402
void OrgBouncycastleAsn1X509X509Name_init(OrgBouncycastleAsn1X509X509Name *self) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 359
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
}


#line 402
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, init)
}


#line 402
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, init)
}


#line 412
void OrgBouncycastleAsn1X509X509Name_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509X509Name *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 359
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 416
  self->seq_ = seq;
  
#line 418
  id<JavaUtilEnumeration> e = [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  
#line 420
  while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
    
#line 422
    OrgBouncycastleAsn1ASN1Set *set = OrgBouncycastleAsn1ASN1Set_getInstanceWithId_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check([e nextElement], OrgBouncycastleAsn1ASN1Encodable_class_())))) toASN1Primitive]);
    
#line 424
    for (jint i = 0; i < [((OrgBouncycastleAsn1ASN1Set *) nil_chk(set)) size]; i++) {
      
#line 426
      OrgBouncycastleAsn1ASN1Sequence *s = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk([set getObjectAtWithInt:i])) toASN1Primitive]);
      
#line 428
      if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(s)) size] != 2) {
        
#line 430
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"badly sized pair");
      }
      
#line 433
      [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:OrgBouncycastleAsn1ASN1ObjectIdentifier_getInstanceWithId_([s getObjectAtWithInt:0])];
      
#line 435
      id<OrgBouncycastleAsn1ASN1Encodable> value = [s getObjectAtWithInt:1];
      if ([OrgBouncycastleAsn1ASN1String_class_() isInstance:value] && !([value isKindOfClass:[OrgBouncycastleAsn1ASN1UniversalString class]])) {
        
#line 438
        NSString *v = [((id<OrgBouncycastleAsn1ASN1String>) nil_chk(((id<OrgBouncycastleAsn1ASN1String>) cast_check(value, OrgBouncycastleAsn1ASN1String_class_())))) getString];
        if ([((NSString *) nil_chk(v)) java_length] > 0 && [v charAtWithInt:0] == '#') {
          
#line 441
          [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:JreStrcat("C$", '\\', v)];
        }
        else {
          
#line 445
          [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:v];
        }
      }
      else {
        
#line 450
        @try {
          
#line 452
          [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:JreStrcat("C$", '#', OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(self, OrgBouncycastleUtilEncodersHex_encodeWithByteArray_([((OrgBouncycastleAsn1ASN1Primitive *) nil_chk([((id<OrgBouncycastleAsn1ASN1Encodable>) nil_chk(value)) toASN1Primitive])) getEncodedWithNSString:OrgBouncycastleAsn1ASN1Encoding_DER])))];
        }
        @catch (JavaIoIOException *e1) {
          
#line 456
          @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"cannot encode value");
        }
      }
      [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:i != 0 ? OrgBouncycastleAsn1X509X509Name_TRUE : OrgBouncycastleAsn1X509X509Name_FALSE];
    }
  }
}


#line 412
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 412
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 476
void OrgBouncycastleAsn1X509X509Name_initWithJavaUtilHashtable_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilHashtable *attributes) {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(self,
#line 480
  nil, attributes);
}


#line 476
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilHashtable_(JavaUtilHashtable *attributes) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilHashtable_, attributes)
}


#line 476
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilHashtable_(JavaUtilHashtable *attributes) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilHashtable_, attributes)
}


#line 491
void OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilVector *ordering, JavaUtilHashtable *attributes) {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self,
#line 495
  ordering, attributes, new_OrgBouncycastleAsn1X509X509DefaultEntryConverter_init());
}


#line 491
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *attributes) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_, ordering, attributes)
}


#line 491
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_(JavaUtilVector *ordering, JavaUtilHashtable *attributes) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_, ordering, attributes)
}


#line 510
void OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgBouncycastleAsn1X509X509NameEntryConverter_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilVector *ordering, JavaUtilHashtable *attributes, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 359
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 516
  self->converter_ = converter;
  
#line 518
  if (ordering != nil) {
    
#line 520
    for (jint i = 0; i != [ordering size]; i++) {
      
#line 522
      [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[ordering elementAtWithInt:i]];
      [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:OrgBouncycastleAsn1X509X509Name_FALSE];
    }
  }
  else {
    
#line 528
    id<JavaUtilEnumeration> e = [((JavaUtilHashtable *) nil_chk(attributes)) keys];
    
#line 530
    while ([((id<JavaUtilEnumeration>) nil_chk(e)) hasMoreElements]) {
      
#line 532
      [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[e nextElement]];
      [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:OrgBouncycastleAsn1X509X509Name_FALSE];
    }
  }
  
#line 537
  for (jint i = 0; i != [((JavaUtilVector *) nil_chk(self->ordering_)) size]; i++) {
    
#line 539
    OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
    
#line 541
    if ([((JavaUtilHashtable *) nil_chk(attributes)) getWithId:oid] == nil) {
      
#line 543
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"No attribute for object id - ", [((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId], @" - passed to distinguished name"));
    }
    
#line 546
    [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:[attributes getWithId:oid]];
  }
}


#line 510
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgBouncycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *ordering, JavaUtilHashtable *attributes, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_withOrgBouncycastleAsn1X509X509NameEntryConverter_, ordering, attributes, converter)
}


#line 510
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilHashtable_withOrgBouncycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *ordering, JavaUtilHashtable *attributes, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilHashtable_withOrgBouncycastleAsn1X509X509NameEntryConverter_, ordering, attributes, converter)
}


#line 554
void OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilVector *oids, JavaUtilVector *values) {
  OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self,
#line 559
  oids, values, new_OrgBouncycastleAsn1X509X509DefaultEntryConverter_init());
}


#line 554
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *oids, JavaUtilVector *values) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_, oids, values)
}


#line 554
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_(JavaUtilVector *oids, JavaUtilVector *values) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_, oids, values)
}


#line 569
void OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgBouncycastleAsn1X509X509NameEntryConverter_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilVector *oids, JavaUtilVector *values, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 359
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 575
  self->converter_ = converter;
  
#line 577
  if ([((JavaUtilVector *) nil_chk(oids)) size] != [((JavaUtilVector *) nil_chk(values)) size]) {
    
#line 579
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"oids vector must be same length as values.");
  }
  
#line 582
  for (jint i = 0; i < [oids size]; i++) {
    
#line 584
    [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:[oids elementAtWithInt:i]];
    [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:[values elementAtWithInt:i]];
    [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:OrgBouncycastleAsn1X509X509Name_FALSE];
  }
}


#line 569
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgBouncycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *oids, JavaUtilVector *values, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_withOrgBouncycastleAsn1X509X509NameEntryConverter_, oids, values, converter)
}


#line 569
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithJavaUtilVector_withJavaUtilVector_withOrgBouncycastleAsn1X509X509NameEntryConverter_(JavaUtilVector *oids, JavaUtilVector *values, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithJavaUtilVector_withJavaUtilVector_withOrgBouncycastleAsn1X509X509NameEntryConverter_, oids, values, converter)
}


#line 605
void OrgBouncycastleAsn1X509X509Name_initWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *dirName) {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(self, OrgBouncycastleAsn1X509X509Name_DefaultReverse, OrgBouncycastleAsn1X509X509Name_DefaultLookUp,
#line 609
  dirName);
}


#line 605
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithNSString_(NSString *dirName) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithNSString_, dirName)
}


#line 605
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithNSString_(NSString *dirName) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithNSString_, dirName)
}


#line 619
void OrgBouncycastleAsn1X509X509Name_initWithNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(OrgBouncycastleAsn1X509X509Name *self, NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self, OrgBouncycastleAsn1X509X509Name_DefaultReverse, OrgBouncycastleAsn1X509X509Name_DefaultLookUp,
#line 624
  dirName, converter);
}


#line 619
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_, dirName, converter)
}


#line 619
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_, dirName, converter)
}


#line 634
void OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_(OrgBouncycastleAsn1X509X509Name *self, jboolean reverse, NSString *dirName) {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(self,
#line 639
  reverse, OrgBouncycastleAsn1X509X509Name_DefaultLookUp, dirName);
}


#line 634
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_(jboolean reverse, NSString *dirName) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withNSString_, reverse, dirName)
}


#line 634
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_(jboolean reverse, NSString *dirName) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withNSString_, reverse, dirName)
}


#line 650
void OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(OrgBouncycastleAsn1X509X509Name *self, jboolean reverse, NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self,
#line 656
  reverse, OrgBouncycastleAsn1X509X509Name_DefaultLookUp, dirName, converter);
}


#line 650
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(jboolean reverse, NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_, reverse, dirName, converter)
}


#line 650
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(jboolean reverse, NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_, reverse, dirName, converter)
}


#line 673
void OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(OrgBouncycastleAsn1X509X509Name *self, jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName) {
  OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(self,
#line 679
  reverse, lookUp, dirName, new_OrgBouncycastleAsn1X509X509DefaultEntryConverter_init());
}


#line 673
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_, reverse, lookUp, dirName)
}


#line 673
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_, reverse, lookUp, dirName)
}


#line 682
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(OrgBouncycastleAsn1X509X509Name *self, NSString *name, JavaUtilHashtable *lookUp) {
  
#line 686
  name = [((NSString *) nil_chk(name)) java_trim];
  if ([((NSString *) nil_chk(OrgBouncycastleUtilStrings_toUpperCaseWithNSString_(name))) java_hasPrefix:@"OID."]) {
    
#line 689
    return new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_([((NSString *) nil_chk(name)) java_substring:4]);
  }
  else if ([((NSString *) nil_chk(name)) charAtWithInt:0] >= '0' && [name charAtWithInt:0] <= '9') {
    
#line 693
    return new_OrgBouncycastleAsn1ASN1ObjectIdentifier_initWithNSString_(name);
  }
  
#line 696
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilHashtable *) nil_chk(lookUp)) getWithId:OrgBouncycastleUtilStrings_toLowerCaseWithNSString_(name)], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
  if (oid == nil) {
    
#line 699
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Unknown object id - ", name, @" - passed to distinguished name"));
  }
  
#line 702
  return oid;
}


#line 705
NSString *OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *elt) {
  
#line 707
  if ([((NSString *) nil_chk(elt)) java_length] == 0 || ([elt java_indexOf:'\\'] < 0 && [elt java_indexOf:'"'] < 0)) {
    
#line 709
    return [elt java_trim];
  }
  
#line 712
  IOSCharArray *elts = [elt java_toCharArray];
  jboolean escaped = false;
  jboolean quoted = false;
  JavaLangStringBuilder *buf = new_JavaLangStringBuilder_initWithInt_([elt java_length]);
  jint start = 0;
  
#line 720
  if (IOSCharArray_Get(nil_chk(elts), 0) == '\\' && IOSCharArray_Get(elts, 1) == '#') {
    
#line 722
    start = 2;
    (void) [buf appendWithNSString:@"\\#"];
  }
  
#line 726
  jboolean nonWhiteSpaceEncountered = false;
  jint lastEscaped = 0;
  
#line 729
  for (jint i = start; i != elts->size_; i++) {
    
#line 731
    jchar c = IOSCharArray_Get(elts, i);
    
#line 733
    if (c != ' ') {
      
#line 735
      nonWhiteSpaceEncountered = true;
    }
    
#line 738
    if (c == '"') {
      
#line 740
      if (!escaped) {
        
#line 742
        quoted = !quoted;
      }
      else {
        
#line 746
        (void) [buf appendWithChar:c];
      }
      escaped = false;
    }
    else if (c == '\\' && (!escaped && !quoted)) {
      
#line 752
      escaped = true;
      lastEscaped = [buf java_length];
    }
    else {
      
#line 757
      if (c == ' ' && !escaped && !nonWhiteSpaceEncountered) {
        
#line 759
        continue;
      }
      (void) [buf appendWithChar:c];
      escaped = false;
    }
  }
  
#line 766
  if ([buf java_length] > 0) {
    
#line 768
    while ([buf charAtWithInt:[buf java_length] - 1] == ' ' && lastEscaped != [buf java_length] - 1) {
      
#line 770
      [buf setLengthWithInt:[buf java_length] - 1];
    }
  }
  
#line 774
  return [buf description];
}


#line 790
void OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(OrgBouncycastleAsn1X509X509Name *self, jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->converter_ =
#line 359
  nil;
  self->ordering_ = new_JavaUtilVector_init();
  self->values_ = new_JavaUtilVector_init();
  self->added_ = new_JavaUtilVector_init();
  
#line 796
  self->converter_ = converter;
  OrgBouncycastleAsn1X509X509NameTokenizer *nTok = new_OrgBouncycastleAsn1X509X509NameTokenizer_initWithNSString_(dirName);
  
#line 799
  while ([nTok hasMoreTokens]) {
    
#line 801
    NSString *token = [nTok nextToken];
    
#line 803
    if ([((NSString *) nil_chk(token)) java_indexOf:'+'] > 0) {
      
#line 805
      OrgBouncycastleAsn1X509X509NameTokenizer *pTok = new_OrgBouncycastleAsn1X509X509NameTokenizer_initWithNSString_withChar_(token, '+');
      
#line 807
      OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, [pTok nextToken], OrgBouncycastleAsn1X509X509Name_FALSE);
      
#line 809
      while ([pTok hasMoreTokens]) {
        
#line 811
        OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, [pTok nextToken], OrgBouncycastleAsn1X509X509Name_TRUE);
      }
    }
    else {
      
#line 816
      OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(self, lookUp, token, OrgBouncycastleAsn1X509X509Name_FALSE);
    }
  }
  
#line 820
  if (reverse) {
    
#line 822
    JavaUtilVector *o = new_JavaUtilVector_init();
    JavaUtilVector *v = new_JavaUtilVector_init();
    JavaUtilVector *a = new_JavaUtilVector_init();
    
#line 826
    jint count = 1;
    
#line 828
    for (jint i = 0; i < [((JavaUtilVector *) nil_chk(self->ordering_)) size]; i++) {
      
#line 830
      if ([((JavaLangBoolean *) nil_chk(((JavaLangBoolean *) cast_chk([((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i], [JavaLangBoolean class])))) booleanValue]) {
        
#line 832
        [o insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i] withInt:count];
        [v insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->values_)) elementAtWithInt:i] withInt:count];
        [a insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i] withInt:count];
        count++;
      }
      else {
        
#line 839
        [o insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->ordering_)) elementAtWithInt:i] withInt:0];
        [v insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->values_)) elementAtWithInt:i] withInt:0];
        [a insertElementAtWithId:[((JavaUtilVector *) nil_chk(self->added_)) elementAtWithInt:i] withInt:0];
        count = 1;
      }
    }
    
#line 846
    self->ordering_ = o;
    self->values_ = v;
    self->added_ = a;
  }
}


#line 790
OrgBouncycastleAsn1X509X509Name *new_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_, reverse, lookUp, dirName, converter)
}


#line 790
OrgBouncycastleAsn1X509X509Name *create_OrgBouncycastleAsn1X509X509Name_initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_(jboolean reverse, JavaUtilHashtable *lookUp, NSString *dirName, OrgBouncycastleAsn1X509X509NameEntryConverter *converter) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509X509Name, initWithBoolean_withJavaUtilHashtable_withNSString_withOrgBouncycastleAsn1X509X509NameEntryConverter_, reverse, lookUp, dirName, converter)
}


#line 852
void OrgBouncycastleAsn1X509X509Name_addEntryWithJavaUtilHashtable_withNSString_withJavaLangBoolean_(OrgBouncycastleAsn1X509X509Name *self, JavaUtilHashtable *lookUp, NSString *token, JavaLangBoolean *isAdded) {
  
#line 854
  OrgBouncycastleAsn1X509X509NameTokenizer *vTok;
  NSString *name;
  NSString *value;
  
#line 856
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid;
  vTok = new_OrgBouncycastleAsn1X509X509NameTokenizer_initWithNSString_withChar_(token, '=');
  
#line 859
  name = [vTok nextToken];
  
#line 861
  if (![vTok hasMoreTokens]) {
    
#line 863
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"badly formatted directory string");
  }
  
#line 866
  value = [vTok nextToken];
  
#line 868
  oid = OrgBouncycastleAsn1X509X509Name_decodeOIDWithNSString_withJavaUtilHashtable_(self, name, lookUp);
  
#line 870
  [((JavaUtilVector *) nil_chk(self->ordering_)) addElementWithId:oid];
  [((JavaUtilVector *) nil_chk(self->values_)) addElementWithId:OrgBouncycastleAsn1X509X509Name_unescapeWithNSString_(self, value)];
  [((JavaUtilVector *) nil_chk(self->added_)) addElementWithId:isAdded];
}


#line 1167
jboolean OrgBouncycastleAsn1X509X509Name_equivalentStringsWithNSString_withNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s1, NSString *s2) {
  
#line 1169
  NSString *value = OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s1);
  NSString *oValue = OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(self, s2);
  
#line 1172
  if (![((NSString *) nil_chk(value)) isEqual:oValue]) {
    
#line 1174
    value = OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, value);
    oValue = OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(self, oValue);
    
#line 1177
    if (![((NSString *) nil_chk(value)) isEqual:oValue]) {
      
#line 1179
      return false;
    }
  }
  
#line 1183
  return true;
}


#line 1186
NSString *OrgBouncycastleAsn1X509X509Name_canonicalizeWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *s) {
  
#line 1188
  NSString *value = OrgBouncycastleUtilStrings_toLowerCaseWithNSString_([((NSString *) nil_chk(s)) java_trim]);
  
#line 1190
  if ([((NSString *) nil_chk(value)) java_length] > 0 && [value charAtWithInt:0] == '#') {
    
#line 1192
    OrgBouncycastleAsn1ASN1Primitive *obj = OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(self, value);
    
#line 1194
    if ([OrgBouncycastleAsn1ASN1String_class_() isInstance:obj]) {
      
#line 1196
      value = OrgBouncycastleUtilStrings_toLowerCaseWithNSString_([((NSString *) nil_chk([((id<OrgBouncycastleAsn1ASN1String>) nil_chk(((id<OrgBouncycastleAsn1ASN1String>) cast_check(obj, OrgBouncycastleAsn1ASN1String_class_())))) getString])) java_trim]);
    }
  }
  
#line 1200
  return value;
}


#line 1203
OrgBouncycastleAsn1ASN1Primitive *OrgBouncycastleAsn1X509X509Name_decodeObjectWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *oValue) {
  
#line 1205
  @try {
    
#line 1207
    return OrgBouncycastleAsn1ASN1Primitive_fromByteArrayWithByteArray_(OrgBouncycastleUtilEncodersHex_decodeStrictWithNSString_withInt_withInt_(oValue, 1, [((NSString *) nil_chk(oValue)) java_length] - 1));
  }
  @catch (JavaIoIOException *e) {
    
#line 1211
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"unknown encoding in name: ", e));
  }
}


#line 1215
NSString *OrgBouncycastleAsn1X509X509Name_stripInternalSpacesWithNSString_(OrgBouncycastleAsn1X509X509Name *self, NSString *str) {
  
#line 1218
  JavaLangStringBuilder *res = new_JavaLangStringBuilder_init();
  
#line 1220
  if ([((NSString *) nil_chk(str)) java_length] != 0) {
    
#line 1222
    jchar c1 = [str charAtWithInt:0];
    
#line 1224
    (void) [res appendWithChar:c1];
    
#line 1226
    for (jint k = 1; k < [str java_length]; k++) {
      
#line 1228
      jchar c2 = [str charAtWithInt:k];
      if (((c1 != ' ') || (c2 != ' '))) {
        
#line 1231
        (void) [res appendWithChar:c2];
      }
      c1 = c2;
    }
  }
  
#line 1237
  return [res description];
}


#line 1240
void OrgBouncycastleAsn1X509X509Name_appendValueWithJavaLangStringBuffer_withJavaUtilHashtable_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withNSString_(OrgBouncycastleAsn1X509X509Name *self, JavaLangStringBuffer *buf, JavaUtilHashtable *oidSymbols, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, NSString *value) {
  
#line 1246
  NSString *sym = (NSString *) cast_chk([((JavaUtilHashtable *) nil_chk(oidSymbols)) getWithId:oid], [NSString class]);
  
#line 1248
  if (sym != nil) {
    
#line 1250
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:sym];
  }
  else {
    
#line 1254
    (void) [((JavaLangStringBuffer *) nil_chk(buf)) appendWithNSString:[((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(oid)) getId]];
  }
  
#line 1257
  (void) [buf appendWithChar:'='];
  
#line 1259
  jint start = [buf java_length];
  (void) [buf appendWithNSString:value];
  jint end = [buf java_length];
  
#line 1263
  if ([((NSString *) nil_chk(value)) java_length] >= 2 && [value charAtWithInt:0] == '\\' && [value charAtWithInt:1] == '#') {
    
#line 1265
    start += 2;
  }
  
#line 1268
  while (start < end && [buf charAtWithInt:start] == ' ') {
    
#line 1270
    (void) [buf insertWithInt:start withNSString:@"\\"];
    start += 2;
    ++end;
  }
  
#line 1275
  while (--end > start && [buf charAtWithInt:end] == ' ') {
    
#line 1277
    (void) [buf insertWithInt:end withChar:'\\'];
  }
  
#line 1280
  while (start <= end) {
    
#line 1282
    switch ([buf charAtWithInt:start]) {
      
#line 1284
      case ',':
      case '"':
      case '\\':
      case '+':
      case '=':
      case '<':
      case '>':
      case ';':
      (void) [buf insertWithInt:start withNSString:@"\\"];
      start += 2;
      ++end;
      break;
      default:
      ++start;
      break;
    }
  }
}


#line 1380
NSString *OrgBouncycastleAsn1X509X509Name_bytesToStringWithByteArray_(OrgBouncycastleAsn1X509X509Name *self, IOSByteArray *data) {
  
#line 1383
  IOSCharArray *cs = [IOSCharArray newArrayWithLength:((IOSByteArray *) nil_chk(data))->size_];
  
#line 1385
  for (jint i = 0; i != cs->size_; i++) {
    
#line 1387
    *IOSCharArray_GetRef(cs, i) = (jchar) (IOSByteArray_Get(data, i) & (jint) 0xff);
  }
  
#line 1390
  return [NSString java_stringWithCharacters:cs];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$6() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$7() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$8() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$9() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$10() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$11() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$12() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$13() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$14() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$15() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$16() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$17() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgBouncycastleAsn1X509X509Name__Annotations$18() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509X509Name)

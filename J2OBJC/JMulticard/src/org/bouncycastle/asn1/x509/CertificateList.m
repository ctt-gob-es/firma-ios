//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/CertificateList.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERBitString.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x500/X500Name.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/CertificateList.h"
#include "org/bouncycastle/asn1/x509/TBSCertList.h"
#include "org/bouncycastle/asn1/x509/Time.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x509/CertificateList must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X509CertificateList ()

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

@end

__attribute__((unused)) static void OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509CertificateList *self, OrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgBouncycastleAsn1X509CertificateList *new_OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1X509CertificateList *create_OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/CertificateList.java"


#line 29
@implementation OrgBouncycastleAsn1X509CertificateList


#line 38
+ (OrgBouncycastleAsn1X509CertificateList *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                   withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1X509CertificateList_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 45
+ (OrgBouncycastleAsn1X509CertificateList *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509CertificateList_getInstanceWithId_(obj);
}


#line 60
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 75
- (OrgBouncycastleAsn1X509TBSCertList *)getTBSCertList {
  
#line 77
  return tbsCertList_;
}


#line 80
- (IOSObjectArray *)getRevokedCertificates {
  
#line 82
  return [((OrgBouncycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getRevokedCertificates];
}


#line 85
- (id<JavaUtilEnumeration>)getRevokedCertificateEnumeration {
  
#line 87
  return [((OrgBouncycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getRevokedCertificateEnumeration];
}


#line 90
- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignatureAlgorithm {
  
#line 92
  return sigAlgId_;
}


#line 95
- (OrgBouncycastleAsn1ASN1BitString *)getSignature {
  
#line 97
  return sig_;
}


#line 100
- (jint)getVersionNumber {
  
#line 102
  return [((OrgBouncycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getVersionNumber];
}


#line 105
- (OrgBouncycastleAsn1X500X500Name *)getIssuer {
  
#line 107
  return [((OrgBouncycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getIssuer];
}


#line 110
- (OrgBouncycastleAsn1X509Time *)getThisUpdate {
  
#line 112
  return [((OrgBouncycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getThisUpdate];
}


#line 115
- (OrgBouncycastleAsn1X509Time *)getNextUpdate {
  
#line 117
  return [((OrgBouncycastleAsn1X509TBSCertList *) nil_chk(tbsCertList_)) getNextUpdate];
}


#line 120
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 123
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_(3);
  
#line 125
  [v addWithOrgBouncycastleAsn1ASN1Encodable:tbsCertList_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:sigAlgId_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:sig_];
  
#line 129
  return new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v);
}


#line 132
- (NSUInteger)hash {
  
#line 135
  if (!isHashCodeSet_) {
    
#line 137
    hashCodeValue_ = ((jint) [super hash]);
    isHashCodeSet_ = true;
  }
  
#line 141
  return hashCodeValue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1X509CertificateList;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509CertificateList;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509TBSCertList;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgBouncycastleAsn1X509TBSCertList_CRLEntry;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1BitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X500X500Name;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Time;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getTBSCertList);
  methods[4].selector = @selector(getRevokedCertificates);
  methods[5].selector = @selector(getRevokedCertificateEnumeration);
  methods[6].selector = @selector(getSignatureAlgorithm);
  methods[7].selector = @selector(getSignature);
  methods[8].selector = @selector(getVersionNumber);
  methods[9].selector = @selector(getIssuer);
  methods[10].selector = @selector(getThisUpdate);
  methods[11].selector = @selector(getNextUpdate);
  methods[12].selector = @selector(toASN1Primitive);
  methods[13].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tbsCertList_", "LOrgBouncycastleAsn1X509TBSCertList;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sigAlgId_", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "sig_", "LOrgBouncycastleAsn1ASN1BitString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "isHashCodeSet_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "hashCodeValue_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgBouncycastleAsn1ASN1Sequence;", "hashCode" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X509CertificateList = { "CertificateList", "org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 14, 5, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X509CertificateList;
}

@end


#line 38
OrgBouncycastleAsn1X509CertificateList *OrgBouncycastleAsn1X509CertificateList_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1X509CertificateList_initialize();
  
#line 42
  return OrgBouncycastleAsn1X509CertificateList_getInstanceWithId_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgBouncycastleAsn1X509CertificateList *OrgBouncycastleAsn1X509CertificateList_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509CertificateList_initialize();
  
#line 48
  if ([obj isKindOfClass:[OrgBouncycastleAsn1X509CertificateList class]]) {
    
#line 50
    return (OrgBouncycastleAsn1X509CertificateList *) obj;
  }
  else if (obj != nil) {
    
#line 54
    return new_OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 57
  return nil;
}


#line 60
void OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509CertificateList *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  self->isHashCodeSet_ =
#line 35
  false;
  
#line 63
  if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] == 3) {
    
#line 65
    self->tbsCertList_ = OrgBouncycastleAsn1X509TBSCertList_getInstanceWithId_([seq getObjectAtWithInt:0]);
    self->sigAlgId_ = OrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:1]);
    self->sig_ = OrgBouncycastleAsn1DERBitString_getInstanceWithId_([seq getObjectAtWithInt:2]);
  }
  else {
    
#line 71
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"sequence wrong size for CertificateList");
  }
}


#line 60
OrgBouncycastleAsn1X509CertificateList *new_OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509CertificateList, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 60
OrgBouncycastleAsn1X509CertificateList *create_OrgBouncycastleAsn1X509CertificateList_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509CertificateList, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509CertificateList)

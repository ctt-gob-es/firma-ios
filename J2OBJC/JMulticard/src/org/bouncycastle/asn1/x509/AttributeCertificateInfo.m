//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/AttributeCertificateInfo.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/DERSequence.h"
#include "org/bouncycastle/asn1/x509/AlgorithmIdentifier.h"
#include "org/bouncycastle/asn1/x509/AttCertIssuer.h"
#include "org/bouncycastle/asn1/x509/AttCertValidityPeriod.h"
#include "org/bouncycastle/asn1/x509/AttributeCertificateInfo.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"
#include "org/bouncycastle/asn1/x509/Holder.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x509/AttributeCertificateInfo must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X509AttributeCertificateInfo () {
 @public
  OrgBouncycastleAsn1ASN1Integer *version__;
  OrgBouncycastleAsn1X509Holder *holder_;
  OrgBouncycastleAsn1X509AttCertIssuer *issuer_;
  OrgBouncycastleAsn1X509AlgorithmIdentifier *signature_;
  OrgBouncycastleAsn1ASN1Integer *serialNumber_;
  OrgBouncycastleAsn1X509AttCertValidityPeriod *attrCertValidityPeriod_;
  OrgBouncycastleAsn1ASN1Sequence *attributes_;
  OrgBouncycastleAsn1ASN1BitString *issuerUniqueID_;
  OrgBouncycastleAsn1X509Extensions *extensions_;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, version__, OrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, holder_, OrgBouncycastleAsn1X509Holder *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, issuer_, OrgBouncycastleAsn1X509AttCertIssuer *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, signature_, OrgBouncycastleAsn1X509AlgorithmIdentifier *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, serialNumber_, OrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, attrCertValidityPeriod_, OrgBouncycastleAsn1X509AttCertValidityPeriod *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, attributes_, OrgBouncycastleAsn1ASN1Sequence *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, issuerUniqueID_, OrgBouncycastleAsn1ASN1BitString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509AttributeCertificateInfo, extensions_, OrgBouncycastleAsn1X509Extensions *)

__attribute__((unused)) static void OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509AttributeCertificateInfo *self, OrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgBouncycastleAsn1X509AttributeCertificateInfo *new_OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1X509AttributeCertificateInfo *create_OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/AttributeCertificateInfo.java"


#line 13
@implementation OrgBouncycastleAsn1X509AttributeCertificateInfo


#line 26
+ (OrgBouncycastleAsn1X509AttributeCertificateInfo *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                            withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_);
}


#line 33
+ (OrgBouncycastleAsn1X509AttributeCertificateInfo *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithId_(obj);
}


#line 48
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 90
- (OrgBouncycastleAsn1ASN1Integer *)getVersion {
  
#line 92
  return version__;
}


#line 95
- (OrgBouncycastleAsn1X509Holder *)getHolder {
  
#line 97
  return holder_;
}


#line 100
- (OrgBouncycastleAsn1X509AttCertIssuer *)getIssuer {
  
#line 102
  return issuer_;
}


#line 105
- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignature {
  
#line 107
  return signature_;
}


#line 110
- (OrgBouncycastleAsn1ASN1Integer *)getSerialNumber {
  
#line 112
  return serialNumber_;
}


#line 115
- (OrgBouncycastleAsn1X509AttCertValidityPeriod *)getAttrCertValidityPeriod {
  
#line 117
  return attrCertValidityPeriod_;
}


#line 120
- (OrgBouncycastleAsn1ASN1Sequence *)getAttributes {
  
#line 122
  return attributes_;
}


#line 125
- (OrgBouncycastleAsn1ASN1BitString *)getIssuerUniqueID {
  
#line 127
  return issuerUniqueID_;
}


#line 130
- (OrgBouncycastleAsn1X509Extensions *)getExtensions {
  
#line 132
  return extensions_;
}


#line 153
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 156
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_(9);
  
#line 158
  if (![((OrgBouncycastleAsn1ASN1Integer *) nil_chk(version__)) hasValueWithInt:0]) {
    
#line 160
    [v addWithOrgBouncycastleAsn1ASN1Encodable:version__];
  }
  [v addWithOrgBouncycastleAsn1ASN1Encodable:holder_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:issuer_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:signature_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:serialNumber_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:attrCertValidityPeriod_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:attributes_];
  
#line 169
  if (issuerUniqueID_ != nil) {
    
#line 171
    [v addWithOrgBouncycastleAsn1ASN1Encodable:issuerUniqueID_];
  }
  
#line 174
  if (extensions_ != nil) {
    
#line 176
    [v addWithOrgBouncycastleAsn1ASN1Encodable:extensions_];
  }
  
#line 179
  return new_OrgBouncycastleAsn1DERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1X509AttributeCertificateInfo;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AttributeCertificateInfo;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Holder;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AttCertIssuer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509AttCertValidityPeriod;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Sequence;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1BitString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509Extensions;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[3].selector = @selector(getVersion);
  methods[4].selector = @selector(getHolder);
  methods[5].selector = @selector(getIssuer);
  methods[6].selector = @selector(getSignature);
  methods[7].selector = @selector(getSerialNumber);
  methods[8].selector = @selector(getAttrCertValidityPeriod);
  methods[9].selector = @selector(getAttributes);
  methods[10].selector = @selector(getIssuerUniqueID);
  methods[11].selector = @selector(getExtensions);
  methods[12].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, 4, -1, -1, -1 },
    { "holder_", "LOrgBouncycastleAsn1X509Holder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuer_", "LOrgBouncycastleAsn1X509AttCertIssuer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "signature_", "LOrgBouncycastleAsn1X509AlgorithmIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "serialNumber_", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attrCertValidityPeriod_", "LOrgBouncycastleAsn1X509AttCertValidityPeriod;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "attributes_", "LOrgBouncycastleAsn1ASN1Sequence;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "issuerUniqueID_", "LOrgBouncycastleAsn1ASN1BitString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "extensions_", "LOrgBouncycastleAsn1X509Extensions;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSObject;", "LOrgBouncycastleAsn1ASN1Sequence;", "version" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X509AttributeCertificateInfo = { "AttributeCertificateInfo", "org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 13, 9, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X509AttributeCertificateInfo;
}

@end


#line 26
OrgBouncycastleAsn1X509AttributeCertificateInfo *OrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_) {
  OrgBouncycastleAsn1X509AttributeCertificateInfo_initialize();
  
#line 30
  return OrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithId_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(obj, explicit_));
}

OrgBouncycastleAsn1X509AttributeCertificateInfo *OrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509AttributeCertificateInfo_initialize();
  
#line 36
  if ([obj isKindOfClass:[OrgBouncycastleAsn1X509AttributeCertificateInfo class]]) {
    
#line 38
    return (OrgBouncycastleAsn1X509AttributeCertificateInfo *) obj;
  }
  else if (obj != nil) {
    
#line 42
    return new_OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(obj));
  }
  
#line 45
  return nil;
}


#line 48
void OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1X509AttributeCertificateInfo *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 51
  if ([((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) size] < 6 || [seq size] > 9) {
    
#line 53
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Bad sequence size: ", [seq size]));
  }
  
#line 56
  jint start;
  if ([[seq getObjectAtWithInt:0] isKindOfClass:[OrgBouncycastleAsn1ASN1Integer class]]) {
    
#line 59
    self->version__ = OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:0]);
    start = 1;
  }
  else {
    
#line 64
    self->version__ = new_OrgBouncycastleAsn1ASN1Integer_initWithLong_(0);
    start = 0;
  }
  
#line 68
  self->holder_ = OrgBouncycastleAsn1X509Holder_getInstanceWithId_([seq getObjectAtWithInt:start]);
  self->issuer_ = OrgBouncycastleAsn1X509AttCertIssuer_getInstanceWithId_([seq getObjectAtWithInt:start + 1]);
  self->signature_ = OrgBouncycastleAsn1X509AlgorithmIdentifier_getInstanceWithId_([seq getObjectAtWithInt:start + 2]);
  self->serialNumber_ = OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([seq getObjectAtWithInt:start + 3]);
  self->attrCertValidityPeriod_ = OrgBouncycastleAsn1X509AttCertValidityPeriod_getInstanceWithId_([seq getObjectAtWithInt:start + 4]);
  self->attributes_ = OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_([seq getObjectAtWithInt:start + 5]);
  
#line 75
  for (jint i = start + 6; i < [seq size]; i++) {
    
#line 77
    id<OrgBouncycastleAsn1ASN1Encodable> obj = [seq getObjectAtWithInt:i];
    
#line 79
    if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1BitString class]]) {
      
#line 81
      self->issuerUniqueID_ = OrgBouncycastleAsn1ASN1BitString_getInstanceWithId_([seq getObjectAtWithInt:i]);
    }
    else if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1Sequence class]] || [obj isKindOfClass:[OrgBouncycastleAsn1X509Extensions class]]) {
      
#line 85
      self->extensions_ = OrgBouncycastleAsn1X509Extensions_getInstanceWithId_([seq getObjectAtWithInt:i]);
    }
  }
}


#line 48
OrgBouncycastleAsn1X509AttributeCertificateInfo *new_OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509AttributeCertificateInfo, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 48
OrgBouncycastleAsn1X509AttributeCertificateInfo *create_OrgBouncycastleAsn1X509AttributeCertificateInfo_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509AttributeCertificateInfo, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509AttributeCertificateInfo)

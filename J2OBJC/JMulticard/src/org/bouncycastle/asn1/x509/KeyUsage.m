//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/KeyUsage.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "org/bouncycastle/asn1/ASN1BitString.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/DERBitString.h"
#include "org/bouncycastle/asn1/x509/Extension.h"
#include "org/bouncycastle/asn1/x509/Extensions.h"
#include "org/bouncycastle/asn1/x509/KeyUsage.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/x509/KeyUsage must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1X509KeyUsage () {
 @public
  OrgBouncycastleAsn1ASN1BitString *bitString_;
}

- (instancetype)initWithOrgBouncycastleAsn1ASN1BitString:(OrgBouncycastleAsn1ASN1BitString *)bitString;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1X509KeyUsage, bitString_, OrgBouncycastleAsn1ASN1BitString *)

__attribute__((unused)) static void OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1X509KeyUsage *self, OrgBouncycastleAsn1ASN1BitString *bitString);

__attribute__((unused)) static OrgBouncycastleAsn1X509KeyUsage *new_OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString *bitString) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1X509KeyUsage *create_OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString *bitString);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/KeyUsage.java"


#line 25
@implementation OrgBouncycastleAsn1X509KeyUsage


#line 40
+ (OrgBouncycastleAsn1X509KeyUsage *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1X509KeyUsage_getInstanceWithId_(obj);
}


#line 54
+ (OrgBouncycastleAsn1X509KeyUsage *)fromExtensionsWithOrgBouncycastleAsn1X509Extensions:(OrgBouncycastleAsn1X509Extensions *)extensions {
  return OrgBouncycastleAsn1X509KeyUsage_fromExtensionsWithOrgBouncycastleAsn1X509Extensions_(extensions);
}


#line 66
- (instancetype)initWithInt:(jint)usage {
  OrgBouncycastleAsn1X509KeyUsage_initWithInt_(self, usage);
  return self;
}


#line 72
- (instancetype)initWithOrgBouncycastleAsn1ASN1BitString:(OrgBouncycastleAsn1ASN1BitString *)bitString {
  OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(self, bitString);
  return self;
}


#line 84
- (jboolean)hasUsagesWithInt:(jint)usages {
  
#line 86
  return ([((OrgBouncycastleAsn1ASN1BitString *) nil_chk(bitString_)) intValue] & usages) == usages;
}


#line 89
- (IOSByteArray *)getBytes {
  
#line 91
  return [((OrgBouncycastleAsn1ASN1BitString *) nil_chk(bitString_)) getBytes];
}


#line 94
- (jint)getPadBits {
  
#line 96
  return [((OrgBouncycastleAsn1ASN1BitString *) nil_chk(bitString_)) getPadBits];
}


#line 99
- (NSString *)description {
  
#line 102
  IOSByteArray *data = [((OrgBouncycastleAsn1ASN1BitString *) nil_chk(bitString_)) getBytes];
  
#line 104
  if (((IOSByteArray *) nil_chk(data))->size_ == 1) {
    
#line 106
    return JreStrcat("$$", @"KeyUsage: 0x", JavaLangInteger_toHexStringWithInt_(IOSByteArray_Get(data, 0) & (jint) 0xff));
  }
  return JreStrcat("$$", @"KeyUsage: 0x", JavaLangInteger_toHexStringWithInt_((JreLShift32((IOSByteArray_Get(data, 1) & (jint) 0xff), 8)) | (IOSByteArray_Get(data, 0) & (jint) 0xff)));
}


#line 111
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 114
  return bitString_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1X509KeyUsage;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X509KeyUsage;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(fromExtensionsWithOrgBouncycastleAsn1X509Extensions:);
  methods[2].selector = @selector(initWithInt:);
  methods[3].selector = @selector(initWithOrgBouncycastleAsn1ASN1BitString:);
  methods[4].selector = @selector(hasUsagesWithInt:);
  methods[5].selector = @selector(getBytes);
  methods[6].selector = @selector(getPadBits);
  methods[7].selector = @selector(description);
  methods[8].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "digitalSignature", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_digitalSignature, 0x19, -1, -1, -1, -1 },
    { "nonRepudiation", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_nonRepudiation, 0x19, -1, -1, -1, -1 },
    { "keyEncipherment", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_keyEncipherment, 0x19, -1, -1, -1, -1 },
    { "dataEncipherment", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_dataEncipherment, 0x19, -1, -1, -1, -1 },
    { "keyAgreement", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_keyAgreement, 0x19, -1, -1, -1, -1 },
    { "keyCertSign", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_keyCertSign, 0x19, -1, -1, -1, -1 },
    { "cRLSign", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_cRLSign, 0x19, -1, -1, -1, -1 },
    { "encipherOnly", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_encipherOnly, 0x19, -1, -1, -1, -1 },
    { "decipherOnly", "I", .constantValue.asInt = OrgBouncycastleAsn1X509KeyUsage_decipherOnly, 0x19, -1, -1, -1, -1 },
    { "bitString_", "LOrgBouncycastleAsn1ASN1BitString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "fromExtensions", "LOrgBouncycastleAsn1X509Extensions;", "I", "LOrgBouncycastleAsn1ASN1BitString;", "hasUsages", "toString" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1X509KeyUsage = { "KeyUsage", "org.bouncycastle.asn1.x509", ptrTable, methods, fields, 7, 0x1, 9, 10, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1X509KeyUsage;
}

@end


#line 40
OrgBouncycastleAsn1X509KeyUsage *OrgBouncycastleAsn1X509KeyUsage_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1X509KeyUsage_initialize();
  if ([obj isKindOfClass:[OrgBouncycastleAsn1X509KeyUsage class]]) {
    
#line 44
    return (OrgBouncycastleAsn1X509KeyUsage *) obj;
  }
  else if (obj != nil) {
    
#line 48
    return new_OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString_getInstanceWithId_(obj));
  }
  
#line 51
  return nil;
}


#line 54
OrgBouncycastleAsn1X509KeyUsage *OrgBouncycastleAsn1X509KeyUsage_fromExtensionsWithOrgBouncycastleAsn1X509Extensions_(OrgBouncycastleAsn1X509Extensions *extensions) {
  OrgBouncycastleAsn1X509KeyUsage_initialize();
  return OrgBouncycastleAsn1X509KeyUsage_getInstanceWithId_(OrgBouncycastleAsn1X509Extensions_getExtensionParsedValueWithOrgBouncycastleAsn1X509Extensions_withOrgBouncycastleAsn1ASN1ObjectIdentifier_(extensions, JreLoadStatic(OrgBouncycastleAsn1X509Extension, keyUsage)));
}


#line 66
void OrgBouncycastleAsn1X509KeyUsage_initWithInt_(OrgBouncycastleAsn1X509KeyUsage *self, jint usage) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 69
  self->bitString_ = new_OrgBouncycastleAsn1DERBitString_initWithInt_(usage);
}


#line 66
OrgBouncycastleAsn1X509KeyUsage *new_OrgBouncycastleAsn1X509KeyUsage_initWithInt_(jint usage) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509KeyUsage, initWithInt_, usage)
}


#line 66
OrgBouncycastleAsn1X509KeyUsage *create_OrgBouncycastleAsn1X509KeyUsage_initWithInt_(jint usage) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509KeyUsage, initWithInt_, usage)
}


#line 72
void OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1X509KeyUsage *self, OrgBouncycastleAsn1ASN1BitString *bitString) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 75
  self->bitString_ = bitString;
}


#line 72
OrgBouncycastleAsn1X509KeyUsage *new_OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString *bitString) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1X509KeyUsage, initWithOrgBouncycastleAsn1ASN1BitString_, bitString)
}


#line 72
OrgBouncycastleAsn1X509KeyUsage *create_OrgBouncycastleAsn1X509KeyUsage_initWithOrgBouncycastleAsn1ASN1BitString_(OrgBouncycastleAsn1ASN1BitString *bitString) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1X509KeyUsage, initWithOrgBouncycastleAsn1ASN1BitString_, bitString)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1X509KeyUsage)

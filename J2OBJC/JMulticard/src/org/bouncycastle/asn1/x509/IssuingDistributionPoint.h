//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/org/bouncycastle/asn1/x509/IssuingDistributionPoint.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509IssuingDistributionPoint")
#ifdef RESTRICT_OrgBouncycastleAsn1X509IssuingDistributionPoint
#define INCLUDE_ALL_OrgBouncycastleAsn1X509IssuingDistributionPoint 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X509IssuingDistributionPoint 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X509IssuingDistributionPoint

#if !defined (OrgBouncycastleAsn1X509IssuingDistributionPoint_) && (INCLUDE_ALL_OrgBouncycastleAsn1X509IssuingDistributionPoint || defined(INCLUDE_OrgBouncycastleAsn1X509IssuingDistributionPoint))
#define OrgBouncycastleAsn1X509IssuingDistributionPoint_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@class OrgBouncycastleAsn1X509DistributionPointName;
@class OrgBouncycastleAsn1X509ReasonFlags;

/*!
 @brief @code

  IssuingDistributionPoint ::= SEQUENCE { 
    distributionPoint          [0] DistributionPointName OPTIONAL, 
    onlyContainsUserCerts      [1] BOOLEAN DEFAULT FALSE, 
    onlyContainsCACerts        [2] BOOLEAN DEFAULT FALSE, 
    onlySomeReasons            [3] ReasonFlags OPTIONAL, 
    indirectCRL                [4] BOOLEAN DEFAULT FALSE,
    onlyContainsAttributeCerts [5] BOOLEAN DEFAULT FALSE }
  
@endcode
 */
@interface OrgBouncycastleAsn1X509IssuingDistributionPoint : OrgBouncycastleAsn1ASN1Object

#pragma mark Public

/*!
 @brief Shorthand Constructor from given details.
 @param distributionPoint May contain an URI as pointer to most current CRL.
 @param indirectCRL If 
  <code> true </code>  then the CRL contains revocation             information about certificates ssued by other CAs.
 @param onlyContainsAttributeCerts Covers revocation information for attribute certificates.
 */
- (instancetype)initWithOrgBouncycastleAsn1X509DistributionPointName:(OrgBouncycastleAsn1X509DistributionPointName *)distributionPoint
                                                         withBoolean:(jboolean)indirectCRL
                                                         withBoolean:(jboolean)onlyContainsAttributeCerts;

/*!
 @brief Constructor from given details.
 @param distributionPoint May contain an URI as pointer to most current CRL.
 @param onlyContainsUserCerts Covers revocation information for end certificates.
 @param onlyContainsCACerts Covers revocation information for CA certificates.
 @param onlySomeReasons Which revocation reasons does this point cover.
 @param indirectCRL If 
  <code> true </code>  then the CRL contains revocation             information about certificates ssued by other CAs.
 @param onlyContainsAttributeCerts Covers revocation information for attribute certificates.
 */
- (instancetype)initWithOrgBouncycastleAsn1X509DistributionPointName:(OrgBouncycastleAsn1X509DistributionPointName *)distributionPoint
                                                         withBoolean:(jboolean)onlyContainsUserCerts
                                                         withBoolean:(jboolean)onlyContainsCACerts
                              withOrgBouncycastleAsn1X509ReasonFlags:(OrgBouncycastleAsn1X509ReasonFlags *)onlySomeReasons
                                                         withBoolean:(jboolean)indirectCRL
                                                         withBoolean:(jboolean)onlyContainsAttributeCerts;

/*!
 @return Returns the distributionPoint.
 */
- (OrgBouncycastleAsn1X509DistributionPointName *)getDistributionPoint;

+ (OrgBouncycastleAsn1X509IssuingDistributionPoint *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                            withBoolean:(jboolean)explicit_;

+ (OrgBouncycastleAsn1X509IssuingDistributionPoint *)getInstanceWithId:(id)obj;

/*!
 @return Returns the onlySomeReasons.
 */
- (OrgBouncycastleAsn1X509ReasonFlags *)getOnlySomeReasons;

- (jboolean)isIndirectCRL;

- (jboolean)onlyContainsAttributeCerts;

- (jboolean)onlyContainsCACerts;

- (jboolean)onlyContainsUserCerts;

- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X509IssuingDistributionPoint)

FOUNDATION_EXPORT OrgBouncycastleAsn1X509IssuingDistributionPoint *OrgBouncycastleAsn1X509IssuingDistributionPoint_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509IssuingDistributionPoint *OrgBouncycastleAsn1X509IssuingDistributionPoint_getInstanceWithId_(id obj);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509IssuingDistributionPoint_initWithOrgBouncycastleAsn1X509DistributionPointName_withBoolean_withBoolean_withOrgBouncycastleAsn1X509ReasonFlags_withBoolean_withBoolean_(OrgBouncycastleAsn1X509IssuingDistributionPoint *self, OrgBouncycastleAsn1X509DistributionPointName *distributionPoint, jboolean onlyContainsUserCerts, jboolean onlyContainsCACerts, OrgBouncycastleAsn1X509ReasonFlags *onlySomeReasons, jboolean indirectCRL, jboolean onlyContainsAttributeCerts);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509IssuingDistributionPoint *new_OrgBouncycastleAsn1X509IssuingDistributionPoint_initWithOrgBouncycastleAsn1X509DistributionPointName_withBoolean_withBoolean_withOrgBouncycastleAsn1X509ReasonFlags_withBoolean_withBoolean_(OrgBouncycastleAsn1X509DistributionPointName *distributionPoint, jboolean onlyContainsUserCerts, jboolean onlyContainsCACerts, OrgBouncycastleAsn1X509ReasonFlags *onlySomeReasons, jboolean indirectCRL, jboolean onlyContainsAttributeCerts) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509IssuingDistributionPoint *create_OrgBouncycastleAsn1X509IssuingDistributionPoint_initWithOrgBouncycastleAsn1X509DistributionPointName_withBoolean_withBoolean_withOrgBouncycastleAsn1X509ReasonFlags_withBoolean_withBoolean_(OrgBouncycastleAsn1X509DistributionPointName *distributionPoint, jboolean onlyContainsUserCerts, jboolean onlyContainsCACerts, OrgBouncycastleAsn1X509ReasonFlags *onlySomeReasons, jboolean indirectCRL, jboolean onlyContainsAttributeCerts);

FOUNDATION_EXPORT void OrgBouncycastleAsn1X509IssuingDistributionPoint_initWithOrgBouncycastleAsn1X509DistributionPointName_withBoolean_withBoolean_(OrgBouncycastleAsn1X509IssuingDistributionPoint *self, OrgBouncycastleAsn1X509DistributionPointName *distributionPoint, jboolean indirectCRL, jboolean onlyContainsAttributeCerts);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509IssuingDistributionPoint *new_OrgBouncycastleAsn1X509IssuingDistributionPoint_initWithOrgBouncycastleAsn1X509DistributionPointName_withBoolean_withBoolean_(OrgBouncycastleAsn1X509DistributionPointName *distributionPoint, jboolean indirectCRL, jboolean onlyContainsAttributeCerts) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1X509IssuingDistributionPoint *create_OrgBouncycastleAsn1X509IssuingDistributionPoint_initWithOrgBouncycastleAsn1X509DistributionPointName_withBoolean_withBoolean_(OrgBouncycastleAsn1X509DistributionPointName *distributionPoint, jboolean indirectCRL, jboolean onlyContainsAttributeCerts);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X509IssuingDistributionPoint)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509IssuingDistributionPoint")

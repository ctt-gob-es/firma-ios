//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/x509/AttributeCertificateInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificateInfo")
#ifdef RESTRICT_OrgBouncycastleAsn1X509AttributeCertificateInfo
#define INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificateInfo 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificateInfo 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1X509AttributeCertificateInfo

#if !defined (OrgBouncycastleAsn1X509AttributeCertificateInfo_) && (INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificateInfo || defined(INCLUDE_OrgBouncycastleAsn1X509AttributeCertificateInfo))
#define OrgBouncycastleAsn1X509AttributeCertificateInfo_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

@class OrgBouncycastleAsn1ASN1BitString;
@class OrgBouncycastleAsn1ASN1Integer;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1Sequence;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@class OrgBouncycastleAsn1X509AlgorithmIdentifier;
@class OrgBouncycastleAsn1X509AttCertIssuer;
@class OrgBouncycastleAsn1X509AttCertValidityPeriod;
@class OrgBouncycastleAsn1X509Extensions;
@class OrgBouncycastleAsn1X509Holder;

@interface OrgBouncycastleAsn1X509AttributeCertificateInfo : OrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (OrgBouncycastleAsn1X509AttCertValidityPeriod *)getAttrCertValidityPeriod;

- (OrgBouncycastleAsn1ASN1Sequence *)getAttributes;

- (OrgBouncycastleAsn1X509Extensions *)getExtensions;

- (OrgBouncycastleAsn1X509Holder *)getHolder;

+ (OrgBouncycastleAsn1X509AttributeCertificateInfo *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                                            withBoolean:(jboolean)explicit_;

+ (OrgBouncycastleAsn1X509AttributeCertificateInfo *)getInstanceWithId:(id)obj;

- (OrgBouncycastleAsn1X509AttCertIssuer *)getIssuer;

- (OrgBouncycastleAsn1ASN1BitString *)getIssuerUniqueID;

- (OrgBouncycastleAsn1ASN1Integer *)getSerialNumber;

- (OrgBouncycastleAsn1X509AlgorithmIdentifier *)getSignature;

- (OrgBouncycastleAsn1ASN1Integer *)getVersion;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 @code

   AttributeCertificateInfo ::= SEQUENCE {
        version              AttCertVersion -- version is v2,
        holder               Holder,
        issuer               AttCertIssuer,
        signature            AlgorithmIdentifier,
        serialNumber         CertificateSerialNumber,
        attrCertValidityPeriod   AttCertValidityPeriod,
        attributes           SEQUENCE OF Attribute,
        issuerUniqueID       UniqueIdentifier OPTIONAL,
        extensions           Extensions OPTIONAL
   }
   AttCertVersion ::= INTEGER { v2(1) } 
  
@endcode
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1X509AttributeCertificateInfo)

FOUNDATION_EXPORT OrgBouncycastleAsn1X509AttributeCertificateInfo *OrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT OrgBouncycastleAsn1X509AttributeCertificateInfo *OrgBouncycastleAsn1X509AttributeCertificateInfo_getInstanceWithId_(id obj);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1X509AttributeCertificateInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1X509AttributeCertificateInfo")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/anssi/ANSSINamedCurves.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/math/BigInteger.h"
#include "java/util/Enumeration.h"
#include "java/util/Hashtable.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/anssi/ANSSINamedCurves.h"
#include "org/bouncycastle/asn1/anssi/ANSSIObjectIdentifiers.h"
#include "org/bouncycastle/asn1/x9/X9ECParameters.h"
#include "org/bouncycastle/asn1/x9/X9ECParametersHolder.h"
#include "org/bouncycastle/asn1/x9/X9ECPoint.h"
#include "org/bouncycastle/math/ec/ECCurve.h"
#include "org/bouncycastle/math/ec/ECPoint.h"
#include "org/bouncycastle/math/ec/WNafUtil.h"
#include "org/bouncycastle/util/Strings.h"
#include "org/bouncycastle/util/encoders/Hex.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/anssi/ANSSINamedCurves must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1AnssiANSSINamedCurves_1 : OrgBouncycastleAsn1X9X9ECParametersHolder

- (instancetype)init;

- (OrgBouncycastleMathEcECCurve *)createCurve;

- (OrgBouncycastleAsn1X9X9ECParameters *)createParameters;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1AnssiANSSINamedCurves_1)

__attribute__((unused)) static void OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init(OrgBouncycastleAsn1AnssiANSSINamedCurves_1 *self);

__attribute__((unused)) static OrgBouncycastleAsn1AnssiANSSINamedCurves_1 *new_OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1AnssiANSSINamedCurves_1 *create_OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/anssi/ANSSINamedCurves.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1AnssiANSSINamedCurves)

OrgBouncycastleAsn1X9X9ECParametersHolder *OrgBouncycastleAsn1AnssiANSSINamedCurves_FRP256v1;
JavaUtilHashtable *OrgBouncycastleAsn1AnssiANSSINamedCurves_objIds;
JavaUtilHashtable *OrgBouncycastleAsn1AnssiANSSINamedCurves_curves;
JavaUtilHashtable *OrgBouncycastleAsn1AnssiANSSINamedCurves_names;


#line 17
@implementation OrgBouncycastleAsn1AnssiANSSINamedCurves

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 17
- (instancetype)init {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 18
+ (OrgBouncycastleAsn1X9X9ECPoint *)configureBasepointWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve
                                                                          withNSString:(NSString *)encoding {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_configureBasepointWithOrgBouncycastleMathEcECCurve_withNSString_(curve, encoding);
}


#line 24
+ (OrgBouncycastleMathEcECCurve *)configureCurveWithOrgBouncycastleMathEcECCurve:(OrgBouncycastleMathEcECCurve *)curve {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_configureCurveWithOrgBouncycastleMathEcECCurve_(curve);
}

+ (JavaMathBigInteger *)fromHexWithNSString:(NSString *)hex {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_fromHexWithNSString_(hex);
}


#line 65
+ (void)defineCurveWithNSString:(NSString *)name
withOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid
withOrgBouncycastleAsn1X9X9ECParametersHolder:(OrgBouncycastleAsn1X9X9ECParametersHolder *)holder {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_defineCurveWithNSString_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1X9X9ECParametersHolder_(name, oid, holder);
}


#line 77
+ (OrgBouncycastleAsn1X9X9ECParameters *)getByNameWithNSString:(NSString *)name {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_getByNameWithNSString_(name);
}


#line 83
+ (OrgBouncycastleAsn1X9X9ECParametersHolder *)getByNameLazyWithNSString:(NSString *)name {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_getByNameLazyWithNSString_(name);
}


#line 95
+ (OrgBouncycastleAsn1X9X9ECParameters *)getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 101
+ (OrgBouncycastleAsn1X9X9ECParametersHolder *)getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 112
+ (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getOIDWithNSString:(NSString *)name {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_getOIDWithNSString_(name);
}


#line 121
+ (NSString *)getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)oid {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 131
+ (id<JavaUtilEnumeration>)getNames {
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_getNames();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECPoint;", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECCurve;", 0x8, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x8, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 8, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParametersHolder;", 0x9, 9, 5, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParameters;", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParametersHolder;", 0x9, 12, 11, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", 0x9, 13, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 14, 11, -1, -1, -1, -1 },
    { NULL, "LJavaUtilEnumeration;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(configureBasepointWithOrgBouncycastleMathEcECCurve:withNSString:);
  methods[2].selector = @selector(configureCurveWithOrgBouncycastleMathEcECCurve:);
  methods[3].selector = @selector(fromHexWithNSString:);
  methods[4].selector = @selector(defineCurveWithNSString:withOrgBouncycastleAsn1ASN1ObjectIdentifier:withOrgBouncycastleAsn1X9X9ECParametersHolder:);
  methods[5].selector = @selector(getByNameWithNSString:);
  methods[6].selector = @selector(getByNameLazyWithNSString:);
  methods[7].selector = @selector(getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[8].selector = @selector(getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[9].selector = @selector(getOIDWithNSString:);
  methods[10].selector = @selector(getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier:);
  methods[11].selector = @selector(getNames);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FRP256v1", "LOrgBouncycastleAsn1X9X9ECParametersHolder;", .constantValue.asLong = 0, 0x8, -1, 15, -1, -1 },
    { "objIds", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x18, -1, 16, -1, -1 },
    { "curves", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x18, -1, 17, -1, -1 },
    { "names", "LJavaUtilHashtable;", .constantValue.asLong = 0, 0x18, -1, 18, -1, -1 },
  };
  static const void *ptrTable[] = { "configureBasepoint", "LOrgBouncycastleMathEcECCurve;LNSString;", "configureCurve", "LOrgBouncycastleMathEcECCurve;", "fromHex", "LNSString;", "defineCurve", "LNSString;LOrgBouncycastleAsn1ASN1ObjectIdentifier;LOrgBouncycastleAsn1X9X9ECParametersHolder;", "getByName", "getByNameLazy", "getByOID", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;", "getByOIDLazy", "getOID", "getName", &OrgBouncycastleAsn1AnssiANSSINamedCurves_FRP256v1, &OrgBouncycastleAsn1AnssiANSSINamedCurves_objIds, &OrgBouncycastleAsn1AnssiANSSINamedCurves_curves, &OrgBouncycastleAsn1AnssiANSSINamedCurves_names };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1AnssiANSSINamedCurves = { "ANSSINamedCurves", "org.bouncycastle.asn1.anssi", ptrTable, methods, fields, 7, 0x1, 12, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1AnssiANSSINamedCurves;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1AnssiANSSINamedCurves class]) {
    OrgBouncycastleAsn1AnssiANSSINamedCurves_FRP256v1 = new_OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init();
    OrgBouncycastleAsn1AnssiANSSINamedCurves_objIds = new_JavaUtilHashtable_init();
    OrgBouncycastleAsn1AnssiANSSINamedCurves_curves = new_JavaUtilHashtable_init();
    OrgBouncycastleAsn1AnssiANSSINamedCurves_names = new_JavaUtilHashtable_init();
    {
      
#line 74
      OrgBouncycastleAsn1AnssiANSSINamedCurves_defineCurveWithNSString_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1X9X9ECParametersHolder_(@"FRP256v1", JreLoadStatic(OrgBouncycastleAsn1AnssiANSSIObjectIdentifiers, FRP256v1), OrgBouncycastleAsn1AnssiANSSINamedCurves_FRP256v1);
    }
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1AnssiANSSINamedCurves)
  }
}

@end


#line 17
void OrgBouncycastleAsn1AnssiANSSINamedCurves_init(OrgBouncycastleAsn1AnssiANSSINamedCurves *self) {
  NSObject_init(self);
}


#line 17
OrgBouncycastleAsn1AnssiANSSINamedCurves *new_OrgBouncycastleAsn1AnssiANSSINamedCurves_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1AnssiANSSINamedCurves, init)
}


#line 17
OrgBouncycastleAsn1AnssiANSSINamedCurves *create_OrgBouncycastleAsn1AnssiANSSINamedCurves_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1AnssiANSSINamedCurves, init)
}


#line 18
OrgBouncycastleAsn1X9X9ECPoint *OrgBouncycastleAsn1AnssiANSSINamedCurves_configureBasepointWithOrgBouncycastleMathEcECCurve_withNSString_(OrgBouncycastleMathEcECCurve *curve, NSString *encoding) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  
#line 19
  OrgBouncycastleAsn1X9X9ECPoint *G = new_OrgBouncycastleAsn1X9X9ECPoint_initWithOrgBouncycastleMathEcECCurve_withByteArray_(curve, OrgBouncycastleUtilEncodersHex_decodeStrictWithNSString_(encoding));
  OrgBouncycastleMathEcWNafUtil_configureBasepointWithOrgBouncycastleMathEcECPoint_([G getPoint]);
  return G;
}


#line 24
OrgBouncycastleMathEcECCurve *OrgBouncycastleAsn1AnssiANSSINamedCurves_configureCurveWithOrgBouncycastleMathEcECCurve_(OrgBouncycastleMathEcECCurve *curve) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  
#line 25
  return curve;
}


#line 28
JavaMathBigInteger *OrgBouncycastleAsn1AnssiANSSINamedCurves_fromHexWithNSString_(NSString *hex) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  
#line 29
  return new_JavaMathBigInteger_initWithInt_withByteArray_(1, OrgBouncycastleUtilEncodersHex_decodeStrictWithNSString_(hex));
}


#line 65
void OrgBouncycastleAsn1AnssiANSSINamedCurves_defineCurveWithNSString_withOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1X9X9ECParametersHolder_(NSString *name, OrgBouncycastleAsn1ASN1ObjectIdentifier *oid, OrgBouncycastleAsn1X9X9ECParametersHolder *holder) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  (void) [((JavaUtilHashtable *) nil_chk(OrgBouncycastleAsn1AnssiANSSINamedCurves_objIds)) putWithId:OrgBouncycastleUtilStrings_toLowerCaseWithNSString_(name) withId:oid];
  (void) [((JavaUtilHashtable *) nil_chk(OrgBouncycastleAsn1AnssiANSSINamedCurves_names)) putWithId:oid withId:name];
  (void) [((JavaUtilHashtable *) nil_chk(OrgBouncycastleAsn1AnssiANSSINamedCurves_curves)) putWithId:oid withId:holder];
}


#line 77
OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1AnssiANSSINamedCurves_getByNameWithNSString_(NSString *name) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = OrgBouncycastleAsn1AnssiANSSINamedCurves_getOIDWithNSString_(name);
  return oid == nil ? nil : OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}

OrgBouncycastleAsn1X9X9ECParametersHolder *OrgBouncycastleAsn1AnssiANSSINamedCurves_getByNameLazyWithNSString_(NSString *name) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  OrgBouncycastleAsn1ASN1ObjectIdentifier *oid = OrgBouncycastleAsn1AnssiANSSINamedCurves_getOIDWithNSString_(name);
  return oid == nil ? nil : OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
}


#line 95
OrgBouncycastleAsn1X9X9ECParameters *OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  OrgBouncycastleAsn1X9X9ECParametersHolder *holder = OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(oid);
  return holder == nil ? nil : [holder getParameters];
}

OrgBouncycastleAsn1X9X9ECParametersHolder *OrgBouncycastleAsn1AnssiANSSINamedCurves_getByOIDLazyWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  return (OrgBouncycastleAsn1X9X9ECParametersHolder *) cast_chk([((JavaUtilHashtable *) nil_chk(OrgBouncycastleAsn1AnssiANSSINamedCurves_curves)) getWithId:oid], [OrgBouncycastleAsn1X9X9ECParametersHolder class]);
}


#line 112
OrgBouncycastleAsn1ASN1ObjectIdentifier *OrgBouncycastleAsn1AnssiANSSINamedCurves_getOIDWithNSString_(NSString *name) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  
#line 115
  return (OrgBouncycastleAsn1ASN1ObjectIdentifier *) cast_chk([((JavaUtilHashtable *) nil_chk(OrgBouncycastleAsn1AnssiANSSINamedCurves_objIds)) getWithId:OrgBouncycastleUtilStrings_toLowerCaseWithNSString_(name)], [OrgBouncycastleAsn1ASN1ObjectIdentifier class]);
}


#line 121
NSString *OrgBouncycastleAsn1AnssiANSSINamedCurves_getNameWithOrgBouncycastleAsn1ASN1ObjectIdentifier_(OrgBouncycastleAsn1ASN1ObjectIdentifier *oid) {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  
#line 124
  return (NSString *) cast_chk([((JavaUtilHashtable *) nil_chk(OrgBouncycastleAsn1AnssiANSSINamedCurves_names)) getWithId:oid], [NSString class]);
}


#line 131
id<JavaUtilEnumeration> OrgBouncycastleAsn1AnssiANSSINamedCurves_getNames() {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_initialize();
  return [((JavaUtilHashtable *) nil_chk(OrgBouncycastleAsn1AnssiANSSINamedCurves_names)) elements];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1AnssiANSSINamedCurves)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/anssi/ANSSINamedCurves.java"


#line 35
@implementation OrgBouncycastleAsn1AnssiANSSINamedCurves_1

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 35
- (instancetype)init {
  OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 36
- (OrgBouncycastleMathEcECCurve *)createCurve {
  
#line 39
  JavaMathBigInteger *p = OrgBouncycastleAsn1AnssiANSSINamedCurves_fromHexWithNSString_(@"F1FD178C0B3AD58F10126DE8CE42435B3961ADBCABC8CA6DE8FCF353D86E9C03");
  JavaMathBigInteger *a = OrgBouncycastleAsn1AnssiANSSINamedCurves_fromHexWithNSString_(@"F1FD178C0B3AD58F10126DE8CE42435B3961ADBCABC8CA6DE8FCF353D86E9C00");
  JavaMathBigInteger *b = OrgBouncycastleAsn1AnssiANSSINamedCurves_fromHexWithNSString_(@"EE353FCA5428A9300D4ABA754A44C00FDFEC0C9AE4B1A1803075ED967B7BB73F");
  JavaMathBigInteger *n = OrgBouncycastleAsn1AnssiANSSINamedCurves_fromHexWithNSString_(@"F1FD178C0B3AD58F10126DE8CE42435B53DC67E140D2BF941FFDD459C6D655E1");
  JavaMathBigInteger *h = JavaMathBigInteger_valueOfWithLong_(1);
  
#line 45
  return OrgBouncycastleAsn1AnssiANSSINamedCurves_configureCurveWithOrgBouncycastleMathEcECCurve_(new_OrgBouncycastleMathEcECCurve_Fp_initWithJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withJavaMathBigInteger_withBoolean_(p, a, b, n, h, true));
}


#line 48
- (OrgBouncycastleAsn1X9X9ECParameters *)createParameters {
  
#line 50
  IOSByteArray *S = nil;
  OrgBouncycastleMathEcECCurve *curve = [self createCurve];
  
#line 53
  OrgBouncycastleAsn1X9X9ECPoint *G = OrgBouncycastleAsn1AnssiANSSINamedCurves_configureBasepointWithOrgBouncycastleMathEcECCurve_withNSString_(curve,
#line 54
  @"04B6B3D4C356C139EB31183D4749D423958C27D2DCAF98B70164C97A2DD98F5CFF6142E0F7C8B204911F9271F0F3ECEF8C2701C307E8E4C9E183115A1554062CFB");
  
#line 56
  return new_OrgBouncycastleAsn1X9X9ECParameters_initWithOrgBouncycastleMathEcECCurve_withOrgBouncycastleAsn1X9X9ECPoint_withJavaMathBigInteger_withJavaMathBigInteger_withByteArray_(curve, G, [((OrgBouncycastleMathEcECCurve *) nil_chk(curve)) getOrder], [curve getCofactor], S);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleMathEcECCurve;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1X9X9ECParameters;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createCurve);
  methods[2].selector = @selector(createParameters);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1AnssiANSSINamedCurves;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1AnssiANSSINamedCurves_1 = { "", "org.bouncycastle.asn1.anssi", ptrTable, methods, NULL, 7, 0x8000, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1AnssiANSSINamedCurves_1;
}

@end


#line 35
void OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init(OrgBouncycastleAsn1AnssiANSSINamedCurves_1 *self) {
  OrgBouncycastleAsn1X9X9ECParametersHolder_init(self);
}


#line 35
OrgBouncycastleAsn1AnssiANSSINamedCurves_1 *new_OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init() {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1AnssiANSSINamedCurves_1, init)
}


#line 35
OrgBouncycastleAsn1AnssiANSSINamedCurves_1 *create_OrgBouncycastleAsn1AnssiANSSINamedCurves_1_init() {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1AnssiANSSINamedCurves_1, init)
}

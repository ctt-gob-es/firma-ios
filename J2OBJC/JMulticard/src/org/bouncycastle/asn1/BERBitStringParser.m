//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/BERBitStringParser.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "org/bouncycastle/asn1/ASN1ParsingException.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1StreamParser.h"
#include "org/bouncycastle/asn1/BERBitString.h"
#include "org/bouncycastle/asn1/BERBitStringParser.h"
#include "org/bouncycastle/asn1/ConstructedBitStream.h"
#include "org/bouncycastle/util/io/Streams.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/BERBitStringParser must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1BERBitStringParser () {
 @public
  OrgBouncycastleAsn1ASN1StreamParser *_parser_;
  OrgBouncycastleAsn1ConstructedBitStream *_bitStream_;
}

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1BERBitStringParser, _parser_, OrgBouncycastleAsn1ASN1StreamParser *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1BERBitStringParser, _bitStream_, OrgBouncycastleAsn1ConstructedBitStream *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/BERBitStringParser.java"


#line 11
@implementation OrgBouncycastleAsn1BERBitStringParser


#line 18
- (instancetype)initWithOrgBouncycastleAsn1ASN1StreamParser:(OrgBouncycastleAsn1ASN1StreamParser *)parser {
  OrgBouncycastleAsn1BERBitStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(self, parser);
  return self;
}


#line 24
- (JavaIoInputStream *)getOctetStream {
  
#line 27
  return _bitStream_ = new_OrgBouncycastleAsn1ConstructedBitStream_initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_(_parser_, true);
}

- (JavaIoInputStream *)getBitStream {
  
#line 33
  return _bitStream_ = new_OrgBouncycastleAsn1ConstructedBitStream_initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_(_parser_, false);
}

- (jint)getPadBits {
  
#line 39
  return [((OrgBouncycastleAsn1ConstructedBitStream *) nil_chk(_bitStream_)) getPadBits];
}

- (OrgBouncycastleAsn1ASN1Primitive *)getLoadedObject {
  
#line 46
  return OrgBouncycastleAsn1BERBitStringParser_parseWithOrgBouncycastleAsn1ASN1StreamParser_(_parser_);
}


#line 49
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 52
  @try {
    
#line 54
    return [self getLoadedObject];
  }
  @catch (JavaIoIOException *e) {
    
#line 58
    @throw new_OrgBouncycastleAsn1ASN1ParsingException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"IOException converting stream to byte array: ", [e getMessage]), e);
  }
}


#line 62
+ (OrgBouncycastleAsn1BERBitString *)parseWithOrgBouncycastleAsn1ASN1StreamParser:(OrgBouncycastleAsn1ASN1StreamParser *)sp {
  return OrgBouncycastleAsn1BERBitStringParser_parseWithOrgBouncycastleAsn1ASN1StreamParser_(sp);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1BERBitString;", 0x8, 2, 0, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgBouncycastleAsn1ASN1StreamParser:);
  methods[1].selector = @selector(getOctetStream);
  methods[2].selector = @selector(getBitStream);
  methods[3].selector = @selector(getPadBits);
  methods[4].selector = @selector(getLoadedObject);
  methods[5].selector = @selector(toASN1Primitive);
  methods[6].selector = @selector(parseWithOrgBouncycastleAsn1ASN1StreamParser:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_parser_", "LOrgBouncycastleAsn1ASN1StreamParser;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_bitStream_", "LOrgBouncycastleAsn1ConstructedBitStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgBouncycastleAsn1ASN1StreamParser;", "LJavaIoIOException;", "parse" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1BERBitStringParser = { "BERBitStringParser", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1BERBitStringParser;
}

@end


#line 18
void OrgBouncycastleAsn1BERBitStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1BERBitStringParser *self, OrgBouncycastleAsn1ASN1StreamParser *parser) {
  NSObject_init(self);
  
#line 21
  self->_parser_ = parser;
}


#line 18
OrgBouncycastleAsn1BERBitStringParser *new_OrgBouncycastleAsn1BERBitStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1ASN1StreamParser *parser) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1BERBitStringParser, initWithOrgBouncycastleAsn1ASN1StreamParser_, parser)
}


#line 18
OrgBouncycastleAsn1BERBitStringParser *create_OrgBouncycastleAsn1BERBitStringParser_initWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1ASN1StreamParser *parser) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1BERBitStringParser, initWithOrgBouncycastleAsn1ASN1StreamParser_, parser)
}


#line 62
OrgBouncycastleAsn1BERBitString *OrgBouncycastleAsn1BERBitStringParser_parseWithOrgBouncycastleAsn1ASN1StreamParser_(OrgBouncycastleAsn1ASN1StreamParser *sp) {
  OrgBouncycastleAsn1BERBitStringParser_initialize();
  OrgBouncycastleAsn1ConstructedBitStream *bitStream = new_OrgBouncycastleAsn1ConstructedBitStream_initPackagePrivateWithOrgBouncycastleAsn1ASN1StreamParser_withBoolean_(sp, false);
  IOSByteArray *data = OrgBouncycastleUtilIoStreams_readAllWithJavaIoInputStream_(bitStream);
  jint padBits = [bitStream getPadBits];
  return new_OrgBouncycastleAsn1BERBitString_initWithByteArray_withInt_(data, padBits);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1BERBitStringParser)

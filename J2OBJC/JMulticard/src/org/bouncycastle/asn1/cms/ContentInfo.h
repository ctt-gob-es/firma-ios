//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/cms/ContentInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1CmsContentInfo")
#ifdef RESTRICT_OrgBouncycastleAsn1CmsContentInfo
#define INCLUDE_ALL_OrgBouncycastleAsn1CmsContentInfo 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1CmsContentInfo 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1CmsContentInfo

#if !defined (OrgBouncycastleAsn1CmsContentInfo_) && (INCLUDE_ALL_OrgBouncycastleAsn1CmsContentInfo || defined(INCLUDE_OrgBouncycastleAsn1CmsContentInfo))
#define OrgBouncycastleAsn1CmsContentInfo_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

#define RESTRICT_OrgBouncycastleAsn1CmsCMSObjectIdentifiers 1
#define INCLUDE_OrgBouncycastleAsn1CmsCMSObjectIdentifiers 1
#include "org/bouncycastle/asn1/cms/CMSObjectIdentifiers.h"

@class OrgBouncycastleAsn1ASN1ObjectIdentifier;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1TaggedObject;
@protocol OrgBouncycastleAsn1ASN1Encodable;

/*!
 @brief <a href="https://tools.ietf.org/html/rfc5652#section-3">RFC 5652</a> ContentInfo, and 
 <a href="https://tools.ietf.org/html/rfc5652#section-5.2">RFC 5652</a> EncapsulatedContentInfo objects.
 @code

  ContentInfo ::= SEQUENCE {
      contentType ContentType,
      content [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL
  }
  EncapsulatedContentInfo ::= SEQUENCE {
      eContentType ContentType,
      eContent [0] EXPLICIT OCTET STRING OPTIONAL
  } 
  
@endcode
 */
@interface OrgBouncycastleAsn1CmsContentInfo : OrgBouncycastleAsn1ASN1Object < OrgBouncycastleAsn1CmsCMSObjectIdentifiers >

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)contentType
                           withOrgBouncycastleAsn1ASN1Encodable:(id<OrgBouncycastleAsn1ASN1Encodable>)content;

- (id<OrgBouncycastleAsn1ASN1Encodable>)getContent;

- (OrgBouncycastleAsn1ASN1ObjectIdentifier *)getContentType;

+ (OrgBouncycastleAsn1CmsContentInfo *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                              withBoolean:(jboolean)explicit_;

/*!
 @brief Return an ContentInfo object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>ContentInfo</code> object 
 <li> <code>ASN1Sequence</code> input formats with ContentInfo structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgBouncycastleAsn1CmsContentInfo *)getInstanceWithId:(id)obj;

/*!
 @brief Return true if this object encapsulates a definite-length structure.
 @return true if definite-length, false if indefinite.
 */
- (jboolean)isDefiniteLength;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1CmsContentInfo)

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsContentInfo *OrgBouncycastleAsn1CmsContentInfo_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsContentInfo *OrgBouncycastleAsn1CmsContentInfo_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

FOUNDATION_EXPORT void OrgBouncycastleAsn1CmsContentInfo_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1CmsContentInfo *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, id<OrgBouncycastleAsn1ASN1Encodable> content);

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsContentInfo *new_OrgBouncycastleAsn1CmsContentInfo_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, id<OrgBouncycastleAsn1ASN1Encodable> content) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsContentInfo *create_OrgBouncycastleAsn1CmsContentInfo_initWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Encodable_(OrgBouncycastleAsn1ASN1ObjectIdentifier *contentType, id<OrgBouncycastleAsn1ASN1Encodable> content);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1CmsContentInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1CmsContentInfo")

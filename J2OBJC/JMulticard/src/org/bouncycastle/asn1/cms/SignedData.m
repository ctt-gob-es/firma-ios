//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/cms/SignedData.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Enumeration.h"
#include "org/bouncycastle/asn1/ASN1EncodableVector.h"
#include "org/bouncycastle/asn1/ASN1Integer.h"
#include "org/bouncycastle/asn1/ASN1Object.h"
#include "org/bouncycastle/asn1/ASN1ObjectIdentifier.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1Sequence.h"
#include "org/bouncycastle/asn1/ASN1Set.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/BERSequence.h"
#include "org/bouncycastle/asn1/BERSet.h"
#include "org/bouncycastle/asn1/BERTaggedObject.h"
#include "org/bouncycastle/asn1/DERTaggedObject.h"
#include "org/bouncycastle/asn1/DLSequence.h"
#include "org/bouncycastle/asn1/cms/CMSObjectIdentifiers.h"
#include "org/bouncycastle/asn1/cms/ContentInfo.h"
#include "org/bouncycastle/asn1/cms/SignedData.h"
#include "org/bouncycastle/asn1/cms/SignerInfo.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/cms/SignedData must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1CmsSignedData () {
 @public
  OrgBouncycastleAsn1ASN1Integer *version__;
  OrgBouncycastleAsn1ASN1Set *digestAlgorithms_;
  OrgBouncycastleAsn1CmsContentInfo *contentInfo_;
  OrgBouncycastleAsn1ASN1Set *signerInfos_;
  jboolean digsBer_;
  jboolean sigsBer_;
  OrgBouncycastleAsn1ASN1Set *certificates_;
  OrgBouncycastleAsn1ASN1Set *crls_;
  jboolean certsBer_;
  jboolean crlsBer_;
}

- (OrgBouncycastleAsn1ASN1Integer *)calculateVersionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)contentOid
                                                                 withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)certs
                                                                 withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)crls
                                                                 withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)signerInfs;

- (jboolean)checkForVersion3WithOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)signerInfs;

- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1CmsSignedData, version__, OrgBouncycastleAsn1ASN1Integer *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1CmsSignedData, digestAlgorithms_, OrgBouncycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1CmsSignedData, contentInfo_, OrgBouncycastleAsn1CmsContentInfo *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1CmsSignedData, signerInfos_, OrgBouncycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1CmsSignedData, certificates_, OrgBouncycastleAsn1ASN1Set *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1CmsSignedData, crls_, OrgBouncycastleAsn1ASN1Set *)

inline OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_get_VERSION_1(void);
static OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_VERSION_1;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1CmsSignedData, VERSION_1, OrgBouncycastleAsn1ASN1Integer *)

inline OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_get_VERSION_3(void);
static OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_VERSION_3;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1CmsSignedData, VERSION_3, OrgBouncycastleAsn1ASN1Integer *)

inline OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_get_VERSION_4(void);
static OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_VERSION_4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1CmsSignedData, VERSION_4, OrgBouncycastleAsn1ASN1Integer *)

inline OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_get_VERSION_5(void);
static OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_VERSION_5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgBouncycastleAsn1CmsSignedData, VERSION_5, OrgBouncycastleAsn1ASN1Integer *)

__attribute__((unused)) static OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_calculateVersionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1CmsSignedData *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *contentOid, OrgBouncycastleAsn1ASN1Set *certs, OrgBouncycastleAsn1ASN1Set *crls, OrgBouncycastleAsn1ASN1Set *signerInfs);

__attribute__((unused)) static jboolean OrgBouncycastleAsn1CmsSignedData_checkForVersion3WithOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1CmsSignedData *self, OrgBouncycastleAsn1ASN1Set *signerInfs);

__attribute__((unused)) static void OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1CmsSignedData *self, OrgBouncycastleAsn1ASN1Sequence *seq);

__attribute__((unused)) static OrgBouncycastleAsn1CmsSignedData *new_OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1CmsSignedData *create_OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/cms/SignedData.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1CmsSignedData)


#line 59
@implementation OrgBouncycastleAsn1CmsSignedData


#line 93
+ (OrgBouncycastleAsn1CmsSignedData *)getInstanceWithId:(id)o {
  return OrgBouncycastleAsn1CmsSignedData_getInstanceWithId_(o);
}


#line 108
- (instancetype)initWithOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)digestAlgorithms
             withOrgBouncycastleAsn1CmsContentInfo:(OrgBouncycastleAsn1CmsContentInfo *)contentInfo
                    withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)certificates
                    withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)crls
                    withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)signerInfos {
  OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1CmsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(self, digestAlgorithms, contentInfo, certificates, crls, signerInfos);
  return self;
}


#line 128
- (OrgBouncycastleAsn1ASN1Integer *)calculateVersionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:(OrgBouncycastleAsn1ASN1ObjectIdentifier *)contentOid
                                                                 withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)certs
                                                                 withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)crls
                                                                 withOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)signerInfs {
  return OrgBouncycastleAsn1CmsSignedData_calculateVersionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(self, contentOid, certs, crls, signerInfs);
}


#line 195
- (jboolean)checkForVersion3WithOrgBouncycastleAsn1ASN1Set:(OrgBouncycastleAsn1ASN1Set *)signerInfs {
  return OrgBouncycastleAsn1CmsSignedData_checkForVersion3WithOrgBouncycastleAsn1ASN1Set_(self, signerInfs);
}


#line 209
- (instancetype)initWithOrgBouncycastleAsn1ASN1Sequence:(OrgBouncycastleAsn1ASN1Sequence *)seq {
  OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(self, seq);
  return self;
}


#line 266
- (OrgBouncycastleAsn1ASN1Integer *)getVersion {
  
#line 268
  return version__;
}


#line 271
- (OrgBouncycastleAsn1ASN1Set *)getDigestAlgorithms {
  
#line 273
  return digestAlgorithms_;
}


#line 276
- (OrgBouncycastleAsn1CmsContentInfo *)getEncapContentInfo {
  
#line 278
  return contentInfo_;
}


#line 281
- (OrgBouncycastleAsn1ASN1Set *)getCertificates {
  
#line 283
  return certificates_;
}


#line 286
- (OrgBouncycastleAsn1ASN1Set *)getCRLs {
  
#line 288
  return crls_;
}


#line 291
- (OrgBouncycastleAsn1ASN1Set *)getSignerInfos {
  
#line 293
  return signerInfos_;
}


#line 299
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive {
  
#line 302
  OrgBouncycastleAsn1ASN1EncodableVector *v = new_OrgBouncycastleAsn1ASN1EncodableVector_initWithInt_(6);
  
#line 304
  [v addWithOrgBouncycastleAsn1ASN1Encodable:version__];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:digestAlgorithms_];
  [v addWithOrgBouncycastleAsn1ASN1Encodable:contentInfo_];
  
#line 308
  if (certificates_ != nil) {
    
#line 310
    if (certsBer_) {
      
#line 312
      [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1BERTaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(false, 0, certificates_)];
    }
    else {
      
#line 316
      [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(false, 0, certificates_)];
    }
  }
  
#line 320
  if (crls_ != nil) {
    
#line 322
    if (crlsBer_) {
      
#line 324
      [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1BERTaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(false, 1, crls_)];
    }
    else {
      
#line 328
      [v addWithOrgBouncycastleAsn1ASN1Encodable:new_OrgBouncycastleAsn1DERTaggedObject_initWithBoolean_withInt_withOrgBouncycastleAsn1ASN1Encodable_(false, 1, crls_)];
    }
  }
  
#line 332
  [v addWithOrgBouncycastleAsn1ASN1Encodable:signerInfos_];
  
#line 334
  if (![((OrgBouncycastleAsn1CmsContentInfo *) nil_chk(contentInfo_)) isDefiniteLength] || digsBer_ || sigsBer_ || crlsBer_ || certsBer_) {
    
#line 336
    return new_OrgBouncycastleAsn1BERSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v);
  }
  else {
    
#line 340
    return new_OrgBouncycastleAsn1DLSequence_initWithOrgBouncycastleAsn1ASN1EncodableVector_(v);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1CmsSignedData;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Integer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1CmsContentInfo;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Set;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(initWithOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1CmsContentInfo:withOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1ASN1Set:);
  methods[2].selector = @selector(calculateVersionWithOrgBouncycastleAsn1ASN1ObjectIdentifier:withOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1ASN1Set:withOrgBouncycastleAsn1ASN1Set:);
  methods[3].selector = @selector(checkForVersion3WithOrgBouncycastleAsn1ASN1Set:);
  methods[4].selector = @selector(initWithOrgBouncycastleAsn1ASN1Sequence:);
  methods[5].selector = @selector(getVersion);
  methods[6].selector = @selector(getDigestAlgorithms);
  methods[7].selector = @selector(getEncapContentInfo);
  methods[8].selector = @selector(getCertificates);
  methods[9].selector = @selector(getCRLs);
  methods[10].selector = @selector(getSignerInfos);
  methods[11].selector = @selector(toASN1Primitive);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VERSION_1", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
    { "VERSION_3", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 9, -1, -1 },
    { "VERSION_4", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
    { "VERSION_5", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "version__", "LOrgBouncycastleAsn1ASN1Integer;", .constantValue.asLong = 0, 0x12, 12, -1, -1, -1 },
    { "digestAlgorithms_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "contentInfo_", "LOrgBouncycastleAsn1CmsContentInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "signerInfos_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "digsBer_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sigsBer_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "certificates_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "crls_", "LOrgBouncycastleAsn1ASN1Set;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "certsBer_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "crlsBer_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1CmsContentInfo;LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1ASN1Set;", "calculateVersion", "LOrgBouncycastleAsn1ASN1ObjectIdentifier;LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1ASN1Set;LOrgBouncycastleAsn1ASN1Set;", "checkForVersion3", "LOrgBouncycastleAsn1ASN1Set;", "LOrgBouncycastleAsn1ASN1Sequence;", &OrgBouncycastleAsn1CmsSignedData_VERSION_1, &OrgBouncycastleAsn1CmsSignedData_VERSION_3, &OrgBouncycastleAsn1CmsSignedData_VERSION_4, &OrgBouncycastleAsn1CmsSignedData_VERSION_5, "version" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1CmsSignedData = { "SignedData", "org.bouncycastle.asn1.cms", ptrTable, methods, fields, 7, 0x1, 12, 14, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1CmsSignedData;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1CmsSignedData class]) {
    OrgBouncycastleAsn1CmsSignedData_VERSION_1 = new_OrgBouncycastleAsn1ASN1Integer_initWithLong_(
#line 62
    1);
    OrgBouncycastleAsn1CmsSignedData_VERSION_3 = new_OrgBouncycastleAsn1ASN1Integer_initWithLong_(
#line 63
    3);
    OrgBouncycastleAsn1CmsSignedData_VERSION_4 = new_OrgBouncycastleAsn1ASN1Integer_initWithLong_(
#line 64
    4);
    OrgBouncycastleAsn1CmsSignedData_VERSION_5 = new_OrgBouncycastleAsn1ASN1Integer_initWithLong_(
#line 65
    5);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1CmsSignedData)
  }
}

@end


#line 93
OrgBouncycastleAsn1CmsSignedData *OrgBouncycastleAsn1CmsSignedData_getInstanceWithId_(id o) {
  OrgBouncycastleAsn1CmsSignedData_initialize();
  
#line 96
  if ([o isKindOfClass:[OrgBouncycastleAsn1CmsSignedData class]]) {
    
#line 98
    return (OrgBouncycastleAsn1CmsSignedData *) o;
  }
  else if (o != nil) {
    
#line 102
    return new_OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence_getInstanceWithId_(o));
  }
  
#line 105
  return nil;
}


#line 108
void OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1CmsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1CmsSignedData *self, OrgBouncycastleAsn1ASN1Set *digestAlgorithms, OrgBouncycastleAsn1CmsContentInfo *contentInfo, OrgBouncycastleAsn1ASN1Set *certificates, OrgBouncycastleAsn1ASN1Set *crls, OrgBouncycastleAsn1ASN1Set *signerInfos) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 115
  self->version__ = OrgBouncycastleAsn1CmsSignedData_calculateVersionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(self, [((OrgBouncycastleAsn1CmsContentInfo *) nil_chk(contentInfo)) getContentType], certificates, crls, signerInfos);
  self->digestAlgorithms_ = digestAlgorithms;
  self->contentInfo_ = contentInfo;
  self->certificates_ = certificates;
  self->crls_ = crls;
  self->signerInfos_ = signerInfos;
  self->digsBer_ = [digestAlgorithms isKindOfClass:[OrgBouncycastleAsn1BERSet class]];
  self->crlsBer_ = [crls isKindOfClass:[OrgBouncycastleAsn1BERSet class]];
  self->certsBer_ = [certificates isKindOfClass:[OrgBouncycastleAsn1BERSet class]];
  self->sigsBer_ = [signerInfos isKindOfClass:[OrgBouncycastleAsn1BERSet class]];
}


#line 108
OrgBouncycastleAsn1CmsSignedData *new_OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1CmsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1ASN1Set *digestAlgorithms, OrgBouncycastleAsn1CmsContentInfo *contentInfo, OrgBouncycastleAsn1ASN1Set *certificates, OrgBouncycastleAsn1ASN1Set *crls, OrgBouncycastleAsn1ASN1Set *signerInfos) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1CmsSignedData, initWithOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1CmsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_, digestAlgorithms, contentInfo, certificates, crls, signerInfos)
}


#line 108
OrgBouncycastleAsn1CmsSignedData *create_OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1CmsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1ASN1Set *digestAlgorithms, OrgBouncycastleAsn1CmsContentInfo *contentInfo, OrgBouncycastleAsn1ASN1Set *certificates, OrgBouncycastleAsn1ASN1Set *crls, OrgBouncycastleAsn1ASN1Set *signerInfos) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1CmsSignedData, initWithOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1CmsContentInfo_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_, digestAlgorithms, contentInfo, certificates, crls, signerInfos)
}


#line 128
OrgBouncycastleAsn1ASN1Integer *OrgBouncycastleAsn1CmsSignedData_calculateVersionWithOrgBouncycastleAsn1ASN1ObjectIdentifier_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_withOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1CmsSignedData *self, OrgBouncycastleAsn1ASN1ObjectIdentifier *contentOid, OrgBouncycastleAsn1ASN1Set *certs, OrgBouncycastleAsn1ASN1Set *crls, OrgBouncycastleAsn1ASN1Set *signerInfs) {
  
#line 134
  jboolean otherCert = false;
  jboolean otherCrl = false;
  jboolean attrCertV1Found = false;
  jboolean attrCertV2Found = false;
  
#line 139
  if (certs != nil) {
    
#line 141
    for (id __strong obj in certs) {
      if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
        
#line 144
        OrgBouncycastleAsn1ASN1TaggedObject *tagged = OrgBouncycastleAsn1ASN1TaggedObject_getInstanceWithId_(obj);
        
#line 146
        if ([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo] == 1) {
          
#line 148
          attrCertV1Found = true;
        }
        else if ([tagged getTagNo] == 2) {
          
#line 152
          attrCertV2Found = true;
        }
        else if ([tagged getTagNo] == 3) {
          
#line 156
          otherCert = true;
        }
      }
    }
  }
  
#line 162
  if (otherCert) {
    
#line 164
    return new_OrgBouncycastleAsn1ASN1Integer_initWithLong_(5);
  }
  
#line 167
  if (crls != nil) {
    
#line 169
    for (id __strong obj in crls) {
      if ([obj isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
        
#line 172
        otherCrl = true;
      }
    }
  }
  
#line 177
  if (otherCrl) {
    
#line 179
    return OrgBouncycastleAsn1CmsSignedData_VERSION_5;
  }
  
#line 182
  if (attrCertV2Found) {
    
#line 184
    return OrgBouncycastleAsn1CmsSignedData_VERSION_4;
  }
  
#line 187
  if (attrCertV1Found || OrgBouncycastleAsn1CmsSignedData_checkForVersion3WithOrgBouncycastleAsn1ASN1Set_(self, signerInfs) || ![((OrgBouncycastleAsn1ASN1ObjectIdentifier *) nil_chk(JreLoadStatic(OrgBouncycastleAsn1CmsCMSObjectIdentifiers, data))) equalsWithOrgBouncycastleAsn1ASN1Primitive:contentOid]) {
    
#line 189
    return OrgBouncycastleAsn1CmsSignedData_VERSION_3;
  }
  
#line 192
  return OrgBouncycastleAsn1CmsSignedData_VERSION_1;
}


#line 195
jboolean OrgBouncycastleAsn1CmsSignedData_checkForVersion3WithOrgBouncycastleAsn1ASN1Set_(OrgBouncycastleAsn1CmsSignedData *self, OrgBouncycastleAsn1ASN1Set *signerInfs) {
  
#line 197
  for (id __strong signerInf in nil_chk(signerInfs)) {
    OrgBouncycastleAsn1CmsSignerInfo *s = OrgBouncycastleAsn1CmsSignerInfo_getInstanceWithId_(signerInf);
    
#line 200
    if ([((OrgBouncycastleAsn1ASN1Integer *) nil_chk([((OrgBouncycastleAsn1CmsSignerInfo *) nil_chk(s)) getVersion])) hasValueWithInt:3]) {
      
#line 202
      return true;
    }
  }
  
#line 206
  return false;
}


#line 209
void OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1CmsSignedData *self, OrgBouncycastleAsn1ASN1Sequence *seq) {
  OrgBouncycastleAsn1ASN1Object_init(self);
  
#line 212
  id<JavaUtilEnumeration> e = [((OrgBouncycastleAsn1ASN1Sequence *) nil_chk(seq)) getObjects];
  
#line 214
  self->version__ = OrgBouncycastleAsn1ASN1Integer_getInstanceWithId_([((id<JavaUtilEnumeration>) nil_chk(e)) nextElement]);
  self->digestAlgorithms_ = (OrgBouncycastleAsn1ASN1Set *) cast_chk([e nextElement], [OrgBouncycastleAsn1ASN1Set class]);
  self->contentInfo_ = OrgBouncycastleAsn1CmsContentInfo_getInstanceWithId_([e nextElement]);
  
#line 218
  OrgBouncycastleAsn1ASN1Set *sigInfs = nil;
  while ([e hasMoreElements]) {
    
#line 221
    OrgBouncycastleAsn1ASN1Primitive *o = (OrgBouncycastleAsn1ASN1Primitive *) cast_chk([e nextElement], [OrgBouncycastleAsn1ASN1Primitive class]);
    
#line 228
    if ([o isKindOfClass:[OrgBouncycastleAsn1ASN1TaggedObject class]]) {
      
#line 230
      OrgBouncycastleAsn1ASN1TaggedObject *tagged = (OrgBouncycastleAsn1ASN1TaggedObject *) o;
      
#line 232
      switch ([((OrgBouncycastleAsn1ASN1TaggedObject *) nil_chk(tagged)) getTagNo]) {
        
#line 234
        case 0:
        self->certsBer_ = [tagged isKindOfClass:[OrgBouncycastleAsn1BERTaggedObject class]];
        self->certificates_ = OrgBouncycastleAsn1ASN1Set_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
        break;
        case 1:
        self->crlsBer_ = [tagged isKindOfClass:[OrgBouncycastleAsn1BERTaggedObject class]];
        self->crls_ = OrgBouncycastleAsn1ASN1Set_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(tagged, false);
        break;
        default:
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"unknown tag value ", [tagged getTagNo]));
      }
    }
    else {
      
#line 248
      if (!([o isKindOfClass:[OrgBouncycastleAsn1ASN1Set class]])) {
        
#line 250
        @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"SET expected, not encountered");
      }
      sigInfs = (OrgBouncycastleAsn1ASN1Set *) cast_chk(o, [OrgBouncycastleAsn1ASN1Set class]);
    }
  }
  
#line 256
  if (sigInfs == nil) {
    
#line 258
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"signerInfos not set");
  }
  
#line 261
  self->signerInfos_ = sigInfs;
  self->digsBer_ = [self->digestAlgorithms_ isKindOfClass:[OrgBouncycastleAsn1BERSet class]];
  self->sigsBer_ = [self->signerInfos_ isKindOfClass:[OrgBouncycastleAsn1BERSet class]];
}


#line 209
OrgBouncycastleAsn1CmsSignedData *new_OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1CmsSignedData, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}


#line 209
OrgBouncycastleAsn1CmsSignedData *create_OrgBouncycastleAsn1CmsSignedData_initWithOrgBouncycastleAsn1ASN1Sequence_(OrgBouncycastleAsn1ASN1Sequence *seq) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1CmsSignedData, initWithOrgBouncycastleAsn1ASN1Sequence_, seq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1CmsSignedData)

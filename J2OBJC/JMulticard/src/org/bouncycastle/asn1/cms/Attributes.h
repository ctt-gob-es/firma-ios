//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/cms/Attributes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1CmsAttributes")
#ifdef RESTRICT_OrgBouncycastleAsn1CmsAttributes
#define INCLUDE_ALL_OrgBouncycastleAsn1CmsAttributes 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1CmsAttributes 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1CmsAttributes

#if !defined (OrgBouncycastleAsn1CmsAttributes_) && (INCLUDE_ALL_OrgBouncycastleAsn1CmsAttributes || defined(INCLUDE_OrgBouncycastleAsn1CmsAttributes))
#define OrgBouncycastleAsn1CmsAttributes_

#define RESTRICT_OrgBouncycastleAsn1ASN1Object 1
#define INCLUDE_OrgBouncycastleAsn1ASN1Object 1
#include "org/bouncycastle/asn1/ASN1Object.h"

@class IOSObjectArray;
@class OrgBouncycastleAsn1ASN1EncodableVector;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1ASN1TaggedObject;

/*!
 @brief <a href="https://tools.ietf.org/html/rfc5652">RFC 5652</a> defines
  5 "SET OF Attribute" entities with 5 different names.
 This is common implementation for them all: 
 @code

    SignedAttributes      ::= SET SIZE (1..MAX) OF Attribute
    UnsignedAttributes    ::= SET SIZE (1..MAX) OF Attribute
    UnprotectedAttributes ::= SET SIZE (1..MAX) OF Attribute
    AuthAttributes        ::= SET SIZE (1..MAX) OF Attribute
    UnauthAttributes      ::= SET SIZE (1..MAX) OF Attribute
  Attributes ::=
    SET SIZE(1..MAX) OF Attribute 
  
@endcode
 */
@interface OrgBouncycastleAsn1CmsAttributes : OrgBouncycastleAsn1ASN1Object

#pragma mark Public

- (instancetype)initWithOrgBouncycastleAsn1ASN1EncodableVector:(OrgBouncycastleAsn1ASN1EncodableVector *)v;

- (IOSObjectArray *)getAttributes;

+ (OrgBouncycastleAsn1CmsAttributes *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)obj
                                                                             withBoolean:(jboolean)explicit_;

/*!
 @brief Return an Attribute set object from the given object.
 <p>
  Accepted inputs: 
 <ul>
  <li> null &rarr; null 
 <li> <code>Attributes</code> object 
 <li> <code>ASN1Set</code> input formats with Attributes structure inside 
 </ul>
 @param obj the object we want converted.
 @throw IllegalArgumentExceptionif the object cannot be converted.
 */
+ (OrgBouncycastleAsn1CmsAttributes *)getInstanceWithId:(id)obj;

/*!
 @brief Produce an object suitable for an ASN1OutputStream.
 */
- (OrgBouncycastleAsn1ASN1Primitive *)toASN1Primitive;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1CmsAttributes)

FOUNDATION_EXPORT void OrgBouncycastleAsn1CmsAttributes_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1CmsAttributes *self, OrgBouncycastleAsn1ASN1EncodableVector *v);

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsAttributes *new_OrgBouncycastleAsn1CmsAttributes_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1ASN1EncodableVector *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsAttributes *create_OrgBouncycastleAsn1CmsAttributes_initWithOrgBouncycastleAsn1ASN1EncodableVector_(OrgBouncycastleAsn1ASN1EncodableVector *v);

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsAttributes *OrgBouncycastleAsn1CmsAttributes_getInstanceWithId_(id obj);

FOUNDATION_EXPORT OrgBouncycastleAsn1CmsAttributes *OrgBouncycastleAsn1CmsAttributes_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *obj, jboolean explicit_);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1CmsAttributes)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1CmsAttributes")

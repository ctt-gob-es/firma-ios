//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1StreamParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1StreamParser")
#ifdef RESTRICT_OrgBouncycastleAsn1ASN1StreamParser
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1StreamParser 0
#else
#define INCLUDE_ALL_OrgBouncycastleAsn1ASN1StreamParser 1
#endif
#undef RESTRICT_OrgBouncycastleAsn1ASN1StreamParser

#if !defined (OrgBouncycastleAsn1ASN1StreamParser_) && (INCLUDE_ALL_OrgBouncycastleAsn1ASN1StreamParser || defined(INCLUDE_OrgBouncycastleAsn1ASN1StreamParser))
#define OrgBouncycastleAsn1ASN1StreamParser_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoInputStream;
@class OrgBouncycastleAsn1ASN1EncodableVector;
@class OrgBouncycastleAsn1ASN1Primitive;
@class OrgBouncycastleAsn1DefiniteLengthInputStream;
@protocol OrgBouncycastleAsn1ASN1Encodable;
@protocol OrgBouncycastleAsn1ASN1TaggedObjectParser;

/*!
 @brief A parser for ASN.1 streams which also returns, where possible, parsers for the objects it encounters.
 */
@interface OrgBouncycastleAsn1ASN1StreamParser : NSObject

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)encoding;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                  withInt:(jint)limit;

- (id<OrgBouncycastleAsn1ASN1Encodable>)readObject;

#pragma mark Package-Private

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                  withInt:(jint)limit
                           withByteArray2:(IOSObjectArray *)tmpBuffers;

- (id<OrgBouncycastleAsn1ASN1Encodable>)implParseObjectWithInt:(jint)tagHdr;

- (OrgBouncycastleAsn1ASN1Primitive *)loadTaggedDLWithInt:(jint)tagClass
                                                  withInt:(jint)tagNo
                                              withBoolean:(jboolean)constructed;

- (OrgBouncycastleAsn1ASN1Primitive *)loadTaggedILWithInt:(jint)tagClass
                                                  withInt:(jint)tagNo;

- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitConstructedDLWithInt:(jint)univTagNo;

- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitConstructedILWithInt:(jint)univTagNo;

- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitPrimitiveWithInt:(jint)univTagNo;

- (id<OrgBouncycastleAsn1ASN1Encodable>)parseImplicitPrimitiveWithInt:(jint)univTagNo
                     withOrgBouncycastleAsn1DefiniteLengthInputStream:(OrgBouncycastleAsn1DefiniteLengthInputStream *)defIn;

- (id<OrgBouncycastleAsn1ASN1Encodable>)parseObjectWithInt:(jint)univTagNo;

- (id<OrgBouncycastleAsn1ASN1TaggedObjectParser>)parseTaggedObject;

- (OrgBouncycastleAsn1ASN1EncodableVector *)readVector;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1StreamParser)

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(OrgBouncycastleAsn1ASN1StreamParser *self, JavaIoInputStream *inArg);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(JavaIoInputStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_(JavaIoInputStream *inArg);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1StreamParser_initWithByteArray_(OrgBouncycastleAsn1ASN1StreamParser *self, IOSByteArray *encoding);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithByteArray_(IOSByteArray *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithByteArray_(IOSByteArray *encoding);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(OrgBouncycastleAsn1ASN1StreamParser *self, JavaIoInputStream *inArg, jint limit);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint limit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_(JavaIoInputStream *inArg, jint limit);

FOUNDATION_EXPORT void OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(OrgBouncycastleAsn1ASN1StreamParser *self, JavaIoInputStream *inArg, jint limit, IOSObjectArray *tmpBuffers);

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *new_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(JavaIoInputStream *inArg, jint limit, IOSObjectArray *tmpBuffers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgBouncycastleAsn1ASN1StreamParser *create_OrgBouncycastleAsn1ASN1StreamParser_initWithJavaIoInputStream_withInt_withByteArray2_(JavaIoInputStream *inArg, jint limit, IOSObjectArray *tmpBuffers);

J2OBJC_TYPE_LITERAL_HEADER(OrgBouncycastleAsn1ASN1StreamParser)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgBouncycastleAsn1ASN1StreamParser")

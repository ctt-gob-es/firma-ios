//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1RelativeOID.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuffer.h"
#include "java/math/BigInteger.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1RelativeOID.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/OIDTokenizer.h"
#include "org/bouncycastle/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1RelativeOID must be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgBouncycastleAsn1ASN1RelativeOID () {
 @public
  NSString *identifier_;
  IOSByteArray *contents_;
}

- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone;

- (void)doOutputWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)aOut;

- (IOSByteArray *)getContents;

@end

J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1RelativeOID, identifier_, NSString *)
J2OBJC_FIELD_SETTER(OrgBouncycastleAsn1ASN1RelativeOID, contents_, IOSByteArray *)

inline jlong OrgBouncycastleAsn1ASN1RelativeOID_get_LONG_LIMIT(void);
#define OrgBouncycastleAsn1ASN1RelativeOID_LONG_LIMIT 72057594037927808LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgBouncycastleAsn1ASN1RelativeOID, LONG_LIMIT, jlong)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1RelativeOID *self, IOSByteArray *contents, jboolean clone);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1RelativeOID *new_OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1RelativeOID *create_OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone);

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1RelativeOID_doOutputWithJavaIoByteArrayOutputStream_(OrgBouncycastleAsn1ASN1RelativeOID *self, JavaIoByteArrayOutputStream *aOut);

__attribute__((unused)) static IOSByteArray *OrgBouncycastleAsn1ASN1RelativeOID_getContents(OrgBouncycastleAsn1ASN1RelativeOID *self);

@interface OrgBouncycastleAsn1ASN1RelativeOID_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1RelativeOID_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1RelativeOID_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1RelativeOID_1 *new_OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1RelativeOID_1 *create_OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1RelativeOID.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1RelativeOID)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1RelativeOID_TYPE;


#line 9
@implementation OrgBouncycastleAsn1ASN1RelativeOID


#line 21
+ (OrgBouncycastleAsn1ASN1RelativeOID *)fromContentsWithByteArray:(IOSByteArray *)contents {
  return OrgBouncycastleAsn1ASN1RelativeOID_fromContentsWithByteArray_(contents);
}


#line 26
+ (OrgBouncycastleAsn1ASN1RelativeOID *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1RelativeOID_getInstanceWithId_(obj);
}


#line 56
+ (OrgBouncycastleAsn1ASN1RelativeOID *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                               withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1RelativeOID_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}


#line 66
- (instancetype)initWithNSString:(NSString *)identifier {
  OrgBouncycastleAsn1ASN1RelativeOID_initWithNSString_(self, identifier);
  return self;
}


#line 80
- (instancetype)initWithOrgBouncycastleAsn1ASN1RelativeOID:(OrgBouncycastleAsn1ASN1RelativeOID *)oid
                                              withNSString:(NSString *)branchID {
  OrgBouncycastleAsn1ASN1RelativeOID_initWithOrgBouncycastleAsn1ASN1RelativeOID_withNSString_(self, oid, branchID);
  return self;
}


#line 90
- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(self, contents, clone);
  return self;
}


#line 156
- (OrgBouncycastleAsn1ASN1RelativeOID *)branchWithNSString:(NSString *)branchID {
  
#line 158
  return new_OrgBouncycastleAsn1ASN1RelativeOID_initWithOrgBouncycastleAsn1ASN1RelativeOID_withNSString_(self, branchID);
}


#line 161
- (NSString *)getId {
  
#line 163
  return identifier_;
}


#line 166
- (NSUInteger)hash {
  
#line 169
  return ((jint) [((NSString *) nil_chk(identifier_)) hash]);
}

- (NSString *)description {
  
#line 175
  return [self getId];
}

- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other {
  
#line 181
  if (JreObjectEqualsEquals(self, other)) {
    
#line 183
    return true;
  }
  if (!([other isKindOfClass:[OrgBouncycastleAsn1ASN1RelativeOID class]])) {
    
#line 187
    return false;
  }
  
#line 190
  OrgBouncycastleAsn1ASN1RelativeOID *that = (OrgBouncycastleAsn1ASN1RelativeOID *) cast_chk(other, [OrgBouncycastleAsn1ASN1RelativeOID class]);
  
#line 192
  return [((NSString *) nil_chk(self->identifier_)) isEqual:((OrgBouncycastleAsn1ASN1RelativeOID *) nil_chk(that))->identifier_];
}


#line 195
- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 198
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(OrgBouncycastleAsn1ASN1RelativeOID_getContents(self)))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 204
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_RELATIVE_OID withByteArray:OrgBouncycastleAsn1ASN1RelativeOID_getContents(self)];
}


#line 207
- (jboolean)encodeConstructed {
  
#line 210
  return false;
}

- (void)doOutputWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)aOut {
  OrgBouncycastleAsn1ASN1RelativeOID_doOutputWithJavaIoByteArrayOutputStream_(self, aOut);
}


#line 230
- (IOSByteArray *)getContents {
  return OrgBouncycastleAsn1ASN1RelativeOID_getContents(self);
}


#line 244
+ (OrgBouncycastleAsn1ASN1RelativeOID *)createPrimitiveWithByteArray:(IOSByteArray *)contents
                                                         withBoolean:(jboolean)clone {
  return OrgBouncycastleAsn1ASN1RelativeOID_createPrimitiveWithByteArray_withBoolean_(contents, clone);
}

+ (jboolean)isValidIdentifierWithNSString:(NSString *)identifier
                                  withInt:(jint)from {
  return OrgBouncycastleAsn1ASN1RelativeOID_isValidIdentifierWithNSString_withInt_(identifier, from);
}


#line 287
+ (void)writeFieldWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)outArg
                                         withLong:(jlong)fieldValue {
  OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withLong_(outArg, fieldValue);
}


#line 300
+ (void)writeFieldWithJavaIoByteArrayOutputStream:(JavaIoByteArrayOutputStream *)outArg
                           withJavaMathBigInteger:(JavaMathBigInteger *)fieldValue {
  OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(outArg, fieldValue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1RelativeOID;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1RelativeOID;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1RelativeOID;", 0x9, 2, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 6, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 7, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1RelativeOID;", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 11, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x0, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 16, 17, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 18, 19, -1, -1, -1, -1 },
    { NULL, "[B", 0x22, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1RelativeOID;", 0x8, 20, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 21, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 23, 25, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(fromContentsWithByteArray:);
  methods[1].selector = @selector(getInstanceWithId:);
  methods[2].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[3].selector = @selector(initWithNSString:);
  methods[4].selector = @selector(initWithOrgBouncycastleAsn1ASN1RelativeOID:withNSString:);
  methods[5].selector = @selector(initWithByteArray:withBoolean:);
  methods[6].selector = @selector(branchWithNSString:);
  methods[7].selector = @selector(getId);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(description);
  methods[10].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[11].selector = @selector(encodedLengthWithBoolean:);
  methods[12].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[13].selector = @selector(encodeConstructed);
  methods[14].selector = @selector(doOutputWithJavaIoByteArrayOutputStream:);
  methods[15].selector = @selector(getContents);
  methods[16].selector = @selector(createPrimitiveWithByteArray:withBoolean:);
  methods[17].selector = @selector(isValidIdentifierWithNSString:withInt:);
  methods[18].selector = @selector(writeFieldWithJavaIoByteArrayOutputStream:withLong:);
  methods[19].selector = @selector(writeFieldWithJavaIoByteArrayOutputStream:withJavaMathBigInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 26, -1, -1 },
    { "LONG_LIMIT", "J", .constantValue.asLong = OrgBouncycastleAsn1ASN1RelativeOID_LONG_LIMIT, 0x1a, -1, -1, -1, -1 },
    { "identifier_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "contents_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "fromContents", "[B", "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSString;", "LOrgBouncycastleAsn1ASN1RelativeOID;LNSString;", "[BZ", "branch", "hashCode", "toString", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;", "doOutput", "LJavaIoByteArrayOutputStream;", "createPrimitive", "isValidIdentifier", "LNSString;I", "writeField", "LJavaIoByteArrayOutputStream;J", "LJavaIoByteArrayOutputStream;LJavaMathBigInteger;", &OrgBouncycastleAsn1ASN1RelativeOID_TYPE };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1RelativeOID = { "ASN1RelativeOID", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x1, 20, 4, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1RelativeOID;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1RelativeOID class]) {
    OrgBouncycastleAsn1ASN1RelativeOID_TYPE = new_OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(
#line 12
    OrgBouncycastleAsn1ASN1RelativeOID_class_(), OrgBouncycastleAsn1BERTags_RELATIVE_OID);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1RelativeOID)
  }
}

@end


#line 21
OrgBouncycastleAsn1ASN1RelativeOID *OrgBouncycastleAsn1ASN1RelativeOID_fromContentsWithByteArray_(IOSByteArray *contents) {
  OrgBouncycastleAsn1ASN1RelativeOID_initialize();
  return OrgBouncycastleAsn1ASN1RelativeOID_createPrimitiveWithByteArray_withBoolean_(contents, true);
}

OrgBouncycastleAsn1ASN1RelativeOID *OrgBouncycastleAsn1ASN1RelativeOID_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1RelativeOID_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1RelativeOID class]]) {
    
#line 30
    return (OrgBouncycastleAsn1ASN1RelativeOID *) cast_chk(obj, [OrgBouncycastleAsn1ASN1RelativeOID class]);
  }
  if ([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    
#line 34
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1RelativeOID class]]) {
      
#line 37
      return (OrgBouncycastleAsn1ASN1RelativeOID *) primitive;
    }
  }
  else if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 42
    IOSByteArray *enc = (IOSByteArray *) cast_chk(obj, [IOSByteArray class]);
    @try {
      
#line 45
      return (OrgBouncycastleAsn1ASN1RelativeOID *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1RelativeOID_TYPE)) fromByteArrayWithByteArray:enc], [OrgBouncycastleAsn1ASN1RelativeOID class]);
    }
    @catch (JavaIoIOException *e) {
      
#line 49
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"failed to construct relative OID from byte[]: ", [e getMessage]));
    }
  }
  
#line 53
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 56
OrgBouncycastleAsn1ASN1RelativeOID *OrgBouncycastleAsn1ASN1RelativeOID_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1RelativeOID_initialize();
  return (OrgBouncycastleAsn1ASN1RelativeOID *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1RelativeOID_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1RelativeOID class]);
}


#line 66
void OrgBouncycastleAsn1ASN1RelativeOID_initWithNSString_(OrgBouncycastleAsn1ASN1RelativeOID *self, NSString *identifier) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (identifier == nil) {
    
#line 70
    @throw new_JavaLangNullPointerException_initWithNSString_(@"'identifier' cannot be null");
  }
  if (!OrgBouncycastleAsn1ASN1RelativeOID_isValidIdentifierWithNSString_withInt_(identifier, 0)) {
    
#line 74
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"string ", identifier, @" not a relative OID"));
  }
  
#line 77
  self->identifier_ = identifier;
}


#line 66
OrgBouncycastleAsn1ASN1RelativeOID *new_OrgBouncycastleAsn1ASN1RelativeOID_initWithNSString_(NSString *identifier) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1RelativeOID, initWithNSString_, identifier)
}


#line 66
OrgBouncycastleAsn1ASN1RelativeOID *create_OrgBouncycastleAsn1ASN1RelativeOID_initWithNSString_(NSString *identifier) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1RelativeOID, initWithNSString_, identifier)
}


#line 80
void OrgBouncycastleAsn1ASN1RelativeOID_initWithOrgBouncycastleAsn1ASN1RelativeOID_withNSString_(OrgBouncycastleAsn1ASN1RelativeOID *self, OrgBouncycastleAsn1ASN1RelativeOID *oid, NSString *branchID) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (!OrgBouncycastleAsn1ASN1RelativeOID_isValidIdentifierWithNSString_withInt_(branchID, 0)) {
    
#line 84
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"string ", branchID, @" not a valid OID branch"));
  }
  
#line 87
  self->identifier_ = JreStrcat("$C$", [((OrgBouncycastleAsn1ASN1RelativeOID *) nil_chk(oid)) getId], '.', branchID);
}


#line 80
OrgBouncycastleAsn1ASN1RelativeOID *new_OrgBouncycastleAsn1ASN1RelativeOID_initWithOrgBouncycastleAsn1ASN1RelativeOID_withNSString_(OrgBouncycastleAsn1ASN1RelativeOID *oid, NSString *branchID) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1RelativeOID, initWithOrgBouncycastleAsn1ASN1RelativeOID_withNSString_, oid, branchID)
}


#line 80
OrgBouncycastleAsn1ASN1RelativeOID *create_OrgBouncycastleAsn1ASN1RelativeOID_initWithOrgBouncycastleAsn1ASN1RelativeOID_withNSString_(OrgBouncycastleAsn1ASN1RelativeOID *oid, NSString *branchID) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1RelativeOID, initWithOrgBouncycastleAsn1ASN1RelativeOID_withNSString_, oid, branchID)
}


#line 90
void OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1RelativeOID *self, IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  JavaLangStringBuffer *objId = new_JavaLangStringBuffer_init();
  jlong value = 0;
  JavaMathBigInteger *bigValue = nil;
  jboolean first = true;
  
#line 97
  for (jint i = 0; i != ((IOSByteArray *) nil_chk(contents))->size_; i++) {
    
#line 99
    jint b = IOSByteArray_Get(contents, i) & (jint) 0xff;
    
#line 101
    if (value <= OrgBouncycastleAsn1ASN1RelativeOID_LONG_LIMIT) {
      
#line 103
      value += b & (jint) 0x7F;
      if ((b & (jint) 0x80) == 0) {
        
#line 106
        if (first) {
          
#line 108
          first = false;
        }
        else {
          
#line 112
          (void) [objId appendWithChar:'.'];
        }
        
#line 115
        (void) [objId appendWithLong:value];
        value = 0;
      }
      else {
        
#line 120
        JreLShiftAssignLong(&value, 7);
      }
    }
    else {
      
#line 125
      if (bigValue == nil) {
        
#line 127
        bigValue = JavaMathBigInteger_valueOfWithLong_(value);
      }
      bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) or__WithJavaMathBigInteger:JavaMathBigInteger_valueOfWithLong_(b & (jint) 0x7F)];
      if ((b & (jint) 0x80) == 0) {
        
#line 132
        if (first) {
          
#line 134
          first = false;
        }
        else {
          
#line 138
          (void) [objId appendWithChar:'.'];
        }
        
#line 141
        (void) [objId appendWithId:bigValue];
        bigValue = nil;
        value = 0;
      }
      else {
        
#line 147
        bigValue = [((JavaMathBigInteger *) nil_chk(bigValue)) shiftLeftWithInt:7];
      }
    }
  }
  
#line 152
  self->identifier_ = [objId description];
  self->contents_ = clone ? OrgBouncycastleUtilArrays_cloneWithByteArray_(contents) : contents;
}


#line 90
OrgBouncycastleAsn1ASN1RelativeOID *new_OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1RelativeOID, initWithByteArray_withBoolean_, contents, clone)
}


#line 90
OrgBouncycastleAsn1ASN1RelativeOID *create_OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1RelativeOID, initWithByteArray_withBoolean_, contents, clone)
}


#line 213
void OrgBouncycastleAsn1ASN1RelativeOID_doOutputWithJavaIoByteArrayOutputStream_(OrgBouncycastleAsn1ASN1RelativeOID *self, JavaIoByteArrayOutputStream *aOut) {
  
#line 215
  OrgBouncycastleAsn1OIDTokenizer *tok = new_OrgBouncycastleAsn1OIDTokenizer_initWithNSString_(self->identifier_);
  while ([tok hasMoreTokens]) {
    
#line 218
    NSString *token = [tok nextToken];
    if ([((NSString *) nil_chk(token)) java_length] <= 18) {
      
#line 221
      OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withLong_(aOut, JavaLangLong_parseLongWithNSString_(token));
    }
    else {
      
#line 225
      OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(aOut, new_JavaMathBigInteger_initWithNSString_(token));
    }
  }
}


#line 230
IOSByteArray *OrgBouncycastleAsn1ASN1RelativeOID_getContents(OrgBouncycastleAsn1ASN1RelativeOID *self) {
  @synchronized(self) {
    if (self->contents_ == nil) {
      
#line 234
      JavaIoByteArrayOutputStream *bOut = new_JavaIoByteArrayOutputStream_init();
      
#line 236
      OrgBouncycastleAsn1ASN1RelativeOID_doOutputWithJavaIoByteArrayOutputStream_(self, bOut);
      
#line 238
      self->contents_ = [bOut toByteArray];
    }
    
#line 241
    return JreRetainedLocalValue(self->contents_);
  }
}


#line 244
OrgBouncycastleAsn1ASN1RelativeOID *OrgBouncycastleAsn1ASN1RelativeOID_createPrimitiveWithByteArray_withBoolean_(IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1RelativeOID_initialize();
  return new_OrgBouncycastleAsn1ASN1RelativeOID_initWithByteArray_withBoolean_(contents, clone);
}

jboolean OrgBouncycastleAsn1ASN1RelativeOID_isValidIdentifierWithNSString_withInt_(NSString *identifier, jint from) {
  OrgBouncycastleAsn1ASN1RelativeOID_initialize();
  jint digitCount = 0;
  
#line 253
  jint pos = [((NSString *) nil_chk(identifier)) java_length];
  while (--pos >= from) {
    
#line 256
    jchar ch = [identifier charAtWithInt:pos];
    
#line 258
    if (ch == '.') {
      
#line 260
      if (0 == digitCount ||
#line 261
      (digitCount > 1 && [identifier charAtWithInt:pos + 1] == '0')) {
        
#line 263
        return false;
      }
      
#line 266
      digitCount = 0;
    }
    else if ('0' <= ch && ch <= '9') {
      
#line 270
      ++digitCount;
    }
    else {
      
#line 274
      return false;
    }
  }
  
#line 278
  if (0 == digitCount ||
#line 279
  (digitCount > 1 && [identifier charAtWithInt:pos + 1] == '0')) {
    
#line 281
    return false;
  }
  
#line 284
  return true;
}


#line 287
void OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withLong_(JavaIoByteArrayOutputStream *outArg, jlong fieldValue) {
  OrgBouncycastleAsn1ASN1RelativeOID_initialize();
  IOSByteArray *result = [IOSByteArray newArrayWithLength:9];
  jint pos = 8;
  *IOSByteArray_GetRef(result, pos) = (jbyte) ((jint) fieldValue & (jint) 0x7F);
  while (fieldValue >= (JreLShift64(1LL, 7))) {
    
#line 294
    JreRShiftAssignLong(&fieldValue, 7);
    *IOSByteArray_GetRef(result, --pos) = (jbyte) ((jint) fieldValue | (jint) 0x80);
  }
  [((JavaIoByteArrayOutputStream *) nil_chk(outArg)) writeWithByteArray:result withInt:pos withInt:9 - pos];
}


#line 300
void OrgBouncycastleAsn1ASN1RelativeOID_writeFieldWithJavaIoByteArrayOutputStream_withJavaMathBigInteger_(JavaIoByteArrayOutputStream *outArg, JavaMathBigInteger *fieldValue) {
  OrgBouncycastleAsn1ASN1RelativeOID_initialize();
  jint byteCount = JreIntDiv(([((JavaMathBigInteger *) nil_chk(fieldValue)) bitLength] + 6), 7);
  if (byteCount == 0) {
    
#line 305
    [((JavaIoByteArrayOutputStream *) nil_chk(outArg)) writeWithInt:0];
  }
  else {
    
#line 309
    JavaMathBigInteger *tmpValue = fieldValue;
    IOSByteArray *tmp = [IOSByteArray newArrayWithLength:byteCount];
    for (jint i = byteCount - 1; i >= 0; i--) {
      
#line 313
      *IOSByteArray_GetRef(tmp, i) = (jbyte) ([((JavaMathBigInteger *) nil_chk(tmpValue)) intValue] | (jint) 0x80);
      tmpValue = [tmpValue shiftRightWithInt:7];
    }
    *IOSByteArray_GetRef(tmp, byteCount - 1) &= (jint) 0x7F;
    [((JavaIoByteArrayOutputStream *) nil_chk(outArg)) writeWithByteArray:tmp withInt:0 withInt:tmp->size_];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1RelativeOID)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1RelativeOID.java"


#line 13
@implementation OrgBouncycastleAsn1ASN1RelativeOID_1


#line 13
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 14
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 17
  return OrgBouncycastleAsn1ASN1RelativeOID_createPrimitiveWithByteArray_withBoolean_([((OrgBouncycastleAsn1DEROctetString *) nil_chk(octetString)) getOctets], false);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "LOrgBouncycastleAsn1ASN1RelativeOID;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1RelativeOID_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1RelativeOID_1;
}

@end


#line 13
void OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1RelativeOID_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 13
  javaClass, tagNumber);
}


#line 13
OrgBouncycastleAsn1ASN1RelativeOID_1 *new_OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1RelativeOID_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 13
OrgBouncycastleAsn1ASN1RelativeOID_1 *create_OrgBouncycastleAsn1ASN1RelativeOID_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1RelativeOID_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

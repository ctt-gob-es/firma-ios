//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1PrintableString.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/bouncycastle/asn1/ASN1Encodable.h"
#include "org/bouncycastle/asn1/ASN1OutputStream.h"
#include "org/bouncycastle/asn1/ASN1Primitive.h"
#include "org/bouncycastle/asn1/ASN1PrintableString.h"
#include "org/bouncycastle/asn1/ASN1TaggedObject.h"
#include "org/bouncycastle/asn1/ASN1UniversalType.h"
#include "org/bouncycastle/asn1/BERTags.h"
#include "org/bouncycastle/asn1/DEROctetString.h"
#include "org/bouncycastle/asn1/DERPrintableString.h"
#include "org/bouncycastle/util/Arrays.h"
#include "org/bouncycastle/util/Strings.h"

#if !__has_feature(objc_arc)
#error "org/bouncycastle/asn1/ASN1PrintableString must be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static NSString *OrgBouncycastleAsn1ASN1PrintableString_getString(OrgBouncycastleAsn1ASN1PrintableString *self);

@interface OrgBouncycastleAsn1ASN1PrintableString_1 : OrgBouncycastleAsn1ASN1UniversalType

- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber;

- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgBouncycastleAsn1ASN1PrintableString_1)

__attribute__((unused)) static void OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1PrintableString_1 *self, IOSClass *javaClass, jint tagNumber);

__attribute__((unused)) static OrgBouncycastleAsn1ASN1PrintableString_1 *new_OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgBouncycastleAsn1ASN1PrintableString_1 *create_OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1PrintableString.java"

J2OBJC_INITIALIZED_DEFN(OrgBouncycastleAsn1ASN1PrintableString)

OrgBouncycastleAsn1ASN1UniversalType *OrgBouncycastleAsn1ASN1PrintableString_TYPE;


#line 34
@implementation OrgBouncycastleAsn1ASN1PrintableString


#line 54
+ (OrgBouncycastleAsn1ASN1PrintableString *)getInstanceWithId:(id)obj {
  return OrgBouncycastleAsn1ASN1PrintableString_getInstanceWithId_(obj);
}


#line 93
+ (OrgBouncycastleAsn1ASN1PrintableString *)getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:(OrgBouncycastleAsn1ASN1TaggedObject *)taggedObject
                                                                                   withBoolean:(jboolean)explicit_ {
  return OrgBouncycastleAsn1ASN1PrintableString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(taggedObject, explicit_);
}


#line 108
- (instancetype)initWithNSString:(NSString *)string
                     withBoolean:(jboolean)validate {
  OrgBouncycastleAsn1ASN1PrintableString_initWithNSString_withBoolean_(self, string, validate);
  return self;
}


#line 118
- (instancetype)initWithByteArray:(IOSByteArray *)contents
                      withBoolean:(jboolean)clone {
  OrgBouncycastleAsn1ASN1PrintableString_initWithByteArray_withBoolean_(self, contents, clone);
  return self;
}


#line 123
- (NSString *)getString {
  return OrgBouncycastleAsn1ASN1PrintableString_getString(self);
}


#line 129
- (IOSByteArray *)getOctets {
  
#line 131
  return OrgBouncycastleUtilArrays_cloneWithByteArray_(contents_);
}


#line 134
- (jboolean)encodeConstructed {
  
#line 137
  return false;
}

- (jint)encodedLengthWithBoolean:(jboolean)withTag {
  
#line 143
  return OrgBouncycastleAsn1ASN1OutputStream_getLengthOfEncodingDLWithBoolean_withInt_(withTag, ((IOSByteArray *) nil_chk(contents_))->size_);
}

- (void)encodeWithOrgBouncycastleAsn1ASN1OutputStream:(OrgBouncycastleAsn1ASN1OutputStream *)outArg
                                          withBoolean:(jboolean)withTag {
  
#line 149
  [((OrgBouncycastleAsn1ASN1OutputStream *) nil_chk(outArg)) writeEncodingDLWithBoolean:withTag withInt:OrgBouncycastleAsn1BERTags_PRINTABLE_STRING withByteArray:contents_];
}


#line 152
- (jboolean)asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:(OrgBouncycastleAsn1ASN1Primitive *)other {
  
#line 155
  if (!([other isKindOfClass:[OrgBouncycastleAsn1ASN1PrintableString class]])) {
    
#line 157
    return false;
  }
  
#line 160
  OrgBouncycastleAsn1ASN1PrintableString *that = (OrgBouncycastleAsn1ASN1PrintableString *) cast_chk(other, [OrgBouncycastleAsn1ASN1PrintableString class]);
  
#line 162
  return OrgBouncycastleUtilArrays_areEqualWithByteArray_withByteArray_(contents_, ((OrgBouncycastleAsn1ASN1PrintableString *) nil_chk(that))->contents_);
}


#line 165
- (NSUInteger)hash {
  
#line 168
  return OrgBouncycastleUtilArrays_hashCodeWithByteArray_(contents_);
}

- (NSString *)description {
  
#line 174
  return OrgBouncycastleAsn1ASN1PrintableString_getString(self);
}


#line 183
+ (jboolean)isPrintableStringWithNSString:(NSString *)str {
  return OrgBouncycastleAsn1ASN1PrintableString_isPrintableStringWithNSString_(str);
}


#line 228
+ (OrgBouncycastleAsn1ASN1PrintableString *)createPrimitiveWithByteArray:(IOSByteArray *)contents {
  return OrgBouncycastleAsn1ASN1PrintableString_createPrimitiveWithByteArray_(contents);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgBouncycastleAsn1ASN1PrintableString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1PrintableString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x10, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 7, 8, 9, -1, -1, -1 },
    { NULL, "Z", 0x10, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 12, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 14, 15, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1PrintableString;", 0x8, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getInstanceWithId:);
  methods[1].selector = @selector(getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:withBoolean:);
  methods[2].selector = @selector(initWithNSString:withBoolean:);
  methods[3].selector = @selector(initWithByteArray:withBoolean:);
  methods[4].selector = @selector(getString);
  methods[5].selector = @selector(getOctets);
  methods[6].selector = @selector(encodeConstructed);
  methods[7].selector = @selector(encodedLengthWithBoolean:);
  methods[8].selector = @selector(encodeWithOrgBouncycastleAsn1ASN1OutputStream:withBoolean:);
  methods[9].selector = @selector(asn1EqualsWithOrgBouncycastleAsn1ASN1Primitive:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(description);
  methods[12].selector = @selector(isPrintableStringWithNSString:);
  methods[13].selector = @selector(createPrimitiveWithByteArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE", "LOrgBouncycastleAsn1ASN1UniversalType;", .constantValue.asLong = 0, 0x18, -1, 18, -1, -1 },
    { "contents_", "[B", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getInstance", "LNSObject;", "LOrgBouncycastleAsn1ASN1TaggedObject;Z", "LNSString;Z", "[BZ", "encodedLength", "Z", "encode", "LOrgBouncycastleAsn1ASN1OutputStream;Z", "LJavaIoIOException;", "asn1Equals", "LOrgBouncycastleAsn1ASN1Primitive;", "hashCode", "toString", "isPrintableString", "LNSString;", "createPrimitive", "[B", &OrgBouncycastleAsn1ASN1PrintableString_TYPE };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1PrintableString = { "ASN1PrintableString", "org.bouncycastle.asn1", ptrTable, methods, fields, 7, 0x401, 14, 2, -1, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1PrintableString;
}

+ (void)initialize {
  if (self == [OrgBouncycastleAsn1ASN1PrintableString class]) {
    OrgBouncycastleAsn1ASN1PrintableString_TYPE = new_OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(
#line 38
    OrgBouncycastleAsn1ASN1PrintableString_class_(), OrgBouncycastleAsn1BERTags_PRINTABLE_STRING);
    J2OBJC_SET_INITIALIZED(OrgBouncycastleAsn1ASN1PrintableString)
  }
}

@end


#line 54
OrgBouncycastleAsn1ASN1PrintableString *OrgBouncycastleAsn1ASN1PrintableString_getInstanceWithId_(id obj) {
  OrgBouncycastleAsn1ASN1PrintableString_initialize();
  if (obj == nil || [obj isKindOfClass:[OrgBouncycastleAsn1ASN1PrintableString class]]) {
    
#line 58
    return (OrgBouncycastleAsn1ASN1PrintableString *) cast_chk(obj, [OrgBouncycastleAsn1ASN1PrintableString class]);
  }
  if ([OrgBouncycastleAsn1ASN1Encodable_class_() isInstance:obj]) {
    
#line 62
    OrgBouncycastleAsn1ASN1Primitive *primitive = [((id<OrgBouncycastleAsn1ASN1Encodable>) cast_check(obj, OrgBouncycastleAsn1ASN1Encodable_class_())) toASN1Primitive];
    if ([primitive isKindOfClass:[OrgBouncycastleAsn1ASN1PrintableString class]]) {
      
#line 65
      return (OrgBouncycastleAsn1ASN1PrintableString *) primitive;
    }
  }
  if ([obj isKindOfClass:[IOSByteArray class]]) {
    
#line 70
    @try {
      
#line 72
      return (OrgBouncycastleAsn1ASN1PrintableString *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1PrintableString_TYPE)) fromByteArrayWithByteArray:(IOSByteArray *) cast_chk(obj, [IOSByteArray class])], [OrgBouncycastleAsn1ASN1PrintableString class]);
    }
    @catch (JavaLangException *e) {
      
#line 76
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"encoding error in getInstance: ", [e description]));
    }
  }
  
#line 80
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"illegal object in getInstance: ", [[obj java_getClass] getName]));
}


#line 93
OrgBouncycastleAsn1ASN1PrintableString *OrgBouncycastleAsn1ASN1PrintableString_getInstanceWithOrgBouncycastleAsn1ASN1TaggedObject_withBoolean_(OrgBouncycastleAsn1ASN1TaggedObject *taggedObject, jboolean explicit_) {
  OrgBouncycastleAsn1ASN1PrintableString_initialize();
  return (OrgBouncycastleAsn1ASN1PrintableString *) cast_chk([((OrgBouncycastleAsn1ASN1UniversalType *) nil_chk(OrgBouncycastleAsn1ASN1PrintableString_TYPE)) getContextInstanceWithOrgBouncycastleAsn1ASN1TaggedObject:taggedObject withBoolean:explicit_], [OrgBouncycastleAsn1ASN1PrintableString class]);
}


#line 108
void OrgBouncycastleAsn1ASN1PrintableString_initWithNSString_withBoolean_(OrgBouncycastleAsn1ASN1PrintableString *self, NSString *string, jboolean validate) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  if (validate && !OrgBouncycastleAsn1ASN1PrintableString_isPrintableStringWithNSString_(string)) {
    
#line 112
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"string contains illegal characters");
  }
  
#line 115
  self->contents_ = OrgBouncycastleUtilStrings_toByteArrayWithNSString_(string);
}


#line 118
void OrgBouncycastleAsn1ASN1PrintableString_initWithByteArray_withBoolean_(OrgBouncycastleAsn1ASN1PrintableString *self, IOSByteArray *contents, jboolean clone) {
  OrgBouncycastleAsn1ASN1Primitive_init(self);
  self->contents_ = clone ? OrgBouncycastleUtilArrays_cloneWithByteArray_(contents) : contents;
}

NSString *OrgBouncycastleAsn1ASN1PrintableString_getString(OrgBouncycastleAsn1ASN1PrintableString *self) {
  
#line 126
  return OrgBouncycastleUtilStrings_fromByteArrayWithByteArray_(self->contents_);
}


#line 183
jboolean OrgBouncycastleAsn1ASN1PrintableString_isPrintableStringWithNSString_(NSString *str) {
  OrgBouncycastleAsn1ASN1PrintableString_initialize();
  
#line 186
  for (jint i = [((NSString *) nil_chk(str)) java_length] - 1; i >= 0; i--) {
    
#line 188
    jchar ch = [str charAtWithInt:i];
    
#line 190
    if (ch > (jint) 0x007f) {
      
#line 192
      return false;
    }
    
#line 195
    if (('a' <= ch && ch <= 'z') || ('A' <= ch && ch <= 'Z')) {
      
#line 197
      continue;
    }
    
#line 200
    if ('0' <= ch && ch <= '9') {
      
#line 202
      continue;
    }
    
#line 205
    switch (ch) {
      
#line 207
      case ' ':
      case '\'':
      case '(':
      case ')':
      case '+':
      case '-':
      case '.':
      case ':':
      case '=':
      case '?':
      case '/':
      case ',':
      continue;
    }
    
#line 222
    return false;
  }
  
#line 225
  return true;
}


#line 228
OrgBouncycastleAsn1ASN1PrintableString *OrgBouncycastleAsn1ASN1PrintableString_createPrimitiveWithByteArray_(IOSByteArray *contents) {
  OrgBouncycastleAsn1ASN1PrintableString_initialize();
  return new_OrgBouncycastleAsn1DERPrintableString_initWithByteArray_withBoolean_(contents, false);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgBouncycastleAsn1ASN1PrintableString)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/org/bouncycastle/asn1/ASN1PrintableString.java"


#line 39
@implementation OrgBouncycastleAsn1ASN1PrintableString_1


#line 39
- (instancetype)initWithIOSClass:(IOSClass *)javaClass
                         withInt:(jint)tagNumber {
  OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(self, javaClass, tagNumber);
  return self;
}


#line 40
- (OrgBouncycastleAsn1ASN1Primitive *)fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:(OrgBouncycastleAsn1DEROctetString *)octetString {
  
#line 43
  return OrgBouncycastleAsn1ASN1PrintableString_createPrimitiveWithByteArray_([((OrgBouncycastleAsn1DEROctetString *) nil_chk(octetString)) getOctets]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgBouncycastleAsn1ASN1Primitive;", 0x0, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(fromImplicitPrimitiveWithOrgBouncycastleAsn1DEROctetString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;I", "fromImplicitPrimitive", "LOrgBouncycastleAsn1DEROctetString;", "LOrgBouncycastleAsn1ASN1PrintableString;" };
  static const J2ObjcClassInfo _OrgBouncycastleAsn1ASN1PrintableString_1 = { "", "org.bouncycastle.asn1", ptrTable, methods, NULL, 7, 0x8000, 2, 0, 3, -1, -1, -1, -1 };
  return &_OrgBouncycastleAsn1ASN1PrintableString_1;
}

@end


#line 39
void OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(OrgBouncycastleAsn1ASN1PrintableString_1 *self, IOSClass *javaClass, jint tagNumber) {
  OrgBouncycastleAsn1ASN1UniversalType_initPackagePrivateWithIOSClass_withInt_(self,
#line 39
  javaClass, tagNumber);
}


#line 39
OrgBouncycastleAsn1ASN1PrintableString_1 *new_OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_NEW_IMPL(OrgBouncycastleAsn1ASN1PrintableString_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}


#line 39
OrgBouncycastleAsn1ASN1PrintableString_1 *create_OrgBouncycastleAsn1ASN1PrintableString_1_initWithIOSClass_withInt_(IOSClass *javaClass, jint tagNumber) {
  J2OBJC_CREATE_IMPL(OrgBouncycastleAsn1ASN1PrintableString_1, initWithIOSClass_withInt_, javaClass, tagNumber)
}

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/AbstractSmartCard.java
//

#include "J2ObjC_source.h"
#include "es/gob/jmulticard/apdu/CommandApdu.h"
#include "es/gob/jmulticard/apdu/ResponseApdu.h"
#include "es/gob/jmulticard/card/AbstractSmartCard.h"
#include "es/gob/jmulticard/connection/ApduConnection.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/AbstractSmartCard must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardAbstractSmartCard () {
 @public
  /*!
   @brief Clase por defecto de APDU de la tarjeta.
   */
  jbyte cla_;
  /*!
   @brief Conexi&oacute;n con el lector de tarjetas.
   */
  id<EsGobJmulticardConnectionApduConnection> connection_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardCardAbstractSmartCard, connection_, id<EsGobJmulticardConnectionApduConnection>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/AbstractSmartCard.java"


#line 49
@implementation EsGobJmulticardCardAbstractSmartCard


#line 59
- (id<EsGobJmulticardConnectionApduConnection>)getConnection {
  return connection_;
}


#line 67
- (EsGobJmulticardApduResponseApdu *)sendArbitraryApduWithEsGobJmulticardApduCommandApdu:(EsGobJmulticardApduCommandApdu *)apdu {
  return [((id<EsGobJmulticardConnectionApduConnection>) nil_chk(connection_)) transmitWithEsGobJmulticardApduCommandApdu:apdu];
}


#line 75
- (void)setConnectionWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn {
  if (![((id<EsGobJmulticardConnectionApduConnection>) nil_chk(conn)) isOpen]) {
    [conn open];
  }
  connection_ = conn;
}


#line 84
- (jbyte)getCla {
  return cla_;
}


#line 91
- (instancetype)initWithByte:(jbyte)c
withEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn {
  EsGobJmulticardCardAbstractSmartCard_initWithByte_withEsGobJmulticardConnectionApduConnection_(self, c, conn);
  return self;
}


#line 101
- (NSString *)getCardName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LEsGobJmulticardConnectionApduConnection;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardApduResponseApdu;", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x14, 3, 4, 2, -1, -1, -1 },
    { NULL, "B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getConnection);
  methods[1].selector = @selector(sendArbitraryApduWithEsGobJmulticardApduCommandApdu:);
  methods[2].selector = @selector(setConnectionWithEsGobJmulticardConnectionApduConnection:);
  methods[3].selector = @selector(getCla);
  methods[4].selector = @selector(initWithByte:withEsGobJmulticardConnectionApduConnection:);
  methods[5].selector = @selector(getCardName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cla_", "B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "connection_", "LEsGobJmulticardConnectionApduConnection;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "sendArbitraryApdu", "LEsGobJmulticardApduCommandApdu;", "LEsGobJmulticardConnectionApduConnectionException;", "setConnection", "LEsGobJmulticardConnectionApduConnection;", "BLEsGobJmulticardConnectionApduConnection;" };
  static const J2ObjcClassInfo _EsGobJmulticardCardAbstractSmartCard = { "AbstractSmartCard", "es.gob.jmulticard.card", ptrTable, methods, fields, 7, 0x401, 6, 2, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardAbstractSmartCard;
}

@end


#line 91
void EsGobJmulticardCardAbstractSmartCard_initWithByte_withEsGobJmulticardConnectionApduConnection_(EsGobJmulticardCardAbstractSmartCard *self, jbyte c, id<EsGobJmulticardConnectionApduConnection> conn) {
  NSObject_init(self);
  
#line 92
  if (conn == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"La conexion con la tarjeta no puede ser nula");
  }
  self->cla_ = c;
  self->connection_ = conn;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardCardAbstractSmartCard)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/Gender.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/card/icao/Gender.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/icao/Gender must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardIcaoGender () {
 @public
  /*!
   @brief Texto descriptivo del sexo.
   */
  NSString *desc_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardCardIcaoGender, desc_, NSString *)

__attribute__((unused)) static void EsGobJmulticardCardIcaoGender_initWithNSString_withNSString_withInt_(EsGobJmulticardCardIcaoGender *self, NSString *d, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobJmulticardCardIcaoGender *new_EsGobJmulticardCardIcaoGender_initWithNSString_withNSString_withInt_(NSString *d, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/Gender.java"

J2OBJC_INITIALIZED_DEFN(EsGobJmulticardCardIcaoGender)

EsGobJmulticardCardIcaoGender *EsGobJmulticardCardIcaoGender_values_[3];


#line 5
@implementation EsGobJmulticardCardIcaoGender


#line 25
- (NSString *)description {
  
#line 27
  return desc_;
}


#line 34
+ (EsGobJmulticardCardIcaoGender *)getGenderWithNSString:(NSString *)text {
  return EsGobJmulticardCardIcaoGender_getGenderWithNSString_(text);
}

+ (IOSObjectArray *)values {
  return EsGobJmulticardCardIcaoGender_values();
}

+ (EsGobJmulticardCardIcaoGender *)valueOfWithNSString:(NSString *)name {
  return EsGobJmulticardCardIcaoGender_valueOfWithNSString_(name);
}

- (EsGobJmulticardCardIcaoGender_Enum)toNSEnum {
  return (EsGobJmulticardCardIcaoGender_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardCardIcaoGender;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "[LEsGobJmulticardCardIcaoGender;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardCardIcaoGender;", 0x9, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  methods[1].selector = @selector(getGenderWithNSString:);
  methods[2].selector = @selector(values);
  methods[3].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MALE", "LEsGobJmulticardCardIcaoGender;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "FEMALE", "LEsGobJmulticardCardIcaoGender;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "OTHER", "LEsGobJmulticardCardIcaoGender;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "desc_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "getGender", "LNSString;", "valueOf", &JreEnum(EsGobJmulticardCardIcaoGender, MALE), &JreEnum(EsGobJmulticardCardIcaoGender, FEMALE), &JreEnum(EsGobJmulticardCardIcaoGender, OTHER), "Ljava/lang/Enum<Les/gob/jmulticard/card/icao/Gender;>;" };
  static const J2ObjcClassInfo _EsGobJmulticardCardIcaoGender = { "Gender", "es.gob.jmulticard.card.icao", ptrTable, methods, fields, 7, 0x4011, 4, 4, -1, -1, -1, 7, -1 };
  return &_EsGobJmulticardCardIcaoGender;
}

+ (void)initialize {
  if (self == [EsGobJmulticardCardIcaoGender class]) {
    JreEnum(EsGobJmulticardCardIcaoGender, MALE) = new_EsGobJmulticardCardIcaoGender_initWithNSString_withNSString_withInt_(
#line 8
    @"Hombre", JreEnumConstantName(EsGobJmulticardCardIcaoGender_class_(), 0), 0);
    JreEnum(EsGobJmulticardCardIcaoGender, FEMALE) = new_EsGobJmulticardCardIcaoGender_initWithNSString_withNSString_withInt_(
#line 11
    @"Mujer", JreEnumConstantName(EsGobJmulticardCardIcaoGender_class_(), 1), 1);
    JreEnum(EsGobJmulticardCardIcaoGender, OTHER) = new_EsGobJmulticardCardIcaoGender_initWithNSString_withNSString_withInt_(
#line 14
    @"No conocido", JreEnumConstantName(EsGobJmulticardCardIcaoGender_class_(), 2), 2);
    J2OBJC_SET_INITIALIZED(EsGobJmulticardCardIcaoGender)
  }
}

@end


#line 21
void EsGobJmulticardCardIcaoGender_initWithNSString_withNSString_withInt_(EsGobJmulticardCardIcaoGender *self, NSString *d, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 22
  self->desc_ = d;
}


#line 21
EsGobJmulticardCardIcaoGender *new_EsGobJmulticardCardIcaoGender_initWithNSString_withNSString_withInt_(NSString *d, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobJmulticardCardIcaoGender, initWithNSString_withNSString_withInt_, d, __name, __ordinal)
}


#line 34
EsGobJmulticardCardIcaoGender *EsGobJmulticardCardIcaoGender_getGenderWithNSString_(NSString *text) {
  EsGobJmulticardCardIcaoGender_initialize();
  
#line 35
  if (text == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"El texto de descripcion del sexo no puede ser nulo");
  }
  if ([@"F" java_equalsIgnoreCase:[text java_trim]]) {
    return JreEnum(EsGobJmulticardCardIcaoGender, FEMALE);
  }
  if ([@"M" java_equalsIgnoreCase:[text java_trim]]) {
    return JreEnum(EsGobJmulticardCardIcaoGender, MALE);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Sexo indeterminado: ", text));
}

IOSObjectArray *EsGobJmulticardCardIcaoGender_values() {
  EsGobJmulticardCardIcaoGender_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobJmulticardCardIcaoGender_values_ count:3 type:EsGobJmulticardCardIcaoGender_class_()];
}

EsGobJmulticardCardIcaoGender *EsGobJmulticardCardIcaoGender_valueOfWithNSString_(NSString *name) {
  EsGobJmulticardCardIcaoGender_initialize();
  for (int i = 0; i < 3; i++) {
    EsGobJmulticardCardIcaoGender *e = EsGobJmulticardCardIcaoGender_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobJmulticardCardIcaoGender *EsGobJmulticardCardIcaoGender_fromOrdinal(NSUInteger ordinal) {
  EsGobJmulticardCardIcaoGender_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return EsGobJmulticardCardIcaoGender_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardCardIcaoGender)

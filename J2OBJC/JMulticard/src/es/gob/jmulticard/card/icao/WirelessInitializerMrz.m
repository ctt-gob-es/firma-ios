//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/WirelessInitializerMrz.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/CryptoHelper.h"
#include "es/gob/jmulticard/apdu/iso7816four/pace/MseSetPaceAlgorithmApduCommand.h"
#include "es/gob/jmulticard/card/icao/MalformedMrzException.h"
#include "es/gob/jmulticard/card/icao/Mrz.h"
#include "es/gob/jmulticard/card/icao/WirelessInitializerMrz.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/icao/WirelessInitializerMrz must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardIcaoWirelessInitializerMrz () {
 @public
  IOSByteArray *k_;
}

/*!
 @brief Construye una MRZ para inicializaci&oacute;n de un canal PACE.
 @param mrz MRZ.
 */
- (instancetype)initWithByteArray:(IOSByteArray *)mrz;

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardCardIcaoWirelessInitializerMrz, k_, IOSByteArray *)

__attribute__((unused)) static void EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(EsGobJmulticardCardIcaoWirelessInitializerMrz *self, IOSByteArray *mrz);

__attribute__((unused)) static EsGobJmulticardCardIcaoWirelessInitializerMrz *new_EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(IOSByteArray *mrz) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobJmulticardCardIcaoWirelessInitializerMrz *create_EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(IOSByteArray *mrz);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/WirelessInitializerMrz.java"


#line 12
@implementation EsGobJmulticardCardIcaoWirelessInitializerMrz


#line 18
- (instancetype)initWithByteArray:(IOSByteArray *)mrz {
  EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(self, mrz);
  return self;
}


#line 25
- (NSString *)description {
  
#line 27
  return [NSString java_stringWithBytes:k_];
}


#line 30
- (IOSByteArray *)getBytes {
  
#line 32
  return k_;
}


#line 35
- (EsGobJmulticardApduIso7816fourPaceMseSetPaceAlgorithmApduCommand_PacePasswordType *)getPasswordType {
  
#line 37
  return JreLoadEnum(EsGobJmulticardApduIso7816fourPaceMseSetPaceAlgorithmApduCommand_PacePasswordType, MRZ);
}


#line 45
+ (EsGobJmulticardCardIcaoWirelessInitializerMrz *)deriveMrzWithNSString:(NSString *)mrz
                                         withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper {
  return EsGobJmulticardCardIcaoWirelessInitializerMrz_deriveMrzWithNSString_withEsGobJmulticardCryptoHelper_(mrz, cryptoHelper);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardApduIso7816fourPaceMseSetPaceAlgorithmApduCommand_PacePasswordType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardCardIcaoWirelessInitializerMrz;", 0x9, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getBytes);
  methods[3].selector = @selector(getPasswordType);
  methods[4].selector = @selector(deriveMrzWithNSString:withEsGobJmulticardCryptoHelper:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "k_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "toString", "deriveMrz", "LNSString;LEsGobJmulticardCryptoHelper;", "LEsGobJmulticardCardIcaoMalformedMrzException;" };
  static const J2ObjcClassInfo _EsGobJmulticardCardIcaoWirelessInitializerMrz = { "WirelessInitializerMrz", "es.gob.jmulticard.card.icao", ptrTable, methods, fields, 7, 0x11, 5, 1, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardIcaoWirelessInitializerMrz;
}

@end


#line 18
void EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(EsGobJmulticardCardIcaoWirelessInitializerMrz *self, IOSByteArray *mrz) {
  NSObject_init(self);
  
#line 19
  if (mrz == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"La MRZ no puede ser nula");
  }
  self->k_ = mrz;
}


#line 18
EsGobJmulticardCardIcaoWirelessInitializerMrz *new_EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(IOSByteArray *mrz) {
  J2OBJC_NEW_IMPL(EsGobJmulticardCardIcaoWirelessInitializerMrz, initWithByteArray_, mrz)
}


#line 18
EsGobJmulticardCardIcaoWirelessInitializerMrz *create_EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(IOSByteArray *mrz) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardCardIcaoWirelessInitializerMrz, initWithByteArray_, mrz)
}


#line 45
EsGobJmulticardCardIcaoWirelessInitializerMrz *EsGobJmulticardCardIcaoWirelessInitializerMrz_deriveMrzWithNSString_withEsGobJmulticardCryptoHelper_(NSString *mrz, EsGobJmulticardCryptoHelper *cryptoHelper) {
  EsGobJmulticardCardIcaoWirelessInitializerMrz_initialize();
  if (mrz == nil || [mrz java_isEmpty]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 49
    @"El valor no puede ser nulo ni vacio");
  }
  
#line 52
  @try {
    return new_EsGobJmulticardCardIcaoWirelessInitializerMrz_initWithByteArray_(
#line 54
    [new_EsGobJmulticardCardIcaoMrz_initWithNSString_(mrz) getMrzPswdWithEsGobJmulticardCryptoHelper:cryptoHelper]);
  }
  @catch (
#line 57
  JavaIoIOException *ex) {
    @throw new_EsGobJmulticardCardIcaoMalformedMrzException_initWithNSString_withJavaLangException_(@"La MRZ no tiene formato valido", ex);
  }
  @catch (
#line 57
  JavaLangIllegalArgumentException *ex) {
    @throw new_EsGobJmulticardCardIcaoMalformedMrzException_initWithNSString_withJavaLangException_(@"La MRZ no tiene formato valido", ex);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardCardIcaoWirelessInitializerMrz)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/IcaoMrtdWithPace.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/CryptoHelper.h"
#include "es/gob/jmulticard/JmcLogger.h"
#include "es/gob/jmulticard/asn1/Asn1Exception.h"
#include "es/gob/jmulticard/asn1/TlvException.h"
#include "es/gob/jmulticard/asn1/icao/OptionalDetails.h"
#include "es/gob/jmulticard/card/CryptoCardException.h"
#include "es/gob/jmulticard/card/CryptoCardSecurityException.h"
#include "es/gob/jmulticard/card/Location.h"
#include "es/gob/jmulticard/card/PrivateKeyReference.h"
#include "es/gob/jmulticard/card/dnie/DnieNfc.h"
#include "es/gob/jmulticard/card/icao/IcaoMrtdWithPace.h"
#include "es/gob/jmulticard/card/icao/MrtdLds1.h"
#include "es/gob/jmulticard/card/iso7816four/FileNotFoundException.h"
#include "es/gob/jmulticard/card/iso7816four/Iso7816FourCardException.h"
#include "es/gob/jmulticard/card/iso7816four/RequiredSecurityStateNotSatisfiedException.h"
#include "es/gob/jmulticard/connection/ApduConnection.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "javax/security/auth/callback/CallbackHandler.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/icao/IcaoMrtdWithPace must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/IcaoMrtdWithPace.java"


#line 24
@implementation EsGobJmulticardCardIcaoIcaoMrtdWithPace


#line 36
- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHlpr
                   withJavaxSecurityAuthCallbackCallbackHandler:(id<JavaxSecurityAuthCallbackCallbackHandler>)ch {
  EsGobJmulticardCardIcaoIcaoMrtdWithPace_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(self, conn, cryptoHlpr, ch);
  return self;
}


#line 48
- (NSString *)getCardName {
  
#line 50
  return @"MRTD accedido de forma inalambrica mediante PACE";
}


#line 53
- (void)openSecureChannelIfNotAlreadyOpened {
  
#line 55
  EsGobJmulticardJmcLogger_warningWithNSString_(
#line 56
  @"No se permite apertura de canal CWA-14890, se ignora la peticion");
}


#line 60
- (void)openSecureChannelIfNotAlreadyOpenedWithBoolean:(jboolean)doChv {
  
#line 62
  EsGobJmulticardJmcLogger_warningWithNSString_(
#line 63
  @"No se permite apertura de canal CWA-14890, se ignora la peticion");
}


#line 67
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)signAlgorithm
withEsGobJmulticardCardPrivateKeyReference:(id<EsGobJmulticardCardPrivateKeyReference>)privateKeyRef {
  
#line 71
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(
#line 72
  @"No se permite firmar con MRTD");
}


#line 76
- (NSString *)description {
  
#line 78
  return [self getCardName];
}


#line 83
- (NSString *)getIdesp {
  
#line 85
  EsGobJmulticardJmcLogger_infoWithNSString_withNSString_withNSString_([EsGobJmulticardCardIcaoIcaoMrtdWithPace_class_() getName], @"getIdesp", @"Este MRTD no tiene IDESP");
  return nil;
}


#line 95
- (EsGobJmulticardAsn1IcaoOptionalDetails *)getDg13 {
  
#line 97
  @try {
    EsGobJmulticardAsn1IcaoOptionalDetails *ret = new_EsGobJmulticardAsn1IcaoOptionalDetails_init();
    [ret setDerValueWithByteArray:[self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG13_LOCATION)]];
    return ret;
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG13 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG13", e);
  }
  @catch (
#line 105
  EsGobJmulticardAsn1TlvException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG13", e);
  }
  @catch (
#line 105
  EsGobJmulticardAsn1Asn1Exception *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG13", e);
  }
}


#line 113
- (IOSByteArray *)getCardSecurity {
  
#line 115
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_CARD_SECURITY_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"CardSecurity no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el CardSecurity", e);
  }
}


#line 126
- (IOSByteArray *)getDg3 {
  
#line 128
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG03_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG3 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG3", e);
  }
}


#line 139
- (IOSByteArray *)getDg4 {
  
#line 141
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG04_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG4 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourRequiredSecurityStateNotSatisfiedException *e) {
    @throw new_EsGobJmulticardCardCryptoCardSecurityException_initWithNSString_withJavaLangThrowable_(@"Se necesita canal de adminstrador para leer el DG4", e);
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG4", e);
  }
}


#line 155
- (IOSByteArray *)getDg5 {
  
#line 157
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG05_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG5 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG5", e);
  }
}


#line 168
- (IOSByteArray *)getDg6 {
  
#line 170
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG06_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG6 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG6", e);
  }
}


#line 181
- (IOSByteArray *)getDg8 {
  
#line 183
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG08_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG8 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG8", e);
  }
}


#line 194
- (IOSByteArray *)getDg9 {
  
#line 196
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG09_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG9 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG9", e);
  }
}


#line 207
- (IOSByteArray *)getDg10 {
  
#line 209
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG10_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG10 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG10", e);
  }
}


#line 220
- (IOSByteArray *)getDg15 {
  
#line 222
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG15_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG15 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG15", e);
  }
}


#line 233
- (IOSByteArray *)getDg16 {
  
#line 235
  @try {
    return [self selectFileByLocationAndReadWithEsGobJmulticardCardLocation:JreLoadStatic(EsGobJmulticardCardIcaoMrtdLds1, FILE_DG16_LOCATION)];
  }
  @catch (EsGobJmulticardCardIso7816fourFileNotFoundException *e) {
    @throw nil_chk((JavaIoIOException *) cast_chk([new_JavaIoFileNotFoundException_initWithNSString_(@"DG16 no encontrado") initCauseWithJavaLangThrowable:e], [JavaIoIOException class]));
  }
  @catch (EsGobJmulticardCardIso7816fourIso7816FourCardException *e) {
    @throw new_EsGobJmulticardCardCryptoCardException_initWithNSString_withJavaLangThrowable_(@"Error leyendo el DG16", e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1IcaoOptionalDetails;", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithEsGobJmulticardConnectionApduConnection:withEsGobJmulticardCryptoHelper:withJavaxSecurityAuthCallbackCallbackHandler:);
  methods[1].selector = @selector(getCardName);
  methods[2].selector = @selector(openSecureChannelIfNotAlreadyOpened);
  methods[3].selector = @selector(openSecureChannelIfNotAlreadyOpenedWithBoolean:);
  methods[4].selector = @selector(signWithByteArray:withNSString:withEsGobJmulticardCardPrivateKeyReference:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(getIdesp);
  methods[7].selector = @selector(getDg13);
  methods[8].selector = @selector(getCardSecurity);
  methods[9].selector = @selector(getDg3);
  methods[10].selector = @selector(getDg4);
  methods[11].selector = @selector(getDg5);
  methods[12].selector = @selector(getDg6);
  methods[13].selector = @selector(getDg8);
  methods[14].selector = @selector(getDg9);
  methods[15].selector = @selector(getDg10);
  methods[16].selector = @selector(getDg15);
  methods[17].selector = @selector(getDg16);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEsGobJmulticardConnectionApduConnection;LEsGobJmulticardCryptoHelper;LJavaxSecurityAuthCallbackCallbackHandler;", "LEsGobJmulticardCardIcaoIcaoException;LEsGobJmulticardConnectionApduConnectionException;", "openSecureChannelIfNotAlreadyOpened", "Z", "sign", "[BLNSString;LEsGobJmulticardCardPrivateKeyReference;", "toString", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _EsGobJmulticardCardIcaoIcaoMrtdWithPace = { "IcaoMrtdWithPace", "es.gob.jmulticard.card.icao", ptrTable, methods, NULL, 7, 0x11, 18, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardIcaoIcaoMrtdWithPace;
}

@end


#line 36
void EsGobJmulticardCardIcaoIcaoMrtdWithPace_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(EsGobJmulticardCardIcaoIcaoMrtdWithPace *self, id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *cryptoHlpr, id<JavaxSecurityAuthCallbackCallbackHandler> ch) {
  EsGobJmulticardCardDnieDnieNfc_initWithEsGobJmulticardConnectionApduConnection_withJavaxSecurityAuthCallbackPasswordCallback_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(self,
#line 41
  conn,
#line 42
  nil,
#line 43
  cryptoHlpr,
#line 44
  ch);
}


#line 36
EsGobJmulticardCardIcaoIcaoMrtdWithPace *new_EsGobJmulticardCardIcaoIcaoMrtdWithPace_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *cryptoHlpr, id<JavaxSecurityAuthCallbackCallbackHandler> ch) {
  J2OBJC_NEW_IMPL(EsGobJmulticardCardIcaoIcaoMrtdWithPace, initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_, conn, cryptoHlpr, ch)
}


#line 36
EsGobJmulticardCardIcaoIcaoMrtdWithPace *create_EsGobJmulticardCardIcaoIcaoMrtdWithPace_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *cryptoHlpr, id<JavaxSecurityAuthCallbackCallbackHandler> ch) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardCardIcaoIcaoMrtdWithPace, initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_, conn, cryptoHlpr, ch)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardCardIcaoIcaoMrtdWithPace)

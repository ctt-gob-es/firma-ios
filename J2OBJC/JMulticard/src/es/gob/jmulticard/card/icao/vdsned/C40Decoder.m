//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/vdsned/C40Decoder.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/card/icao/vdsned/C40Decoder.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/IOException.h"
#include "java/lang/StringBuilder.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/icao/vdsned/C40Decoder must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardIcaoVdsnedC40Decoder ()

- (instancetype)initPackagePrivate;

+ (IOSIntArray *)parseTwoBytesWithInt:(jint)firstByte
                              withInt:(jint)secondByte;

@end

/*!
 @brief Juego b&aacute;sico de caracteres C40 (con el espacio cambiado a '&lt;').
 */
inline IOSCharArray *EsGobJmulticardCardIcaoVdsnedC40Decoder_get_C40_BASIC_SET_CHARS(void);
static IOSCharArray *EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_BASIC_SET_CHARS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardCardIcaoVdsnedC40Decoder, C40_BASIC_SET_CHARS, IOSCharArray *)

/*!
 @brief Juego extendido de caracteres C40.
 */
inline IOSCharArray *EsGobJmulticardCardIcaoVdsnedC40Decoder_get_C40_SHIFT2_SET_CHARS(void);
static IOSCharArray *EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_SHIFT2_SET_CHARS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardCardIcaoVdsnedC40Decoder, C40_SHIFT2_SET_CHARS, IOSCharArray *)

__attribute__((unused)) static void EsGobJmulticardCardIcaoVdsnedC40Decoder_initPackagePrivate(EsGobJmulticardCardIcaoVdsnedC40Decoder *self);

__attribute__((unused)) static EsGobJmulticardCardIcaoVdsnedC40Decoder *new_EsGobJmulticardCardIcaoVdsnedC40Decoder_initPackagePrivate(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobJmulticardCardIcaoVdsnedC40Decoder *create_EsGobJmulticardCardIcaoVdsnedC40Decoder_initPackagePrivate(void);

__attribute__((unused)) static IOSIntArray *EsGobJmulticardCardIcaoVdsnedC40Decoder_parseTwoBytesWithInt_withInt_(jint firstByte, jint secondByte);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/icao/vdsned/C40Decoder.java"

J2OBJC_INITIALIZED_DEFN(EsGobJmulticardCardIcaoVdsnedC40Decoder)


#line 24
@implementation EsGobJmulticardCardIcaoVdsnedC40Decoder


#line 41
- (instancetype)initPackagePrivate {
  EsGobJmulticardCardIcaoVdsnedC40Decoder_initPackagePrivate(self);
  return self;
}


#line 51
+ (NSString *)decodeWithByteArray:(IOSByteArray *)c40encoded {
  return EsGobJmulticardCardIcaoVdsnedC40Decoder_decodeWithByteArray_(c40encoded);
}


#line 136
+ (IOSIntArray *)parseTwoBytesWithInt:(jint)firstByte
                              withInt:(jint)secondByte {
  return EsGobJmulticardCardIcaoVdsnedC40Decoder_parseTwoBytesWithInt_withInt_(firstByte, secondByte);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 0, 1, 2, -1, -1, -1 },
    { NULL, "[I", 0xa, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(decodeWithByteArray:);
  methods[2].selector = @selector(parseTwoBytesWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "C40_BASIC_SET_CHARS", "[C", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "C40_SHIFT2_SET_CHARS", "[C", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "decode", "[B", "LJavaIoIOException;", "parseTwoBytes", "II", &EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_BASIC_SET_CHARS, &EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_SHIFT2_SET_CHARS };
  static const J2ObjcClassInfo _EsGobJmulticardCardIcaoVdsnedC40Decoder = { "C40Decoder", "es.gob.jmulticard.card.icao.vdsned", ptrTable, methods, fields, 7, 0x10, 3, 2, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardIcaoVdsnedC40Decoder;
}

+ (void)initialize {
  if (self == [EsGobJmulticardCardIcaoVdsnedC40Decoder class]) {
    EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_BASIC_SET_CHARS = [IOSCharArray newArrayWithChars:(jchar[]){
#line 28
      '*', '*', '*', '<', '0', '1', '2', '3', '4', '5',
#line 29
      '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F',
#line 30
      'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
#line 31
      'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' } count:40];
      EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_SHIFT2_SET_CHARS = [IOSCharArray newArrayWithChars:(jchar[]){
#line 36
        '!', '"', '#', '$', '%', '&', '\'', '(', ')', '*',
#line 37
        '+', ',', '-', '.', '/', ':', ';', '<', '=', '>',
#line 38
        '?', '@', '[', '\\', ']', '^', '_' } count:27];
        J2OBJC_SET_INITIALIZED(EsGobJmulticardCardIcaoVdsnedC40Decoder)
      }
    }

@end


#line 41
void EsGobJmulticardCardIcaoVdsnedC40Decoder_initPackagePrivate(EsGobJmulticardCardIcaoVdsnedC40Decoder *self) {
  NSObject_init(self);
}


#line 41
EsGobJmulticardCardIcaoVdsnedC40Decoder *new_EsGobJmulticardCardIcaoVdsnedC40Decoder_initPackagePrivate() {
  J2OBJC_NEW_IMPL(EsGobJmulticardCardIcaoVdsnedC40Decoder, initPackagePrivate)
}


#line 41
EsGobJmulticardCardIcaoVdsnedC40Decoder *create_EsGobJmulticardCardIcaoVdsnedC40Decoder_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardCardIcaoVdsnedC40Decoder, initPackagePrivate)
}


#line 51
NSString *EsGobJmulticardCardIcaoVdsnedC40Decoder_decodeWithByteArray_(IOSByteArray *c40encoded) {
  EsGobJmulticardCardIcaoVdsnedC40Decoder_initialize();
  
#line 56
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_init();
  JavaIoByteArrayInputStream *bits = new_JavaIoByteArrayInputStream_initWithByteArray_(c40encoded);
  
#line 59
  jboolean upperShift = false;
  
#line 61
  do {
    
#line 63
    if ([bits available] == 1) {
      break;
    }
    jint firstByte = [bits read];
    if (firstByte == 254) {
      break;
    }
    
#line 71
    IOSIntArray *cValues = EsGobJmulticardCardIcaoVdsnedC40Decoder_parseTwoBytesWithInt_withInt_(firstByte, [bits read]);
    
#line 73
    jint shift = 0;
    for (jint i = 0; i < 3; i++) {
      jint cValue = IOSIntArray_Get(nil_chk(cValues), i);
      switch (shift) {
        case 0:
        if (cValue < 3) {
          shift = cValue + 1;
        }
        else if (upperShift) {
          (void) [result appendWithChar:(jchar) (IOSCharArray_Get(nil_chk(EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_BASIC_SET_CHARS), cValue) + 128)];
          upperShift = false;
        }
        else {
          (void) [result appendWithChar:IOSCharArray_Get(nil_chk(EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_BASIC_SET_CHARS), cValue)];
        }
        break;
        case 1:
        if (upperShift) {
          (void) [result appendWithChar:(jchar) (cValue + 128)];
          upperShift = false;
        }
        else {
          (void) [result appendWithInt:cValue];
        }
        shift = 0;
        break;
        case 2:
        if (cValue < 27) {
          if (upperShift) {
            (void) [result appendWithChar:(jchar) (IOSCharArray_Get(nil_chk(EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_SHIFT2_SET_CHARS), cValue) + 128)];
            upperShift = false;
          }
          else {
            (void) [result appendWithChar:IOSCharArray_Get(nil_chk(EsGobJmulticardCardIcaoVdsnedC40Decoder_C40_SHIFT2_SET_CHARS), cValue)];
          }
        }
        else if (cValue == 27 || cValue != 30) {
          @throw new_JavaIoIOException_init();
        }
        else {
          upperShift = true;
        }
        shift = 0;
        break;
        case 3:
        if (upperShift) {
          (void) [result appendWithChar:(jchar) (cValue + 224)];
          upperShift = false;
        }
        else {
          (void) [result appendWithChar:(jchar) (cValue + 96)];
        }
        shift = 0;
        break;
        default:
        @throw new_JavaIoIOException_init();
      }
    }
  }
  while (
#line 131
  [bits available] > 0);
  
#line 133
  return [result description];
}


#line 136
IOSIntArray *EsGobJmulticardCardIcaoVdsnedC40Decoder_parseTwoBytesWithInt_withInt_(jint firstByte, jint secondByte) {
  EsGobJmulticardCardIcaoVdsnedC40Decoder_initialize();
  
#line 137
  jint fullBitValue = (JreLShift32(firstByte, 8)) + secondByte - 1;
  IOSIntArray *result = [IOSIntArray newArrayWithLength:3];
  jint temp = JreIntDiv(fullBitValue, 1600);
  *IOSIntArray_GetRef(result, 0) = temp;
  fullBitValue -= temp * 1600;
  temp = JreIntDiv(fullBitValue, 40);
  *IOSIntArray_GetRef(result, 1) = temp;
  *IOSIntArray_GetRef(result, 2) = fullBitValue - temp * 40;
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardCardIcaoVdsnedC40Decoder)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/Atr.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardCardAtr")
#ifdef RESTRICT_EsGobJmulticardCardAtr
#define INCLUDE_ALL_EsGobJmulticardCardAtr 0
#else
#define INCLUDE_ALL_EsGobJmulticardCardAtr 1
#endif
#undef RESTRICT_EsGobJmulticardCardAtr

#if !defined (EsGobJmulticardCardAtr_) && (INCLUDE_ALL_EsGobJmulticardCardAtr || defined(INCLUDE_EsGobJmulticardCardAtr))
#define EsGobJmulticardCardAtr_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSByteArray;

/*!
 @brief Respuesta al reset (ATR, <i>Answer To Reset</i>) de una tarjeta.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardCardAtr : NSObject < JavaIoSerializable > {
 @public
  /*!
   @brief Octetos del ATR.
   */
  IOSByteArray *atrBytes_;
}

#pragma mark Public

/*!
 @brief Construye una respuesta al reset.
 @param cardAtr ATR de la tarjeta
 @param atrMask M &aacute; scara de comparaci &oacute; n del ATR para determinar modelo espec &iacute; fico         de tarjeta
 */
- (instancetype)initWithByteArray:(IOSByteArray *)cardAtr
                    withByteArray:(IOSByteArray *)atrMask;

- (jboolean)isEqual:(id)o;

/*!
 @brief Obtiene los octetos binarios de la respuesta al reset.
 @return Representaci&oacute;n binaria de la respuesta al reset
 */
- (IOSByteArray *)getBytes;

/*!
 @brief Obtiene la m&aacute;scara de comparaci&oacute;n del ATR.
 @return M&aacute;scara de comparaci&oacute;n del ATR.
 */
- (IOSByteArray *)getMask;

- (NSUInteger)hash;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardCardAtr)

J2OBJC_FIELD_SETTER(EsGobJmulticardCardAtr, atrBytes_, IOSByteArray *)

FOUNDATION_EXPORT void EsGobJmulticardCardAtr_initWithByteArray_withByteArray_(EsGobJmulticardCardAtr *self, IOSByteArray *cardAtr, IOSByteArray *atrMask);

FOUNDATION_EXPORT EsGobJmulticardCardAtr *new_EsGobJmulticardCardAtr_initWithByteArray_withByteArray_(IOSByteArray *cardAtr, IOSByteArray *atrMask) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardCardAtr *create_EsGobJmulticardCardAtr_initWithByteArray_withByteArray_(IOSByteArray *cardAtr, IOSByteArray *atrMask);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCardAtr)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardCardAtr")

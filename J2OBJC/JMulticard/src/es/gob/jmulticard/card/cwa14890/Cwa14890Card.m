//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/cwa14890/Cwa14890Card.java
//

#include "J2ObjC_source.h"
#include "es/gob/jmulticard/card/cwa14890/Cwa14890Card.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/cwa14890/Cwa14890Card must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardCwa14890Cwa14890Card : NSObject

@end

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/cwa14890/Cwa14890Card.java"


#line 53
@implementation EsGobJmulticardCardCwa14890Cwa14890Card

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaSecurityInterfacesRSAPublicKey;", 0x401, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, 4, -1, -1, -1 },
    { NULL, "[B", 0x401, 5, 6, 4, -1, -1, -1 },
    { NULL, "Z", 0x401, 7, 8, 4, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 6, 4, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, 4, -1, -1, -1 },
    { NULL, "[B", 0x401, 10, 3, -1, -1, -1, -1 },
    { NULL, "[B", 0x401, 11, 3, -1, -1, -1, -1 },
    { NULL, "LJavaSecurityInterfacesRSAPrivateKey;", 0x401, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 14, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(verifyIcc);
  methods[1].selector = @selector(getIccCertPublicKey);
  methods[2].selector = @selector(verifyIfdCertificateChainWithEsGobJmulticardCardCwa14890Cwa14890PublicConstants:);
  methods[3].selector = @selector(getInternalAuthenticateMessageWithByteArray:withByteArray:);
  methods[4].selector = @selector(externalAuthenticationWithByteArray:);
  methods[5].selector = @selector(setKeysToAuthenticationWithByteArray:withByteArray:);
  methods[6].selector = @selector(getChallenge);
  methods[7].selector = @selector(getSerialNumber);
  methods[8].selector = @selector(getRefIccPrivateKeyWithEsGobJmulticardCardCwa14890Cwa14890PublicConstants:);
  methods[9].selector = @selector(getChrCCvIfdWithEsGobJmulticardCardCwa14890Cwa14890PublicConstants:);
  methods[10].selector = @selector(getIfdPrivateKeyWithEsGobJmulticardCardCwa14890Cwa14890PrivateConstants:);
  methods[11].selector = @selector(getIfdKeyLengthWithEsGobJmulticardCardCwa14890Cwa14890PublicConstants:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaSecurityCertCertificateException;LJavaIoIOException;", "LJavaIoIOException;", "verifyIfdCertificateChain", "LEsGobJmulticardCardCwa14890Cwa14890PublicConstants;", "LEsGobJmulticardConnectionApduConnectionException;", "getInternalAuthenticateMessage", "[B[B", "externalAuthentication", "[B", "setKeysToAuthentication", "getRefIccPrivateKey", "getChrCCvIfd", "getIfdPrivateKey", "LEsGobJmulticardCardCwa14890Cwa14890PrivateConstants;", "getIfdKeyLength" };
  static const J2ObjcClassInfo _EsGobJmulticardCardCwa14890Cwa14890Card = { "Cwa14890Card", "es.gob.jmulticard.card.cwa14890", ptrTable, methods, NULL, 7, 0x609, 12, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardCwa14890Cwa14890Card;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EsGobJmulticardCardCwa14890Cwa14890Card)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/cwa14890/Cwa14890PublicConstants.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardCardCwa14890Cwa14890PublicConstants")
#ifdef RESTRICT_EsGobJmulticardCardCwa14890Cwa14890PublicConstants
#define INCLUDE_ALL_EsGobJmulticardCardCwa14890Cwa14890PublicConstants 0
#else
#define INCLUDE_ALL_EsGobJmulticardCardCwa14890Cwa14890PublicConstants 1
#endif
#undef RESTRICT_EsGobJmulticardCardCwa14890Cwa14890PublicConstants

#if !defined (EsGobJmulticardCardCwa14890Cwa14890PublicConstants_) && (INCLUDE_ALL_EsGobJmulticardCardCwa14890Cwa14890PublicConstants || defined(INCLUDE_EsGobJmulticardCardCwa14890Cwa14890PublicConstants))
#define EsGobJmulticardCardCwa14890Cwa14890PublicConstants_

@class IOSByteArray;
@protocol JavaSecurityPublicKey;

/*!
 @brief Gestiona las constantes p&uacute;blicas para el establecimiento de canal seguro CWA-14890.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@protocol EsGobJmulticardCardCwa14890Cwa14890PublicConstants < JavaObject >

/*!
 @brief Obtiene la referencia al fichero en donde reside la clave p&uacute;blica de la autoridad
  certificadora ra&iacute;z de la jerarqu&iacute;a de certificados verificables por la tarjeta.
 @return Referencia al fichero en donde reside la clave p&uacute;blica de la autoridad certificadora
          ra&iacute;z de la jerarqu&iacute;a de certificados verificables por la tarjeta.
 */
- (IOSByteArray *)getRefCCvCaPublicKey;

/*!
 @brief Obtiene el certificado de la CA intermedia de terminal verificable por la tarjeta.
 @return Certificado de la CA intermedia de terminal verificable por la tarjeta.
 */
- (IOSByteArray *)getCCvCa;

/*!
 @brief Obtiene el identificador de la CA intermedia (CHR).
 El campo ocupa siempre 12 bytes, y si el n&uacute;mero de serie es de menor longitud se rellena
  con ceros a la izquierda. El n&uacute;mero de serie es de al menos 8 bytes.
  Aqu&iacute; se obtienen los 8 bytes del n&uacute;mero de serie obviando el resto del campo (que no se utiliza).
 @return Identificador de la CA intermedia (CHR).
 */
- (IOSByteArray *)getChrCCvCa;

/*!
 @brief Obtiene la referencia al fichero en donde reside la clave privada de componente.
 @return Referencia al fichero en donde reside la clave privada de componente.
 */
- (IOSByteArray *)getRefIccPrivateKey;

/*!
 @brief Obtiene el certificado de Terminal verificable por la tarjeta.
 @return Certificado de Terminal verificable por la tarjeta.
 */
- (IOSByteArray *)getCCvIfd;

/*!
 @brief Obtiene el identificador de la CA intermedia (CHR).El campo ocupa siempre 12 bytes y si el n&uacute;mero de serie es
  de menor longitud se rellena con ceros a la izquierda.
 El n&uacute;mero de serie es de al menos 8 bytes.
  Aqu&iacute; indicamos los 8 bytes del n&uacute;mero de serie obviando el resto del campo (que no se utiliza).
 @return Identificador de la CA intermedia (CHR).
 */
- (IOSByteArray *)getChrCCvIfd;

/*!
 @brief Obtiene la clave p&uacute;blica del certificado de componente del terminal.
 @return Clave p&uacute;blica del certificado de componente del terminal.
 */
- (id<JavaSecurityPublicKey>)getCaComponentPublicKey;

/*!
 @brief Obtiene la longitud, <u>en octetos</u>, de las claves RSA del certificado de
  componente del terminal.
 @return Longitud, <u>en octetos</u>, de las claves RSA del certificado de
          comnponente del terminal.
 */
- (jint)getIfdKeyLength;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardCardCwa14890Cwa14890PublicConstants)

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCardCwa14890Cwa14890PublicConstants)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardCardCwa14890Cwa14890PublicConstants")

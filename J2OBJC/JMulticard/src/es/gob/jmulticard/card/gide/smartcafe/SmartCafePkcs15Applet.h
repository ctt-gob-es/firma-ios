//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/gide/smartcafe/SmartCafePkcs15Applet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet")
#ifdef RESTRICT_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet
#define INCLUDE_ALL_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet 0
#else
#define INCLUDE_ALL_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet 1
#endif
#undef RESTRICT_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet

#if !defined (EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet_) && (INCLUDE_ALL_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet || defined(INCLUDE_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet))
#define EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet_

#define RESTRICT_EsGobJmulticardCardIso7816fourAbstractIso7816FourCard 1
#define INCLUDE_EsGobJmulticardCardIso7816fourAbstractIso7816FourCard 1
#include "es/gob/jmulticard/card/iso7816four/AbstractIso7816FourCard.h"

#define RESTRICT_EsGobJmulticardCardCryptoCard 1
#define INCLUDE_EsGobJmulticardCardCryptoCard 1
#include "es/gob/jmulticard/card/CryptoCard.h"

@class EsGobJmulticardCryptoHelper;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaSecurityCertX509Certificate;
@class JavaxSecurityAuthCallbackPasswordCallback;
@protocol EsGobJmulticardCardPrivateKeyReference;
@protocol EsGobJmulticardConnectionApduConnection;
@protocol JavaxSecurityAuthCallbackCallbackHandler;

/*!
 @brief Tarjeta G&amp;D SmartCafe con Applet PKCS#15.
 @author Vicente Ortiz
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet : EsGobJmulticardCardIso7816fourAbstractIso7816FourCard < EsGobJmulticardCardCryptoCard >

#pragma mark Public

/*!
 @brief Construye un objeto que representa una tarjeta G&amp;D SmartCafe con el
  Applet PKCS#15 de AET.
 @param conn Conexi &oacute; n con la tarjeta.
 @param cryptoHlpr Funcionalidades criptogr &aacute; ficas de utilidad que                    pueden variar entre m &aacute; quinas virtuales.
 @throw IOExceptionSi hay errores de entrada / salida.
 */
- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHlpr;

/*!
 @brief Conecta con el lector del sistema que tenga una tarjeta insertada.
 @param conn Conexi &oacute; n hacia la tarjeta.
 @throw IOExceptionCuando hay errores de entrada / salida.
 */
+ (void)connectWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn;

- (IOSObjectArray *)getAliases;

- (NSString *)getCardName;

- (JavaSecurityCertX509Certificate *)getCertificateWithNSString:(NSString *)alias;

- (id<EsGobJmulticardCardPrivateKeyReference>)getPrivateKeyWithNSString:(NSString *)alias;

/*!
 @brief Selecciona un fichero (DF o EF).
 @param id_ Identificador del fichero a seleccionar.
 @return Tama&ntilde;o del fichero seleccionado.
 @throw ApduConnectionExceptionSi hay problemas en el env&iacute;o de la APDU.
 @throw Iso7816FourCardExceptionSi falla la selecci&oacute;n de fichero.
 */
- (jint)selectFileByIdWithByteArray:(IOSByteArray *)id_;

/*!
 @brief Establece el <code>CallbackHandler</code>.
 @param callh <code> CallbackHandler </code>  a establecer.
 */
- (void)setCallbackHandlerWithJavaxSecurityAuthCallbackCallbackHandler:(id<JavaxSecurityAuthCallbackCallbackHandler>)callh;

/*!
 @brief Establece el <code>PasswordCallback</code> para el PIN de la tarjeta.
 @param pwc <code> PasswordCallback </code>  para el PIN de la tarjeta.
 */
- (void)setPasswordCallbackWithJavaxSecurityAuthCallbackPasswordCallback:(JavaxSecurityAuthCallbackPasswordCallback *)pwc;

- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)algorithm
withEsGobJmulticardCardPrivateKeyReference:(id<EsGobJmulticardCardPrivateKeyReference>)keyRef;

- (NSString *)description;

- (void)verifyPinWithJavaxSecurityAuthCallbackPasswordCallback:(JavaxSecurityAuthCallbackPasswordCallback *)psc;

#pragma mark Protected

- (void)selectMasterFile;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithByte:(jbyte)arg0
withEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet)

FOUNDATION_EXPORT void EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_(EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet *self, id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *cryptoHlpr);

FOUNDATION_EXPORT EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet *new_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_(id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *cryptoHlpr) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet *create_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_(id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *cryptoHlpr);

FOUNDATION_EXPORT void EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet_connectWithEsGobJmulticardConnectionApduConnection_(id<EsGobJmulticardConnectionApduConnection> conn);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardCardGideSmartcafeSmartCafePkcs15Applet")

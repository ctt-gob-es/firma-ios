//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/BadPinException.java
//

#include "J2ObjC_source.h"
#include "es/gob/jmulticard/card/BadPinException.h"
#include "es/gob/jmulticard/card/PinException.h"
#include "java/lang/Integer.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/BadPinException must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardBadPinException () {
 @public
  /*!
   @brief N&uacute;mero de intentos de introducci&oacute;n de PIN que quedan tras
  producirse este error.
   */
  jint retries_;
}

@end

/*!
 @brief Identificador de versi&oacute;n para la serializaci&oacute;n.
 */
inline jlong EsGobJmulticardCardBadPinException_get_serialVersionUID(void);
#define EsGobJmulticardCardBadPinException_serialVersionUID 9827614003517666LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardCardBadPinException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/BadPinException.java"


#line 5
@implementation EsGobJmulticardCardBadPinException


#line 16
- (instancetype)initWithInt:(jint)retriesLeft {
  EsGobJmulticardCardBadPinException_initWithInt_(self, retriesLeft);
  return self;
}


#line 23
- (instancetype)initWithNSString:(NSString *)msg {
  EsGobJmulticardCardBadPinException_initWithNSString_(self, msg);
  return self;
}


#line 31
- (jint)getRemainingRetries {
  return retries_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(getRemainingRetries);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobJmulticardCardBadPinException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "retries_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LNSString;" };
  static const J2ObjcClassInfo _EsGobJmulticardCardBadPinException = { "BadPinException", "es.gob.jmulticard.card", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardBadPinException;
}

@end


#line 16
void EsGobJmulticardCardBadPinException_initWithInt_(EsGobJmulticardCardBadPinException *self, jint retriesLeft) {
  EsGobJmulticardCardPinException_initWithNSString_(self, JreStrcat("$$", @"PIN incorrecto, intentos restantes: ", JavaLangInteger_toStringWithInt_(retriesLeft)));
  self->retries_ = retriesLeft;
}


#line 16
EsGobJmulticardCardBadPinException *new_EsGobJmulticardCardBadPinException_initWithInt_(jint retriesLeft) {
  J2OBJC_NEW_IMPL(EsGobJmulticardCardBadPinException, initWithInt_, retriesLeft)
}


#line 16
EsGobJmulticardCardBadPinException *create_EsGobJmulticardCardBadPinException_initWithInt_(jint retriesLeft) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardCardBadPinException, initWithInt_, retriesLeft)
}


#line 23
void EsGobJmulticardCardBadPinException_initWithNSString_(EsGobJmulticardCardBadPinException *self, NSString *msg) {
  EsGobJmulticardCardPinException_initWithNSString_(self, msg);
  self->retries_ = -1;
}


#line 23
EsGobJmulticardCardBadPinException *new_EsGobJmulticardCardBadPinException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(EsGobJmulticardCardBadPinException, initWithNSString_, msg)
}


#line 23
EsGobJmulticardCardBadPinException *create_EsGobJmulticardCardBadPinException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardCardBadPinException, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardCardBadPinException)

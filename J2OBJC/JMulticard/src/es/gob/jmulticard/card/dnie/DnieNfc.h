//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/dnie/DnieNfc.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardCardDnieDnieNfc")
#ifdef RESTRICT_EsGobJmulticardCardDnieDnieNfc
#define INCLUDE_ALL_EsGobJmulticardCardDnieDnieNfc 0
#else
#define INCLUDE_ALL_EsGobJmulticardCardDnieDnieNfc 1
#endif
#undef RESTRICT_EsGobJmulticardCardDnieDnieNfc

#if !defined (EsGobJmulticardCardDnieDnieNfc_) && (INCLUDE_ALL_EsGobJmulticardCardDnieDnieNfc || defined(INCLUDE_EsGobJmulticardCardDnieDnieNfc))
#define EsGobJmulticardCardDnieDnieNfc_

#define RESTRICT_EsGobJmulticardCardDnieDnie3 1
#define INCLUDE_EsGobJmulticardCardDnieDnie3 1
#include "es/gob/jmulticard/card/dnie/Dnie3.h"

@class EsGobJmulticardCryptoHelper;
@class IOSByteArray;
@class JavaxSecurityAuthCallbackPasswordCallback;
@protocol EsGobJmulticardCardPrivateKeyReference;
@protocol EsGobJmulticardConnectionApduConnection;
@protocol JavaxSecurityAuthCallbackCallbackHandler;

/*!
 @brief DNIe 3 accedido mediante PACE por NFC.
 @author Sergio Mart&iacute;nez Rico
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s
 @author Ignacio Mar&iacute;n.
 */
@interface EsGobJmulticardCardDnieDnieNfc : EsGobJmulticardCardDnieDnie3

#pragma mark Public

/*!
 @brief Construte un DNIe 3 accedido mediante PACE por NFC.
 @param conn Conexi &oacute; n NFC.
 @param pwc <code> PasswordCallback </code>  para obtener el PIN.
 @param cryptoHlpr Clase de utiildades criptogr &aacute; ficas.
 @param ch <code> CallbackHandler </code>  para obtener el PIN y el CAN o la MRZ.
 @throw IcaoExceptionSi no se puede establecer en canal PACE.
 @throw ApduConnectionExceptionSi hay problemas en el env&iacute;o de las APDU.
 */
- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn
                  withJavaxSecurityAuthCallbackPasswordCallback:(JavaxSecurityAuthCallbackPasswordCallback *)pwc
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHlpr
                   withJavaxSecurityAuthCallbackCallbackHandler:(id<JavaxSecurityAuthCallbackCallbackHandler>)ch;

- (NSString *)getCardName;

- (void)openSecureChannelIfNotAlreadyOpened;

- (void)openSecureChannelIfNotAlreadyOpenedWithBoolean:(jboolean)doChv;

- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)signAlgorithm
withEsGobJmulticardCardPrivateKeyReference:(id<EsGobJmulticardCardPrivateKeyReference>)privateKeyReference;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardCardDnieDnieNfc)

FOUNDATION_EXPORT void EsGobJmulticardCardDnieDnieNfc_initWithEsGobJmulticardConnectionApduConnection_withJavaxSecurityAuthCallbackPasswordCallback_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(EsGobJmulticardCardDnieDnieNfc *self, id<EsGobJmulticardConnectionApduConnection> conn, JavaxSecurityAuthCallbackPasswordCallback *pwc, EsGobJmulticardCryptoHelper *cryptoHlpr, id<JavaxSecurityAuthCallbackCallbackHandler> ch);

FOUNDATION_EXPORT EsGobJmulticardCardDnieDnieNfc *new_EsGobJmulticardCardDnieDnieNfc_initWithEsGobJmulticardConnectionApduConnection_withJavaxSecurityAuthCallbackPasswordCallback_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(id<EsGobJmulticardConnectionApduConnection> conn, JavaxSecurityAuthCallbackPasswordCallback *pwc, EsGobJmulticardCryptoHelper *cryptoHlpr, id<JavaxSecurityAuthCallbackCallbackHandler> ch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardCardDnieDnieNfc *create_EsGobJmulticardCardDnieDnieNfc_initWithEsGobJmulticardConnectionApduConnection_withJavaxSecurityAuthCallbackPasswordCallback_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(id<EsGobJmulticardConnectionApduConnection> conn, JavaxSecurityAuthCallbackPasswordCallback *pwc, EsGobJmulticardCryptoHelper *cryptoHlpr, id<JavaxSecurityAuthCallbackCallbackHandler> ch);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCardDnieDnieNfc)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardCardDnieDnieNfc")

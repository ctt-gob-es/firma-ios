//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/dnie/DniePrivateKeyReference.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/card/CryptoCard.h"
#include "es/gob/jmulticard/card/Location.h"
#include "es/gob/jmulticard/card/dnie/DniePrivateKeyReference.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/dnie/DniePrivateKeyReference must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardDnieDniePrivateKeyReference () {
 @public
  id<EsGobJmulticardCardCryptoCard> dnieCard_;
  IOSByteArray *identifier_;
  EsGobJmulticardCardLocation *keyPath_;
  NSString *label_;
  jbyte reference_;
  jint keySize_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardCardDnieDniePrivateKeyReference, dnieCard_, id<EsGobJmulticardCardCryptoCard>)
J2OBJC_FIELD_SETTER(EsGobJmulticardCardDnieDniePrivateKeyReference, identifier_, IOSByteArray *)
J2OBJC_FIELD_SETTER(EsGobJmulticardCardDnieDniePrivateKeyReference, keyPath_, EsGobJmulticardCardLocation *)
J2OBJC_FIELD_SETTER(EsGobJmulticardCardDnieDniePrivateKeyReference, label_, NSString *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/dnie/DniePrivateKeyReference.java"


#line 50
@implementation EsGobJmulticardCardDnieDniePrivateKeyReference


#line 66
- (instancetype)initWithEsGobJmulticardCardCryptoCard:(id<EsGobJmulticardCardCryptoCard>)card
                                        withByteArray:(IOSByteArray *)id_
                      withEsGobJmulticardCardLocation:(EsGobJmulticardCardLocation *)path
                                         withNSString:(NSString *)lbl
                                             withByte:(jbyte)ref
                                              withInt:(jint)keyLength {
  EsGobJmulticardCardDnieDniePrivateKeyReference_initWithEsGobJmulticardCardCryptoCard_withByteArray_withEsGobJmulticardCardLocation_withNSString_withByte_withInt_(self, card, id_, path, lbl, ref, keyLength);
  return self;
}


#line 80
- (NSString *)description {
  
#line 82
  return JreStrcat("$$$$$@C", @"Clave privada de DNIe con etiqueta '", label_, @"', identificador '", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_(
#line 83
  identifier_, false), @"' y ruta '",
#line 84
  keyPath_, '\'');
}


#line 89
- (id<EsGobJmulticardCardCryptoCard>)getDnieCard {
  return dnieCard_;
}


#line 95
- (IOSByteArray *)getIdentifier {
  return identifier_;
}


#line 101
- (EsGobJmulticardCardLocation *)getKeyPath {
  return keyPath_;
}


#line 107
- (NSString *)getLabel {
  return label_;
}


#line 113
- (jbyte)getKeyReference {
  return reference_;
}


#line 119
- (jint)getKeyBitSize {
  return keySize_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardCardCryptoCard;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardCardLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithEsGobJmulticardCardCryptoCard:withByteArray:withEsGobJmulticardCardLocation:withNSString:withByte:withInt:);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(getDnieCard);
  methods[3].selector = @selector(getIdentifier);
  methods[4].selector = @selector(getKeyPath);
  methods[5].selector = @selector(getLabel);
  methods[6].selector = @selector(getKeyReference);
  methods[7].selector = @selector(getKeyBitSize);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dnieCard_", "LEsGobJmulticardCardCryptoCard;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "identifier_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keyPath_", "LEsGobJmulticardCardLocation;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "label_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reference_", "B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keySize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardCardCryptoCard;[BLEsGobJmulticardCardLocation;LNSString;BI", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardCardDnieDniePrivateKeyReference = { "DniePrivateKeyReference", "es.gob.jmulticard.card.dnie", ptrTable, methods, fields, 7, 0x11, 8, 6, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardDnieDniePrivateKeyReference;
}

@end


#line 66
void EsGobJmulticardCardDnieDniePrivateKeyReference_initWithEsGobJmulticardCardCryptoCard_withByteArray_withEsGobJmulticardCardLocation_withNSString_withByte_withInt_(EsGobJmulticardCardDnieDniePrivateKeyReference *self, id<EsGobJmulticardCardCryptoCard> card, IOSByteArray *id_, EsGobJmulticardCardLocation *path, NSString *lbl, jbyte ref, jint keyLength) {
  NSObject_init(self);
  
#line 72
  self->dnieCard_ = card;
  self->identifier_ = id_ != nil ? [id_ java_clone] : nil;
  self->keyPath_ = path;
  self->label_ = lbl;
  self->reference_ = ref;
  self->keySize_ = keyLength;
}


#line 66
EsGobJmulticardCardDnieDniePrivateKeyReference *new_EsGobJmulticardCardDnieDniePrivateKeyReference_initWithEsGobJmulticardCardCryptoCard_withByteArray_withEsGobJmulticardCardLocation_withNSString_withByte_withInt_(id<EsGobJmulticardCardCryptoCard> card, IOSByteArray *id_, EsGobJmulticardCardLocation *path, NSString *lbl, jbyte ref, jint keyLength) {
  J2OBJC_NEW_IMPL(EsGobJmulticardCardDnieDniePrivateKeyReference, initWithEsGobJmulticardCardCryptoCard_withByteArray_withEsGobJmulticardCardLocation_withNSString_withByte_withInt_, card, id_, path, lbl, ref, keyLength)
}


#line 66
EsGobJmulticardCardDnieDniePrivateKeyReference *create_EsGobJmulticardCardDnieDniePrivateKeyReference_initWithEsGobJmulticardCardCryptoCard_withByteArray_withEsGobJmulticardCardLocation_withNSString_withByte_withInt_(id<EsGobJmulticardCardCryptoCard> card, IOSByteArray *id_, EsGobJmulticardCardLocation *path, NSString *lbl, jbyte ref, jint keyLength) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardCardDnieDniePrivateKeyReference, initWithEsGobJmulticardCardCryptoCard_withByteArray_withEsGobJmulticardCardLocation_withNSString_withByte_withInt_, card, id_, path, lbl, ref, keyLength)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardCardDnieDniePrivateKeyReference)

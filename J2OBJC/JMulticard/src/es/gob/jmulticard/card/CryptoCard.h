//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/CryptoCard.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardCardCryptoCard")
#ifdef RESTRICT_EsGobJmulticardCardCryptoCard
#define INCLUDE_ALL_EsGobJmulticardCardCryptoCard 0
#else
#define INCLUDE_ALL_EsGobJmulticardCardCryptoCard 1
#endif
#undef RESTRICT_EsGobJmulticardCardCryptoCard

#if !defined (EsGobJmulticardCardCryptoCard_) && (INCLUDE_ALL_EsGobJmulticardCardCryptoCard || defined(INCLUDE_EsGobJmulticardCardCryptoCard))
#define EsGobJmulticardCardCryptoCard_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaSecurityCertX509Certificate;
@protocol EsGobJmulticardCardPrivateKeyReference;

/*!
 @brief Operaciones comunes a todas las tarjetas criptogr&aacute;ficas.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@protocol EsGobJmulticardCardCryptoCard < JavaObject >

/*!
 @brief Obtiene los alias de los certificados de la tarjeta.
 @return Array con los alias de los certificados de la tarjeta
 @throw CryptoCardExceptionSi ocurre alg&uacute;n problema al recuperar los alias.
 */
- (IOSObjectArray *)getAliases;

/*!
 @brief Obtiene el certificado correspondiente al alias proporcionado.
 @param alias Alias del certificado.
 @return Certificado correspondiente al alias proporcionado o <code>null</code> si no
          existe ning&uacute;n certificado con ese alias.
 @throw CryptoCardExceptionSi ocurre alg&uacute;n problema al recuperar el certificado.
 @throw PinExceptionSi el PIN proporcionado es incorrecto.
 @throw AuthenticationModeLockedExceptionCuando la tarjeta est&aacute; bloqueada.
 */
- (JavaSecurityCertX509Certificate *)getCertificateWithNSString:(NSString *)alias;

/*!
 @brief Obtiene una referencia a la clave privada correspondiente al alias proporcionado.
 @param alias Alias del certificado
 @return Referencia a la clave privada correspondiente al alias proporcionado o
  		   <code>null</code> si no existe ninguna clave privada con ese alias
 @throw CryptoCardExceptionSi ocurre alg&uacute;n problema al recuperar la clave privada.
 */
- (id<EsGobJmulticardCardPrivateKeyReference>)getPrivateKeyWithNSString:(NSString *)alias;

/*!
 @brief Realiza una firma electr&oacute;nica.
 @param data Datos a firmar.
 @param algorithm Algoritmo de firma.
 @param keyRef Referencia a la clave privada de firma.
 @return Datos firmados (en el algoritmo y formato que determine la tarjeta).
 @throw AuthenticationModeLockedExceptionCuando la tarjeta est&aacute; bloqueada.
 @throw CryptoCardExceptionSi ocurre alg&uacute;n problema durante la firma.
 @throw PinExceptionSi el PIN proporcionado es incorrecto o no es posible obtenerlo.
 */
- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)algorithm
withEsGobJmulticardCardPrivateKeyReference:(id<EsGobJmulticardCardPrivateKeyReference>)keyRef;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardCardCryptoCard)

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCardCryptoCard)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardCardCryptoCard")

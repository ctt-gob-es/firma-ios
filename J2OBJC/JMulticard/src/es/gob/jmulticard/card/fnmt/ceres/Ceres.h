//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/fnmt/ceres/Ceres.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardCardFnmtCeresCeres")
#ifdef RESTRICT_EsGobJmulticardCardFnmtCeresCeres
#define INCLUDE_ALL_EsGobJmulticardCardFnmtCeresCeres 0
#else
#define INCLUDE_ALL_EsGobJmulticardCardFnmtCeresCeres 1
#endif
#undef RESTRICT_EsGobJmulticardCardFnmtCeresCeres

#if !defined (EsGobJmulticardCardFnmtCeresCeres_) && (INCLUDE_ALL_EsGobJmulticardCardFnmtCeresCeres || defined(INCLUDE_EsGobJmulticardCardFnmtCeresCeres))
#define EsGobJmulticardCardFnmtCeresCeres_

#define RESTRICT_EsGobJmulticardCardIso7816eightAbstractIso7816EightCard 1
#define INCLUDE_EsGobJmulticardCardIso7816eightAbstractIso7816EightCard 1
#include "es/gob/jmulticard/card/iso7816eight/AbstractIso7816EightCard.h"

#define RESTRICT_EsGobJmulticardCardCryptoCard 1
#define INCLUDE_EsGobJmulticardCardCryptoCard 1
#include "es/gob/jmulticard/card/CryptoCard.h"

@class EsGobJmulticardCryptoHelper;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaSecurityCertX509Certificate;
@class JavaxSecurityAuthCallbackPasswordCallback;
@protocol EsGobJmulticardCardPrivateKeyReference;
@protocol EsGobJmulticardConnectionApduConnection;
@protocol JavaxSecurityAuthCallbackCallbackHandler;

/*!
 @brief Tarjeta FNMT-RCM CERES.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s
 */
@interface EsGobJmulticardCardFnmtCeresCeres : EsGobJmulticardCardIso7816eightAbstractIso7816EightCard < EsGobJmulticardCardCryptoCard >

#pragma mark Public

/*!
 @brief Construye una clase que representa una tarjeta FNMT-RCM CERES.
 @param conn Conexi &oacute; n con la tarjeta.
 @param ch Clase para la realizaci &oacute; n de las huellas digitales del  <i> DigestInfo </i> .
 @throw ApduConnectionExceptionSi hay problemas con la conexi&oacute;n proporcionada.
 @throw InvalidCardExceptionSi la tarjeta conectada no es una FNMT-RCM CERES.
 */
- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)ch;

/*!
 @brief Inicia la conexi&oacute;n con la tarjeta CERES.
 @param conn Conexi &oacute; n con el lector de tarjetas.
 @throw ApduConnectionExceptionSi ocurren errores de conexi&oacute;n.
 @throw InvalidCardExceptionSi la tarjeta encontrada en el lector no es una tarjeta FNMT-RCM-CERES.
 */
+ (void)connectWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn;

- (IOSObjectArray *)getAliases;

/*!
 @brief Obtiene el <code>CallbackHandler</code>.
 @return <code>CallbackHandler</code>.
 */
- (id<JavaxSecurityAuthCallbackCallbackHandler>)getCallbackHandler;

- (NSString *)getCardName;

- (JavaSecurityCertX509Certificate *)getCertificateWithNSString:(NSString *)alias;

- (id<EsGobJmulticardCardPrivateKeyReference>)getPrivateKeyWithNSString:(NSString *)alias;

/*!
 @brief Define el <code>CallbackHandler</code>.
 @param callh <code> CallbackHandler </code>  a definir.
 */
- (void)setCallbackHandlerWithJavaxSecurityAuthCallbackCallbackHandler:(id<JavaxSecurityAuthCallbackCallbackHandler>)callh;

/*!
 @brief Establece el <code>PasswordCallback</code> para el PIN de la tarjeta.
 @param pwc <code> PasswordCallback </code>  para el PIN de la tarjeta.
 */
- (void)setPasswordCallbackWithJavaxSecurityAuthCallbackPasswordCallback:(JavaxSecurityAuthCallbackPasswordCallback *)pwc;

- (IOSByteArray *)signWithByteArray:(IOSByteArray *)data
                       withNSString:(NSString *)algorithm
withEsGobJmulticardCardPrivateKeyReference:(id<EsGobJmulticardCardPrivateKeyReference>)keyRef;

- (void)verifyPinWithJavaxSecurityAuthCallbackPasswordCallback:(JavaxSecurityAuthCallbackPasswordCallback *)pinPc;

#pragma mark Protected

/*!
 @brief Obtiene la <code>PasswordCallback</code> predefinida.
 @return <code>PasswordCallback</code> predefinida.
 @throw PinExceptionSi no se puede obtener el PIN del <code>CallbackHandler</code>.
 */
- (JavaxSecurityAuthCallbackPasswordCallback *)getInternalPasswordCallback;

- (void)selectMasterFile;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithByte:(jbyte)arg0
withEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(EsGobJmulticardCardFnmtCeresCeres)

FOUNDATION_EXPORT void EsGobJmulticardCardFnmtCeresCeres_connectWithEsGobJmulticardConnectionApduConnection_(id<EsGobJmulticardConnectionApduConnection> conn);

FOUNDATION_EXPORT void EsGobJmulticardCardFnmtCeresCeres_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_(EsGobJmulticardCardFnmtCeresCeres *self, id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *ch);

FOUNDATION_EXPORT EsGobJmulticardCardFnmtCeresCeres *new_EsGobJmulticardCardFnmtCeresCeres_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_(id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *ch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardCardFnmtCeresCeres *create_EsGobJmulticardCardFnmtCeresCeres_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_(id<EsGobJmulticardConnectionApduConnection> conn, EsGobJmulticardCryptoHelper *ch);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCardFnmtCeresCeres)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardCardFnmtCeresCeres")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/CryptoCard.java
//

#include "J2ObjC_source.h"
#include "es/gob/jmulticard/card/CryptoCard.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/card/CryptoCard must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardCardCryptoCard : NSObject

@end

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/card/CryptoCard.java"


#line 46
@implementation EsGobJmulticardCardCryptoCard

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LNSString;", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaSecurityCertX509Certificate;", 0x401, 1, 2, 3, -1, -1, -1 },
    { NULL, "LEsGobJmulticardCardPrivateKeyReference;", 0x401, 4, 2, 0, -1, -1, -1 },
    { NULL, "[B", 0x401, 5, 6, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getAliases);
  methods[1].selector = @selector(getCertificateWithNSString:);
  methods[2].selector = @selector(getPrivateKeyWithNSString:);
  methods[3].selector = @selector(signWithByteArray:withNSString:withEsGobJmulticardCardPrivateKeyReference:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LEsGobJmulticardCardCryptoCardException;", "getCertificate", "LNSString;", "LEsGobJmulticardCardCryptoCardException;LEsGobJmulticardCardPinException;", "getPrivateKey", "sign", "[BLNSString;LEsGobJmulticardCardPrivateKeyReference;" };
  static const J2ObjcClassInfo _EsGobJmulticardCardCryptoCard = { "CryptoCard", "es.gob.jmulticard.card", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardCardCryptoCard;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EsGobJmulticardCardCryptoCard)

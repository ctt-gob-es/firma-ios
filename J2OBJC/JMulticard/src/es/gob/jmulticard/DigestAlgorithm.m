//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/DigestAlgorithm.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/DigestAlgorithm.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/DigestAlgorithm must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardDigestAlgorithm () {
 @public
  /*!
   @brief Nombre del algoritmo de huella digital.
   */
  NSString *name_DigestAlgorithm_;
  /*!
   @brief Longitud (en octetos) de las huellas resultantes con este algoritmo.
   La longitud se proporciona est&aacute;ticamente para no introducir aqu&iacute;
  dependencias con proveedores de seguridad de Java o con BouncyCastle.
   */
  jint length_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardDigestAlgorithm, name_DigestAlgorithm_, NSString *)

__attribute__((unused)) static void EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(EsGobJmulticardDigestAlgorithm *self, NSString *n, jint l, NSString *__name, jint __ordinal);

__attribute__((unused)) static EsGobJmulticardDigestAlgorithm *new_EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(NSString *n, jint l, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/DigestAlgorithm.java"

J2OBJC_INITIALIZED_DEFN(EsGobJmulticardDigestAlgorithm)

EsGobJmulticardDigestAlgorithm *EsGobJmulticardDigestAlgorithm_values_[4];


#line 5
@implementation EsGobJmulticardDigestAlgorithm


#line 35
- (NSString *)description {
  
#line 37
  return name_DigestAlgorithm_;
}


#line 42
- (jint)getDigestLength {
  return length_;
}


#line 49
+ (EsGobJmulticardDigestAlgorithm *)getDigestAlgorithmWithNSString:(NSString *)name {
  return EsGobJmulticardDigestAlgorithm_getDigestAlgorithmWithNSString_(name);
}

+ (IOSObjectArray *)values {
  return EsGobJmulticardDigestAlgorithm_values();
}

+ (EsGobJmulticardDigestAlgorithm *)valueOfWithNSString:(NSString *)name {
  return EsGobJmulticardDigestAlgorithm_valueOfWithNSString_(name);
}

- (EsGobJmulticardDigestAlgorithm_Enum)toNSEnum {
  return (EsGobJmulticardDigestAlgorithm_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardDigestAlgorithm;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "[LEsGobJmulticardDigestAlgorithm;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardDigestAlgorithm;", 0x9, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  methods[1].selector = @selector(getDigestLength);
  methods[2].selector = @selector(getDigestAlgorithmWithNSString:);
  methods[3].selector = @selector(values);
  methods[4].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SHA1", "LEsGobJmulticardDigestAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "SHA256", "LEsGobJmulticardDigestAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "SHA384", "LEsGobJmulticardDigestAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "SHA512", "LEsGobJmulticardDigestAlgorithm;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "name_DigestAlgorithm_", "LNSString;", .constantValue.asLong = 0, 0x12, 8, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "getDigestAlgorithm", "LNSString;", "valueOf", &JreEnum(EsGobJmulticardDigestAlgorithm, SHA1), &JreEnum(EsGobJmulticardDigestAlgorithm, SHA256), &JreEnum(EsGobJmulticardDigestAlgorithm, SHA384), &JreEnum(EsGobJmulticardDigestAlgorithm, SHA512), "name", "Ljava/lang/Enum<Les/gob/jmulticard/DigestAlgorithm;>;" };
  static const J2ObjcClassInfo _EsGobJmulticardDigestAlgorithm = { "DigestAlgorithm", "es.gob.jmulticard", ptrTable, methods, fields, 7, 0x4011, 5, 6, -1, -1, -1, 9, -1 };
  return &_EsGobJmulticardDigestAlgorithm;
}

+ (void)initialize {
  if (self == [EsGobJmulticardDigestAlgorithm class]) {
    JreEnum(EsGobJmulticardDigestAlgorithm, SHA1) = new_EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(
#line 8
    @"SHA1", 20, JreEnumConstantName(EsGobJmulticardDigestAlgorithm_class_(), 0), 0);
    JreEnum(EsGobJmulticardDigestAlgorithm, SHA256) = new_EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(
#line 11
    @"SHA-256", 32, JreEnumConstantName(EsGobJmulticardDigestAlgorithm_class_(), 1), 1);
    JreEnum(EsGobJmulticardDigestAlgorithm, SHA384) = new_EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(
#line 14
    @"SHA-384", 48, JreEnumConstantName(EsGobJmulticardDigestAlgorithm_class_(), 2), 2);
    JreEnum(EsGobJmulticardDigestAlgorithm, SHA512) = new_EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(
#line 17
    @"SHA-512", 64, JreEnumConstantName(EsGobJmulticardDigestAlgorithm_class_(), 3), 3);
    J2OBJC_SET_INITIALIZED(EsGobJmulticardDigestAlgorithm)
  }
}

@end


#line 30
void EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(EsGobJmulticardDigestAlgorithm *self, NSString *n, jint l, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  
#line 31
  self->name_DigestAlgorithm_ = n;
  self->length_ = l;
}


#line 30
EsGobJmulticardDigestAlgorithm *new_EsGobJmulticardDigestAlgorithm_initWithNSString_withInt_withNSString_withInt_(NSString *n, jint l, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(EsGobJmulticardDigestAlgorithm, initWithNSString_withInt_withNSString_withInt_, n, l, __name, __ordinal)
}


#line 49
EsGobJmulticardDigestAlgorithm *EsGobJmulticardDigestAlgorithm_getDigestAlgorithmWithNSString_(NSString *name) {
  EsGobJmulticardDigestAlgorithm_initialize();
  
#line 50
  if ([@"SHA1" isEqual:name] || [@"SHA-1" isEqual:name]) {
    return JreEnum(EsGobJmulticardDigestAlgorithm, SHA1);
  }
  if ([@"SHA256" isEqual:name] || [@"SHA-256" isEqual:name]) {
    return JreEnum(EsGobJmulticardDigestAlgorithm, SHA256);
  }
  if ([@"SHA384" isEqual:name] || [@"SHA-384" isEqual:name]) {
    return JreEnum(EsGobJmulticardDigestAlgorithm, SHA384);
  }
  if ([@"SHA512" isEqual:name] || [@"SHA-512" isEqual:name]) {
    return JreEnum(EsGobJmulticardDigestAlgorithm, SHA512);
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Algoritmo de huella no soportado: ", name));
}

IOSObjectArray *EsGobJmulticardDigestAlgorithm_values() {
  EsGobJmulticardDigestAlgorithm_initialize();
  return [IOSObjectArray arrayWithObjects:EsGobJmulticardDigestAlgorithm_values_ count:4 type:EsGobJmulticardDigestAlgorithm_class_()];
}

EsGobJmulticardDigestAlgorithm *EsGobJmulticardDigestAlgorithm_valueOfWithNSString_(NSString *name) {
  EsGobJmulticardDigestAlgorithm_initialize();
  for (int i = 0; i < 4; i++) {
    EsGobJmulticardDigestAlgorithm *e = EsGobJmulticardDigestAlgorithm_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

EsGobJmulticardDigestAlgorithm *EsGobJmulticardDigestAlgorithm_fromOrdinal(NSUInteger ordinal) {
  EsGobJmulticardDigestAlgorithm_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return EsGobJmulticardDigestAlgorithm_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardDigestAlgorithm)

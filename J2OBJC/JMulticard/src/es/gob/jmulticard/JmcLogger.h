//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/JmcLogger.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardJmcLogger")
#ifdef RESTRICT_EsGobJmulticardJmcLogger
#define INCLUDE_ALL_EsGobJmulticardJmcLogger 0
#else
#define INCLUDE_ALL_EsGobJmulticardJmcLogger 1
#endif
#undef RESTRICT_EsGobJmulticardJmcLogger

#if !defined (EsGobJmulticardJmcLogger_) && (INCLUDE_ALL_EsGobJmulticardJmcLogger || defined(INCLUDE_EsGobJmulticardJmcLogger))
#define EsGobJmulticardJmcLogger_

@class JavaLangThrowable;
@class JavaUtilLoggingLevel;

/*!
 @brief <i>Logger</i> centralizado de toda la biblioteca.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardJmcLogger : NSObject

#pragma mark Public

/*!
 @brief Registra un mensaje de depuraci&oacute;n.
 @param className_ Nombre de la clase desde la que se llama.
 @param methodName Nombre del m &eacute; todo desde el que se llama.
 @param msg Mensaje de depuraci &oacute; n.
 */
+ (void)debugWithNSString:(NSString *)className_
             withNSString:(NSString *)methodName
             withNSString:(NSString *)msg;

/*!
 @brief Registra un mensaje de informaci&oacute;n.
 @param className_ Nombre de la clase desde la que se llama.
 @param methodName Nombre del m &eacute; todo desde el que se llama.
 @param msg Mensaje de informaci &oacute; n.
 */
+ (void)infoWithNSString:(NSString *)className_
            withNSString:(NSString *)methodName
            withNSString:(NSString *)msg;

/*!
 @brief Registra un mensaje.
 @param className_ Nombre de la clase desde la que se llama.
 @param methodName Nombre del m &eacute; todo desde el que se llama.
 @param level Tipo de mensaje.
 @param msg Mensaje.
 @param e Excepci &oacute; n asociada al mensaje.
 */
+ (void)logWithNSString:(NSString *)className_
           withNSString:(NSString *)methodName
withJavaUtilLoggingLevel:(JavaUtilLoggingLevel *)level
           withNSString:(NSString *)msg
  withJavaLangThrowable:(JavaLangThrowable *)e;

/*!
 @brief Registra un mensaje de error.
 @param msg Mensaje de error.
 */
+ (void)severeWithNSString:(NSString *)msg;

/*!
 @brief Registra un mensaje de advertencia.
 @param msg Mensaje de advertencia.
 */
+ (void)warningWithNSString:(NSString *)msg;

@end

J2OBJC_STATIC_INIT(EsGobJmulticardJmcLogger)

FOUNDATION_EXPORT void EsGobJmulticardJmcLogger_warningWithNSString_(NSString *msg);

FOUNDATION_EXPORT void EsGobJmulticardJmcLogger_severeWithNSString_(NSString *msg);

FOUNDATION_EXPORT void EsGobJmulticardJmcLogger_infoWithNSString_withNSString_withNSString_(NSString *className_, NSString *methodName, NSString *msg);

FOUNDATION_EXPORT void EsGobJmulticardJmcLogger_debugWithNSString_withNSString_withNSString_(NSString *className_, NSString *methodName, NSString *msg);

FOUNDATION_EXPORT void EsGobJmulticardJmcLogger_logWithNSString_withNSString_withJavaUtilLoggingLevel_withNSString_withJavaLangThrowable_(NSString *className_, NSString *methodName, JavaUtilLoggingLevel *level, NSString *msg, JavaLangThrowable *e);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardJmcLogger)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardJmcLogger")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/dnie/VerifyApduCommand.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/apdu/CommandApdu.h"
#include "es/gob/jmulticard/apdu/dnie/VerifyApduCommand.h"
#include "java/lang/IllegalArgumentException.h"
#include "javax/security/auth/callback/PasswordCallback.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/apdu/dnie/VerifyApduCommand must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardApduDnieVerifyApduCommand () {
 @public
  JavaxSecurityAuthCallbackPasswordCallback *pwc_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardApduDnieVerifyApduCommand, pwc_, JavaxSecurityAuthCallbackPasswordCallback *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/dnie/VerifyApduCommand.java"


#line 50
@implementation EsGobJmulticardApduDnieVerifyApduCommand


#line 60
- (instancetype)initWithByte:(jbyte)cla
withJavaxSecurityAuthCallbackPasswordCallback:(JavaxSecurityAuthCallbackPasswordCallback *)pinPc {
  EsGobJmulticardApduDnieVerifyApduCommand_initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_(self, cla, pinPc);
  return self;
}


#line 77
- (IOSByteArray *)getData {
  
#line 79
  IOSCharArray *pass = [((JavaxSecurityAuthCallbackPasswordCallback *) nil_chk(pwc_)) getPassword];
  IOSByteArray *k = [IOSByteArray newArrayWithLength:((IOSCharArray *) nil_chk(pass))->size_];
  for (jint i = 0; i < k->size_; i++) {
    *IOSByteArray_GetRef(k, i) = (jbyte) IOSCharArray_Get(pass, i);
  }
  for (jint i = 0; i < k->size_; i++) {
    *IOSCharArray_GetRef(pass, i) = 0x0000;
  }
  return k;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByte:withJavaxSecurityAuthCallbackPasswordCallback:);
  methods[1].selector = @selector(getData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INS_VERIFY", "B", .constantValue.asChar = EsGobJmulticardApduDnieVerifyApduCommand_INS_VERIFY, 0x19, -1, -1, -1, -1 },
    { "pwc_", "LJavaxSecurityAuthCallbackPasswordCallback;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "BLJavaxSecurityAuthCallbackPasswordCallback;" };
  static const J2ObjcClassInfo _EsGobJmulticardApduDnieVerifyApduCommand = { "VerifyApduCommand", "es.gob.jmulticard.apdu.dnie", ptrTable, methods, fields, 7, 0x11, 2, 2, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardApduDnieVerifyApduCommand;
}

@end


#line 60
void EsGobJmulticardApduDnieVerifyApduCommand_initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_(EsGobJmulticardApduDnieVerifyApduCommand *self, jbyte cla, JavaxSecurityAuthCallbackPasswordCallback *pinPc) {
  EsGobJmulticardApduCommandApdu_initWithByte_withByte_withByte_withByte_withByteArray_withJavaLangInteger_(self,
#line 62
  cla,
#line 63
  EsGobJmulticardApduDnieVerifyApduCommand_INS_VERIFY,
#line 64
  (jbyte) (jint) 0x00,
#line 65
  (jbyte) (jint) 0x00, [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 66
    (jbyte) (jint) 0x00 } count:1],
#line 67
    nil);
    
#line 69
    if (pinPc == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 71
      @"No se puede verificar el titular con un PasswordCallback nulo");
    }
    
#line 74
    self->pwc_ = pinPc;
  }


#line 60
EsGobJmulticardApduDnieVerifyApduCommand *new_EsGobJmulticardApduDnieVerifyApduCommand_initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_(jbyte cla, JavaxSecurityAuthCallbackPasswordCallback *pinPc) {
  J2OBJC_NEW_IMPL(EsGobJmulticardApduDnieVerifyApduCommand, initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_, cla, pinPc)
}


#line 60
EsGobJmulticardApduDnieVerifyApduCommand *create_EsGobJmulticardApduDnieVerifyApduCommand_initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_(jbyte cla, JavaxSecurityAuthCallbackPasswordCallback *pinPc) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardApduDnieVerifyApduCommand, initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_, cla, pinPc)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardApduDnieVerifyApduCommand)

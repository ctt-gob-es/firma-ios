//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/dnie/GetChipInfoApduCommand.java
//

#include "J2ObjC_source.h"
#include "es/gob/jmulticard/apdu/CommandApdu.h"
#include "es/gob/jmulticard/apdu/dnie/GetChipInfoApduCommand.h"
#include "java/lang/Integer.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/apdu/dnie/GetChipInfoApduCommand must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardApduDnieGetChipInfoApduCommand ()

/*!
 @brief Crea una APDU de DNIe de obtenci&oacute;n del n&uacute;mero de serie.
 @param cla Clase de la APDU.
 */
- (instancetype)initWithByte:(jbyte)cla;

@end

/*!
 @brief Clase por defeccto de la APDU.
 */
inline jbyte EsGobJmulticardApduDnieGetChipInfoApduCommand_get_DEFAULT_CLA(void);
#define EsGobJmulticardApduDnieGetChipInfoApduCommand_DEFAULT_CLA -112
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardApduDnieGetChipInfoApduCommand, DEFAULT_CLA, jbyte)

/*!
 @brief C&oacute;digo de instrucci&oacute;n de la APDU.
 */
inline jbyte EsGobJmulticardApduDnieGetChipInfoApduCommand_get_INS_GET_CHIP_INFO(void);
#define EsGobJmulticardApduDnieGetChipInfoApduCommand_INS_GET_CHIP_INFO -72
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardApduDnieGetChipInfoApduCommand, INS_GET_CHIP_INFO, jbyte)

inline jbyte EsGobJmulticardApduDnieGetChipInfoApduCommand_get_INSTRUCTION_PARAMETER_P1(void);
#define EsGobJmulticardApduDnieGetChipInfoApduCommand_INSTRUCTION_PARAMETER_P1 0
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardApduDnieGetChipInfoApduCommand, INSTRUCTION_PARAMETER_P1, jbyte)

inline jbyte EsGobJmulticardApduDnieGetChipInfoApduCommand_get_INSTRUCTION_PARAMETER_P2(void);
#define EsGobJmulticardApduDnieGetChipInfoApduCommand_INSTRUCTION_PARAMETER_P2 0
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardApduDnieGetChipInfoApduCommand, INSTRUCTION_PARAMETER_P2, jbyte)

inline jbyte EsGobJmulticardApduDnieGetChipInfoApduCommand_get_MAXIMUM_LENGTH_EXPECTED_LE(void);
#define EsGobJmulticardApduDnieGetChipInfoApduCommand_MAXIMUM_LENGTH_EXPECTED_LE 7
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardApduDnieGetChipInfoApduCommand, MAXIMUM_LENGTH_EXPECTED_LE, jbyte)

__attribute__((unused)) static void EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(EsGobJmulticardApduDnieGetChipInfoApduCommand *self, jbyte cla);

__attribute__((unused)) static EsGobJmulticardApduDnieGetChipInfoApduCommand *new_EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(jbyte cla) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobJmulticardApduDnieGetChipInfoApduCommand *create_EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(jbyte cla);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/dnie/GetChipInfoApduCommand.java"


#line 46
@implementation EsGobJmulticardApduDnieGetChipInfoApduCommand

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 60
- (instancetype)init {
  EsGobJmulticardApduDnieGetChipInfoApduCommand_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithByte:(jbyte)cla {
  EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(self, cla);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithByte:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_CLA", "B", .constantValue.asChar = EsGobJmulticardApduDnieGetChipInfoApduCommand_DEFAULT_CLA, 0x1a, -1, -1, -1, -1 },
    { "INS_GET_CHIP_INFO", "B", .constantValue.asChar = EsGobJmulticardApduDnieGetChipInfoApduCommand_INS_GET_CHIP_INFO, 0x1a, -1, -1, -1, -1 },
    { "INSTRUCTION_PARAMETER_P1", "B", .constantValue.asChar = EsGobJmulticardApduDnieGetChipInfoApduCommand_INSTRUCTION_PARAMETER_P1, 0x1a, -1, -1, -1, -1 },
    { "INSTRUCTION_PARAMETER_P2", "B", .constantValue.asChar = EsGobJmulticardApduDnieGetChipInfoApduCommand_INSTRUCTION_PARAMETER_P2, 0x1a, -1, -1, -1, -1 },
    { "MAXIMUM_LENGTH_EXPECTED_LE", "B", .constantValue.asChar = EsGobJmulticardApduDnieGetChipInfoApduCommand_MAXIMUM_LENGTH_EXPECTED_LE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "B" };
  static const J2ObjcClassInfo _EsGobJmulticardApduDnieGetChipInfoApduCommand = { "GetChipInfoApduCommand", "es.gob.jmulticard.apdu.dnie", ptrTable, methods, fields, 7, 0x11, 2, 5, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardApduDnieGetChipInfoApduCommand;
}

@end


#line 60
void EsGobJmulticardApduDnieGetChipInfoApduCommand_init(EsGobJmulticardApduDnieGetChipInfoApduCommand *self) {
  EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(self, EsGobJmulticardApduDnieGetChipInfoApduCommand_DEFAULT_CLA);
}


#line 60
EsGobJmulticardApduDnieGetChipInfoApduCommand *new_EsGobJmulticardApduDnieGetChipInfoApduCommand_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardApduDnieGetChipInfoApduCommand, init)
}


#line 60
EsGobJmulticardApduDnieGetChipInfoApduCommand *create_EsGobJmulticardApduDnieGetChipInfoApduCommand_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardApduDnieGetChipInfoApduCommand, init)
}


#line 66
void EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(EsGobJmulticardApduDnieGetChipInfoApduCommand *self, jbyte cla) {
  EsGobJmulticardApduCommandApdu_initWithByte_withByte_withByte_withByte_withByteArray_withJavaLangInteger_(self,
#line 68
  cla, EsGobJmulticardApduDnieGetChipInfoApduCommand_INS_GET_CHIP_INFO, EsGobJmulticardApduDnieGetChipInfoApduCommand_INSTRUCTION_PARAMETER_P1, EsGobJmulticardApduDnieGetChipInfoApduCommand_INSTRUCTION_PARAMETER_P2,
#line 72
  nil, JavaLangInteger_valueOfWithInt_(EsGobJmulticardApduDnieGetChipInfoApduCommand_MAXIMUM_LENGTH_EXPECTED_LE));
}


#line 66
EsGobJmulticardApduDnieGetChipInfoApduCommand *new_EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(jbyte cla) {
  J2OBJC_NEW_IMPL(EsGobJmulticardApduDnieGetChipInfoApduCommand, initWithByte_, cla)
}


#line 66
EsGobJmulticardApduDnieGetChipInfoApduCommand *create_EsGobJmulticardApduDnieGetChipInfoApduCommand_initWithByte_(jbyte cla) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardApduDnieGetChipInfoApduCommand, initWithByte_, cla)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardApduDnieGetChipInfoApduCommand)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/dnie/VerifyApduCommand.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardApduDnieVerifyApduCommand")
#ifdef RESTRICT_EsGobJmulticardApduDnieVerifyApduCommand
#define INCLUDE_ALL_EsGobJmulticardApduDnieVerifyApduCommand 0
#else
#define INCLUDE_ALL_EsGobJmulticardApduDnieVerifyApduCommand 1
#endif
#undef RESTRICT_EsGobJmulticardApduDnieVerifyApduCommand

#if !defined (EsGobJmulticardApduDnieVerifyApduCommand_) && (INCLUDE_ALL_EsGobJmulticardApduDnieVerifyApduCommand || defined(INCLUDE_EsGobJmulticardApduDnieVerifyApduCommand))
#define EsGobJmulticardApduDnieVerifyApduCommand_

#define RESTRICT_EsGobJmulticardApduCommandApdu 1
#define INCLUDE_EsGobJmulticardApduCommandApdu 1
#include "es/gob/jmulticard/apdu/CommandApdu.h"

@class IOSByteArray;
@class JavaLangInteger;
@class JavaxSecurityAuthCallbackPasswordCallback;

/*!
 @brief APDU ISO 7816-4 de verificaci&oacute;n de PIN (CHV, <i>Card Holder Verification</i>).
 <b>Importante</b>: La implementaci&oacute;n actual solo funciona bajo CWA-14890, para un
  funcionamiento con canal no cifrado es necesario sobrecargar <code>getBytes()</code>.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardApduDnieVerifyApduCommand : EsGobJmulticardApduCommandApdu

#pragma mark Public

/*!
 @brief Construye una APDU ISO 7816-4 de verificaci&oacute;n de PIN (CHV, <i>Card Holder Verification</i>).
 @param cla Clase (CLA) de la APDU
 @param pinPc PIN de la tarjeta inteligente
 */
- (instancetype)initWithByte:(jbyte)cla
withJavaxSecurityAuthCallbackPasswordCallback:(JavaxSecurityAuthCallbackPasswordCallback *)pinPc;

- (IOSByteArray *)getData;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithByte:(jbyte)arg0
                    withByte:(jbyte)arg1
                    withByte:(jbyte)arg2
                    withByte:(jbyte)arg3
               withByteArray:(IOSByteArray *)arg4
         withJavaLangInteger:(JavaLangInteger *)arg5 NS_UNAVAILABLE;

- (instancetype)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardApduDnieVerifyApduCommand)

/*!
 @brief C&oacute;digo de instrucci&oacute;n de la APDU.
 */
inline jbyte EsGobJmulticardApduDnieVerifyApduCommand_get_INS_VERIFY(void);
#define EsGobJmulticardApduDnieVerifyApduCommand_INS_VERIFY 32
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardApduDnieVerifyApduCommand, INS_VERIFY, jbyte)

FOUNDATION_EXPORT void EsGobJmulticardApduDnieVerifyApduCommand_initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_(EsGobJmulticardApduDnieVerifyApduCommand *self, jbyte cla, JavaxSecurityAuthCallbackPasswordCallback *pinPc);

FOUNDATION_EXPORT EsGobJmulticardApduDnieVerifyApduCommand *new_EsGobJmulticardApduDnieVerifyApduCommand_initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_(jbyte cla, JavaxSecurityAuthCallbackPasswordCallback *pinPc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardApduDnieVerifyApduCommand *create_EsGobJmulticardApduDnieVerifyApduCommand_initWithByte_withJavaxSecurityAuthCallbackPasswordCallback_(jbyte cla, JavaxSecurityAuthCallbackPasswordCallback *pinPc);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardApduDnieVerifyApduCommand)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardApduDnieVerifyApduCommand")

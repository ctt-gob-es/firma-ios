//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/iso7816four/SelectFileApduResponse.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/apdu/Apdu.h"
#include "es/gob/jmulticard/apdu/ResponseApdu.h"
#include "es/gob/jmulticard/apdu/iso7816four/SelectFileApduResponse.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/apdu/iso7816four/SelectFileApduResponse must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardApduIso7816fourSelectFileApduResponse () {
 @public
  /*!
   @brief Nombre del DF que contiene el EF.
   */
  IOSByteArray *dfName_;
  /*!
   @brief Identificador del EF seleccionado.
   */
  IOSByteArray *fileId_;
  /*!
   @brief Longitud (en octetos) del EF seleccionado.
   */
  IOSByteArray *fileLength_;
}

- (void)decode;

- (IOSByteArray *)getBytesFromDataWithInt:(jint)offset
                                  withInt:(jint)length;

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardApduIso7816fourSelectFileApduResponse, dfName_, IOSByteArray *)
J2OBJC_FIELD_SETTER(EsGobJmulticardApduIso7816fourSelectFileApduResponse, fileId_, IOSByteArray *)
J2OBJC_FIELD_SETTER(EsGobJmulticardApduIso7816fourSelectFileApduResponse, fileLength_, IOSByteArray *)

__attribute__((unused)) static void EsGobJmulticardApduIso7816fourSelectFileApduResponse_decode(EsGobJmulticardApduIso7816fourSelectFileApduResponse *self);

__attribute__((unused)) static IOSByteArray *EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(EsGobJmulticardApduIso7816fourSelectFileApduResponse *self, jint offset, jint length);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/iso7816four/SelectFileApduResponse.java"


#line 48
@implementation EsGobJmulticardApduIso7816fourSelectFileApduResponse


#line 61
- (instancetype)initWithEsGobJmulticardApduApdu:(EsGobJmulticardApduApdu *)apduResponse {
  EsGobJmulticardApduIso7816fourSelectFileApduResponse_initWithEsGobJmulticardApduApdu_(self, apduResponse);
  return self;
}

- (void)decode {
  EsGobJmulticardApduIso7816fourSelectFileApduResponse_decode(self);
}


#line 102
- (IOSByteArray *)getBytesFromDataWithInt:(jint)offset
                                  withInt:(jint)length {
  return EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(self, offset, length);
}


#line 110
- (IOSByteArray *)getDfName {
  if (dfName_ != nil) {
    IOSByteArray *out = [IOSByteArray newArrayWithLength:dfName_->size_];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(dfName_, 0, out, 0, dfName_->size_);
    return out;
  }
  return nil;
}


#line 121
- (IOSByteArray *)getFileId {
  if (fileId_ != nil) {
    IOSByteArray *out = [IOSByteArray newArrayWithLength:fileId_->size_];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(fileId_, 0, out, 0, fileId_->size_);
    return out;
  }
  return nil;
}


#line 132
- (jint)getFileLength {
  if (fileLength_ != nil) {
    return (JreLShift32((IOSByteArray_Get(fileLength_, 0) & (jint) 0xFF), 8)) | (IOSByteArray_Get(fileLength_, 1) & (jint) 0xFF);
  }
  
#line 137
  return 0;
}


#line 140
- (jboolean)isOk {
  
#line 142
  if (((IOSByteArray *) nil_chk([self getData]))->size_ == 0) {
    return [super isOk];
  }
  return [super isOk] && IOSByteArray_Get(nil_chk([self getData]), 0) == (jbyte) (jint) 0x6F && ((IOSByteArray *) nil_chk([self getData]))->size_ > 2;
}


#line 148
- (NSString *)description {
  
#line 150
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_initWithNSString_(@"Resultado de la seleccion de fichero:\n");
  if ([self getDfName] != nil) {
    (void) [sb appendWithNSString:JreStrcat("$$", @" Nombre del fichero: ", [NSString java_stringWithBytes:[self getDfName]])];
    (void) [sb appendWithChar:0x000a];
  }
  if ([self getFileId] != nil) {
    (void) [sb appendWithNSString:JreStrcat("$$", @" Identificador de fichero: ", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([self getFileId], true))];
    (void) [sb appendWithChar:0x000a];
  }
  (void) [sb appendWithNSString:JreStrcat("$I", @" Longitud del fichero: ", [self getFileLength])];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x2, 1, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithEsGobJmulticardApduApdu:);
  methods[1].selector = @selector(decode);
  methods[2].selector = @selector(getBytesFromDataWithInt:withInt:);
  methods[3].selector = @selector(getDfName);
  methods[4].selector = @selector(getFileId);
  methods[5].selector = @selector(getFileLength);
  methods[6].selector = @selector(isOk);
  methods[7].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "dfName_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fileId_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fileLength_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardApduApdu;", "getBytesFromData", "II", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardApduIso7816fourSelectFileApduResponse = { "SelectFileApduResponse", "es.gob.jmulticard.apdu.iso7816four", ptrTable, methods, fields, 7, 0x11, 8, 3, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardApduIso7816fourSelectFileApduResponse;
}

@end


#line 61
void EsGobJmulticardApduIso7816fourSelectFileApduResponse_initWithEsGobJmulticardApduApdu_(EsGobJmulticardApduIso7816fourSelectFileApduResponse *self, EsGobJmulticardApduApdu *apduResponse) {
  EsGobJmulticardApduResponseApdu_initWithByteArray_(self, [((EsGobJmulticardApduApdu *) nil_chk(apduResponse)) getBytes]);
  self->dfName_ =
#line 51
  nil;
  self->fileId_ =
#line 54
  nil;
  self->fileLength_ =
#line 57
  nil;
  
#line 63
  EsGobJmulticardApduIso7816fourSelectFileApduResponse_decode(self);
}


#line 61
EsGobJmulticardApduIso7816fourSelectFileApduResponse *new_EsGobJmulticardApduIso7816fourSelectFileApduResponse_initWithEsGobJmulticardApduApdu_(EsGobJmulticardApduApdu *apduResponse) {
  J2OBJC_NEW_IMPL(EsGobJmulticardApduIso7816fourSelectFileApduResponse, initWithEsGobJmulticardApduApdu_, apduResponse)
}


#line 61
EsGobJmulticardApduIso7816fourSelectFileApduResponse *create_EsGobJmulticardApduIso7816fourSelectFileApduResponse_initWithEsGobJmulticardApduApdu_(EsGobJmulticardApduApdu *apduResponse) {
  J2OBJC_CREATE_IMPL(EsGobJmulticardApduIso7816fourSelectFileApduResponse, initWithEsGobJmulticardApduApdu_, apduResponse)
}


#line 66
void EsGobJmulticardApduIso7816fourSelectFileApduResponse_decode(EsGobJmulticardApduIso7816fourSelectFileApduResponse *self) {
  
#line 68
  if ([self isOk] && ((IOSByteArray *) nil_chk([self getData]))->size_ > 0) {
    
#line 70
    jint length = IOSByteArray_Get(nil_chk([self getData]), 1);
    
#line 73
    if (((IOSByteArray *) nil_chk([self getData]))->size_ - 2 == length) {
      jint propInformationIndex = 2;
      
#line 76
      if (IOSByteArray_Get(nil_chk([self getData]), propInformationIndex) == (jbyte) (jint) 0x81) {
        jint lengthLength = IOSByteArray_Get(nil_chk([self getData]), ++propInformationIndex);
        self->fileLength_ = EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(self, ++propInformationIndex, lengthLength);
        propInformationIndex += lengthLength;
      }
      
#line 82
      if (IOSByteArray_Get(nil_chk([self getData]), propInformationIndex) == (jbyte) (jint) 0x81) {
        jint fileIdLength = IOSByteArray_Get(nil_chk([self getData]), ++propInformationIndex);
        self->fileId_ = EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(self, ++propInformationIndex, fileIdLength);
        propInformationIndex += fileIdLength;
      }
      
#line 88
      if (IOSByteArray_Get(nil_chk([self getData]), propInformationIndex) == (jbyte) (jint) 0x84) {
        jint nameLength = IOSByteArray_Get(nil_chk([self getData]), ++propInformationIndex);
        self->dfName_ = EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(self, ++propInformationIndex, nameLength);
        propInformationIndex += nameLength;
      }
      
#line 94
      if (IOSByteArray_Get(nil_chk([self getData]), propInformationIndex) == (jbyte) (jint) 0x85 && IOSByteArray_Get(nil_chk([self getData]), propInformationIndex + 1) == 10) {
        self->fileId_ = EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(self, propInformationIndex + 3, 2);
        self->fileLength_ = EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(self, propInformationIndex + 5, 2);
      }
    }
  }
}


#line 102
IOSByteArray *EsGobJmulticardApduIso7816fourSelectFileApduResponse_getBytesFromDataWithInt_withInt_(EsGobJmulticardApduIso7816fourSelectFileApduResponse *self, jint offset, jint length) {
  IOSByteArray *result = [IOSByteArray newArrayWithLength:length];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([self getData], offset, result, 0, length);
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardApduIso7816fourSelectFileApduResponse)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/Apdu.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/JmcLogger.h"
#include "es/gob/jmulticard/apdu/Apdu.h"
#include "java/lang/System.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/apdu/Apdu must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardApduApdu () {
 @public
  /*!
   @brief Codificaci&oacute;n binaria de la APDU.
   */
  IOSByteArray *apduBytes_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardApduApdu, apduBytes_, IOSByteArray *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/Apdu.java"


#line 49
@implementation EsGobJmulticardApduApdu


#line 56
- (IOSByteArray *)getBytes {
  if (apduBytes_ == nil) {
    EsGobJmulticardJmcLogger_warningWithNSString_(
#line 59
    @"Se han pedido los octetos de una APDU de cuerpo nulo, se devolvera null");
    
#line 61
    return nil;
  }
  IOSByteArray *response = [IOSByteArray newArrayWithLength:apduBytes_->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(apduBytes_, 0, response, 0, apduBytes_->size_);
  return response;
}

- (void)setBytesWithByteArray:(IOSByteArray *)apdu {
  if (apdu == nil) {
    EsGobJmulticardJmcLogger_warningWithNSString_(@"Se ha pedido crear una APDU con el cuerpo nulo");
    apduBytes_ = nil;
  }
  else {
    if (apdu->size_ == 0) {
      EsGobJmulticardJmcLogger_warningWithNSString_(@"Se ha pedido crear una APDU con el cuerpo vacio");
    }
    else if (apdu->size_ < 1) {
      EsGobJmulticardJmcLogger_warningWithNSString_(@"Se ha pedido crear una APDU con cuerpo de tamano inferior a dos octetos");
    }
    apduBytes_ = [IOSByteArray newArrayWithLength:apdu->size_];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(apdu, 0, apduBytes_, 0, apdu->size_);
  }
}

- (NSString *)description {
  
#line 89
  return EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([self getBytes], ((IOSByteArray *) nil_chk([self getBytes]))->size_ > 32);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 93
- (instancetype)init {
  EsGobJmulticardApduApdu_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getBytes);
  methods[1].selector = @selector(setBytesWithByteArray:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "apduBytes_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setBytes", "[B", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardApduApdu = { "Apdu", "es.gob.jmulticard.apdu", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardApduApdu;
}

@end


#line 93
void EsGobJmulticardApduApdu_init(EsGobJmulticardApduApdu *self) {
  NSObject_init(self);
  self->apduBytes_ =
#line 52
  nil;
}


#line 93
EsGobJmulticardApduApdu *new_EsGobJmulticardApduApdu_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardApduApdu, init)
}


#line 93
EsGobJmulticardApduApdu *create_EsGobJmulticardApduApdu_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardApduApdu, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardApduApdu)

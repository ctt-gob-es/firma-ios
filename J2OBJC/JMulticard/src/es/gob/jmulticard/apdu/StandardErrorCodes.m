//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/StandardErrorCodes.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/apdu/StandardErrorCodes.h"
#include "es/gob/jmulticard/apdu/StatusWord.h"
#include "java/util/AbstractMap.h"
#include "java/util/HashMap.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/apdu/StandardErrorCodes must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardApduStandardErrorCodes ()

/*!
 @brief Constructor privado y vac&iacute;o.
 */
- (instancetype)initPackagePrivate;

@end

inline JavaUtilAbstractMap *EsGobJmulticardApduStandardErrorCodes_get_ERRORS(void);
static JavaUtilAbstractMap *EsGobJmulticardApduStandardErrorCodes_ERRORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardApduStandardErrorCodes, ERRORS, JavaUtilAbstractMap *)

__attribute__((unused)) static void EsGobJmulticardApduStandardErrorCodes_initPackagePrivate(EsGobJmulticardApduStandardErrorCodes *self);

__attribute__((unused)) static EsGobJmulticardApduStandardErrorCodes *new_EsGobJmulticardApduStandardErrorCodes_initPackagePrivate(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static EsGobJmulticardApduStandardErrorCodes *create_EsGobJmulticardApduStandardErrorCodes_initPackagePrivate(void);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/apdu/StandardErrorCodes.java"

J2OBJC_INITIALIZED_DEFN(EsGobJmulticardApduStandardErrorCodes)


#line 10
@implementation EsGobJmulticardApduStandardErrorCodes


#line 13
- (instancetype)initPackagePrivate {
  EsGobJmulticardApduStandardErrorCodes_initPackagePrivate(self);
  return self;
}


#line 50
+ (NSString *)getErrorDescriptionWithEsGobJmulticardApduStatusWord:(EsGobJmulticardApduStatusWord *)sw {
  return EsGobJmulticardApduStandardErrorCodes_getErrorDescriptionWithEsGobJmulticardApduStatusWord_(sw);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x8, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(getErrorDescriptionWithEsGobJmulticardApduStatusWord:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ERRORS", "LJavaUtilAbstractMap;", .constantValue.asLong = 0, 0x1a, -1, 2, 3, -1 },
  };
  static const void *ptrTable[] = { "getErrorDescription", "LEsGobJmulticardApduStatusWord;", &EsGobJmulticardApduStandardErrorCodes_ERRORS, "Ljava/util/AbstractMap<Les/gob/jmulticard/apdu/StatusWord;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EsGobJmulticardApduStandardErrorCodes = { "StandardErrorCodes", "es.gob.jmulticard.apdu", ptrTable, methods, fields, 7, 0x10, 2, 1, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardApduStandardErrorCodes;
}

+ (void)initialize {
  if (self == [EsGobJmulticardApduStandardErrorCodes class]) {
    EsGobJmulticardApduStandardErrorCodes_ERRORS = new_JavaUtilHashMap_initWithInt_(
#line 17
    26);
    {
      
#line 19
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x62, (jbyte) (jint) 0x83) withId:@"El fichero seleccionado esta invalidado (6283)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x65, (jbyte) (jint) 0x81) withId:@"Fallo en la memoria (6581)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x67, (jbyte) (jint) 0x00) withId:@"Longitud incorrecta (6700)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x68, (jbyte) (jint) 0x82) withId:@"Securizacion de mensajes no soportada (6882)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x69, (jbyte) (jint) 0x82) withId:@"Condiciones de seguridad no satisfechas (6982)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x69, (jbyte) (jint) 0x83) withId:@"Metodo de autenticacion bloqueado (6983)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x69, (jbyte) (jint) 0x84) withId:@"Dato referenciado invalido (6984)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x69, (jbyte) (jint) 0x85) withId:@"Condiciones de uso no satisfechas (6985)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x69, (jbyte) (jint) 0x86) withId:@"Comando no permitido [no existe ningun EF seleccionado] (6986)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x69, (jbyte) (jint) 0x87) withId:@"Falta un objeto necesario en el mensaje seguro (6987)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x69, (jbyte) (jint) 0x88) withId:@"Objetos de datos incorrectos para el mensaje seguro (6988)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x80) withId:@"Parametros incorrectos en el campo de datos (6A80)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x81) withId:@"Funcion no soportada (6A81)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x82) withId:@"No se encuentra el fichero (6A82)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x83) withId:@"Registro no encontrado (6A83)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x84) withId:@"No hay suficiente espacio de memoria en el fichero (6A84)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x85) withId:@"La longitud de datos (Lc) es incompatible con la estructura TLV (6A85)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x86) withId:@"Parametros incorrectos en P1 o P2 (6A86)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x87) withId:@"La longitud de los datos es inconsistente con P1-P2 (6A87)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x88) withId:@"Datos referenciados no encontrados (6A88)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x89) withId:@"El fichero ya existe (6A89)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6A, (jbyte) (jint) 0x8A) withId:@"El nombre del DF ya existe (6A8A)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6B, (jbyte) (jint) 0x00) withId:@"Parametro(s) incorrecto(s) P1-P2 (6B00)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6E, (jbyte) (jint) 0x00) withId:@"Clase no soportada (6E00)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6D, (jbyte) (jint) 0x00) withId:@"Comando no permitido en la fase de vida actual (6D00)"];
      (void) [EsGobJmulticardApduStandardErrorCodes_ERRORS putWithId:new_EsGobJmulticardApduStatusWord_initWithByte_withByte_((jbyte) (jint) 0x6F, (jbyte) (jint) 0x00) withId:@"Diagnostico no preciso (6F00)"];
    }
    J2OBJC_SET_INITIALIZED(EsGobJmulticardApduStandardErrorCodes)
  }
}

@end


#line 13
void EsGobJmulticardApduStandardErrorCodes_initPackagePrivate(EsGobJmulticardApduStandardErrorCodes *self) {
  NSObject_init(self);
}


#line 13
EsGobJmulticardApduStandardErrorCodes *new_EsGobJmulticardApduStandardErrorCodes_initPackagePrivate() {
  J2OBJC_NEW_IMPL(EsGobJmulticardApduStandardErrorCodes, initPackagePrivate)
}


#line 13
EsGobJmulticardApduStandardErrorCodes *create_EsGobJmulticardApduStandardErrorCodes_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardApduStandardErrorCodes, initPackagePrivate)
}


#line 50
NSString *EsGobJmulticardApduStandardErrorCodes_getErrorDescriptionWithEsGobJmulticardApduStatusWord_(EsGobJmulticardApduStatusWord *sw) {
  EsGobJmulticardApduStandardErrorCodes_initialize();
  
#line 51
  if (sw == nil) {
    return @"Palabra de estado nula";
  }
  if ([((JavaUtilAbstractMap *) nil_chk(EsGobJmulticardApduStandardErrorCodes_ERRORS)) containsKeyWithId:sw]) {
    return [EsGobJmulticardApduStandardErrorCodes_ERRORS getWithId:sw];
  }
  return EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([sw getBytes], true);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardApduStandardErrorCodes)

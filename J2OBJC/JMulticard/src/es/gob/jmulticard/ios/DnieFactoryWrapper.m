//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/ios/DnieFactoryWrapper.java
//

#include "J2ObjC_source.h"
#include "es/gob/jmulticard/card/InvalidCardException.h"
#include "es/gob/jmulticard/card/dnie/BurnedDnieCardException.h"
#include "es/gob/jmulticard/card/dnie/Dnie.h"
#include "es/gob/jmulticard/card/dnie/DnieFactory.h"
#include "es/gob/jmulticard/connection/ApduConnection.h"
#include "es/gob/jmulticard/connection/ApduConnectionException.h"
#include "es/gob/jmulticard/crypto/BcCryptoHelper.h"
#include "es/gob/jmulticard/ios/DnieFactoryWrapper.h"
#include "es/gob/jmulticard/ios/DnieWrapper.h"
#include "es/gob/jmulticard/ios/ErrorCode.h"
#include "javax/security/auth/callback/CallbackHandler.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/ios/DnieFactoryWrapper must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/ios/DnieFactoryWrapper.java"


#line 16
@implementation EsGobJmulticardIosDnieFactoryWrapper

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 16
- (instancetype)init {
  EsGobJmulticardIosDnieFactoryWrapper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 26
+ (EsGobJmulticardIosDnieWrapper *)getDnieWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)conn
                                         withJavaxSecurityAuthCallbackCallbackHandler:(id<JavaxSecurityAuthCallbackCallbackHandler>)callbackHandler {
  return EsGobJmulticardIosDnieFactoryWrapper_getDnieWithEsGobJmulticardConnectionApduConnection_withJavaxSecurityAuthCallbackCallbackHandler_(conn, callbackHandler);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardIosDnieWrapper;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDnieWithEsGobJmulticardConnectionApduConnection:withJavaxSecurityAuthCallbackCallbackHandler:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getDnie", "LEsGobJmulticardConnectionApduConnection;LJavaxSecurityAuthCallbackCallbackHandler;" };
  static const J2ObjcClassInfo _EsGobJmulticardIosDnieFactoryWrapper = { "DnieFactoryWrapper", "es.gob.jmulticard.ios", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardIosDnieFactoryWrapper;
}

@end


#line 16
void EsGobJmulticardIosDnieFactoryWrapper_init(EsGobJmulticardIosDnieFactoryWrapper *self) {
  NSObject_init(self);
}


#line 16
EsGobJmulticardIosDnieFactoryWrapper *new_EsGobJmulticardIosDnieFactoryWrapper_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardIosDnieFactoryWrapper, init)
}


#line 16
EsGobJmulticardIosDnieFactoryWrapper *create_EsGobJmulticardIosDnieFactoryWrapper_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardIosDnieFactoryWrapper, init)
}


#line 26
EsGobJmulticardIosDnieWrapper *EsGobJmulticardIosDnieFactoryWrapper_getDnieWithEsGobJmulticardConnectionApduConnection_withJavaxSecurityAuthCallbackCallbackHandler_(id<EsGobJmulticardConnectionApduConnection> conn, id<JavaxSecurityAuthCallbackCallbackHandler> callbackHandler) {
  EsGobJmulticardIosDnieFactoryWrapper_initialize();
  EsGobJmulticardCardDnieDnie *dnie = nil;
  jint errorCode = -1;
  NSString *errorMessage = nil;
  @try {
    dnie = EsGobJmulticardCardDnieDnieFactory_getDnieWithEsGobJmulticardConnectionApduConnection_withJavaxSecurityAuthCallbackPasswordCallback_withEsGobJmulticardCryptoHelper_withJavaxSecurityAuthCallbackCallbackHandler_(conn, nil, new_EsGobJmulticardCryptoBcCryptoHelper_init(), callbackHandler);
  }
  @catch (
#line 33
  EsGobJmulticardCardInvalidCardException *e) {
    errorCode = EsGobJmulticardIosErrorCode_INVALID_CARD;
    errorMessage = [e getMessage];
  }
  @catch (
#line 36
  EsGobJmulticardCardDnieBurnedDnieCardException *e) {
    errorCode = EsGobJmulticardIosErrorCode_BURNED_CARD;
    errorMessage = [e getMessage];
  }
  @catch (
#line 39
  EsGobJmulticardConnectionApduConnectionException *e) {
    errorCode = EsGobJmulticardIosErrorCode_CONNECTION_ERROR;
    errorMessage = [e getMessage];
  }
  
#line 45
  EsGobJmulticardIosDnieWrapper *result;
  if (dnie != nil) {
    result = new_EsGobJmulticardIosDnieWrapper_initWithEsGobJmulticardCardDnieDnie_(dnie);
  }
  else {
    
#line 49
    result = new_EsGobJmulticardIosDnieWrapper_initWithInt_withNSString_(errorCode, errorMessage);
  }
  
#line 53
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardIosDnieFactoryWrapper)

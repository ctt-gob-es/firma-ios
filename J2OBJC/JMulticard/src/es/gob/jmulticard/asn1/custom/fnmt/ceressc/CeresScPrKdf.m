//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/custom/fnmt/ceressc/CeresScPrKdf.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/OptionalDecoderObjectElement.h"
#include "es/gob/jmulticard/asn1/custom/fnmt/ceressc/CeresScPrKdf.h"
#include "es/gob/jmulticard/asn1/custom/fnmt/ceressc/CeresScPrivateKeyObject.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/PrKdf.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "javax/security/auth/x500/X500Principal.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/custom/fnmt/ceressc/CeresScPrKdf must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/custom/fnmt/ceressc/CeresScPrKdf.java"


#line 50
@implementation EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 54
- (instancetype)init {
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 72
- (jint)getKeyCount {
  
#line 74
  return [self getElementCount];
}


#line 80
- (IOSByteArray *)getKeyIdentifierWithInt:(jint)index {
  
#line 82
  return [((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) nil_chk(((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) cast_chk([self getElementAtWithInt:index], [EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject class])))) getKeyIdentifier];
}


#line 88
- (NSString *)getKeyNameWithInt:(jint)index {
  
#line 90
  return [((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) nil_chk(((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) cast_chk([self getElementAtWithInt:index], [EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject class])))) getKeyName];
}


#line 96
- (NSString *)getKeyPathWithInt:(jint)index {
  
#line 98
  return [((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) nil_chk(((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) cast_chk([self getElementAtWithInt:index], [EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject class])))) getKeyPath];
}


#line 104
- (jint)getKeyLengthWithInt:(jint)index {
  
#line 106
  return [((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) nil_chk(((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) cast_chk([self getElementAtWithInt:index], [EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject class])))) getKeyLength];
}


#line 109
- (NSString *)description {
  
#line 111
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:@"Fichero de Descripcion de Claves Privadas:\n"];
  for (jint index = 0; index < [self getKeyCount]; index++) {
    (void) [sb appendWithNSString:@" Clave privada "];
    (void) [sb appendWithNSString:JavaLangInteger_toStringWithInt_(index)];
    (void) [sb appendWithNSString:@"\n  Nombre de la clave: "];
    (void) [sb appendWithNSString:[self getKeyNameWithInt:index]];
    if ([self getKeyPrincipalWithInt:index] != nil) {
      (void) [sb appendWithNSString:@"\n  RDN de la clave: "];
      (void) [sb appendWithNSString:[((JavaxSecurityAuthX500X500Principal *) nil_chk([self getKeyPrincipalWithInt:index])) description]];
    }
    (void) [sb appendWithNSString:@"\n  Longitud de la clave: "];
    (void) [sb appendWithInt:[self getKeyLengthWithInt:index]];
    (void) [sb appendWithNSString:@"\n  Ruta hacia la clave: "];
    (void) [sb appendWithNSString:[self getKeyPathWithInt:index]];
    if (index != [self getKeyCount] - 1) {
      (void) [sb appendWithChar:0x000a];
    }
  }
  return [sb description];
}


#line 136
- (jbyte)getKeyReferenceWithInt:(jint)index {
  
#line 138
  return [((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) nil_chk(((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) cast_chk([self getElementAtWithInt:index], [EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject class])))) getKeyReference];
}


#line 144
- (IOSByteArray *)getKeyIdWithInt:(jint)index {
  
#line 146
  return [((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) nil_chk(((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) cast_chk([self getElementAtWithInt:index], [EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject class])))) getKeyIdentifier];
}


#line 149
- (JavaxSecurityAuthX500X500Principal *)getKeyPrincipalWithInt:(jint)index {
  
#line 151
  return [((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) nil_chk(((EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject *) cast_chk([self getElementAtWithInt:index], [EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject class])))) getKeyPrincipal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 7, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxSecurityAuthX500X500Principal;", 0x1, 8, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getKeyCount);
  methods[2].selector = @selector(getKeyIdentifierWithInt:);
  methods[3].selector = @selector(getKeyNameWithInt:);
  methods[4].selector = @selector(getKeyPathWithInt:);
  methods[5].selector = @selector(getKeyLengthWithInt:);
  methods[6].selector = @selector(description);
  methods[7].selector = @selector(getKeyReferenceWithInt:);
  methods[8].selector = @selector(getKeyIdWithInt:);
  methods[9].selector = @selector(getKeyPrincipalWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getKeyIdentifier", "I", "getKeyName", "getKeyPath", "getKeyLength", "toString", "getKeyReference", "getKeyId", "getKeyPrincipal" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf = { "CeresScPrKdf", "es.gob.jmulticard.asn1.custom.fnmt.ceressc", ptrTable, methods, NULL, 7, 0x11, 10, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf;
}

@end


#line 54
void EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf_init(EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf *self) {
  EsGobJmulticardAsn1DerPkcs15PrKdf_initWithEsGobJmulticardAsn1OptionalDecoderObjectElementArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 57
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), false), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 58
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 59
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 60
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 61
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 62
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 63
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 64
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 65
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 66
  EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrivateKeyObject_class_(), true) } count:10 type:EsGobJmulticardAsn1OptionalDecoderObjectElement_class_()]);
}


#line 54
EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf *new_EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf, init)
}


#line 54
EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf *create_EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1CustomFnmtCeresscCeresScPrKdf)

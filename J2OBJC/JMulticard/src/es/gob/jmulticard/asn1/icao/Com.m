//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/icao/Com.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/asn1/Asn1Exception.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/bertlv/BerTlv.h"
#include "es/gob/jmulticard/asn1/icao/Com.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/lang/Byte.h"
#include "java/util/AbstractMap.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/icao/Com must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardAsn1IcaoCom () {
 @public
  NSString *ldsVersion_;
  NSString *unicodeVersion_;
  id<JavaUtilList> presentDgs_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1IcaoCom, ldsVersion_, NSString *)
J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1IcaoCom, unicodeVersion_, NSString *)
J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1IcaoCom, presentDgs_, id<JavaUtilList>)

inline jbyte EsGobJmulticardAsn1IcaoCom_get_TAG_COM(void);
#define EsGobJmulticardAsn1IcaoCom_TAG_COM 96
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1IcaoCom, TAG_COM, jbyte)

inline jchar EsGobJmulticardAsn1IcaoCom_get_DOT(void);
#define EsGobJmulticardAsn1IcaoCom_DOT '.'
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1IcaoCom, DOT, jchar)

inline JavaUtilAbstractMap *EsGobJmulticardAsn1IcaoCom_get_DGTAGS(void);
static JavaUtilAbstractMap *EsGobJmulticardAsn1IcaoCom_DGTAGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardAsn1IcaoCom, DGTAGS, JavaUtilAbstractMap *)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/icao/Com.java"

J2OBJC_INITIALIZED_DEFN(EsGobJmulticardAsn1IcaoCom)


#line 20
@implementation EsGobJmulticardAsn1IcaoCom

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 20
- (instancetype)init {
  EsGobJmulticardAsn1IcaoCom_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 49
- (void)decodeValue {
  
#line 52
  EsGobJmulticardAsn1BertlvBerTlv *tlv = EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithByteArray_([self getBytes]);
  [self checkTagWithByte:[((EsGobJmulticardAsn1BertlvBerTlv *) nil_chk(tlv)) getTag]];
  
#line 55
  JavaIoByteArrayInputStream *tlvs = new_JavaIoByteArrayInputStream_initWithByteArray_([tlv getValue]);
  
#line 57
  tlv = EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithJavaIoByteArrayInputStream_(tlvs);
  if ([((EsGobJmulticardAsn1BertlvBerTlv *) nil_chk(tlv)) getLength] != 4) {
    @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_(JreStrcat("$I", @"El valor del TLV de version LDS debe tener exactamente cuarto octetos, pero se han encontrado ",
#line 60
    [tlv getLength]));
  }
  
#line 63
  if ([tlv getTag] != (jint) 0x01) {
    @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_(JreStrcat("$$C", @"El valor del TLV de version LDS debe tener etiqueta '01', pero se ha encontrado '", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([IOSByteArray newArrayWithBytes:(jbyte[]){
#line 66
      [tlv getTag] } count:1], false), '\''));
    }
    
#line 69
    ldsVersion_ = JreStrcat("$C$", [NSString java_stringWithBytes:[IOSByteArray newArrayWithBytes:(jbyte[]){ IOSByteArray_Get(nil_chk([tlv getValue]), 0), IOSByteArray_Get(nil_chk([tlv getValue]), 1) } count:2]], EsGobJmulticardAsn1IcaoCom_DOT, [NSString java_stringWithBytes:[IOSByteArray newArrayWithBytes:(jbyte[]){ IOSByteArray_Get(nil_chk(
#line 70
    [tlv getValue]), 2), IOSByteArray_Get(nil_chk([tlv getValue]), 3) } count:2]]);
    
#line 72
    tlv = EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithJavaIoByteArrayInputStream_(tlvs);
    if ([((EsGobJmulticardAsn1BertlvBerTlv *) nil_chk(tlv)) getLength] != 6) {
      @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_(JreStrcat("$I", @"El valor del TLV de version Unicode debe tener exactamente seis octetos, pero se han encontrado ",
#line 75
      [tlv getLength]));
    }
    
#line 78
    if ([tlv getTag] != (jint) 0x36) {
      @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_(JreStrcat("$$C", @"El valor del TLV de version Unicode debe tener etiqueta '36', pero se ha encontrado '", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([IOSByteArray newArrayWithBytes:(jbyte[]){
#line 81
        [tlv getTag] } count:1], false), '\''));
      }
      
#line 84
      unicodeVersion_ = JreStrcat("$C$C$", [NSString java_stringWithBytes:[IOSByteArray newArrayWithBytes:(jbyte[]){ IOSByteArray_Get(nil_chk(
#line 85
      [tlv getValue]), 0), IOSByteArray_Get(nil_chk([tlv getValue]), 1) } count:2]], EsGobJmulticardAsn1IcaoCom_DOT, [NSString java_stringWithBytes:[IOSByteArray newArrayWithBytes:(jbyte[]){ IOSByteArray_Get(nil_chk(
#line 86
      [tlv getValue]), 2), IOSByteArray_Get(nil_chk([tlv getValue]), 3) } count:2]], EsGobJmulticardAsn1IcaoCom_DOT, [NSString java_stringWithBytes:[IOSByteArray newArrayWithBytes:(jbyte[]){ IOSByteArray_Get(nil_chk(
#line 87
      [tlv getValue]), 4), IOSByteArray_Get(nil_chk([tlv getValue]), 5) } count:2]]);
      
#line 89
      tlv = EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithJavaIoByteArrayInputStream_(tlvs);
      if ([((EsGobJmulticardAsn1BertlvBerTlv *) nil_chk(tlv)) getTag] != (jint) 0x5c) {
        @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_(JreStrcat("$$C", @"El valor del TLV de lista de rotulos debe tener etiqueta '5C', pero se han encontrado '", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([IOSByteArray newArrayWithBytes:(jbyte[]){
#line 93
          [tlv getTag] } count:1], false), '\''));
        }
        
#line 96
        IOSByteArray *dgList = [tlv getValue];
        {
          IOSByteArray *a__ =
#line 97
          dgList;
          jbyte const *b__ = ((IOSByteArray *) nil_chk(a__))->buffer_;
          jbyte const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            jbyte dgTag = *b__++;
            
#line 98
            [((id<JavaUtilList>) nil_chk(presentDgs_)) addWithId:[((JavaUtilAbstractMap *) nil_chk(EsGobJmulticardAsn1IcaoCom_DGTAGS)) getWithId:JavaLangByte_valueOfWithByte_(dgTag)]];
          }
        }
      }


#line 102
- (NSString *)description {
  
#line 104
  return JreStrcat("$$$$$@", @"Common Data (COM): Version de LDS = ", ldsVersion_, @", version de Unicode = ",
#line 105
  unicodeVersion_, @", Grupos de datos presentes = ",
#line 106
  presentDgs_);
}


#line 109
- (jbyte)getDefaultTag {
  
#line 111
  return EsGobJmulticardAsn1IcaoCom_TAG_COM;
}


#line 117
- (NSString *)getLdsVersion {
  return ldsVersion_;
}


#line 125
- (NSString *)getUnicodeVersion {
  return unicodeVersion_;
}


#line 131
- (IOSObjectArray *)getPresentDgs {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSString_class_()]];
}


#line 138
- (jboolean)isDg1Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG1"];
}


#line 145
- (jboolean)isDg2Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG2"];
}


#line 152
- (jboolean)isDg3Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG3"];
}


#line 159
- (jboolean)isDg4Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG4"];
}


#line 166
- (jboolean)isDg5Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG5"];
}


#line 173
- (jboolean)isDg6Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG6"];
}


#line 180
- (jboolean)isDg7Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG7"];
}


#line 187
- (jboolean)isDg8Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG8"];
}


#line 194
- (jboolean)isDg9Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG9"];
}


#line 201
- (jboolean)isDg10Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG10"];
}


#line 208
- (jboolean)isDg11Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG11"];
}


#line 215
- (jboolean)isDg12Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG12"];
}


#line 222
- (jboolean)isDg13Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG13"];
}


#line 229
- (jboolean)isDg14Present {
  return [((id<JavaUtilList>) nil_chk(presentDgs_)) containsWithId:@"DG14"];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(decodeValue);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(getDefaultTag);
  methods[4].selector = @selector(getLdsVersion);
  methods[5].selector = @selector(getUnicodeVersion);
  methods[6].selector = @selector(getPresentDgs);
  methods[7].selector = @selector(isDg1Present);
  methods[8].selector = @selector(isDg2Present);
  methods[9].selector = @selector(isDg3Present);
  methods[10].selector = @selector(isDg4Present);
  methods[11].selector = @selector(isDg5Present);
  methods[12].selector = @selector(isDg6Present);
  methods[13].selector = @selector(isDg7Present);
  methods[14].selector = @selector(isDg8Present);
  methods[15].selector = @selector(isDg9Present);
  methods[16].selector = @selector(isDg10Present);
  methods[17].selector = @selector(isDg11Present);
  methods[18].selector = @selector(isDg12Present);
  methods[19].selector = @selector(isDg13Present);
  methods[20].selector = @selector(isDg14Present);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_COM", "B", .constantValue.asChar = EsGobJmulticardAsn1IcaoCom_TAG_COM, 0x1a, -1, -1, -1, -1 },
    { "DOT", "C", .constantValue.asUnichar = EsGobJmulticardAsn1IcaoCom_DOT, 0x1a, -1, -1, -1, -1 },
    { "DGTAGS", "LJavaUtilAbstractMap;", .constantValue.asLong = 0, 0x1a, -1, 2, 3, -1 },
    { "ldsVersion_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "unicodeVersion_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "presentDgs_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardAsn1Asn1Exception;LEsGobJmulticardAsn1TlvException;", "toString", &EsGobJmulticardAsn1IcaoCom_DGTAGS, "Ljava/util/AbstractMap<Ljava/lang/Byte;Ljava/lang/String;>;", "Ljava/util/List<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1IcaoCom = { "Com", "es.gob.jmulticard.asn1.icao", ptrTable, methods, fields, 7, 0x11, 21, 6, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1IcaoCom;
}

+ (void)initialize {
  if (self == [EsGobJmulticardAsn1IcaoCom class]) {
    EsGobJmulticardAsn1IcaoCom_DGTAGS = new_JavaUtilHashMap_initWithInt_(
#line 25
    16);
    {
      
#line 27
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x61) withId:@"DG1"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x75) withId:@"DG2"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x63) withId:@"DG3"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x76) withId:@"DG4"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x65) withId:@"DG5"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x66) withId:@"DG6"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x67) withId:@"DG7"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x68) withId:@"DG8"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x69) withId:@"DG9"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x6a) withId:@"DG10"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x6b) withId:@"DG11"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x6c) withId:@"DG12"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x6d) withId:@"DG13"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x6e) withId:@"DG14"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x6f) withId:@"DG15"];
      (void) [EsGobJmulticardAsn1IcaoCom_DGTAGS putWithId:JavaLangByte_valueOfWithByte_((jbyte) (jint) 0x70) withId:@"DG16"];
    }
    J2OBJC_SET_INITIALIZED(EsGobJmulticardAsn1IcaoCom)
  }
}

@end


#line 20
void EsGobJmulticardAsn1IcaoCom_init(EsGobJmulticardAsn1IcaoCom *self) {
  EsGobJmulticardAsn1DecoderObject_init(self);
  self->ldsVersion_ =
#line 45
  nil;
  self->unicodeVersion_ = nil;
  self->presentDgs_ = new_JavaUtilArrayList_init();
}


#line 20
EsGobJmulticardAsn1IcaoCom *new_EsGobJmulticardAsn1IcaoCom_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1IcaoCom, init)
}


#line 20
EsGobJmulticardAsn1IcaoCom *create_EsGobJmulticardAsn1IcaoCom_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1IcaoCom, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1IcaoCom)

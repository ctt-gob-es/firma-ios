//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/icao/OptionalDetails.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/JmcLogger.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/icao/OptionalDetails.h"
#include "es/gob/jmulticard/card/icao/Gender.h"
#include "java/lang/Exception.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Arrays.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "java/util/regex/Pattern.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/icao/OptionalDetails must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardAsn1IcaoOptionalDetails () {
 @public
  JavaTextSimpleDateFormat *dateFormat_;
  IOSObjectArray *parsedValues_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1IcaoOptionalDetails, dateFormat_, JavaTextSimpleDateFormat *)
J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1IcaoOptionalDetails, parsedValues_, IOSObjectArray *)

inline jbyte EsGobJmulticardAsn1IcaoOptionalDetails_get_TAG(void);
#define EsGobJmulticardAsn1IcaoOptionalDetails_TAG 109
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1IcaoOptionalDetails, TAG, jbyte)

/*!
 @brief Identifica los pares de control 0x00-0x1F y 0x7F-0x9F).
 */
inline JavaUtilRegexPattern *EsGobJmulticardAsn1IcaoOptionalDetails_get_CONTROL_CHARACTER_WORD(void);
static JavaUtilRegexPattern *EsGobJmulticardAsn1IcaoOptionalDetails_CONTROL_CHARACTER_WORD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardAsn1IcaoOptionalDetails, CONTROL_CHARACTER_WORD, JavaUtilRegexPattern *)

inline id<JavaUtilList> EsGobJmulticardAsn1IcaoOptionalDetails_get_SPANISH_PROVINCES(void);
static id<JavaUtilList> EsGobJmulticardAsn1IcaoOptionalDetails_SPANISH_PROVINCES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(EsGobJmulticardAsn1IcaoOptionalDetails, SPANISH_PROVINCES, id<JavaUtilList>)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/icao/OptionalDetails.java"

J2OBJC_INITIALIZED_DEFN(EsGobJmulticardAsn1IcaoOptionalDetails)

NSString *EsGobJmulticardAsn1IcaoOptionalDetails_SPAIN = @"ESPA\u00d1A";


#line 21
@implementation EsGobJmulticardAsn1IcaoOptionalDetails

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 21
- (instancetype)init {
  EsGobJmulticardAsn1IcaoOptionalDetails_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 25
- (jbyte)getDefaultTag {
  
#line 27
  return EsGobJmulticardAsn1IcaoOptionalDetails_TAG;
}


#line 55
- (NSString *)getName {
  if (parsedValues_ != nil && parsedValues_->size_ > 3) {
    return IOSObjectArray_Get(parsedValues_, 3);
  }
  return @"";
}


#line 64
- (NSString *)getSecondSurname {
  if (parsedValues_ != nil && parsedValues_->size_ > 2) {
    return IOSObjectArray_Get(parsedValues_, 2);
  }
  return @"";
}


#line 73
- (NSString *)getFirstSurname {
  if (parsedValues_ != nil && parsedValues_->size_ > 1) {
    return IOSObjectArray_Get(parsedValues_, 1);
  }
  
#line 78
  return @"";
}


#line 83
- (NSString *)getIdNumber {
  if (parsedValues_ != nil && parsedValues_->size_ > 4) {
    return IOSObjectArray_Get(parsedValues_, 4);
  }
  return @"";
}


#line 93
- (JavaUtilDate *)getBirthDate {
  @synchronized(self) {
    
#line 94
    if (parsedValues_ != nil && parsedValues_->size_ > 5) {
      return JreRetainedLocalValue([((JavaTextSimpleDateFormat *) nil_chk(dateFormat_)) parseWithNSString:IOSObjectArray_Get(parsedValues_, 5)]);
    }
    return new_JavaUtilDate_init();
  }
}


#line 102
- (NSString *)getNationality {
  if (parsedValues_ != nil && parsedValues_->size_ > 6) {
    return IOSObjectArray_Get(parsedValues_, 6);
  }
  return @"";
}


#line 112
- (JavaUtilDate *)getExpirationDate {
  if (parsedValues_ != nil && parsedValues_->size_ > 7) {
    return [((JavaTextSimpleDateFormat *) nil_chk(dateFormat_)) parseWithNSString:IOSObjectArray_Get(parsedValues_, 7)];
  }
  return new_JavaUtilDate_init();
}


#line 121
- (NSString *)getSupportNumber {
  if (parsedValues_ != nil && parsedValues_->size_ > 7) {
    return IOSObjectArray_Get(parsedValues_, 8);
  }
  return @"";
}


#line 130
- (EsGobJmulticardCardIcaoGender *)getSex {
  if (parsedValues_ != nil && parsedValues_->size_ > 9) {
    return EsGobJmulticardCardIcaoGender_getGenderWithNSString_(IOSObjectArray_Get(parsedValues_, 9));
  }
  return JreLoadEnum(EsGobJmulticardCardIcaoGender, OTHER);
}


#line 139
- (NSString *)getBirthCity {
  if (parsedValues_ != nil && parsedValues_->size_ > 10) {
    return IOSObjectArray_Get(parsedValues_, 10);
  }
  return @"";
}


#line 148
- (NSString *)getBirthProvince {
  if (parsedValues_ != nil && parsedValues_->size_ > 11) {
    if ([((id<JavaUtilList>) nil_chk(EsGobJmulticardAsn1IcaoOptionalDetails_SPANISH_PROVINCES)) containsWithId:[((NSString *) nil_chk(IOSObjectArray_Get(parsedValues_, 11))) uppercaseString]]) {
      return IOSObjectArray_Get(nil_chk(parsedValues_), 11);
    }
    return IOSObjectArray_Get(nil_chk(parsedValues_), 10);
  }
  return @"";
}


#line 160
- (NSString *)getBirthCountry {
  if (parsedValues_ != nil && parsedValues_->size_ > 11) {
    if ([((id<JavaUtilList>) nil_chk(EsGobJmulticardAsn1IcaoOptionalDetails_SPANISH_PROVINCES)) containsWithId:[((NSString *) nil_chk(IOSObjectArray_Get(parsedValues_, 11))) uppercaseString]]) {
      return EsGobJmulticardAsn1IcaoOptionalDetails_SPAIN;
    }
    return IOSObjectArray_Get(nil_chk(parsedValues_), 11);
  }
  return @"";
}


#line 172
- (NSString *)getParentsNames {
  if (parsedValues_ != nil && parsedValues_->size_ > 12) {
    return IOSObjectArray_Get(parsedValues_, 12);
  }
  return @"";
}


#line 181
- (NSString *)getAddress {
  if (parsedValues_ != nil && parsedValues_->size_ > 13) {
    return IOSObjectArray_Get(parsedValues_, 13);
  }
  return @"";
}


#line 190
- (NSString *)getCity {
  if (parsedValues_ != nil && parsedValues_->size_ > 14) {
    return IOSObjectArray_Get(parsedValues_, 14);
  }
  return @"";
}


#line 199
- (NSString *)getCountry {
  if (parsedValues_ != nil && parsedValues_->size_ > 16) {
    if ([((id<JavaUtilList>) nil_chk(EsGobJmulticardAsn1IcaoOptionalDetails_SPANISH_PROVINCES)) containsWithId:[((NSString *) nil_chk(IOSObjectArray_Get(parsedValues_, 16))) uppercaseString]]) {
      return EsGobJmulticardAsn1IcaoOptionalDetails_SPAIN;
    }
    return IOSObjectArray_Get(nil_chk(parsedValues_), 16);
  }
  return @"";
}


#line 211
- (NSString *)getProvince {
  if (parsedValues_ != nil && parsedValues_->size_ > 16) {
    if (![((NSString *) nil_chk(IOSObjectArray_Get(parsedValues_, 15))) java_isEmpty]) {
      return IOSObjectArray_Get(nil_chk(parsedValues_), 15);
    }
    return IOSObjectArray_Get(nil_chk(parsedValues_), 16);
  }
  return @"";
}

- (void)decodeValue {
  
#line 223
  [self checkTagWithByte:IOSByteArray_Get(nil_chk([self getBytes]), 0)];
  @try {
    parsedValues_ = [[NSString java_stringWithBytes:[self getBytes]] java_split:[((JavaUtilRegexPattern *) nil_chk(EsGobJmulticardAsn1IcaoOptionalDetails_CONTROL_CHARACTER_WORD)) pattern]];
  }
  @catch (JavaLangException *e) {
    EsGobJmulticardJmcLogger_warningWithNSString_(JreStrcat("$@", @"El DG13 esta en un formato no soportado: ", e));
  }
}


#line 232
- (NSString *)description {
  
#line 234
  NSString *birthDate;
  @try {
    birthDate = [((JavaTextSimpleDateFormat *) nil_chk(dateFormat_)) formatWithJavaUtilDate:[self getBirthDate]];
  }
  @catch (JavaTextParseException *e) {
    birthDate = JreStrcat("$@", @"Error: ", e);
  }
  NSString *expirationDate;
  @try {
    expirationDate = [dateFormat_ formatWithJavaUtilDate:[self getExpirationDate]];
  }
  @catch (JavaTextParseException *e) {
    expirationDate = JreStrcat("$@", @"Error: ", e);
  }
  return JreStrcat("$$$$$$$$$$$$$$$$$$$$$@$$$$$$$$$$$$", @"Detalles opcionales (DG13):\n  Nombre del titular: ",
#line 250
  [self getName], @"\n  Primer apellido del titular: ",
#line 251
  [self getFirstSurname], @"\n  Segundo apellido del titular: ",
#line 252
  [self getSecondSurname], @"\n  Numero del DNI del titular: ",
#line 253
  [self getIdNumber], @"\n  Nacionalidad del titular: ",
#line 254
  [self getNationality], @"\n  Fecha de nacimiento del titular: ",
#line 255
  birthDate, @"\n  Ciudad de nacimiento del titular: ",
#line 256
  [self getBirthCity], @"\n  Provincia de nacimiento del titular: ",
#line 257
  [self getBirthProvince], @"\n  Pais de nacimiento del titular: ",
#line 258
  [self getBirthCountry], @"\n  Nombres de los padres del titular: ",
#line 259
  [self getParentsNames], @"\n  Sexo del titular: ",
#line 260
  [self getSex], @"\n  Direccion de residencia del titular: ",
#line 261
  [self getAddress], @"\n  Ciudad de residencia del titular: ",
#line 262
  [self getCity], @"\n  Provincia de residencia del titular: ",
#line 263
  [self getProvince], @"\n  Pais de residencia del titular: ",
#line 264
  [self getCountry], @"\n  Fecha de caducidad del DNI: ",
#line 265
  expirationDate, @"\n  Numero de soporte del DNI: ",
#line 266
  [self getSupportNumber]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x21, -1, -1, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardCardIcaoGender;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDefaultTag);
  methods[2].selector = @selector(getName);
  methods[3].selector = @selector(getSecondSurname);
  methods[4].selector = @selector(getFirstSurname);
  methods[5].selector = @selector(getIdNumber);
  methods[6].selector = @selector(getBirthDate);
  methods[7].selector = @selector(getNationality);
  methods[8].selector = @selector(getExpirationDate);
  methods[9].selector = @selector(getSupportNumber);
  methods[10].selector = @selector(getSex);
  methods[11].selector = @selector(getBirthCity);
  methods[12].selector = @selector(getBirthProvince);
  methods[13].selector = @selector(getBirthCountry);
  methods[14].selector = @selector(getParentsNames);
  methods[15].selector = @selector(getAddress);
  methods[16].selector = @selector(getCity);
  methods[17].selector = @selector(getCountry);
  methods[18].selector = @selector(getProvince);
  methods[19].selector = @selector(decodeValue);
  methods[20].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "B", .constantValue.asChar = EsGobJmulticardAsn1IcaoOptionalDetails_TAG, 0x1a, -1, -1, -1, -1 },
    { "CONTROL_CHARACTER_WORD", "LJavaUtilRegexPattern;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
    { "dateFormat_", "LJavaTextSimpleDateFormat;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "SPAIN", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
    { "SPANISH_PROVINCES", "LJavaUtilList;", .constantValue.asLong = 0, 0x1a, -1, 5, 6, -1 },
    { "parsedValues_", "[LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaTextParseException;", "LEsGobJmulticardAsn1Asn1Exception;LEsGobJmulticardAsn1TlvException;", "toString", &EsGobJmulticardAsn1IcaoOptionalDetails_CONTROL_CHARACTER_WORD, &EsGobJmulticardAsn1IcaoOptionalDetails_SPAIN, &EsGobJmulticardAsn1IcaoOptionalDetails_SPANISH_PROVINCES, "Ljava/util/List<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1IcaoOptionalDetails = { "OptionalDetails", "es.gob.jmulticard.asn1.icao", ptrTable, methods, fields, 7, 0x1, 21, 6, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1IcaoOptionalDetails;
}

+ (void)initialize {
  if (self == [EsGobJmulticardAsn1IcaoOptionalDetails class]) {
    EsGobJmulticardAsn1IcaoOptionalDetails_CONTROL_CHARACTER_WORD = JavaUtilRegexPattern_compileWithNSString_(
#line 31
    @"\\p{Cc}{2}");
    EsGobJmulticardAsn1IcaoOptionalDetails_SPANISH_PROVINCES = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray newArrayWithObjects:(id[]){
#line 39
      @"ARABA/ALAVA", @"ALBACETE", @"ALICANTE-ALACANT", @"ALMERIA", @"ASTURIAS",
#line 40
      @"AVILA", @"BADAJOZ", @"BARCELONA", @"BURGOS", @"CACERES",
#line 41
      @"CADIZ", @"CANTABRIA", @"CIUDAD REAL", @"CORDOBA", @"A CORU\u00d1A",
#line 42
      @"CUENCA", @"GIRONA", @"GRANADA", @"GUADALAJARA", @"GIPUZKOA",
#line 43
      @"HUELVA", @"HUESCA", @"ILLES BALEARS", @"JAEN", @"LEON",
#line 44
      @"LLEIDA", @"LUGO", @"MADRID", @"MALAGA", @"MURCIA",
#line 45
      @"NAVARRA", @"OURENSE", @"PALENCIA", @"LAS PALMAS", @"PONTEVEDRA",
#line 46
      @"LA RIOJA", @"SEGOVIA", @"SEVILLA", @"SORIA", @"TARRAGONA",
#line 47
      @"SANTA CRUZ DE TENERIFE", @"TERUEL", @"TOLEDA", @"VALENCIA-VALENCIA", @"VALLADOLID",
#line 48
      @"BIZKAIA", @"ZAMORA", @"ZARAGOZA", @"CEUTA", @"MELILLA" } count:50 type:NSString_class_()]);
      J2OBJC_SET_INITIALIZED(EsGobJmulticardAsn1IcaoOptionalDetails)
    }
  }

@end


#line 21
void EsGobJmulticardAsn1IcaoOptionalDetails_init(EsGobJmulticardAsn1IcaoOptionalDetails *self) {
  EsGobJmulticardAsn1DecoderObject_init(self);
  self->dateFormat_ = new_JavaTextSimpleDateFormat_initWithNSString_(
#line 33
  @"dd MM yyyy");
  self->parsedValues_ =
#line 51
  nil;
}


#line 21
EsGobJmulticardAsn1IcaoOptionalDetails *new_EsGobJmulticardAsn1IcaoOptionalDetails_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1IcaoOptionalDetails, init)
}


#line 21
EsGobJmulticardAsn1IcaoOptionalDetails *create_EsGobJmulticardAsn1IcaoOptionalDetails_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1IcaoOptionalDetails, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1IcaoOptionalDetails)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/icao/SecurityOptions.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/icao/SecurityOptions.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/icao/SecurityOptions must be compiled with ARC (-fobjc-arc)"
#endif

inline jbyte EsGobJmulticardAsn1IcaoSecurityOptions_get_TAG(void);
#define EsGobJmulticardAsn1IcaoSecurityOptions_TAG 110
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1IcaoSecurityOptions, TAG, jbyte)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/icao/SecurityOptions.java"


#line 20
@implementation EsGobJmulticardAsn1IcaoSecurityOptions

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 20
- (instancetype)init {
  EsGobJmulticardAsn1IcaoSecurityOptions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 24
- (void)decodeValue {
  
#line 26
  [self checkTagWithByte:IOSByteArray_Get(nil_chk([self getBytes]), 0)];
}


#line 29
- (jbyte)getDefaultTag {
  
#line 31
  return EsGobJmulticardAsn1IcaoSecurityOptions_TAG;
}


#line 34
- (NSString *)description {
  
#line 36
  return EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([self getBytes], true);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(decodeValue);
  methods[2].selector = @selector(getDefaultTag);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "B", .constantValue.asChar = EsGobJmulticardAsn1IcaoSecurityOptions_TAG, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardAsn1Asn1Exception;LEsGobJmulticardAsn1TlvException;", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1IcaoSecurityOptions = { "SecurityOptions", "es.gob.jmulticard.asn1.icao", ptrTable, methods, fields, 7, 0x11, 4, 1, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1IcaoSecurityOptions;
}

@end


#line 20
void EsGobJmulticardAsn1IcaoSecurityOptions_init(EsGobJmulticardAsn1IcaoSecurityOptions *self) {
  EsGobJmulticardAsn1DecoderObject_init(self);
}


#line 20
EsGobJmulticardAsn1IcaoSecurityOptions *new_EsGobJmulticardAsn1IcaoSecurityOptions_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1IcaoSecurityOptions, init)
}


#line 20
EsGobJmulticardAsn1IcaoSecurityOptions *create_EsGobJmulticardAsn1IcaoSecurityOptions_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1IcaoSecurityOptions, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1IcaoSecurityOptions)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/bertlv/BitManipulationHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardAsn1BertlvBitManipulationHelper")
#ifdef RESTRICT_EsGobJmulticardAsn1BertlvBitManipulationHelper
#define INCLUDE_ALL_EsGobJmulticardAsn1BertlvBitManipulationHelper 0
#else
#define INCLUDE_ALL_EsGobJmulticardAsn1BertlvBitManipulationHelper 1
#endif
#undef RESTRICT_EsGobJmulticardAsn1BertlvBitManipulationHelper

#if !defined (EsGobJmulticardAsn1BertlvBitManipulationHelper_) && (INCLUDE_ALL_EsGobJmulticardAsn1BertlvBitManipulationHelper || defined(INCLUDE_EsGobJmulticardAsn1BertlvBitManipulationHelper))
#define EsGobJmulticardAsn1BertlvBitManipulationHelper_

@class IOSByteArray;

/*!
 @brief Utilidades para la manipulaci&oacute;n de bits y octetos.
 @author Isaac Levin
 */
@interface EsGobJmulticardAsn1BertlvBitManipulationHelper : NSObject

#pragma mark Package-Private

/*!
 @brief Obtiene el valor del bit de la posici&oacute;n indicada.
 @param value Valor entero a considerar como binario de entrada.
 @param position Posici &oacute; n del bit, empezando desde 1.
 @return <code>true</code> si el valor del bit es 1, <code>false</code>
          si es 0.
 */
+ (jboolean)getBitValueWithInt:(jint)value
                       withInt:(jint)position;

+ (IOSByteArray *)mergeArraysWithByteArray:(IOSByteArray *)buf1
                             withByteArray:(IOSByteArray *)buf2;

/*!
 @brief Establece el valor del bit de la posici&oacute;n indicada.
 @param value Valor entero a considerar como binario de entrada.
 @param position Posici &oacute; n del bit, empezando desde 1.
 @param bitValue Valor a establecer,  <code> true </code>  para 1,  <code> false </code>  para 0.
 @return Valor entero, considerado como binario, con el bit indicado cambiado.
 */
+ (jint)setBitValueWithInt:(jint)value
                   withInt:(jint)position
               withBoolean:(jboolean)bitValue;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardAsn1BertlvBitManipulationHelper)

FOUNDATION_EXPORT jboolean EsGobJmulticardAsn1BertlvBitManipulationHelper_getBitValueWithInt_withInt_(jint value, jint position);

FOUNDATION_EXPORT jint EsGobJmulticardAsn1BertlvBitManipulationHelper_setBitValueWithInt_withInt_withBoolean_(jint value, jint position, jboolean bitValue);

FOUNDATION_EXPORT IOSByteArray *EsGobJmulticardAsn1BertlvBitManipulationHelper_mergeArraysWithByteArray_withByteArray_(IOSByteArray *buf1, IOSByteArray *buf2);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardAsn1BertlvBitManipulationHelper)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardAsn1BertlvBitManipulationHelper")

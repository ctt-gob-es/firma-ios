//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/bertlv/BerTlv.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardAsn1BertlvBerTlv")
#ifdef RESTRICT_EsGobJmulticardAsn1BertlvBerTlv
#define INCLUDE_ALL_EsGobJmulticardAsn1BertlvBerTlv 0
#else
#define INCLUDE_ALL_EsGobJmulticardAsn1BertlvBerTlv 1
#endif
#undef RESTRICT_EsGobJmulticardAsn1BertlvBerTlv

#if !defined (EsGobJmulticardAsn1BertlvBerTlv_) && (INCLUDE_ALL_EsGobJmulticardAsn1BertlvBerTlv || defined(INCLUDE_EsGobJmulticardAsn1BertlvBerTlv))
#define EsGobJmulticardAsn1BertlvBerTlv_

@class IOSByteArray;
@class JavaIoByteArrayInputStream;

/*!
 @brief TLV seg&uacute;n ASN&#46;1 BER.Soporta etiquetas de doble octeto.
 @author Isaac Levin.
 */
@interface EsGobJmulticardAsn1BertlvBerTlv : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Obtiene una instancia del TLV.
 @param stream Representaci &oacute; n binaria del TLV.
 @return Instancia del TLV.
 */
+ (EsGobJmulticardAsn1BertlvBerTlv *)createInstanceWithByteArray:(IOSByteArray *)stream;

/*!
 @brief Obtiene una instancia del TLV.
 @param stream Flujo hacia la representaci &oacute; n binaria del TLV.                El flujo se devuelve con avanzado hasta el final del TLV.
 @return Instancia del TLV.
 */
+ (EsGobJmulticardAsn1BertlvBerTlv *)createInstanceWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)stream;

/*!
 @brief Obtiene la longitud de los datos del valor del TLV.
 @return Longitud de los datos del valor del TLV.
 */
- (jint)getLength;

/*!
 @brief Obtiene la etiqueta (tipo) del TLV.
 @return Etiqueta (tipo) del TLV.
 */
- (jbyte)getTag;

/*!
 @brief Obtiene el valor del TLV.
 @return Valor del TLV.
 */
- (IOSByteArray *)getValue;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardAsn1BertlvBerTlv)

FOUNDATION_EXPORT void EsGobJmulticardAsn1BertlvBerTlv_init(EsGobJmulticardAsn1BertlvBerTlv *self);

FOUNDATION_EXPORT EsGobJmulticardAsn1BertlvBerTlv *new_EsGobJmulticardAsn1BertlvBerTlv_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardAsn1BertlvBerTlv *create_EsGobJmulticardAsn1BertlvBerTlv_init(void);

FOUNDATION_EXPORT EsGobJmulticardAsn1BertlvBerTlv *EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithByteArray_(IOSByteArray *stream);

FOUNDATION_EXPORT EsGobJmulticardAsn1BertlvBerTlv *EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *stream);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardAsn1BertlvBerTlv)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardAsn1BertlvBerTlv")

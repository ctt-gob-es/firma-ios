//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/bertlv/BerTlv.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/asn1/bertlv/BerTlv.h"
#include "es/gob/jmulticard/asn1/bertlv/BerTlvIdentifier.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/System.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/bertlv/BerTlv must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardAsn1BertlvBerTlv () {
 @public
  EsGobJmulticardAsn1BertlvBerTlvIdentifier *tag_;
  jint length_;
  IOSByteArray *value_;
}

- (void)decodeWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)stream;

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1BertlvBerTlv, tag_, EsGobJmulticardAsn1BertlvBerTlvIdentifier *)
J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1BertlvBerTlv, value_, IOSByteArray *)

__attribute__((unused)) static void EsGobJmulticardAsn1BertlvBerTlv_decodeWithJavaIoByteArrayInputStream_(EsGobJmulticardAsn1BertlvBerTlv *self, JavaIoByteArrayInputStream *stream);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/bertlv/BerTlv.java"


#line 24
@implementation EsGobJmulticardAsn1BertlvBerTlv

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 24
- (instancetype)init {
  EsGobJmulticardAsn1BertlvBerTlv_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 32
- (jbyte)getTag {
  return (jbyte) [((EsGobJmulticardAsn1BertlvBerTlvIdentifier *) nil_chk(tag_)) getTagValue];
}


#line 38
- (IOSByteArray *)getValue {
  if (value_ == nil) {
    return nil;
  }
  IOSByteArray *out = [IOSByteArray newArrayWithLength:value_->size_];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(value_, 0, out, 0, value_->size_);
  return out;
}


#line 49
- (jint)getLength {
  return length_;
}


#line 56
+ (EsGobJmulticardAsn1BertlvBerTlv *)createInstanceWithByteArray:(IOSByteArray *)stream {
  return EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithByteArray_(stream);
}


#line 66
+ (EsGobJmulticardAsn1BertlvBerTlv *)createInstanceWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)stream {
  return EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithJavaIoByteArrayInputStream_(stream);
}


#line 72
- (void)decodeWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)stream {
  EsGobJmulticardAsn1BertlvBerTlv_decodeWithJavaIoByteArrayInputStream_(self, stream);
}


#line 127
- (NSString *)description {
  
#line 129
  return JreStrcat("$@$I$$C", @"[TLV: T=", tag_, @"; L=", length_, @"d; V=",
#line 130
  (value_ == nil ? @"null" : EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_(value_, false)), ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1BertlvBerTlv;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1BertlvBerTlv;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getTag);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(getLength);
  methods[4].selector = @selector(createInstanceWithByteArray:);
  methods[5].selector = @selector(createInstanceWithJavaIoByteArrayInputStream:);
  methods[6].selector = @selector(decodeWithJavaIoByteArrayInputStream:);
  methods[7].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tag_", "LEsGobJmulticardAsn1BertlvBerTlvIdentifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "value_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createInstance", "[B", "LJavaIoByteArrayInputStream;", "decode", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1BertlvBerTlv = { "BerTlv", "es.gob.jmulticard.asn1.bertlv", ptrTable, methods, fields, 7, 0x11, 8, 3, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1BertlvBerTlv;
}

@end


#line 24
void EsGobJmulticardAsn1BertlvBerTlv_init(EsGobJmulticardAsn1BertlvBerTlv *self) {
  NSObject_init(self);
}


#line 24
EsGobJmulticardAsn1BertlvBerTlv *new_EsGobJmulticardAsn1BertlvBerTlv_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1BertlvBerTlv, init)
}


#line 24
EsGobJmulticardAsn1BertlvBerTlv *create_EsGobJmulticardAsn1BertlvBerTlv_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1BertlvBerTlv, init)
}


#line 56
EsGobJmulticardAsn1BertlvBerTlv *EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithByteArray_(IOSByteArray *stream) {
  EsGobJmulticardAsn1BertlvBerTlv_initialize();
  
#line 57
  EsGobJmulticardAsn1BertlvBerTlv *tlv = new_EsGobJmulticardAsn1BertlvBerTlv_init();
  EsGobJmulticardAsn1BertlvBerTlv_decodeWithJavaIoByteArrayInputStream_(tlv, new_JavaIoByteArrayInputStream_initWithByteArray_(stream));
  return tlv;
}


#line 66
EsGobJmulticardAsn1BertlvBerTlv *EsGobJmulticardAsn1BertlvBerTlv_createInstanceWithJavaIoByteArrayInputStream_(JavaIoByteArrayInputStream *stream) {
  EsGobJmulticardAsn1BertlvBerTlv_initialize();
  
#line 67
  EsGobJmulticardAsn1BertlvBerTlv *tlv = new_EsGobJmulticardAsn1BertlvBerTlv_init();
  EsGobJmulticardAsn1BertlvBerTlv_decodeWithJavaIoByteArrayInputStream_(tlv, stream);
  return tlv;
}


#line 72
void EsGobJmulticardAsn1BertlvBerTlv_decodeWithJavaIoByteArrayInputStream_(EsGobJmulticardAsn1BertlvBerTlv *self, JavaIoByteArrayInputStream *stream) {
  
#line 74
  self->tag_ = new_EsGobJmulticardAsn1BertlvBerTlvIdentifier_initPackagePrivate();
  [self->tag_ decodeWithJavaIoByteArrayInputStream:stream];
  
#line 78
  jint tmpLength = [((JavaIoByteArrayInputStream *) nil_chk(stream)) read];
  if (tmpLength > 127 && tmpLength != 128) {
    
#line 81
    jint numberOfLengthOctets = tmpLength & 127;
    tmpLength = 0;
    for (jint i = 0; i < numberOfLengthOctets; i++) {
      jint nextLengthOctet = [stream read];
      JreLShiftAssignInt(&tmpLength, 8);
      tmpLength |= nextLengthOctet;
    }
  }
  self->length_ = tmpLength;
  
#line 92
  if (self->length_ == 128) {
    
#line 94
    [stream markWithInt:0];
    jint prevOctet = 1;
    jint curOctet = 0;
    jint len = 0;
    while (true) {
      len++;
      curOctet = [stream read];
      if (prevOctet == 0 && curOctet == 0) {
        break;
      }
      prevOctet = curOctet;
    }
    len -= 2;
    self->value_ = [IOSByteArray newArrayWithLength:len];
    [stream reset];
    if (len != [stream readWithByteArray:self->value_ withInt:0 withInt:len]) {
      @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(
#line 111
      @"La longitud de los datos leidos no coincide con el parametro indicado");
    }
    
#line 114
    self->length_ = len;
  }
  else {
    
#line 118
    self->value_ = [IOSByteArray newArrayWithLength:self->length_];
    if (self->length_ != [stream readWithByteArray:self->value_ withInt:0 withInt:self->length_]) {
      @throw new_JavaLangIndexOutOfBoundsException_initWithNSString_(
#line 121
      @"La longitud de los datos leidos no coincide con el parametro indicado");
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1BertlvBerTlv)

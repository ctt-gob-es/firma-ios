//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/GeneralizedTime.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/asn1/Asn1Exception.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/Tlv.h"
#include "es/gob/jmulticard/asn1/der/GeneralizedTime.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/StandardCharsets.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/der/GeneralizedTime must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardAsn1DerGeneralizedTime () {
 @public
  NSString *strValue_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1DerGeneralizedTime, strValue_, NSString *)

/*!
 @brief Tipo ASN&#46;1 "GeneralizedTime".
 */
inline jbyte EsGobJmulticardAsn1DerGeneralizedTime_get_TAG(void);
#define EsGobJmulticardAsn1DerGeneralizedTime_TAG 24
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1DerGeneralizedTime, TAG, jbyte)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/GeneralizedTime.java"


#line 55
@implementation EsGobJmulticardAsn1DerGeneralizedTime

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 55
- (instancetype)init {
  EsGobJmulticardAsn1DerGeneralizedTime_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 60
- (jbyte)getDefaultTag {
  
#line 62
  return EsGobJmulticardAsn1DerGeneralizedTime_TAG;
}


#line 67
- (void)decodeValue {
  
#line 69
  EsGobJmulticardAsn1Tlv *tlv = new_EsGobJmulticardAsn1Tlv_initWithByteArray_([self getBytes]);
  [self checkTagWithByte:[tlv getTag]];
  strValue_ = [NSString java_stringWithBytes:[tlv getValue] charset:JreLoadStatic(JavaNioCharsetStandardCharsets, US_ASCII)];
}


#line 77
- (JavaUtilDate *)getDateValue {
  @try {
    return [new_JavaTextSimpleDateFormat_initWithNSString_(@"yyyyMMdd") parseWithNSString:[((NSString *) nil_chk(strValue_)) java_substring:0 endIndex:8]];
  }
  @catch (JavaTextParseException *e) {
    @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"La fecha no estaba en el formato esperado: ", strValue_), e);
  }
}

- (NSString *)description {
  
#line 88
  return strValue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDefaultTag);
  methods[2].selector = @selector(decodeValue);
  methods[3].selector = @selector(getDateValue);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "B", .constantValue.asChar = EsGobJmulticardAsn1DerGeneralizedTime_TAG, 0x1a, -1, -1, -1, -1 },
    { "strValue_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardAsn1Asn1Exception;LEsGobJmulticardAsn1TlvException;", "LEsGobJmulticardAsn1Asn1Exception;", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1DerGeneralizedTime = { "GeneralizedTime", "es.gob.jmulticard.asn1.der", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1DerGeneralizedTime;
}

@end


#line 55
void EsGobJmulticardAsn1DerGeneralizedTime_init(EsGobJmulticardAsn1DerGeneralizedTime *self) {
  EsGobJmulticardAsn1DecoderObject_init(self);
  self->strValue_ =
#line 65
  nil;
}


#line 55
EsGobJmulticardAsn1DerGeneralizedTime *new_EsGobJmulticardAsn1DerGeneralizedTime_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1DerGeneralizedTime, init)
}


#line 55
EsGobJmulticardAsn1DerGeneralizedTime *create_EsGobJmulticardAsn1DerGeneralizedTime_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1DerGeneralizedTime, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1DerGeneralizedTime)

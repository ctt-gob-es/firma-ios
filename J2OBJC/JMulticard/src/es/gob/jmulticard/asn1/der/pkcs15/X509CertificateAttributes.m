//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/pkcs15/X509CertificateAttributes.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/OptionalDecoderObjectElement.h"
#include "es/gob/jmulticard/asn1/der/DerInteger.h"
#include "es/gob/jmulticard/asn1/der/Sequence.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/CertificateIssuerContextSpecific.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/Path.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/X509CertificateAttributes.h"
#include "es/gob/jmulticard/asn1/der/x509/RdnSequence.h"
#include "java/math/BigInteger.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/der/pkcs15/X509CertificateAttributes must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes ()

- (EsGobJmulticardAsn1DecoderObject *)getObjectWithIOSClass:(IOSClass *)objectType;

@end

__attribute__((unused)) static EsGobJmulticardAsn1DecoderObject *EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes *self, IOSClass *objectType);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/pkcs15/X509CertificateAttributes.java"


#line 64
@implementation EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 90
- (NSString *)getIssuer {
  EsGobJmulticardAsn1DecoderObject *d = EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(self, EsGobJmulticardAsn1DerPkcs15CertificateIssuerContextSpecific_class_());
  if (d == nil) {
    return nil;
  }
  return [d description];
}


#line 100
- (NSString *)getSubject {
  EsGobJmulticardAsn1DecoderObject *d = EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(self, EsGobJmulticardAsn1DerX509RdnSequence_class_());
  if (d == nil) {
    return nil;
  }
  return [d description];
}


#line 110
- (NSString *)getPath {
  EsGobJmulticardAsn1DecoderObject *d = EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(self, EsGobJmulticardAsn1DerPkcs15Path_class_());
  if (d == nil) {
    return nil;
  }
  return [((EsGobJmulticardAsn1DerPkcs15Path *) cast_chk(d, [EsGobJmulticardAsn1DerPkcs15Path class])) getPathString];
}


#line 120
- (IOSByteArray *)getPathBytes {
  EsGobJmulticardAsn1DecoderObject *d = EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(self, EsGobJmulticardAsn1DerPkcs15Path_class_());
  if (d == nil) {
    return nil;
  }
  return [((EsGobJmulticardAsn1DerPkcs15Path *) cast_chk(d, [EsGobJmulticardAsn1DerPkcs15Path class])) getPathBytes];
}


#line 130
- (JavaMathBigInteger *)getSerialNumber {
  EsGobJmulticardAsn1DecoderObject *d = EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(self, EsGobJmulticardAsn1DerDerInteger_class_());
  if (d == nil) {
    return nil;
  }
  return [((EsGobJmulticardAsn1DerDerInteger *) cast_chk(d, [EsGobJmulticardAsn1DerDerInteger class])) getIntegerValue];
}

- (EsGobJmulticardAsn1DecoderObject *)getObjectWithIOSClass:(IOSClass *)objectType {
  return EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(self, objectType);
}


#line 150
- (NSString *)description {
  
#line 152
  return JreStrcat("$$$$$", @"Atributos del certificado\n Ruta: ",
#line 153
  [self getPath],
#line 154
  ([self getSubject] != nil ? JreStrcat("$$", @"\n Titular: ", [self getSubject]) : @""),
#line 155
  ([self getIssuer] != nil ? JreStrcat("$$", @"\n Emisor: ", [self getIssuer]) : @""),
#line 156
  ([self getSerialNumber] != nil ? JreStrcat("$$", @"\n Numero de serie: ", [((JavaMathBigInteger *) nil_chk([self getSerialNumber])) description]) : @""));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1DecoderObject;", 0x2, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getIssuer);
  methods[2].selector = @selector(getSubject);
  methods[3].selector = @selector(getPath);
  methods[4].selector = @selector(getPathBytes);
  methods[5].selector = @selector(getSerialNumber);
  methods[6].selector = @selector(getObjectWithIOSClass:);
  methods[7].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getObject", "LIOSClass;", "(Ljava/lang/Class<*>;)Les/gob/jmulticard/asn1/DecoderObject;", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes = { "X509CertificateAttributes", "es.gob.jmulticard.asn1.der.pkcs15", ptrTable, methods, NULL, 7, 0x11, 8, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes;
}

@end


#line 67
void EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_init(EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes *self) {
  EsGobJmulticardAsn1DerSequence_initWithEsGobJmulticardAsn1OptionalDecoderObjectElementArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 70
  EsGobJmulticardAsn1DerPkcs15Path_class_(),
#line 71
  false), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 74
  EsGobJmulticardAsn1DerX509RdnSequence_class_(),
#line 75
  true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 78
  EsGobJmulticardAsn1DerPkcs15CertificateIssuerContextSpecific_class_(),
#line 79
  true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 82
  EsGobJmulticardAsn1DerDerInteger_class_(),
#line 83
  true) } count:4 type:EsGobJmulticardAsn1OptionalDecoderObjectElement_class_()]);
}


#line 67
EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes *new_EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes, init)
}


#line 67
EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes *create_EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes, init)
}


#line 138
EsGobJmulticardAsn1DecoderObject *EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes_getObjectWithIOSClass_(EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes *self, IOSClass *objectType) {
  if (objectType == nil) {
    return nil;
  }
  for (jint i = 0; i < [self getElementCount]; i++) {
    if ([[((EsGobJmulticardAsn1DecoderObject *) nil_chk([self getElementAtWithInt:i])) java_getClass] isEqual:objectType]) {
      return [self getElementAtWithInt:i];
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1DerPkcs15X509CertificateAttributes)

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/SequenceOf.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/asn1/Asn1Exception.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/Tlv.h"
#include "es/gob/jmulticard/asn1/der/SequenceOf.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/lang/reflect/Constructor.h"
#include "java/util/LinkedList.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/der/SequenceOf must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardAsn1DerSequenceOf () {
 @public
  IOSClass *elementsType_;
  JavaUtilLinkedList *sequenceObjects_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1DerSequenceOf, elementsType_, IOSClass *)
J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1DerSequenceOf, sequenceObjects_, JavaUtilLinkedList *)

/*!
 @brief Tipo ASN&#46;1 <i>SequenceOf</i>.
 */
inline jbyte EsGobJmulticardAsn1DerSequenceOf_get_TAG_SEQUENCE(void);
#define EsGobJmulticardAsn1DerSequenceOf_TAG_SEQUENCE 48
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1DerSequenceOf, TAG_SEQUENCE, jbyte)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/SequenceOf.java"


#line 51
@implementation EsGobJmulticardAsn1DerSequenceOf


#line 60
- (void)decodeValue {
  
#line 62
  EsGobJmulticardAsn1Tlv *tlv = new_EsGobJmulticardAsn1Tlv_initWithByteArray_([self getBytes]);
  [self checkTagWithByte:[tlv getTag]];
  jint offset = 0;
  IOSByteArray *remainingBytes;
  EsGobJmulticardAsn1DecoderObject *tmpDo;
  IOSByteArray *valueBytes = [tlv getValue];
  sequenceObjects_ = new_JavaUtilLinkedList_init();
  while (offset < ((IOSByteArray *) nil_chk(valueBytes))->size_) {
    remainingBytes = [IOSByteArray newArrayWithLength:valueBytes->size_ - offset];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(valueBytes, offset, remainingBytes, 0, remainingBytes->size_);
    tlv = new_EsGobJmulticardAsn1Tlv_initWithByteArray_(remainingBytes);
    @try {
      tmpDo = [((JavaLangReflectConstructor *) nil_chk([((IOSClass *) nil_chk(elementsType_)) getConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]])) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]];
    }
    @catch (JavaLangException *e) {
      @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_withJavaLangThrowable_(JreStrcat("$$$", @"No se ha podido instanciar un ",
#line 78
      [elementsType_ getName], @" en la secuencia"), e);
    }
    
#line 81
    offset = offset + ((IOSByteArray *) nil_chk([tlv getBytes]))->size_;
    [((EsGobJmulticardAsn1DecoderObject *) nil_chk(tmpDo)) checkTagWithByte:[tlv getTag]];
    [tmpDo setDerValueWithByteArray:[tlv getBytes]];
    [((JavaUtilLinkedList *) nil_chk(sequenceObjects_)) addWithId:tmpDo];
  }
}

- (instancetype)initWithIOSClass:(IOSClass *)type {
  EsGobJmulticardAsn1DerSequenceOf_initWithIOSClass_(self, type);
  return self;
}


#line 98
- (jbyte)getDefaultTag {
  
#line 100
  return EsGobJmulticardAsn1DerSequenceOf_TAG_SEQUENCE;
}


#line 107
- (EsGobJmulticardAsn1DecoderObject *)getElementAtWithInt:(jint)index {
  return [((JavaUtilLinkedList *) nil_chk(sequenceObjects_)) getWithInt:index];
}


#line 113
- (jint)getElementCount {
  return [((JavaUtilLinkedList *) nil_chk(sequenceObjects_)) size];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x14, -1, -1, 0, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, 2, -1, -1 },
    { NULL, "B", 0x14, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1DecoderObject;", 0x14, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x14, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(decodeValue);
  methods[1].selector = @selector(initWithIOSClass:);
  methods[2].selector = @selector(getDefaultTag);
  methods[3].selector = @selector(getElementAtWithInt:);
  methods[4].selector = @selector(getElementCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_SEQUENCE", "B", .constantValue.asChar = EsGobJmulticardAsn1DerSequenceOf_TAG_SEQUENCE, 0x1a, -1, -1, -1, -1 },
    { "elementsType_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
    { "sequenceObjects_", "LJavaUtilLinkedList;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LEsGobJmulticardAsn1Asn1Exception;LEsGobJmulticardAsn1TlvException;", "LIOSClass;", "(Ljava/lang/Class<+Les/gob/jmulticard/asn1/DecoderObject;>;)V", "getElementAt", "I", "Ljava/lang/Class<+Les/gob/jmulticard/asn1/DecoderObject;>;", "Ljava/util/LinkedList<Les/gob/jmulticard/asn1/DecoderObject;>;" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1DerSequenceOf = { "SequenceOf", "es.gob.jmulticard.asn1.der", ptrTable, methods, fields, 7, 0x401, 5, 3, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1DerSequenceOf;
}

@end


#line 91
void EsGobJmulticardAsn1DerSequenceOf_initWithIOSClass_(EsGobJmulticardAsn1DerSequenceOf *self, IOSClass *type) {
  EsGobJmulticardAsn1DecoderObject_init(self);
  self->sequenceObjects_ =
#line 58
  nil;
  
#line 92
  if (type == nil) {
    @throw new_JavaLangIllegalArgumentException_init();
  }
  self->elementsType_ = type;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1DerSequenceOf)

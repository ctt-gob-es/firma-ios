//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/pkcs15/CommonCertificateAttributes.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/OptionalDecoderObjectElement.h"
#include "es/gob/jmulticard/asn1/der/OctectString.h"
#include "es/gob/jmulticard/asn1/der/Sequence.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/CommonCertificateAttributes.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/Identifier.h"
#include "java/lang/IllegalStateException.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/der/pkcs15/CommonCertificateAttributes must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/pkcs15/CommonCertificateAttributes.java"


#line 56
@implementation EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 70
- (IOSByteArray *)getId {
  if ([self getElementAtWithInt:0] == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"No existe el identificador dentro del objeto");
  }
  return [((EsGobJmulticardAsn1DerOctectString *) nil_chk(((EsGobJmulticardAsn1DerOctectString *) cast_chk([self getElementAtWithInt:0], [EsGobJmulticardAsn1DerOctectString class])))) getOctectStringByteValue];
}

- (NSString *)description {
  
#line 79
  return EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([self getId], false);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getId);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes = { "CommonCertificateAttributes", "es.gob.jmulticard.asn1.der.pkcs15", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes;
}

@end


#line 59
void EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes_init(EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes *self) {
  EsGobJmulticardAsn1DerSequence_initWithEsGobJmulticardAsn1OptionalDecoderObjectElementArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 62
  EsGobJmulticardAsn1DerPkcs15Identifier_class_(),
#line 63
  false) } count:1 type:EsGobJmulticardAsn1OptionalDecoderObjectElement_class_()]);
}


#line 59
EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes *new_EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes, init)
}


#line 59
EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes *create_EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1DerPkcs15CommonCertificateAttributes)

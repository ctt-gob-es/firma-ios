//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/pkcs15/Odf.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/OptionalDecoderObjectElement.h"
#include "es/gob/jmulticard/asn1/der/Record.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/CertificatesContextSpecific.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/Odf.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/Path.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/PrivateKeysContextSpecific.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/PublicKeysContextSpecific.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/SecretKeysContextSpecific.h"
#include "es/gob/jmulticard/asn1/der/pkcs15/TrustedPublicKeysContextSpecific.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/der/pkcs15/Odf must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/pkcs15/Odf.java"


#line 39
@implementation EsGobJmulticardAsn1DerPkcs15Odf

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EsGobJmulticardAsn1DerPkcs15Odf_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 55
- (EsGobJmulticardAsn1DerPkcs15Path *)getCdfPath {
  for (jint i = 0; i < [self getElementCount]; i++) {
    EsGobJmulticardAsn1DecoderObject *dobj = [self getElementAtWithInt:i];
    if ([dobj isKindOfClass:[EsGobJmulticardAsn1DerPkcs15CertificatesContextSpecific class]]) {
      return [((EsGobJmulticardAsn1DerPkcs15CertificatesContextSpecific *) nil_chk(((EsGobJmulticardAsn1DerPkcs15CertificatesContextSpecific *) dobj))) getCertificatesPath];
    }
  }
  return nil;
}


#line 68
- (EsGobJmulticardAsn1DerPkcs15Path *)getPrKdfPath {
  for (jint i = 0; i < [self getElementCount]; i++) {
    EsGobJmulticardAsn1DecoderObject *dobj = [self getElementAtWithInt:i];
    if ([dobj isKindOfClass:[EsGobJmulticardAsn1DerPkcs15PrivateKeysContextSpecific class]]) {
      return [((EsGobJmulticardAsn1DerPkcs15PrivateKeysContextSpecific *) nil_chk(((EsGobJmulticardAsn1DerPkcs15PrivateKeysContextSpecific *) dobj))) getPrivateKeysPath];
    }
  }
  return nil;
}


#line 81
- (EsGobJmulticardAsn1DerPkcs15Path *)getPuKdfPath {
  for (jint i = 0; i < [self getElementCount]; i++) {
    EsGobJmulticardAsn1DecoderObject *dobj = [self getElementAtWithInt:i];
    if ([dobj isKindOfClass:[EsGobJmulticardAsn1DerPkcs15PublicKeysContextSpecific class]]) {
      return [((EsGobJmulticardAsn1DerPkcs15PublicKeysContextSpecific *) nil_chk(((EsGobJmulticardAsn1DerPkcs15PublicKeysContextSpecific *) dobj))) getPublicKeysPath];
    }
  }
  return nil;
}

- (NSString *)description {
  
#line 93
  return JreStrcat("$@$@$@", @"ODF: \n Ruta hacia el CDF: ",
#line 95
  [self getCdfPath], @"\n Ruta hacia el PrKDF: ",
#line 96
  [self getPrKdfPath], @"\n Ruta hacia el PuKDF: ",
#line 97
  [self getPuKdfPath]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1DerPkcs15Path;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1DerPkcs15Path;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardAsn1DerPkcs15Path;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getCdfPath);
  methods[2].selector = @selector(getPrKdfPath);
  methods[3].selector = @selector(getPuKdfPath);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1DerPkcs15Odf = { "Odf", "es.gob.jmulticard.asn1.der.pkcs15", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1DerPkcs15Odf;
}

@end


#line 42
void EsGobJmulticardAsn1DerPkcs15Odf_init(EsGobJmulticardAsn1DerPkcs15Odf *self) {
  EsGobJmulticardAsn1DerRecord_initWithEsGobJmulticardAsn1OptionalDecoderObjectElementArray_(self, [IOSObjectArray newArrayWithObjects:(id[]){ create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 44
  EsGobJmulticardAsn1DerPkcs15PrivateKeysContextSpecific_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 45
  EsGobJmulticardAsn1DerPkcs15PublicKeysContextSpecific_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 46
  EsGobJmulticardAsn1DerPkcs15TrustedPublicKeysContextSpecific_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 47
  EsGobJmulticardAsn1DerPkcs15SecretKeysContextSpecific_class_(), true), create_EsGobJmulticardAsn1OptionalDecoderObjectElement_initWithIOSClass_withBoolean_(
#line 48
  EsGobJmulticardAsn1DerPkcs15CertificatesContextSpecific_class_(), true) } count:5 type:EsGobJmulticardAsn1OptionalDecoderObjectElement_class_()]);
}


#line 42
EsGobJmulticardAsn1DerPkcs15Odf *new_EsGobJmulticardAsn1DerPkcs15Odf_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1DerPkcs15Odf, init)
}


#line 42
EsGobJmulticardAsn1DerPkcs15Odf *create_EsGobJmulticardAsn1DerPkcs15Odf_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1DerPkcs15Odf, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1DerPkcs15Odf)

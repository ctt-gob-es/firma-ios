//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/pkcs15/PrivateKeyObject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject")
#ifdef RESTRICT_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject
#define INCLUDE_ALL_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject 0
#else
#define INCLUDE_ALL_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject 1
#endif
#undef RESTRICT_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject

#if !defined (EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_) && (INCLUDE_ALL_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject || defined(INCLUDE_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject))
#define EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_

#define RESTRICT_EsGobJmulticardAsn1DerPkcs15Pkcs15Object 1
#define INCLUDE_EsGobJmulticardAsn1DerPkcs15Pkcs15Object 1
#include "es/gob/jmulticard/asn1/der/pkcs15/Pkcs15Object.h"

@class IOSByteArray;
@class IOSClass;
@class JavaxSecurityAuthX500X500Principal;

/*!
 @brief Tipo ASN&#46;1 PKCS#15 <i>PrivateKeyObject</i>.
 @code

   PrivateKeyObject {KeyAttributes} ::= PKCS15Object {
     CommonKeyAttributes,
     CommonPrivateKeyAttributes,
     KeyAttributes
   } 
  
@endcode
  Que en el caso de claves privadas RSA (instanciando como 
 <code>PrivateKeyObject {PrivateRSAKeyAttributes}</code>) y deshaciendo <code>PKCS15Object</code>
  en su secuencia queda la estructura: 
 @code

   PrivateKeyObject {PrivateRSAKeyAttributes} ::= SEQUENCE {
     CommonObjectAttributes,
     CommonKeyAttributes,
     CommonPrivateKeyAttributes,
     PrivateRsaKeyAttributes
   } 
  
@endcode
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardAsn1DerPkcs15PrivateKeyObject : EsGobJmulticardAsn1DerPkcs15Pkcs15Object

#pragma mark Public

/*!
 @brief Construye un objeto ASN&#46;1 PKCS#15 <i>PrivateKeyObject</i>
 */
- (instancetype)init;

/*!
 @brief Obtiene el identificador de la clave privada.
 @return Nombre de la clave privada
 */
- (IOSByteArray *)getKeyIdentifier;

/*!
 @brief Obtiene la ruta hacia la clave privada.
 @return Ruta hacia la clave privada.
 */
- (NSString *)getKeyPath;

/*!
 @brief Obtiene la referencia de la clave.
 @return Referencia de la clave.
 */
- (jbyte)getKeyReference;

- (NSString *)description;

#pragma mark Protected

/*!
 @brief Construye un tipo PrivateKeyObject ASN&#46;1.
 @param classAttributes Tipo de los Atributos espec &iacute; ficos de la clase general del objeto
 @param subclassAttributes Tipo de los Atributos espec &iacute; ficos de la subclase general del objeto
 @param typeAttributes Tipo de los Atributos espec &iacute; ficos del tipo concreto del objeto
 */
- (instancetype)initWithIOSClass:(IOSClass *)classAttributes
                    withIOSClass:(IOSClass *)subclassAttributes
                    withIOSClass:(IOSClass *)typeAttributes;

#pragma mark Package-Private

/*!
 @brief Obtiene la longitud de la clave privada.
 @return Longitud de la clave privada.
 */
- (jint)getKeyLength;

/*!
 @brief Obtiene el nombre de la clave privada.
 @return Nombre de la clave privada
 */
- (NSString *)getKeyName;

/*!
 @brief Obtiene el <code>Principal</code> X&#46;509 de la clave privada.
 @return <code>Principal</code> X&#46;509 de la clave privada.
 */
- (JavaxSecurityAuthX500X500Principal *)getKeyPrincipal;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardAsn1DerPkcs15PrivateKeyObject)

FOUNDATION_EXPORT void EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_initWithIOSClass_withIOSClass_withIOSClass_(EsGobJmulticardAsn1DerPkcs15PrivateKeyObject *self, IOSClass *classAttributes, IOSClass *subclassAttributes, IOSClass *typeAttributes);

FOUNDATION_EXPORT EsGobJmulticardAsn1DerPkcs15PrivateKeyObject *new_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_initWithIOSClass_withIOSClass_withIOSClass_(IOSClass *classAttributes, IOSClass *subclassAttributes, IOSClass *typeAttributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardAsn1DerPkcs15PrivateKeyObject *create_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_initWithIOSClass_withIOSClass_withIOSClass_(IOSClass *classAttributes, IOSClass *subclassAttributes, IOSClass *typeAttributes);

FOUNDATION_EXPORT void EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_init(EsGobJmulticardAsn1DerPkcs15PrivateKeyObject *self);

FOUNDATION_EXPORT EsGobJmulticardAsn1DerPkcs15PrivateKeyObject *new_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardAsn1DerPkcs15PrivateKeyObject *create_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardAsn1DerPkcs15PrivateKeyObject)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardAsn1DerPkcs15PrivateKeyObject")

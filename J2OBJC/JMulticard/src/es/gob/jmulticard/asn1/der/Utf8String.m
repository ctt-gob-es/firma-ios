//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/Utf8String.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/asn1/Asn1Exception.h"
#include "es/gob/jmulticard/asn1/DecoderObject.h"
#include "es/gob/jmulticard/asn1/Tlv.h"
#include "es/gob/jmulticard/asn1/der/Utf8String.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/StandardCharsets.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/asn1/der/Utf8String must be compiled with ARC (-fobjc-arc)"
#endif

@interface EsGobJmulticardAsn1DerUtf8String () {
 @public
  NSString *stringValue_;
}

@end

J2OBJC_FIELD_SETTER(EsGobJmulticardAsn1DerUtf8String, stringValue_, NSString *)

/*!
 @brief Tipo ASN&#46;1 "UTF8String".
 */
inline jbyte EsGobJmulticardAsn1DerUtf8String_get_TAG_UTF8STRING(void);
#define EsGobJmulticardAsn1DerUtf8String_TAG_UTF8STRING 12
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1DerUtf8String, TAG_UTF8STRING, jbyte)

/*!
 @brief Tipo ASN&#46;1 "PrintableString".
 */
inline jbyte EsGobJmulticardAsn1DerUtf8String_get_TAG_PRINTABLESTRING(void);
#define EsGobJmulticardAsn1DerUtf8String_TAG_PRINTABLESTRING 19
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1DerUtf8String, TAG_PRINTABLESTRING, jbyte)

/*!
 @brief Tipo ASN&#46;1 "T61String".
 */
inline jbyte EsGobJmulticardAsn1DerUtf8String_get_TAG_T61STRING(void);
#define EsGobJmulticardAsn1DerUtf8String_TAG_T61STRING 20
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardAsn1DerUtf8String, TAG_T61STRING, jbyte)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/asn1/der/Utf8String.java"


#line 53
@implementation EsGobJmulticardAsn1DerUtf8String

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 53
- (instancetype)init {
  EsGobJmulticardAsn1DerUtf8String_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 64
- (jbyte)getDefaultTag {
  
#line 66
  return EsGobJmulticardAsn1DerUtf8String_TAG_UTF8STRING;
}


#line 69
- (void)checkTagWithByte:(jbyte)tag {
  
#line 71
  if (EsGobJmulticardAsn1DerUtf8String_TAG_UTF8STRING != tag && EsGobJmulticardAsn1DerUtf8String_TAG_PRINTABLESTRING != tag && EsGobJmulticardAsn1DerUtf8String_TAG_T61STRING != tag) {
    @throw new_EsGobJmulticardAsn1Asn1Exception_initWithNSString_(JreStrcat("$$$$$$$$$$", @"Se esperaba un tipo ", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([IOSByteArray newArrayWithBytes:(jbyte[]){
#line 73
      EsGobJmulticardAsn1DerUtf8String_TAG_PRINTABLESTRING } count:1], false), @", ", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([IOSByteArray newArrayWithBytes:(jbyte[]){
#line 74
        EsGobJmulticardAsn1DerUtf8String_TAG_T61STRING } count:1], false), @" o ", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([IOSByteArray newArrayWithBytes:(jbyte[]){
#line 75
          EsGobJmulticardAsn1DerUtf8String_TAG_UTF8STRING } count:1], false), @" (",
#line 76
          [[self java_getClass] getName], @") pero se encontro un tipo ", EsGobJmulticardHexUtils_hexifyWithByteArray_withBoolean_([IOSByteArray newArrayWithBytes:(jbyte[]){
#line 77
            tag } count:1], false)));
          }
        }


#line 84
- (void)decodeValue {
  
#line 86
  EsGobJmulticardAsn1Tlv *tlv = new_EsGobJmulticardAsn1Tlv_initWithByteArray_([self getBytes]);
  [self checkTagWithByte:[tlv getTag]];
  stringValue_ = [NSString java_stringWithBytes:[tlv getValue] charset:JreLoadStatic(JavaNioCharsetStandardCharsets, UTF_8)];
}


#line 91
- (NSString *)description {
  
#line 93
  return stringValue_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDefaultTag);
  methods[2].selector = @selector(checkTagWithByte:);
  methods[3].selector = @selector(decodeValue);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_UTF8STRING", "B", .constantValue.asChar = EsGobJmulticardAsn1DerUtf8String_TAG_UTF8STRING, 0x1a, -1, -1, -1, -1 },
    { "TAG_PRINTABLESTRING", "B", .constantValue.asChar = EsGobJmulticardAsn1DerUtf8String_TAG_PRINTABLESTRING, 0x1a, -1, -1, -1, -1 },
    { "TAG_T61STRING", "B", .constantValue.asChar = EsGobJmulticardAsn1DerUtf8String_TAG_T61STRING, 0x1a, -1, -1, -1, -1 },
    { "stringValue_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "checkTag", "B", "LEsGobJmulticardAsn1Asn1Exception;", "LEsGobJmulticardAsn1Asn1Exception;LEsGobJmulticardAsn1TlvException;", "toString" };
  static const J2ObjcClassInfo _EsGobJmulticardAsn1DerUtf8String = { "Utf8String", "es.gob.jmulticard.asn1.der", ptrTable, methods, fields, 7, 0x11, 5, 4, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardAsn1DerUtf8String;
}

@end


#line 53
void EsGobJmulticardAsn1DerUtf8String_init(EsGobJmulticardAsn1DerUtf8String *self) {
  EsGobJmulticardAsn1DecoderObject_init(self);
  self->stringValue_ =
#line 82
  nil;
}


#line 53
EsGobJmulticardAsn1DerUtf8String *new_EsGobJmulticardAsn1DerUtf8String_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardAsn1DerUtf8String, init)
}


#line 53
EsGobJmulticardAsn1DerUtf8String *create_EsGobJmulticardAsn1DerUtf8String_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardAsn1DerUtf8String, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardAsn1DerUtf8String)

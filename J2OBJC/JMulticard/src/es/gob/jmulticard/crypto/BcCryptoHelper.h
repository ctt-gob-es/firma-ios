//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/crypto/BcCryptoHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardCryptoBcCryptoHelper")
#ifdef RESTRICT_EsGobJmulticardCryptoBcCryptoHelper
#define INCLUDE_ALL_EsGobJmulticardCryptoBcCryptoHelper 0
#else
#define INCLUDE_ALL_EsGobJmulticardCryptoBcCryptoHelper 1
#endif
#undef RESTRICT_EsGobJmulticardCryptoBcCryptoHelper

#if !defined (EsGobJmulticardCryptoBcCryptoHelper_) && (INCLUDE_ALL_EsGobJmulticardCryptoBcCryptoHelper || defined(INCLUDE_EsGobJmulticardCryptoBcCryptoHelper))
#define EsGobJmulticardCryptoBcCryptoHelper_

#define RESTRICT_EsGobJmulticardCryptoHelper 1
#define INCLUDE_EsGobJmulticardCryptoHelper 1
#include "es/gob/jmulticard/CryptoHelper.h"

@class EsGobJmulticardApduIso7816fourPacePaceChat;
@class EsGobJmulticardAsn1IcaoCardAccess;
@class EsGobJmulticardCryptoHelper_BlockMode;
@class EsGobJmulticardCryptoHelper_EcCurve;
@class EsGobJmulticardCryptoHelper_PaceChannelHelper;
@class EsGobJmulticardCryptoHelper_Padding;
@class EsGobJmulticardDigestAlgorithm;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaSecurityCertX509Certificate;
@class JavaSecurityKeyPair;
@protocol JavaSecurityInterfacesRSAKey;
@protocol JavaSecurityInterfacesRSAPublicKey;
@protocol JavaSecuritySpecAlgorithmParameterSpec;

/*!
 @brief Funcionalidades criptogr&aacute;ficas de utilidad implementadas mediante BouncyCastle.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s
 */
@interface EsGobJmulticardCryptoBcCryptoHelper : EsGobJmulticardCryptoHelper

#pragma mark Public

- (instancetype)init;

- (IOSByteArray *)aesDecryptWithByteArray:(IOSByteArray *)data
                            withByteArray:(IOSByteArray *)iv
                            withByteArray:(IOSByteArray *)key
withEsGobJmulticardCryptoHelper_BlockMode:(EsGobJmulticardCryptoHelper_BlockMode *)blockMode
  withEsGobJmulticardCryptoHelper_Padding:(EsGobJmulticardCryptoHelper_Padding *)padding;

- (IOSByteArray *)aesEncryptWithByteArray:(IOSByteArray *)data
                            withByteArray:(IOSByteArray *)iv
                            withByteArray:(IOSByteArray *)key
withEsGobJmulticardCryptoHelper_BlockMode:(EsGobJmulticardCryptoHelper_BlockMode *)blockMode
  withEsGobJmulticardCryptoHelper_Padding:(EsGobJmulticardCryptoHelper_Padding *)padding;

- (IOSByteArray *)desDecryptWithByteArray:(IOSByteArray *)data
                            withByteArray:(IOSByteArray *)key;

- (IOSByteArray *)desedeDecryptWithByteArray:(IOSByteArray *)data
                               withByteArray:(IOSByteArray *)rawKey;

- (IOSByteArray *)desedeEncryptWithByteArray:(IOSByteArray *)data
                               withByteArray:(IOSByteArray *)rawKey;

- (IOSByteArray *)desEncryptWithByteArray:(IOSByteArray *)data
                            withByteArray:(IOSByteArray *)key;

- (IOSByteArray *)digestWithEsGobJmulticardDigestAlgorithm:(EsGobJmulticardDigestAlgorithm *)algorithm
                                             withByteArray:(IOSByteArray *)data;

- (IOSByteArray *)doAesCmacWithByteArray:(IOSByteArray *)data
                           withByteArray:(IOSByteArray *)key;

- (JavaSecurityKeyPair *)generateEcKeyPairWithEsGobJmulticardCryptoHelper_EcCurve:(EsGobJmulticardCryptoHelper_EcCurve *)curveName;

- (IOSByteArray *)generateRandomBytesWithInt:(jint)numBytes;

- (IOSByteArray *)getCmsSignatureSignedContentWithByteArray:(IOSByteArray *)signedDataBytes;

- (id<JavaSecuritySpecAlgorithmParameterSpec>)getEcPointWithByteArray:(IOSByteArray *)nonceS
                                                        withByteArray:(IOSByteArray *)sharedSecretH
                              withEsGobJmulticardCryptoHelper_EcCurve:(EsGobJmulticardCryptoHelper_EcCurve *)curveName;

- (EsGobJmulticardCryptoHelper_PaceChannelHelper *)getPaceChannelHelperWithEsGobJmulticardAsn1IcaoCardAccess:(EsGobJmulticardAsn1IcaoCardAccess *)cardAccess
                                                              withEsGobJmulticardApduIso7816fourPacePaceChat:(EsGobJmulticardApduIso7816fourPacePaceChat *)paceChat;

- (id<JavaSecurityInterfacesRSAPublicKey>)getRsaPublicKeyWithJavaSecurityCertX509Certificate:(JavaSecurityCertX509Certificate *)cert;

- (IOSByteArray *)rsaDecryptWithByteArray:(IOSByteArray *)cipheredData
         withJavaSecurityInterfacesRSAKey:(id<JavaSecurityInterfacesRSAKey>)key;

- (IOSByteArray *)rsaEncryptWithByteArray:(IOSByteArray *)data
         withJavaSecurityInterfacesRSAKey:(id<JavaSecurityInterfacesRSAKey>)key;

- (IOSObjectArray *)validateCmsSignatureWithByteArray:(IOSByteArray *)signedDataBytes;

@end

J2OBJC_STATIC_INIT(EsGobJmulticardCryptoBcCryptoHelper)

FOUNDATION_EXPORT void EsGobJmulticardCryptoBcCryptoHelper_init(EsGobJmulticardCryptoBcCryptoHelper *self);

FOUNDATION_EXPORT EsGobJmulticardCryptoBcCryptoHelper *new_EsGobJmulticardCryptoBcCryptoHelper_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardCryptoBcCryptoHelper *create_EsGobJmulticardCryptoBcCryptoHelper_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCryptoBcCryptoHelper)

#endif

#if !defined (EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey_) && (INCLUDE_ALL_EsGobJmulticardCryptoBcCryptoHelper || defined(INCLUDE_EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey))
#define EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey_

#define RESTRICT_JavaSecurityInterfacesRSAPublicKey 1
#define INCLUDE_JavaSecurityInterfacesRSAPublicKey 1
#include "java/security/interfaces/RSAPublicKey.h"

@class IOSByteArray;
@class JavaMathBigInteger;

/*!
 @brief Clave p&uacute;blica RSA con control directo de la creaci&oacute;n como 
 <code>BigInteger</code> de m&oacute;dulo y exponente (para evitar problemas
  de interpretaci&oacute;n del signo (que puede darse en entornos como <i>J2Obc</i>).
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey : NSObject < JavaSecurityInterfacesRSAPublicKey >

#pragma mark Public

- (NSString *)getAlgorithm;

- (IOSByteArray *)getEncoded;

- (NSString *)getFormat;

- (JavaMathBigInteger *)getModulus;

- (JavaMathBigInteger *)getPublicExponent;

#pragma mark Package-Private

- (instancetype)initWithByteArray:(IOSByteArray *)pukBytes;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey)

FOUNDATION_EXPORT void EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey_initWithByteArray_(EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey *self, IOSByteArray *pukBytes);

FOUNDATION_EXPORT EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey *new_EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey_initWithByteArray_(IOSByteArray *pukBytes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey *create_EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey_initWithByteArray_(IOSByteArray *pukBytes);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardCryptoBcCryptoHelper_CustomRsaPublicKey)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardCryptoBcCryptoHelper")

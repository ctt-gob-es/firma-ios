//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/AbstractApduEncrypter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardConnectionAbstractApduEncrypter")
#ifdef RESTRICT_EsGobJmulticardConnectionAbstractApduEncrypter
#define INCLUDE_ALL_EsGobJmulticardConnectionAbstractApduEncrypter 0
#else
#define INCLUDE_ALL_EsGobJmulticardConnectionAbstractApduEncrypter 1
#endif
#undef RESTRICT_EsGobJmulticardConnectionAbstractApduEncrypter

#if !defined (EsGobJmulticardConnectionAbstractApduEncrypter_) && (INCLUDE_ALL_EsGobJmulticardConnectionAbstractApduEncrypter || defined(INCLUDE_EsGobJmulticardConnectionAbstractApduEncrypter))
#define EsGobJmulticardConnectionAbstractApduEncrypter_

@class EsGobJmulticardApduCommandApdu;
@class EsGobJmulticardApduResponseApdu;
@class EsGobJmulticardConnectionCipheredApdu;
@class EsGobJmulticardCryptoHelper;
@class IOSByteArray;

/*!
 @brief Cifrador de APDU seg&uacute;n CWA-14890.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardConnectionAbstractApduEncrypter : NSObject {
 @public
  /*!
   @brief En el relleno ISO-7816, longitud de la cual debe ser m&uacute;ltiplo el tama&ntilde;o de los datos de salida.
   */
  jint paddingLength_;
}

#pragma mark Public

- (instancetype)init;

/*!
 @brief Desencripta la Apdu de respuesta recibida a partir de las variables del canal de cifrado (kenc, kmac, ssc).
 @param responseApdu Respuesta a desencriptar.
 @param keyCipher Clave de cifrado.
 @param ssc Contador de secuencia.
 @param kMac Clave de cifrado.
 @param cryptoHelper Instancia que lleva a cabo las operaciones de cifrado.
 @return Apdu descifrada.
 @throw IOExceptionEn cualquier error durante el proceso de descifrado.
 */
- (EsGobJmulticardApduResponseApdu *)decryptResponseApduWithEsGobJmulticardApduResponseApdu:(EsGobJmulticardApduResponseApdu *)responseApdu
                                                                              withByteArray:(IOSByteArray *)keyCipher
                                                                              withByteArray:(IOSByteArray *)ssc
                                                                              withByteArray:(IOSByteArray *)kMac
                                                            withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper;

/*!
 @brief Encapsula una APDU para ser enviada por un canal seguro CWA-14890.
 El contador SSC se autoincrementa durante la operaci&oacute;n.
 @param unprotectedApdu APDU desprotegida (en claro).
 @param keyCipher Clave sim &eacute; trica de cifrado.
 @param keyMac Clave sim &eacute; trica para el MAC.
 @param sendSequenceCounter Contador de secuencia actual.
 @param cryptoHelper Operador criptogr &aacute; fico.
 @return APDU protegida (cifrada y con MAC).
 @throw IOExceptionSi ocurren problemas durante los cifrados de la APDU.
 */
- (EsGobJmulticardConnectionCipheredApdu *)protectAPDUWithEsGobJmulticardApduCommandApdu:(EsGobJmulticardApduCommandApdu *)unprotectedApdu
                                                                           withByteArray:(IOSByteArray *)keyCipher
                                                                           withByteArray:(IOSByteArray *)keyMac
                                                                           withByteArray:(IOSByteArray *)sendSequenceCounter
                                                         withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper;

#pragma mark Protected

/*!
 @brief Agrega un relleno (<i>padding</i>) a un array de bytes conforme las especificaciones ISO 7816.
 Esto es, se agrega un byte <code>0x80</code> al array y se completa con bytes <code>0x00</code> hasta que el
  array es m&uacute;ltiplo de 8.
 @param data Datos a los que agregar el relleno.
 @param size Longitud de la cual debe ser m &uacute; ltiplo el tama &ntilde; o de los datos de salida.
 @return Datos con relleno.
 */
+ (IOSByteArray *)addPadding7816WithByteArray:(IOSByteArray *)data
                                      withInt:(jint)size;

/*!
 @brief Encripta los datos para una APDU cifrada.
 @param data Datos de la APDU.
 @param key Clave de cifrado.
 @param ssc Contador de secuencia.
 @param cryptoHelper Clase con las funcionalidades de criptograf &iacute; a.
 @return Datos enconcriptados.
 @throw IOExceptionEn cualquier error.
 */
- (IOSByteArray *)encryptDataWithByteArray:(IOSByteArray *)data
                             withByteArray:(IOSByteArray *)key
                             withByteArray:(IOSByteArray *)ssc
           withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper;

/*!
 @brief Aplica el algoritmo para la generaci&oacute;n de la MAC del mensaje.
 @param dataPadded Datos sobre los que generar la MAC.
 @param ssc Contador de secuencia de la operaci &oacute; n.
 @param kMac Clave necesaria para la operaci &oacute; n (algoritmo dependiente de la implementaci &oacute; n).
 @param cryptoHelper Manejador para la realizaci &oacute; n de las operaciones criptogr &aacute; ficas.
 @return Clave de autenticaci&oacute;n de los datos.
 @throw IOExceptionSi hay errores de entrada / salida.
 */
- (IOSByteArray *)generateMacWithByteArray:(IOSByteArray *)dataPadded
                             withByteArray:(IOSByteArray *)ssc
                             withByteArray:(IOSByteArray *)kMac
           withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper;

/*!
 @brief Elimina el padding ISO 7816 de los datos.
 @param paddedData Datos con padding.
 @return Datos sin padding.
 */
+ (IOSByteArray *)removePadding7816WithByteArray:(IOSByteArray *)paddedData;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardConnectionAbstractApduEncrypter)

/*!
 @brief Tag del TLV de datos de una APDU protegida.
 */
inline jbyte EsGobJmulticardConnectionAbstractApduEncrypter_get_TAG_DATA_TLV(void);
#define EsGobJmulticardConnectionAbstractApduEncrypter_TAG_DATA_TLV -121
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardConnectionAbstractApduEncrypter, TAG_DATA_TLV, jbyte)

FOUNDATION_EXPORT void EsGobJmulticardConnectionAbstractApduEncrypter_init(EsGobJmulticardConnectionAbstractApduEncrypter *self);

FOUNDATION_EXPORT IOSByteArray *EsGobJmulticardConnectionAbstractApduEncrypter_addPadding7816WithByteArray_withInt_(IOSByteArray *data, jint size);

FOUNDATION_EXPORT IOSByteArray *EsGobJmulticardConnectionAbstractApduEncrypter_removePadding7816WithByteArray_(IOSByteArray *paddedData);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardConnectionAbstractApduEncrypter)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardConnectionAbstractApduEncrypter")

//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/cwa14890/InvalidCryptographicChecksumException.java
//

#include "J2ObjC_source.h"
#include "es/gob/jmulticard/connection/cwa14890/InvalidCryptographicChecksumException.h"
#include "java/lang/SecurityException.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/connection/cwa14890/InvalidCryptographicChecksumException must be compiled with ARC (-fobjc-arc)"
#endif

/*!
 @brief Identificador de versi&oacute;n para la serializaci&oacute;n.
 */
inline jlong EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException_get_serialVersionUID(void);
#define EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException_serialVersionUID -366110067889217051LL
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException, serialVersionUID, jlong)

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/cwa14890/InvalidCryptographicChecksumException.java"


#line 45
@implementation EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 52
- (instancetype)init {
  EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const J2ObjcClassInfo _EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException = { "InvalidCryptographicChecksumException", "es.gob.jmulticard.connection.cwa14890", NULL, methods, fields, 7, 0x11, 1, 1, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException;
}

@end


#line 52
void EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException_init(EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException *self) {
  JavaLangSecurityException_initWithNSString_(self, @"Checksum criptografico invalido (APDU respuesta = 6688)");
}


#line 52
EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException *new_EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException, init)
}


#line 52
EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException *create_EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardConnectionCwa14890InvalidCryptographicChecksumException)

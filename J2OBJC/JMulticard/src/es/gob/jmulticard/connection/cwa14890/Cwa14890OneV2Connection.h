//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/cwa14890/Cwa14890OneV2Connection.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection")
#ifdef RESTRICT_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection
#define INCLUDE_ALL_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection 0
#else
#define INCLUDE_ALL_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection 1
#endif
#undef RESTRICT_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection

#if !defined (EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_) && (INCLUDE_ALL_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection || defined(INCLUDE_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection))
#define EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_

#define RESTRICT_EsGobJmulticardConnectionCwa14890Cwa14890OneV1Connection 1
#define INCLUDE_EsGobJmulticardConnectionCwa14890Cwa14890OneV1Connection 1
#include "es/gob/jmulticard/connection/cwa14890/Cwa14890OneV1Connection.h"

@class EsGobJmulticardConnectionAbstractApduEncrypter;
@class EsGobJmulticardConnectionCwa14890ChannelType;
@class EsGobJmulticardCryptoHelper;
@protocol EsGobJmulticardCardCwa14890Cwa14890Card;
@protocol EsGobJmulticardCardCwa14890Cwa14890PrivateConstants;
@protocol EsGobJmulticardCardCwa14890Cwa14890PublicConstants;
@protocol EsGobJmulticardConnectionApduConnection;

/*!
 @brief Clase para el establecimiento y control del canal seguro CWA-14890
  con cifrado DES y MAC de ocho octetos.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection : EsGobJmulticardConnectionCwa14890Cwa14890OneV1Connection

#pragma mark Public

/*!
 @brief Crea el canal seguro CWA-14890 para la comunicaci&oacute;n de la tarjeta.
 Es necesario abrir el canal asoci&aacute;ndolo a una conexi&oacute;n para
  poder trasmitir APDUs.
  Si no se indica una conexi&oacute;n se utilizar&aacute;a la conexi&oacute;n
  impl&iacute;cita de la tarjeta indicada.
 @param connection Conexi &oacute; n sobre la cual montar el canal seguro.
 @param cryptoHlpr Motor de operaciones criptogr &aacute; ficas.
 @param chType Tipo de canal o conexi &oacute; n.
 */
- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)connection
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHlpr
               withEsGobJmulticardConnectionCwa14890ChannelType:(EsGobJmulticardConnectionCwa14890ChannelType *)chType;

/*!
 @brief Crea el canal seguro CWA-14890 para la comunicaci&oacute;n de la tarjeta.
 Es necesario abrir el canal asoci&aacute;ndolo a una conexi&oacute;n para
  poder trasmitir APDUs.
  Si no se indica una conexi&oacute;n se utilizar&aacute;a la conexi&oacute;n
  impl&iacute;cita de la tarjeta indicada.
 @param card Tarjeta con la funcionalidad CWA-14890.
 @param connection Conexi &oacute; n sobre la cual montar el canal seguro.
 @param cryptoHlpr Motor de operaciones criptogr &aacute; ficas.
 @param cwaConsts Clase de claves p &uacute; blicas CWA-14890.
 @param cwaPrivConsts Clase de claves privadas CWA-14890.
 @param chType Tipo de canal o conexi &oacute; n.
 */
- (instancetype)initWithEsGobJmulticardCardCwa14890Cwa14890Card:(id<EsGobJmulticardCardCwa14890Cwa14890Card>)card
                    withEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)connection
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHlpr
         withEsGobJmulticardCardCwa14890Cwa14890PublicConstants:(id<EsGobJmulticardCardCwa14890Cwa14890PublicConstants>)cwaConsts
        withEsGobJmulticardCardCwa14890Cwa14890PrivateConstants:(id<EsGobJmulticardCardCwa14890Cwa14890PrivateConstants>)cwaPrivConsts
               withEsGobJmulticardConnectionCwa14890ChannelType:(EsGobJmulticardConnectionCwa14890ChannelType *)chType;

/*!
 @brief Obtiene el tipo de canal o conexi&oacute;n.
 @return Tipo de canal o conexi&oacute;n.
 */
- (EsGobJmulticardConnectionCwa14890ChannelType *)getChannelType;

- (NSString *)description;

#pragma mark Protected

- (EsGobJmulticardConnectionAbstractApduEncrypter *)instantiateApduEncrypter;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithEsGobJmulticardCardCwa14890Cwa14890Card:(id<EsGobJmulticardCardCwa14890Cwa14890Card>)arg0
                    withEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)arg1
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)arg2
         withEsGobJmulticardCardCwa14890Cwa14890PublicConstants:(id<EsGobJmulticardCardCwa14890Cwa14890PublicConstants>)arg3
        withEsGobJmulticardCardCwa14890Cwa14890PrivateConstants:(id<EsGobJmulticardCardCwa14890Cwa14890PrivateConstants>)arg4 NS_UNAVAILABLE;

- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)arg0
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection)

FOUNDATION_EXPORT void EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardConnectionCwa14890ChannelType_(EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection *self, id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, EsGobJmulticardConnectionCwa14890ChannelType *chType);

FOUNDATION_EXPORT EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection *new_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardConnectionCwa14890ChannelType_(id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, EsGobJmulticardConnectionCwa14890ChannelType *chType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection *create_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardConnectionCwa14890ChannelType_(id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, EsGobJmulticardConnectionCwa14890ChannelType *chType);

FOUNDATION_EXPORT void EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_initWithEsGobJmulticardCardCwa14890Cwa14890Card_withEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardCardCwa14890Cwa14890PublicConstants_withEsGobJmulticardCardCwa14890Cwa14890PrivateConstants_withEsGobJmulticardConnectionCwa14890ChannelType_(EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection *self, id<EsGobJmulticardCardCwa14890Cwa14890Card> card, id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, id<EsGobJmulticardCardCwa14890Cwa14890PublicConstants> cwaConsts, id<EsGobJmulticardCardCwa14890Cwa14890PrivateConstants> cwaPrivConsts, EsGobJmulticardConnectionCwa14890ChannelType *chType);

FOUNDATION_EXPORT EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection *new_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_initWithEsGobJmulticardCardCwa14890Cwa14890Card_withEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardCardCwa14890Cwa14890PublicConstants_withEsGobJmulticardCardCwa14890Cwa14890PrivateConstants_withEsGobJmulticardConnectionCwa14890ChannelType_(id<EsGobJmulticardCardCwa14890Cwa14890Card> card, id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, id<EsGobJmulticardCardCwa14890Cwa14890PublicConstants> cwaConsts, id<EsGobJmulticardCardCwa14890Cwa14890PrivateConstants> cwaPrivConsts, EsGobJmulticardConnectionCwa14890ChannelType *chType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection *create_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection_initWithEsGobJmulticardCardCwa14890Cwa14890Card_withEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardCardCwa14890Cwa14890PublicConstants_withEsGobJmulticardCardCwa14890Cwa14890PrivateConstants_withEsGobJmulticardConnectionCwa14890ChannelType_(id<EsGobJmulticardCardCwa14890Cwa14890Card> card, id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, id<EsGobJmulticardCardCwa14890Cwa14890PublicConstants> cwaConsts, id<EsGobJmulticardCardCwa14890Cwa14890PrivateConstants> cwaPrivConsts, EsGobJmulticardConnectionCwa14890ChannelType *chType);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection")

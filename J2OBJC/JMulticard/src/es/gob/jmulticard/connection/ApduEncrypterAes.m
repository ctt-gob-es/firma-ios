//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/ApduEncrypterAes.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/CryptoHelper.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/JmcLogger.h"
#include "es/gob/jmulticard/apdu/ResponseApdu.h"
#include "es/gob/jmulticard/connection/AbstractApduEncrypter.h"
#include "es/gob/jmulticard/connection/ApduEncrypterAes.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/security/GeneralSecurityException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/NoSuchAlgorithmException.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/connection/ApduEncrypterAes must be compiled with ARC (-fobjc-arc)"
#endif

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/ApduEncrypterAes.java"


#line 57
@implementation EsGobJmulticardConnectionApduEncrypterAes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  EsGobJmulticardConnectionApduEncrypterAes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 69
- (IOSByteArray *)encryptDataWithByteArray:(IOSByteArray *)data
                             withByteArray:(IOSByteArray *)key
                             withByteArray:(IOSByteArray *)ssc
           withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper {
  
#line 74
  if (ssc == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 76
    @"El contador de secuencia no puede ser nulo en esta version de CWA-14890");
  }
  
#line 81
  IOSByteArray *iv = [((EsGobJmulticardCryptoHelper *) nil_chk(cryptoHelper)) aesEncryptWithByteArray:
#line 82
  ssc withByteArray:[IOSByteArray newArrayWithLength:
#line 83
  0] withByteArray:
#line 84
  key withEsGobJmulticardCryptoHelper_BlockMode:JreLoadEnum(EsGobJmulticardCryptoHelper_BlockMode, CBC) withEsGobJmulticardCryptoHelper_Padding:JreLoadEnum(EsGobJmulticardCryptoHelper_Padding, NOPADDING)];
  
#line 88
  return [cryptoHelper aesEncryptWithByteArray:
#line 89
  data withByteArray:
#line 90
  iv withByteArray:
#line 91
  key withEsGobJmulticardCryptoHelper_BlockMode:JreLoadEnum(EsGobJmulticardCryptoHelper_BlockMode, CBC) withEsGobJmulticardCryptoHelper_Padding:JreLoadEnum(EsGobJmulticardCryptoHelper_Padding, NOPADDING)];
}


#line 97
- (IOSByteArray *)generateMacWithByteArray:(IOSByteArray *)dataPadded
                             withByteArray:(IOSByteArray *)ssc
                             withByteArray:(IOSByteArray *)kMac
           withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper {
  
#line 102
  IOSByteArray *mac;
  @try {
    mac = [((EsGobJmulticardCryptoHelper *) nil_chk(cryptoHelper)) doAesCmacWithByteArray:EsGobJmulticardHexUtils_concatenateByteArraysWithByteArray2_([IOSObjectArray newArrayWithObjects:(id[]){ ssc, dataPadded } count:2 type:IOSClass_byteArray(1)]) withByteArray:kMac];
  }
  @catch (JavaSecurityInvalidKeyException *e) {
    @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(@"Error creando la CMAC de la APDU cifrada", e);
  }
  @catch (
#line 106
  JavaSecurityNoSuchAlgorithmException *e) {
    @throw new_JavaIoIOException_initWithNSString_withJavaLangThrowable_(@"Error creando la CMAC de la APDU cifrada", e);
  }
  IOSByteArray *ret = [IOSByteArray newArrayWithLength:8];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(mac, 0, ret, 0, 8);
  return ret;
}


#line 114
- (EsGobJmulticardApduResponseApdu *)decryptResponseApduWithEsGobJmulticardApduResponseApdu:(EsGobJmulticardApduResponseApdu *)responseApdu
                                                                              withByteArray:(IOSByteArray *)keyCipher
                                                                              withByteArray:(IOSByteArray *)ssc
                                                                              withByteArray:(IOSByteArray *)kMac
                                                            withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper {
  
#line 120
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "[B", 0x4, 3, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobJmulticardApduResponseApdu;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encryptDataWithByteArray:withByteArray:withByteArray:withEsGobJmulticardCryptoHelper:);
  methods[2].selector = @selector(generateMacWithByteArray:withByteArray:withByteArray:withEsGobJmulticardCryptoHelper:);
  methods[3].selector = @selector(decryptResponseApduWithEsGobJmulticardApduResponseApdu:withByteArray:withByteArray:withByteArray:withEsGobJmulticardCryptoHelper:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "encryptData", "[B[B[BLEsGobJmulticardCryptoHelper;", "LJavaIoIOException;", "generateMac", "decryptResponseApdu", "LEsGobJmulticardApduResponseApdu;[B[B[BLEsGobJmulticardCryptoHelper;" };
  static const J2ObjcClassInfo _EsGobJmulticardConnectionApduEncrypterAes = { "ApduEncrypterAes", "es.gob.jmulticard.connection", ptrTable, methods, NULL, 7, 0x11, 4, 0, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardConnectionApduEncrypterAes;
}

@end


#line 60
void EsGobJmulticardConnectionApduEncrypterAes_init(EsGobJmulticardConnectionApduEncrypterAes *self) {
  EsGobJmulticardConnectionAbstractApduEncrypter_init(self);
  
#line 61
  EsGobJmulticardJmcLogger_infoWithNSString_withNSString_withNSString_(
#line 62
  [EsGobJmulticardConnectionApduEncrypterAes_class_() getName],
#line 63
  @"constructor",
#line 64
  @"Se usara AES y CMAC para el cifrado de mensajes en el canal seguro");
  
#line 66
  self->paddingLength_ = 16;
}


#line 60
EsGobJmulticardConnectionApduEncrypterAes *new_EsGobJmulticardConnectionApduEncrypterAes_init() {
  J2OBJC_NEW_IMPL(EsGobJmulticardConnectionApduEncrypterAes, init)
}


#line 60
EsGobJmulticardConnectionApduEncrypterAes *create_EsGobJmulticardConnectionApduEncrypterAes_init() {
  J2OBJC_CREATE_IMPL(EsGobJmulticardConnectionApduEncrypterAes, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardConnectionApduEncrypterAes)

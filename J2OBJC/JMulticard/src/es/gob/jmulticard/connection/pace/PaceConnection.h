//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/pace/PaceConnection.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardConnectionPacePaceConnection")
#ifdef RESTRICT_EsGobJmulticardConnectionPacePaceConnection
#define INCLUDE_ALL_EsGobJmulticardConnectionPacePaceConnection 0
#else
#define INCLUDE_ALL_EsGobJmulticardConnectionPacePaceConnection 1
#endif
#undef RESTRICT_EsGobJmulticardConnectionPacePaceConnection

#if !defined (EsGobJmulticardConnectionPacePaceConnection_) && (INCLUDE_ALL_EsGobJmulticardConnectionPacePaceConnection || defined(INCLUDE_EsGobJmulticardConnectionPacePaceConnection))
#define EsGobJmulticardConnectionPacePaceConnection_

#define RESTRICT_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection 1
#define INCLUDE_EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection 1
#include "es/gob/jmulticard/connection/cwa14890/Cwa14890OneV2Connection.h"

@class EsGobJmulticardApduCommandApdu;
@class EsGobJmulticardApduResponseApdu;
@class EsGobJmulticardConnectionCwa14890ChannelType;
@class EsGobJmulticardConnectionPaceSecureMessaging;
@class EsGobJmulticardCryptoHelper;
@protocol EsGobJmulticardCardCwa14890Cwa14890Card;
@protocol EsGobJmulticardCardCwa14890Cwa14890PrivateConstants;
@protocol EsGobJmulticardCardCwa14890Cwa14890PublicConstants;
@protocol EsGobJmulticardConnectionApduConnection;

/*!
 @brief Conexi&oacute;n PACE para establecimiento de canal seguro por NFC.
 @author Sergio Mart&iacute;nez Rico
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s.
 */
@interface EsGobJmulticardConnectionPacePaceConnection : EsGobJmulticardConnectionCwa14890Cwa14890OneV2Connection

#pragma mark Public

/*!
 @brief Conexi&oacute;n PACE para establecimiento de canal seguro por NFC.
 @param connection Conexi &oacute; n base sobre la que crear el nuevo canal.
 @param cryptoHlpr Clase para el cifrado de datos.
 @param secMsg Clase contenedora de las variables para establecer el canal PACE (Kenc, Kmac, Ssc).
 */
- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)connection
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHlpr
               withEsGobJmulticardConnectionPaceSecureMessaging:(EsGobJmulticardConnectionPaceSecureMessaging *)secMsg;

/*!
 @brief Abre el canal seguro con la tarjeta.
 La conexi&oacute;n se reiniciar&aacute; previamente a la apertura del canal.
 */
- (void)open;

- (NSString *)description;

- (EsGobJmulticardApduResponseApdu *)transmitWithEsGobJmulticardApduCommandApdu:(EsGobJmulticardApduCommandApdu *)command;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithEsGobJmulticardCardCwa14890Cwa14890Card:(id<EsGobJmulticardCardCwa14890Cwa14890Card>)arg0
                    withEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)arg1
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)arg2
         withEsGobJmulticardCardCwa14890Cwa14890PublicConstants:(id<EsGobJmulticardCardCwa14890Cwa14890PublicConstants>)arg3
        withEsGobJmulticardCardCwa14890Cwa14890PrivateConstants:(id<EsGobJmulticardCardCwa14890Cwa14890PrivateConstants>)arg4
               withEsGobJmulticardConnectionCwa14890ChannelType:(EsGobJmulticardConnectionCwa14890ChannelType *)arg5 NS_UNAVAILABLE;

- (instancetype)initWithEsGobJmulticardConnectionApduConnection:(id<EsGobJmulticardConnectionApduConnection>)arg0
                                withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)arg1
               withEsGobJmulticardConnectionCwa14890ChannelType:(EsGobJmulticardConnectionCwa14890ChannelType *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(EsGobJmulticardConnectionPacePaceConnection)

FOUNDATION_EXPORT void EsGobJmulticardConnectionPacePaceConnection_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardConnectionPaceSecureMessaging_(EsGobJmulticardConnectionPacePaceConnection *self, id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, EsGobJmulticardConnectionPaceSecureMessaging *secMsg);

FOUNDATION_EXPORT EsGobJmulticardConnectionPacePaceConnection *new_EsGobJmulticardConnectionPacePaceConnection_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardConnectionPaceSecureMessaging_(id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, EsGobJmulticardConnectionPaceSecureMessaging *secMsg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardConnectionPacePaceConnection *create_EsGobJmulticardConnectionPacePaceConnection_initWithEsGobJmulticardConnectionApduConnection_withEsGobJmulticardCryptoHelper_withEsGobJmulticardConnectionPaceSecureMessaging_(id<EsGobJmulticardConnectionApduConnection> connection, EsGobJmulticardCryptoHelper *cryptoHlpr, EsGobJmulticardConnectionPaceSecureMessaging *secMsg);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardConnectionPacePaceConnection)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardConnectionPacePaceConnection")

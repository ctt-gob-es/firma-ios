//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/AbstractApduConnectionIso7816.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "es/gob/jmulticard/HexUtils.h"
#include "es/gob/jmulticard/JmcLogger.h"
#include "es/gob/jmulticard/apdu/CommandApdu.h"
#include "es/gob/jmulticard/apdu/ResponseApdu.h"
#include "es/gob/jmulticard/apdu/StatusWord.h"
#include "es/gob/jmulticard/apdu/iso7816four/GetResponseApduCommand.h"
#include "es/gob/jmulticard/connection/AbstractApduConnectionIso7816.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"

#if !__has_feature(objc_arc)
#error "es/gob/jmulticard/connection/AbstractApduConnectionIso7816 must be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

/*!
 @brief Etiqueta que identifica que es necesario recuperar el
  resultado del comando anterior.
 */
inline jbyte EsGobJmulticardConnectionAbstractApduConnectionIso7816_get_TAG_RESPONSE_PENDING(void);
#define EsGobJmulticardConnectionAbstractApduConnectionIso7816_TAG_RESPONSE_PENDING 97
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardConnectionAbstractApduConnectionIso7816, TAG_RESPONSE_PENDING, jbyte)

/*!
 @brief Etiqueta que identifica que la longitud de respuesta
  indicada no es correcta.
 */
inline jbyte EsGobJmulticardConnectionAbstractApduConnectionIso7816_get_TAG_RESPONSE_INVALID_LENGTH(void);
#define EsGobJmulticardConnectionAbstractApduConnectionIso7816_TAG_RESPONSE_INVALID_LENGTH 108
J2OBJC_STATIC_FIELD_CONSTANT(EsGobJmulticardConnectionAbstractApduConnectionIso7816, TAG_RESPONSE_INVALID_LENGTH, jbyte)

__attribute__((unused)) static EsGobJmulticardApduResponseApdu *EsGobJmulticardConnectionAbstractApduConnectionIso7816_transmitWithEsGobJmulticardApduCommandApdu_(EsGobJmulticardConnectionAbstractApduConnectionIso7816 *self, EsGobJmulticardApduCommandApdu *command);

#line 1 "/Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/AbstractApduConnectionIso7816.java"


#line 14
@implementation EsGobJmulticardConnectionAbstractApduConnectionIso7816

J2OBJC_IGNORE_DESIGNATED_BEGIN

#line 14
- (instancetype)init {
  EsGobJmulticardConnectionAbstractApduConnectionIso7816_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END


#line 28
- (jint)getMaxApduSize {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (EsGobJmulticardApduResponseApdu *)internalTransmitWithByteArray:(IOSByteArray *)apdu {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}


#line 36
- (EsGobJmulticardApduResponseApdu *)transmitWithEsGobJmulticardApduCommandApdu:(EsGobJmulticardApduCommandApdu *)command {
  return EsGobJmulticardConnectionAbstractApduConnectionIso7816_transmitWithEsGobJmulticardApduCommandApdu_(self, command);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LEsGobJmulticardApduResponseApdu;", 0x404, 0, 1, 2, -1, -1, -1 },
    { NULL, "LEsGobJmulticardApduResponseApdu;", 0x11, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getMaxApduSize);
  methods[2].selector = @selector(internalTransmitWithByteArray:);
  methods[3].selector = @selector(transmitWithEsGobJmulticardApduCommandApdu:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TAG_RESPONSE_PENDING", "B", .constantValue.asChar = EsGobJmulticardConnectionAbstractApduConnectionIso7816_TAG_RESPONSE_PENDING, 0x1a, -1, -1, -1, -1 },
    { "TAG_RESPONSE_INVALID_LENGTH", "B", .constantValue.asChar = EsGobJmulticardConnectionAbstractApduConnectionIso7816_TAG_RESPONSE_INVALID_LENGTH, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "internalTransmit", "[B", "LEsGobJmulticardConnectionApduConnectionException;", "transmit", "LEsGobJmulticardApduCommandApdu;" };
  static const J2ObjcClassInfo _EsGobJmulticardConnectionAbstractApduConnectionIso7816 = { "AbstractApduConnectionIso7816", "es.gob.jmulticard.connection", ptrTable, methods, fields, 7, 0x401, 4, 2, -1, -1, -1, -1, -1 };
  return &_EsGobJmulticardConnectionAbstractApduConnectionIso7816;
}

@end


#line 14
void EsGobJmulticardConnectionAbstractApduConnectionIso7816_init(EsGobJmulticardConnectionAbstractApduConnectionIso7816 *self) {
  NSObject_init(self);
}


#line 36
EsGobJmulticardApduResponseApdu *EsGobJmulticardConnectionAbstractApduConnectionIso7816_transmitWithEsGobJmulticardApduCommandApdu_(EsGobJmulticardConnectionAbstractApduConnectionIso7816 *self, EsGobJmulticardApduCommandApdu *command) {
  
#line 38
  if (command == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(
#line 40
    @"No se puede transmitir una APDU nula");
  }
  
#line 44
  IOSByteArray *sendApdu;
  
#line 46
  if (((IOSByteArray *) nil_chk([command getBytes]))->size_ > [self getMaxApduSize]) {
    
#line 48
    EsGobJmulticardJmcLogger_debugWithNSString_withNSString_withNSString_(
#line 49
    [EsGobJmulticardConnectionAbstractApduConnectionIso7816_class_() getName],
#line 50
    @"transmit",
#line 51
    @"La APDU supera el tamano maximo, se envolvera en fragmentos mas pequenos");
    
#line 54
    jint sentLength = 0;
    jint totalLength = ((IOSByteArray *) nil_chk([command getBytes]))->size_;
    jint contentSizeEnvelope = [self getMaxApduSize] - 5;
    
#line 58
    while (totalLength - sentLength > contentSizeEnvelope) {
      IOSByteArray *apduChunk = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(
#line 60
      [command getBytes],
#line 61
      sentLength,
#line 62
      sentLength + contentSizeEnvelope);
      
#line 65
      EsGobJmulticardApduResponseApdu *response = [self internalTransmitWithByteArray:EsGobJmulticardHexUtils_concatenateByteArraysWithByteArray2_([IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 68
        (jbyte) (jint) 0x90,
#line 69
        (jbyte) (jint) 0xC2,
#line 70
        (jbyte) (jint) 0x00,
#line 71
        (jbyte) (jint) 0x00,
#line 72
        (jbyte) ((IOSByteArray *) nil_chk(apduChunk))->size_ } count:5],
#line 74
        apduChunk } count:2 type:IOSClass_byteArray(1)])];
        
#line 77
        if (![((EsGobJmulticardApduResponseApdu *) nil_chk(response)) isOk]) {
          return response;
        }
        sentLength += contentSizeEnvelope;
      }
      
#line 84
      IOSByteArray *apduChunk = JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(
#line 85
      [command getBytes],
#line 86
      sentLength,
#line 87
      totalLength);
      
#line 89
      sendApdu = EsGobJmulticardHexUtils_concatenateByteArraysWithByteArray2_([IOSObjectArray newArrayWithObjects:(id[]){ [IOSByteArray newArrayWithBytes:(jbyte[]){
#line 91
        (jbyte) (jint) 0x90,
#line 92
        (jbyte) (jint) 0xC2,
#line 93
        (jbyte) (jint) 0x00,
#line 94
        (jbyte) (jint) 0x00,
#line 95
        (jbyte) ((IOSByteArray *) nil_chk(apduChunk))->size_ } count:5],
#line 97
        apduChunk } count:2 type:IOSClass_byteArray(1)]);
      }
      else {
        
#line 102
        sendApdu = [command getBytes];
      }
      EsGobJmulticardApduResponseApdu *response = [self internalTransmitWithByteArray:sendApdu];
      
#line 107
      if ([((EsGobJmulticardApduStatusWord *) nil_chk([((EsGobJmulticardApduResponseApdu *) nil_chk(response)) getStatusWord])) getMsb] == EsGobJmulticardConnectionAbstractApduConnectionIso7816_TAG_RESPONSE_PENDING) {
        
#line 109
        if (((IOSByteArray *) nil_chk([response getData]))->size_ > 0) {
          IOSByteArray *data = [response getData];
          IOSByteArray *additionalData = [((EsGobJmulticardApduResponseApdu *) nil_chk(EsGobJmulticardConnectionAbstractApduConnectionIso7816_transmitWithEsGobJmulticardApduCommandApdu_(self, new_EsGobJmulticardApduIso7816fourGetResponseApduCommand_initWithByte_withByte_(
#line 113
          (jbyte) (jint) 0x00, [((EsGobJmulticardApduStatusWord *) nil_chk([response getStatusWord])) getLsb])))) getBytes];
          
#line 117
          IOSByteArray *fullResponse = [IOSByteArray newArrayWithLength:((IOSByteArray *) nil_chk(data))->size_ + ((IOSByteArray *) nil_chk(additionalData))->size_];
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, 0, fullResponse, 0, data->size_);
          JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(additionalData, 0, fullResponse, data->size_, additionalData->size_);
          
#line 121
          return new_EsGobJmulticardApduResponseApdu_initWithByteArray_(fullResponse);
        }
        return EsGobJmulticardConnectionAbstractApduConnectionIso7816_transmitWithEsGobJmulticardApduCommandApdu_(self, new_EsGobJmulticardApduIso7816fourGetResponseApduCommand_initWithByte_withByte_((jbyte) (jint) 0x00, [((EsGobJmulticardApduStatusWord *) nil_chk([response getStatusWord])) getLsb]));
      }
      
#line 129
      if ([((EsGobJmulticardApduStatusWord *) nil_chk([response getStatusWord])) getMsb] == EsGobJmulticardConnectionAbstractApduConnectionIso7816_TAG_RESPONSE_INVALID_LENGTH && [command getCla] == (jbyte) (jint) 0x00) {
        [command setLeWithInt:[((EsGobJmulticardApduStatusWord *) nil_chk([response getStatusWord])) getLsb]];
        return EsGobJmulticardConnectionAbstractApduConnectionIso7816_transmitWithEsGobJmulticardApduCommandApdu_(self, command);
      }
      
#line 134
      return response;
    }

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EsGobJmulticardConnectionAbstractApduConnectionIso7816)

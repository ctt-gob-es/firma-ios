//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/desarrolloabamobile/Downloads/jmulticard-ios/src/main/java/es/gob/jmulticard/connection/ApduEncrypterDes.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_EsGobJmulticardConnectionApduEncrypterDes")
#ifdef RESTRICT_EsGobJmulticardConnectionApduEncrypterDes
#define INCLUDE_ALL_EsGobJmulticardConnectionApduEncrypterDes 0
#else
#define INCLUDE_ALL_EsGobJmulticardConnectionApduEncrypterDes 1
#endif
#undef RESTRICT_EsGobJmulticardConnectionApduEncrypterDes

#if !defined (EsGobJmulticardConnectionApduEncrypterDes_) && (INCLUDE_ALL_EsGobJmulticardConnectionApduEncrypterDes || defined(INCLUDE_EsGobJmulticardConnectionApduEncrypterDes))
#define EsGobJmulticardConnectionApduEncrypterDes_

#define RESTRICT_EsGobJmulticardConnectionAbstractApduEncrypter 1
#define INCLUDE_EsGobJmulticardConnectionAbstractApduEncrypter 1
#include "es/gob/jmulticard/connection/AbstractApduEncrypter.h"

@class EsGobJmulticardApduResponseApdu;
@class EsGobJmulticardCryptoHelper;
@class IOSByteArray;

/*!
 @brief Cifrador de APDU seg&uacute;n CWA-14890 mediante 3DES y MAC de 4 octetos.
 @author Tom&aacute;s Garc&iacute;a-Mer&aacute;s
 @author Carlos Gamuci Mill&aacute;n.
 */
@interface EsGobJmulticardConnectionApduEncrypterDes : EsGobJmulticardConnectionAbstractApduEncrypter

#pragma mark Public

/*!
 @brief Constructor de la clase para operaciones de cifrado cifrado DES.
 */
- (instancetype)init;

/*!
 @brief Desencripta los datos de una APDU de respuesta protegida.
 @param responseApdu APDU de respuesta cifrada.
 @param keyCipher Clave para el descifrado de la respuesta.
 @param ssc C &oacute; digo de secuencia correspondiente a la respuesta.
 @param kMac Clave para la verificaci &oacute; n de la respuesta.
 @param cryptoHelper Manejador para el desencriptado.
 @return APDU con la respuesta descifrada.
 @throw IOExceptionCuando ocurre un error durante la desencriptaci&oacute;n de los datos.
 */
- (EsGobJmulticardApduResponseApdu *)decryptResponseApduWithEsGobJmulticardApduResponseApdu:(EsGobJmulticardApduResponseApdu *)responseApdu
                                                                              withByteArray:(IOSByteArray *)keyCipher
                                                                              withByteArray:(IOSByteArray *)ssc
                                                                              withByteArray:(IOSByteArray *)kMac
                                                            withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper;

#pragma mark Protected

- (IOSByteArray *)encryptDataWithByteArray:(IOSByteArray *)data
                             withByteArray:(IOSByteArray *)key
                             withByteArray:(IOSByteArray *)ssc
           withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper;

/*!
 @brief Aplica el algoritmo para la generaci&oacute;n de la MAC del mensaje.
 @param dataPadded Datos sobre los que generar la MAC.
 @param ssc Contador de secuencia de la operaci &oacute; n.
 @param kMac Clave Triple DES necesaria para la operaci &oacute; n.
 @param cryptoHelper Manejador para la realizaci &oacute; n de las operaciones criptogr &aacute; ficas.
 @return Clave de autenticaci&oacute;n de los datos.
 @throw IOExceptionSi hay errores de entrada / salida.
 */
- (IOSByteArray *)generateMacWithByteArray:(IOSByteArray *)dataPadded
                             withByteArray:(IOSByteArray *)ssc
                             withByteArray:(IOSByteArray *)kMac
           withEsGobJmulticardCryptoHelper:(EsGobJmulticardCryptoHelper *)cryptoHelper;

/*!
 @brief Devuelve la longitud de la MAC de las APDU cifradas.
 @return Longitud de la MAC de las APDU cifradas.
 */
- (jint)getMacLength;

@end

J2OBJC_EMPTY_STATIC_INIT(EsGobJmulticardConnectionApduEncrypterDes)

FOUNDATION_EXPORT void EsGobJmulticardConnectionApduEncrypterDes_init(EsGobJmulticardConnectionApduEncrypterDes *self);

FOUNDATION_EXPORT EsGobJmulticardConnectionApduEncrypterDes *new_EsGobJmulticardConnectionApduEncrypterDes_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT EsGobJmulticardConnectionApduEncrypterDes *create_EsGobJmulticardConnectionApduEncrypterDes_init(void);

J2OBJC_TYPE_LITERAL_HEADER(EsGobJmulticardConnectionApduEncrypterDes)

#endif

#pragma pop_macro("INCLUDE_ALL_EsGobJmulticardConnectionApduEncrypterDes")
